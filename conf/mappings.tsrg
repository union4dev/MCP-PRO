ega com/mojang/blaze3d/Blaze3D
	<init> ()V <init>
	a (Legu;F)V process
	b (Legu;F)V render
	a ()V youJustLostTheGame
	b ()D getTime
egb com/mojang/blaze3d/DontObfuscate
egc com/mojang/blaze3d/FieldsAreNonnullByDefault
egd com/mojang/blaze3d/MethodsReturnNonnullByDefault
ege com/mojang/blaze3d/audio/Channel
	b LOGGER
	c QUEUED_BUFFER_COUNT
	a BUFFER_DURATION_SECONDS
	d source
	e initialized
	f streamingBufferSize
	g stream
	a ()Lege; create
	<init> (I)V <init>
	b ()V destroy
	c ()V play
	k ()I getState
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z playing
	h ()Z stopped
	a (Leei;)V setSelfPosition
	a (F)V setPitch
	a (Z)V setLooping
	b (F)V setVolume
	i ()V disableAttenuation
	c (F)V linearAttenuation
	b (Z)V setRelative
	a (Legj;)V attachStaticBuffer
	a (Lfyu;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (I)V pumpBuffers
	j ()V updateStream
	l ()I removeProcessedBuffers
	b (I)V lambda$pumpBuffers$1
	c (I)V lambda$attachStaticBuffer$0
	<clinit> ()V <clinit>
egf com/mojang/blaze3d/audio/Library
	a LOGGER
	b NO_DEVICE
	c DEFAULT_CHANNEL_COUNT
	d currentDevice
	e context
	f supportsDisconnections
	g defaultDeviceName
	h EMPTY
	i staticChannels
	j streamingChannels
	k listener
	<init> ()V <init>
	a (Ljava/lang/String;Z)V init
	a (Z)V setHrtf
	i ()I getChannelCount
	a ()Ljava/lang/String; getDefaultDeviceName
	b ()Ljava/lang/String; getCurrentDeviceName
	c ()Z hasDefaultDeviceChanged
	a (Ljava/lang/String;)J openDeviceOrFallback
	b (Ljava/lang/String;)Ljava/util/OptionalLong; tryOpenDevice
	d ()V cleanup
	e ()Legg; getListener
	a (Legf$c;)Lege; acquireChannel
	a (Lege;)V releaseChannel
	f ()Ljava/lang/String; getDebugString
	g ()Ljava/util/List; getAvailableSoundDevices
	h ()Z isCurrentDeviceDisconnected
	<clinit> ()V <clinit>
egf$1 com/mojang/blaze3d/audio/Library$1
	<init> ()V <init>
	a ()Lege; acquire
	a (Lege;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
egf$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lege; acquire
	a (Lege;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
egf$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	<init> (I)V <init>
	a ()Lege; acquire
	a (Lege;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
egf$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
	values ()[Legf$c; values
	valueOf (Ljava/lang/String;)Legf$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Legf$c; $values
	<clinit> ()V <clinit>
egg com/mojang/blaze3d/audio/Listener
	a gain
	b position
	<init> ()V <init>
	a (Leei;)V setListenerPosition
	a ()Leei; getListenerPosition
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setListenerOrientation
	a (F)V setGain
	b ()F getGain
	c ()V reset
egh com/mojang/blaze3d/audio/OggAudioStream
	a EXPECTED_MAX_FRAME_SIZE
	b handle
	c audioFormat
	d input
	e buffer
	<init> (Ljava/io/InputStream;)V <init>
	c ()Z refillFromStream
	d ()V forwardBuffer
	a (Legh$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Legh$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Legh$a;)V convertStereo
	close ()V close
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	b ()Ljava/nio/ByteBuffer; readAll
egh$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	<init> (I)V <init>
	b ()V createNewBuffer
	a (F)V put
	a ()Ljava/nio/ByteBuffer; get
egi com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	<init> ()V <init>
	a (I)Ljava/lang/String; alErrorToString
	a (Ljava/lang/String;)Z checkALError
	b (I)Ljava/lang/String; alcErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	<clinit> ()V <clinit>
egj com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	<init> (Ljava/nio/ByteBuffer;Ljavax/sound/sampled/AudioFormat;)V <init>
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
egk com/mojang/blaze3d/audio/package-info
egl com/mojang/blaze3d/font/GlyphInfo
	getAdvance ()F getAdvance
	a (Z)F getAdvance
	a ()F getBoldOffset
	b ()F getShadowOffset
	bake (Ljava/util/function/Function;)Lerr; bake
egl$a com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo
	bake (Ljava/util/function/Function;)Lerr; bake
egm com/mojang/blaze3d/font/GlyphProvider
	close ()V close
	a (I)Legl; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
egn com/mojang/blaze3d/font/SheetGlyphInfo
	a ()I getPixelWidth
	b ()I getPixelHeight
	a (II)V upload
	c ()Z isColored
	d ()F getOversample
	e ()F getLeft
	f ()F getRight
	g ()F getUp
	h ()F getDown
	i ()F getBearingX
	j ()F getBearingY
ego com/mojang/blaze3d/font/SpaceProvider
	a glyphs
	<init> (Ljava/util/Map;)V <init>
	a (I)Legl; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (Ljava/lang/Integer;Ljava/lang/Float;)V lambda$new$1
	a (Ljava/lang/Float;)F lambda$new$0
ego$a com/mojang/blaze3d/font/SpaceProvider$Definition
	c advances
	a CODEC
	<init> (Ljava/util/Map;)V <init>
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ljava/util/Map; advances
	a (Lakx;)Legm; lambda$unpack$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
egp com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a fontMemory
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	<init> (Ljava/nio/ByteBuffer;Lorg/lwjgl/stb/STBTTFontinfo;FFFFLjava/lang/String;)V <init>
	a (I)Legl; getGlyph
	b ()Lorg/lwjgl/stb/STBTTFontinfo; validateFontOpen
	close ()V close
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	b (I)Z lambda$getSupportedGlyphs$1
	a (F)F lambda$getGlyph$0
egp$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
	a this$0
	<init> (Legp;IIIIFFI)V <init>
	getAdvance ()F getAdvance
	bake (Ljava/util/function/Function;)Lerr; bake
egp$a$1 com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph$1
	a this$1
	<init> (Legp$a;)V <init>
	a ()I getPixelWidth
	b ()I getPixelHeight
	d ()F getOversample
	i ()F getBearingX
	j ()F getBearingY
	a (II)V upload
	c ()Z isColored
egq com/mojang/blaze3d/font/package-info
egr com/mojang/blaze3d/package-info
egs com/mojang/blaze3d/pipeline/MainTarget
	a DEFAULT_WIDTH
	b DEFAULT_HEIGHT
	l DEFAULT_DIMENSIONS
	<init> (II)V <init>
	b (II)V createFrameBuffer
	c (II)Legs$b; allocateAttachments
	a (Legs$b;)Z allocateColorAttachment
	b (Legs$b;)Z allocateDepthAttachment
	d (II)V lambda$new$0
	<clinit> ()V <clinit>
egs$a com/mojang/blaze3d/pipeline/MainTarget$AttachmentState
	a NONE
	b COLOR
	c DEPTH
	d COLOR_DEPTH
	e VALUES
	f $VALUES
	values ()[Legs$a; values
	valueOf (Ljava/lang/String;)Legs$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Legs$a;)Legs$a; with
	a ()[Legs$a; $values
	<clinit> ()V <clinit>
egs$b com/mojang/blaze3d/pipeline/MainTarget$Dimension
	a width
	b height
	<init> (II)V <init>
	a (II)Ljava/util/List; listWithFallback
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
egt com/mojang/blaze3d/pipeline/RenderCall
	execute ()V execute
egu com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b isRecording
	c recordingBuffer
	d isProcessing
	e processedBuffer
	f renderingBuffer
	<init> ()V <init>
	a ()Z canBeginRecording
	b ()Z beginRecording
	a (Legt;)V recordRenderCall
	c ()V endRecording
	d ()Z canBeginProcessing
	e ()Z beginProcessing
	f ()V processRecordedQueue
	g ()V endProcessing
	h ()Ljava/util/concurrent/ConcurrentLinkedQueue; startRendering
	i ()Ljava/util/concurrent/ConcurrentLinkedQueue; getRecordingQueue
	j ()Ljava/util/concurrent/ConcurrentLinkedQueue; getProcessedQueue
egv com/mojang/blaze3d/pipeline/RenderTarget
	a RED_CHANNEL
	b GREEN_CHANNEL
	l BLUE_CHANNEL
	m ALPHA_CHANNEL
	c width
	d height
	e viewWidth
	f viewHeight
	g useDepth
	h frameBufferId
	i colorTextureId
	j depthBufferId
	n clearChannels
	k filterMode
	<init> (Z)V <init>
	a (IIZ)V resize
	d (IIZ)V _resize
	a ()V destroyBuffers
	a (Legv;)V copyDepthFrom
	b (IIZ)V createBuffers
	a (I)V setFilterMode
	b ()V checkStatus
	c ()V bindRead
	d ()V unbindRead
	a (Z)V bindWrite
	c (Z)V _bindWrite
	e ()V unbindWrite
	a (FFFF)V setClearColor
	a (II)V blitToScreen
	c (IIZ)V blitToScreen
	e (IIZ)V _blitToScreen
	b (Z)V clear
	f ()I getColorTextureId
	g ()I getDepthTextureId
	f (IIZ)V lambda$blitToScreen$4
	h ()V lambda$unbindWrite$3
	d (Z)V lambda$bindWrite$2
	g (IIZ)V lambda$resize$1
	i ()[F lambda$new$0
egw com/mojang/blaze3d/pipeline/TextureTarget
	<init> (IIZZ)V <init>
egx com/mojang/blaze3d/pipeline/package-info
egy com/mojang/blaze3d/platform/ClipboardManager
	a FORMAT_UNAVAILABLE
	b clipboardScratchBuffer
	<init> ()V <init>
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
	a (JLjava/nio/ByteBuffer;[B)V pushClipboard
	a (JLjava/lang/String;)V setClipboard
egz com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	<init> ()V <init>
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
	a ()Ljava/lang/invoke/MethodHandle; lambda$static$0
	<clinit> ()V <clinit>
eha com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
	<init> (IILjava/util/OptionalInt;Ljava/util/OptionalInt;Z)V <init>
com/mojang/blaze3d/platform/GLX com/mojang/blaze3d/platform/GLX
	LOGGER LOGGER
	cpuInfo cpuInfo
	<init> ()V <init>
	getOpenGLVersionString ()Ljava/lang/String; getOpenGLVersionString
	_getRefreshRate (Lehn;)I _getRefreshRate
	_getLWJGLVersion ()Ljava/lang/String; _getLWJGLVersion
	_initGlfw ()Ljava/util/function/LongSupplier; _initGlfw
	_setGlfwErrorCallback (Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V _setGlfwErrorCallback
	_shouldClose (Lehn;)Z _shouldClose
	_init (IZ)V _init
	_getCpuInfo ()Ljava/lang/String; _getCpuInfo
	_renderCrosshair (IZZZ)V _renderCrosshair
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	lambda$_initGlfw$2 ()J lambda$_initGlfw$2
	lambda$_initGlfw$1 (Ljava/util/List;IJ)V lambda$_initGlfw$1
	lambda$_initGlfw$0 (Ljava/lang/Integer;Ljava/lang/String;)V lambda$_initGlfw$0
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/GlConst com/mojang/blaze3d/platform/GlConst
	GL_READ_FRAMEBUFFER GL_READ_FRAMEBUFFER
	GL_DRAW_FRAMEBUFFER GL_DRAW_FRAMEBUFFER
	GL_TRUE GL_TRUE
	GL_FALSE GL_FALSE
	GL_NONE GL_NONE
	GL_LINES GL_LINES
	GL_LINE_STRIP GL_LINE_STRIP
	GL_TRIANGLE_STRIP GL_TRIANGLE_STRIP
	GL_TRIANGLE_FAN GL_TRIANGLE_FAN
	GL_TRIANGLES GL_TRIANGLES
	GL_WRITE_ONLY GL_WRITE_ONLY
	GL_EQUAL GL_EQUAL
	GL_LEQUAL GL_LEQUAL
	GL_GREATER GL_GREATER
	GL_GEQUAL GL_GEQUAL
	GL_ALWAYS GL_ALWAYS
	GL_TEXTURE_MAG_FILTER GL_TEXTURE_MAG_FILTER
	GL_TEXTURE_MIN_FILTER GL_TEXTURE_MIN_FILTER
	GL_TEXTURE_WRAP_S GL_TEXTURE_WRAP_S
	GL_TEXTURE_WRAP_T GL_TEXTURE_WRAP_T
	GL_NEAREST GL_NEAREST
	GL_LINEAR GL_LINEAR
	GL_NEAREST_MIPMAP_LINEAR GL_NEAREST_MIPMAP_LINEAR
	GL_LINEAR_MIPMAP_LINEAR GL_LINEAR_MIPMAP_LINEAR
	GL_CLAMP_TO_EDGE GL_CLAMP_TO_EDGE
	GL_FRONT GL_FRONT
	GL_FRONT_AND_BACK GL_FRONT_AND_BACK
	GL_LINE GL_LINE
	GL_FILL GL_FILL
	GL_BYTE GL_BYTE
	GL_UNSIGNED_BYTE GL_UNSIGNED_BYTE
	GL_SHORT GL_SHORT
	GL_UNSIGNED_SHORT GL_UNSIGNED_SHORT
	GL_INT GL_INT
	GL_UNSIGNED_INT GL_UNSIGNED_INT
	GL_FLOAT GL_FLOAT
	GL_ZERO GL_ZERO
	GL_ONE GL_ONE
	GL_SRC_COLOR GL_SRC_COLOR
	GL_ONE_MINUS_SRC_COLOR GL_ONE_MINUS_SRC_COLOR
	GL_SRC_ALPHA GL_SRC_ALPHA
	GL_ONE_MINUS_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA
	GL_DST_ALPHA GL_DST_ALPHA
	GL_ONE_MINUS_DST_ALPHA GL_ONE_MINUS_DST_ALPHA
	GL_DST_COLOR GL_DST_COLOR
	GL_ONE_MINUS_DST_COLOR GL_ONE_MINUS_DST_COLOR
	GL_REPLACE GL_REPLACE
	GL_DEPTH_BUFFER_BIT GL_DEPTH_BUFFER_BIT
	GL_COLOR_BUFFER_BIT GL_COLOR_BUFFER_BIT
	GL_RGBA8 GL_RGBA8
	GL_PROXY_TEXTURE_2D GL_PROXY_TEXTURE_2D
	GL_RGBA GL_RGBA
	GL_TEXTURE_WIDTH GL_TEXTURE_WIDTH
	GL_BGR GL_BGR
	GL_FUNC_ADD GL_FUNC_ADD
	GL_MIN GL_MIN
	GL_MAX GL_MAX
	GL_FUNC_SUBTRACT GL_FUNC_SUBTRACT
	GL_FUNC_REVERSE_SUBTRACT GL_FUNC_REVERSE_SUBTRACT
	GL_DEPTH_COMPONENT24 GL_DEPTH_COMPONENT24
	GL_STATIC_DRAW GL_STATIC_DRAW
	GL_DYNAMIC_DRAW GL_DYNAMIC_DRAW
	GL_UNPACK_SWAP_BYTES GL_UNPACK_SWAP_BYTES
	GL_UNPACK_LSB_FIRST GL_UNPACK_LSB_FIRST
	GL_UNPACK_ROW_LENGTH GL_UNPACK_ROW_LENGTH
	GL_UNPACK_SKIP_ROWS GL_UNPACK_SKIP_ROWS
	GL_UNPACK_SKIP_PIXELS GL_UNPACK_SKIP_PIXELS
	GL_UNPACK_ALIGNMENT GL_UNPACK_ALIGNMENT
	GL_PACK_ALIGNMENT GL_PACK_ALIGNMENT
	GL_MAX_TEXTURE_SIZE GL_MAX_TEXTURE_SIZE
	GL_TEXTURE_2D GL_TEXTURE_2D
	GL_DEPTH_COMPONENT GL_DEPTH_COMPONENT
	GL_DEPTH_COMPONENT32 GL_DEPTH_COMPONENT32
	GL_FRAMEBUFFER GL_FRAMEBUFFER
	GL_RENDERBUFFER GL_RENDERBUFFER
	GL_COLOR_ATTACHMENT0 GL_COLOR_ATTACHMENT0
	GL_DEPTH_ATTACHMENT GL_DEPTH_ATTACHMENT
	GL_FRAMEBUFFER_COMPLETE GL_FRAMEBUFFER_COMPLETE
	GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
	GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
	GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
	GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
	GL_FRAMEBUFFER_UNSUPPORTED GL_FRAMEBUFFER_UNSUPPORTED
	GL_LINK_STATUS GL_LINK_STATUS
	GL_COMPILE_STATUS GL_COMPILE_STATUS
	GL_VERTEX_SHADER GL_VERTEX_SHADER
	GL_FRAGMENT_SHADER GL_FRAGMENT_SHADER
	GL_TEXTURE0 GL_TEXTURE0
	GL_TEXTURE1 GL_TEXTURE1
	GL_TEXTURE2 GL_TEXTURE2
	GL_DEPTH_TEXTURE_MODE GL_DEPTH_TEXTURE_MODE
	GL_TEXTURE_COMPARE_MODE GL_TEXTURE_COMPARE_MODE
	GL_ARRAY_BUFFER GL_ARRAY_BUFFER
	GL_ELEMENT_ARRAY_BUFFER GL_ELEMENT_ARRAY_BUFFER
	GL_ALPHA_BIAS GL_ALPHA_BIAS
	GL_RGB GL_RGB
	GL_RG GL_RG
	GL_RED GL_RED
	GL_OUT_OF_MEMORY GL_OUT_OF_MEMORY
	<init> ()V <init>
ehb com/mojang/blaze3d/platform/GlDebug
	a LOGGER
	b CIRCULAR_LOG_SIZE
	c MESSAGE_BUFFER
	d lastEntry
	e DEBUG_LEVELS
	f DEBUG_LEVELS_ARB
	g debugEnabled
	<init> ()V <init>
	d (I)Ljava/lang/String; printUnknownToken
	a (I)Ljava/lang/String; sourceToString
	b (I)Ljava/lang/String; typeToString
	c (I)Ljava/lang/String; severityToString
	a (IIIIIJJ)V printDebugLog
	a ()Ljava/util/List; getLastOpenGlDebugMessages
	b ()Z isDebugEnabled
	a (IZ)V enableDebugCallback
	<clinit> ()V <clinit>
ehb$a com/mojang/blaze3d/platform/GlDebug$LogEntry
	a id
	b source
	c type
	d severity
	e message
	f count
	<init> (IIIILjava/lang/String;)V <init>
	a (IIIILjava/lang/String;)Z isSame
	toString ()Ljava/lang/String; toString
com/mojang/blaze3d/platform/GlStateManager com/mojang/blaze3d/platform/GlStateManager
	ON_LINUX ON_LINUX
	TEXTURE_COUNT TEXTURE_COUNT
	BLEND BLEND
	DEPTH DEPTH
	CULL CULL
	POLY_OFFSET POLY_OFFSET
	COLOR_LOGIC COLOR_LOGIC
	STENCIL STENCIL
	SCISSOR SCISSOR
	activeTexture activeTexture
	TEXTURES TEXTURES
	COLOR_MASK COLOR_MASK
	<init> ()V <init>
	_disableScissorTest ()V _disableScissorTest
	_enableScissorTest ()V _enableScissorTest
	_scissorBox (IIII)V _scissorBox
	_disableDepthTest ()V _disableDepthTest
	_enableDepthTest ()V _enableDepthTest
	_depthFunc (I)V _depthFunc
	_depthMask (Z)V _depthMask
	_disableBlend ()V _disableBlend
	_enableBlend ()V _enableBlend
	_blendFunc (II)V _blendFunc
	_blendFuncSeparate (IIII)V _blendFuncSeparate
	_blendEquation (I)V _blendEquation
	glGetProgrami (II)I glGetProgrami
	glAttachShader (II)V glAttachShader
	glDeleteShader (I)V glDeleteShader
	glCreateShader (I)I glCreateShader
	glShaderSource (ILjava/util/List;)V glShaderSource
	glCompileShader (I)V glCompileShader
	glGetShaderi (II)I glGetShaderi
	_glUseProgram (I)V _glUseProgram
	glCreateProgram ()I glCreateProgram
	glDeleteProgram (I)V glDeleteProgram
	glLinkProgram (I)V glLinkProgram
	_glGetUniformLocation (ILjava/lang/CharSequence;)I _glGetUniformLocation
	_glUniform1 (ILjava/nio/IntBuffer;)V _glUniform1
	_glUniform1i (II)V _glUniform1i
	_glUniform1 (ILjava/nio/FloatBuffer;)V _glUniform1
	_glUniform2 (ILjava/nio/IntBuffer;)V _glUniform2
	_glUniform2 (ILjava/nio/FloatBuffer;)V _glUniform2
	_glUniform3 (ILjava/nio/IntBuffer;)V _glUniform3
	_glUniform3 (ILjava/nio/FloatBuffer;)V _glUniform3
	_glUniform4 (ILjava/nio/IntBuffer;)V _glUniform4
	_glUniform4 (ILjava/nio/FloatBuffer;)V _glUniform4
	_glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V _glUniformMatrix2
	_glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V _glUniformMatrix3
	_glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V _glUniformMatrix4
	_glGetAttribLocation (ILjava/lang/CharSequence;)I _glGetAttribLocation
	_glBindAttribLocation (IILjava/lang/CharSequence;)V _glBindAttribLocation
	_glGenBuffers ()I _glGenBuffers
	_glGenVertexArrays ()I _glGenVertexArrays
	_glBindBuffer (II)V _glBindBuffer
	_glBindVertexArray (I)V _glBindVertexArray
	_glBufferData (ILjava/nio/ByteBuffer;I)V _glBufferData
	_glBufferData (IJI)V _glBufferData
	_glMapBuffer (II)Ljava/nio/ByteBuffer; _glMapBuffer
	_glUnmapBuffer (I)V _glUnmapBuffer
	_glDeleteBuffers (I)V _glDeleteBuffers
	_glCopyTexSubImage2D (IIIIIIII)V _glCopyTexSubImage2D
	_glDeleteVertexArrays (I)V _glDeleteVertexArrays
	_glBindFramebuffer (II)V _glBindFramebuffer
	_glBlitFrameBuffer (IIIIIIIIII)V _glBlitFrameBuffer
	_glBindRenderbuffer (II)V _glBindRenderbuffer
	_glDeleteRenderbuffers (I)V _glDeleteRenderbuffers
	_glDeleteFramebuffers (I)V _glDeleteFramebuffers
	glGenFramebuffers ()I glGenFramebuffers
	glGenRenderbuffers ()I glGenRenderbuffers
	_glRenderbufferStorage (IIII)V _glRenderbufferStorage
	_glFramebufferRenderbuffer (IIII)V _glFramebufferRenderbuffer
	glCheckFramebufferStatus (I)I glCheckFramebufferStatus
	_glFramebufferTexture2D (IIIII)V _glFramebufferTexture2D
	getBoundFramebuffer ()I getBoundFramebuffer
	glActiveTexture (I)V glActiveTexture
	glBlendFuncSeparate (IIII)V glBlendFuncSeparate
	glGetShaderInfoLog (II)Ljava/lang/String; glGetShaderInfoLog
	glGetProgramInfoLog (II)Ljava/lang/String; glGetProgramInfoLog
	setupLevelDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;)V setupLevelDiffuseLighting
	setupGuiFlatDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setupGuiFlatDiffuseLighting
	setupGui3DDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setupGui3DDiffuseLighting
	_enableCull ()V _enableCull
	_disableCull ()V _disableCull
	_polygonMode (II)V _polygonMode
	_enablePolygonOffset ()V _enablePolygonOffset
	_disablePolygonOffset ()V _disablePolygonOffset
	_polygonOffset (FF)V _polygonOffset
	_enableColorLogicOp ()V _enableColorLogicOp
	_disableColorLogicOp ()V _disableColorLogicOp
	_logicOp (I)V _logicOp
	_activeTexture (I)V _activeTexture
	_texParameter (IIF)V _texParameter
	_texParameter (III)V _texParameter
	_getTexLevelParameter (III)I _getTexLevelParameter
	_genTexture ()I _genTexture
	_genTextures ([I)V _genTextures
	_deleteTexture (I)V _deleteTexture
	_deleteTextures ([I)V _deleteTextures
	_bindTexture (I)V _bindTexture
	_getActiveTexture ()I _getActiveTexture
	_texImage2D (IIIIIIIILjava/nio/IntBuffer;)V _texImage2D
	_texSubImage2D (IIIIIIIIJ)V _texSubImage2D
	upload (IIIIILehk$a;Ljava/nio/IntBuffer;Ljava/util/function/Consumer;)V upload
	_upload (IIIIILehk$a;Ljava/nio/IntBuffer;Ljava/util/function/Consumer;)V _upload
	_getTexImage (IIIIJ)V _getTexImage
	_viewport (IIII)V _viewport
	_colorMask (ZZZZ)V _colorMask
	_stencilFunc (III)V _stencilFunc
	_stencilMask (I)V _stencilMask
	_stencilOp (III)V _stencilOp
	_clearDepth (D)V _clearDepth
	_clearColor (FFFF)V _clearColor
	_clearStencil (I)V _clearStencil
	_clear (IZ)V _clear
	_glDrawPixels (IIIIJ)V _glDrawPixels
	_vertexAttribPointer (IIIZIJ)V _vertexAttribPointer
	_vertexAttribIPointer (IIIIJ)V _vertexAttribIPointer
	_enableVertexAttribArray (I)V _enableVertexAttribArray
	_disableVertexAttribArray (I)V _disableVertexAttribArray
	_drawElements (IIIJ)V _drawElements
	_pixelStore (II)V _pixelStore
	_readPixels (IIIIIILjava/nio/ByteBuffer;)V _readPixels
	_readPixels (IIIIIIJ)V _readPixels
	_getError ()I _getError
	_getString (I)Ljava/lang/String; _getString
	_getInteger (I)I _getInteger
	lambda$upload$2 (IIIIILehk$a;Ljava/nio/IntBuffer;Ljava/util/function/Consumer;)V lambda$upload$2
	lambda$static$1 (I)[Lcom/mojang/blaze3d/platform/GlStateManager$l; lambda$static$1
	lambda$static$0 (I)Lcom/mojang/blaze3d/platform/GlStateManager$l; lambda$static$0
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/GlStateManager$a com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$b com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	<init> (I)V <init>
	a ()V disable
	b ()V enable
	a (Z)V setEnabled
com/mojang/blaze3d/platform/GlStateManager$c com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$d com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$e com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$f com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$DestFactor com/mojang/blaze3d/platform/GlStateManager$DestFactor
	CONSTANT_ALPHA CONSTANT_ALPHA
	CONSTANT_COLOR CONSTANT_COLOR
	DST_ALPHA DST_ALPHA
	DST_COLOR DST_COLOR
	ONE ONE
	ONE_MINUS_CONSTANT_ALPHA ONE_MINUS_CONSTANT_ALPHA
	ONE_MINUS_CONSTANT_COLOR ONE_MINUS_CONSTANT_COLOR
	ONE_MINUS_DST_ALPHA ONE_MINUS_DST_ALPHA
	ONE_MINUS_DST_COLOR ONE_MINUS_DST_COLOR
	ONE_MINUS_SRC_ALPHA ONE_MINUS_SRC_ALPHA
	ONE_MINUS_SRC_COLOR ONE_MINUS_SRC_COLOR
	SRC_ALPHA SRC_ALPHA
	SRC_COLOR SRC_COLOR
	ZERO ZERO
	value value
	$VALUES $VALUES
	values ()[Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor; values
	valueOf (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor; valueOf
	<init> (Ljava/lang/String;II)V <init>
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor; $values
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/GlStateManager$g com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
	values ()[Lcom/mojang/blaze3d/platform/GlStateManager$g; values
	valueOf (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/GlStateManager$g; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()[Lcom/mojang/blaze3d/platform/GlStateManager$g; $values
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/GlStateManager$h com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$i com/mojang/blaze3d/platform/GlStateManager$ScissorState
	a mode
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$SourceFactor com/mojang/blaze3d/platform/GlStateManager$SourceFactor
	CONSTANT_ALPHA CONSTANT_ALPHA
	CONSTANT_COLOR CONSTANT_COLOR
	DST_ALPHA DST_ALPHA
	DST_COLOR DST_COLOR
	ONE ONE
	ONE_MINUS_CONSTANT_ALPHA ONE_MINUS_CONSTANT_ALPHA
	ONE_MINUS_CONSTANT_COLOR ONE_MINUS_CONSTANT_COLOR
	ONE_MINUS_DST_ALPHA ONE_MINUS_DST_ALPHA
	ONE_MINUS_DST_COLOR ONE_MINUS_DST_COLOR
	ONE_MINUS_SRC_ALPHA ONE_MINUS_SRC_ALPHA
	ONE_MINUS_SRC_COLOR ONE_MINUS_SRC_COLOR
	SRC_ALPHA SRC_ALPHA
	SRC_ALPHA_SATURATE SRC_ALPHA_SATURATE
	SRC_COLOR SRC_COLOR
	ZERO ZERO
	value value
	$VALUES $VALUES
	values ()[Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor; values
	valueOf (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor; valueOf
	<init> (Ljava/lang/String;II)V <init>
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor; $values
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/GlStateManager$j com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$k com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$l com/mojang/blaze3d/platform/GlStateManager$TextureState
	a binding
	<init> ()V <init>
com/mojang/blaze3d/platform/GlStateManager$m com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
	values ()[Lcom/mojang/blaze3d/platform/GlStateManager$m; values
	valueOf (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/GlStateManager$m; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()I x
	b ()I y
	c ()I width
	d ()I height
	e ()[Lcom/mojang/blaze3d/platform/GlStateManager$m; $values
	<clinit> ()V <clinit>
ehc com/mojang/blaze3d/platform/GlUtil
	<init> ()V <init>
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Ljava/nio/Buffer;)V freeMemory
	a ()Ljava/lang/String; getVendor
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
ehd com/mojang/blaze3d/platform/IconSet
	a RELEASE
	b SNAPSHOT
	c path
	d $VALUES
	values ()[Lehd; values
	valueOf (Ljava/lang/String;)Lehd; valueOf
	<init> (Ljava/lang/String;I[Ljava/lang/String;)V <init>
	a (Lajl;)Ljava/util/List; getStandardIcons
	b (Lajl;)Lakp; getMacIcon
	a (Lajl;Ljava/lang/String;)Lakp; getFile
	a ()[Lehd; $values
	<clinit> ()V <clinit>
ehe com/mojang/blaze3d/platform/InputConstants
	bw GLFW_RAW_MOUSE_MOTION_SUPPORTED
	bx GLFW_RAW_MOUSE_MOTION
	a KEY_0
	b KEY_1
	c KEY_2
	d KEY_3
	e KEY_4
	f KEY_5
	g KEY_6
	h KEY_7
	i KEY_8
	j KEY_9
	k KEY_A
	l KEY_B
	m KEY_C
	n KEY_D
	o KEY_E
	p KEY_F
	q KEY_G
	r KEY_H
	s KEY_I
	t KEY_J
	u KEY_K
	v KEY_L
	w KEY_M
	x KEY_N
	y KEY_O
	z KEY_P
	A KEY_Q
	B KEY_R
	C KEY_S
	D KEY_T
	E KEY_U
	F KEY_V
	G KEY_W
	H KEY_X
	I KEY_Y
	J KEY_Z
	K KEY_F1
	L KEY_F2
	M KEY_F3
	N KEY_F4
	O KEY_F5
	P KEY_F6
	Q KEY_F7
	R KEY_F8
	S KEY_F9
	T KEY_F10
	U KEY_F11
	V KEY_F12
	W KEY_F13
	X KEY_F14
	Y KEY_F15
	Z KEY_F16
	aa KEY_F17
	ab KEY_F18
	ac KEY_F19
	ad KEY_F20
	ae KEY_F21
	af KEY_F22
	ag KEY_F23
	ah KEY_F24
	ai KEY_F25
	aj KEY_NUMLOCK
	ak KEY_NUMPAD0
	al KEY_NUMPAD1
	am KEY_NUMPAD2
	an KEY_NUMPAD3
	ao KEY_NUMPAD4
	ap KEY_NUMPAD5
	aq KEY_NUMPAD6
	ar KEY_NUMPAD7
	as KEY_NUMPAD8
	at KEY_NUMPAD9
	au KEY_NUMPADCOMMA
	av KEY_NUMPADENTER
	aw KEY_NUMPADEQUALS
	ax KEY_DOWN
	ay KEY_LEFT
	az KEY_RIGHT
	aA KEY_UP
	aB KEY_ADD
	aC KEY_APOSTROPHE
	aD KEY_BACKSLASH
	aE KEY_COMMA
	aF KEY_EQUALS
	aG KEY_GRAVE
	aH KEY_LBRACKET
	aI KEY_MINUS
	aJ KEY_MULTIPLY
	aK KEY_PERIOD
	aL KEY_RBRACKET
	aM KEY_SEMICOLON
	aN KEY_SLASH
	aO KEY_SPACE
	aP KEY_TAB
	aQ KEY_LALT
	aR KEY_LCONTROL
	aS KEY_LSHIFT
	aT KEY_LWIN
	aU KEY_RALT
	aV KEY_RCONTROL
	aW KEY_RSHIFT
	aX KEY_RWIN
	aY KEY_RETURN
	aZ KEY_ESCAPE
	ba KEY_BACKSPACE
	bb KEY_DELETE
	bc KEY_END
	bd KEY_HOME
	be KEY_INSERT
	bf KEY_PAGEDOWN
	bg KEY_PAGEUP
	bh KEY_CAPSLOCK
	bi KEY_PAUSE
	bj KEY_SCROLLLOCK
	bk KEY_PRINTSCREEN
	bl PRESS
	bm RELEASE
	bn REPEAT
	bo MOUSE_BUTTON_LEFT
	bp MOUSE_BUTTON_MIDDLE
	bq MOUSE_BUTTON_RIGHT
	br MOD_CONTROL
	bs CURSOR
	bt CURSOR_DISABLED
	bu CURSOR_NORMAL
	bv UNKNOWN
	<init> ()V <init>
	a (II)Lehe$a; getKey
	a (Ljava/lang/String;)Lehe$a; getKey
	a (JI)Z isKeyDown
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V setupMouseCallbacks
	a (JIDD)V grabOrReleaseMouse
	a ()Z isRawMouseInputSupported
	a (JZ)V updateRawMouseInput
	<clinit> ()V <clinit>
ehe$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d displayName
	e NAME_MAP
	<init> (Ljava/lang/String;Lehe$b;I)V <init>
	a ()Lehe$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Lsw; getDisplayName
	e ()Ljava/util/OptionalInt; getNumericKeyValue
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lehe$b;ILjava/lang/String;)Lsw; lambda$new$0
	<clinit> ()V <clinit>
ehe$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d KEY_KEYBOARD_UNKNOWN
	e map
	f defaultPrefix
	g displayTextSupplier
	h $VALUES
	values ()[Lehe$b; values
	valueOf (Ljava/lang/String;)Lehe$b; valueOf
	a (Lehe$b;Ljava/lang/String;I)V addKey
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V <init>
	a (I)Lehe$a; getOrCreate
	b (I)Lehe$a; lambda$getOrCreate$3
	a (Ljava/lang/Integer;Ljava/lang/String;)Lsw; lambda$static$2
	b (Ljava/lang/Integer;Ljava/lang/String;)Lsw; lambda$static$1
	c (Ljava/lang/Integer;Ljava/lang/String;)Lsw; lambda$static$0
	a ()[Lehe$b; $values
	<clinit> ()V <clinit>
ehf com/mojang/blaze3d/platform/Lighting
	a DIFFUSE_LIGHT_0
	b DIFFUSE_LIGHT_1
	c NETHER_DIFFUSE_LIGHT_0
	d NETHER_DIFFUSE_LIGHT_1
	e INVENTORY_DIFFUSE_LIGHT_0
	f INVENTORY_DIFFUSE_LIGHT_1
	<init> ()V <init>
	a (Lorg/joml/Matrix4f;)V setupNetherLevel
	b (Lorg/joml/Matrix4f;)V setupLevel
	a ()V setupForFlatItems
	b ()V setupFor3DItems
	c ()V setupForEntityInInventory
	<clinit> ()V <clinit>
ehg com/mojang/blaze3d/platform/MacosUtil
	a NS_FULL_SCREEN_WINDOW_MASK
	<init> ()V <init>
	a (J)V toggleFullscreen
	b (J)Ljava/util/Optional; getNsWindow
	a (Lca/weblite/objc/NSObject;)Z isInKioskMode
	b (Lca/weblite/objc/NSObject;)V toggleFullscreen
	a (Lakp;)V loadIcon
ehh com/mojang/blaze3d/platform/MemoryTracker
	a ALLOCATOR
	<init> ()V <init>
	a (I)Ljava/nio/ByteBuffer; create
	a (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; resize
	<clinit> ()V <clinit>
ehi com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	<init> (J)V <init>
	a ()V refreshVideoModes
	a (Ljava/util/Optional;)Lehm; getPreferredVidMode
	a (Lehm;)I getVideoModeIndex
	b ()Lehm; getCurrentMode
	c ()I getX
	d ()I getY
	a (I)Lehm; getMode
	e ()I getModeCount
	f ()J getMonitor
	toString ()Ljava/lang/String; toString
ehj com/mojang/blaze3d/platform/MonitorCreator
	createMonitor (J)Lehi; createMonitor
ehk com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	<init> (IIZ)V <init>
	<init> (Lehk$a;IIZ)V <init>
	<init> (Lehk$a;IIZJ)V <init>
	toString ()Ljava/lang/String; toString
	f (II)Z isOutsideBounds
	a (Ljava/io/InputStream;)Lehk; read
	a (Lehk$a;Ljava/io/InputStream;)Lehk; read
	a (Ljava/nio/ByteBuffer;)Lehk; read
	a ([B)Lehk; read
	a (Lehk$a;Ljava/nio/ByteBuffer;)Lehk; read
	a (ZZ)V setFilter
	j ()V checkAllocated
	close ()V close
	a ()I getWidth
	b ()I getHeight
	c ()Lehk$a; format
	a (II)I getPixelRGBA
	a (III)V setPixelRGBA
	a (Ljava/util/function/IntUnaryOperator;)Lehk; mappedCopy
	b (Ljava/util/function/IntUnaryOperator;)V applyToAllPixels
	d ()[I getPixelsRGBA
	a (IIB)V setPixelLuminance
	b (II)B getRedOrLuminance
	c (II)B getGreenOrLuminance
	d (II)B getBlueOrLuminance
	e (II)B getLuminanceOrAlpha
	b (III)V blendPixel
	e ()[I makePixelArray
	a (IIIZ)V upload
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	b (IIIIIIIZZZZ)V _upload
	a (IZ)V downloadTexture
	a (F)V downloadDepthBuffer
	f ()V drawPixels
	a (Ljava/io/File;)V writeToFile
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (Ljava/nio/file/Path;)V writeToFile
	g ()[B asByteArray
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Lehk;)V copyFrom
	a (IIIII)V fillRect
	a (IIIIIIZZ)V copyRect
	a (Lehk;IIIIIIZZ)V copyRect
	h ()V flipY
	a (IIIILehk;)V resizeSubRectTo
	i ()V untrack
	c (IIIIIIIZZZZ)V lambda$upload$0
	<clinit> ()V <clinit>
ehk$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	values ()[Lehk$a; values
	valueOf (Ljava/lang/String;)Lehk$a; valueOf
	<init> (Ljava/lang/String;IIIZZZZZIIIIIZ)V <init>
	a ()I components
	b ()V setPackPixelStoreState
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasRed
	f ()Z hasGreen
	g ()Z hasBlue
	h ()Z hasLuminance
	i ()Z hasAlpha
	j ()I redOffset
	k ()I greenOffset
	l ()I blueOffset
	m ()I luminanceOffset
	n ()I alphaOffset
	o ()Z hasLuminanceOrRed
	p ()Z hasLuminanceOrGreen
	q ()Z hasLuminanceOrBlue
	r ()Z hasLuminanceOrAlpha
	s ()I luminanceOrRedOffset
	t ()I luminanceOrGreenOffset
	u ()I luminanceOrBlueOffset
	v ()I luminanceOrAlphaOffset
	w ()Z supportedByStb
	a (I)Lehk$a; getStbFormat
	x ()[Lehk$a; $values
	<clinit> ()V <clinit>
ehk$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c RG
	d RED
	e glFormat
	f $VALUES
	values ()[Lehk$b; values
	valueOf (Ljava/lang/String;)Lehk$b; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I glFormat
	b ()[Lehk$b; $values
	<clinit> ()V <clinit>
ehk$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	<init> (Ljava/nio/channels/WritableByteChannel;)V <init>
	invoke (JJI)V invoke
	a ()V throwIfException
ehl com/mojang/blaze3d/platform/ScreenManager
	a LOGGER
	b monitors
	c monitorCreator
	<init> (Lehj;)V <init>
	a (JI)V onMonitorChange
	a (J)Lehi; getMonitor
	a (Lehn;)Lehi; findBestMonitor
	a (III)I clamp
	a ()V shutdown
	<clinit> ()V <clinit>
com/mojang/blaze3d/platform/TextureUtil com/mojang/blaze3d/platform/TextureUtil
	LOGGER LOGGER
	MIN_MIPMAP_LEVEL MIN_MIPMAP_LEVEL
	DEFAULT_IMAGE_BUFFER_SIZE DEFAULT_IMAGE_BUFFER_SIZE
	<init> ()V <init>
	generateTextureId ()I generateTextureId
	releaseTextureId (I)V releaseTextureId
	prepareImage (III)V prepareImage
	prepareImage (Lehk$b;III)V prepareImage
	prepareImage (IIII)V prepareImage
	prepareImage (Lehk$b;IIII)V prepareImage
	bind (I)V bind
	readResource (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; readResource
	readResource (Ljava/nio/channels/ReadableByteChannel;I)Ljava/nio/ByteBuffer; readResource
	writeAsPNG (Ljava/nio/file/Path;Ljava/lang/String;IIII)V writeAsPNG
	writeAsPNG (Ljava/nio/file/Path;Ljava/lang/String;IIIILjava/util/function/IntUnaryOperator;)V writeAsPNG
	getDebugTexturePath (Ljava/nio/file/Path;)Ljava/nio/file/Path; getDebugTexturePath
	getDebugTexturePath ()Ljava/nio/file/Path; getDebugTexturePath
	<clinit> ()V <clinit>
ehm com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	<init> (IIIIII)V <init>
	<init> (Lorg/lwjgl/glfw/GLFWVidMode$Buffer;)V <init>
	<init> (Lorg/lwjgl/glfw/GLFWVidMode;)V <init>
	a ()I getWidth
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Ljava/util/Optional; read
	g ()Ljava/lang/String; write
	<clinit> ()V <clinit>
ehn com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	<init> (Leho;Lehl;Leha;Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()I getRefreshRate
	b ()Z shouldClose
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Lajl;Lehd;)V setIcon
	a (Ljava/lang/String;)V setErrorSection
	u ()V setBootErrorCallback
	b (IJ)V bootCrash
	a (IJ)V defaultErrorCallback
	c ()V setDefaultErrorCallback
	a (Z)V updateVsync
	close ()V close
	a (JII)V onMove
	b (JII)V onFramebufferResize
	v ()V refreshFramebufferSize
	c (JII)V onResize
	a (JZ)V onFocus
	b (JZ)V onEnter
	a (I)V setFramerateLimit
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	w ()V setMode
	h ()V toggleFullScreen
	a (II)V setWindowed
	c (Z)V updateFullscreen
	a (IZ)I calculateScale
	a (D)V setGuiScale
	b (Ljava/lang/String;)V setTitle
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	b (I)V setWidth
	c (I)V setHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Lehi; findBestMonitor
	b (Z)V updateRawMouseInput
	<clinit> ()V <clinit>
ehn$a com/mojang/blaze3d/platform/Window$WindowInitFailed
	<init> (Ljava/lang/String;)V <init>
eho com/mojang/blaze3d/platform/WindowEventHandler
	a (Z)V setWindowActive
	a ()V resizeDisplay
	b ()V cursorEntered
ehp com/mojang/blaze3d/platform/package-info
ehq com/mojang/blaze3d/preprocessor/GlslPreprocessor
	a C_COMMENT
	b LINE_COMMENT
	c REGEX_MOJ_IMPORT
	d REGEX_VERSION
	e REGEX_ENDS_WITH_WHITESPACE
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/util/List; process
	a (Ljava/lang/String;Lehq$a;Ljava/lang/String;)Ljava/util/List; processImports
	a (Ljava/lang/String;Lehq$a;)Ljava/lang/String; processVersions
	a (Ljava/lang/String;I)Ljava/lang/String; setVersion
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Z isDirectiveEnabled
	a (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z isDirectiveDisabled
	a (ZLjava/lang/String;)Ljava/lang/String; applyImport
	<clinit> ()V <clinit>
ehq$a com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context
	a glslVersion
	b sourceId
	<init> ()V <init>
ehr com/mojang/blaze3d/preprocessor/package-info
ehs com/mojang/blaze3d/shaders/AbstractUniform
	<init> ()V <init>
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	b (FFFF)V setSafe
	a (IIII)V setSafe
	a (I)V set
	a (II)V set
	a (III)V set
	b (IIII)V set
	a ([F)V set
	a (Lorg/joml/Vector3f;)V set
	a (Lorg/joml/Vector4f;)V set
	c (FFFF)V setMat2x2
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	b (FFFFFF)V setMat3x2
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Matrix3f;)V set
eht com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	<init> (ZZIIIII)V <init>
	<init> ()V <init>
	<init> (III)V <init>
	<init> (IIIII)V <init>
	a ()V apply
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()Z isOpaque
	a (Ljava/lang/String;)I stringToBlendFunc
	b (Ljava/lang/String;)I stringToBlendFactor
ehu com/mojang/blaze3d/shaders/Effect
ehv com/mojang/blaze3d/shaders/EffectProgram
	a PREPROCESSOR
	b references
	<init> (Lehx$a;ILjava/lang/String;)V <init>
	a (Lehu;)V attachToEffect
	a ()V close
	a (Lehx$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lehv; compileShader
	<clinit> ()V <clinit>
ehv$1 com/mojang/blaze3d/shaders/EffectProgram$1
	<init> ()V <init>
	a (ZLjava/lang/String;)Ljava/lang/String; applyImport
ehw com/mojang/blaze3d/shaders/FogShape
	a SPHERE
	b CYLINDER
	c index
	d $VALUES
	values ()[Lehw; values
	valueOf (Ljava/lang/String;)Lehw; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getIndex
	b ()[Lehw; $values
	<clinit> ()V <clinit>
ehx com/mojang/blaze3d/shaders/Program
	a MAX_LOG_LENGTH
	b type
	c name
	d id
	<init> (Lehx$a;ILjava/lang/String;)V <init>
	a (Lehz;)V attachToShader
	a ()V close
	b ()Ljava/lang/String; getName
	a (Lehx$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lehq;)Lehx; compileShader
	b (Lehx$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lehq;)I compileShaderInternal
	c ()I getId
ehx$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	values ()[Lehx$a; values
	valueOf (Ljava/lang/String;)Lehx$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getExtension
	d ()I getGlType
	c ()Ljava/util/Map; getPrograms
	e ()[Lehx$a; $values
	<clinit> ()V <clinit>
ehy com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	<init> ()V <init>
	a (I)V glUseProgram
	a (Lehz;)V releaseProgram
	a ()I createProgram
	b (Lehz;)V linkShader
	<clinit> ()V <clinit>
ehz com/mojang/blaze3d/shaders/Shader
	a ()I getId
	b ()V markDirty
	c ()Lehx; getVertexProgram
	d ()Lehx; getFragmentProgram
	e ()V attachToProgram
eia com/mojang/blaze3d/shaders/Uniform
	l LOGGER
	a UT_INT1
	b UT_INT2
	c UT_INT3
	d UT_INT4
	e UT_FLOAT1
	f UT_FLOAT2
	g UT_FLOAT3
	h UT_FLOAT4
	i UT_MAT2
	j UT_MAT3
	k UT_MAT4
	m TRANSPOSE_MATRICIES
	n location
	o count
	p type
	q intValues
	r floatValues
	s name
	t dirty
	u parent
	<init> (Ljava/lang/String;IILehz;)V <init>
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	b (II)V uploadInteger
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	a (IILjava/lang/CharSequence;)V glBindAttribLocation
	close ()V close
	h ()V markDirty
	a (Ljava/lang/String;)I getTypeFromString
	b (I)V setLocation
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (IF)V set
	a (FFF)V set
	a (Lorg/joml/Vector3f;)V set
	a (FFFF)V set
	a (Lorg/joml/Vector4f;)V set
	b (FFFF)V setSafe
	a (IIII)V setSafe
	a (I)V set
	a (II)V set
	a (III)V set
	b (IIII)V set
	a ([F)V set
	c (FFFF)V setMat2x2
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	b (FFFFFF)V setMat3x2
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Matrix3f;)V set
	b ()V upload
	i ()V uploadAsInteger
	j ()V uploadAsFloat
	k ()V uploadAsMatrix
	c ()I getLocation
	d ()I getCount
	e ()I getType
	f ()Ljava/nio/IntBuffer; getIntBuffer
	g ()Ljava/nio/FloatBuffer; getFloatBuffer
	<clinit> ()V <clinit>
eib com/mojang/blaze3d/shaders/package-info
com/mojang/blaze3d/systems/RenderSystem com/mojang/blaze3d/systems/RenderSystem
	LOGGER LOGGER
	recordingQueue recordingQueue
	RENDER_THREAD_TESSELATOR RENDER_THREAD_TESSELATOR
	MINIMUM_ATLAS_TEXTURE_SIZE MINIMUM_ATLAS_TEXTURE_SIZE
	isReplayingQueue isReplayingQueue
	gameThread gameThread
	renderThread renderThread
	MAX_SUPPORTED_TEXTURE_SIZE MAX_SUPPORTED_TEXTURE_SIZE
	isInInit isInInit
	lastDrawTime lastDrawTime
	sharedSequential sharedSequential
	sharedSequentialQuad sharedSequentialQuad
	sharedSequentialLines sharedSequentialLines
	inverseViewRotationMatrix inverseViewRotationMatrix
	projectionMatrix projectionMatrix
	savedProjectionMatrix savedProjectionMatrix
	vertexSorting vertexSorting
	savedVertexSorting savedVertexSorting
	modelViewStack modelViewStack
	modelViewMatrix modelViewMatrix
	textureMatrix textureMatrix
	shaderTextures shaderTextures
	shaderColor shaderColor
	shaderGlintAlpha shaderGlintAlpha
	shaderFogStart shaderFogStart
	shaderFogEnd shaderFogEnd
	shaderFogColor shaderFogColor
	shaderFogShape shaderFogShape
	shaderLightDirections shaderLightDirections
	shaderGameTime shaderGameTime
	shaderLineWidth shaderLineWidth
	apiDescription apiDescription
	shader shader
	pollEventsWaitStart pollEventsWaitStart
	pollingEvents pollingEvents
	<init> ()V <init>
	initRenderThread ()V initRenderThread
	isOnRenderThread ()Z isOnRenderThread
	isOnRenderThreadOrInit ()Z isOnRenderThreadOrInit
	initGameThread (Z)V initGameThread
	isOnGameThread ()Z isOnGameThread
	assertInInitPhase ()V assertInInitPhase
	assertOnGameThreadOrInit ()V assertOnGameThreadOrInit
	assertOnRenderThreadOrInit ()V assertOnRenderThreadOrInit
	assertOnRenderThread ()V assertOnRenderThread
	assertOnGameThread ()V assertOnGameThread
	constructThreadException ()Ljava/lang/IllegalStateException; constructThreadException
	isInInitPhase ()Z isInInitPhase
	recordRenderCall (Legt;)V recordRenderCall
	pollEvents ()V pollEvents
	isFrozenAtPollEvents ()Z isFrozenAtPollEvents
	flipFrame (J)V flipFrame
	replayQueue ()V replayQueue
	limitDisplayFPS (I)V limitDisplayFPS
	disableDepthTest ()V disableDepthTest
	enableDepthTest ()V enableDepthTest
	enableScissor (IIII)V enableScissor
	disableScissor ()V disableScissor
	depthFunc (I)V depthFunc
	depthMask (Z)V depthMask
	enableBlend ()V enableBlend
	disableBlend ()V disableBlend
	blendFunc (Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;)V blendFunc
	blendFunc (II)V blendFunc
	blendFuncSeparate (Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;)V blendFuncSeparate
	blendFuncSeparate (IIII)V blendFuncSeparate
	blendEquation (I)V blendEquation
	enableCull ()V enableCull
	disableCull ()V disableCull
	polygonMode (II)V polygonMode
	enablePolygonOffset ()V enablePolygonOffset
	disablePolygonOffset ()V disablePolygonOffset
	polygonOffset (FF)V polygonOffset
	enableColorLogicOp ()V enableColorLogicOp
	disableColorLogicOp ()V disableColorLogicOp
	logicOp (Lcom/mojang/blaze3d/platform/GlStateManager$g;)V logicOp
	activeTexture (I)V activeTexture
	texParameter (III)V texParameter
	deleteTexture (I)V deleteTexture
	bindTextureForSetup (I)V bindTextureForSetup
	bindTexture (I)V bindTexture
	viewport (IIII)V viewport
	colorMask (ZZZZ)V colorMask
	stencilFunc (III)V stencilFunc
	stencilMask (I)V stencilMask
	stencilOp (III)V stencilOp
	clearDepth (D)V clearDepth
	clearColor (FFFF)V clearColor
	clearStencil (I)V clearStencil
	clear (IZ)V clear
	setShaderFogStart (F)V setShaderFogStart
	_setShaderFogStart (F)V _setShaderFogStart
	getShaderFogStart ()F getShaderFogStart
	setShaderGlintAlpha (D)V setShaderGlintAlpha
	setShaderGlintAlpha (F)V setShaderGlintAlpha
	_setShaderGlintAlpha (F)V _setShaderGlintAlpha
	getShaderGlintAlpha ()F getShaderGlintAlpha
	setShaderFogEnd (F)V setShaderFogEnd
	_setShaderFogEnd (F)V _setShaderFogEnd
	getShaderFogEnd ()F getShaderFogEnd
	setShaderFogColor (FFFF)V setShaderFogColor
	setShaderFogColor (FFF)V setShaderFogColor
	_setShaderFogColor (FFFF)V _setShaderFogColor
	getShaderFogColor ()[F getShaderFogColor
	setShaderFogShape (Lehw;)V setShaderFogShape
	_setShaderFogShape (Lehw;)V _setShaderFogShape
	getShaderFogShape ()Lehw; getShaderFogShape
	setShaderLights (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setShaderLights
	_setShaderLights (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V _setShaderLights
	setupShaderLights (Lfki;)V setupShaderLights
	setShaderColor (FFFF)V setShaderColor
	_setShaderColor (FFFF)V _setShaderColor
	getShaderColor ()[F getShaderColor
	drawElements (III)V drawElements
	lineWidth (F)V lineWidth
	getShaderLineWidth ()F getShaderLineWidth
	pixelStore (II)V pixelStore
	readPixels (IIIIIILjava/nio/ByteBuffer;)V readPixels
	getString (ILjava/util/function/Consumer;)V getString
	getBackendDescription ()Ljava/lang/String; getBackendDescription
	getApiDescription ()Ljava/lang/String; getApiDescription
	initBackendSystem ()Lapv$a; initBackendSystem
	initRenderer (IZ)V initRenderer
	setErrorCallback (Lorg/lwjgl/glfw/GLFWErrorCallbackI;)V setErrorCallback
	renderCrosshair (I)V renderCrosshair
	getCapsString ()Ljava/lang/String; getCapsString
	setupDefaultState (IIII)V setupDefaultState
	maxSupportedTextureSize ()I maxSupportedTextureSize
	glBindBuffer (ILjava/util/function/IntSupplier;)V glBindBuffer
	glBindVertexArray (Ljava/util/function/Supplier;)V glBindVertexArray
	glBufferData (ILjava/nio/ByteBuffer;I)V glBufferData
	glDeleteBuffers (I)V glDeleteBuffers
	glDeleteVertexArrays (I)V glDeleteVertexArrays
	glUniform1i (II)V glUniform1i
	glUniform1 (ILjava/nio/IntBuffer;)V glUniform1
	glUniform2 (ILjava/nio/IntBuffer;)V glUniform2
	glUniform3 (ILjava/nio/IntBuffer;)V glUniform3
	glUniform4 (ILjava/nio/IntBuffer;)V glUniform4
	glUniform1 (ILjava/nio/FloatBuffer;)V glUniform1
	glUniform2 (ILjava/nio/FloatBuffer;)V glUniform2
	glUniform3 (ILjava/nio/FloatBuffer;)V glUniform3
	glUniform4 (ILjava/nio/FloatBuffer;)V glUniform4
	glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V glUniformMatrix2
	glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V glUniformMatrix3
	glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V glUniformMatrix4
	setupOverlayColor (Ljava/util/function/IntSupplier;I)V setupOverlayColor
	teardownOverlayColor ()V teardownOverlayColor
	setupLevelDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;)V setupLevelDiffuseLighting
	setupGuiFlatDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setupGuiFlatDiffuseLighting
	setupGui3DDiffuseLighting (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setupGui3DDiffuseLighting
	beginInitialization ()V beginInitialization
	finishInitialization ()V finishInitialization
	glGenBuffers (Ljava/util/function/Consumer;)V glGenBuffers
	glGenVertexArrays (Ljava/util/function/Consumer;)V glGenVertexArrays
	renderThreadTesselator ()Leil; renderThreadTesselator
	defaultBlendFunc ()V defaultBlendFunc
	runAsFancy (Ljava/lang/Runnable;)V runAsFancy
	setShader (Ljava/util/function/Supplier;)V setShader
	getShader ()Lfki; getShader
	setShaderTexture (ILacq;)V setShaderTexture
	_setShaderTexture (ILacq;)V _setShaderTexture
	setShaderTexture (II)V setShaderTexture
	_setShaderTexture (II)V _setShaderTexture
	getShaderTexture (I)I getShaderTexture
	setProjectionMatrix (Lorg/joml/Matrix4f;Leir;)V setProjectionMatrix
	setInverseViewRotationMatrix (Lorg/joml/Matrix3f;)V setInverseViewRotationMatrix
	setTextureMatrix (Lorg/joml/Matrix4f;)V setTextureMatrix
	resetTextureMatrix ()V resetTextureMatrix
	applyModelViewMatrix ()V applyModelViewMatrix
	backupProjectionMatrix ()V backupProjectionMatrix
	_backupProjectionMatrix ()V _backupProjectionMatrix
	restoreProjectionMatrix ()V restoreProjectionMatrix
	_restoreProjectionMatrix ()V _restoreProjectionMatrix
	getProjectionMatrix ()Lorg/joml/Matrix4f; getProjectionMatrix
	getInverseViewRotationMatrix ()Lorg/joml/Matrix3f; getInverseViewRotationMatrix
	getModelViewMatrix ()Lorg/joml/Matrix4f; getModelViewMatrix
	getModelViewStack ()Leij; getModelViewStack
	getTextureMatrix ()Lorg/joml/Matrix4f; getTextureMatrix
	getSequentialBuffer (Leio$b;)Lcom/mojang/blaze3d/systems/RenderSystem$a; getSequentialBuffer
	setShaderGameTime (JF)V setShaderGameTime
	getShaderGameTime ()F getShaderGameTime
	getVertexSorting ()Leir; getVertexSorting
	lambda$setShaderGameTime$72 (F)V lambda$setShaderGameTime$72
	lambda$restoreProjectionMatrix$71 ()V lambda$restoreProjectionMatrix$71
	lambda$backupProjectionMatrix$70 ()V lambda$backupProjectionMatrix$70
	lambda$applyModelViewMatrix$69 (Lorg/joml/Matrix4f;)V lambda$applyModelViewMatrix$69
	lambda$resetTextureMatrix$68 ()V lambda$resetTextureMatrix$68
	lambda$setTextureMatrix$67 (Lorg/joml/Matrix4f;)V lambda$setTextureMatrix$67
	lambda$setInverseViewRotationMatrix$66 (Lorg/joml/Matrix3f;)V lambda$setInverseViewRotationMatrix$66
	lambda$setProjectionMatrix$65 (Lorg/joml/Matrix4f;Leir;)V lambda$setProjectionMatrix$65
	lambda$setShaderTexture$64 (II)V lambda$setShaderTexture$64
	lambda$setShaderTexture$63 (ILacq;)V lambda$setShaderTexture$63
	lambda$setShader$62 (Ljava/util/function/Supplier;)V lambda$setShader$62
	lambda$glGenVertexArrays$61 (Ljava/util/function/Consumer;)V lambda$glGenVertexArrays$61
	lambda$glGenBuffers$60 (Ljava/util/function/Consumer;)V lambda$glGenBuffers$60
	lambda$setupGui3DDiffuseLighting$59 (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V lambda$setupGui3DDiffuseLighting$59
	lambda$setupGuiFlatDiffuseLighting$58 (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V lambda$setupGuiFlatDiffuseLighting$58
	lambda$setupLevelDiffuseLighting$57 (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;)V lambda$setupLevelDiffuseLighting$57
	lambda$teardownOverlayColor$56 ()V lambda$teardownOverlayColor$56
	lambda$setupOverlayColor$55 (Ljava/util/function/IntSupplier;)V lambda$setupOverlayColor$55
	lambda$glUniformMatrix4$54 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix4$54
	lambda$glUniformMatrix3$53 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix3$53
	lambda$glUniformMatrix2$52 (IZLjava/nio/FloatBuffer;)V lambda$glUniformMatrix2$52
	lambda$glUniform4$51 (ILjava/nio/FloatBuffer;)V lambda$glUniform4$51
	lambda$glUniform3$50 (ILjava/nio/FloatBuffer;)V lambda$glUniform3$50
	lambda$glUniform2$49 (ILjava/nio/FloatBuffer;)V lambda$glUniform2$49
	lambda$glUniform1$48 (ILjava/nio/FloatBuffer;)V lambda$glUniform1$48
	lambda$glUniform4$47 (ILjava/nio/IntBuffer;)V lambda$glUniform4$47
	lambda$glUniform3$46 (ILjava/nio/IntBuffer;)V lambda$glUniform3$46
	lambda$glUniform2$45 (ILjava/nio/IntBuffer;)V lambda$glUniform2$45
	lambda$glUniform1$44 (ILjava/nio/IntBuffer;)V lambda$glUniform1$44
	lambda$glUniform1i$43 (II)V lambda$glUniform1i$43
	lambda$glDeleteVertexArrays$42 (I)V lambda$glDeleteVertexArrays$42
	lambda$glDeleteBuffers$41 (I)V lambda$glDeleteBuffers$41
	lambda$glBindVertexArray$40 (Ljava/util/function/Supplier;)V lambda$glBindVertexArray$40
	lambda$glBindBuffer$39 (ILjava/util/function/IntSupplier;)V lambda$glBindBuffer$39
	lambda$renderCrosshair$38 (I)V lambda$renderCrosshair$38
	lambda$getString$37 (ILjava/util/function/Consumer;)V lambda$getString$37
	lambda$readPixels$36 (IIIIIILjava/nio/ByteBuffer;)V lambda$readPixels$36
	lambda$pixelStore$35 (II)V lambda$pixelStore$35
	lambda$lineWidth$34 (F)V lambda$lineWidth$34
	lambda$drawElements$33 (III)V lambda$drawElements$33
	lambda$setShaderColor$32 (FFFF)V lambda$setShaderColor$32
	lambda$setShaderLights$31 (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V lambda$setShaderLights$31
	lambda$setShaderFogShape$30 (Lehw;)V lambda$setShaderFogShape$30
	lambda$setShaderFogColor$29 (FFFF)V lambda$setShaderFogColor$29
	lambda$setShaderFogEnd$28 (F)V lambda$setShaderFogEnd$28
	lambda$setShaderGlintAlpha$27 (F)V lambda$setShaderGlintAlpha$27
	lambda$setShaderFogStart$26 (F)V lambda$setShaderFogStart$26
	lambda$clear$25 (IZ)V lambda$clear$25
	lambda$clearStencil$24 (I)V lambda$clearStencil$24
	lambda$clearColor$23 (FFFF)V lambda$clearColor$23
	lambda$clearDepth$22 (D)V lambda$clearDepth$22
	lambda$stencilOp$21 (III)V lambda$stencilOp$21
	lambda$stencilMask$20 (I)V lambda$stencilMask$20
	lambda$stencilFunc$19 (III)V lambda$stencilFunc$19
	lambda$colorMask$18 (ZZZZ)V lambda$colorMask$18
	lambda$viewport$17 (IIII)V lambda$viewport$17
	lambda$bindTexture$16 (I)V lambda$bindTexture$16
	lambda$deleteTexture$15 (I)V lambda$deleteTexture$15
	lambda$texParameter$14 (III)V lambda$texParameter$14
	lambda$activeTexture$13 (I)V lambda$activeTexture$13
	lambda$logicOp$12 (Lcom/mojang/blaze3d/platform/GlStateManager$g;)V lambda$logicOp$12
	lambda$polygonOffset$11 (FF)V lambda$polygonOffset$11
	lambda$polygonMode$10 (II)V lambda$polygonMode$10
	lambda$blendEquation$9 (I)V lambda$blendEquation$9
	lambda$blendFuncSeparate$8 (IIII)V lambda$blendFuncSeparate$8
	lambda$blendFuncSeparate$7 (Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;)V lambda$blendFuncSeparate$7
	lambda$blendFunc$6 (II)V lambda$blendFunc$6
	lambda$blendFunc$5 (Lcom/mojang/blaze3d/platform/GlStateManager$SourceFactor;Lcom/mojang/blaze3d/platform/GlStateManager$DestFactor;)V lambda$blendFunc$5
	lambda$depthMask$4 (Z)V lambda$depthMask$4
	lambda$depthFunc$3 (I)V lambda$depthFunc$3
	lambda$enableScissor$2 (IIII)V lambda$enableScissor$2
	lambda$static$1 (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V lambda$static$1
	lambda$static$0 (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V lambda$static$0
	<clinit> ()V <clinit>
com/mojang/blaze3d/systems/RenderSystem$1 com/mojang/blaze3d/systems/RenderSystem$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormat$Mode
	b $SwitchMap$com$mojang$blaze3d$vertex$VertexFormat$IndexType
	<clinit> ()V <clinit>
com/mojang/blaze3d/systems/RenderSystem$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer
	a vertexStride
	b indexStride
	c generator
	d name
	e type
	f indexCount
	<init> (IILcom/mojang/blaze3d/systems/RenderSystem$a$a;)V <init>
	a (I)Z hasStorage
	b (I)V bind
	c (I)V ensureStorage
	a (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	a ()Leio$a; type
	a (Ljava/nio/ByteBuffer;I)V lambda$intConsumer$0
com/mojang/blaze3d/systems/RenderSystem$a$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator
	accept (Lit/unimi/dsi/fastutil/ints/IntConsumer;I)V accept
eic com/mojang/blaze3d/systems/TimerQuery
	a nextQueryName
	<init> ()V <init>
	a ()Ljava/util/Optional; getInstance
	b ()V beginProfile
	c ()Leic$a; endProfile
eic$a com/mojang/blaze3d/systems/TimerQuery$FrameProfile
	a NO_RESULT
	b CANCELLED_RESULT
	c queryName
	d result
	<init> (I)V <init>
	a ()V cancel
	b ()Z isDone
	c ()J get
eic$b com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader
	a INSTANCE
	<init> ()V <init>
	a ()Leic; instantiate
	<clinit> ()V <clinit>
eid com/mojang/blaze3d/systems/package-info
eie com/mojang/blaze3d/vertex/BufferBuilder
	f GROWTH_SIZE
	g LOGGER
	h buffer
	i renderedBufferCount
	j renderedBufferPointer
	k nextElementByte
	l vertices
	m currentElement
	n elementIndex
	o format
	p mode
	q fastFormat
	r fullFormat
	s building
	t sortingPoints
	u sorting
	v indexOnly
	<init> (I)V <init>
	l ()V ensureVertexCapacity
	d (I)V ensureCapacity
	e (I)I roundUp
	a (Leir;)V setQuadSorting
	a ()Leie$c; getSortState
	a (Leie$c;)V restoreSortState
	a (Leio$b;Leio;)V begin
	a (Leio;)V switchFormat
	a (ILeio$a;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	m ()[Lorg/joml/Vector3f; makeQuadSortingPoints
	a (Leio$a;)V putSortedQuadIndices
	b ()Z isCurrentBatchEmpty
	c ()Leie$b; endOrDiscardIfEmpty
	d ()Leie$b; end
	n ()V ensureDrawing
	o ()Leie$b; storeRenderedBuffer
	p ()V reset
	a (IB)V putByte
	a (IS)V putShort
	a (IF)V putFloat
	e ()V endVertex
	f ()V nextElement
	a (IIII)Lein; color
	a (FFFFFFFFFIIFFF)V vertex
	q ()V releaseRenderedBuffer
	g ()V clear
	h ()V discard
	i ()Leip; currentElement
	j ()Z building
	c (II)Ljava/nio/ByteBuffer; bufferSlice
	a (Lorg/apache/commons/lang3/mutable/MutableInt;I)V lambda$intConsumer$1
	b (Lorg/apache/commons/lang3/mutable/MutableInt;I)V lambda$intConsumer$0
	<clinit> ()V <clinit>
eie$1 com/mojang/blaze3d/vertex/BufferBuilder$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormat$IndexType
	<clinit> ()V <clinit>
eie$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c indexCount
	d mode
	e indexType
	f indexOnly
	g sequentialIndex
	<init> (Leio;IILeio$b;Leio$a;ZZ)V <init>
	a ()I vertexBufferSize
	b ()I vertexBufferStart
	c ()I vertexBufferEnd
	d ()I indexBufferStart
	e ()I indexBufferEnd
	n ()I indexBufferSize
	f ()I bufferSize
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	g ()Leio; format
	h ()I vertexCount
	i ()I indexCount
	j ()Leio$b; mode
	k ()Leio$a; indexType
	l ()Z indexOnly
	m ()Z sequentialIndex
eie$b com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer
	b pointer
	c drawState
	d released
	a this$0
	<init> (Leie;ILeie$a;)V <init>
	a ()Ljava/nio/ByteBuffer; vertexBuffer
	b ()Ljava/nio/ByteBuffer; indexBuffer
	c ()Leie$a; drawState
	d ()Z isEmpty
	e ()V release
eie$c com/mojang/blaze3d/vertex/BufferBuilder$SortState
	a mode
	b vertices
	c sortingPoints
	d sorting
	<init> (Leio$b;I[Lorg/joml/Vector3f;Leir;)V <init>
eif com/mojang/blaze3d/vertex/BufferUploader
	a lastImmediateBuffer
	<init> ()V <init>
	a ()V reset
	b ()V invalidate
	a (Leie$b;)V drawWithShader
	c (Leie$b;)V _drawWithShader
	b (Leie$b;)V draw
	d (Leie$b;)Leim; upload
	a (Leio;)Leim; bindImmediateBuffer
	a (Leim;)V bindImmediateBuffer
	e (Leie$b;)V lambda$drawWithShader$0
eig com/mojang/blaze3d/vertex/BufferVertexConsumer
	i ()Leip; currentElement
	f ()V nextElement
	a (IB)V putByte
	a (IS)V putShort
	a (IF)V putFloat
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (SSI)Lein; uvShort
	a (FFF)Lein; normal
	a (F)B normalIntValue
eih com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h ELEMENT_UV
	i BLIT_SCREEN
	j BLOCK
	k NEW_ENTITY
	l PARTICLE
	m POSITION
	n POSITION_COLOR
	o POSITION_COLOR_NORMAL
	p POSITION_COLOR_LIGHTMAP
	q POSITION_TEX
	r POSITION_COLOR_TEX
	s POSITION_TEX_COLOR
	t POSITION_COLOR_TEX_LIGHTMAP
	u POSITION_TEX_LIGHTMAP_COLOR
	v POSITION_TEX_COLOR_NORMAL
	<init> ()V <init>
	<clinit> ()V <clinit>
eii com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	<init> ()V <init>
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
eij com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	<init> ()V <init>
	a (DDD)V translate
	a (FFF)V translate
	b (FFF)V scale
	a (Lorg/joml/Quaternionf;)V mulPose
	a (Lorg/joml/Quaternionf;FFF)V rotateAround
	a ()V pushPose
	b ()V popPose
	c ()Leij$a; last
	d ()Z clear
	e ()V setIdentity
	a (Lorg/joml/Matrix4f;)V mulPoseMatrix
	a (Ljava/util/ArrayDeque;)V lambda$new$0
eij$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	<init> (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;)V <init>
	a ()Lorg/joml/Matrix4f; pose
	b ()Lorg/joml/Matrix3f; normal
eik com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator
	f delegate
	g cameraInversePose
	h normalInversePose
	i textureScale
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	<init> (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;F)V <init>
	a ()V resetState
	e ()V endVertex
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
eil com/mojang/blaze3d/vertex/Tesselator
	a MAX_MEMORY_USE
	b MAX_FLOATS
	c builder
	d INSTANCE
	a ()Leil; getInstance
	<init> (I)V <init>
	<init> ()V <init>
	b ()V end
	c ()Leie; getBuilder
	<clinit> ()V <clinit>
eim com/mojang/blaze3d/vertex/VertexBuffer
	a usage
	b vertexBufferId
	c indexBufferId
	d arrayObjectId
	e format
	f sequentialIndices
	g indexType
	h indexCount
	i mode
	<init> (Leim$a;)V <init>
	a (Leie$b;)V upload
	a (Leie$a;Ljava/nio/ByteBuffer;)Leio; uploadVertexBuffer
	b (Leie$a;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$a; uploadIndexBuffer
	a ()V bind
	b ()V unbind
	c ()V draw
	f ()Leio$a; getIndexType
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfki;)V drawWithShader
	b (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfki;)V _drawWithShader
	close ()V close
	d ()Leio; getFormat
	e ()Z isInvalid
	c (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfki;)V lambda$drawWithShader$0
eim$a com/mojang/blaze3d/vertex/VertexBuffer$Usage
	a STATIC
	b DYNAMIC
	c id
	d $VALUES
	values ()[Leim$a; values
	valueOf (Ljava/lang/String;)Leim$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()[Leim$a; $values
	<clinit> ()V <clinit>
ein com/mojang/blaze3d/vertex/VertexConsumer
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
	e ()V endVertex
	a (FFFFFFFFFIIFFF)V vertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (FFFF)Lein; color
	a (I)Lein; color
	b (I)Lein; uv2
	c (I)Lein; overlayCoords
	a (Leij$a;Lfkr;FFFII)V putBulkData
	a (Leij$a;Lfkr;[FFFF[IIZ)V putBulkData
	a (Lorg/joml/Matrix4f;FFF)Lein; vertex
	a (Lorg/joml/Matrix3f;FFF)Lein; normal
eio com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b elementMapping
	c offsets
	d vertexSize
	e immediateDrawVertexBuffer
	<init> (Lcom/google/common/collect/ImmutableMap;)V <init>
	toString ()Ljava/lang/String; toString
	a ()I getIntegerSize
	b ()I getVertexSize
	c ()Lcom/google/common/collect/ImmutableList; getElements
	d ()Lcom/google/common/collect/ImmutableList; getElementAttributeNames
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	e ()V setupBufferState
	h ()V _setupBufferState
	f ()V clearBufferState
	i ()V _clearBufferState
	g ()Leim; getImmediateDrawVertexBuffer
eio$1 com/mojang/blaze3d/vertex/VertexFormat$1
	a $SwitchMap$com$mojang$blaze3d$vertex$VertexFormat$Mode
	<clinit> ()V <clinit>
eio$a com/mojang/blaze3d/vertex/VertexFormat$IndexType
	a SHORT
	b INT
	c asGLType
	d bytes
	e $VALUES
	values ()[Leio$a; values
	valueOf (Ljava/lang/String;)Leio$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a (I)Leio$a; least
	a ()[Leio$a; $values
	<clinit> ()V <clinit>
eio$b com/mojang/blaze3d/vertex/VertexFormat$Mode
	a LINES
	b LINE_STRIP
	c DEBUG_LINES
	d DEBUG_LINE_STRIP
	e TRIANGLES
	f TRIANGLE_STRIP
	g TRIANGLE_FAN
	h QUADS
	i asGLMode
	j primitiveLength
	k primitiveStride
	l connectedPrimitives
	m $VALUES
	values ()[Leio$b; values
	valueOf (Ljava/lang/String;)Leio$b; valueOf
	<init> (Ljava/lang/String;IIIIZ)V <init>
	a (I)I indexCount
	a ()[Leio$b; $values
	<clinit> ()V <clinit>
eip com/mojang/blaze3d/vertex/VertexFormatElement
	a type
	b usage
	c index
	d count
	e byteSize
	<init> (ILeip$a;Leip$b;I)V <init>
	a (ILeip$b;)Z supportsUsage
	a ()Leip$a; getType
	b ()Leip$b; getUsage
	c ()I getCount
	d ()I getIndex
	toString ()Ljava/lang/String; toString
	e ()I getByteSize
	f ()Z isPosition
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (IJI)V setupBufferState
	a (I)V clearBufferState
eip$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	values ()[Leip$a; values
	valueOf (Ljava/lang/String;)Leip$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;I)V <init>
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
	d ()[Leip$a; $values
	<clinit> ()V <clinit>
eip$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	values ()[Leip$b; values
	valueOf (Ljava/lang/String;)Leip$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Leip$b$b;Leip$b$a;)V <init>
	a (IIIJII)V setupBufferState
	a (II)V clearBufferState
	a ()Ljava/lang/String; getName
	b (II)V lambda$static$11
	b (IIIJII)V lambda$static$10
	c (II)V lambda$static$9
	c (IIIJII)V lambda$static$8
	d (II)V lambda$static$7
	d (IIIJII)V lambda$static$6
	e (II)V lambda$static$5
	e (IIIJII)V lambda$static$4
	f (II)V lambda$static$3
	f (IIIJII)V lambda$static$2
	g (II)V lambda$static$1
	g (IIIJII)V lambda$static$0
	b ()[Leip$b; $values
	<clinit> ()V <clinit>
eip$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState
	clearBufferState (II)V clearBufferState
eip$b$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
	setupBufferState (IIIJII)V setupBufferState
eiq com/mojang/blaze3d/vertex/VertexMultiConsumer
	<init> ()V <init>
	a ()Lein; create
	a (Lein;)Lein; create
	a (Lein;Lein;)Lein; create
	a ([Lein;)Lein; create
eiq$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	<init> (Lein;Lein;)V <init>
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
	a (FFFFFFFFFIIFFF)V vertex
	e ()V endVertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
eiq$b com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple
	a delegates
	<init> ([Lein;)V <init>
	a (Ljava/util/function/Consumer;)V forEach
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
	a (FFFFFFFFFIIFFF)V vertex
	e ()V endVertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (IIIILein;)V lambda$defaultColor$7
	a (FFFFFFFFFIIFFFLein;)V lambda$vertex$6
	a (FFFLein;)V lambda$normal$5
	a (IILein;)V lambda$uv2$4
	b (IILein;)V lambda$overlayCoords$3
	a (FFLein;)V lambda$uv$2
	b (IIIILein;)V lambda$color$1
	a (DDDLein;)V lambda$vertex$0
eir com/mojang/blaze3d/vertex/VertexSorting
	a DISTANCE_TO_ORIGIN
	b ORTHOGRAPHIC_Z
	a (FFF)Leir; byDistance
	a (Lorg/joml/Vector3f;)Leir; byDistance
	a (Leir$a;)Leir; byDistance
	sort ([Lorg/joml/Vector3f;)[I sort
	a (Leir$a;[Lorg/joml/Vector3f;)[I lambda$byDistance$2
	a ([FII)I lambda$byDistance$1
	b (Lorg/joml/Vector3f;)F lambda$static$0
	<clinit> ()V <clinit>
eir$a com/mojang/blaze3d/vertex/VertexSorting$DistanceFunction
	apply (Lorg/joml/Vector3f;)F apply
eis com/mojang/blaze3d/vertex/package-info
a com/mojang/math/Axis
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
	of (Lorg/joml/Vector3f;)La; of
	rotation (F)Lorg/joml/Quaternionf; rotation
	rotationDegrees (F)Lorg/joml/Quaternionf; rotationDegrees
	a (Lorg/joml/Vector3f;F)Lorg/joml/Quaternionf; lambda$of$6
	a (F)Lorg/joml/Quaternionf; lambda$static$5
	b (F)Lorg/joml/Quaternionf; lambda$static$4
	c (F)Lorg/joml/Quaternionf; lambda$static$3
	d (F)Lorg/joml/Quaternionf; lambda$static$2
	e (F)Lorg/joml/Quaternionf; lambda$static$1
	f (F)Lorg/joml/Quaternionf; lambda$static$0
	<clinit> ()V <clinit>
b com/mojang/math/Constants
	a PI
	b RAD_TO_DEG
	c DEG_TO_RAD
	d EPSILON
	<init> ()V <init>
c com/mojang/math/Divisor
	a denominator
	b quotient
	c mod
	d returnedParts
	e remainder
	<init> (II)V <init>
	hasNext ()Z hasNext
	nextInt ()I nextInt
	a (II)Ljava/lang/Iterable; asIterable
	b (II)Ljava/util/Iterator; lambda$asIterable$0
d com/mojang/math/FieldsAreNonnullByDefault
e com/mojang/math/GivensParameters
	a sinHalf
	b cosHalf
	<init> (FF)V <init>
	a (FF)Le; fromUnnormalized
	a (F)Le; fromPositiveAngle
	a ()Le; inverse
	a (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundX
	b (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundY
	c (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundZ
	b ()F cos
	c ()F sin
	a (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundX
	b (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundY
	c (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundZ
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()F sinHalf
	e ()F cosHalf
f com/mojang/math/MatrixUtil
	a G
	b PI_4
	<init> ()V <init>
	a (Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f; mulComponentWise
	a (FFF)Le; approxGivensQuat
	a (FF)Le; qrGivensQuat
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V similarityTransform
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V stepJacobi
	a (Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf; eigenvalueJacobi
	a (Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	<clinit> ()V <clinit>
g com/mojang/math/MethodsReturnNonnullByDefault
h com/mojang/math/OctahedralGroup
	a IDENTITY
	b ROT_180_FACE_XY
	c ROT_180_FACE_XZ
	d ROT_180_FACE_YZ
	e ROT_120_NNN
	f ROT_120_NNP
	g ROT_120_NPN
	h ROT_120_NPP
	i ROT_120_PNN
	j ROT_120_PNP
	k ROT_120_PPN
	l ROT_120_PPP
	m ROT_180_EDGE_XY_NEG
	n ROT_180_EDGE_XY_POS
	o ROT_180_EDGE_XZ_NEG
	p ROT_180_EDGE_XZ_POS
	q ROT_180_EDGE_YZ_NEG
	r ROT_180_EDGE_YZ_POS
	s ROT_90_X_NEG
	t ROT_90_X_POS
	u ROT_90_Y_NEG
	v ROT_90_Y_POS
	w ROT_90_Z_NEG
	x ROT_90_Z_POS
	y INVERSION
	z INVERT_X
	A INVERT_Y
	B INVERT_Z
	C ROT_60_REF_NNN
	D ROT_60_REF_NNP
	E ROT_60_REF_NPN
	F ROT_60_REF_NPP
	G ROT_60_REF_PNN
	H ROT_60_REF_PNP
	I ROT_60_REF_PPN
	J ROT_60_REF_PPP
	K SWAP_XY
	L SWAP_YZ
	M SWAP_XZ
	N SWAP_NEG_XY
	O SWAP_NEG_YZ
	P SWAP_NEG_XZ
	Q ROT_90_REF_X_NEG
	R ROT_90_REF_X_POS
	S ROT_90_REF_Y_NEG
	T ROT_90_REF_Y_POS
	U ROT_90_REF_Z_NEG
	V ROT_90_REF_Z_POS
	X transformation
	Y name
	Z rotatedDirections
	aa invertX
	ab invertY
	ac invertZ
	ad permutation
	ae cayleyTable
	af inverseTable
	ag $VALUES
	values ()[Lh; values
	valueOf (Ljava/lang/String;)Lh; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Li;ZZZ)V <init>
	d ()Lit/unimi/dsi/fastutil/booleans/BooleanList; packInversions
	a (Lh;)Lh; compose
	a ()Lh; inverse
	b ()Lorg/joml/Matrix3f; transformation
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a (Lha;)Lha; rotate
	a (Lha$a;)Z inverts
	a (Lhc;)Lhc; rotate
	a (I)[Lh; lambda$static$5
	b (Lh;)Lh; lambda$static$4
	a (Lh;Lh;)Z lambda$static$3
	a ([[Lh;)V lambda$static$2
	c (Lh;)Lh; lambda$static$1
	d (Lh;)Lcom/mojang/datafixers/util/Pair; lambda$static$0
	e ()[Lh; $values
	<clinit> ()V <clinit>
h$1 com/mojang/math/OctahedralGroup$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
i com/mojang/math/SymmetricGroup3
	a P123
	b P213
	c P132
	d P231
	e P312
	f P321
	g permutation
	h transformation
	i ORDER
	j cayleyTable
	k $VALUES
	values ()[Li; values
	valueOf (Ljava/lang/String;)Li; valueOf
	<init> (Ljava/lang/String;IIII)V <init>
	a (Li;)Li; compose
	a (I)I permutation
	a ()Lorg/joml/Matrix3f; transformation
	a ([[Li;)V lambda$static$1
	a ([ILi;)Z lambda$static$0
	b ()[Li; $values
	<clinit> ()V <clinit>
j com/mojang/math/Transformation
	c matrix
	a CODEC
	b EXTENDED_CODEC
	d decomposed
	e translation
	f leftRotation
	g scale
	h rightRotation
	i IDENTITY
	<init> (Lorg/joml/Matrix4f;)V <init>
	<init> (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)V <init>
	a ()Lj; identity
	a (Lj;)Lj; compose
	b ()Lj; inverse
	h ()V ensureDecomposed
	a (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f; compose
	c ()Lorg/joml/Matrix4f; getMatrix
	d ()Lorg/joml/Vector3f; getTranslation
	e ()Lorg/joml/Quaternionf; getLeftRotation
	f ()Lorg/joml/Vector3f; getScale
	g ()Lorg/joml/Quaternionf; getRightRotation
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lj;F)Lj; slerp
	i ()Lj; lambda$static$8
	a (Lcom/mojang/datafixers/util/Either;)Lj; lambda$static$7
	b (Lj;)Lj; lambda$static$6
	c (Lj;)Lj; lambda$static$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	d (Lj;)Lorg/joml/Quaternionf; lambda$static$3
	e (Lj;)Lorg/joml/Vector3f; lambda$static$2
	f (Lj;)Lorg/joml/Quaternionf; lambda$static$1
	g (Lj;)Lorg/joml/Vector3f; lambda$static$0
	<clinit> ()V <clinit>
k com/mojang/math/package-info
eit com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	<init> ([CLjava/lang/Runnable;)V <init>
	<init> ([C)V <init>
	a (C)Z keyPressed
	a ()V reset
	toString ()Ljava/lang/String; toString
	b ()V lambda$new$0
eiu com/mojang/realmsclient/RealmsMainScreen
	a LOGGER
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	G EXPIRED_ICON_LOCATION
	H EXPIRES_SOON_ICON_LOCATION
	I INVITATION_ICONS_LOCATION
	J INVITE_ICON_LOCATION
	K WORLDICON_LOCATION
	L LOGO_LOCATION
	M NEWS_LOCATION
	N POPUP_LOCATION
	O DARKEN_LOCATION
	P CROSS_ICON_LOCATION
	Q TRIAL_ICON_LOCATION
	R INFO_ICON_LOCATION
	S TRIAL_MESSAGE_LINES
	T SERVER_UNITIALIZED_TEXT
	U SUBSCRIPTION_EXPIRED_TEXT
	V SUBSCRIPTION_RENEW_TEXT
	W TRIAL_EXPIRED_TEXT
	X SELECT_MINIGAME_PREFIX
	Y POPUP_TEXT
	Z PLAY_TEXT
	aa LEAVE_SERVER_TEXT
	ab CONFIGURE_SERVER_TEXT
	ac SERVER_EXPIRED_TOOLTIP
	ad SERVER_EXPIRES_SOON_TOOLTIP
	ae SERVER_EXPIRES_IN_DAY_TOOLTIP
	af SERVER_OPEN_TOOLTIP
	ag SERVER_CLOSED_TOOLTIP
	ah NEWS_TOOLTIP
	ai UNITIALIZED_WORLD_NARRATION
	aj TRIAL_TEXT
	ak BUTTON_WIDTH
	al BUTTON_TOP_ROW_WIDTH
	am BUTTON_BOTTOM_ROW_WIDTH
	an FOOTER_HEIGHT
	ao LOGO_WIDTH
	ap LOGO_HEIGHT
	aq LOGO_TEXTURE_WIDTH
	ar LOGO_TEXTURE_HEIGHT
	as LOGO_PADDING
	at HEADER_HEIGHT
	au teaserImages
	av dataSubscription
	aw serverList
	ax handledSeenNotifications
	ay overrideConfigure
	az lastScrollYPosition
	aA hasParentalConsent
	aB checkedParentalConsent
	aC checkedClientCompatability
	aD realmsGenericErrorScreen
	aE regionsPinged
	aF inviteNarrationLimiter
	aG dontSetConnectedToRealms
	aH lastScreen
	aI realmSelectionList
	aJ realmsSelectionListAdded
	aK playButton
	aL backButton
	aM renewButton
	aN configureButton
	aO leaveButton
	aP realmsServers
	aQ numberOfPendingInvites
	aR animTick
	aS hasFetchedServers
	aT popupOpenedByUser
	aU justClosedPopup
	aV trialsAvailable
	aW createdTrial
	aX showingPopup
	aY hasUnreadNews
	aZ newsLink
	ba carouselIndex
	bb carouselTick
	bc hasSwitchedCarouselImage
	bd keyCombos
	be lastClickTime
	bf connectLock
	bg formattedPopup
	bh notifications
	bi showPopupButton
	bj pendingInvitesButton
	bk newsButton
	bl createTrialButton
	bm buyARealmButton
	bn closeButton
	<init> (Leuq;)V <init>
	B ()Z shouldShowMessageInList
	a ()Z shouldShowPopup
	b ()V init
	C ()Z hasParentalConsent
	c ()V addTopButtons
	d ()V addMiddleButtons
	e ()V addFooterButtons
	a (Lejq;)V updateButtonStates
	D ()Z shouldShowPopupButton
	b (Lejq;)Z shouldPlayButtonBeActive
	c (Lejq;)Z shouldRenewButtonBeActive
	d (Lejq;)Z shouldConfigureButtonBeActive
	e (Lejq;)Z shouldLeaveButtonBeActive
	f ()V tick
	a (Lekq;)Lelx$c; initDataFetcher
	a (Leiu$i;Ljava/util/function/Consumer;)V callRealmsClient
	E ()V refreshRealmsSelectionList
	a (Leiu$h;Lejp;)V addEntriesForNotification
	F ()V refreshFetcher
	G ()V pingRegions
	H ()Ljava/util/List; getOwnedNonExpiredWorldIds
	a (Z)V setCreatedTrial
	f (Lejq;)V onRenew
	I ()V checkClientCompatability
	J ()V checkParentalConsent
	K ()V switchToStage
	L ()V switchToLocal
	M ()V switchToProd
	g (Lejq;)V configureClicked
	h (Lejq;)V leaveClicked
	N ()V saveListScrollPosition
	O ()Lejq; getSelectedServer
	a (ZLejq;)V leaveServer
	i (Lejq;)V removeServer
	a (Ljava/util/UUID;)V dismissNotification
	g ()V resetScreen
	a (III)Z keyPressed
	P ()V onClosePopup
	a (CI)Z charTyped
	a (Leox;IIF)V render
	a (DDI)Z mouseClicked
	a (DD)Z isOutsidePopup
	c (Leox;)V drawPopup
	Q ()I popupX0
	R ()I popupY0
	a (Lejq;Leuq;)V play
	j (Lejq;)Z isSelfOwnedServer
	k (Lejq;)Z isSelfOwnedNonExpiredServer
	a (Leox;IIII)V drawExpired
	a (Leox;IIIII)V drawExpiring
	b (Leox;IIII)V drawOpen
	c (Leox;IIII)V drawClose
	a (Leox;IIZIIZZ)V renderNews
	d (Leox;)V renderLocal
	e (Leox;)V renderStage
	h ()Leiu; newScreen
	a (Lakx;)V updateTeaserImages
	a (Lacq;)Z lambda$updateTeaserImages$30
	b (Lacq;)Z lambda$updateTeaserImages$29
	a (CLeit;)V lambda$charTyped$28
	a (Ljava/util/UUID;Ljava/lang/Object;)V lambda$dismissNotification$27
	a (Ljava/util/UUID;Lejp;)Z lambda$dismissNotification$26
	a (Ljava/util/UUID;Leiz;)Ljava/lang/Object; lambda$dismissNotification$25
	a (Lejq;Leiu$d;)Z lambda$removeServer$24
	a (Lejq;Z)V lambda$leaveClicked$23
	S ()V lambda$pingRegions$22
	a (Ljava/util/List;Ljava/lang/Object;)V lambda$refreshRealmsSelectionList$21
	a (Ljava/util/List;Leiz;)Ljava/lang/Object; lambda$refreshRealmsSelectionList$20
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$callRealmsClient$19
	a (Leiu$i;Lenn;)Ljava/lang/Object; lambda$callRealmsClient$18
	a (Lekq;Lejo;)V lambda$initDataFetcher$17
	a (Lejv;)V lambda$initDataFetcher$16
	a (Ljava/lang/Boolean;)V lambda$initDataFetcher$15
	a (Ljava/lang/Integer;)V lambda$initDataFetcher$14
	c (Ljava/util/List;)V lambda$initDataFetcher$13
	d (Ljava/util/List;)V lambda$initDataFetcher$12
	a (Leiu;Leqt;)V lambda$addFooterButtons$11
	a (Lepi;)V lambda$addFooterButtons$10
	b (Lepi;)V lambda$addFooterButtons$9
	c (Lepi;)V lambda$addFooterButtons$8
	d (Lepi;)V lambda$addFooterButtons$7
	e (Lepi;)V lambda$addFooterButtons$6
	f (Lepi;)V lambda$addMiddleButtons$5
	g (Lepi;)V lambda$addMiddleButtons$4
	h (Lepi;)V lambda$addTopButtons$3
	T ()V lambda$init$2
	U ()V lambda$init$1
	V ()V lambda$init$0
	a (Leiu;)Lenn; access$000
	b (Leiu;)Lenn; access$100
	c (Leiu;)Lenn; access$200
	d (Leiu;)Lenn; access$300
	e (Leiu;)Lenn; access$400
	f (Leiu;)Lenn; access$500
	g (Leiu;)Lenn; access$600
	h (Leiu;)Lenn; access$700
	i (Leiu;)Lenn; access$800
	j (Leiu;)Lenn; access$900
	k (Leiu;)Lenn; access$1000
	l (Leiu;)Lenn; access$1100
	m (Leiu;)Lenn; access$1200
	n (Leiu;)Leov; access$1300
	o (Leiu;)Leov; access$1400
	p (Leiu;)Leov; access$1500
	q (Leiu;)Lenn; access$1600
	r (Leiu;)Lenn; access$1700
	s (Leiu;)Lenn; access$1800
	t (Leiu;)Leov; access$1900
	u (Leiu;)Leov; access$2000
	v (Leiu;)Leov; access$2100
	w (Leiu;)Leov; access$2200
	a (Leiu;Lsw;)V access$2300
	x (Leiu;)Leov; access$2400
	y (Leiu;)Leov; access$2500
	z (Leiu;)Leov; access$2600
	A (Leiu;)Leov; access$2700
	B (Leiu;)Leov; access$2800
	C (Leiu;)Leov; access$2900
	D (Leiu;)Leov; access$3000
	E (Leiu;)Lenn; access$3100
	<clinit> ()V <clinit>
eiu$1 com/mojang/realmsclient/RealmsMainScreen$1
	a this$0
	<init> (Leiu;Ljava/lang/String;)V <init>
	run ()V run
	a (Lekm;)V lambda$run$2
	a ()V lambda$run$1
	b ()V lambda$run$0
eiu$2 com/mojang/realmsclient/RealmsMainScreen$2
	a this$0
	<init> (Leiu;Ljava/lang/String;)V <init>
	run ()V run
	a (Lekm;)V lambda$run$1
	a ()V lambda$run$0
eiu$3 com/mojang/realmsclient/RealmsMainScreen$3
	a this$0
	<init> (Leiu;Ljava/lang/String;)V <init>
	run ()V run
eiu$4 com/mojang/realmsclient/RealmsMainScreen$4
	a this$0
	<init> (Leiu;Ljava/lang/String;)V <init>
	run ()V run
eiu$5 com/mojang/realmsclient/RealmsMainScreen$5
	a val$server
	b this$0
	<init> (Leiu;Ljava/lang/String;Lejq;)V <init>
	run ()V run
	a (Lekm;)V lambda$run$1
	a (Lejq;)V lambda$run$0
eiu$a com/mojang/realmsclient/RealmsMainScreen$ButtonEntry
	c button
	d xPos
	a this$0
	<init> (Leiu;Lepi;)V <init>
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
eiu$b com/mojang/realmsclient/RealmsMainScreen$CloseButton
	a this$0
	<init> (Leiu;)V <init>
	a (Leiu;Lepi;)V lambda$new$0
eiu$c com/mojang/realmsclient/RealmsMainScreen$CrossButton
	<init> (Lepi$c;Lsw;)V <init>
	<init> (IILepi$c;Lsw;)V <init>
	b (Leox;IIF)V renderWidget
eiu$d com/mojang/realmsclient/RealmsMainScreen$Entry
	b this$0
	<init> (Leiu;)V <init>
	b ()Lejq; getServer
eiu$e com/mojang/realmsclient/RealmsMainScreen$NewsButton
	b SIDE
	a this$0
	<init> (Leiu;)V <init>
	b (Leox;IIF)V renderWidget
	a (Leiu;Lepi;)V lambda$new$0
eiu$f com/mojang/realmsclient/RealmsMainScreen$NotificationMessageEntry
	c SIDE_MARGINS
	d ITEM_HEIGHT
	e OUTLINE_COLOR
	f text
	g children
	h dismissButton
	i textWidget
	j gridLayout
	k textFrame
	l lastEntryWidth
	a this$0
	<init> (Leiu;Lsw;Lejp;)V <init>
	a (III)Z keyPressed
	a (I)V updateEntryWidth
	b (I)V refreshLayout
	b (Leox;IIIIIIIZF)V renderBack
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a ()Lsw; getNarration
	a (Leox;IIFLepf;)V lambda$render$1
	a (Lejp;Lepi;)V lambda$new$0
eiu$g com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	C TITLE
	D NO_PENDING_INVITES
	E PENDING_INVITES
	F WIDTH
	G HEIGHT
	H X_OFFSET
	I INVITES_WIDTH
	J INVITES_HEIGHT
	K INVITES_OFFSET
	a this$0
	<init> (Leiu;)V <init>
	a ()V tick
	b (Leox;IIF)V renderWidget
	a (Leox;)V drawInvitations
	a (Leiu;Lepi;)V lambda$new$0
	<clinit> ()V <clinit>
eiu$h com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	a this$0
	<init> (Leiu;)V <init>
	a (Leiu$d;)V setSelected
	a ()I getMaxPosition
	b ()I getRowWidth
	a (Lepc$a;)V setSelected
eiu$i com/mojang/realmsclient/RealmsMainScreen$RealmsCall
	request (Leiz;)Ljava/lang/Object; request
eiu$j com/mojang/realmsclient/RealmsMainScreen$ServerEntry
	c SKIN_HEAD_LARGE_WIDTH
	d serverData
	a this$0
	<init> (Leiu;Lejq;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lejq;Leox;IIII)V renderMcoServerItem
	b (Lejq;Leox;IIII)V renderLegacy
	a (Lejq;Leox;IIIIII)V renderStatusLights
	a ()Lsw; getNarration
	b ()Lejq; getServer
eiu$k com/mojang/realmsclient/RealmsMainScreen$TrialEntry
	a this$0
	<init> (Leiu;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Leox;IIIII)V renderTrialItem
	a ()Lsw; getNarration
eiv com/mojang/realmsclient/Unit
	a B
	b KB
	c MB
	d GB
	e BASE_UNIT
	f $VALUES
	values ()[Leiv; values
	valueOf (Ljava/lang/String;)Leiv; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (J)Leiv; getLargest
	a (JLeiv;)D convertTo
	b (J)Ljava/lang/String; humanReadable
	b (JLeiv;)Ljava/lang/String; humanReadable
	a ()[Leiv; $values
	<clinit> ()V <clinit>
eiw com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	<init> ()V <init>
	a (Ljava/lang/String;)J contentLength
	a (Lekg;Ljava/lang/String;Leld$a;Ldyy;)V download
	a ()V cancel
	b ()Z isFinished
	c ()Z isError
	d ()Z isExtracting
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	a (Ljava/lang/String;Ljava/io/File;Ldyy;)V untarGzipArchive
	a (Ljava/io/File;)V deletePlayerTag
	a (Lekg;Leld$a;Ljava/lang/String;Ldyy;)V lambda$download$0
	<clinit> ()V <clinit>
eiw$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	a listener
	<init> (Ljava/io/OutputStream;)V <init>
	a (Ljava/awt/event/ActionListener;)V setListener
	afterWrite (I)V afterWrite
eiw$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
	a this$0
	<init> (Leiw;Ljava/lang/String;Ljava/io/File;Ldyy;Leld$a;)V <init>
	actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
eiw$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	b tempFile
	c downloadStatus
	d worldDownload
	a this$0
	<init> (Leiw;Ljava/io/File;Leld$a;Lekg;)V <init>
	actionPerformed (Ljava/awt/event/ActionEvent;)V actionPerformed
eix com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b MAX_RETRIES
	c UPLOAD_PATH
	d file
	e worldId
	f slotId
	g uploadInfo
	h sessionId
	i username
	j clientVersion
	k uploadStatus
	l cancelled
	m uploadTask
	n requestConfig
	<init> (Ljava/io/File;JILeke;Leoc;Ljava/lang/String;Lejd;)V <init>
	a (Ljava/util/function/Consumer;)V upload
	a ()V cancel
	a (I)Lelv; requestUpload
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/HttpResponse;Lelv$a;)V handleResponse
	a (JI)Z shouldRetry
	b (JI)Lelv; retryUploadAfter
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	b ()Z isFinished
	c ()Lelv; lambda$upload$0
	<clinit> ()V <clinit>
eix$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
	<init> (Ljava/io/InputStream;JLejd;)V <init>
	writeTo (Ljava/io/OutputStream;)V writeTo
eiy com/mojang/realmsclient/client/Ping
	<init> ()V <init>
	a ([Leiy$a;)Ljava/util/List; ping
	a (Ljava/lang/String;)I ping
	b ()J now
	a ()Ljava/util/List; pingAllRegions
eiy$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	values ()[Leiy$a; values
	valueOf (Ljava/lang/String;)Leiy$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V <init>
	a ()[Leiy$a; $values
	<clinit> ()V <clinit>
eiz com/mojang/realmsclient/client/RealmsClient
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f minecraft
	g WORLDS_RESOURCE_PATH
	h INVITES_RESOURCE_PATH
	i MCO_RESOURCE_PATH
	j SUBSCRIPTION_RESOURCE
	k ACTIVITIES_RESOURCE
	l OPS_RESOURCE
	m REGIONS_RESOURCE
	n TRIALS_RESOURCE
	o NOTIFICATIONS_RESOURCE
	p PATH_INITIALIZE
	q PATH_GET_ACTIVTIES
	r PATH_GET_LIVESTATS
	s PATH_GET_SUBSCRIPTION
	t PATH_OP
	u PATH_PUT_INTO_MINIGAMES_MODE
	v PATH_AVAILABLE
	w PATH_TEMPLATES
	x PATH_WORLD_JOIN
	y PATH_WORLD_GET
	z PATH_WORLD_INVITES
	A PATH_WORLD_UNINVITE
	B PATH_PENDING_INVITES_COUNT
	C PATH_PENDING_INVITES
	D PATH_ACCEPT_INVITE
	E PATH_REJECT_INVITE
	F PATH_UNINVITE_MYSELF
	G PATH_WORLD_UPDATE
	H PATH_SLOT
	I PATH_WORLD_OPEN
	J PATH_WORLD_CLOSE
	K PATH_WORLD_RESET
	L PATH_DELETE_WORLD
	M PATH_WORLD_BACKUPS
	N PATH_WORLD_DOWNLOAD
	O PATH_WORLD_UPLOAD
	P PATH_CLIENT_COMPATIBLE
	Q PATH_TOS_AGREED
	R PATH_NEWS
	S PATH_MARK_NOTIFICATIONS_SEEN
	T PATH_DISMISS_NOTIFICATIONS
	U PATH_STAGE_AVAILABLE
	V GSON
	a ()Leiz; create
	a (Lenn;)Leiz; create
	b ()V switchToStage
	c ()V switchToProd
	d ()V switchToLocal
	<init> (Ljava/lang/String;Ljava/lang/String;Lenn;)V <init>
	e ()Lejs; listWorlds
	f ()Ljava/util/List; getNotifications
	c (Ljava/util/List;)Lcom/google/gson/JsonArray; uuidListToJsonArray
	a (Ljava/util/List;)V notificationsSeen
	b (Ljava/util/List;)V notificationsDismiss
	a (J)Lejq; getOwnWorld
	b (J)Lekc; getActivity
	g ()Lejv; getLiveStats
	c (J)Lejr; join
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	h ()Ljava/lang/Boolean; mcoEnabled
	i ()Ljava/lang/Boolean; stageAvailable
	j ()Leiz$a; clientCompatible
	a (JLjava/lang/String;)V uninvite
	d (J)V uninviteMyselfFrom
	b (JLjava/lang/String;)Lejq; invite
	e (J)Lejg; backupsFor
	b (JLjava/lang/String;Ljava/lang/String;)V update
	a (JILejx;)V updateSlot
	a (JI)Z switchSlot
	c (JLjava/lang/String;)V restoreWorld
	a (IILejq$c;)Leki; fetchWorldTemplates
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e (JLjava/lang/String;)Leji; op
	f (JLjava/lang/String;)Leji; deop
	f (J)Ljava/lang/Boolean; open
	g (J)Ljava/lang/Boolean; close
	a (JLemi;)Ljava/lang/Boolean; resetWorldWithSeed
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	h (J)Lekd; subscriptionFor
	k ()I pendingInvitesCount
	l ()Lejk; pendingInvites
	a (Lejj;)Z isBlocked
	a (Ljava/lang/String;)V acceptInvitation
	b (JI)Lekg; requestDownloadInfo
	h (JLjava/lang/String;)Leke; requestUploadInfo
	b (Ljava/lang/String;)V rejectInvitation
	m ()V agreeToTos
	n ()Lejo; getNews
	a (Lejl;)V sendPingResults
	o ()Ljava/lang/Boolean; trialAvailable
	i (J)V deleteWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	a (Lejc;)Ljava/lang/String; execute
	a (I)Ljava/lang/String; getHttpCodeDescription
	a (Leiz$b;)V lambda$create$1
	p ()Ljava/util/Optional; lambda$create$0
	<clinit> ()V <clinit>
eiz$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
	values ()[Leiz$a; values
	valueOf (Ljava/lang/String;)Leiz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leiz$a; $values
	<clinit> ()V <clinit>
eiz$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
	values ()[Leiz$b; values
	valueOf (Ljava/lang/String;)Leiz$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a ()[Leiz$b; $values
	<clinit> ()V <clinit>
eja com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	<init> ()V <init>
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
ejb com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/lang/String;)Lejb; parse
	a ()Ljava/lang/String; getErrorMessage
	b ()I getErrorCode
	<clinit> ()V <clinit>
ejc com/mojang/realmsclient/client/Request
	a connection
	c connected
	b url
	d DEFAULT_READ_TIMEOUT
	e DEFAULT_CONNECT_TIMEOUT
	<init> (Ljava/lang/String;II)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b (Ljava/lang/String;Ljava/lang/String;)Lejc; header
	a ()I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	b ()I responseCode
	c ()Ljava/lang/String; text
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	f ()V dispose
	d ()Lejc; connect
	e ()Lejc; doConnect
	a (Ljava/lang/String;)Lejc; get
	a (Ljava/lang/String;II)Lejc; get
	c (Ljava/lang/String;Ljava/lang/String;)Lejc; post
	a (Ljava/lang/String;Ljava/lang/String;II)Lejc; post
	b (Ljava/lang/String;)Lejc; delete
	d (Ljava/lang/String;Ljava/lang/String;)Lejc; put
	b (Ljava/lang/String;Ljava/lang/String;II)Lejc; put
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
ejc$a com/mojang/realmsclient/client/Request$Delete
	<init> (Ljava/lang/String;II)V <init>
	f ()Lejc$a; doConnect
	e ()Lejc; doConnect
ejc$b com/mojang/realmsclient/client/Request$Get
	<init> (Ljava/lang/String;II)V <init>
	f ()Lejc$b; doConnect
	e ()Lejc; doConnect
ejc$c com/mojang/realmsclient/client/Request$Post
	c content
	<init> (Ljava/lang/String;Ljava/lang/String;II)V <init>
	f ()Lejc$c; doConnect
	e ()Lejc; doConnect
ejc$d com/mojang/realmsclient/client/Request$Put
	c content
	<init> (Ljava/lang/String;Ljava/lang/String;II)V <init>
	f ()Lejc$d; doConnect
	e ()Lejc; doConnect
ejd com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
	<init> ()V <init>
eje com/mojang/realmsclient/client/package-info
ejf com/mojang/realmsclient/dto/Backup
	f LOGGER
	a backupId
	b lastModifiedDate
	c size
	g uploadedVersion
	d metadata
	e changeList
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;)Lejf; parse
	a ()Z isUploadedVersion
	a (Z)V setUploadedVersion
	<clinit> ()V <clinit>
ejg com/mojang/realmsclient/dto/BackupList
	b LOGGER
	a backups
	<init> ()V <init>
	a (Ljava/lang/String;)Lejg; parse
	<clinit> ()V <clinit>
ejh com/mojang/realmsclient/dto/GuardedSerializer
	a gson
	<init> ()V <init>
	a (Lejz;)Ljava/lang/String; toJson
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; toJson
	a (Ljava/lang/String;Ljava/lang/Class;)Lejz; fromJson
eji com/mojang/realmsclient/dto/Ops
	a ops
	<init> ()V <init>
	a (Ljava/lang/String;)Leji; parse
ejj com/mojang/realmsclient/dto/PendingInvite
	f LOGGER
	a invitationId
	b worldName
	c worldOwnerName
	d worldOwnerUuid
	e date
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Lejj; parse
	<clinit> ()V <clinit>
ejk com/mojang/realmsclient/dto/PendingInvitesList
	b LOGGER
	a pendingInvites
	<init> ()V <init>
	a (Ljava/lang/String;)Lejk; parse
	<clinit> ()V <clinit>
ejl com/mojang/realmsclient/dto/PingResult
	a pingResults
	b worldIds
	<init> ()V <init>
ejm com/mojang/realmsclient/dto/PlayerInfo
	a name
	b uuid
	c operator
	d accepted
	e online
	<init> ()V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)V setName
	b ()Ljava/lang/String; getUuid
	b (Ljava/lang/String;)V setUuid
	c ()Z isOperator
	a (Z)V setOperator
	d ()Z getAccepted
	b (Z)V setAccepted
	e ()Z getOnline
	c (Z)V setOnline
ejn com/mojang/realmsclient/dto/RealmsDescriptionDto
	a name
	b description
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
ejo com/mojang/realmsclient/dto/RealmsNews
	b LOGGER
	a newsLink
	<init> ()V <init>
	a (Ljava/lang/String;)Lejo; parse
	<clinit> ()V <clinit>
ejp com/mojang/realmsclient/dto/RealmsNotification
	a LOGGER
	b NOTIFICATION_UUID
	c DISMISSABLE
	d SEEN
	e TYPE
	f VISIT_URL
	g uuid
	h dismissable
	i seen
	j type
	<init> (Ljava/util/UUID;ZZLjava/lang/String;)V <init>
	a ()Z seen
	b ()Z dismissable
	c ()Ljava/util/UUID; uuid
	a (Ljava/lang/String;)Ljava/util/List; parseList
	a (Lcom/google/gson/JsonObject;)Lejp; parse
	<clinit> ()V <clinit>
ejp$a com/mojang/realmsclient/dto/RealmsNotification$VisitUrl
	a URL
	b BUTTON_TEXT
	c MESSAGE
	d url
	e buttonText
	f message
	<init> (Lejp;Ljava/lang/String;Lejw;Lejw;)V <init>
	a (Lejp;Lcom/google/gson/JsonObject;)Lejp$a; parse
	d ()Lsw; getMessage
	a (Leuq;)Lepi; buildOpenLinkButton
ejq com/mojang/realmsclient/dto/RealmsServer
	s LOGGER
	a id
	b remoteSubscriptionId
	c name
	d motd
	e state
	f owner
	g ownerUUID
	h players
	i slots
	j expired
	k expiredTrial
	l daysLeft
	m worldType
	n activeSlot
	o minigameName
	p minigameId
	q minigameImage
	r serverPing
	<init> ()V <init>
	a ()Ljava/lang/String; getDescription
	b ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getMinigameName
	a (Ljava/lang/String;)V setName
	b (Ljava/lang/String;)V setDescription
	a (Leju;)V updateServerPing
	a (Lcom/google/gson/JsonObject;)Lejq; parse
	a (Lejq;)V sortInvited
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parseInvited
	b (Lcom/google/gson/JsonArray;)Ljava/util/Map; parseSlots
	e ()Ljava/util/Map; createEmptySlots
	c (Ljava/lang/String;)Lejq; parse
	e (Ljava/lang/String;)Lejq$b; getState
	f (Ljava/lang/String;)Lejq$c; getWorldType
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Lejq; clone
	a (Ljava/util/Map;)Ljava/util/Map; cloneSlots
	a (I)Ljava/lang/String; getWorldName
	d (Ljava/lang/String;)Lffd; toServerData
	clone ()Ljava/lang/Object; clone
	a (Lejm;Lejm;)I lambda$sortInvited$0
	<clinit> ()V <clinit>
ejq$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	<init> (Ljava/lang/String;)V <init>
	a (Lejq;Lejq;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
ejq$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
	values ()[Lejq$b; values
	valueOf (Ljava/lang/String;)Lejq$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lejq$b; $values
	<clinit> ()V <clinit>
ejq$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	values ()[Lejq$c; values
	valueOf (Ljava/lang/String;)Lejq$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lejq$c; $values
	<clinit> ()V <clinit>
ejr com/mojang/realmsclient/dto/RealmsServerAddress
	d LOGGER
	a address
	b resourcePackUrl
	c resourcePackHash
	<init> ()V <init>
	a (Ljava/lang/String;)Lejr; parse
	<clinit> ()V <clinit>
ejs com/mojang/realmsclient/dto/RealmsServerList
	b LOGGER
	a servers
	<init> ()V <init>
	a (Ljava/lang/String;)Lejs; parse
	<clinit> ()V <clinit>
ejt com/mojang/realmsclient/dto/RealmsServerPing
	a nrOfPlayers
	b playerList
	<init> ()V <init>
eju com/mojang/realmsclient/dto/RealmsServerPlayerList
	c LOGGER
	d JSON_PARSER
	a serverId
	b players
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Leju; parse
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parsePlayers
	<clinit> ()V <clinit>
ejv com/mojang/realmsclient/dto/RealmsServerPlayerLists
	b LOGGER
	a servers
	<init> ()V <init>
	a (Ljava/lang/String;)Lejv; parse
	<clinit> ()V <clinit>
ejw com/mojang/realmsclient/dto/RealmsText
	a TRANSLATION_KEY
	b ARGS
	c translationKey
	d args
	<init> (Ljava/lang/String;[Ljava/lang/Object;)V <init>
	a (Lsw;)Lsw; createComponent
	a (Lcom/google/gson/JsonObject;)Lejw; parse
ejx com/mojang/realmsclient/dto/RealmsWorldOptions
	a pvp
	b spawnAnimals
	c spawnMonsters
	d spawnNPCs
	e spawnProtection
	f commandBlocks
	g forceGameMode
	h difficulty
	i gameMode
	m slotName
	j templateId
	k templateImage
	l empty
	n DEFAULT_FORCE_GAME_MODE
	o DEFAULT_PVP
	p DEFAULT_SPAWN_ANIMALS
	q DEFAULT_SPAWN_MONSTERS
	r DEFAULT_SPAWN_NPCS
	s DEFAULT_SPAWN_PROTECTION
	t DEFAULT_COMMAND_BLOCKS
	u DEFAULT_DIFFICULTY
	v DEFAULT_GAME_MODE
	w DEFAULT_SLOT_NAME
	x DEFAULT_TEMPLATE_ID
	y DEFAULT_TEMPLATE_IMAGE
	<init> (ZZZZIZIIZLjava/lang/String;)V <init>
	a ()Lejx; createDefaults
	b ()Lejx; createEmptyDefaults
	a (Z)V setEmpty
	a (Lcom/google/gson/JsonObject;)Lejx; parse
	a (I)Ljava/lang/String; getSlotName
	b (I)Ljava/lang/String; getDefaultSlotName
	c ()Ljava/lang/String; toJson
	d ()Lejx; clone
	clone ()Ljava/lang/Object; clone
	<clinit> ()V <clinit>
ejy com/mojang/realmsclient/dto/RealmsWorldResetDto
	a seed
	b worldTemplateId
	c levelType
	d generateStructures
	<init> (Ljava/lang/String;JIZ)V <init>
ejz com/mojang/realmsclient/dto/ReflectionBasedSerialization
eka com/mojang/realmsclient/dto/RegionPingResult
	a regionName
	b ping
	<init> (Ljava/lang/String;I)V <init>
	a ()I ping
	toString ()Ljava/lang/String; toString
ekb com/mojang/realmsclient/dto/ServerActivity
	a profileUuid
	b joinTime
	c leaveTime
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Lekb; parse
ekc com/mojang/realmsclient/dto/ServerActivityList
	a periodInMillis
	b serverActivities
	<init> ()V <init>
	a (Ljava/lang/String;)Lekc; parse
ekd com/mojang/realmsclient/dto/Subscription
	d LOGGER
	a startDate
	b daysLeft
	c type
	<init> ()V <init>
	a (Ljava/lang/String;)Lekd; parse
	b (Ljava/lang/String;)Lekd$a; typeFrom
	<clinit> ()V <clinit>
ekd$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
	values ()[Lekd$a; values
	valueOf (Ljava/lang/String;)Lekd$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lekd$a; $values
	<clinit> ()V <clinit>
eke com/mojang/realmsclient/dto/UploadInfo
	a LOGGER
	b DEFAULT_SCHEMA
	c DEFAULT_PORT
	d URI_SCHEMA_PATTERN
	e worldClosed
	f token
	g uploadEndpoint
	<init> (ZLjava/lang/String;Ljava/net/URI;)V <init>
	a (Ljava/lang/String;)Leke; parse
	a (Ljava/lang/String;I)Ljava/net/URI; assembleUri
	a (II)I selectPortOrDefault
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; ensureEndpointSchema
	b (Ljava/lang/String;)Ljava/lang/String; createRequest
	a ()Ljava/lang/String; getToken
	b ()Ljava/net/URI; getUploadEndpoint
	c ()Z isWorldClosed
	<clinit> ()V <clinit>
ekf com/mojang/realmsclient/dto/ValueObject
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/reflect/Field;)Ljava/lang/String; getName
	b (Ljava/lang/reflect/Field;)Z isStatic
ekg com/mojang/realmsclient/dto/WorldDownload
	d LOGGER
	a downloadLink
	b resourcePackUrl
	c resourcePackHash
	<init> ()V <init>
	a (Ljava/lang/String;)Lekg; parse
	<clinit> ()V <clinit>
ekh com/mojang/realmsclient/dto/WorldTemplate
	j LOGGER
	a id
	b name
	c version
	d author
	e link
	f image
	g trailer
	h recommendedPlayers
	i type
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;)Lekh; parse
	<clinit> ()V <clinit>
ekh$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	values ()[Lekh$a; values
	valueOf (Ljava/lang/String;)Lekh$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lekh$a; $values
	<clinit> ()V <clinit>
eki com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	e LOGGER
	a templates
	b page
	c size
	d total
	<init> ()V <init>
	<init> (I)V <init>
	a ()Z isLastPage
	a (Ljava/lang/String;)Leki; parse
	<clinit> ()V <clinit>
ekj com/mojang/realmsclient/dto/package-info
ekk com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
	<init> (Lorg/slf4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
ekl com/mojang/realmsclient/exception/RealmsHttpException
	<init> (Ljava/lang/String;Ljava/lang/Exception;)V <init>
ekm com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b rawResponse
	c realmsError
	<init> (ILjava/lang/String;Lejb;)V <init>
	<init> (ILjava/lang/String;)V <init>
	getMessage ()Ljava/lang/String; getMessage
	a (I)I realmsErrorCodeOrDefault
ekn com/mojang/realmsclient/exception/RetryCallException
	d DEFAULT_DELAY
	e delaySeconds
	<init> (II)V <init>
eko com/mojang/realmsclient/exception/package-info
ekp com/mojang/realmsclient/gui/ErrorCallback
	a (Lsw;)V error
	a (Ljava/lang/String;)V error
ekq com/mojang/realmsclient/gui/RealmsDataFetcher
	a dataFetcher
	b notificationsTask
	c serverListUpdateTask
	d liveStatsTask
	e pendingInvitesTask
	f trialAvailabilityTask
	g newsTask
	h newsManager
	<init> (Leiz;)V <init>
	a (Leiz;)Ljava/util/List; lambda$new$0
ekr com/mojang/realmsclient/gui/RealmsNewsManager
	a newsLocalStorage
	b hasUnreadNews
	c newsLink
	<init> (Lemd;)V <init>
	a ()Z hasUnreadNews
	b ()Ljava/lang/String; newsLink
	a (Lejo;)V updateUnreadNews
	b (Lejo;)Lemd$a; updateNewsStorage
eks com/mojang/realmsclient/gui/RealmsServerList
	a minecraft
	b removedServers
	c servers
	<init> (Lenn;)V <init>
	a (Ljava/util/List;)Ljava/util/List; updateServersList
	a (Lejq;)Ljava/util/List; removeItem
ekt com/mojang/realmsclient/gui/RealmsWorldSlotButton
	a SLOT_FRAME_LOCATION
	b EMPTY_SLOT_LOCATION
	c CHECK_MARK_LOCATION
	d DEFAULT_WORLD_SLOT_1
	e DEFAULT_WORLD_SLOT_2
	f DEFAULT_WORLD_SLOT_3
	A SLOT_ACTIVE_TOOLTIP
	C SWITCH_TO_MINIGAME_SLOT_TOOLTIP
	D SWITCH_TO_WORLD_SLOT_TOOLTIP
	E MINIGAME
	F serverDataProvider
	G toolTipSetter
	H slotIndex
	I state
	<init> (IIIILjava/util/function/Supplier;Ljava/util/function/Consumer;ILepi$c;)V <init>
	a ()Lekt$b; getState
	b ()V tick
	a (Lejq;ZZ)Lekt$a; getAction
	a (Lejq;Ljava/lang/String;ZZLekt$a;)Lcom/mojang/datafixers/util/Pair; getTooltipAndNarration
	b (Leox;IIF)V renderWidget
	a (Leox;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLekt$a;Lsw;)V drawSlotFrame
	a (Leox;II)V renderCheckMark
	<clinit> ()V <clinit>
ekt$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
	values ()[Lekt$a; values
	valueOf (Ljava/lang/String;)Lekt$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lekt$a; $values
	<clinit> ()V <clinit>
ekt$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	d isCurrentlyActiveSlot
	e slotName
	f imageId
	g image
	a empty
	b minigame
	c action
	h actionPrompt
	<init> (ZLjava/lang/String;JLjava/lang/String;ZZLekt$a;Lsw;)V <init>
eku com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	<init> (IIII)V <init>
	a (Leox;IIII)V drawForRowAt
	a (Leox;IIZ)V draw
	a ()I getRight
	b ()I getBottom
	a (I)V onClick
	a (Leox;Ljava/util/List;Lgam;IIII)V drawButtonsInRow
	a (Lgam;Leqc$a;Ljava/util/List;IDD)V rowButtonMouseClicked
ekv com/mojang/realmsclient/gui/package-info
ekw com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	a UNKNOWN
	b lastScreen
	c backup
	G backupInfoList
	<init> (Leuq;Lejf;)V <init>
	f ()V tick
	b ()V init
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Ljava/lang/String;Ljava/lang/String;)Lsw; checkForSpecificMetadata
	a (Ljava/lang/String;)Lsw; gameDifficultyMetadata
	b (Ljava/lang/String;)Lsw; gameModeMetadata
	a (Lepi;)V lambda$init$0
	a (Lekw;)Leov; access$000
	b (Lekw;)Leov; access$100
	<clinit> ()V <clinit>
ekw$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
	a this$0
	<init> (Lekw;Lenn;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$new$0
ekw$b com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry
	b TEMPLATE_NAME
	c GAME_DIFFICULTY
	d NAME
	e GAME_SERVER_VERSION
	f UPLOADED
	g ENABLED_PACK
	h DESCRIPTION
	i GAME_MODE
	j SEED
	k WORLD_TYPE
	l UNDEFINED
	m key
	n value
	a this$0
	<init> (Lekw;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Ljava/lang/String;)Lsw; translateKey
	a ()Lsw; getNarration
	<clinit> ()V <clinit>
ekx com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	a LOGGER
	b PLUS_ICON_LOCATION
	c RESTORE_ICON_LOCATION
	G RESTORE_TOOLTIP
	H HAS_CHANGES_TOOLTIP
	I TITLE
	J NO_BACKUPS_LABEL
	K lastScreen
	L backups
	M backupObjectSelectionList
	N selectedBackup
	O slotId
	P downloadButton
	Q restoreButton
	R changesButton
	S noBackups
	T serverData
	U UPLOADED_KEY
	<init> (Lela;Lejq;I)V <init>
	b ()V init
	B ()V updateButtonStates
	C ()Z shouldChangesButtonBeVisible
	D ()Z shouldRestoreButtonBeVisible
	a (III)Z keyPressed
	a (I)V restoreClicked
	E ()V downloadClicked
	F ()V downloadWorldData
	G ()V restore
	a (Leox;IIF)V render
	c (Z)V lambda$downloadClicked$5
	e (Z)V lambda$restoreClicked$4
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Lepi;)V lambda$init$1
	d (Lepi;)V lambda$init$0
	a (Lekx;)Lenn; access$000
	b (Lekx;)Leov; access$100
	c (Lekx;)Leov; access$200
	d (Lekx;)Lenn; access$300
	<clinit> ()V <clinit>
ekx$1 com/mojang/realmsclient/gui/screens/RealmsBackupScreen$1
	a this$0
	<init> (Lekx;Ljava/lang/String;)V <init>
	run ()V run
	a (Ljava/util/List;)V lambda$run$0
ekx$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a this$0
	<init> (Lekx;)V <init>
	a (Lejf;)V addEntry
	b ()I getRowWidth
	a ()I getMaxPosition
	a (Leox;)V renderBackground
	c ()I getScrollbarPosition
	a (I)V selectItem
	b (I)V selectInviteListItem
	a (Lekx$b;)V setSelected
	a (Lepc$a;)V setSelected
ekx$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry
	b Y_PADDING
	c X_PADDING
	d backup
	e children
	f restoreButton
	g changesButton
	a this$0
	<init> (Lekx;Lejf;)V <init>
	a (Lejf;)V populateChangeList
	a (Ljava/lang/String;)V addToChangeList
	b ()V addChangesButton
	d ()V addRestoreButton
	a (DDI)Z mouseClicked
	a (Leox;IIIIIIIZF)V render
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	a ()Lsw; getNarration
	a (ILeox;IIFLepf;)V lambda$render$2
	a (Lepi;)V lambda$addRestoreButton$1
	b (Lepi;)V lambda$addChangesButton$0
eky com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	a LOGGER
	b DEFAULT_BUTTON_WIDTH
	c lastScreen
	G mainScreen
	H serverData
	I serverId
	J message
	K leftX
	L rightX
	M slotsThatHasBeenDownloaded
	N animTick
	<init> (Leuq;Leiu;JZ)V <init>
	b ()V init
	au_ ()Lsw; getNarrationMessage
	B ()V addButtons
	f ()V tick
	a (Leox;IIF)V render
	a (I)I getFramePositionX
	a (III)Z keyPressed
	C ()V backButtonClicked
	a (J)V fetchServerData
	c ()V doSwitchOrReset
	b (I)V downloadWorld
	D ()Z isMinigame
	a (Leox;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	a (IZ)V lambda$downloadWorld$12
	E ()V lambda$doSwitchOrReset$11
	F ()V lambda$doSwitchOrReset$10
	a (Lejq;)V lambda$doSwitchOrReset$9
	G ()V lambda$doSwitchOrReset$8
	b (J)V lambda$fetchServerData$7
	a (ILepi;)V lambda$addButtons$6
	H ()V lambda$addButtons$5
	b (ILepi;)V lambda$addButtons$4
	b (IZ)V lambda$addButtons$3
	c (ILepi;)V lambda$addButtons$2
	I ()V lambda$addButtons$1
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ekz com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a INCOMPATIBLE_TITLE
	b INCOMPATIBLE_MESSAGES_SNAPSHOT
	c INCOMPATIBLE_MESSAGES
	G lastScreen
	<init> (Leuq;)V <init>
	b ()V init
	a (Leox;IIF)V render
	B ()[Lsw; getMessages
	a (III)Z keyPressed
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ela com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	a LOGGER
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	G EXPIRED_ICON_LOCATION
	H EXPIRES_SOON_ICON_LOCATION
	I WORLD_LIST_TITLE
	J TITLE
	K SERVER_EXPIRED_TOOLTIP
	L SERVER_EXPIRING_SOON_TOOLTIP
	M SERVER_EXPIRING_IN_DAY_TOOLTIP
	N SERVER_OPEN_TOOLTIP
	O SERVER_CLOSED_TOOLTIP
	P DEFAULT_BUTTON_WIDTH
	Q DEFAULT_BUTTON_OFFSET
	R toolTip
	S lastScreen
	T serverData
	U serverId
	V leftX
	W rightX
	X playersButton
	Y settingsButton
	Z subscriptionButton
	aa optionsButton
	ab backupButton
	ac resetWorldButton
	ad switchMinigameButton
	ae stateChanged
	af animTick
	ag clicks
	ah slotButtonList
	<init> (Leiu;J)V <init>
	b ()V init
	a (I)Lekt; addSlotButton
	b (I)I leftButton
	a (II)I centerButton
	f ()V tick
	a (Leox;IIF)V render
	c (I)I frame
	a (III)Z keyPressed
	B ()V backButtonClicked
	a (J)V fetchServerData
	C ()V disableButtons
	a (Lejq;)V joinRealm
	D ()V switchToMinigame
	a (ILejq;)V switchToFullSlot
	b (ILejq;)V switchToEmptySlot
	a (Leox;Lsw;II)V renderMousehoverTooltip
	a (Leox;IIII)V drawServerStatus
	b (Leox;IIII)V drawExpired
	a (Leox;IIIII)V drawExpiring
	c (Leox;IIII)V drawOpen
	d (Leox;IIII)V drawClose
	E ()Z isMinigame
	F ()V hideRegularButtons
	a (Lepi;)V hide
	b (Lepi;)V show
	G ()V hideMinigameButtons
	a (Lejx;)V saveSlotSettings
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (ZLeuq;)V openTheWorld
	a (Leuq;)V closeTheWorld
	c ()V stateChanged
	a (Lekh;)V templateSelectionCallback
	d ()Lela; getNewScreen
	a (Lejq;IZ)V lambda$switchToEmptySlot$23
	H ()V lambda$switchToEmptySlot$22
	I ()V lambda$switchToEmptySlot$21
	J ()V lambda$switchToEmptySlot$20
	b (Lejq;IZ)V lambda$switchToFullSlot$19
	K ()V lambda$switchToFullSlot$18
	L ()V lambda$switchToFullSlot$17
	b (J)V lambda$fetchServerData$16
	a (Lekm;)V lambda$fetchServerData$15
	b (Lejq;)V lambda$fetchServerData$14
	a (ILepi;)V lambda$addSlotButton$13
	a (Lsw;)V lambda$addSlotButton$12
	M ()Lejq; lambda$addSlotButton$11
	c (Lepi;)V lambda$init$10
	d (Lepi;)V lambda$init$9
	N ()V lambda$init$8
	O ()V lambda$init$7
	P ()V lambda$init$6
	e (Lepi;)V lambda$init$5
	f (Lepi;)V lambda$init$4
	g (Lepi;)V lambda$init$3
	h (Lepi;)V lambda$init$2
	i (Lepi;)V lambda$init$1
	j (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ela$1 com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen$1
	a $SwitchMap$com$mojang$realmsclient$gui$RealmsWorldSlotButton$Action
	<clinit> ()V <clinit>
elb com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a callback
	b title1
	c title2
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
elc com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c server
	G lastScreen
	H nameBox
	I descriptionBox
	J createButton
	<init> (Lejq;Leiu;)V <init>
	f ()V tick
	b ()V init
	a (CI)Z charTyped
	a (III)Z keyPressed
	B ()V createWorld
	C ()Z valid
	a (Leox;IIF)V render
	D ()V lambda$createWorld$4
	E ()V lambda$createWorld$3
	F ()V lambda$createWorld$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eld com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	a LOGGER
	b DOWNLOAD_LOCK
	c BAR_WIDTH
	G BAR_TOP
	H BAR_BOTTOM
	I BAR_BORDER
	J lastScreen
	K worldDownload
	L downloadTitle
	M narrationRateLimiter
	N cancelButton
	O worldName
	P downloadStatus
	Q errorMessage
	R status
	S progress
	T cancelled
	U showDots
	V finished
	W extracting
	X previousWrittenBytes
	Y previousTimeSnapshot
	Z bytesPersSecond
	aa animTick
	ab DOTS
	ac dotIndex
	ad checked
	ae callback
	<init> (Leuq;Lekg;Ljava/lang/String;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V <init>
	b ()V init
	B ()V checkDownloadSize
	a (Ljava/lang/String;)J getContentLength
	f ()V tick
	C ()Lsw; createProgressNarrationMessage
	a (III)Z keyPressed
	D ()V backButtonClicked
	a (Leox;IIF)V render
	c (Leox;)V drawDots
	d (Leox;)V drawProgressBar
	e (Leox;)V drawDownloadSpeed
	a (Leox;J)V drawDownloadSpeed0
	E ()V downloadSave
	F ()V downloadCancelled
	G ()V lambda$downloadSave$2
	c (Z)V lambda$checkDownloadSize$1
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eld$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
	<init> ()V <init>
ele com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b lines
	c line2Split
	<init> (Lekm;Leuq;)V <init>
	<init> (Lsw;Leuq;)V <init>
	<init> (Lsw;Lsw;Leuq;)V <init>
	a (Lekm;)Lele$a; errorMessage
	a (Lsw;)Lele$a; errorMessage
	a (Lsw;Lsw;)Lele$a; errorMessage
	b ()V init
	au_ ()Lsw; getNarrationMessage
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$0
ele$a com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage
	a title
	b detail
	<init> (Lsw;Lsw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; title
	b ()Lsw; detail
elf com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	a LOGGER
	b NAME_LABEL
	c INVITING_PLAYER_TEXT
	G NO_SUCH_PLAYER_ERROR_TEXT
	H profileName
	I inviteButton
	J serverData
	K configureScreen
	L lastScreen
	M message
	<init> (Lela;Leuq;Lejq;)V <init>
	f ()V tick
	b ()V init
	B ()V onInvite
	a (Lsw;)V showMessage
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Lejq;)V lambda$onInvite$6
	a (JLjava/lang/String;)Lejq; lambda$onInvite$5
	a (Lepi;)V lambda$init$4
	b (Lepi;)V lambda$init$3
	b (Lts;)Lts; lambda$static$2
	c (Lts;)Lts; lambda$static$1
	d (Lts;)Lts; lambda$static$0
	<clinit> ()V <clinit>
elg com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	b WARNING
	c INFO
	G type
	H line2
	I line3
	a callback
	J yesNoQuestion
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lelg$a;Lsw;Lsw;Z)V <init>
	b ()V init
	au_ ()Lsw; getNarrationMessage
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
elg$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a WARNING
	b INFO
	c colorCode
	d text
	e $VALUES
	values ()[Lelg$a; values
	valueOf (Ljava/lang/String;)Lelg$a; valueOf
	<init> (Ljava/lang/String;ILsw;I)V <init>
	a ()[Lelg$a; $values
	<clinit> ()V <clinit>
elh com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	b REPEATED_NARRATOR
	c LOGGER
	G lastScreen
	H title
	I errorMessage
	J aborted
	K animTicks
	L task
	M buttonLength
	N cancelOrBackButton
	a SYMBOLS
	<init> (Leuq;Lemo;)V <init>
	f ()V tick
	a (III)Z keyPressed
	b ()V init
	B ()V cancelOrBackButtonClicked
	a (Leox;IIF)V render
	a (Lsw;)V error
	b (Lsw;)V setTitle
	c ()Z aborted
	C ()V lambda$error$2
	a (Lepi;)V lambda$error$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eli com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	a INVITE_ICON_LOCATION
	b TRIAL_ICON_LOCATION
	c NEWS_ICON_LOCATION
	G UNSEEN_NOTIFICATION_ICON_LOCATION
	H realmsDataSubscription
	I currentConfiguration
	J numberOfPendingInvites
	K checkedMcoAvailability
	L trialAvailable
	M validClient
	N hasUnreadNews
	O hasUnseenNotifications
	P showAll
	Q onlyNotifications
	<init> ()V <init>
	b ()V init
	ay_ ()V added
	B ()Leli$a; getConfiguration
	f ()V tick
	C ()Z getRealmsNotificationsEnabled
	D ()Z inTitleScreen
	E ()V checkIfMcoEnabled
	a (Leox;IIF)V render
	a (Leox;II)V drawIcons
	a (Lekq;Lelx$c;)V addNewsAndInvitesSubscriptions
	b (Lekq;Lelx$c;)V addNotificationsSubscriptions
	c (Ljava/util/List;)V lambda$addNotificationsSubscriptions$3
	a (Lekq;Lejo;)V lambda$addNewsAndInvitesSubscriptions$2
	a (Ljava/lang/Boolean;)V lambda$addNewsAndInvitesSubscriptions$1
	a (Ljava/lang/Integer;)V lambda$addNewsAndInvitesSubscriptions$0
	<clinit> ()V <clinit>
eli$1 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$1
	a this$0
	<init> (Leli;Ljava/lang/String;)V <init>
	run ()V run
eli$2 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$2
	a this$0
	<init> (Leli;)V <init>
	a (Lekq;)Lelx$c; initDataFetcher
	a ()Z showOldNotifications
eli$3 com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$3
	a this$0
	<init> (Leli;)V <init>
	a (Lekq;)Lelx$c; initDataFetcher
	a ()Z showOldNotifications
eli$a com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration
	a (Lekq;)Lelx$c; initDataFetcher
	a ()Z showOldNotifications
elj com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a MESSAGE
	b nextScreen
	c messageLines
	<init> (Leuq;)V <init>
	b ()V init
	au_ ()Lsw; getNarrationMessage
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
elk com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	a LOGGER
	b ACCEPT_ICON_LOCATION
	c REJECT_ICON_LOCATION
	G NO_PENDING_INVITES_TEXT
	H ACCEPT_INVITE_TOOLTIP
	I REJECT_INVITE_TOOLTIP
	J lastScreen
	K toolTip
	L loaded
	M pendingInvitationSelectionList
	N selectedInvite
	O acceptButton
	P rejectButton
	<init> (Leuq;Lsw;)V <init>
	b ()V init
	a (III)Z keyPressed
	a (I)V updateList
	b (I)V reject
	c (I)V accept
	a (Leox;IIF)V render
	a (Leox;Lsw;II)V renderMousehoverTooltip
	B ()V updateButtonStates
	i (I)Z shouldAcceptAndRejectButtonBeVisible
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	a (Lelk;)Lenn; access$000
	b (Lelk;)Lenn; access$100
	c (Lelk;)Lenn; access$200
	d (Lelk;)Leov; access$300
	e (Lelk;)Leov; access$400
	f (Lelk;)Leov; access$500
	<clinit> ()V <clinit>
elk$1 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$1
	a this$0
	<init> (Lelk;Ljava/lang/String;)V <init>
	run ()V run
	a (Ljava/util/List;)V lambda$run$1
	a (Lejj;)Lelk$a; lambda$run$0
elk$2 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$2
	a val$slot
	b this$0
	<init> (Lelk;Ljava/lang/String;I)V <init>
	run ()V run
	a (I)V lambda$run$0
elk$3 com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$3
	a val$slot
	b this$0
	<init> (Lelk;Ljava/lang/String;I)V <init>
	run ()V run
	a (I)V lambda$run$0
elk$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry
	b TEXT_LEFT
	c pendingInvite
	d rowButtons
	a this$0
	<init> (Lelk;Lejj;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Leox;Lejj;IIII)V renderPendingInvitationItem
	a ()Lsw; getNarration
elk$a$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton
	e this$1
	<init> (Lelk$a;)V <init>
	a (Leox;IIZ)V draw
	a (I)V onClick
elk$a$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton
	e this$1
	<init> (Lelk$a;)V <init>
	a (Leox;IIZ)V draw
	a (I)V onClick
elk$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a this$0
	<init> (Lelk;)V <init>
	b (I)V removeAtIndex
	a ()I getMaxPosition
	b ()I getRowWidth
	a (Leox;)V renderBackground
	a (I)V selectItem
	c (I)V selectInviteListItem
	a (Lelk$a;)V setSelected
	a (Lepc$a;)V setSelected
ell com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	a LOGGER
	b OP_ICON_LOCATION
	c USER_ICON_LOCATION
	G CROSS_ICON_LOCATION
	H OPTIONS_BACKGROUND
	I QUESTION_TITLE
	J NORMAL_USER_TOOLTIP
	K OP_TOOLTIP
	L REMOVE_ENTRY_TOOLTIP
	M NO_ENTRY_SELECTED
	N lastScreen
	O serverData
	P invitedObjectSelectionList
	Q column1X
	R columnWidth
	S removeButton
	T opdeopButton
	U playerIndex
	V stateChanged
	<init> (Lela;Lejq;)V <init>
	b ()V init
	B ()V updateButtonStates
	i (I)Z shouldRemoveAndOpdeopButtonBeVisible
	a (III)Z keyPressed
	C ()V backButtonClicked
	j (I)V op
	k (I)V deop
	a (Leji;)V updateOps
	l (I)V uninvite
	a (Leox;IIF)V render
	a (Lejm;Z)V lambda$uninvite$4
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Lepi;)V lambda$init$1
	d (Lepi;)V lambda$init$0
	a (I)I access$000
	b (I)I access$100
	c (I)I access$200
	a (Lell;)Leov; access$300
	<clinit> ()V <clinit>
ell$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry
	b X_OFFSET
	c Y_PADDING
	d BUTTON_WIDTH
	e BUTTON_HEIGHT
	f playerInfo
	g children
	h removeButton
	i makeOpButton
	j removeOpButton
	a this$0
	<init> (Lell;Lejm;)V <init>
	b ()V updateButtons
	a (DDI)Z mouseClicked
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
	a (ILeox;IIFLepf;)V lambda$render$3
	a (ILepi;)V lambda$new$2
	b (ILepi;)V lambda$new$1
	c (ILepi;)V lambda$new$0
ell$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a this$0
	<init> (Lell;)V <init>
	d ()V updateButtons
	a (Lejm;)V addEntry
	b ()I getRowWidth
	a (I)V selectItem
	b (I)V selectInviteListItem
	a (Lell$a;)V setSelected
	a (Leox;)V renderBackground
	c ()I getScrollbarPosition
	a ()I getMaxPosition
	a (Lepc$a;)V setSelected
elm com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	a SEED_LABEL
	b callback
	c seedEdit
	G levelType
	H generateStructures
	I buttonTitle
	<init> (Ljava/util/function/Consumer;Lsw;)V <init>
	f ()V tick
	b ()V init
	aw_ ()V onClose
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$1
	a (Lepp;Lemc;)V lambda$init$0
	<clinit> ()V <clinit>
eln com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	b LOGGER
	c lastScreen
	G serverData
	H subtitle
	I buttonTitle
	J subtitleColor
	K SLOT_FRAME_LOCATION
	L UPLOAD_LOCATION
	M ADVENTURE_MAP_LOCATION
	N SURVIVAL_SPAWN_LOCATION
	O NEW_WORLD_LOCATION
	P EXPERIENCE_LOCATION
	Q INSPIRATION_LOCATION
	R templates
	S adventuremaps
	T experiences
	U inspirations
	a slot
	V resetTitle
	W resetWorldRunnable
	X callback
	<init> (Leuq;Lejq;Lsw;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	<init> (Leuq;Lejq;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	<init> (Leuq;Lejq;Lsw;Lsw;ILsw;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a (I)V setSlot
	a (Lsw;)V setResetTitle
	b ()V init
	au_ ()Lsw; getNarrationMessage
	a (III)Z keyPressed
	b (I)I frame
	a (Leox;IIF)V render
	a (Leox;IILsw;Lacq;ZZ)V drawFrame
	a (Lemo;)V startTask
	a (Ljava/lang/Runnable;)V switchSlot
	a (Lekh;)V templateSelectionCallback
	a (Lemi;)V generationSelectionCallback
	b (Ljava/lang/Runnable;)V resetWorld
	b (Lemi;)V lambda$generationSelectionCallback$9
	b (Lekh;)V lambda$templateSelectionCallback$8
	c (Ljava/lang/Runnable;)V lambda$switchSlot$7
	a (Lepi;)V lambda$init$6
	b (Lepi;)V lambda$init$5
	c (Lepi;)V lambda$init$4
	d (Lepi;)V lambda$init$3
	e (Lepi;)V lambda$init$2
	f (Lepi;)V lambda$init$1
	g (Lepi;)V lambda$init$0
	a (Leln;)Lenn; access$000
	<clinit> ()V <clinit>
eln$1 com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$1
	a this$0
	<init> (Leln;Ljava/lang/String;)V <init>
	run ()V run
	a (Leki;Leki;Leki;Leki;)V lambda$run$0
eln$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	b image
	a this$0
	<init> (Leln;IILsw;Lacq;Lepi$c;)V <init>
	b (Leox;IIF)V renderWidget
elo com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	a LOGGER
	b UNABLE_TO_LOAD_WORLD
	c WORLD_TEXT
	G HARDCORE_TEXT
	H CHEATS_TEXT
	I DATE_FORMAT
	J lastScreen
	K worldId
	L slotId
	M uploadButton
	N levelList
	O selectedWorld
	P worldSelectionList
	Q callback
	<init> (JILeln;Ljava/lang/Runnable;)V <init>
	B ()V loadLevelList
	b ()V init
	au_ ()Lsw; getNarrationMessage
	C ()V upload
	a (Leox;IIF)V render
	a (III)Z keyPressed
	a (Ldyz;)Lsw; gameModeName
	b (Ldyz;)Ljava/lang/String; formatLastPlayed
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Ldyz;)Z lambda$loadLevelList$1
	b (Lts;)Lts; lambda$static$0
	a (I)I access$000
	a (Lelo;)Leov; access$100
	b (Lelo;)Leov; access$200
	c (Lelo;)Leov; access$300
	<clinit> ()V <clinit>
elo$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry
	b levelSummary
	c name
	d id
	e info
	a this$0
	<init> (Lelo;Ldyz;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	a (Leox;III)V renderItem
	a ()Lsw; getNarration
elo$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a this$0
	<init> (Lelo;)V <init>
	a (Ldyz;)V addEntry
	a ()I getMaxPosition
	a (Leox;)V renderBackground
	a (Lelo$a;)V setSelected
	a (Lepc$a;)V setSelected
elp com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	a LOGGER
	b LINK_ICON
	c TRAILER_ICON
	G SLOT_FRAME_LOCATION
	H PUBLISHER_LINK_TOOLTIP
	I TRAILER_LINK_TOOLTIP
	J callback
	K worldTemplateObjectSelectionList
	L selectedTemplate
	M selectButton
	N trailerButton
	O publisherButton
	P toolTip
	Q currentLink
	R worldType
	S clicks
	T warning
	U warningURL
	V displayWarning
	W hoverWarning
	X noTemplatesMessage
	<init> (Lsw;Ljava/util/function/Consumer;Lejq$c;)V <init>
	<init> (Lsw;Ljava/util/function/Consumer;Lejq$c;Leki;)V <init>
	a ([Lsw;)V setWarning
	a (DDI)Z mouseClicked
	b ()V init
	au_ ()Lsw; getNarrationMessage
	B ()V updateButtonStates
	C ()Z shouldSelectButtonBeActive
	D ()Z shouldPublisherBeVisible
	E ()Lekh; getSelectedTemplate
	F ()Z shouldTrailerBeVisible
	f ()V tick
	aw_ ()V onClose
	G ()V selectTemplate
	H ()Z hasValidTemplate
	I ()V onTrailer
	J ()V onPublish
	a (Leki;)V fetchTemplatesAsync
	a (Leki;Leiz;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Leox;IIF)V render
	a (Leox;IILjava/util/List;)V renderMultilineMessage
	a (Leox;Lsw;II)V renderMousehoverTooltip
	a (Lemg$b;)I lambda$renderMultilineMessage$4
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Lepi;)V lambda$init$1
	d (Lepi;)V lambda$init$0
	a (Lelp;)Lenn; access$000
	a (I)I access$100
	b (Lelp;)Leov; access$200
	c (Lelp;)Leov; access$300
	d (Lelp;)Leov; access$400
	e (Lelp;)Leov; access$500
	f (Lelp;)Leov; access$600
	g (Lelp;)Leov; access$700
	<clinit> ()V <clinit>
elp$1 com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$1
	a val$startPage
	b this$0
	<init> (Lelp;Ljava/lang/String;Leki;)V <init>
	run ()V run
	a (Lcom/mojang/datafixers/util/Either;)Leki; lambda$run$0
elp$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry
	b template
	a this$0
	<init> (Lelp;Lekh;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Leox;Lekh;IIII)V renderWorldTemplateItem
	a (Leox;IIIILekh;)V drawImage
	a (Leox;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a ()Lsw; getNarration
elp$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a this$0
	<init> (Lelp;)V <init>
	<init> (Lelp;Ljava/lang/Iterable;)V <init>
	a (Lekh;)V addEntry
	a (DDI)Z mouseClicked
	a (Lelp$a;)V setSelected
	a ()I getMaxPosition
	b ()I getRowWidth
	a (Leox;)V renderBackground
	d ()Z isEmpty
	b (I)Lekh; get
	e ()Ljava/util/List; getTemplates
	a (Lepc$a;)V setSelected
	b (Lelp$a;)Lekh; lambda$getTemplates$0
elq com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	a COMPONENT_WIDTH
	b NAME_LABEL
	c DESCRIPTION_LABEL
	G configureWorldScreen
	H serverData
	I doneButton
	J descEdit
	K nameEdit
	<init> (Lela;Lejq;)V <init>
	f ()V tick
	b ()V init
	a (III)Z keyPressed
	a (Leox;IIF)V render
	e ()V save
	a (Lepi;)V lambda$init$3
	c (Z)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
elr com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	G DEFAULT_DIFFICULTY
	a DIFFICULTIES
	H DEFAULT_GAME_MODE
	b GAME_MODES
	I NAME_LABEL
	J SPAWN_PROTECTION_TEXT
	K SPAWN_WARNING_TITLE
	L nameEdit
	c parent
	M column1X
	N columnWidth
	O options
	P worldType
	Q difficulty
	R gameMode
	S defaultSlotName
	T worldName
	U pvp
	V spawnNPCs
	W spawnAnimals
	X spawnMonsters
	Y spawnProtection
	Z commandBlocks
	aa forceGameMode
	ab spawnProtectionButton
	<init> (Lela;Lejx;Lejq$c;I)V <init>
	f ()V tick
	a (III)Z keyPressed
	a (Ljava/util/List;II)Ljava/lang/Object; findByIndex
	a (Ljava/util/List;Ljava/lang/Object;I)I findIndex
	b ()V init
	a (Lsw;Ljava/util/function/Consumer;)Lepp$b; confirmDangerousOption
	au_ ()Lsw; getNarrationMessage
	a (Leox;IIF)V render
	a (Ljava/lang/String;)V setWorldName
	B ()V saveSettings
	a (Ljava/util/function/Consumer;Lsw;Lepp;Ljava/lang/Boolean;)V lambda$confirmDangerousOption$11
	a (Ljava/util/function/Consumer;Z)V lambda$confirmDangerousOption$10
	a (Lepi;)V lambda$init$9
	b (Lepi;)V lambda$init$8
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$7
	b (Lepp;Ljava/lang/Boolean;)V lambda$init$6
	a (Ljava/lang/Boolean;)V lambda$init$5
	a (Lepp;Lepp;Lbdu;)V lambda$init$4
	b (Ljava/lang/Boolean;)V lambda$init$3
	c (Ljava/lang/Boolean;)V lambda$init$2
	a (Lepp;Lcmj;)V lambda$init$1
	c (Lepp;Ljava/lang/Boolean;)V lambda$init$0
	<clinit> ()V <clinit>
elr$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	h minValue
	i maxValue
	a this$0
	<init> (Lelr;IIIIFF)V <init>
	a ()V applyValue
	b ()V updateMessage
	a (DD)V onClick
	b (DD)V onRelease
els com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	a LOGGER
	b SUBSCRIPTION_TITLE
	c SUBSCRIPTION_START_LABEL
	G TIME_LEFT_LABEL
	H DAYS_LEFT_LABEL
	I SUBSCRIPTION_EXPIRED_TEXT
	J SUBSCRIPTION_LESS_THAN_A_DAY_TEXT
	K UNKNOWN
	L RECURRING_INFO
	M lastScreen
	N serverData
	O mainScreen
	P daysLeft
	Q startDate
	R type
	<init> (Leuq;Lejq;Leuq;)V <init>
	b ()V init
	au_ ()Lsw; getNarrationMessage
	c (Z)V deleteRealm
	a (J)V getSubscription
	b (J)Lsw; localPresentation
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (I)Lsw; daysLeftPresentation
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	a (Lels;)Lenn; access$000
	b (Lels;)Lenn; access$100
	<clinit> ()V <clinit>
els$1 com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen$1
	a this$0
	<init> (Lels;Ljava/lang/String;)V <init>
	run ()V run
	a ()V lambda$run$0
elt com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	a LOGGER
	b TITLE
	c TERMS_STATIC_TEXT
	G TERMS_LINK_TEXT
	H lastScreen
	I mainScreen
	J realmsServer
	K onLink
	<init> (Leuq;Leiu;Lejq;)V <init>
	b ()V init
	a (III)Z keyPressed
	B ()V agreedToTos
	a (DDI)Z mouseClicked
	au_ ()Lsw; getNarrationMessage
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
elu com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	a LOGGER
	b UPLOAD_LOCK
	c BAR_WIDTH
	G BAR_TOP
	H BAR_BOTTOM
	I BAR_BORDER
	J DOTS
	K VERIFYING_TEXT
	L lastScreen
	M selectedLevel
	N worldId
	O slotId
	P uploadStatus
	Q narrationRateLimiter
	R errorMessage
	S status
	T progress
	U cancelled
	V uploadFinished
	W showDots
	X uploadStarted
	Y backButton
	Z cancelButton
	aa tickCount
	ab previousWrittenBytes
	ac previousTimeSnapshot
	ad bytesPersSecond
	ae callback
	<init> (JILeln;Ldyz;Ljava/lang/Runnable;)V <init>
	b ()V init
	B ()V onBack
	C ()V onCancel
	a (III)Z keyPressed
	a (Leox;IIF)V render
	c (Leox;)V drawDots
	d (Leox;)V drawProgressBar
	e (Leox;)V drawUploadSpeed
	a (Leox;J)V drawUploadSpeed0
	f ()V tick
	D ()Lsw; createProgressNarrationMessage
	E ()V upload
	a ([Lsw;)V setErrorMessage
	F ()V uploadCancelled
	a (Ljava/io/File;)Z verify
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	G ()V lambda$upload$4
	a (JLelv;)V lambda$upload$3
	H ()V lambda$init$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
elv com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
	<init> (ILjava/lang/String;)V <init>
elv$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	<init> ()V <init>
	a (I)Lelv$a; withStatusCode
	a (Ljava/lang/String;)Lelv$a; withErrorMessage
	a ()Lelv; build
elw com/mojang/realmsclient/gui/screens/package-info
elx com/mojang/realmsclient/gui/task/DataFetcher
	a LOGGER
	b executor
	c resolution
	d timeSource
	<init> (Ljava/util/concurrent/Executor;Ljava/util/concurrent/TimeUnit;Lapv;)V <init>
	a (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Lely;)Lelx$e; createTask
	a ()Lelx$c; createSubscription
	<clinit> ()V <clinit>
elx$a com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult
	a value
	b time
	<init> (Lcom/mojang/datafixers/util/Either;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcom/mojang/datafixers/util/Either; value
	b ()J time
elx$b com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask
	b task
	c output
	d lastCheckTime
	a this$0
	<init> (Lelx;Lelx$e;Ljava/util/function/Consumer;)V <init>
	a (J)V update
	a ()V runCallbackIfNeeded
	b ()V runCallback
	c ()V reset
elx$c com/mojang/realmsclient/gui/task/DataFetcher$Subscription
	b subscriptions
	a this$0
	<init> (Lelx;)V <init>
	a (Lelx$e;Ljava/util/function/Consumer;)V subscribe
	a ()V forceUpdate
	b ()V tick
	c ()V reset
elx$d com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult
	a value
	b time
	<init> (Ljava/lang/Object;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; value
	b ()J time
elx$e com/mojang/realmsclient/gui/task/DataFetcher$Task
	b id
	c updater
	d period
	e repeatStrategy
	f pendingTask
	g lastResult
	h nextUpdate
	a this$0
	<init> (Lelx;Ljava/lang/String;Ljava/util/concurrent/Callable;JLely;)V <init>
	a (J)V updateIfNeeded
	a ()V reset
	b ()Lelx$a; lambda$updateIfNeeded$2
	a (JLjava/lang/Exception;)V lambda$updateIfNeeded$1
	a (JLjava/lang/Object;)V lambda$updateIfNeeded$0
ely com/mojang/realmsclient/gui/task/RepeatedDelayStrategy
	a CONSTANT
	a ()J delayCyclesAfterSuccess
	b ()J delayCyclesAfterFailure
	a (I)Lely; exponentialBackoff
	<clinit> ()V <clinit>
ely$1 com/mojang/realmsclient/gui/task/RepeatedDelayStrategy$1
	<init> ()V <init>
	a ()J delayCyclesAfterSuccess
	b ()J delayCyclesAfterFailure
ely$2 com/mojang/realmsclient/gui/task/RepeatedDelayStrategy$2
	c LOGGER
	d failureCount
	b val$maxBackoff
	<init> (I)V <init>
	a ()J delayCyclesAfterSuccess
	b ()J delayCyclesAfterFailure
	<clinit> ()V <clinit>
elz com/mojang/realmsclient/gui/task/package-info
ema com/mojang/realmsclient/package-info
emb com/mojang/realmsclient/util/JsonUtils
	<init> ()V <init>
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; getRequired
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/lang/String; getRequiredString
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/UUID;)Ljava/util/UUID; getUuidOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
	b (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
emc com/mojang/realmsclient/util/LevelType
	a DEFAULT
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e index
	f name
	g $VALUES
	values ()[Lemc; values
	valueOf (Ljava/lang/String;)Lemc; valueOf
	<init> (Ljava/lang/String;IILacp;)V <init>
	a ()Lsw; getName
	b ()I getDtoIndex
	c ()[Lemc; $values
	<clinit> ()V <clinit>
emd com/mojang/realmsclient/util/RealmsPersistence
	a FILE_NAME
	b GSON
	c LOGGER
	<init> ()V <init>
	a ()Lemd$a; read
	a (Lemd$a;)V save
	b ()Lemd$a; readFile
	b (Lemd$a;)V writeFile
	c ()Ljava/io/File; getPathToData
	<clinit> ()V <clinit>
emd$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
	<init> ()V <init>
eme com/mojang/realmsclient/util/RealmsTextureManager
	a TEXTURES
	b LOGGER
	c TEMPLATE_ICON_LOCATION
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/lang/String;)Lacq; worldTemplate
	b (Ljava/lang/String;Ljava/lang/String;)Lacq; getTexture
	a (Ljava/lang/String;)Lehk; loadImage
	<clinit> ()V <clinit>
eme$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
	<init> (Ljava/lang/String;Lacq;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; image
	b ()Lacq; textureId
emf com/mojang/realmsclient/util/RealmsUtil
	a SESSION_SERVICE
	b RIGHT_NOW
	c GAME_PROFILE_CACHE
	d MINUTES
	e HOURS
	f DAYS
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	b (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getGameProfile
	a (J)Lsw; convertToAgePresentation
	a (Ljava/util/Date;)Lsw; convertToAgePresentationFromInstant
	a (Leox;IIILjava/lang/String;)V renderPlayerFace
	<clinit> ()V <clinit>
emf$1 com/mojang/realmsclient/util/RealmsUtil$1
	<init> ()V <init>
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
emg com/mojang/realmsclient/util/TextRenderingUtils
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;[Lemg$b;)Ljava/util/List; decompose
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
emg$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
	<init> ([Lemg$b;)V <init>
	<init> (Ljava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
emg$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; renderedText
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
	a (Ljava/lang/String;Ljava/lang/String;)Lemg$b; link
	a (Ljava/lang/String;)Lemg$b; text
emh com/mojang/realmsclient/util/UploadTokenCache
	a TOKEN_CACHE
	<init> ()V <init>
	a (J)Ljava/lang/String; get
	b (J)V invalidate
	a (JLjava/lang/String;)V put
	<clinit> ()V <clinit>
emi com/mojang/realmsclient/util/WorldGenerationInfo
	a seed
	b levelType
	c generateStructures
	<init> (Ljava/lang/String;Lemc;Z)V <init>
	a ()Ljava/lang/String; getSeed
	b ()Lemc; getLevelType
	c ()Z shouldGenerateStructures
emj com/mojang/realmsclient/util/package-info
emk com/mojang/realmsclient/util/task/CloseServerTask
	c LOGGER
	d serverData
	e configureScreen
	<init> (Lejq;Lela;)V <init>
	run ()V run
	<clinit> ()V <clinit>
eml com/mojang/realmsclient/util/task/ConnectTask
	c realmsConnect
	d server
	e address
	<init> (Leuq;Lejq;Lejr;)V <init>
	run ()V run
	a ()V abortTask
	b ()V tick
emm com/mojang/realmsclient/util/task/DownloadTask
	c LOGGER
	d worldId
	e slot
	f lastScreen
	g downloadName
	<init> (JILjava/lang/String;Leuq;)V <init>
	run ()V run
	a (Z)V lambda$run$0
	<clinit> ()V <clinit>
emn com/mojang/realmsclient/util/task/GetServerDetailsTask
	c LOGGER
	d server
	e lastScreen
	f mainScreen
	g connectLock
	<init> (Leiu;Leuq;Lejq;Ljava/util/concurrent/locks/ReentrantLock;)V <init>
	run ()V run
	e ()Lejr; fetchServerAddress
	a (Lejr;)Lelh; connectScreen
	a (Lejr;Ljava/util/function/Function;)Lelg; resourcePackDownloadConfirmationScreen
	b (Lejr;)Ljava/util/concurrent/CompletableFuture; scheduleResourcePackDownload
	a (Lejr;Ljava/util/function/Function;Z)V lambda$resourcePackDownloadConfirmationScreen$2
	a (Lejr;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$resourcePackDownloadConfirmationScreen$1
	a (Ljava/util/function/Function;Lejr;)V lambda$resourcePackDownloadConfirmationScreen$0
	<clinit> ()V <clinit>
emo com/mojang/realmsclient/util/task/LongRunningTask
	a NUMBER_OF_RETRIES
	c LOGGER
	b longRunningMcoTaskScreen
	<init> ()V <init>
	a (J)V pause
	a (Leuq;)V setScreen
	a (Lelh;)V setScreen
	a (Lsw;)V error
	b (Lsw;)V setTitle
	c ()Z aborted
	b ()V tick
	d ()V init
	a ()V abortTask
	a (Lenn;Leuq;)V lambda$setScreen$0
	<clinit> ()V <clinit>
emp com/mojang/realmsclient/util/task/OpenServerTask
	c LOGGER
	d serverData
	e returnScreen
	f join
	g mainScreen
	h minecraft
	<init> (Lejq;Leuq;Leiu;ZLenn;)V <init>
	run ()V run
	e ()V lambda$run$0
	<clinit> ()V <clinit>
emq com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask
	c generationInfo
	<init> (Lemi;JLsw;Ljava/lang/Runnable;)V <init>
	a (Leiz;J)V sendResetRequest
emr com/mojang/realmsclient/util/task/ResettingTemplateWorldTask
	c template
	<init> (Lekh;JLsw;Ljava/lang/Runnable;)V <init>
	a (Leiz;J)V sendResetRequest
ems com/mojang/realmsclient/util/task/ResettingWorldTask
	c LOGGER
	d serverId
	e title
	f callback
	<init> (JLsw;Ljava/lang/Runnable;)V <init>
	a (Leiz;J)V sendResetRequest
	run ()V run
	<clinit> ()V <clinit>
emt com/mojang/realmsclient/util/task/RestoreTask
	c LOGGER
	d backup
	e worldId
	f lastScreen
	<init> (Lejf;JLela;)V <init>
	run ()V run
	<clinit> ()V <clinit>
emu com/mojang/realmsclient/util/task/SwitchMinigameTask
	c LOGGER
	d worldId
	e worldTemplate
	f lastScreen
	<init> (JLekh;Lela;)V <init>
	run ()V run
	<clinit> ()V <clinit>
emv com/mojang/realmsclient/util/task/SwitchSlotTask
	c LOGGER
	d worldId
	e slot
	f callback
	<init> (JILjava/lang/Runnable;)V <init>
	run ()V run
	<clinit> ()V <clinit>
emw com/mojang/realmsclient/util/task/WorldCreationTask
	c LOGGER
	d name
	e motd
	f worldId
	g lastScreen
	<init> (JLjava/lang/String;Ljava/lang/String;Leuq;)V <init>
	run ()V run
	<clinit> ()V <clinit>
emx com/mojang/realmsclient/util/task/package-info
l net/minecraft/BlockUtil
	<init> ()V <init>
	a (Lgu;Lha$a;ILha$a;ILjava/util/function/Predicate;)Ll$a; getLargestRectangleAround
	a (Ljava/util/function/Predicate;Lgu$a;Lha;I)I getLimit
	a ([I)Lcom/mojang/datafixers/util/Pair; getMaxRectangleLocation
	a (Lcls;Lgu;Lcpn;Lha;Lcpn;)Ljava/util/Optional; getTopConnectedBlock
l$a net/minecraft/BlockUtil$FoundRectangle
	a minCorner
	b axis1Size
	c axis2Size
	<init> (Lgu;II)V <init>
l$b net/minecraft/BlockUtil$IntBounds
	a min
	b max
	<init> (II)V <init>
	toString ()Ljava/lang/String; toString
m net/minecraft/CharPredicate
	test (C)Z test
	and (Lm;)Lm; and
	negate ()Lm; negate
	or (Lm;)Lm; or
	a (Lm;C)Z lambda$or$2
	a (C)Z lambda$negate$1
	b (Lm;C)Z lambda$and$0
n net/minecraft/ChatFormatting
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w CODEC
	x PREFIX_CODE
	y FORMATTING_BY_NAME
	z STRIP_FORMATTING_PATTERN
	A name
	B code
	C isFormat
	D toString
	E id
	F color
	G $VALUES
	values ()[Ln; values
	valueOf (Ljava/lang/String;)Ln; valueOf
	c (Ljava/lang/String;)Ljava/lang/String; cleanName
	<init> (Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V <init>
	<init> (Ljava/lang/String;ILjava/lang/String;CZ)V <init>
	<init> (Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V <init>
	a ()C getChar
	b ()I getId
	d ()Z isFormat
	e ()Z isColor
	f ()Ljava/lang/Integer; getColor
	g ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	b (Ljava/lang/String;)Ln; getByName
	a (I)Ln; getById
	a (C)Ln; getByCode
	a (ZZ)Ljava/util/Collection; getNames
	c ()Ljava/lang/String; getSerializedName
	a (Ln;)Ln; lambda$static$1
	b (Ln;)Ljava/lang/String; lambda$static$0
	h ()[Ln; $values
	<clinit> ()V <clinit>
o net/minecraft/CrashReport
	a LOGGER
	b DATE_TIME_FORMATTER
	c title
	d exception
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	i systemReport
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	a ()Ljava/lang/String; getTitle
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	a (Ljava/lang/StringBuilder;)V getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	a (Ljava/io/File;)Z saveToFile
	g ()Lab; getSystemReport
	a (Ljava/lang/String;)Lp; addCategory
	a (Ljava/lang/String;I)Lp; addCategory
	i ()Ljava/lang/String; getErrorComment
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lo; forThrowable
	h ()V preload
	<clinit> ()V <clinit>
p net/minecraft/CrashReportCategory
	a title
	b entries
	c stackTrace
	<init> (Ljava/lang/String;)V <init>
	a (Lcmo;DDD)Ljava/lang/String; formatLocation
	a (Lcmo;Lgu;)Ljava/lang/String; formatLocation
	a (Lcmo;III)Ljava/lang/String; formatLocation
	a (Ljava/lang/String;Lq;)Lp; setDetail
	a (Ljava/lang/String;Ljava/lang/Object;)Lp; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (I)I fillInStackTrace
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	b (I)V trimStacktrace
	a (Ljava/lang/StringBuilder;)V getDetails
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (Lp;Lcmo;Lgu;Ldcb;)V populateBlockDetails
	b (Lcmo;Lgu;)Ljava/lang/String; lambda$populateBlockDetails$0
p$a net/minecraft/CrashReportCategory$Entry
	a key
	b value
	<init> (Ljava/lang/String;Ljava/lang/Object;)V <init>
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
q net/minecraft/CrashReportDetail
r net/minecraft/DefaultUncaughtExceptionHandler
	a logger
	<init> (Lorg/slf4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
s net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
	<init> (Lorg/slf4j/Logger;)V <init>
	uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
t net/minecraft/DetectedVersion
	b LOGGER
	a BUILT_IN
	c id
	d name
	e stable
	f worldVersion
	g protocolVersion
	h resourcePackVersion
	i dataPackVersion
	j buildTime
	<init> ()V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a ()Lad; tryDetectVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	d ()Ldys; getDataVersion
	e ()I getProtocolVersion
	a (Lajm;)I getPackVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
	<clinit> ()V <clinit>
u net/minecraft/FieldsAreNonnullByDefault
v net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b MAX_FILE_NAME
	c RESERVED_WINDOWS_FILENAMES
	d STRICT_PATH_SEGMENT_CHECK
	<init> ()V <init>
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	a (Ljava/nio/file/Path;)Z isPathNormalized
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
	a (Ljava/lang/String;)Ljava/lang/String; getFullResourcePath
	b (Ljava/lang/String;)Ljava/lang/String; normalizeResourcePath
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; decomposePath
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path; resolvePath
	d (Ljava/lang/String;)Z isValidStrictPathSegment
	a ([Ljava/lang/String;)V validatePath
	c (Ljava/nio/file/Path;)V createDirectoriesSafe
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$decomposePath$3
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$decomposePath$2
	e (Ljava/lang/String;)Ljava/lang/String; lambda$decomposePath$1
	f (Ljava/lang/String;)Ljava/lang/String; lambda$decomposePath$0
	<clinit> ()V <clinit>
w net/minecraft/MethodsReturnNonnullByDefault
x net/minecraft/Optionull
	<init> ()V <init>
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; map
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; mapOrDefault
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object; mapOrElse
	a (Ljava/util/Collection;)Ljava/lang/Object; first
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; firstOrDefault
	a (Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object; firstOrElse
	a ([Ljava/lang/Object;)Z isNullOrEmpty
	a ([Z)Z isNullOrEmpty
	a ([B)Z isNullOrEmpty
	a ([C)Z isNullOrEmpty
	a ([S)Z isNullOrEmpty
	a ([I)Z isNullOrEmpty
	a ([J)Z isNullOrEmpty
	a ([F)Z isNullOrEmpty
	a ([D)Z isNullOrEmpty
y net/minecraft/ReportedException
	a report
	<init> (Lo;)V <init>
	a ()Lo; getReport
	getCause ()Ljava/lang/Throwable; getCause
	getMessage ()Ljava/lang/String; getMessage
z net/minecraft/ResourceLocationException
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
aa net/minecraft/SharedConstants
	a SNAPSHOT
	b WORLD_VERSION
	c SERIES
	d VERSION_STRING
	e RELEASE_NETWORK_PROTOCOL_VERSION
	f SNAPSHOT_NETWORK_PROTOCOL_VERSION
	g SNBT_NAG_VERSION
	bh SNAPSHOT_PROTOCOL_BIT
	h THROW_ON_TASK_FAILURE
	i RESOURCE_PACK_FORMAT
	j DATA_PACK_FORMAT
	k LANGUAGE_FORMAT
	l REPORT_FORMAT_VERSION
	m DATA_VERSION_TAG
	n USE_NEW_RENDERSYSTEM
	o MULTITHREADED_RENDERING
	p FIX_TNT_DUPE
	q FIX_SAND_DUPE
	r USE_DEBUG_FEATURES
	s DEBUG_OPEN_INCOMPATIBLE_WORLDS
	t DEBUG_ALLOW_LOW_SIM_DISTANCE
	u DEBUG_HOTKEYS
	v DEBUG_UI_NARRATION
	w DEBUG_RENDER
	x DEBUG_PATHFINDING
	y DEBUG_WATER
	z DEBUG_HEIGHTMAP
	A DEBUG_COLLISION
	B DEBUG_SUPPORT_BLOCKS
	C DEBUG_SHAPES
	D DEBUG_NEIGHBORSUPDATE
	E DEBUG_STRUCTURES
	F DEBUG_LIGHT
	G DEBUG_SKY_LIGHT_SECTIONS
	H DEBUG_WORLDGENATTEMPT
	I DEBUG_SOLID_FACE
	J DEBUG_CHUNKS
	K DEBUG_GAME_EVENT_LISTENERS
	L DEBUG_DUMP_TEXTURE_ATLAS
	M DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	N DEBUG_STRUCTURE_EDIT_MODE
	O DEBUG_SAVE_STRUCTURES_AS_SNBT
	P DEBUG_SYNCHRONOUS_GL_LOGS
	Q DEBUG_VERBOSE_SERVER_EVENTS
	R DEBUG_NAMED_RUNNABLES
	S DEBUG_GOAL_SELECTOR
	T DEBUG_VILLAGE_SECTIONS
	U DEBUG_BRAIN
	V DEBUG_BEES
	W DEBUG_RAIDS
	X DEBUG_BLOCK_BREAK
	Y DEBUG_RESOURCE_LOAD_TIMES
	Z DEBUG_MONITOR_TICK_TIMES
	aa DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	ab DEBUG_DONT_SAVE_WORLD
	ac DEBUG_LARGE_DRIPSTONE
	ad DEBUG_PACKET_SERIALIZATION
	ae DEBUG_CARVERS
	af DEBUG_ORE_VEINS
	ag DEBUG_SCULK_CATALYST
	ah DEBUG_BYPASS_REALMS_VERSION_CHECK
	ai DEBUG_SOCIAL_INTERACTIONS
	aj DEBUG_VALIDATE_RESOURCE_PATH_CASE
	ak DEBUG_IGNORE_LOCAL_MOB_CAP
	al DEBUG_SMALL_SPAWN
	am DEBUG_DISABLE_LIQUID_SPREADING
	an DEBUG_AQUIFERS
	ao DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	ap debugGenerateSquareTerrainWithoutNoise
	aq debugGenerateStripedTerrainWithoutNoise
	ar DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	as DEBUG_DISABLE_FLUID_GENERATION
	at DEBUG_DISABLE_AQUIFERS
	au DEBUG_DISABLE_SURFACE
	av DEBUG_DISABLE_CARVERS
	aw DEBUG_DISABLE_STRUCTURES
	ax DEBUG_DISABLE_FEATURES
	ay DEBUG_DISABLE_ORE_VEINS
	az DEBUG_DISABLE_BLENDING
	aA DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	aB DEFAULT_MINECRAFT_PORT
	aC INGAME_DEBUG_OUTPUT
	aD DEBUG_SUBTITLES
	aE FAKE_MS_LATENCY
	aF FAKE_MS_JITTER
	aG NETTY_LEAK_DETECTION
	aH COMMAND_STACK_TRACES
	aI DEBUG_WORLD_RECREATE
	aJ DEBUG_SHOW_SERVER_DEBUG_VALUES
	aK DEBUG_STORE_CHUNK_STACKTRACES
	aL DEBUG_FEATURE_COUNT
	aM DEBUG_RESOURCE_GENERATION_OVERRIDE
	aN DEBUG_FORCE_TELEMETRY
	aO DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND
	aP MAXIMUM_TICK_TIME_NANOS
	aQ USE_WORKFLOWS_HOOKS
	aR CHECK_DATA_FIXER_SCHEMA
	aS IS_RUNNING_IN_IDE
	aT DATA_FIX_TYPES_TO_OPTIMIZE
	aU WORLD_RESOLUTION
	aV MAX_CHAT_LENGTH
	aW MAX_COMMAND_LENGTH
	aX MAX_CHAINED_NEIGHBOR_UPDATES
	aY MAX_RENDER_DISTANCE
	aZ ILLEGAL_FILE_CHARACTERS
	ba TICKS_PER_SECOND
	bb TICKS_PER_MINUTE
	bc TICKS_PER_GAME_DAY
	bd AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	be AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	bf AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	bg WORLD_ICON_SIZE
	bi CURRENT_VERSION
	<init> ()V <init>
	a (C)Z isAllowedChatCharacter
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Ljava/lang/String;Z)Ljava/lang/String; filterText
	a (Lad;)V setVersion
	a ()V tryDetectVersion
	b ()Lad; getCurrentVersion
	c ()I getProtocolVersion
	a (Lclt;)Z debugVoidTerrain
	d ()V enableDataFixerOptimizations
	<clinit> ()V <clinit>
ab net/minecraft/SystemReport
	a BYTES_PER_MEBIBYTE
	b ONE_GIGA
	c LOGGER
	d OPERATING_SYSTEM
	e JAVA_VERSION
	f JAVA_VM_VERSION
	g entries
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/lang/String;)V setDetail
	a (Ljava/lang/String;Ljava/util/function/Supplier;)V setDetail
	a (Loshi/SystemInfo;)V putHardware
	a (Ljava/lang/String;Ljava/lang/Runnable;)V ignoreErrors
	a (Ljava/util/List;)V putPhysicalMemory
	a (Loshi/hardware/VirtualMemory;)V putVirtualMemory
	a (Loshi/hardware/GlobalMemory;)V putMemory
	b (Ljava/util/List;)V putGraphics
	a (Loshi/hardware/CentralProcessor;)V putProcessor
	a (Ljava/lang/StringBuilder;)V appendToCrashReportString
	a ()Ljava/lang/String; toLineSeparatedString
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$toLineSeparatedString$21
	a (Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V lambda$appendToCrashReportString$20
	b (Loshi/hardware/CentralProcessor;)Ljava/lang/String; lambda$putProcessor$19
	c (Loshi/hardware/CentralProcessor;)Ljava/lang/String; lambda$putProcessor$18
	d (Loshi/hardware/CentralProcessor;)Ljava/lang/String; lambda$putProcessor$17
	a (Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String; lambda$putProcessor$16
	a (Loshi/hardware/GraphicsCard;)Ljava/lang/String; lambda$putGraphics$15
	b (Loshi/hardware/GlobalMemory;)V lambda$putMemory$14
	c (Loshi/hardware/GlobalMemory;)V lambda$putMemory$13
	b (Loshi/hardware/VirtualMemory;)Ljava/lang/String; lambda$putVirtualMemory$12
	c (Loshi/hardware/VirtualMemory;)Ljava/lang/String; lambda$putVirtualMemory$11
	d (Loshi/hardware/VirtualMemory;)Ljava/lang/String; lambda$putVirtualMemory$10
	e (Loshi/hardware/VirtualMemory;)Ljava/lang/String; lambda$putVirtualMemory$9
	a (Loshi/hardware/PhysicalMemory;)Ljava/lang/String; lambda$putPhysicalMemory$8
	b (Loshi/hardware/PhysicalMemory;)Ljava/lang/String; lambda$putPhysicalMemory$7
	a (Loshi/hardware/HardwareAbstractionLayer;)V lambda$putHardware$6
	b (Loshi/hardware/HardwareAbstractionLayer;)V lambda$putHardware$5
	c (Loshi/hardware/HardwareAbstractionLayer;)V lambda$putHardware$4
	b ()Ljava/lang/String; lambda$new$3
	c ()V lambda$new$2
	d ()Ljava/lang/String; lambda$new$1
	e ()Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
ac net/minecraft/Util
	e LOGGER
	f DEFAULT_MAX_THREADS
	g MAX_THREADS_SYSTEM_PROPERTY
	h WORKER_COUNT
	i BACKGROUND_EXECUTOR
	j IO_POOL
	k FILENAME_DATE_TIME_FORMATTER
	a timeSource
	b TICKER
	c NIL_UUID
	d ZIP_FILE_SYSTEM_PROVIDER
	l thePauser
	<init> ()V <init>
	a ()Ljava/util/stream/Collector; toMap
	a (Ldde;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	a (Ljava/lang/String;Lacq;)Ljava/lang/String; makeDescriptionId
	b ()J getMillis
	c ()J getNanos
	d ()J getEpochMillis
	e ()Ljava/lang/String; getFilenameFormattedDateTime
	c (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; makeExecutor
	m ()I getMaxThreads
	f ()Ljava/util/concurrent/ExecutorService; backgroundExecutor
	g ()Ljava/util/concurrent/ExecutorService; ioPool
	h ()V shutdownExecutors
	a (Ljava/util/concurrent/ExecutorService;)V shutdownExecutor
	n ()Ljava/util/concurrent/ExecutorService; makeIoExecutor
	a (Ljava/lang/Throwable;)V throwAsRuntime
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V onThreadException
	a (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; fetchChoiceType
	b (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; doFetchChoiceType
	a (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapThreadWithTaskName
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; wrapThreadWithTaskName
	i ()Lac$b; getPlatform
	j ()Ljava/util/stream/Stream; getVmArguments
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	k ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	c (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFast
	d (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFastAndCancel
	a (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fallibleSequence
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; name
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;)V logAndPauseIfInIde
	a (Ljava/lang/String;Ljava/lang/Throwable;)V logAndPauseIfInIde
	b (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	a (Ljava/util/function/Consumer;)V setPause
	d (Ljava/lang/String;)V doPause
	c (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	a ([Ljava/lang/Object;Lapf;)Ljava/lang/Object; getRandom
	a ([ILapf;)I getRandom
	a (Ljava/util/List;Lapf;)Ljava/lang/Object; getRandom
	b (Ljava/util/List;Lapf;)Ljava/util/Optional; getRandomSafe
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createRenamer
	a (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createDeleter
	b (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileDeletedCheck
	c (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileCreatedCheck
	a ([Ljava/util/function/BooleanSupplier;)Z executeInSequence
	a (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z runWithRetries
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V safeReplaceFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V safeReplaceFile
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V safeReplaceOrMoveFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V safeReplaceOrMoveFile
	a (Ljava/lang/String;II)I offsetByCodepoints
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; prefix
	a (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; fixedSize
	l ()V startTimerHackThread
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	a (Ljava/lang/String;Lm;)Ljava/lang/String; sanitizeName
	a (Ljava/util/function/Function;)Lapm; singleKeyCache
	b (Ljava/util/function/Function;)Ljava/util/function/Function; memoize
	a (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; memoize
	a (Ljava/util/stream/Stream;Lapf;)Ljava/util/List; toShuffledList
	a (Ljava/util/stream/IntStream;Lapf;)Lit/unimi/dsi/fastutil/ints/IntArrayList; toShuffledList
	b ([Ljava/lang/Object;Lapf;)Ljava/util/List; shuffledCopy
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lapf;)Ljava/util/List; shuffledCopy
	b (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lapf;)V shuffle
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; blockUntilDone
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; blockUntilDone
	e (Ljava/util/List;)Ljava/util/function/ToIntFunction; createIndexLookup
	a (Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction; createIndexLookup
	a (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; getOrThrow
	a (I)Z isWhitespace
	b (Ljava/lang/String;)Z isBlank
	a (Lm;I)Ljava/lang/String; lambda$sanitizeName$17
	b (I)Ljava/lang/String; lambda$fixedSize$16
	c (I)Ljava/lang/String; lambda$fixedSize$15
	d (I)Ljava/lang/String; lambda$fixedSize$14
	a (Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V lambda$prefix$13
	a (Ljava/util/List;Ljava/lang/Void;)Ljava/util/List; lambda$fallibleSequence$12
	a (Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V lambda$fallibleSequence$11
	a (Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V lambda$fallibleSequence$10
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/List;Ljava/lang/Throwable;)V lambda$sequenceFailFastAndCancel$9
	b (Ljava/util/List;Ljava/lang/Void;)Ljava/util/List; lambda$sequence$8
	e (Ljava/lang/String;)Z lambda$getVmArguments$7
	b (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object; lambda$wrapThreadWithTaskName$6
	b (Ljava/lang/String;Ljava/lang/Runnable;)V lambda$wrapThreadWithTaskName$5
	a (Ljava/lang/Runnable;)Ljava/lang/Thread; lambda$makeIoExecutor$4
	a (Ljava/lang/String;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread; lambda$makeExecutor$3
	f (Ljava/lang/String;)V lambda$static$2
	o ()Ljava/lang/IllegalStateException; lambda$static$1
	a (Ljava/nio/file/spi/FileSystemProvider;)Z lambda$static$0
	<clinit> ()V <clinit>
ac$1 net/minecraft/Util$1
	<init> ()V <init>
	read ()J read
ac$2 net/minecraft/Util$10
	b cache
	a val$function
	<init> (Ljava/util/function/Function;)V <init>
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	toString ()Ljava/lang/String; toString
ac$3 net/minecraft/Util$11
	b cache
	a val$function
	<init> (Ljava/util/function/BiFunction;)V <init>
	apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
	toString ()Ljava/lang/String; toString
	a (Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$apply$0
ac$4 net/minecraft/Util$2
	<init> (Ljava/util/concurrent/ForkJoinPool;)V <init>
	onTermination (Ljava/lang/Throwable;)V onTermination
ac$5 net/minecraft/Util$5
	a val$from
	b val$to
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
ac$6 net/minecraft/Util$6
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
ac$7 net/minecraft/Util$7
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
ac$8 net/minecraft/Util$8
	a val$target
	<init> (Ljava/nio/file/Path;)V <init>
	getAsBoolean ()Z getAsBoolean
	toString ()Ljava/lang/String; toString
ac$9 net/minecraft/Util$9
	<init> (Ljava/lang/String;)V <init>
	run ()V run
ac$a net/minecraft/Util$IdentityStrategy
	a INSTANCE
	b $VALUES
	values ()[Lac$a; values
	valueOf (Ljava/lang/String;)Lac$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	hashCode (Ljava/lang/Object;)I hashCode
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	a ()[Lac$a; $values
	<clinit> ()V <clinit>
ac$b net/minecraft/Util$OS
	a LINUX
	b SOLARIS
	c WINDOWS
	d OSX
	e UNKNOWN
	f telemetryName
	g $VALUES
	values ()[Lac$b; values
	valueOf (Ljava/lang/String;)Lac$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/net/URL;)V openUrl
	a (Ljava/net/URI;)V openUri
	a (Ljava/io/File;)V openFile
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
	a (Ljava/lang/String;)V openUri
	a ()Ljava/lang/String; telemetryName
	c (Ljava/net/URL;)Ljava/lang/Process; lambda$openUrl$0
	b ()[Lac$b; $values
	<clinit> ()V <clinit>
ac$b$1 net/minecraft/Util$OS$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
ac$b$2 net/minecraft/Util$OS$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
ad net/minecraft/WorldVersion
	d ()Ldys; getDataVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	e ()I getProtocolVersion
	a (Lajm;)I getPackVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
ae net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d id
	e criteria
	f requirements
	g children
	h chatComponent
	i sendsTelemetryEvent
	<init> (Lacq;Lae;Lan;Lah;Ljava/util/Map;[[Ljava/lang/String;Z)V <init>
	a ()Lae$a; deconstruct
	b ()Lae; getParent
	c ()Lae; getRoot
	a (Lae;)Lae; getRoot
	d ()Lan; getDisplay
	e ()Z sendsTelemetryEvent
	f ()Lah; getRewards
	toString ()Ljava/lang/String; toString
	g ()Ljava/lang/Iterable; getChildren
	h ()Ljava/util/Map; getCriteria
	i ()I getMaxCriteraRequired
	b (Lae;)V addChild
	j ()Lacq; getId
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	k ()[[Ljava/lang/String; getRequirements
	l ()Lsw; getChatComponent
	a (Lsw;Lts;)Lts; lambda$new$0
ae$a net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	h sendsTelemetryEvent
	<init> (Lacq;Lan;Lah;Ljava/util/Map;[[Ljava/lang/String;Z)V <init>
	<init> (Z)V <init>
	a ()Lae$a; advancement
	b ()Lae$a; recipeAdvancement
	a (Lae;)Lae$a; parent
	a (Lacq;)Lae$a; parent
	a (Lcfz;Lsw;Lsw;Lacq;Lao;ZZZ)Lae$a; display
	a (Lcml;Lsw;Lsw;Lacq;Lao;ZZZ)Lae$a; display
	a (Lan;)Lae$a; display
	a (Lah$a;)Lae$a; rewards
	a (Lah;)Lae$a; rewards
	a (Ljava/lang/String;Lam;)Lae$a; addCriterion
	a (Ljava/lang/String;Laj;)Lae$a; addCriterion
	a (Lap;)Lae$a; requirements
	a ([[Ljava/lang/String;)Lae$a; requirements
	a (Ljava/util/function/Function;)Z canBuild
	b (Lacq;)Lae; build
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lae; save
	c ()Lcom/google/gson/JsonObject; serializeToJson
	a (Lsf;)V serializeToNetwork
	toString ()Ljava/lang/String; toString
	a (Lcom/google/gson/JsonObject;Lbe;)Lae$a; fromJson
	b (Lsf;)Lae$a; fromNetwork
	d ()Ljava/util/Map; getCriteria
	a (Lsf;Lan;)V lambda$serializeToNetwork$1
	c (Lacq;)Lae; lambda$build$0
af net/minecraft/advancements/AdvancementList
	a LOGGER
	b advancements
	c roots
	d tasks
	e listener
	<init> ()V <init>
	a (Lae;)V remove
	a (Ljava/util/Set;)V remove
	a (Ljava/util/Map;)V add
	a ()V clear
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
	a (Lacq;)Lae; get
	a (Laf$a;)V setListener
	<clinit> ()V <clinit>
af$a net/minecraft/advancements/AdvancementList$Listener
	a (Lae;)V onAddAdvancementRoot
	b (Lae;)V onRemoveAdvancementRoot
	c (Lae;)V onAddAdvancementTask
	d (Lae;)V onRemoveAdvancementTask
	a ()V onAdvancementsCleared
ag net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	<init> (Ljava/util/Map;)V <init>
	<init> ()V <init>
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a ()Z isDone
	b ()Z hasProgress
	a (Ljava/lang/String;)Z grantProgress
	b (Ljava/lang/String;)Z revokeProgress
	toString ()Ljava/lang/String; toString
	a (Lsf;)V serializeToNetwork
	b (Lsf;)Lag; fromNetwork
	c (Ljava/lang/String;)Lak; getCriterion
	c ()F getPercent
	d ()Ljava/lang/String; getProgressText
	h ()I countCompletedRequirements
	e ()Ljava/lang/Iterable; getRemainingCriteria
	f ()Ljava/lang/Iterable; getCompletedCriteria
	g ()Ljava/util/Date; getFirstProgressDate
	a (Lag;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lsf;Lak;)V lambda$serializeToNetwork$1
	a (Ljava/util/Set;Ljava/util/Map$Entry;)Z lambda$update$0
ag$a net/minecraft/advancements/AdvancementProgress$Serializer
	<init> ()V <init>
	a (Lag;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lag; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ah net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	<init> (I[Lacq;[Lacq;Ldn$a;)V <init>
	a ()[Lacq; getRecipes
	a (Laig;)V grant
	toString ()Ljava/lang/String; toString
	b ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lah; deserialize
	a (Lnet/minecraft/server/MinecraftServer;Laig;Ldn;)V lambda$grant$0
	<clinit> ()V <clinit>
ah$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	<init> ()V <init>
	a (I)Lah$a; experience
	b (I)Lah$a; addExperience
	a (Lacq;)Lah$a; loot
	b (Lacq;)Lah$a; addLootTable
	c (Lacq;)Lah$a; recipe
	d (Lacq;)Lah$a; addRecipe
	e (Lacq;)Lah$a; function
	f (Lacq;)Lah$a; runs
	a ()Lah; build
ai net/minecraft/advancements/CriteriaTriggers
	aa CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J HONEY_BLOCK_SLIDE
	K BEE_NEST_DESTROYED
	L TARGET_BLOCK_HIT
	M ITEM_USED_ON_BLOCK
	N GENERATE_LOOT
	O THROWN_ITEM_PICKED_UP_BY_ENTITY
	P THROWN_ITEM_PICKED_UP_BY_PLAYER
	Q PLAYER_INTERACTED_WITH_ENTITY
	R START_RIDING_TRIGGER
	S LIGHTNING_STRIKE
	T USING_ITEM
	U FALL_FROM_HEIGHT
	V RIDE_ENTITY_IN_LAVA_TRIGGER
	W KILL_MOB_NEAR_SCULK_CATALYST
	X ALLAY_DROP_ITEM_ON_BLOCK
	Y AVOID_VIBRATION
	Z RECIPE_CRAFTED
	<init> ()V <init>
	a (Lal;)Lal; register
	a (Lacq;)Lal; getCriterion
	a ()Ljava/lang/Iterable; all
	<clinit> ()V <clinit>
aj net/minecraft/advancements/Criterion
	a trigger
	<init> (Lam;)V <init>
	<init> ()V <init>
	a (Lsf;)V serializeToNetwork
	a (Lcom/google/gson/JsonObject;Lbe;)Laj; criterionFromJson
	b (Lsf;)Laj; criterionFromNetwork
	b (Lcom/google/gson/JsonObject;Lbe;)Ljava/util/Map; criteriaFromJson
	c (Lsf;)Ljava/util/Map; criteriaFromNetwork
	a (Ljava/util/Map;Lsf;)V serializeToNetwork
	a ()Lam; getTrigger
	b ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lsf;Laj;)V lambda$serializeToNetwork$0
ak net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	<init> ()V <init>
	a ()Z isDone
	b ()V grant
	c ()V revoke
	d ()Ljava/util/Date; getObtained
	toString ()Ljava/lang/String; toString
	a (Lsf;)V serializeToNetwork
	e ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lsf;)Lak; fromNetwork
	a (Ljava/lang/String;)Lak; fromJson
	<clinit> ()V <clinit>
al net/minecraft/advancements/CriterionTrigger
	a ()Lacq; getId
	a (Lacy;Lal$a;)V addPlayerListener
	b (Lacy;Lal$a;)V removePlayerListener
	a (Lacy;)V removePlayerListeners
	a (Lcom/google/gson/JsonObject;Lbe;)Lam; createInstance
al$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	<init> (Lam;Lae;Ljava/lang/String;)V <init>
	a ()Lam; getTriggerInstance
	a (Lacy;)V run
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
am net/minecraft/advancements/CriterionTriggerInstance
	a ()Lacq; getCriterion
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
an net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	<init> (Lcfz;Lsw;Lsw;Lacq;Lao;ZZZ)V <init>
	a (FF)V setLocation
	a ()Lsw; getTitle
	b ()Lsw; getDescription
	c ()Lcfz; getIcon
	d ()Lacq; getBackground
	e ()Lao; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	a (Lcom/google/gson/JsonObject;)Lan; fromJson
	b (Lcom/google/gson/JsonObject;)Lcfz; getIcon
	a (Lsf;)V serializeToNetwork
	b (Lsf;)Lan; fromNetwork
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
ao net/minecraft/advancements/FrameType
	a TASK
	b CHALLENGE
	c GOAL
	d name
	e texture
	f chatColor
	g displayName
	h $VALUES
	values ()[Lao; values
	valueOf (Ljava/lang/String;)Lao; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;ILn;)V <init>
	a ()Ljava/lang/String; getName
	b ()I getTexture
	a (Ljava/lang/String;)Lao; byName
	c ()Ln; getChatColor
	d ()Lsw; getDisplayName
	e ()[Lao; $values
	<clinit> ()V <clinit>
ap net/minecraft/advancements/RequirementsStrategy
	a AND
	b OR
	createRequirements (Ljava/util/Collection;)[[Ljava/lang/String; createRequirements
	a (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$1
	b (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
aq net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	<init> (Lae;Laq;Laq;II)V <init>
	a (Lae;Laq;)Laq; addChild
	a ()V firstWalk
	a (FIF)F secondWalk
	a (F)V thirdWalk
	b ()V executeShifts
	c ()Laq; previousOrThread
	d ()Laq; nextOrThread
	a (Laq;)Laq; apportion
	a (Laq;F)V moveSubtree
	a (Laq;Laq;)Laq; getAncestor
	e ()V finalizePosition
	a (Lae;)V run
ar net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	b player
	<init> (Lacq;Lba;)V <init>
	a ()Lacq; getCriterion
	b ()Lba; getPlayerPredicate
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	toString ()Ljava/lang/String; toString
as net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Las$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lcpn; deserializeBlock
	a (Laig;Ldcb;Lcfz;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldcb;Lcfz;ILas$a;)Z lambda$trigger$1
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$0
	<clinit> ()V <clinit>
as$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	<init> (Lba;Lcpn;Lbz;Lcj$d;)V <init>
	a (Lcpn;Lbz$a;Lcj$d;)Las$a; destroyedBeeNest
	a (Ldcb;Lcfz;I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
at net/minecraft/advancements/critereon/BlockPredicate
	a ANY
	b tag
	c blocks
	d properties
	e nbt
	<init> (Lanl;Ljava/util/Set;Lcz;Lcl;)V <init>
	a (Laif;Lgu;)Z matches
	a (Lcom/google/gson/JsonElement;)Lat; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
at$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a blocks
	b tag
	c properties
	d nbt
	<init> ()V <init>
	a ()Lat$a; block
	a ([Lcpn;)Lat$a; of
	a (Ljava/lang/Iterable;)Lat$a; of
	a (Lanl;)Lat$a; of
	a (Lqr;)Lat$a; hasNbt
	a (Lcz;)Lat$a; setProperties
	b ()Lat; build
au net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lau$a; createInstance
	a (Laig;Lbrl;Lbrl;Lbfe;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Ldzk;Ldzk;Lau$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
au$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	<init> (Lba;Lba;Lba;Lba;)V <init>
	c ()Lau$a; bredAnimals
	a (Lbo$a;)Lau$a; bredAnimals
	a (Lbo;Lbo;Lbo;)Lau$a; bredAnimals
	a (Ldzk;Ldzk;Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
av net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lav$a; createInstance
	a (Laig;Lchw;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lchw;Lav$a;)Z lambda$trigger$1
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$createInstance$0
	<clinit> ()V <clinit>
av$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	<init> (Lba;Lchw;)V <init>
	c ()Lav$a; brewedPotion
	a (Lchw;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
aw net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Law$a; createInstance
	a (Laig;Lacp;Lacp;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lacp;Lacp;Law$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
aw$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	<init> (Lba;Lacp;Lacp;)V <init>
	c ()Law$a; changedDimension
	a (Lacp;Lacp;)Law$a; changedDimension
	a (Lacp;)Law$a; changedDimensionTo
	b (Lacp;)Law$a; changedDimensionFrom
	b (Lacp;Lacp;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
ax net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lax$a; createInstance
	a (Laig;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ljava/util/List;Lax$a;)Z lambda$trigger$1
	a (Laig;Lbfj;)Ldzk; lambda$trigger$0
	<clinit> ()V <clinit>
ax$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	<init> (Lba;[Lba;)V <init>
	a ([Lbo;)Lax$a; channeledLightning
	a (Ljava/util/Collection;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (I)[Lba; lambda$channeledLightning$0
ay net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lay$a; createInstance
	a (Laig;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (ILay$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
ay$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	<init> (Lba;Lcj$d;)V <init>
	c ()Lay$a; constructedBeacon
	a (Lcj$d;)Lay$a; constructedBeacon
	a (I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
az net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Laz$a; createInstance
	a (Laig;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Laz$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
az$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	<init> (Lba;Lbz;)V <init>
	c ()Laz$a; usedItem
	a (Lbz;)Laz$a; usedItem
	a (Lcml;)Laz$a; usedItem
	a (Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
ba net/minecraft/advancements/critereon/ContextAwarePredicate
	a ANY
	b conditions
	c compositePredicates
	<init> ([Leck;)V <init>
	a ([Leck;)Lba; create
	a (Ljava/lang/String;Lbe;Lcom/google/gson/JsonElement;Lebu;)Lba; fromElement
	a (Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonElement; toJson
	a ([Lba;Lct;)Lcom/google/gson/JsonElement; toJson
	<clinit> ()V <clinit>
bb net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbb$a; createInstance
	a (Laig;Lbwv;Lbyb;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Ldzk;Lbb$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bb$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	<init> (Lba;Lba;Lba;)V <init>
	c ()Lbb$a; curedZombieVillager
	a (Ldzk;Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bc net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	<init> ()V <init>
	<init> (Lcj$c;Lcj$c;Lbo;Ljava/lang/Boolean;Lbd;)V <init>
	a (Laig;Lben;FFZ)Z matches
	a (Lcom/google/gson/JsonElement;)Lbc; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bc$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	<init> ()V <init>
	a ()Lbc$a; damageInstance
	a (Lcj$c;)Lbc$a; dealtDamage
	b (Lcj$c;)Lbc$a; takenDamage
	a (Lbo;)Lbc$a; sourceEntity
	a (Ljava/lang/Boolean;)Lbc$a; blocked
	a (Lbd;)Lbc$a; type
	a (Lbd$a;)Lbc$a; type
	b ()Lbc; build
bd net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b tags
	c directEntity
	d sourceEntity
	<init> (Ljava/util/List;Lbo;Lbo;)V <init>
	a (Laig;Lben;)Z matches
	a (Laif;Leei;Lben;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbd; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bd$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a tags
	b directEntity
	c sourceEntity
	<init> ()V <init>
	a ()Lbd$a; damageType
	a (Ldb;)Lbd$a; tag
	a (Lbo;)Lbd$a; direct
	a (Lbo$a;)Lbd$a; direct
	b (Lbo;)Lbd$a; source
	b (Lbo$a;)Lbd$a; source
	b ()Lbd; build
be net/minecraft/advancements/critereon/DeserializationContext
	a LOGGER
	b id
	c lootData
	d predicateGson
	<init> (Lacq;Ldzn;)V <init>
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Lebu;)[Leck; deserializeConditions
	a ()Lacq; getAdvancementId
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V lambda$deserializeConditions$0
	<clinit> ()V <clinit>
bf net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	<init> (Lcj$c;Lcj$c;Lcj$c;Lcj$c;Lcj$c;)V <init>
	a (Lcj$c;)Lbf; horizontal
	b (Lcj$c;)Lbf; vertical
	c (Lcj$c;)Lbf; absolute
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lbf; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bg net/minecraft/advancements/critereon/DistanceTrigger
	a id
	<init> (Lacq;)V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbg$a; createInstance
	a (Laig;Leei;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Leei;Leei;Lbg$a;)Z lambda$trigger$0
bg$a net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	a startPosition
	b distance
	<init> (Lacq;Lba;Lch;Lbf;)V <init>
	a (Lbo$a;Lbf;Lch;)Lbg$a; fallFromHeight
	a (Lbo$a;Lbf;)Lbg$a; rideEntityInLava
	a (Lbf;)Lbg$a; travelledThroughNether
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Laif;Leei;Leei;)Z matches
bh net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbh$a; createInstance
	a (Laig;Lbfj;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Ldzk;Lbh$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bh$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	b source
	<init> (Lba;Lck;Lba;)V <init>
	a (Lck;)Lbh$a; hasEffects
	a (Lbo;)Lbh$a; gotEffectsFrom
	a (Laig;Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bi net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbi$a; createInstance
	a (Laig;Lcfz;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;ILbi$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bi$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	<init> (Lba;Lbz;Lcj$d;)V <init>
	c ()Lbi$a; enchantedItem
	a (Lcfz;I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bj net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b NONE
	c enchantment
	d level
	<init> ()V <init>
	<init> (Lckg;Lcj$d;)V <init>
	a (Ljava/util/Map;)Z containedIn
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbj; fromJson
	b (Lcom/google/gson/JsonElement;)[Lbj; fromJsonArray
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bk net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbk$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lcpn; deserializeBlock
	a (Laig;Ldcb;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldcb;Lbk$a;)Z lambda$trigger$2
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	a (Lcpn;Ljava/lang/String;)V lambda$createInstance$0
	<clinit> ()V <clinit>
bk$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	<init> (Lba;Lcpn;Lcz;)V <init>
	a (Lcpn;)Lbk$a; entersBlock
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Ldcb;)Z matches
bl net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	<init> (Lbz;Lbz;Lbz;Lbz;Lbz;Lbz;)V <init>
	a (Lbfj;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbl; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bl$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	<init> ()V <init>
	a ()Lbl$a; equipment
	a (Lbz;)Lbl$a; head
	b (Lbz;)Lbl$a; chest
	c (Lbz;)Lbl$a; legs
	d (Lbz;)Lbl$a; feet
	e (Lbz;)Lbl$a; mainhand
	f (Lbz;)Lbl$a; offhand
	b ()Lbl; build
bm net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	a (Lbfj;)Z matches
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonElement;)Lbm; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bm$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	<init> ()V <init>
	a ()Lbm$a; flags
	a (Ljava/lang/Boolean;)Lbm$a; setOnFire
	b (Ljava/lang/Boolean;)Lbm$a; setCrouching
	c (Ljava/lang/Boolean;)Lbm$a; setSprinting
	d (Ljava/lang/Boolean;)Lbm$a; setSwimming
	e (Ljava/lang/Boolean;)Lbm$a; setIsBaby
	b ()Lbm; build
bn net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbn$a; createInstance
	a (Laig;Lben;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Lben;FFZLbn$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bn$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	<init> (Lba;Lbc;)V <init>
	c ()Lbn$a; entityHurtPlayer
	a (Lbc;)Lbn$a; entityHurtPlayer
	a (Lbc$a;)Lbn$a; entityHurtPlayer
	a (Laig;Lben;FFZ)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bo net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b entityType
	c distanceToPlayer
	d location
	e steppingOnLocation
	f effects
	g nbt
	h flags
	i equipment
	j subPredicate
	k vehicle
	l passenger
	m targetedEntity
	n team
	<init> (Lbq;Lbf;Lch;Lch;Lck;Lcl;Lbm;Lbl;Lbp;Ljava/lang/String;)V <init>
	<init> (Lbq;Lbf;Lch;Lch;Lck;Lcl;Lbm;Lbl;Lbp;Lbo;Lbo;Lbo;Ljava/lang/String;)V <init>
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)Lba; fromJson
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;Lbe;)[Lba; fromJsonArray
	a (Ljava/lang/String;Lbe;Lcom/google/gson/JsonElement;)Lba; fromElement
	a (Lbo;)Lba; wrap
	a (Laig;Lbfj;)Z matches
	a (Laif;Leei;Lbfj;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbo; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	b (Laig;Lbfj;)Ldzk; createContext
	b (Laif;Leei;Lbfj;)Z lambda$matches$0
	<clinit> ()V <clinit>
bo$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d steppingOnLocation
	e effects
	f nbt
	g flags
	h equipment
	i subPredicate
	j vehicle
	k passenger
	l targetedEntity
	m team
	<init> ()V <init>
	a ()Lbo$a; entity
	a (Lbfn;)Lbo$a; of
	a (Lanl;)Lbo$a; of
	a (Lbq;)Lbo$a; entityType
	a (Lbf;)Lbo$a; distance
	a (Lch;)Lbo$a; located
	b (Lch;)Lbo$a; steppingOn
	a (Lck;)Lbo$a; effects
	a (Lcl;)Lbo$a; nbt
	a (Lbm;)Lbo$a; flags
	a (Lbl;)Lbo$a; equipment
	a (Lbp;)Lbo$a; subPredicate
	a (Lbo;)Lbo$a; vehicle
	b (Lbo;)Lbo$a; passenger
	c (Lbo;)Lbo$a; targetedEntity
	a (Ljava/lang/String;)Lbo$a; team
	b ()Lbo; build
bp net/minecraft/advancements/critereon/EntitySubPredicate
	a ANY
	a (Lcom/google/gson/JsonElement;)Lbp; fromJson
	a (Lbfj;Laif;Leei;)Z matches
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	b ()Lcom/google/gson/JsonElement; serialize
	c ()Lbp$a; type
	a (Lbrp;)Lbp; variant
	a (Lbrw;)Lbp; variant
	<clinit> ()V <clinit>
bp$1 net/minecraft/advancements/critereon/EntitySubPredicate$1
	<init> ()V <init>
	a (Lbfj;Laif;Leei;)Z matches
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	c ()Lbp$a; type
bp$a net/minecraft/advancements/critereon/EntitySubPredicate$Type
	deserialize (Lcom/google/gson/JsonObject;)Lbp; deserialize
bp$b net/minecraft/advancements/critereon/EntitySubPredicate$Types
	a ANY
	b LIGHTNING
	c FISHING_HOOK
	d PLAYER
	e SLIME
	f CAT
	g FROG
	h AXOLOTL
	i BOAT
	j FOX
	k MOOSHROOM
	l PAINTING
	m RABBIT
	n HORSE
	o LLAMA
	p VILLAGER
	q PARROT
	r TROPICAL_FISH
	s TYPES
	<init> ()V <init>
	a (Lbfj;)Ljava/util/Optional; lambda$static$13
	b (Lbfj;)Ljava/util/Optional; lambda$static$12
	c (Lbfj;)Ljava/util/Optional; lambda$static$11
	d (Lbfj;)Ljava/util/Optional; lambda$static$10
	e (Lbfj;)Ljava/util/Optional; lambda$static$9
	f (Lbfj;)Ljava/util/Optional; lambda$static$8
	g (Lbfj;)Ljava/util/Optional; lambda$static$7
	h (Lbfj;)Ljava/util/Optional; lambda$static$6
	i (Lbfj;)Ljava/util/Optional; lambda$static$5
	j (Lbfj;)Ljava/util/Optional; lambda$static$4
	k (Lbfj;)Ljava/util/Optional; lambda$static$3
	l (Lbfj;)Ljava/util/Optional; lambda$static$2
	m (Lbfj;)Ljava/util/Optional; lambda$static$1
	a (Lcom/google/gson/JsonObject;)Lbp; lambda$static$0
	<clinit> ()V <clinit>
bq net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	<init> ()V <init>
	a (Lbfn;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lbq; fromJson
	b (Lbfn;)Lbq; of
	a (Lanl;)Lbq; of
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bq$1 net/minecraft/advancements/critereon/EntityTypePredicate$1
	<init> ()V <init>
	a (Lbfn;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
bq$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	<init> (Lanl;)V <init>
	a (Lbfn;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
bq$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	<init> (Lbfn;)V <init>
	a (Lbfn;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
br net/minecraft/advancements/critereon/EntityVariantPredicate
	a VARIANT_KEY
	b variantCodec
	c getter
	d type
	a (Lhr;Ljava/util/function/Function;)Lbr; create
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lbr; create
	<init> (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)V <init>
	a ()Lbp$a; type
	a (Ljava/lang/Object;)Lbp; createPredicate
	a (Lcom/mojang/serialization/Codec;Lcom/google/gson/JsonObject;)Lbp; lambda$new$0
br$1 net/minecraft/advancements/critereon/EntityVariantPredicate$1
	b val$variant
	c this$0
	<init> (Lbr;Ljava/lang/Object;)V <init>
	a (Lbfj;Laif;Leei;)Z matches
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	c ()Lbp$a; type
	a (Ljava/lang/Object;Ljava/lang/String;)Lcom/google/gson/JsonParseException; lambda$serializeCustomData$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Z lambda$matches$0
bs net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbs$a; createInstance
	a (Laig;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Lbs$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bs$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	<init> (Lba;Lbz;)V <init>
	a (Lbz;)Lbs$a; filledBucket
	a (Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bt net/minecraft/advancements/critereon/FishingHookPredicate
	b ANY
	c IN_OPEN_WATER_KEY
	d inOpenWater
	<init> (Z)V <init>
	a (Z)Lbt; inOpenWater
	a (Lcom/google/gson/JsonObject;)Lbt; fromJson
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	c ()Lbp$a; type
	a (Lbfj;Laif;Leei;)Z matches
	<clinit> ()V <clinit>
bu net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbu$a; createInstance
	a (Laig;Lcfz;Lbzc;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Ldzk;Ljava/util/Collection;Lbu$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bu$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	<init> (Lba;Lbz;Lba;Lbz;)V <init>
	a (Lbz;Lbo;Lbz;)Lbu$a; fishedItem
	a (Lcfz;Ldzk;Ljava/util/Collection;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bv net/minecraft/advancements/critereon/FluidPredicate
	a ANY
	b tag
	c fluid
	d properties
	<init> (Lanl;Ldxd;Lcz;)V <init>
	a (Laif;Lgu;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbv; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	<clinit> ()V <clinit>
bv$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	<init> ()V <init>
	a ()Lbv$a; fluid
	a (Ldxd;)Lbv$a; of
	a (Lanl;)Lbv$a; of
	a (Lcz;)Lbv$a; setProperties
	b ()Lbv; build
bw net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lacy;Lal$a;)V addPlayerListener
	b (Lacy;Lal$a;)V removePlayerListener
	a (Lacy;)V removePlayerListeners
	b (Lcom/google/gson/JsonObject;Lbe;)Lbw$a; createInstance
	a (Lcom/google/gson/JsonObject;Lbe;)Lam; createInstance
	<clinit> ()V <clinit>
bw$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	<init> ()V <init>
	a ()Lacq; getCriterion
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bx net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lbx$a; createInstance
	a (Laig;Lbyn;Lcfz;)V trigger
	a (Laig;Lbyn;Lcfz;III)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lbyn;Lcfz;IIILbx$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
bx$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	<init> (Lba;Lcj$d;Lcj$d;Lcj$d;[Lbz;)V <init>
	a ([Lbz;)Lbx$a; hasItems
	a ([Lcml;)Lbx$a; hasItems
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lbyn;Lcfz;III)Z matches
	a (Lcfz;Lbz;)Z lambda$matches$0
by net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lby$a; createInstance
	a (Laig;Lcfz;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;ILby$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
by$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	<init> (Lba;Lbz;Lcj$d;Lcj$d;)V <init>
	a (Lbz;Lcj$d;)Lby$a; changedDurability
	a (Lba;Lbz;Lcj$d;)Lby$a; changedDurability
	a (Lcfz;I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
bz net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c items
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	<init> ()V <init>
	<init> (Lanl;Ljava/util/Set;Lcj$d;Lcj$d;[Lbj;[Lbj;Lchw;Lcl;)V <init>
	a (Lcfz;)Z matches
	a (Lcom/google/gson/JsonElement;)Lbz; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonElement;)[Lbz; fromJsonArray
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$1
	b (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
bz$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c items
	d tag
	e count
	f durability
	g potion
	h nbt
	<init> ()V <init>
	a ()Lbz$a; item
	a ([Lcml;)Lbz$a; of
	a (Lanl;)Lbz$a; of
	a (Lcj$d;)Lbz$a; withCount
	b (Lcj$d;)Lbz$a; hasDurability
	a (Lchw;)Lbz$a; isPotion
	a (Lqr;)Lbz$a; hasNbt
	a (Lbj;)Lbz$a; hasEnchantment
	b (Lbj;)Lbz$a; hasStoredEnchantment
	b ()Lbz; build
ca net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger
	a id
	<init> (Lacq;)V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lca$a; createInstance
	a (Laig;Lgu;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Lca$a;)Z lambda$trigger$0
ca$a net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance
	a location
	<init> (Lacq;Lba;Lba;)V <init>
	a (Lcpn;)Lca$a; placedBlock
	a ([Leck$a;)Lca$a; placedBlock
	a (Lch$a;Lbz$a;Lacq;)Lca$a; itemUsedOnLocation
	a (Lch$a;Lbz$a;)Lca$a; itemUsedOnBlock
	b (Lch$a;Lbz$a;)Lca$a; allayDropItemOnBlock
	a (Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (I)[Leck; lambda$placedBlock$0
cb net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcb$a; createInstance
	a (Laig;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ljava/util/List;Ljava/util/Set;Lcb$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cb$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	<init> (Lba;[Lba;Lcj$d;)V <init>
	a ([Lbo$a;)Lcb$a; crossbowKilled
	a (Lcj$d;)Lcb$a; crossbowKilled
	a (Ljava/util/Collection;I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cc net/minecraft/advancements/critereon/KilledTrigger
	a id
	<init> (Lacq;)V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcc$a; createInstance
	a (Laig;Lbfj;Lben;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Ldzk;Lben;Lcc$a;)Z lambda$trigger$0
cc$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	<init> (Lacq;Lba;Lba;Lbd;)V <init>
	a (Lbo;)Lcc$a; playerKilledEntity
	a (Lbo$a;)Lcc$a; playerKilledEntity
	c ()Lcc$a; playerKilledEntity
	a (Lbo;Lbd;)Lcc$a; playerKilledEntity
	a (Lbo$a;Lbd;)Lcc$a; playerKilledEntity
	a (Lbo;Lbd$a;)Lcc$a; playerKilledEntity
	a (Lbo$a;Lbd$a;)Lcc$a; playerKilledEntity
	d ()Lcc$a; playerKilledEntityNearSculkCatalyst
	b (Lbo;)Lcc$a; entityKilledPlayer
	b (Lbo$a;)Lcc$a; entityKilledPlayer
	e ()Lcc$a; entityKilledPlayer
	b (Lbo;Lbd;)Lcc$a; entityKilledPlayer
	b (Lbo$a;Lbd;)Lcc$a; entityKilledPlayer
	b (Lbo;Lbd$a;)Lcc$a; entityKilledPlayer
	b (Lbo$a;Lbd$a;)Lcc$a; entityKilledPlayer
	a (Laig;Ldzk;Lben;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cd net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcd$a; createInstance
	a (Laig;Leei;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Leei;ILcd$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cd$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	<init> (Lba;Lbf;Lcj$d;)V <init>
	a (Lbf;)Lcd$a; levitated
	a (Laig;Leei;I)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
ce net/minecraft/advancements/critereon/LightPredicate
	a ANY
	b composite
	<init> (Lcj$d;)V <init>
	a (Laif;Lgu;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lce; fromJson
	<clinit> ()V <clinit>
ce$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	<init> ()V <init>
	a ()Lce$a; light
	a (Lcj$d;)Lce$a; setComposite
	b ()Lce; build
cf net/minecraft/advancements/critereon/LighthingBoltPredicate
	b BLOCKS_SET_ON_FIRE_KEY
	c ENTITY_STRUCK_KEY
	d blocksSetOnFire
	e entityStruck
	<init> (Lcj$d;Lbo;)V <init>
	a (Lcj$d;)Lcf; blockSetOnFire
	a (Lcom/google/gson/JsonObject;)Lcf; fromJson
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	c ()Lbp$a; type
	a (Lbfj;Laif;Leei;)Z matches
	a (Laif;Leei;Lbfj;)Z lambda$matches$0
cg net/minecraft/advancements/critereon/LightningStrikeTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcg$a; createInstance
	a (Laig;Lbfy;Ljava/util/List;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Ljava/util/List;Lcg$a;)Z lambda$trigger$1
	a (Laig;Lbfj;)Ldzk; lambda$trigger$0
	<clinit> ()V <clinit>
cg$a net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	a lightning
	b bystander
	<init> (Lba;Lba;Lba;)V <init>
	a (Lbo;Lbo;)Lcg$a; lighthingStrike
	a (Ldzk;Ljava/util/List;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
ch net/minecraft/advancements/critereon/LocationPredicate
	b LOGGER
	a ANY
	c x
	d y
	e z
	f biome
	g structure
	h dimension
	i smokey
	j light
	k block
	l fluid
	<init> (Lcj$c;Lcj$c;Lcj$c;Lacp;Lacp;Lacp;Ljava/lang/Boolean;Lce;Lat;Lbv;)V <init>
	a (Lacp;)Lch; inBiome
	b (Lacp;)Lch; inDimension
	c (Lacp;)Lch; inStructure
	a (Lcj$c;)Lch; atYLocation
	a (Laif;DDD)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lch; fromJson
	a (Lacq;)Lacp; lambda$fromJson$2
	b (Lacq;)Lacp; lambda$fromJson$1
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonElement;)V lambda$serializeToJson$0
	<clinit> ()V <clinit>
ch$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e structure
	f dimension
	g smokey
	h light
	i block
	j fluid
	<init> ()V <init>
	a ()Lch$a; location
	a (Lcj$c;)Lch$a; setX
	b (Lcj$c;)Lch$a; setY
	c (Lcj$c;)Lch$a; setZ
	a (Lacp;)Lch$a; setBiome
	b (Lacp;)Lch$a; setStructure
	c (Lacp;)Lch$a; setDimension
	a (Lce;)Lch$a; setLight
	a (Lat;)Lch$a; setBlock
	a (Lbv;)Lch$a; setFluid
	a (Ljava/lang/Boolean;)Lch$a; setSmokey
	b ()Lch; build
ci net/minecraft/advancements/critereon/LootTableTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lci$a; createInstance
	a (Laig;Lacq;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lacq;Lci$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
ci$a net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	a lootTable
	<init> (Lba;Lacq;)V <init>
	a (Lacq;)Lci$a; lootTableUsed
	b (Lacq;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cj net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	<init> (Ljava/lang/Number;Ljava/lang/Number;)V <init>
	a ()Ljava/lang/Number; getMin
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;Lcj;Ljava/util/function/BiFunction;Lcj$a;)Lcj; fromJson
	a (Lcom/mojang/brigadier/StringReader;Lcj$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcj; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	<clinit> ()V <clinit>
cj$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
	create (Ljava/lang/Number;Ljava/lang/Number;)Lcj; create
cj$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)Lcj; create
cj$c net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	e ANY
	f minSq
	g maxSq
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lcj$c; create
	a (Ljava/lang/Double;)Ljava/lang/Double; squareOpt
	<init> (Ljava/lang/Double;Ljava/lang/Double;)V <init>
	a (D)Lcj$c; exactly
	a (DD)Lcj$c; between
	b (D)Lcj$c; atLeast
	c (D)Lcj$c; atMost
	d (D)Z matches
	e (D)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lcj$c; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lcj$c; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$c; fromReader
	b (Ljava/lang/Double;)Ljava/lang/Double; lambda$fromReader$0
	<clinit> ()V <clinit>
cj$d net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lcj$d; create
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	<init> (Ljava/lang/Integer;Ljava/lang/Integer;)V <init>
	a (I)Lcj$d; exactly
	a (II)Lcj$d; between
	b (I)Lcj$d; atLeast
	c (I)Lcj$d; atMost
	d (I)Z matches
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lcj$d; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lcj$d; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcj$d; fromReader
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$fromReader$0
	<clinit> ()V <clinit>
ck net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	<init> (Ljava/util/Map;)V <init>
	a ()Lck; effects
	a (Lbey;)Lck; and
	a (Lbey;Lck$a;)Lck; and
	a (Lbfj;)Z matches
	a (Lbfz;)Z matches
	a (Ljava/util/Map;)Z matches
	a (Lcom/google/gson/JsonElement;)Lck; fromJson
	b ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
	<clinit> ()V <clinit>
ck$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	<init> (Lcj$d;Lcj$d;Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	<init> ()V <init>
	a (Lbfa;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lck$a; fromJson
cl net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	<init> (Lqr;)V <init>
	a (Lcfz;)Z matches
	a (Lbfj;)Z matches
	a (Lrk;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lcl; fromJson
	b (Lbfj;)Lqr; getEntityTagToCompare
	<clinit> ()V <clinit>
cm net/minecraft/advancements/critereon/PickedUpItemTrigger
	a id
	<init> (Lacq;)V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcm$a; createInstance
	a (Laig;Lcfz;Lbfj;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Lcfz;Ldzk;Lcm$a;)Z lambda$trigger$0
cm$a net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	a item
	b entity
	<init> (Lacq;Lba;Lbz;Lba;)V <init>
	a (Lba;Lbz;Lba;)Lcm$a; thrownItemPickedUpByEntity
	b (Lba;Lbz;Lba;)Lcm$a; thrownItemPickedUpByPlayer
	a (Laig;Lcfz;Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cn net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcn$a; createInstance
	a (Laig;Lbfj;Lben;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Laig;Ldzk;Lben;FFZLcn$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cn$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	<init> (Lba;Lbc;Lba;)V <init>
	c ()Lcn$a; playerHurtEntity
	a (Lbc;)Lcn$a; playerHurtEntity
	a (Lbc$a;)Lcn$a; playerHurtEntity
	a (Lbo;)Lcn$a; playerHurtEntity
	a (Lbc;Lbo;)Lcn$a; playerHurtEntity
	a (Lbc$a;Lbo;)Lcn$a; playerHurtEntity
	a (Laig;Ldzk;Lben;FFZ)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
co net/minecraft/advancements/critereon/PlayerInteractTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lco$a; createInstance
	a (Laig;Lcfz;Lbfj;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Ldzk;Lco$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
co$a net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	a item
	b entity
	<init> (Lba;Lbz;Lba;)V <init>
	a (Lba;Lbz$a;Lba;)Lco$a; itemUsedOnEntity
	a (Lbz$a;Lba;)Lco$a; itemUsedOnEntity
	a (Lcfz;Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cp net/minecraft/advancements/critereon/PlayerPredicate
	b LOOKING_AT_RANGE
	c level
	d gameType
	e stats
	f recipes
	g advancements
	h lookingAt
	b (Lcom/google/gson/JsonElement;)Lcp$c; advancementPredicateFromJson
	<init> (Lcj$d;Lcmj;Ljava/util/Map;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Lbo;)V <init>
	a (Lbfj;Laif;Leei;)Z matches
	a (Lcom/google/gson/JsonObject;)Lcp; fromJson
	a (Lamq;Lacq;)Lamo; getStat
	a (Lamo;)Lacq; getStatValueId
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	c ()Lbp$a; type
	a (Lcom/google/gson/JsonObject;Lacq;Lcp$c;)V lambda$serializeCustomData$4
	a (Lcom/google/gson/JsonObject;Lacq;Ljava/lang/Boolean;)V lambda$serializeCustomData$3
	a (Lcom/google/gson/JsonArray;Lamo;Lcj$d;)V lambda$serializeCustomData$2
	a (Lbfj;)Z lambda$matches$1
	a (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map$Entry;)V lambda$advancementPredicateFromJson$0
cp$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a criterions
	<init> (Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V <init>
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lag;)Z test
	test (Ljava/lang/Object;)Z test
cp$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a state
	<init> (Z)V <init>
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lag;)Z test
	test (Ljava/lang/Object;)Z test
cp$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	a ()Lcom/google/gson/JsonElement; toJson
cp$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	f lookingAt
	<init> ()V <init>
	a ()Lcp$d; player
	a (Lcj$d;)Lcp$d; setLevel
	a (Lamo;Lcj$d;)Lcp$d; addStat
	a (Lacq;Z)Lcp$d; addRecipe
	a (Lcmj;)Lcp$d; setGameType
	a (Lbo;)Lcp$d; setLookingAt
	b (Lacq;Z)Lcp$d; checkAdvancementDone
	a (Lacq;Ljava/util/Map;)Lcp$d; checkAdvancementCriterions
	b ()Lcp; build
cq net/minecraft/advancements/critereon/PlayerTrigger
	a id
	<init> (Lacq;)V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcq$a; createInstance
	a (Laig;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcq$a;)Z lambda$trigger$0
cq$a net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	<init> (Lacq;Lba;)V <init>
	a (Lch;)Lcq$a; located
	a (Lbo;)Lcq$a; located
	c ()Lcq$a; sleptInBed
	d ()Lcq$a; raidWon
	e ()Lcq$a; avoidVibration
	f ()Lcq$a; tick
	a (Lcpn;Lcfu;)Lcq$a; walkOnBlockWithEquipment
cr net/minecraft/advancements/critereon/RecipeCraftedTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcr$a; createInstance
	a (Laig;Lacq;Ljava/util/List;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lacq;Ljava/util/List;Lcr$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cr$a net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance
	a recipeId
	b predicates
	<init> (Lba;Lacq;Ljava/util/List;)V <init>
	a (Lacq;Ljava/util/List;)Lcr$a; craftedItem
	a (Lacq;)Lcr$a; craftedItem
	b (Lacq;Ljava/util/List;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cs net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcs$a; createInstance
	a (Laig;Lcjc;)V trigger
	a (Lacq;)Lcs$a; unlocked
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcjc;Lcs$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cs$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	<init> (Lba;Lacq;)V <init>
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lcjc;)Z matches
ct net/minecraft/advancements/critereon/SerializationContext
	a INSTANCE
	b predicateGson
	<init> ()V <init>
	a ([Leck;)Lcom/google/gson/JsonElement; serializeConditions
	<clinit> ()V <clinit>
cu net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcu$a; createInstance
	a (Laig;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Lcu$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cu$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	<init> (Lba;Lbz;)V <init>
	a (Lbz;)Lcu$a; shotCrossbow
	a (Lcml;)Lcu$a; shotCrossbow
	a (Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
cv net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	<init> ()V <init>
	a (Lacy;Lal$a;)V addPlayerListener
	b (Lacy;Lal$a;)V removePlayerListener
	a (Lacy;)V removePlayerListeners
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	b (Lcom/google/gson/JsonObject;Lbe;)Lar; createInstance
	a (Laig;Ljava/util/function/Predicate;)V trigger
	a (Lcom/google/gson/JsonObject;Lbe;)Lam; createInstance
	b (Lacy;)Ljava/util/Set; lambda$addPlayerListener$0
cw net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcw$a; createInstance
	a (Lcom/google/gson/JsonObject;)Lcpn; deserializeBlock
	a (Laig;Ldcb;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldcb;Lcw$a;)Z lambda$trigger$2
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$deserializeBlock$1
	a (Lcpn;Ljava/lang/String;)V lambda$createInstance$0
	<clinit> ()V <clinit>
cw$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	<init> (Lba;Lcpn;Lcz;)V <init>
	a (Lcpn;)Lcw$a; slidesDownBlock
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Ldcb;)Z matches
cx net/minecraft/advancements/critereon/SlimePredicate
	b size
	<init> (Lcj$d;)V <init>
	a (Lcj$d;)Lcx; sized
	a (Lcom/google/gson/JsonObject;)Lcx; fromJson
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lbfj;Laif;Leei;)Z matches
	c ()Lbp$a; type
cy net/minecraft/advancements/critereon/StartRidingTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lcy$a; createInstance
	a (Laig;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcy$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
cy$a net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	<init> (Lba;)V <init>
	a (Lbo$a;)Lcy$a; playerStartsRiding
cz net/minecraft/advancements/critereon/StatePropertiesPredicate
	a ANY
	b properties
	a (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcz$c; fromJson
	b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
	<init> (Ljava/util/List;)V <init>
	a (Ldcc;Ldcd;)Z matches
	a (Ldcb;)Z matches
	a (Ldxe;)Z matches
	a (Ldcc;Ljava/util/function/Consumer;)V checkState
	a (Lcom/google/gson/JsonElement;)Lcz; fromJson
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;Lcz$c;)V lambda$serializeToJson$1
	a (Ldcc;Ljava/util/function/Consumer;Lcz$c;)V lambda$checkState$0
	<clinit> ()V <clinit>
cz$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	<init> ()V <init>
	a ()Lcz$a; properties
	a (Ldde;Ljava/lang/String;)Lcz$a; hasProperty
	a (Ldde;I)Lcz$a; hasProperty
	a (Ldde;Z)Lcz$a; hasProperty
	a (Ldde;Ljava/lang/Comparable;)Lcz$a; hasProperty
	b ()Lcz; build
cz$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	a value
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ldcd;Ldde;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
cz$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	<init> (Ljava/lang/String;)V <init>
	a (Ldcc;Ldcd;)Z match
	a (Ldcd;Ldde;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
	b ()Ljava/lang/String; getName
	a (Ldcc;Ljava/util/function/Consumer;)V checkState
cz$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	a minValue
	b maxValue
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ldcd;Ldde;)Z match
	a ()Lcom/google/gson/JsonElement; toJson
da net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lda$a; createInstance
	a (Laig;Lbfj;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Lda$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
da$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	<init> (Lba;Lba;)V <init>
	a (Lbo$a;)Lda$a; summonedEntity
	a (Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
db net/minecraft/advancements/critereon/TagPredicate
	a tag
	b expected
	<init> (Lanl;Z)V <init>
	a (Lanl;)Ldb; is
	b (Lanl;)Ldb; isNot
	a (Lhe;)Z matches
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;Lacp;)Ldb; fromJson
dc net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Ldc$a; createInstance
	a (Laig;Lbrl;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Ldc$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
dc$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	<init> (Lba;Lba;)V <init>
	c ()Ldc$a; tamedAnimal
	a (Lbo;)Ldc$a; tamedAnimal
	a (Ldzk;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
dd net/minecraft/advancements/critereon/TargetBlockTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Ldd$a; createInstance
	a (Laig;Lbfj;Leei;I)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Leei;ILdd$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
dd$a net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	a signalStrength
	b projectile
	<init> (Lba;Lcj$d;Lba;)V <init>
	a (Lcj$d;Lba;)Ldd$a; targetHit
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
	a (Ldzk;Leei;I)Z matches
de net/minecraft/advancements/critereon/TradeTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Lde$a; createInstance
	a (Laig;Lbxw;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Ldzk;Lcfz;Lde$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
de$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	<init> (Lba;Lba;Lbz;)V <init>
	c ()Lde$a; tradedWithVillager
	a (Lbo$a;)Lde$a; tradedWithVillager
	a (Ldzk;Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
df net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Ldf$a; createInstance
	a (Laig;Lgu;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (DLdf$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
df$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	<init> (Lba;Lcj$c;)V <init>
	a (D)Z matches
dg net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Ldg$a; createInstance
	a (Laig;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Ldg$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
dg$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	<init> (Lba;Lbz;)V <init>
	a (Lbz;)Ldg$a; usedTotem
	a (Lcml;)Ldg$a; usedTotem
	a (Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
dh net/minecraft/advancements/critereon/UsingItemTrigger
	a ID
	<init> ()V <init>
	a ()Lacq; getId
	a (Lcom/google/gson/JsonObject;Lba;Lbe;)Ldh$a; createInstance
	a (Laig;Lcfz;)V trigger
	b (Lcom/google/gson/JsonObject;Lba;Lbe;)Lar; createInstance
	a (Lcfz;Ldh$a;)Z lambda$trigger$0
	<clinit> ()V <clinit>
dh$a net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	a item
	<init> (Lba;Lbz;)V <init>
	a (Lbo$a;Lbz$a;)Ldh$a; lookingAt
	a (Lcfz;)Z matches
	a (Lct;)Lcom/google/gson/JsonObject; serializeToJson
di net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	<init> (Ljava/lang/Float;Ljava/lang/Float;)V <init>
	a (F)Ldi; exactly
	a (FF)Ldi; between
	b (F)Ldi; atLeast
	c (F)Ldi; atMost
	d (F)Z matches
	a (D)Z matchesSqr
	a ()Ljava/lang/Float; getMin
	b ()Ljava/lang/Float; getMax
	c ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Ldi; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Ldi; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Ldi; fromReader
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	a (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
	<clinit> ()V <clinit>
dj net/minecraft/advancements/critereon/package-info
dk net/minecraft/advancements/package-info
emy net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Lemy; values
	valueOf (Ljava/lang/String;)Lemy; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Lemy; byId
	d ()[Lemy; $values
	<clinit> ()V <clinit>
emz net/minecraft/client/Camera
	b initialized
	c level
	d entity
	e position
	f blockPosition
	g forwards
	h up
	i left
	j xRot
	k yRot
	l rotation
	m detached
	n eyeHeight
	o eyeHeightOld
	a FOG_DISTANCE_SCALE
	<init> ()V <init>
	a (Lcls;Lbfj;ZZF)V setup
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	b (DDD)V setPosition
	a (Leei;)V setPosition
	b ()Leei; getPosition
	c ()Lgu; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Lorg/joml/Quaternionf; rotation
	g ()Lbfj; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Lemz$a; getNearPlane
	k ()Ldxg; getFluidInCamera
	l ()Lorg/joml/Vector3f; getLookVector
	m ()Lorg/joml/Vector3f; getUpVector
	n ()Lorg/joml/Vector3f; getLeftVector
	o ()V reset
emz$a net/minecraft/client/Camera$NearPlane
	a forward
	b left
	c up
	<init> (Leei;Leei;Leei;)V <init>
	a ()Leei; getTopLeft
	b ()Leei; getTopRight
	c ()Leei; getBottomLeft
	d ()Leei; getBottomRight
	a (FF)Leei; getPointOnPlane
ena net/minecraft/client/CameraType
	a FIRST_PERSON
	b THIRD_PERSON_BACK
	c THIRD_PERSON_FRONT
	d VALUES
	e firstPerson
	f mirrored
	g $VALUES
	values ()[Lena; values
	valueOf (Ljava/lang/String;)Lena; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()Z isFirstPerson
	b ()Z isMirrored
	c ()Lena; cycle
	d ()[Lena; $values
	<clinit> ()V <clinit>
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	a VANILLA_NAME
	<init> ()V <init>
	getClientModName ()Ljava/lang/String; getClientModName
enb net/minecraft/client/ClientRecipeBook
	c LOGGER
	d collectionsByTab
	e allCollections
	<init> ()V <init>
	a (Ljava/lang/Iterable;Lhs;)V setupCollections
	a (Ljava/lang/Iterable;)Ljava/util/Map; categorizeAndGroupRecipes
	g (Lcjc;)Lenw; getCategory
	b ()Ljava/util/List; getCollections
	a (Lenw;)Ljava/util/List; getCollection
	h (Lcjc;)Ljava/lang/Object; lambda$getCategory$6
	b (Lenw;)Ljava/util/List; lambda$categorizeAndGroupRecipes$5
	c (Lenw;)Ljava/util/List; lambda$categorizeAndGroupRecipes$4
	a (Ljava/util/Map;Lenw;Ljava/util/List;)V lambda$setupCollections$3
	a (Ljava/util/Map;Lenw;)Ljava/util/stream/Stream; lambda$setupCollections$2
	a (Ljava/util/Map;Lhs;Lcom/google/common/collect/ImmutableList$Builder;Lenw;Ljava/util/List;)V lambda$setupCollections$1
	a (Lhs;Ljava/util/List;)Leyg; lambda$setupCollections$0
	<clinit> ()V <clinit>
enb$1 net/minecraft/client/ClientRecipeBook$1
	a $SwitchMap$net$minecraft$world$item$crafting$CraftingBookCategory
	b $SwitchMap$net$minecraft$world$item$crafting$CookingBookCategory
	<clinit> ()V <clinit>
enc net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d id
	e key
	f $VALUES
	values ()[Lenc; values
	valueOf (Ljava/lang/String;)Lenc; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	d ()[Lenc; $values
	<clinit> ()V <clinit>
end net/minecraft/client/ComponentCollector
	a parts
	<init> ()V <init>
	a (Lta;)V append
	a ()Lta; getResult
	b ()Lta; getResultOrEmpty
	c ()V reset
ene net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	<init> (Lfex;)V <init>
	a (ILqr;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (Lgu;Ljava/util/function/Consumer;)V queryBlockEntityTag
enf net/minecraft/client/GameNarrator
	a NO_TITLE
	b LOGGER
	c minecraft
	d narrator
	<init> (Lenn;)V <init>
	a (Lsw;)V sayChat
	b (Lsw;)V say
	c (Lsw;)V sayNow
	a (Ljava/lang/String;)V sayNow
	d ()Lenp; getStatus
	b (Ljava/lang/String;)V logNarratedMessage
	a (Lenp;)V updateNarratorStatus
	a ()Z isActive
	b ()V clear
	c ()V destroy
	a (Z)V checkStatus
	<clinit> ()V <clinit>
enf$a net/minecraft/client/GameNarrator$NarratorInitException
	<init> (Ljava/lang/String;)V <init>
eng net/minecraft/client/GraphicsStatus
	a FAST
	b FANCY
	c FABULOUS
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Leng; values
	valueOf (Ljava/lang/String;)Leng; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	toString ()Ljava/lang/String; toString
	a (I)Leng; byId
	d ()[Leng; $values
	<clinit> ()V <clinit>
eng$1 net/minecraft/client/GraphicsStatus$1
	a $SwitchMap$net$minecraft$client$GraphicsStatus
	<clinit> ()V <clinit>
enh net/minecraft/client/GuiMessage
	a addedTime
	b content
	c signature
	d tag
	<init> (ILsw;Lth;Leni;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I addedTime
	b ()Lsw; content
	c ()Lth; signature
	d ()Leni; tag
enh$a net/minecraft/client/GuiMessage$Line
	a addedTime
	b content
	c tag
	d endOfEntry
	<init> (ILaom;Leni;Z)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I addedTime
	b ()Laom; content
	c ()Leni; tag
	d ()Z endOfEntry
eni net/minecraft/client/GuiMessageTag
	a indicatorColor
	b icon
	c text
	d logTag
	e SYSTEM_TEXT
	f SYSTEM_TEXT_SINGLE_PLAYER
	g CHAT_NOT_SECURE_TEXT
	h CHAT_MODIFIED_TEXT
	i CHAT_NOT_SECURE_INDICATOR_COLOR
	j CHAT_MODIFIED_INDICATOR_COLOR
	k SYSTEM
	l SYSTEM_SINGLE_PLAYER
	m CHAT_NOT_SECURE
	n TEXTURE_LOCATION
	<init> (ILeni$a;Lsw;Ljava/lang/String;)V <init>
	a ()Leni; system
	b ()Leni; systemSinglePlayer
	c ()Leni; chatNotSecure
	a (Ljava/lang/String;)Leni; chatModified
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()I indicatorColor
	e ()Leni$a; icon
	f ()Lsw; text
	g ()Ljava/lang/String; logTag
	<clinit> ()V <clinit>
eni$a net/minecraft/client/GuiMessageTag$Icon
	a CHAT_MODIFIED
	b u
	c v
	d width
	e height
	f $VALUES
	values ()[Leni$a; values
	valueOf (Ljava/lang/String;)Leni$a; valueOf
	<init> (Ljava/lang/String;IIIII)V <init>
	a (Leox;II)V draw
	a ()[Leni$a; $values
	<clinit> ()V <clinit>
enj net/minecraft/client/HotbarManager
	b LOGGER
	a NUM_HOTBAR_GROUPS
	c optionsFile
	d fixerUpper
	e hotbars
	f loaded
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V <init>
	b ()V load
	a ()V save
	a (I)Lfja; get
	<clinit> ()V <clinit>
enk net/minecraft/client/InputType
	a NONE
	b MOUSE
	c KEYBOARD_ARROW
	d KEYBOARD_TAB
	e $VALUES
	values ()[Lenk; values
	valueOf (Ljava/lang/String;)Lenk; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z isMouse
	b ()Z isKeyboard
	c ()[Lenk; $values
	<clinit> ()V <clinit>
enl net/minecraft/client/KeyMapping
	h ALL
	i MAP
	j CATEGORIES
	a CATEGORY_MOVEMENT
	b CATEGORY_MISC
	c CATEGORY_MULTIPLAYER
	d CATEGORY_GAMEPLAY
	e CATEGORY_INVENTORY
	f CATEGORY_INTERFACE
	g CATEGORY_CREATIVE
	k CATEGORY_SORT_ORDER
	l name
	m defaultKey
	n category
	o key
	p isDown
	q clickCount
	a (Lehe$a;)V click
	a (Lehe$a;Z)V set
	a ()V setAll
	b ()V releaseAll
	c ()V resetToggleKeys
	d ()V resetMapping
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lehe$b;ILjava/lang/String;)V <init>
	e ()Z isDown
	f ()Ljava/lang/String; getCategory
	g ()Z consumeClick
	n ()V release
	h ()Ljava/lang/String; getName
	i ()Lehe$a; getDefaultKey
	b (Lehe$a;)V setKey
	a (Lenl;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	b (Lenl;)Z same
	j ()Z isUnbound
	a (II)Z matches
	a (I)Z matchesMouse
	k ()Lsw; getTranslatedKeyMessage
	l ()Z isDefault
	m ()Ljava/lang/String; saveString
	a (Z)V setDown
	compareTo (Ljava/lang/Object;)I compareTo
	b (Ljava/lang/String;)Lsw; lambda$createNameSupplier$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
enm net/minecraft/client/KeyboardHandler
	a DEBUG_CRASH_TIME
	b minecraft
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	<init> (Lenn;)V <init>
	a (I)Z handleChunkDebugKeys
	a (Ln;Lsw;)V debugComponent
	a (Lsw;)V debugFeedbackComponent
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
	b (I)Z handleDebugKeys
	a (ZZ)V copyRecreateCommand
	a (Ldcb;Lgu;Lqr;)V copyCreateBlockCommand
	a (Lacq;Leei;Lqr;)V copyCreateEntityCommand
	a (JIIII)V keyPress
	a (JII)V charTyped
	a (J)V setup
	a ()Ljava/lang/String; getClipboard
	a (Ljava/lang/String;)V setClipboard
	b ()V tick
	a (IJ)V lambda$getClipboard$12
	b (JII)V lambda$setup$11
	c (JII)V lambda$setup$10
	b (JIIII)V lambda$setup$9
	c (JIIII)V lambda$setup$8
	a (Leqt;CI)V lambda$charTyped$7
	a (Leqt;II)V lambda$charTyped$6
	a (ILeuq;[ZIII)V lambda$keyPress$5
	b (Lsw;)V lambda$keyPress$4
	c (Lsw;)V lambda$keyPress$3
	a (Lacq;Lbfj;Lqr;)V lambda$copyRecreateCommand$2
	b (Ldcb;Lgu;Lqr;)V lambda$copyRecreateCommand$1
	a (Ljava/nio/file/Path;Lts;)Lts; lambda$handleDebugKeys$0
enm$1 net/minecraft/client/KeyboardHandler$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	<clinit> ()V <clinit>
enn net/minecraft/client/Minecraft
	F instance
	G LOGGER
	a ON_OSX
	H MAX_TICKS_PER_UPDATE
	b DEFAULT_FONT
	c UNIFORM_FONT
	d ALT_FONT
	I REGIONAL_COMPLIANCIES
	J RESOURCE_RELOAD_INITIAL_TASK
	K SOCIAL_INTERACTIONS_NOT_AVAILABLE
	e UPDATE_DRIVERS_ADVICE
	L resourcePackDirectory
	M profileProperties
	N textureManager
	O fixerUpper
	P virtualScreen
	Q window
	R timer
	S renderBuffers
	f levelRenderer
	T entityRenderDispatcher
	U itemRenderer
	g particleEngine
	V searchRegistry
	W user
	h font
	i fontFilterFishy
	j gameRenderer
	k debugRenderer
	X progressListener
	l gui
	m options
	Y hotbarManager
	n mouseHandler
	o keyboardHandler
	Z lastInputType
	p gameDirectory
	aa launchedVersion
	ab versionType
	ac proxy
	ad levelSource
	q frameTimer
	ae is64bit
	af demo
	ag allowsMultiplayer
	ah allowsChat
	ai resourceManager
	aj vanillaPackResources
	ak downloadedPackSource
	al resourcePackRepository
	am languageManager
	an blockColors
	ao itemColors
	ap mainRenderTarget
	aq soundManager
	ar musicManager
	as fontManager
	at splashManager
	au gpuWarnlistManager
	av regionalCompliancies
	aw authenticationService
	ax minecraftSessionService
	ay userApiService
	az skinManager
	aA modelManager
	aB blockRenderer
	aC paintingTextures
	aD mobEffectTextures
	aE toast
	aF tutorial
	aG playerSocialManager
	aH entityModels
	aI blockEntityRenderDispatcher
	aJ telemetryManager
	aK profileKeyPairManager
	aL realmsDataFetcher
	aM quickPlayLog
	r gameMode
	s level
	t player
	aN singleplayerServer
	aO pendingConnection
	aP isLocalServer
	u cameraEntity
	v crosshairPickEntity
	w hitResult
	aQ rightClickDelay
	x missTime
	aR pause
	aS pausePartialTick
	aT lastNanoTime
	aU lastTime
	aV frames
	y noRender
	z screen
	aW overlay
	aX connectedToRealms
	aY gameThread
	aZ running
	ba delayedCrash
	bb fps
	A fpsString
	bc frameTimeNs
	B wireframe
	C chunkPath
	D chunkVisibility
	E smartCull
	bd windowActive
	be progressTasks
	bf pendingReload
	bg socialInteractionsToast
	bh profiler
	bi fpsPieRenderTicks
	bj fpsPieProfiler
	bk fpsPieResults
	bl metricsRecorder
	bm reloadStateTracker
	bn savedCpuDuration
	bo gpuUtilization
	bp currentFrameProfile
	bq realms32BitWarningStatus
	br narrator
	bs chatListener
	bt reportingContext
	bu debugPath
	<init> (Lezy;)V <init>
	aZ ()V onGameLoadFinished
	a (Leiz;Lakt;Lezy$c;)V setInitialScreen
	b (Ljava/lang/Object;)Z countryEqualsISO3
	c ()V updateTitle
	ba ()Ljava/lang/String; createTitle
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lezy;)Lcom/mojang/authlib/minecraft/UserApiService; createUserApiService
	d ()Laoz; checkModStatus
	a (Ljava/lang/Throwable;)V rollbackResourcePacks
	a (Ljava/lang/Throwable;Lsw;)V clearResourcePacksOnError
	bb ()V abortResourcePackRecovery
	a (Lsw;)V addResourcePackLoadFailToast
	e ()V run
	b (Z)V selectMainFont
	bc ()V createSearchTrees
	a (IJ)V onFullscreenError
	bd ()Z checkIs64Bit
	f ()Legv; getMainRenderTarget
	g ()Ljava/lang/String; getLaunchedVersion
	h ()Ljava/lang/String; getVersionType
	a (Lo;)V delayCrash
	b (Lo;)V delayCrashRaw
	c (Lo;)V crash
	i ()Z isEnforceUnicode
	j ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	e (Z)Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	be ()V selfTest
	k ()Ldyy; getLevelSource
	a (Ljava/lang/String;)V openChatScreen
	a (Leuq;)V setScreen
	a (Leuk;)V setOverlay
	l ()V destroy
	close ()V close
	f (Z)V runTick
	bf ()Z shouldRenderFpsPie
	a (ZLbaq;)Lban; constructProfiler
	b (ZLbaq;)V finishProfilers
	a ()V resizeDisplay
	b ()V cursorEntered
	m ()I getFps
	n ()J getFrameTimeNs
	bg ()I getFramerateLimit
	o ()V emergencySave
	a (Ljava/util/function/Consumer;)Z debugClientMetricsStart
	bh ()V debugClientMetricsStop
	bi ()V debugClientMetricsCancel
	a (Lab;Ljava/util/List;)Ljava/nio/file/Path; archiveProfilingReport
	a (I)V debugFpsMeterKeyPress
	a (Leox;Lbam;)V renderFpsMeter
	p ()V stop
	q ()Z isRunning
	c (Z)V pauseGame
	g (Z)V continueAttack
	bj ()Z startAttack
	bs ()V startUseItem
	r ()Lfyx; getMusicManager
	s ()V tick
	bt ()Z isMultiplayerServer
	bu ()V handleKeybinds
	t ()Lfzg; getTelemetryManager
	u ()D getGpuUtilization
	v ()Lffc; getProfileKeyPairManager
	w ()Lezk; createWorldOpenFlows
	a (Ljava/lang/String;Ldyy$c;Laki;Ladk;Z)V doWorldLoad
	a (Lfew;)V setLevel
	y ()V clearLevel
	b (Leuq;)V clearLevel
	d (Leuq;)V updateScreenAndTick
	c (Leuq;)V forceSetScreen
	b (Lfew;)V updateLevelInEngines
	z ()Z telemetryOptInExtra
	A ()Z extraTelemetryAvailable
	B ()Z allowsTelemetry
	C ()Z allowsMultiplayer
	D ()Z allowsRealms
	E ()Z shouldShowBanNotice
	F ()Lcom/mojang/authlib/minecraft/BanDetails; multiplayerBan
	a (Ljava/util/UUID;)Z isBlocked
	G ()Lenn$a; getChatStatus
	H ()Z isDemo
	I ()Lfex; getConnection
	J ()Z renderNames
	K ()Z useFancyGraphics
	L ()Z useShaderTransparency
	M ()Z useAmbientOcclusion
	bv ()V pickBlock
	a (Lcfz;Lczn;)V addCustomNbtData
	d (Lo;)Lo; fillReport
	a (Lenn;Lfwb;Ljava/lang/String;Lenr;Lo;)V fillReport
	a (Lab;Lenn;Lfwb;Ljava/lang/String;Lenr;)Lab; fillSystemReport
	N ()Lenn; getInstance
	O ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	a (Lffq;)V updateReportEnvironment
	P ()Lffd; getCurrentServer
	Q ()Z isLocalServer
	R ()Z hasSingleplayerServer
	S ()Lfyp; getSingleplayerServer
	T ()Z isSingleplayer
	U ()Leoc; getUser
	V ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	W ()Ljava/net/Proxy; getProxy
	X ()Lfuw; getTextureManager
	Y ()Lakx; getResourceManager
	Z ()Laki; getResourcePackRepository
	aa ()Lajo; getVanillaPackResources
	ab ()Lfvn; getDownloadedPackSource
	ac ()Ljava/nio/file/Path; getResourcePackDirectory
	ad ()Lfwb; getLanguageManager
	a (Lacq;)Ljava/util/function/Function; getTextureAtlas
	ae ()Z is64Bit
	af ()Z isPaused
	ag ()Lfjr; getGpuWarnlistManager
	ah ()Lfzc; getSoundManager
	ai ()Lame; getSituationalMusic
	aj ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	ak ()Lfvu; getSkinManager
	al ()Lbfj; getCameraEntity
	a (Lbfj;)V setCameraEntity
	b (Lbfj;)Z shouldEntityAppearGlowing
	au ()Ljava/lang/Thread; getRunningThread
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	e (Ljava/lang/Runnable;)Z shouldRun
	am ()Lfko; getBlockRenderer
	an ()Lfow; getEntityRenderDispatcher
	ao ()Lflt; getBlockEntityRenderDispatcher
	ap ()Lfpw; getItemRenderer
	a (Lfyk$a;)Lfyl; getSearchTree
	a (Lfyk$a;Ljava/util/List;)V populateSearchTree
	aq ()Laoo; getFrameTimer
	ar ()Z isConnectedToRealms
	d (Z)V setConnectedToRealms
	as ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	av ()F getFrameTime
	aw ()F getDeltaFrameTime
	ax ()Leoo; getBlockColors
	ay ()Z showOnlyReducedInfo
	az ()Lerh; getToasts
	aA ()Lgaf; getTutorial
	aB ()Z isWindowActive
	aC ()Lenj; getHotbarManager
	aD ()Lfwx; getModelManager
	aE ()Lfvt; getPaintingTextures
	aF ()Lfvs; getMobEffectTextures
	a (Z)V setWindowActive
	a (Ljava/io/File;II)Lsw; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lsw; grabHugeScreenshot
	aG ()Lban; getProfiler
	aH ()Lais; getProgressListener
	aI ()Lfvv; getSplashManager
	aJ ()Leuk; getOverlay
	aK ()Leys; getPlayerSocialManager
	aL ()Z renderOnThread
	aM ()Lehn; getWindow
	aN ()Lfkd; renderBuffers
	b (I)V updateMaxMipLevel
	aO ()Lfea; getEntityModels
	aP ()Z isTextFilteringEnabled
	aQ ()V prepareForMultiplayer
	aR ()Lenv; getRealms32BitWarningStatus
	aS ()Lapj; getProfileKeySignatureValidator
	aT ()Lenk; getLastInputType
	a (Lenk;)V setLastInputType
	aU ()Lenf; getNarrator
	aV ()Lffg; getChatListener
	aW ()Lffs; getReportingContext
	aX ()Lekq; realmsDataFetcher
	aY ()Lfjg; quickPlayLog
	a (Ljava/io/File;Lts;)Lts; lambda$grabHugeScreenshot$54
	b (Ljava/io/File;Lts;)Lts; lambda$grabPanoramixScreenshot$53
	b (Lsw;)V lambda$grabPanoramixScreenshot$52
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$delayTextureReload$51
	a (Lfwb;)Ljava/lang/String; lambda$fillSystemReport$50
	a (Lenr;)Ljava/lang/String; lambda$fillSystemReport$49
	bw ()Ljava/lang/String; lambda$fillSystemReport$48
	bx ()Ljava/lang/String; lambda$fillSystemReport$47
	by ()Ljava/lang/String; lambda$fillSystemReport$46
	a (Lenn;)Ljava/lang/String; lambda$fillSystemReport$45
	b (Ljava/lang/String;)Ljava/lang/String; lambda$fillSystemReport$44
	c (Lsw;)V lambda$doWorldLoad$43
	a (Ladk;)Ljava/lang/String; lambda$doWorldLoad$42
	a (Ldyy$c;Laki;Ladk;Ladh;Ljava/lang/Thread;)Lfyp; lambda$doWorldLoad$41
	c (I)Laio; lambda$doWorldLoad$40
	bz ()Z lambda$tick$39
	bA ()V lambda$tick$38
	a (Ljava/util/function/Consumer;Lbam;)V lambda$debugClientMetricsStart$37
	a (Lbam;)V lambda$debugClientMetricsStart$36
	a (Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V lambda$debugClientMetricsStart$35
	a (Ljava/util/function/Consumer;Ljava/nio/file/Path;)V lambda$debugClientMetricsStart$34
	a (Lab;Ljava/util/function/Consumer;Ljava/util/List;)V lambda$debugClientMetricsStart$33
	b (Ljava/util/function/Consumer;Ljava/nio/file/Path;)V lambda$debugClientMetricsStart$32
	a (Ljava/util/function/Consumer;Lsw;)V lambda$debugClientMetricsStart$31
	a (Ljava/nio/file/Path;Lts;)Lts; lambda$debugClientMetricsStart$30
	b (Ljava/util/function/Consumer;Lbam;)V lambda$debugClientMetricsStart$29
	a (Ljava/util/function/Consumer;DI)V lambda$debugClientMetricsStart$28
	a (Leic;)V lambda$runTick$27
	b (Ljava/util/concurrent/CompletableFuture;)V lambda$runTick$26
	h (Z)V lambda$openChatScreen$25
	a (ZLjava/util/concurrent/CompletableFuture;Ljava/util/Optional;)V lambda$reloadResourcePacks$24
	c (Ljava/util/concurrent/CompletableFuture;)V lambda$reloadResourcePacks$23
	a (ZLjava/lang/Throwable;)V lambda$reloadResourcePacks$22
	e (Lo;)Lo; lambda$delayCrashRaw$21
	f (Lo;)Lo; lambda$delayCrash$20
	a (Ljava/util/List;)V lambda$createSearchTrees$19
	b (Ljava/util/List;)Lfyi; lambda$createSearchTrees$18
	a (Leyg;)Ljava/util/stream/Stream; lambda$createSearchTrees$17
	a (Leyg;Lcjc;)Lacq; lambda$createSearchTrees$16
	b (Leyg;)Ljava/util/stream/Stream; lambda$createSearchTrees$15
	c (Ljava/lang/String;)Z lambda$createSearchTrees$14
	d (Lsw;)Ljava/lang/String; lambda$createSearchTrees$13
	b (Leyg;Lcjc;)Ljava/util/stream/Stream; lambda$createSearchTrees$12
	c (Ljava/util/List;)Lfyi; lambda$createSearchTrees$11
	a (Lcfz;)Ljava/util/stream/Stream; lambda$createSearchTrees$10
	d (Ljava/util/List;)Lfyi; lambda$createSearchTrees$9
	b (Lcfz;)Ljava/util/stream/Stream; lambda$createSearchTrees$8
	c (Lcfz;)Ljava/util/stream/Stream; lambda$createSearchTrees$7
	d (Ljava/lang/String;)Z lambda$createSearchTrees$6
	e (Lsw;)Ljava/lang/String; lambda$createSearchTrees$5
	f (Lsw;)V lambda$clearResourcePacksOnError$4
	a (Leiz;Lakt;Lezy;Z)V lambda$new$3
	a (Ljava/util/Optional;)V lambda$new$2
	bB ()V lambda$new$1
	bC ()I lambda$new$0
	<clinit> ()V <clinit>
enn$1 net/minecraft/client/Minecraft$1
	a $SwitchMap$net$minecraft$world$phys$HitResult$Type
	<clinit> ()V <clinit>
enn$a net/minecraft/client/Minecraft$ChatStatus
	a ENABLED
	b DISABLED_BY_OPTIONS
	c DISABLED_BY_LAUNCHER
	d DISABLED_BY_PROFILE
	e INFO_DISABLED_BY_PROFILE
	f message
	g $VALUES
	values ()[Lenn$a; values
	valueOf (Ljava/lang/String;)Lenn$a; valueOf
	<init> (Ljava/lang/String;ILsw;)V <init>
	a ()Lsw; getMessage
	a (Z)Z isChatAllowed
	b ()[Lenn$a; $values
	<clinit> ()V <clinit>
enn$a$1 net/minecraft/client/Minecraft$ChatStatus$1
	<init> (Ljava/lang/String;ILsw;)V <init>
	a (Z)Z isChatAllowed
enn$a$2 net/minecraft/client/Minecraft$ChatStatus$2
	<init> (Ljava/lang/String;ILsw;)V <init>
	a (Z)Z isChatAllowed
enn$a$3 net/minecraft/client/Minecraft$ChatStatus$3
	<init> (Ljava/lang/String;ILsw;)V <init>
	a (Z)Z isChatAllowed
enn$a$4 net/minecraft/client/Minecraft$ChatStatus$4
	<init> (Ljava/lang/String;ILsw;)V <init>
	a (Z)Z isChatAllowed
eno net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	<init> (Lenn;)V <init>
	a (JIII)V onPress
	a (JDD)V onScroll
	a (JLjava/util/List;)V onDrop
	a (J)V setup
	b (JDD)V onMove
	a ()V turnPlayer
	b ()Z isLeftPressed
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
	k ()V cursorEntered
	a (Leuq;DDDD)V lambda$onMove$11
	a (Leuq;DD)V lambda$onMove$10
	a (JIJ)V lambda$setup$9
	a (J[Ljava/nio/file/Path;)V lambda$setup$8
	c (JDD)V lambda$setup$7
	d (JDD)V lambda$setup$6
	b (JIII)V lambda$setup$5
	c (JIII)V lambda$setup$4
	e (JDD)V lambda$setup$3
	f (JDD)V lambda$setup$2
	a ([ZLeuq;DDI)V lambda$onPress$1
	b ([ZLeuq;DDI)V lambda$onPress$0
enp net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g name
	h $VALUES
	values ()[Lenp; values
	valueOf (Ljava/lang/String;)Lenp; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Lsw; getName
	a (I)Lenp; byId
	c ()Z shouldNarrateChat
	d ()Z shouldNarrateSystem
	e ()[Lenp; $values
	<clinit> ()V <clinit>
enq net/minecraft/client/OptionInstance
	c LOGGER
	a BOOLEAN_VALUES
	b BOOLEAN_TO_STRING
	d tooltip
	e toString
	f values
	g codec
	h initialValue
	i onValueUpdate
	j caption
	k value
	a (Ljava/lang/String;ZLjava/util/function/Consumer;)Lenq; createBoolean
	a (Ljava/lang/String;Z)Lenq; createBoolean
	a (Ljava/lang/String;Lenq$l;Z)Lenq; createBoolean
	a (Ljava/lang/String;Lenq$l;ZLjava/util/function/Consumer;)Lenq; createBoolean
	a (Ljava/lang/String;Lenq$l;Lenq$b;ZLjava/util/function/Consumer;)Lenq; createBoolean
	<init> (Ljava/lang/String;Lenq$l;Lenq$b;Lenq$n;Ljava/lang/Object;Ljava/util/function/Consumer;)V <init>
	<init> (Ljava/lang/String;Lenq$l;Lenq$b;Lenq$n;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/util/function/Consumer;)V <init>
	a ()Lenq$l; noTooltip
	a (Lsw;)Lenq$l; cachedConstantTooltip
	b ()Lenq$b; forOptionEnum
	a (Lenr;III)Lepf; createButton
	a (Lenr;IIILjava/util/function/Consumer;)Lepf; createButton
	c ()Ljava/lang/Object; get
	d ()Lcom/mojang/serialization/Codec; codec
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/Object;)V set
	e ()Lenq$n; values
	b (Ljava/lang/Object;)Ljava/lang/Object; lambda$set$8
	c (Ljava/lang/Object;)V lambda$createButton$7
	a (Lsw;Lapc;)Lsw; lambda$forOptionEnum$6
	a (Lsw;Ljava/lang/Object;)Leqp; lambda$cachedConstantTooltip$5
	d (Ljava/lang/Object;)Leqp; lambda$noTooltip$4
	a (Lenq$b;Ljava/lang/Object;)Lsw; lambda$new$3
	a (Ljava/lang/Boolean;)V lambda$createBoolean$2
	b (Ljava/lang/Boolean;)V lambda$createBoolean$1
	a (Lsw;Ljava/lang/Boolean;)Lsw; lambda$static$0
	<clinit> ()V <clinit>
enq$a net/minecraft/client/OptionInstance$AltEnum
	a values
	b altValues
	c altCondition
	d valueSetter
	e codec
	<init> (Ljava/util/List;Ljava/util/List;Ljava/util/function/BooleanSupplier;Lenq$d$a;Lcom/mojang/serialization/Codec;)V <init>
	a ()Lepp$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/List; values
	c ()Ljava/util/List; altValues
	d ()Ljava/util/function/BooleanSupplier; altCondition
	e ()Lenq$d$a; valueSetter
	f ()Lcom/mojang/serialization/Codec; codec
enq$b net/minecraft/client/OptionInstance$CaptionBasedToString
	toString (Lsw;Ljava/lang/Object;)Lsw; toString
enq$c net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange
	a minInclusive
	b maxSupplier
	c encodableMaxInclusive
	<init> (ILjava/util/function/IntSupplier;I)V <init>
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	b ()I maxInclusive
	f ()Lcom/mojang/serialization/Codec; codec
	c ()Z createCycleButton
	a ()Lepp$c; valueListSupplier
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()I minInclusive
	g ()Ljava/util/function/IntSupplier; maxSupplier
	h ()I encodableMaxInclusive
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	c (Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult; lambda$codec$1
	a (Ljava/lang/Integer;I)Ljava/lang/String; lambda$codec$0
enq$d net/minecraft/client/OptionInstance$CycleableValueSet
	a ()Lepp$c; valueListSupplier
	e ()Lenq$d$a; valueSetter
	a (Lenq$l;Lenr;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	a (Lenq$l;IIILenr;Ljava/util/function/Consumer;Lenq;)Lepf; lambda$createButton$1
	a (Lenq;Lenr;Ljava/util/function/Consumer;Lepp;Ljava/lang/Object;)V lambda$createButton$0
enq$d$a net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter
	set (Lenq;Ljava/lang/Object;)V set
enq$e net/minecraft/client/OptionInstance$Enum
	a values
	b codec
	<init> (Ljava/util/List;Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	a ()Lepp$c; valueListSupplier
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/List; values
	f ()Lcom/mojang/serialization/Codec; codec
enq$f net/minecraft/client/OptionInstance$IntRange
	a minInclusive
	b maxInclusive
	<init> (II)V <init>
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()I minInclusive
	b ()I maxInclusive
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
enq$g net/minecraft/client/OptionInstance$IntRangeBase
	d ()I minInclusive
	b ()I maxInclusive
	b (Ljava/lang/Integer;)D toSliderValue
	a (D)Ljava/lang/Integer; fromSliderValue
	a (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lenq$k; xmap
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Object;)D toSliderValue
enq$g$1 net/minecraft/client/OptionInstance$IntRangeBase$1
	a val$from
	b val$to
	c this$0
	<init> (Lenq$g;Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;)V <init>
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b (Ljava/lang/Object;)D toSliderValue
	b (D)Ljava/lang/Object; fromSliderValue
	f ()Lcom/mojang/serialization/Codec; codec
enq$h net/minecraft/client/OptionInstance$LazyEnum
	a values
	b validateValue
	c codec
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Function;Lcom/mojang/serialization/Codec;)V <init>
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	a ()Lepp$c; valueListSupplier
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/function/Supplier; values
	c ()Ljava/util/function/Function; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
enq$i net/minecraft/client/OptionInstance$OptionInstanceSliderButton
	h instance
	i values
	j tooltipSupplier
	k onValueChanged
	<init> (Lenr;IIIILenq;Lenq$k;Lenq$l;Ljava/util/function/Consumer;)V <init>
	b ()V updateMessage
	a ()V applyValue
enq$j net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet
	c ()Z createCycleButton
	a (Lenq$l;Lenr;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
enq$k net/minecraft/client/OptionInstance$SliderableValueSet
	b (Ljava/lang/Object;)D toSliderValue
	b (D)Ljava/lang/Object; fromSliderValue
	a (Lenq$l;Lenr;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	a (Lenr;IIILenq$l;Ljava/util/function/Consumer;Lenq;)Lepf; lambda$createButton$0
enq$l net/minecraft/client/OptionInstance$TooltipSupplier
	apply (Ljava/lang/Object;)Leqp; apply
enq$m net/minecraft/client/OptionInstance$UnitDouble
	a INSTANCE
	b $VALUES
	values ()[Lenq$m; values
	valueOf (Ljava/lang/String;)Lenq$m; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/lang/Double;)Ljava/util/Optional; validateValue
	b (Ljava/lang/Double;)D toSliderValue
	a (D)Ljava/lang/Double; fromSliderValue
	a (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lenq$k; xmap
	f ()Lcom/mojang/serialization/Codec; codec
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Object;)D toSliderValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/Double; lambda$codec$2
	a (Ljava/lang/Boolean;)Ljava/lang/Double; lambda$codec$1
	c (Ljava/lang/Double;)Ljava/lang/Double; lambda$codec$0
	a ()[Lenq$m; $values
	<clinit> ()V <clinit>
enq$m$1 net/minecraft/client/OptionInstance$UnitDouble$1
	a val$from
	b val$to
	c this$0
	<init> (Lenq$m;Ljava/util/function/ToDoubleFunction;Ljava/util/function/DoubleFunction;)V <init>
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b (Ljava/lang/Object;)D toSliderValue
	b (D)Ljava/lang/Object; fromSliderValue
	f ()Lcom/mojang/serialization/Codec; codec
enq$n net/minecraft/client/OptionInstance$ValueSet
	a (Lenq$l;Lenr;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
enr net/minecraft/client/Options
	aj LOGGER
	ak GSON
	al RESOURCE_PACK_TYPE
	a RENDER_DISTANCE_TINY
	b RENDER_DISTANCE_SHORT
	c RENDER_DISTANCE_NORMAL
	d RENDER_DISTANCE_FAR
	e RENDER_DISTANCE_REALLY_FAR
	f RENDER_DISTANCE_EXTREME
	am OPTION_SPLITTER
	an DEFAULT_VOLUME
	g DEFAULT_SOUND_DEVICE
	ao ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND
	ap darkMojangStudiosBackground
	aq ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES
	ar hideLightningFlash
	as sensitivity
	at renderDistance
	au simulationDistance
	av serverRenderDistance
	aw entityDistanceScaling
	h UNLIMITED_FRAMERATE_CUTOFF
	ax framerateLimit
	ay cloudStatus
	az GRAPHICS_TOOLTIP_FAST
	aA GRAPHICS_TOOLTIP_FABULOUS
	aB GRAPHICS_TOOLTIP_FANCY
	aC graphicsMode
	aD ambientOcclusion
	aE PRIORITIZE_CHUNK_TOOLTIP_NONE
	aF PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED
	aG PRIORITIZE_CHUNK_TOOLTIP_NEARBY
	aH prioritizeChunkUpdates
	i resourcePacks
	j incompatibleResourcePacks
	aI chatVisibility
	aJ chatOpacity
	aK chatLineSpacing
	aL textBackgroundOpacity
	aM panoramaSpeed
	aN ACCESSIBILITY_TOOLTIP_CONTRAST_MODE
	aO highContrast
	k fullscreenVideoModeString
	l hideServerAddress
	m advancedItemTooltips
	n pauseOnLostFocus
	aP modelParts
	aQ mainHand
	o overrideWidth
	p overrideHeight
	aR chatScale
	aS chatWidth
	aT chatHeightUnfocused
	aU chatHeightFocused
	aV chatDelay
	aW ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME
	aX notificationDisplayTime
	aY mipmapLevels
	q useNativeTransport
	aZ attackIndicator
	r tutorialStep
	s joinedFirstServer
	t hideBundleTutorial
	ba biomeBlendRadius
	bb mouseWheelSensitivity
	bc rawMouseInput
	u glDebugVerbosity
	bd autoJump
	be operatorItemsTab
	bf autoSuggestions
	bg chatColors
	bh chatLinks
	bi chatLinksPrompt
	bj enableVsync
	bk entityShadows
	bl forceUnicodeFont
	bm invertYMouse
	bn discreteMouseScroll
	bo realmsNotifications
	bp ALLOW_SERVER_LISTING_TOOLTIP
	bq allowServerListing
	br reducedDebugInfo
	bs soundSourceVolumes
	bt showSubtitles
	bu DIRECTIONAL_AUDIO_TOOLTIP_ON
	bv DIRECTIONAL_AUDIO_TOOLTIP_OFF
	bw directionalAudio
	bx backgroundForChatOnly
	by touchscreen
	bz fullscreen
	bA bobView
	bB MOVEMENT_TOGGLE
	bC MOVEMENT_HOLD
	bD toggleCrouch
	bE toggleSprint
	v skipMultiplayerWarning
	w skipRealms32bitWarning
	bF CHAT_TOOLTIP_HIDE_MATCHED_NAMES
	bG hideMatchedNames
	bH showAutosaveIndicator
	bI CHAT_TOOLTIP_ONLY_SHOW_SECURE
	bJ onlyShowSecureChat
	x keyUp
	y keyLeft
	z keyDown
	A keyRight
	B keyJump
	C keyShift
	D keySprint
	E keyInventory
	F keySwapOffhand
	G keyDrop
	H keyUse
	I keyAttack
	J keyPickItem
	K keyChat
	L keyPlayerList
	M keyCommand
	N keySocialInteractions
	O keyScreenshot
	P keyTogglePerspective
	Q keySmoothCamera
	R keyFullscreen
	S keySpectatorOutlines
	T keyAdvancements
	U keyHotbarSlots
	V keySaveHotbarActivator
	W keyLoadHotbarActivator
	X keyMappings
	Y minecraft
	bK optionsFile
	Z hideGui
	bL cameraType
	aa renderDebug
	ab renderDebugCharts
	ac renderFpsChart
	ad lastMpIp
	ae smoothCamera
	bM fov
	bN TELEMETRY_TOOLTIP
	bO telemetryOptInExtra
	bP ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT
	bQ screenEffectScale
	bR ACCESSIBILITY_TOOLTIP_FOV_EFFECT
	bS fovEffectScale
	bT ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT
	bU darknessEffectScale
	bV ACCESSIBILITY_TOOLTIP_GLINT_SPEED
	bW glintSpeed
	bX ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH
	bY glintStrength
	bZ ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH
	ca damageTiltStrength
	cb gamma
	af AUTO_GUI_SCALE
	cc MAX_GUI_SCALE_INCLUSIVE
	cd guiScale
	ce particles
	cf narrator
	ag languageCode
	cg soundDevice
	ah onboardAccessibility
	ai syncWrites
	a ()Lenq; darkMojangStudiosBackground
	b ()Lenq; hideLightningFlash
	c ()Lenq; sensitivity
	d ()Lenq; renderDistance
	e ()Lenq; simulationDistance
	f ()Lenq; entityDistanceScaling
	g ()Lenq; framerateLimit
	h ()Lenq; cloudStatus
	i ()Lenq; graphicsMode
	j ()Lenq; ambientOcclusion
	k ()Lenq; prioritizeChunkUpdates
	a (Laki;)V updateResourcePacks
	l ()Lenq; chatVisibility
	m ()Lenq; chatOpacity
	n ()Lenq; chatLineSpacing
	o ()Lenq; textBackgroundOpacity
	p ()Lenq; panoramaSpeed
	q ()Lenq; highContrast
	r ()Lenq; mainHand
	s ()Lenq; chatScale
	t ()Lenq; chatWidth
	u ()Lenq; chatHeightUnfocused
	v ()Lenq; chatHeightFocused
	w ()Lenq; chatDelay
	x ()Lenq; notificationDisplayTime
	y ()Lenq; mipmapLevels
	z ()Lenq; attackIndicator
	A ()Lenq; biomeBlendRadius
	c (I)D logMouse
	a (D)I unlogMouse
	B ()Lenq; mouseWheelSensitivity
	C ()Lenq; rawMouseInput
	D ()Lenq; autoJump
	E ()Lenq; operatorItemsTab
	F ()Lenq; autoSuggestions
	G ()Lenq; chatColors
	H ()Lenq; chatLinks
	I ()Lenq; chatLinksPrompt
	J ()Lenq; enableVsync
	K ()Lenq; entityShadows
	L ()Lenq; forceUnicodeFont
	M ()Lenq; invertYMouse
	N ()Lenq; discreteMouseScroll
	O ()Lenq; realmsNotifications
	P ()Lenq; allowServerListing
	Q ()Lenq; reducedDebugInfo
	a (Lami;)F getSoundSourceVolume
	b (Lami;)Lenq; getSoundSourceOptionInstance
	a (Ljava/lang/String;Lami;)Lenq; createSoundSliderOptionInstance
	R ()Lenq; showSubtitles
	S ()Lenq; directionalAudio
	T ()Lenq; backgroundForChatOnly
	U ()Lenq; touchscreen
	V ()Lenq; fullscreen
	W ()Lenq; bobView
	X ()Lenq; toggleCrouch
	Y ()Lenq; toggleSprint
	Z ()Lenq; hideMatchedNames
	aa ()Lenq; showAutosaveIndicator
	ab ()Lenq; onlyShowSecureChat
	ac ()Lenq; fov
	ad ()Lenq; telemetryOptInExtra
	ae ()Lenq; screenEffectScale
	af ()Lenq; fovEffectScale
	ag ()Lenq; darknessEffectScale
	ah ()Lenq; glintSpeed
	ai ()Lenq; glintStrength
	aj ()Lenq; damageTiltStrength
	ak ()Lenq; gamma
	al ()Lenq; guiScale
	am ()Lenq; particles
	an ()Lenq; narrator
	ao ()Lenq; soundDevice
	<init> (Lenn;Ljava/io/File;)V <init>
	a (F)F getBackgroundOpacity
	b (F)I getBackgroundColor
	a (I)I getBackgroundColor
	a (Lenl;Lehe$a;)V setKey
	a (Lenr$a;)V processOptions
	ap ()V load
	a (Ljava/lang/String;)Z isTrue
	b (Ljava/lang/String;)Z isFalse
	a (Lqr;)Lqr; dataFix
	aq ()V save
	ar ()V broadcastOptions
	b (Lbyp;Z)V setModelPart
	a (Lbyp;)Z isModelPartEnabled
	a (Lbyp;Z)V toggleModelPart
	as ()Lenc; getCloudsType
	at ()Z useNativeTransport
	b (Laki;)V loadSelectedResourcePacks
	au ()Lena; getCameraType
	a (Lena;)V setCameraType
	c (Ljava/lang/String;)Ljava/util/List; readPackList
	av ()Ljava/io/File; getFile
	aw ()Ljava/lang/String; dumpOptionsForReport
	b (I)V setServerRenderDistance
	ax ()I getEffectiveRenderDistance
	b (Lsw;I)Lsw; pixelValueLabel
	a (Lsw;D)Lsw; percentValueLabel
	a (Lsw;Lsw;)Lsw; genericValueLabel
	a (Lsw;I)Lsw; genericValueLabel
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; lambda$dumpOptionsForReport$106
	a (Lqr;Ljava/lang/String;)V lambda$load$105
	a (Ljava/lang/Integer;)V lambda$new$104
	a (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$103
	b (Ljava/lang/Integer;)V lambda$new$102
	b (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$101
	d (Ljava/lang/String;)V lambda$new$100
	e (Ljava/lang/String;)Ljava/util/Optional; lambda$new$99
	ay ()Ljava/util/List; lambda$new$98
	a (Lsw;Ljava/lang/String;)Lsw; lambda$new$97
	a (Lenp;)V lambda$new$96
	a (Lsw;Lenp;)Lsw; lambda$new$95
	a (Lens;)V lambda$new$94
	c (Ljava/lang/Integer;)V lambda$new$93
	az ()I lambda$new$92
	c (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$91
	a (Ljava/lang/Double;)V lambda$new$90
	a (Lsw;Ljava/lang/Double;)Lsw; lambda$new$89
	b (Ljava/lang/Double;)V lambda$new$88
	b (Lsw;Ljava/lang/Double;)Lsw; lambda$new$87
	c (Lsw;Ljava/lang/Double;)Lsw; lambda$new$86
	c (Ljava/lang/Double;)V lambda$new$85
	d (Lsw;Ljava/lang/Double;)Lsw; lambda$new$84
	d (Ljava/lang/Double;)V lambda$new$83
	e (Lsw;Ljava/lang/Double;)Lsw; lambda$new$82
	e (Ljava/lang/Double;)V lambda$new$81
	f (Lsw;Ljava/lang/Double;)Lsw; lambda$new$80
	f (Ljava/lang/Double;)V lambda$new$79
	g (Lsw;Ljava/lang/Double;)Lsw; lambda$new$78
	a (Ljava/lang/Boolean;)V lambda$new$77
	a (Lsw;Ljava/lang/Boolean;)Lsw; lambda$new$76
	d (Ljava/lang/Integer;)V lambda$new$75
	e (Ljava/lang/Integer;)Ljava/lang/Double; lambda$new$74
	g (Ljava/lang/Double;)Ljava/lang/Integer; lambda$new$73
	d (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$72
	b (Ljava/lang/Boolean;)V lambda$new$71
	b (Lsw;Ljava/lang/Boolean;)Lsw; lambda$new$70
	c (Ljava/lang/Boolean;)V lambda$new$69
	c (Lsw;Ljava/lang/Boolean;)Lsw; lambda$new$68
	d (Ljava/lang/Boolean;)V lambda$new$67
	e (Ljava/lang/Boolean;)V lambda$new$66
	d (Lsw;Ljava/lang/Boolean;)Lsw; lambda$new$65
	f (Ljava/lang/Boolean;)V lambda$new$64
	g (Ljava/lang/Boolean;)Leqp; lambda$new$63
	a (Lami;Ljava/lang/Double;)V lambda$createSoundSliderOptionInstance$62
	h (Lsw;Ljava/lang/Double;)Lsw; lambda$createSoundSliderOptionInstance$61
	a (Ljava/util/EnumMap;)V lambda$new$60
	h (Ljava/lang/Boolean;)V lambda$new$59
	i (Ljava/lang/Boolean;)V lambda$new$58
	j (Ljava/lang/Boolean;)V lambda$new$57
	k (Ljava/lang/Boolean;)V lambda$new$56
	h (Ljava/lang/Double;)V lambda$new$55
	i (Lsw;Ljava/lang/Double;)Lsw; lambda$new$54
	f (Ljava/lang/Integer;)V lambda$new$53
	e (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$52
	a (Lemy;)V lambda$new$51
	g (Ljava/lang/Integer;)V lambda$new$50
	f (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$49
	i (Ljava/lang/Double;)V lambda$new$48
	j (Ljava/lang/Double;)I lambda$new$47
	d (I)Ljava/lang/Double; lambda$new$46
	j (Lsw;Ljava/lang/Double;)Lsw; lambda$new$45
	k (Ljava/lang/Double;)V lambda$new$44
	l (Ljava/lang/Double;)I lambda$new$43
	e (I)Ljava/lang/Double; lambda$new$42
	k (Lsw;Ljava/lang/Double;)Lsw; lambda$new$41
	m (Ljava/lang/Double;)V lambda$new$40
	l (Lsw;Ljava/lang/Double;)Lsw; lambda$new$39
	n (Ljava/lang/Double;)V lambda$new$38
	m (Lsw;Ljava/lang/Double;)Lsw; lambda$new$37
	o (Ljava/lang/Double;)V lambda$new$36
	n (Lsw;Ljava/lang/Double;)Lsw; lambda$new$35
	p (Ljava/lang/Double;)V lambda$new$34
	o (Lsw;Ljava/lang/Double;)Lsw; lambda$new$33
	a (Lbft;)V lambda$new$32
	b (Lbft;)Ljava/lang/String; lambda$new$31
	f (Ljava/lang/String;)Lbft; lambda$new$30
	l (Ljava/lang/Boolean;)V lambda$new$29
	q (Ljava/lang/Double;)V lambda$new$28
	r (Ljava/lang/Double;)V lambda$new$27
	s (Ljava/lang/Double;)V lambda$new$26
	t (Ljava/lang/Double;)V lambda$new$25
	p (Lsw;Ljava/lang/Double;)Lsw; lambda$new$24
	a (Lbym;)V lambda$new$23
	a (Lenu;)V lambda$new$22
	b (Lenu;)Leqp; lambda$new$21
	m (Ljava/lang/Boolean;)V lambda$new$20
	a (Leng;)V lambda$new$19
	a (Lenq;Leng;)V lambda$new$18
	aA ()Z lambda$new$17
	b (Leng;)Z lambda$new$16
	a (Lsw;Leng;)Lsw; lambda$new$15
	c (Leng;)Leqp; lambda$new$14
	a (Lenc;)V lambda$new$13
	b (Lenc;)Lcom/mojang/datafixers/util/Either; lambda$new$12
	a (Lcom/mojang/datafixers/util/Either;)Lenc; lambda$new$11
	g (Ljava/lang/String;)Lenc; lambda$new$10
	n (Ljava/lang/Boolean;)Lenc; lambda$new$9
	h (Ljava/lang/Integer;)V lambda$new$8
	i (Ljava/lang/Integer;)I lambda$new$7
	f (I)Ljava/lang/Integer; lambda$new$6
	g (Lsw;Ljava/lang/Integer;)Lsw; lambda$new$5
	u (Ljava/lang/Double;)V lambda$new$4
	v (Ljava/lang/Double;)I lambda$new$3
	g (I)Ljava/lang/Double; lambda$new$2
	w (Ljava/lang/Double;)V lambda$new$1
	q (Lsw;Ljava/lang/Double;)Lsw; lambda$new$0
	<clinit> ()V <clinit>
enr$1 net/minecraft/client/Options$1
	<init> ()V <init>
enr$2 net/minecraft/client/Options$2
	a val$options
	b this$0
	<init> (Lenr;Lqr;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; getValueOrNull
	a (Ljava/lang/String;Lenq;)V process
	a (Ljava/lang/String;I)I process
	a (Ljava/lang/String;Z)Z process
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; process
	a (Ljava/lang/String;F)F process
	a (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; process
	a (Ljava/lang/String;Lenq;Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$process$0
enr$3 net/minecraft/client/Options$3
	a val$writer
	b this$0
	<init> (Lenr;Ljava/io/PrintWriter;)V <init>
	a (Ljava/lang/String;)V writePrefix
	a (Ljava/lang/String;Lenq;)V process
	a (Ljava/lang/String;I)I process
	a (Ljava/lang/String;Z)Z process
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; process
	a (Ljava/lang/String;F)F process
	a (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; process
	a (Ljava/lang/String;Ljava/io/PrintWriter;Lcom/google/gson/JsonElement;)V lambda$process$1
	a (Lenq;Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$process$0
enr$4 net/minecraft/client/Options$4
	a $SwitchMap$net$minecraft$client$PrioritizeChunkUpdates
	b $SwitchMap$net$minecraft$client$GraphicsStatus
	c $SwitchMap$net$minecraft$client$CloudStatus
	<clinit> ()V <clinit>
enr$a net/minecraft/client/Options$FieldAccess
	a (Ljava/lang/String;Lenq;)V process
	a (Ljava/lang/String;I)I process
	a (Ljava/lang/String;Z)Z process
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; process
	a (Ljava/lang/String;F)F process
	a (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; process
ens net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Lens; values
	valueOf (Ljava/lang/String;)Lens; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	b ()Ljava/lang/String; getKey
	a ()I getId
	a (I)Lens; byId
	d ()[Lens; $values
	<clinit> ()V <clinit>
ent net/minecraft/client/PeriodicNotificationManager
	a CODEC
	b LOGGER
	c notifications
	d selector
	e timer
	f notificationTask
	<init> (Lacq;Lit/unimi/dsi/fastutil/objects/Object2BooleanFunction;)V <init>
	a (Lakx;Lban;)Ljava/util/Map; prepare
	a (Ljava/util/Map;Lakx;Lban;)V apply
	close ()V close
	a ()V stopTimer
	a (Ljava/util/List;J)J calculateOptimalPeriod
	a (Ljava/util/List;)J calculateInitialDelay
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	a (Lent$a;)J lambda$calculateInitialDelay$5
	b ()Ljava/lang/IllegalStateException; lambda$calculateOptimalPeriod$4
	a (JLent$a;)J lambda$calculateOptimalPeriod$3
	b (Lent$a;)Z lambda$apply$2
	a (Ljava/util/Map$Entry;)Z lambda$apply$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
ent$a net/minecraft/client/PeriodicNotificationManager$Notification
	a delay
	b period
	c title
	d message
	<init> (JJLjava/lang/String;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()J delay
	b ()J period
	c ()Ljava/lang/String; title
	d ()Ljava/lang/String; message
ent$b net/minecraft/client/PeriodicNotificationManager$NotificationTask
	a minecraft
	b notifications
	c period
	d elapsed
	<init> (Ljava/util/List;JJ)V <init>
	a (Ljava/util/List;J)Lent$b; reset
	run ()V run
	a (Lent$a;J)V lambda$run$0
enu net/minecraft/client/PrioritizeChunkUpdates
	a NONE
	b PLAYER_AFFECTED
	c NEARBY
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Lenu; values
	valueOf (Ljava/lang/String;)Lenu; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Lenu; byId
	d ()[Lenu; $values
	<clinit> ()V <clinit>
env net/minecraft/client/Realms32BitWarningStatus
	a LOGGER
	b minecraft
	c subscriptionCheck
	d warningScreenShown
	<init> (Lenn;)V <init>
	a (Leuq;)V showRealms32BitWarningIfNeeded
	a ()Ljava/lang/Boolean; checkForRealmsSubscription
	b ()Z hasRealmsSubscription
	a (Lejq;)Z lambda$hasRealmsSubscription$0
	<clinit> ()V <clinit>
enw net/minecraft/client/RecipeBookCategories
	a CRAFTING_SEARCH
	b CRAFTING_BUILDING_BLOCKS
	c CRAFTING_REDSTONE
	d CRAFTING_EQUIPMENT
	e CRAFTING_MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p SMITHING
	q CAMPFIRE
	r UNKNOWN
	s SMOKER_CATEGORIES
	t BLAST_FURNACE_CATEGORIES
	u FURNACE_CATEGORIES
	v CRAFTING_CATEGORIES
	w AGGREGATE_CATEGORIES
	x itemIcons
	y $VALUES
	values ()[Lenw; values
	valueOf (Ljava/lang/String;)Lenw; valueOf
	<init> (Ljava/lang/String;I[Lcfz;)V <init>
	a (Lccq;)Ljava/util/List; getCategories
	a ()Ljava/util/List; getIconItems
	b ()[Lenw; $values
	<clinit> ()V <clinit>
enw$1 net/minecraft/client/RecipeBookCategories$1
	a $SwitchMap$net$minecraft$world$inventory$RecipeBookType
	<clinit> ()V <clinit>
enx net/minecraft/client/ResourceLoadStateTracker
	a LOGGER
	b reloadState
	c reloadCount
	<init> ()V <init>
	a (Lenx$b;Ljava/util/List;)V startReload
	a (Ljava/lang/Throwable;)V startRecovery
	a ()V finishReload
	a (Lo;)V fillCrashReport
	<clinit> ()V <clinit>
enx$a net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo
	a error
	<init> (Ljava/lang/Throwable;)V <init>
	a (Lp;)V fillCrashInfo
	a ()Ljava/lang/String; lambda$fillCrashInfo$0
enx$b net/minecraft/client/ResourceLoadStateTracker$ReloadReason
	a INITIAL
	b MANUAL
	c UNKNOWN
	d name
	e $VALUES
	values ()[Lenx$b; values
	valueOf (Ljava/lang/String;)Lenx$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()[Lenx$b; $values
	<clinit> ()V <clinit>
enx$c net/minecraft/client/ResourceLoadStateTracker$ReloadState
	a reloadReason
	b packs
	c recoveryReloadInfo
	d finished
	<init> (Lenx$b;Ljava/util/List;)V <init>
	a (Lp;)V fillCrashInfo
	a ()Ljava/lang/String; lambda$fillCrashInfo$0
eny net/minecraft/client/Screenshot
	b LOGGER
	a SCREENSHOT_DIR
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a (Ljava/io/File;Legv;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;Legv;Ljava/util/function/Consumer;)V grab
	b (Ljava/io/File;Ljava/lang/String;Legv;Ljava/util/function/Consumer;)V _grab
	a (Legv;)Lehk; takeScreenshot
	a (Ljava/io/File;)Ljava/io/File; getFile
	<init> (Ljava/io/File;III)V <init>
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	a ()V saveRow
	b ()Ljava/io/File; close
	a (Lehk;Ljava/io/File;Ljava/util/function/Consumer;)V lambda$_grab$2
	a (Ljava/io/File;Lts;)Lts; lambda$_grab$1
	c (Ljava/io/File;Ljava/lang/String;Legv;Ljava/util/function/Consumer;)V lambda$grab$0
	<clinit> ()V <clinit>
enz net/minecraft/client/StringSplitter
	a widthProvider
	<init> (Lenz$f;)V <init>
	a (Ljava/lang/String;)F stringWidth
	a (Lta;)F stringWidth
	a (Laom;)F stringWidth
	a (Ljava/lang/String;ILts;)I plainIndexAtWidth
	b (Ljava/lang/String;ILts;)Ljava/lang/String; plainHeadByWidth
	c (Ljava/lang/String;ILts;)Ljava/lang/String; plainTailByWidth
	d (Ljava/lang/String;ILts;)I formattedIndexByWidth
	a (Lta;I)Lts; componentStyleAtWidth
	a (Laom;I)Lts; componentStyleAtWidth
	e (Ljava/lang/String;ILts;)Ljava/lang/String; formattedHeadByWidth
	a (Lta;ILts;)Lta; headByWidth
	f (Ljava/lang/String;ILts;)I findLineBreak
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;ILts;ZLenz$d;)V splitLines
	g (Ljava/lang/String;ILts;)Ljava/util/List; splitLines
	b (Lta;ILts;)Ljava/util/List; splitLines
	a (Lta;ILts;Lta;)Ljava/util/List; splitLines
	a (Lta;ILts;Ljava/util/function/BiConsumer;)V splitLines
	a (Ljava/util/List;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$splitLines$9
	a (Ljava/util/List;Lta;Lta;Ljava/lang/Boolean;)V lambda$splitLines$8
	a (Ljava/util/List;Lta;Ljava/lang/Boolean;)V lambda$splitLines$7
	a (Ljava/util/List;Ljava/lang/String;Lts;II)V lambda$splitLines$6
	a (Lenz$e;Lorg/apache/commons/lang3/mutable/MutableObject;ILts;I)Z lambda$componentStyleAtWidth$5
	a (Lenz$e;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$componentStyleAtWidth$4
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILorg/apache/commons/lang3/mutable/MutableInt;ILts;I)Z lambda$plainTailByWidth$3
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;ILts;I)Z lambda$stringWidth$2
	b (Lorg/apache/commons/lang3/mutable/MutableFloat;ILts;I)Z lambda$stringWidth$1
	c (Lorg/apache/commons/lang3/mutable/MutableFloat;ILts;I)Z lambda$stringWidth$0
enz$1 net/minecraft/client/StringSplitter$1
	c collector
	a val$output
	b this$0
	<init> (Lenz;Lenz$e;)V <init>
	accept (Lts;Ljava/lang/String;)Ljava/util/Optional; accept
enz$a net/minecraft/client/StringSplitter$FlatComponents
	a parts
	b flatParts
	<init> (Ljava/util/List;)V <init>
	a (I)C charAt
	a (IILts;)Lta; splitAt
	a ()Lta; getRemainder
	a (Lenz$c;)Ljava/lang/String; lambda$new$0
enz$b net/minecraft/client/StringSplitter$LineBreakFinder
	b maxWidth
	c lineBreak
	d lineBreakStyle
	e hadNonZeroWidthChar
	f width
	g lastSpace
	h lastSpaceStyle
	i nextChar
	j offset
	a this$0
	<init> (Lenz;F)V <init>
	accept (ILts;I)Z accept
	a (ILts;)Z finishIteration
	c ()Z lineBreakFound
	a ()I getSplitPosition
	b ()Lts; getSplitStyle
	a (I)V addToOffset
enz$c net/minecraft/client/StringSplitter$LineComponent
	c contents
	d style
	<init> (Ljava/lang/String;Lts;)V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
enz$d net/minecraft/client/StringSplitter$LinePosConsumer
	accept (Lts;II)V accept
enz$e net/minecraft/client/StringSplitter$WidthLimitedCharSink
	b maxWidth
	c position
	a this$0
	<init> (Lenz;F)V <init>
	accept (ILts;I)Z accept
	a ()I getPosition
	b ()V resetPosition
enz$f net/minecraft/client/StringSplitter$WidthProvider
	getWidth (ILts;)F getWidth
eoa net/minecraft/client/Timer
	a partialTick
	b tickDelta
	c lastMs
	d msPerTick
	<init> (FJ)V <init>
	a (J)I advanceTime
eob net/minecraft/client/ToggleKeyMapping
	h needsToggle
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BooleanSupplier;)V <init>
	a (Z)V setDown
	n ()V reset
eoc net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d xuid
	e clientId
	f type
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Leoc$a;)V <init>
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Ljava/util/Optional; getClientId
	f ()Ljava/util/Optional; getXuid
	g ()Ljava/util/UUID; getProfileId
	h ()Lcom/mojang/authlib/GameProfile; getGameProfile
	i ()Leoc$a; getType
eoc$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c MSA
	d BY_NAME
	e name
	f $VALUES
	values ()[Leoc$a; values
	valueOf (Ljava/lang/String;)Leoc$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Leoc$a; byName
	a ()Ljava/lang/String; getName
	a (Leoc$a;)Ljava/lang/String; lambda$static$0
	b ()[Leoc$a; $values
	<clinit> ()V <clinit>
eod net/minecraft/client/animation/AnimationChannel
	a target
	b keyframes
	<init> (Leod$c;[Leof;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Leod$c; target
	b ()[Leof; keyframes
eod$a net/minecraft/client/animation/AnimationChannel$Interpolation
	apply (Lorg/joml/Vector3f;F[Leof;IIF)Lorg/joml/Vector3f; apply
eod$b net/minecraft/client/animation/AnimationChannel$Interpolations
	a LINEAR
	b CATMULLROM
	<init> ()V <init>
	a (Lorg/joml/Vector3f;F[Leof;IIF)Lorg/joml/Vector3f; lambda$static$1
	b (Lorg/joml/Vector3f;F[Leof;IIF)Lorg/joml/Vector3f; lambda$static$0
	<clinit> ()V <clinit>
eod$c net/minecraft/client/animation/AnimationChannel$Target
	apply (Lfee;Lorg/joml/Vector3f;)V apply
eod$d net/minecraft/client/animation/AnimationChannel$Targets
	a POSITION
	b ROTATION
	c SCALE
	<init> ()V <init>
	<clinit> ()V <clinit>
eoe net/minecraft/client/animation/AnimationDefinition
	a lengthInSeconds
	b looping
	c boneAnimations
	<init> (FZLjava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()F lengthInSeconds
	b ()Z looping
	c ()Ljava/util/Map; boneAnimations
eoe$a net/minecraft/client/animation/AnimationDefinition$Builder
	a length
	b animationByBone
	c looping
	a (F)Leoe$a; withLength
	<init> (F)V <init>
	a ()Leoe$a; looping
	a (Ljava/lang/String;Leod;)Leoe$a; addAnimation
	b ()Leoe; build
	a (Ljava/lang/String;)Ljava/util/List; lambda$addAnimation$0
eof net/minecraft/client/animation/Keyframe
	a timestamp
	b target
	c interpolation
	<init> (FLorg/joml/Vector3f;Leod$a;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()F timestamp
	b ()Lorg/joml/Vector3f; target
	c ()Leod$a; interpolation
eog net/minecraft/client/animation/KeyframeAnimations
	<init> ()V <init>
	a (Lfbo;Leoe;JFLorg/joml/Vector3f;)V animate
	a (Leoe;J)F getElapsedSeconds
	a (FFF)Lorg/joml/Vector3f; posVec
	b (FFF)Lorg/joml/Vector3f; degreeVec
	a (DDD)Lorg/joml/Vector3f; scaleVec
	a (Ljava/util/List;FLorg/joml/Vector3f;FLfee;)V lambda$animate$2
	a (FLorg/joml/Vector3f;FLfee;Leod;)V lambda$animate$1
	a (F[Leof;I)Z lambda$animate$0
eoh net/minecraft/client/animation/definitions/CamelAnimation
	a CAMEL_WALK
	b CAMEL_SIT
	c CAMEL_SIT_POSE
	d CAMEL_STANDUP
	e CAMEL_DASH
	f CAMEL_IDLE
	<init> ()V <init>
	<clinit> ()V <clinit>
eoi net/minecraft/client/animation/definitions/FrogAnimation
	a FROG_CROAK
	b FROG_WALK
	c FROG_JUMP
	d FROG_TONGUE
	e FROG_SWIM
	f FROG_IDLE_WATER
	<init> ()V <init>
	<clinit> ()V <clinit>
eoj net/minecraft/client/animation/definitions/SnifferAnimation
	a BABY_TRANSFORM
	b SNIFFER_SNIFFSNIFF
	c SNIFFER_LONGSNIFF
	d SNIFFER_WALK
	e SNIFFER_SNIFF_SEARCH
	f SNIFFER_DIG
	g SNIFFER_STAND_UP
	h SNIFFER_BABY_FALL
	i SNIFFER_HAPPY
	<init> ()V <init>
	<clinit> ()V <clinit>
eok net/minecraft/client/animation/definitions/WardenAnimation
	a WARDEN_EMERGE
	b WARDEN_DIG
	c WARDEN_ROAR
	d WARDEN_SNIFF
	e WARDEN_ATTACK
	f WARDEN_SONIC_BOOM
	<init> ()V <init>
	<clinit> ()V <clinit>
eol net/minecraft/client/animation/definitions/package-info
eom net/minecraft/client/animation/package-info
eon net/minecraft/client/color/block/BlockColor
	getColor (Ldcb;Lclp;Lgu;I)I getColor
eoo net/minecraft/client/color/block/BlockColors
	a DEFAULT
	b blockColors
	c coloringStates
	<init> ()V <init>
	a ()Leoo; createDefault
	a (Ldcb;Lcmm;Lgu;)I getColor
	a (Ldcb;Lclp;Lgu;I)I getColor
	a (Leon;[Lcpn;)V register
	a (Ljava/util/Set;[Lcpn;)V addColoringStates
	a (Ldde;[Lcpn;)V addColoringState
	a (Lcpn;)Ljava/util/Set; getColoringProperties
	b (Ldcb;Lclp;Lgu;I)I lambda$createDefault$11
	c (Ldcb;Lclp;Lgu;I)I lambda$createDefault$10
	d (Ldcb;Lclp;Lgu;I)I lambda$createDefault$9
	e (Ldcb;Lclp;Lgu;I)I lambda$createDefault$8
	f (Ldcb;Lclp;Lgu;I)I lambda$createDefault$7
	g (Ldcb;Lclp;Lgu;I)I lambda$createDefault$6
	h (Ldcb;Lclp;Lgu;I)I lambda$createDefault$5
	i (Ldcb;Lclp;Lgu;I)I lambda$createDefault$4
	j (Ldcb;Lclp;Lgu;I)I lambda$createDefault$3
	k (Ldcb;Lclp;Lgu;I)I lambda$createDefault$2
	l (Ldcb;Lclp;Lgu;I)I lambda$createDefault$1
	m (Ldcb;Lclp;Lgu;I)I lambda$createDefault$0
eop net/minecraft/client/color/block/BlockTintCache
	a MAX_CACHE_ENTRIES
	b latestChunkOnThread
	c cache
	d lock
	e source
	<init> (Ljava/util/function/ToIntFunction;)V <init>
	a (Lgu;)I getColor
	a (II)V invalidateForChunk
	a ()V invalidateAll
	b (II)Leop$a; findOrCreateChunkCache
eop$a net/minecraft/client/color/block/BlockTintCache$CacheData
	a cache
	b lock
	c BLOCKS_PER_LAYER
	d invalidated
	<init> ()V <init>
	a (I)[I getLayer
	c ()[I allocateLayer
	a ()Z isInvalidated
	b ()V invalidate
	b (I)[I lambda$getLayer$0
	<clinit> ()V <clinit>
eop$b net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
	<init> ()V <init>
eoq net/minecraft/client/color/block/package-info
eor net/minecraft/client/color/item/ItemColor
	getColor (Lcfz;I)I getColor
eos net/minecraft/client/color/item/ItemColors
	a DEFAULT
	b itemColors
	<init> ()V <init>
	a (Leoo;)Leos; createDefault
	a (Lcfz;I)I getColor
	a (Leor;[Lcml;)V register
	b (Lcfz;I)I lambda$createDefault$8
	c (Lcfz;I)I lambda$createDefault$7
	d (Lcfz;I)I lambda$createDefault$6
	a (Leoo;Lcfz;I)I lambda$createDefault$5
	a (Lche;Lcfz;I)I lambda$createDefault$4
	e (Lcfz;I)I lambda$createDefault$3
	f (Lcfz;I)I lambda$createDefault$2
	g (Lcfz;I)I lambda$createDefault$1
	h (Lcfz;I)I lambda$createDefault$0
eot net/minecraft/client/color/item/package-info
eou net/minecraft/client/gui/ComponentPath
	a (Leqt;)Leou; leaf
	a (Leqs;Leou;)Leou; path
	a (Leqt;[Leqs;)Leou; path
	a ()Leqt; component
	a (Z)V applyFocus
eou$a net/minecraft/client/gui/ComponentPath$Leaf
	a component
	<init> (Leqt;)V <init>
	a (Z)V applyFocus
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Leqt; component
eou$b net/minecraft/client/gui/ComponentPath$Path
	a component
	b childPath
	<init> (Leqs;Leou;)V <init>
	a (Z)V applyFocus
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Leqs; component
	c ()Leou; childPath
	a ()Leqt; component
eov net/minecraft/client/gui/Font
	d EFFECT_DEPTH
	e SHADOW_OFFSET
	a ALPHA_CUTOFF
	b lineHeight
	c random
	f fonts
	g filterFishyGlyphs
	h splitter
	<init> (Ljava/util/function/Function;Z)V <init>
	a (Lacq;)Lern; getFontSet
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)I drawInBatch
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;IIZ)I drawInBatch
	a (Lsw;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)I drawInBatch
	a (Laom;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)I drawInBatch
	a (Laom;FFIILorg/joml/Matrix4f;Lfjx;I)V drawInBatch8xOutline
	a (I)I adjustColor
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;IIZ)I drawInternal
	b (Laom;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)I drawInternal
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)F renderText
	c (Laom;FFIZLorg/joml/Matrix4f;Lfjx;Leov$a;II)F renderText
	a (Lerr;ZZFFFLorg/joml/Matrix4f;Lein;FFFFI)V renderChar
	b (Ljava/lang/String;)I width
	a (Lta;)I width
	a (Laom;)I width
	a (Ljava/lang/String;IZ)Ljava/lang/String; plainSubstrByWidth
	a (Ljava/lang/String;I)Ljava/lang/String; plainSubstrByWidth
	a (Lta;I)Lta; substrByWidth
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Lta;I)I wordWrapHeight
	c (Lta;I)Ljava/util/List; split
	a ()Z isBidirectional
	b ()Lenz; getSplitter
	a (Leov$b;[FIFIIILts;I)Z lambda$drawInBatch8xOutline$1
	a (ILts;)F lambda$new$0
	<clinit> ()V <clinit>
eov$a net/minecraft/client/gui/Font$DisplayMode
	a NORMAL
	b SEE_THROUGH
	c POLYGON_OFFSET
	d $VALUES
	values ()[Leov$a; values
	valueOf (Ljava/lang/String;)Leov$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leov$a; $values
	<clinit> ()V <clinit>
eov$b net/minecraft/client/gui/Font$StringRenderOutput
	a bufferSource
	c dropShadow
	d dimFactor
	e r
	f g
	g b
	h a
	i pose
	j mode
	k packedLightCoords
	l x
	m y
	n effects
	b this$0
	a (Lerr$a;)V addEffect
	<init> (Leov;Lfjx;FFIZLorg/joml/Matrix4f;Leov$a;I)V <init>
	accept (ILts;I)Z accept
	a (IF)F finish
eow net/minecraft/client/gui/Gui
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e SPYGLASS_SCOPE_LOCATION
	f POWDER_SNOW_OUTLINE_LOCATION
	g GUI_ICONS_LOCATION
	h DEMO_EXPIRED_TEXT
	i SAVING_TEXT
	j COLOR_WHITE
	k MIN_CROSSHAIR_ATTACK_SPEED
	l NUM_HEARTS_PER_ROW
	m LINE_HEIGHT
	n SPACER
	o PORTAL_OVERLAY_ALPHA_MIN
	p HEART_SIZE
	q HEART_SEPARATION
	r AUTOSAVE_FADE_SPEED_FACTOR
	s random
	t minecraft
	u itemRenderer
	v chat
	w tickCount
	x overlayMessageString
	y overlayMessageTime
	z animateOverlayMessageColor
	A chatDisabledByPlayerShown
	a vignetteBrightness
	B toolHighlightTimer
	C lastToolHighlight
	D debugScreen
	E subtitleOverlay
	F spectatorGui
	G tabList
	H bossOverlay
	I titleTime
	J title
	K subtitle
	L titleFadeInTime
	M titleStayTime
	N titleFadeOutTime
	O lastHealth
	P displayHealth
	Q lastHealthTime
	R healthBlinkTime
	S screenWidth
	T screenHeight
	U autosaveIndicatorValue
	V lastAutosaveIndicatorValue
	W scopeScale
	<init> (Lenn;Lfpw;)V <init>
	a ()V resetTitleTimes
	a (Leox;F)V render
	a (Leox;Leov;III)V drawBackdrop
	d (Leox;)V renderCrosshair
	a (Leeg;)Z canRenderCrosshairForSpectator
	a (Leox;)V renderEffects
	a (FLeox;)V renderHotbar
	a (Lbgk;Leox;I)V renderJumpMeter
	a (Leox;I)V renderExperienceBar
	b (Leox;)V renderSelectedItemName
	c (Leox;)V renderDemoOverlay
	a (Leox;Lefd;)V displayScoreboardSidebar
	l ()Lbyo; getCameraPlayer
	m ()Lbfz; getPlayerVehicleWithHealth
	a (Lbfz;)I getVehicleMaxHearts
	a (I)I getVisibleVehicleHeartRows
	e (Leox;)V renderPlayerHealth
	a (Leox;Lbyo;IIIIFIIIZ)V renderHearts
	a (Leox;Leow$a;IIIZZ)V renderHeart
	f (Leox;)V renderVehicleHealth
	a (Leox;Lacq;F)V renderTextureOverlay
	b (Leox;F)V renderSpyglassOverlay
	a (Lbfj;)V updateVignetteBrightness
	a (Leox;Lbfj;)V renderVignette
	c (Leox;F)V renderPortalOverlay
	a (Leox;IIFLbyo;Lcfz;I)V renderSlot
	a (Z)V tick
	n ()V tick
	o ()V tickAutosaveIndicator
	a (Lsw;)V setNowPlaying
	a (Lsw;Z)V setOverlayMessage
	b (Z)V setChatDisabledByPlayerShown
	b ()Z isShowingChatDisabledByPlayer
	a (III)V setTimes
	b (Lsw;)V setSubtitle
	c (Lsw;)V setTitle
	c ()V clear
	d ()Lepj; getChat
	e ()I getGuiTicks
	f ()Leov; getFont
	g ()Leqw; getSpectatorGui
	h ()Leqg; getTabList
	i ()V onDisconnected
	j ()Leph; getBossOverlay
	k ()V clearCache
	g (Leox;)V renderSavingIndicator
	a (Leff;)Z lambda$displayScoreboardSidebar$1
	a (Leox;FIILfuv;)V lambda$renderEffects$0
	<clinit> ()V <clinit>
eow$a net/minecraft/client/gui/Gui$HeartType
	a CONTAINER
	b NORMAL
	c POISIONED
	d WITHERED
	e ABSORBING
	f FROZEN
	g index
	h canBlink
	i $VALUES
	values ()[Leow$a; values
	valueOf (Ljava/lang/String;)Leow$a; valueOf
	<init> (Ljava/lang/String;IIZ)V <init>
	a (ZZ)I getX
	a (Lbyo;)Leow$a; forPlayer
	a ()[Leow$a; $values
	<clinit> ()V <clinit>
eox net/minecraft/client/gui/GuiGraphics
	a MAX_GUI_Z
	b MIN_GUI_Z
	c EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE
	d minecraft
	e pose
	f bufferSource
	g scissorStack
	h managed
	<init> (Lenn;Leij;Lfjx$a;)V <init>
	<init> (Lenn;Lfjx$a;)V <init>
	a (Ljava/lang/Runnable;)V drawManaged
	g ()V flushIfUnmanaged
	h ()V flushIfManaged
	a ()I guiWidth
	b ()I guiHeight
	c ()Leij; pose
	d ()Lfjx$a; bufferSource
	e ()V flush
	a (IIII)V hLine
	a (Lfkf;IIII)V hLine
	b (IIII)V vLine
	b (Lfkf;IIII)V vLine
	c (IIII)V enableScissor
	f ()V disableScissor
	a (Lesz;)V applyScissor
	a (FFFF)V setColor
	a (IIIII)V fill
	a (IIIIII)V fill
	a (Lfkf;IIIII)V fill
	a (Lfkf;IIIIII)V fill
	b (IIIIII)V fillGradient
	a (IIIIIII)V fillGradient
	a (Lfkf;IIIIIII)V fillGradient
	a (Lein;IIIIIII)V fillGradient
	a (Leov;Ljava/lang/String;III)V drawCenteredString
	a (Leov;Lsw;III)V drawCenteredString
	a (Leov;Laom;III)V drawCenteredString
	b (Leov;Ljava/lang/String;III)I drawString
	a (Leov;Ljava/lang/String;IIIZ)I drawString
	b (Leov;Laom;III)I drawString
	a (Leov;Laom;IIIZ)I drawString
	b (Leov;Lsw;III)I drawString
	a (Leov;Lsw;IIIZ)I drawString
	a (Leov;Lta;IIII)V drawWordWrap
	a (IIIIILfuv;)V blit
	a (IIIIILfuv;FFFF)V blit
	b (IIIII)V renderOutline
	a (Lacq;IIIIII)V blit
	a (Lacq;IIIFFIIII)V blit
	a (Lacq;IIIIFFIIII)V blit
	a (Lacq;IIFFIIII)V blit
	a (Lacq;IIIIIIIFFII)V blit
	a (Lacq;IIIIIFFFF)V innerBlit
	a (Lacq;IIIIIFFFFFFFF)V innerBlit
	a (Lacq;IIIIIIIII)V blitNineSliced
	a (Lacq;IIIIIIIIII)V blitNineSliced
	a (Lacq;IIIIIIIIIIII)V blitNineSliced
	a (Lacq;IIIIIIII)V blitRepeating
	a (II)Lit/unimi/dsi/fastutil/ints/IntIterator; slices
	a (Lcfz;II)V renderItem
	a (Lcfz;III)V renderItem
	a (Lcfz;IIII)V renderItem
	b (Lcfz;II)V renderFakeItem
	a (Lbfz;Lcfz;III)V renderItem
	a (Lbfz;Lcmm;Lcfz;III)V renderItem
	a (Lbfz;Lcmm;Lcfz;IIII)V renderItem
	a (Leov;Lcfz;II)V renderItemDecorations
	a (Leov;Lcfz;IILjava/lang/String;)V renderItemDecorations
	b (Leov;Lcfz;II)V renderTooltip
	a (Leov;Ljava/util/List;Ljava/util/Optional;II)V renderTooltip
	a (Leov;Lsw;II)V renderTooltip
	a (Leov;Ljava/util/List;II)V renderComponentTooltip
	b (Leov;Ljava/util/List;II)V renderTooltip
	a (Leov;Ljava/util/List;Lexi;II)V renderTooltip
	a (Leov;Ljava/util/List;IILexi;)V renderTooltipInternal
	a (Leov;Lts;II)V renderComponentHoverEffect
	d (IIII)V lambda$renderTooltipInternal$5
	a (Ljava/util/List;Lcdf;)V lambda$renderTooltip$4
	a (Lcfz;)Ljava/lang/String; lambda$renderItem$3
	b (Lcfz;)Ljava/lang/String; lambda$renderItem$2
	c (Lcfz;)Ljava/lang/String; lambda$renderItem$1
	d (Lcfz;)Ljava/lang/String; lambda$renderItem$0
eox$a net/minecraft/client/gui/GuiGraphics$ScissorStack
	a stack
	<init> ()V <init>
	a (Lesz;)Lesz; push
	a ()Lesz; pop
eoy net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c WIDTH
	d HEIGHT
	e textureManager
	f maps
	<init> (Lfuw;)V <init>
	a (ILdyo;)V update
	a (Leij;Lfjx;ILdyo;ZI)V render
	b (ILdyo;)Leoy$a; getOrCreateMapInstance
	a ()V resetData
	close ()V close
	a (Ldyo;Ljava/lang/Integer;Leoy$a;)Leoy$a; lambda$getOrCreateMapInstance$0
	<clinit> ()V <clinit>
eoy$a net/minecraft/client/gui/MapRenderer$MapInstance
	b data
	c texture
	d renderType
	e requiresUpload
	a this$0
	<init> (Leoy;ILdyo;)V <init>
	a (Ldyo;)V replaceMapData
	a ()V forceUpload
	b ()V updateTexture
	a (Leij;Lfjx;ZI)V draw
	close ()V close
eoz net/minecraft/client/gui/components/AbstractButton
	g TEXTURE_Y_OFFSET
	h TEXTURE_WIDTH
	i TEXTURE_HEIGHT
	j TEXTURE_BORDER_X
	k TEXTURE_BORDER_Y
	l TEXT_MARGIN
	<init> (IIIILsw;)V <init>
	c ()V onPress
	b (Leox;IIF)V renderWidget
	a (Leox;Leov;I)V renderString
	a ()I getTextureY
	a (DD)V onClick
	a (III)Z keyPressed
epa net/minecraft/client/gui/components/AbstractOptionSliderButton
	a options
	<init> (Lenr;IIIID)V <init>
epb net/minecraft/client/gui/components/AbstractScrollWidget
	a BORDER_COLOR_FOCUSED
	b BORDER_COLOR
	c BACKGROUND_COLOR
	d INNER_PADDING
	e scrollAmount
	f scrolling
	<init> (IIIILsw;)V <init>
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	b (Leox;IIF)V renderWidget
	v ()I getScrollBarHeight
	a (Leox;)V renderDecorations
	a ()I innerPadding
	b ()I totalInnerPadding
	c ()D scrollAmount
	a (D)V setScrollAmount
	d ()I getMaxScrollAmount
	w ()I getContentHeight
	b (Leox;)V renderBackground
	a (Leox;IIII)V renderBorder
	c (Leox;)V renderScrollBar
	a (II)Z withinContentAreaTopBottom
	c (DD)Z withinContentAreaPoint
	e ()Z scrollbarVisible
	f ()I getInnerHeight
	g ()D scrollRate
	c (Leox;IIF)V renderContents
epc net/minecraft/client/gui/components/AbstractSelectionList
	b minecraft
	c itemHeight
	a children
	d width
	e height
	f y0
	g y1
	h x1
	i x0
	j centerListVertically
	l scrollAmount
	m renderSelection
	n renderHeader
	k headerHeight
	o scrolling
	p selected
	q renderBackground
	r renderTopAndBottom
	s hovered
	<init> (Lenn;IIIII)V <init>
	a (Z)V setRenderSelection
	a (ZI)V setRenderHeader
	b ()I getRowWidth
	f ()Lepc$a; getSelected
	a (Lepc$a;)V setSelected
	g ()Lepc$a; getFirstElement
	b (Z)V setRenderBackground
	c (Z)V setRenderTopAndBottom
	h ()Lepc$a; getFocused
	i ()Ljava/util/List; children
	j ()V clearEntries
	a (Ljava/util/Collection;)V replaceEntries
	d (I)Lepc$a; getEntry
	b (Lepc$a;)I addEntry
	c (Lepc$a;)V addEntryToTop
	d (Lepc$a;)Z removeEntryFromTop
	k ()I getItemCount
	e (I)Z isSelectedItem
	a (DD)Lepc$a; getEntryAtPosition
	a (IIII)V updateSize
	f (I)V setLeftPos
	a ()I getMaxPosition
	a (II)V clickedHeader
	a (Leox;II)V renderHeader
	a (Leox;)V renderBackground
	b (Leox;II)V renderDecorations
	a (Leox;IIF)V render
	b (Leox;)V enableScissor
	e (Lepc$a;)V centerScrollOn
	f (Lepc$a;)V ensureVisible
	a (I)V scroll
	l ()D getScrollAmount
	a (D)V setScrollAmount
	m ()I getMaxScroll
	n ()I getScrollBottom
	c (DDI)V updateScrollingState
	c ()I getScrollbarPosition
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (Leqt;)V setFocused
	a (Lesx;)Lepc$a; nextEntry
	a (Lesx;Ljava/util/function/Predicate;)Lepc$a; nextEntry
	a (Lesx;Ljava/util/function/Predicate;Lepc$a;)Lepc$a; nextEntry
	a_ (DD)Z isMouseOver
	b (Leox;IIF)V renderList
	a (Leox;IIFIIIII)V renderItem
	a (Leox;IIIII)V renderSelection
	o ()I getRowLeft
	p ()I getRowRight
	g (I)I getRowTop
	h (I)I getRowBottom
	q ()Lesn$a; narrationPriority
	i (I)Lepc$a; remove
	g (Lepc$a;)Z removeEntry
	r ()Lepc$a; getHovered
	h (Lepc$a;)V bindEntryToSelf
	a (Lesp;Lepc$a;)V narrateListElementPosition
	s ()Lesz; getRectangle
	t ()Leqt; getFocused
	i (Lepc$a;)Z lambda$nextEntry$0
epc$1 net/minecraft/client/gui/components/AbstractSelectionList$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenDirection
	<clinit> ()V <clinit>
epc$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
	a list
	<init> ()V <init>
	b_ (Z)V setFocused
	aB_ ()Z isFocused
	a (Leox;IIIIIIIZF)V render
	b (Leox;IIIIIIIZF)V renderBack
	a_ (DD)Z isMouseOver
epc$b net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	b delegate
	a this$0
	<init> (Lepc;)V <init>
	a (I)Lepc$a; get
	size ()I size
	a (ILepc$a;)Lepc$a; set
	b (ILepc$a;)V add
	b (I)Lepc$a; remove
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
epd net/minecraft/client/gui/components/AbstractSliderButton
	a SLIDER_LOCATION
	b TEXTURE_WIDTH
	c TEXTURE_HEIGHT
	d TEXTURE_BORDER_X
	e TEXTURE_BORDER_Y
	f TEXT_MARGIN
	h HEIGHT
	i HANDLE_HALF_WIDTH
	j HANDLE_WIDTH
	k BACKGROUND
	l BACKGROUND_FOCUSED
	u HANDLE
	v HANDLE_FOCUSED
	g value
	w canChangeValue
	<init> (IIIILsw;D)V <init>
	e ()I getTextureY
	f ()I getHandleTextureY
	aE_ ()Ltj; createNarrationMessage
	a (Lesp;)V updateWidgetNarration
	b (Leox;IIF)V renderWidget
	a (DD)V onClick
	b_ (Z)V setFocused
	a (III)Z keyPressed
	a (D)V setValueFromMouse
	b (D)V setValue
	a (DDDD)V onDrag
	a (Lfzc;)V playDownSound
	b (DD)V onRelease
	b ()V updateMessage
	a ()V applyValue
	<clinit> ()V <clinit>
epe net/minecraft/client/gui/components/AbstractStringWidget
	a font
	b color
	<init> (IIIILsw;Leov;)V <init>
	a (Lesp;)V updateWidgetNarration
	a (I)Lepe; setColor
	a ()Leov; getFont
	b ()I getColor
epf net/minecraft/client/gui/components/AbstractWidget
	m WIDGETS_LOCATION
	n ACCESSIBILITY_TEXTURE
	a PERIOD_PER_SCROLLED_PIXEL
	b MIN_SCROLL_PERIOD
	o width
	p height
	c x
	d y
	e message
	q isHovered
	r active
	s visible
	t alpha
	f tabOrderGroup
	g focused
	h tooltip
	i tooltipMsDelay
	j hoverOrFocusedStartTime
	k wasHoveredOrFocused
	<init> (IIIILsw;)V <init>
	h ()I getHeight
	a (Leox;IIF)V render
	a ()V updateTooltip
	i ()Lexi; createTooltipPositioner
	a (Leqp;)V setTooltip
	j ()Leqp; getTooltip
	b (I)V setTooltipDelay
	aE_ ()Ltj; createNarrationMessage
	a (Lsw;)Ltj; wrapDefaultNarrationMessage
	b (Leox;IIF)V renderWidget
	a (Leox;Leov;Lsw;IIIII)V renderScrollingString
	a (Leox;Leov;II)V renderScrollingString
	a (Leox;Lacq;IIIIIIIII)V renderTexture
	a (DD)V onClick
	b (DD)V onRelease
	a (DDDD)V onDrag
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	c (I)Z isValidClickButton
	a (DDIDD)Z mouseDragged
	d (DD)Z clicked
	a (Lesv;)Leou; nextFocusPath
	a_ (DD)Z isMouseOver
	a (Lfzc;)V playDownSound
	k ()I getWidth
	d (I)V setWidth
	a (F)V setAlpha
	b (Lsw;)V setMessage
	l ()Lsw; getMessage
	aB_ ()Z isFocused
	m ()Z isHovered
	n ()Z isHoveredOrFocused
	aD_ ()Z isActive
	b_ (Z)V setFocused
	q ()Lesn$a; narrationPriority
	b (Lesp;)V updateNarration
	a (Lesp;)V updateWidgetNarration
	c (Lesp;)V defaultButtonNarrationText
	p ()I getX
	e (I)V setX
	r ()I getY
	f (I)V setY
	a (Ljava/util/function/Consumer;)V visitWidgets
	s ()Lesz; getRectangle
	aC_ ()I getTabOrderGroup
	g (I)V setTabOrderGroup
	<clinit> ()V <clinit>
epg net/minecraft/client/gui/components/AccessibilityOnboardingTextWidget
	a BORDER_COLOR_FOCUSED
	b BORDER_COLOR
	c BACKGROUND_COLOR
	d PADDING
	e BORDER
	<init> (Leov;Lsw;I)V <init>
	a (Lesp;)V updateWidgetNarration
	b (Leox;IIF)V renderWidget
	a (Lfzc;)V playDownSound
eph net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b BAR_WIDTH
	c BAR_HEIGHT
	d OVERLAY_OFFSET
	e minecraft
	f events
	<init> (Lenn;)V <init>
	a (Leox;)V render
	a (Leox;IILbdn;)V drawBar
	a (Leox;IILbdn;II)V drawBar
	a (Lvc;)V update
	a ()V reset
	b ()Z shouldPlayMusic
	c ()Z shouldDarkenScreen
	d ()Z shouldCreateWorldFog
	<clinit> ()V <clinit>
eph$1 net/minecraft/client/gui/components/BossHealthOverlay$1
	a this$0
	<init> (Leph;)V <init>
	a (Ljava/util/UUID;Lsw;FLbdn$a;Lbdn$b;ZZZ)V add
	a (Ljava/util/UUID;)V remove
	a (Ljava/util/UUID;F)V updateProgress
	a (Ljava/util/UUID;Lsw;)V updateName
	a (Ljava/util/UUID;Lbdn$a;Lbdn$b;)V updateStyle
	a (Ljava/util/UUID;ZZZ)V updateProperties
epi net/minecraft/client/gui/components/Button
	u SMALL_WIDTH
	v DEFAULT_WIDTH
	w DEFAULT_HEIGHT
	x DEFAULT_NARRATION
	y onPress
	z createNarration
	a (Lsw;Lepi$c;)Lepi$a; builder
	<init> (IIIILsw;Lepi$c;Lepi$b;)V <init>
	c ()V onPress
	aE_ ()Ltj; createNarrationMessage
	a (Lesp;)V updateWidgetNarration
	a ()Ltj; lambda$createNarrationMessage$1
	a (Ljava/util/function/Supplier;)Ltj; lambda$static$0
	<clinit> ()V <clinit>
epi$a net/minecraft/client/gui/components/Button$Builder
	a message
	b onPress
	c tooltip
	d x
	e y
	f width
	g height
	h createNarration
	<init> (Lsw;Lepi$c;)V <init>
	a (II)Lepi$a; pos
	a (I)Lepi$a; width
	b (II)Lepi$a; size
	a (IIII)Lepi$a; bounds
	a (Leqp;)Lepi$a; tooltip
	a (Lepi$b;)Lepi$a; createNarration
	a ()Lepi; build
epi$b net/minecraft/client/gui/components/Button$CreateNarration
	createNarrationMessage (Ljava/util/function/Supplier;)Ltj; createNarrationMessage
epi$c net/minecraft/client/gui/components/Button$OnPress
	onPress (Lepi;)V onPress
epj net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b MAX_CHAT_HISTORY
	c MESSAGE_NOT_FOUND
	d MESSAGE_INDENT
	e MESSAGE_TAG_MARGIN_LEFT
	f BOTTOM_MARGIN
	g TIME_BEFORE_MESSAGE_DELETION
	h DELETED_CHAT_MESSAGE
	i minecraft
	j recentChat
	k allMessages
	l trimmedMessages
	m chatScrollbarPos
	n newMessageSinceScroll
	o messageDeletionQueue
	<init> (Lenn;)V <init>
	a ()V tick
	a (Leox;III)V render
	a (Leox;IILeni$a;)V drawTagIcon
	a (Lenh$a;)I getTagIconLeft
	j ()Z isChatHidden
	b (I)D getTimeFactor
	a (Z)V clearMessages
	a (Lsw;)V addMessage
	a (Lsw;Lth;Leni;)V addMessage
	a (Lsw;Leni;)V logChatMessage
	a (Lsw;Lth;ILeni;Z)V addMessage
	k ()V processMessageDeletionQueue
	a (Lth;)V deleteMessage
	b (Lth;)Lepj$a; deleteMessageOrDelay
	a (Lenh;)Lenh; createDeletedMarker
	b ()V rescaleChat
	l ()V refreshTrimmedMessage
	c ()Ljava/util/List; getRecentChat
	a (Ljava/lang/String;)V addRecentChat
	d ()V resetChatScroll
	a (I)V scrollChat
	a (DD)Z handleChatQueueClicked
	b (DD)Lts; getClickedComponentStyleAt
	c (DD)Leni; getMessageTagAt
	a (DLenh$a;Leni;)Z hasSelectedMessageTag
	c (D)D screenToChatX
	d (D)D screenToChatY
	d (DD)I getMessageEndIndexAt
	e (DD)I getMessageLineIndexAt
	m ()Z isChatFocused
	e ()I getWidth
	f ()I getHeight
	g ()D getScale
	a (D)I getWidth
	b (D)I getHeight
	h ()D defaultUnfocusedPct
	i ()I getLinesPerPage
	n ()I getLineHeight
	a (ILepj$a;)Z lambda$processMessageDeletionQueue$0
	<clinit> ()V <clinit>
epj$a net/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion
	a signature
	b deletableAfter
	<init> (Lth;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lth; signature
	b ()I deletableAfter
epk net/minecraft/client/gui/components/Checkbox
	a TEXTURE
	b TEXT_COLOR
	c selected
	d showLabel
	<init> (IIIILsw;Z)V <init>
	<init> (IIIILsw;ZZ)V <init>
	c ()V onPress
	a ()Z selected
	a (Lesp;)V updateWidgetNarration
	b (Leox;IIF)V renderWidget
	<clinit> ()V <clinit>
epl net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b UNPARSED_STYLE
	c LITERAL_STYLE
	d ARGUMENT_STYLES
	e minecraft
	f screen
	g input
	h font
	i commandsOnly
	j onlyShowIfCursorPastError
	k lineStartOffset
	l suggestionLineLimit
	m anchorToBottom
	n fillColor
	o commandUsage
	p commandUsagePosition
	q commandUsageWidth
	r currentParse
	s pendingSuggestions
	t suggestions
	u allowSuggestions
	v keepSuggestions
	<init> (Lenn;Leuq;Lepr;Leov;ZZIIZI)V <init>
	a (Z)V setAllowSuggestions
	a (III)Z keyPressed
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	b (Z)V showSuggestions
	a ()V hide
	a (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; sortSuggestions
	b ()V updateCommandInfo
	a (Ljava/lang/String;)I getLastWordIndex
	a (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Laom; getExceptionMessage
	d ()V updateUsageInfo
	a (Ln;)Z fillNodeUsage
	a (Ljava/lang/String;I)Laom; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Laom; formatText
	a (Leox;II)V render
	b (Leox;II)Z renderSuggestions
	a (Leox;)V renderUsage
	c ()Lsw; getNarrationMessage
	e ()V lambda$updateCommandInfo$0
	<clinit> ()V <clinit>
epl$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	b rect
	c originalContents
	d suggestionList
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a this$0
	<init> (Lepl;IIILjava/util/List;Z)V <init>
	a (Leox;II)V render
	a (III)Z mouseClicked
	a (D)Z mouseScrolled
	b (III)Z keyPressed
	a (I)V cycle
	b (I)V select
	a ()V useSuggestion
	b ()Lsw; getNarrationMessage
epm net/minecraft/client/gui/components/CommonButtons
	<init> ()V <init>
	a (Lepi$c;)Leqo; languageTextAndImage
	b (Lepi$c;)Leqo; accessibilityTextAndImage
epn net/minecraft/client/gui/components/ComponentRenderUtils
	a INDENT
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Lta;ILeov;)Ljava/util/List; wrapComponents
	a (Ljava/util/List;Lta;Ljava/lang/Boolean;)V lambda$wrapComponents$1
	a (Lend;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$wrapComponents$0
	<clinit> ()V <clinit>
epo net/minecraft/client/gui/components/ContainerObjectSelectionList
	<init> (Lenn;IIIII)V <init>
	a (Lesv;)Leou; nextFocusPath
	a (Leqt;)V setFocused
	q ()Lesn$a; narrationPriority
	e (I)Z isSelectedItem
	b (Lesp;)V updateNarration
	a (Lepo$a;)Z lambda$nextFocusPath$0
epo$1 net/minecraft/client/gui/components/ContainerObjectSelectionList$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenDirection
	<clinit> ()V <clinit>
epo$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b lastNarratable
	c dragging
	<init> ()V <init>
	aA_ ()Z isDragging
	c_ (Z)V setDragging
	a (DDI)Z mouseClicked
	a (Leqt;)V setFocused
	t ()Leqt; getFocused
	a (Lesv;I)Leou; focusPathAtIndex
	a (Lesv;)Leou; nextFocusPath
	b ()Ljava/util/List; narratables
	a (Lesp;)V updateNarration
	a_ (DD)Z isMouseOver
	b (Leox;IIIIIIIZF)V renderBack
	aB_ ()Z isFocused
	b_ (Z)V setFocused
epp net/minecraft/client/gui/components/CycleButton
	a DEFAULT_ALT_LIST_SELECTOR
	b BOOLEAN_OPTIONS
	c name
	d index
	e value
	f values
	u valueStringifier
	v narrationProvider
	w onValueChange
	x displayOnlyValue
	y tooltipSupplier
	<init> (IIIILsw;Lsw;ILjava/lang/Object;Lepp$c;Ljava/util/function/Function;Ljava/util/function/Function;Lepp$b;Lenq$l;Z)V <init>
	f ()V updateTooltip
	c ()V onPress
	a (I)V cycleValue
	h (I)Ljava/lang/Object; getCycledValue
	a (DDD)Z mouseScrolled
	a (Ljava/lang/Object;)V setValue
	b (Ljava/lang/Object;)V updateValue
	c (Ljava/lang/Object;)Lsw; createLabelForValue
	d (Ljava/lang/Object;)Ltj; createFullName
	a ()Ljava/lang/Object; getValue
	aE_ ()Ltj; createNarrationMessage
	a (Lesp;)V updateWidgetNarration
	b ()Ltj; createDefaultNarrationMessage
	a (Ljava/util/function/Function;)Lepp$a; builder
	a (Lsw;Lsw;)Lepp$a; booleanBuilder
	e ()Lepp$a; onOffBuilder
	b (Z)Lepp$a; onOffBuilder
	a (Ljava/lang/Boolean;)Lsw; lambda$onOffBuilder$1
	a (Lsw;Lsw;Ljava/lang/Boolean;)Lsw; lambda$booleanBuilder$0
	<clinit> ()V <clinit>
epp$a net/minecraft/client/gui/components/CycleButton$Builder
	a initialIndex
	b initialValue
	c valueStringifier
	d tooltipSupplier
	e narrationProvider
	f values
	g displayOnlyValue
	<init> (Ljava/util/function/Function;)V <init>
	a (Ljava/util/Collection;)Lepp$a; withValues
	a ([Ljava/lang/Object;)Lepp$a; withValues
	a (Ljava/util/List;Ljava/util/List;)Lepp$a; withValues
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lepp$a; withValues
	a (Lepp$c;)Lepp$a; withValues
	a (Lenq$l;)Lepp$a; withTooltip
	a (Ljava/lang/Object;)Lepp$a; withInitialValue
	a (Ljava/util/function/Function;)Lepp$a; withCustomNarration
	a ()Lepp$a; displayOnlyValue
	a (IIIILsw;)Lepp; create
	a (IIIILsw;Lepp$b;)Lepp; create
	a (Lepp;Ljava/lang/Object;)V lambda$create$1
	b (Ljava/lang/Object;)Leqp; lambda$new$0
epp$b net/minecraft/client/gui/components/CycleButton$OnValueChange
	onValueChange (Lepp;Ljava/lang/Object;)V onValueChange
epp$c net/minecraft/client/gui/components/CycleButton$ValueListSupplier
	a ()Ljava/util/List; getSelectedList
	b ()Ljava/util/List; getDefaultList
	a (Ljava/util/Collection;)Lepp$c; create
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lepp$c; create
epp$c$1 net/minecraft/client/gui/components/CycleButton$ValueListSupplier$1
	a val$copy
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; getSelectedList
	b ()Ljava/util/List; getDefaultList
epp$c$2 net/minecraft/client/gui/components/CycleButton$ValueListSupplier$2
	a val$altSelector
	b val$altCopy
	c val$defaultCopy
	<init> (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getSelectedList
	b ()Ljava/util/List; getDefaultList
epq net/minecraft/client/gui/components/DebugScreenOverlay
	a COLOR_GREY
	b MARGIN_RIGHT
	c MARGIN_LEFT
	d MARGIN_TOP
	e HEIGHTMAP_NAMES
	f minecraft
	g allocationRateCalculator
	h font
	i block
	j liquid
	k lastPos
	l clientChunk
	m serverChunk
	n RED
	o YELLOW
	p GREEN
	<init> (Lenn;)V <init>
	a ()V clearChunkCache
	a (Leox;)V render
	b (Leox;)V drawGameInformation
	c (Leox;)V drawSystemInformation
	a (Leox;Ljava/util/List;Z)V renderLines
	b ()Ljava/util/List; getGameInformation
	a (Lhe;)Ljava/lang/String; printBiome
	d ()Laif; getServerLevel
	e ()Ljava/lang/String; getServerChunkStats
	f ()Lcmm; getLevel
	g ()Ldei; getServerChunk
	h ()Ldei; getClientChunk
	c ()Ljava/util/List; getSystemInformation
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Leox;Laoo;IIZ)V drawChart
	a (IIII)I getSampleColor
	a (IIF)I colorLerp
	a (J)J bytesToMegabytes
	a (Lanl;)Ljava/lang/String; lambda$getSystemInformation$10
	b (Lanl;)Ljava/lang/String; lambda$getSystemInformation$9
	a (Lcom/mojang/datafixers/util/Either;)Ldei; lambda$getServerChunk$8
	a (Lahp$a;)Ldei; lambda$getServerChunk$7
	a (Lddx;)Ldei; lambda$getServerChunk$6
	a (Lfyp;)Ljava/util/Optional; lambda$getLevel$5
	a (Lcnk;)Ljava/lang/String; lambda$printBiome$4
	a (Lacp;)Ljava/lang/String; lambda$printBiome$3
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lbgc;)Ljava/lang/String; lambda$getGameInformation$2
	d (Leox;)V lambda$render$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
epq$1 net/minecraft/client/gui/components/DebugScreenOverlay$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
epq$a net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator
	a UPDATE_INTERVAL_MS
	b GC_MBEANS
	c lastTime
	d lastHeapUsage
	e lastGcCounts
	f lastRate
	<init> ()V <init>
	a (J)J bytesAllocatedPerSecond
	a ()J gcCounts
	<clinit> ()V <clinit>
epr net/minecraft/client/gui/components/EditBox
	a BACKWARDS
	b FORWARDS
	d CURSOR_INSERT_WIDTH
	e CURSOR_INSERT_COLOR
	f CURSOR_APPEND_CHARACTER
	c DEFAULT_TEXT_COLOR
	g BORDER_COLOR_FOCUSED
	h BORDER_COLOR
	i BACKGROUND_COLOR
	j font
	k value
	l maxLength
	u frame
	v bordered
	w canLoseFocus
	x isEditable
	y shiftPressed
	z displayPos
	A cursorPos
	C highlightPos
	D textColor
	E textColorUneditable
	F suggestion
	G responder
	H filter
	I formatter
	J hint
	<init> (Leov;IIIILsw;)V <init>
	<init> (Leov;IIIILepr;Lsw;)V <init>
	b (Ljava/util/function/Consumer;)V setResponder
	a (Ljava/util/function/BiFunction;)V setFormatter
	a ()V tick
	aE_ ()Ltj; createNarrationMessage
	a (Ljava/lang/String;)V setValue
	b ()Ljava/lang/String; getValue
	e ()Ljava/lang/String; getHighlighted
	a (Ljava/util/function/Predicate;)V setFilter
	b (Ljava/lang/String;)V insertText
	d (Ljava/lang/String;)V onValueChange
	r (I)V deleteText
	a (I)V deleteWords
	h (I)V deleteChars
	i (I)I getWordPosition
	a (II)I getWordPosition
	a (IIZ)I getWordPosition
	j (I)V moveCursor
	s (I)I getCursorPos
	k (I)V moveCursorTo
	l (I)V setCursorPosition
	f ()V moveCursorToStart
	g ()V moveCursorToEnd
	a (III)Z keyPressed
	u ()Z canConsumeInput
	a (CI)Z charTyped
	a (DD)V onClick
	a (Lfzc;)V playDownSound
	b (Leox;IIF)V renderWidget
	a (Leox;IIII)V renderHighlight
	m (I)V setMaxLength
	y ()I getMaxLength
	v ()I getCursorPosition
	z ()Z isBordered
	b (Z)V setBordered
	n (I)V setTextColor
	o (I)V setTextColorUneditable
	a (Lesv;)Leou; nextFocusPath
	a_ (DD)Z isMouseOver
	b_ (Z)V setFocused
	A ()Z isEditable
	c (Z)V setEditable
	w ()I getInnerWidth
	p (I)V setHighlightPos
	d (Z)V setCanLoseFocus
	x ()Z isVisible
	e (Z)V setVisible
	c (Ljava/lang/String;)V setSuggestion
	q (I)I getScreenX
	a (Lesp;)V updateWidgetNarration
	c (Lsw;)V setHint
	a (Ljava/lang/String;Ljava/lang/Integer;)Laom; lambda$new$0
eps net/minecraft/client/gui/components/FittingMultiLineTextWidget
	a font
	b multilineWidget
	<init> (IIIILsw;Leov;)V <init>
	a (I)Leps; setColor
	d (I)V setWidth
	f ()I getInnerHeight
	g ()D scrollRate
	b (Leox;)V renderBackground
	b (Leox;IIF)V renderWidget
	c (Leox;IIF)V renderContents
	a (Lesp;)V updateWidgetNarration
ept net/minecraft/client/gui/components/ImageButton
	b resourceLocation
	c xTexStart
	d yTexStart
	e yDiffTex
	f textureWidth
	A textureHeight
	<init> (IIIIIILacq;Lepi$c;)V <init>
	<init> (IIIIIIILacq;Lepi$c;)V <init>
	<init> (IIIIIIILacq;IILepi$c;)V <init>
	<init> (IIIIIIILacq;IILepi$c;Lsw;)V <init>
	b (Leox;IIF)V renderWidget
epu net/minecraft/client/gui/components/ImageWidget
	a imageLocation
	<init> (IILacq;)V <init>
	<init> (IIIILacq;)V <init>
	a (Lesp;)V updateWidgetNarration
	b (Leox;IIF)V renderWidget
epv net/minecraft/client/gui/components/LerpingBossEvent
	j LERP_MILLISECONDS
	h targetPercent
	i setTime
	<init> (Ljava/util/UUID;Lsw;FLbdn$a;Lbdn$b;ZZZ)V <init>
	a (F)V setProgress
	k ()F getProgress
epw net/minecraft/client/gui/components/LockIconButton
	a locked
	<init> (IILepi$c;)V <init>
	aE_ ()Ltj; createNarrationMessage
	a ()Z isLocked
	b (Z)V setLocked
	b (Leox;IIF)V renderWidget
epw$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	values ()[Lepw$a; values
	valueOf (Ljava/lang/String;)Lepw$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a ()I getX
	b ()I getY
	c ()[Lepw$a; $values
	<clinit> ()V <clinit>
epx net/minecraft/client/gui/components/LogoRenderer
	a MINECRAFT_LOGO
	b EASTER_EGG_LOGO
	c MINECRAFT_EDITION
	d LOGO_WIDTH
	e LOGO_HEIGHT
	g LOGO_TEXTURE_WIDTH
	h LOGO_TEXTURE_HEIGHT
	i EDITION_WIDTH
	j EDITION_HEIGHT
	k EDITION_TEXTURE_WIDTH
	l EDITION_TEXTURE_HEIGHT
	f DEFAULT_HEIGHT_OFFSET
	m EDITION_LOGO_OVERLAP
	n showEasterEgg
	o keepLogoThroughFade
	<init> (Z)V <init>
	a (Leox;IF)V renderLogo
	a (Leox;IFI)V renderLogo
	<clinit> ()V <clinit>
epy net/minecraft/client/gui/components/MultiLineEditBox
	a CURSOR_INSERT_WIDTH
	b CURSOR_INSERT_COLOR
	c CURSOR_APPEND_CHARACTER
	d TEXT_COLOR
	e PLACEHOLDER_TEXT_COLOR
	f font
	g placeholder
	h textField
	i frame
	<init> (Leov;IIIILsw;Lsw;)V <init>
	a (I)V setCharacterLimit
	b (Ljava/util/function/Consumer;)V setValueListener
	a (Ljava/lang/String;)V setValue
	u ()Ljava/lang/String; getValue
	v ()V tick
	a (Lesp;)V updateWidgetNarration
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (CI)Z charTyped
	c (Leox;IIF)V renderContents
	a (Leox;)V renderDecorations
	f ()I getInnerHeight
	e ()Z scrollbarVisible
	g ()D scrollRate
	b (Leox;IIII)V renderHighlight
	w ()V scrollToCursor
	x ()D getDisplayableLineCount
	f (DD)V seekCursorScreen
epz net/minecraft/client/gui/components/MultiLineLabel
	a EMPTY
	a (Leov;Lta;I)Lepz; create
	a (Leov;Lta;II)Lepz; create
	a (Leov;[Lsw;)Lepz; create
	a (Leov;Ljava/util/List;)Lepz; create
	b (Leov;Ljava/util/List;)Lepz; createFixed
	a (Leox;II)I renderCentered
	a (Leox;IIII)I renderCentered
	b (Leox;IIII)I renderLeftAligned
	c (Leox;IIII)I renderLeftAlignedNoShadow
	a (Leox;IIIII)V renderBackgroundCentered
	a ()I getLineCount
	b ()I getWidth
	a (Leov;Laom;)Lepz$a; lambda$create$3
	b (Leov;Laom;)Lepz$a; lambda$create$2
	c (Leov;Laom;)Lepz$a; lambda$create$1
	d (Leov;Laom;)Lepz$a; lambda$create$0
	<clinit> ()V <clinit>
epz$1 net/minecraft/client/gui/components/MultiLineLabel$1
	<init> ()V <init>
	a (Leox;II)I renderCentered
	a (Leox;IIII)I renderCentered
	b (Leox;IIII)I renderLeftAligned
	c (Leox;IIII)I renderLeftAlignedNoShadow
	a (Leox;IIIII)V renderBackgroundCentered
	a ()I getLineCount
	b ()I getWidth
epz$2 net/minecraft/client/gui/components/MultiLineLabel$2
	d width
	b val$lines
	c val$font
	<init> (Ljava/util/List;Leov;)V <init>
	a (Leox;II)I renderCentered
	a (Leox;IIII)I renderCentered
	b (Leox;IIII)I renderLeftAligned
	c (Leox;IIII)I renderLeftAlignedNoShadow
	a (Leox;IIIII)V renderBackgroundCentered
	a ()I getLineCount
	b ()I getWidth
	a (Lepz$a;)I lambda$renderBackgroundCentered$1
	b (Lepz$a;)I lambda$$0
epz$a net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth
	a text
	b width
	<init> (Laom;I)V <init>
eqa net/minecraft/client/gui/components/MultiLineTextWidget
	a maxWidth
	b maxRows
	c cache
	d centered
	<init> (Lsw;Leov;)V <init>
	<init> (IILsw;Leov;)V <init>
	h (I)Leqa; setColor
	i (I)Leqa; setMaxWidth
	j (I)Leqa; setMaxRows
	b (Z)Leqa; setCentered
	k ()I getWidth
	h ()I getHeight
	b (Leox;IIF)V renderWidget
	e ()Leqa$a; getFreshCacheKey
	a (I)Lepe; setColor
	a (Leov;Leqa$a;)Lepz; lambda$new$0
eqa$a net/minecraft/client/gui/components/MultiLineTextWidget$CacheKey
	a message
	b maxWidth
	c maxRows
	<init> (Lsw;ILjava/util/OptionalInt;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; message
	b ()I maxWidth
	c ()Ljava/util/OptionalInt; maxRows
eqb net/minecraft/client/gui/components/MultilineTextField
	a NO_CHARACTER_LIMIT
	b LINE_SEEK_PIXEL_BIAS
	c font
	d displayLines
	e value
	f cursor
	g selectCursor
	h selecting
	i characterLimit
	j width
	k valueListener
	l cursorListener
	<init> (Leov;I)V <init>
	a ()I characterLimit
	a (I)V setCharacterLimit
	b ()Z hasCharacterLimit
	a (Ljava/util/function/Consumer;)V setValueListener
	a (Ljava/lang/Runnable;)V setCursorListener
	a (Ljava/lang/String;)V setValue
	c ()Ljava/lang/String; value
	b (Ljava/lang/String;)V insertText
	b (I)V deleteText
	d ()I cursor
	a (Z)V setSelecting
	e ()Leqb$a; getSelected
	f ()I getLineCount
	g ()I getLineAtCursor
	c (I)Leqb$a; getLineView
	a (Leqq;I)V seekCursor
	d (I)V seekCursorLine
	a (DD)V seekCursorToPoint
	e (I)Z keyPressed
	h ()Ljava/lang/Iterable; iterateLines
	i ()Z hasSelection
	j ()Ljava/lang/String; getSelectedText
	m ()Leqb$a; getCursorLineView
	f (I)Leqb$a; getCursorLineView
	k ()Leqb$a; getPreviousWord
	l ()Leqb$a; getNextWord
	g (I)I getWordEndPosition
	n ()V onValueChange
	o ()V reflowDisplayLines
	c (Ljava/lang/String;)Ljava/lang/String; truncateFullText
	d (Ljava/lang/String;)Ljava/lang/String; truncateInsertionText
	a (Lts;II)V lambda$reflowDisplayLines$2
	p ()V lambda$new$1
	e (Ljava/lang/String;)V lambda$new$0
eqb$1 net/minecraft/client/gui/components/MultilineTextField$1
	a $SwitchMap$net$minecraft$client$gui$components$Whence
	<clinit> ()V <clinit>
eqb$a net/minecraft/client/gui/components/MultilineTextField$StringView
	a beginIndex
	b endIndex
	c EMPTY
	<init> (II)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I beginIndex
	b ()I endIndex
	<clinit> ()V <clinit>
eqc net/minecraft/client/gui/components/ObjectSelectionList
	a USAGE_NARRATION
	<init> (Lenn;IIIII)V <init>
	a (Lesv;)Leou; nextFocusPath
	b (Lesp;)V updateNarration
	<clinit> ()V <clinit>
eqc$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
	<init> ()V <init>
	a ()Lsw; getNarration
	b (Lesp;)V updateNarration
	a_ (DD)Z isMouseOver
	b (Leox;IIIIIIIZF)V renderBack
	aB_ ()Z isFocused
	b_ (Z)V setFocused
eqd net/minecraft/client/gui/components/OptionsList
	<init> (Lenn;IIIII)V <init>
	a (Lenq;)I addBig
	a (Lenq;Lenq;)V addSmall
	a ([Lenq;)V addSmall
	b ()I getRowWidth
	c ()I getScrollbarPosition
	b (Lenq;)Lepf; findOption
	c (DD)Ljava/util/Optional; getMouseOver
eqd$a net/minecraft/client/gui/components/OptionsList$Entry
	a options
	b children
	<init> (Ljava/util/Map;)V <init>
	a (Lenr;ILenq;)Leqd$a; big
	a (Lenr;ILenq;Lenq;)Leqd$a; small
	a (Leox;IIIIIIIZF)V render
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
	a (ILeox;IIFLepf;)V lambda$render$0
eqe net/minecraft/client/gui/components/PlainTextButton
	a font
	b message
	c underlinedMessage
	<init> (IIIILsw;Lepi$c;Leov;)V <init>
	b (Leox;IIF)V renderWidget
eqf net/minecraft/client/gui/components/PlayerFaceRenderer
	a SKIN_HEAD_U
	b SKIN_HEAD_V
	c SKIN_HEAD_WIDTH
	d SKIN_HEAD_HEIGHT
	e SKIN_HAT_U
	f SKIN_HAT_V
	g SKIN_HAT_WIDTH
	h SKIN_HAT_HEIGHT
	i SKIN_TEX_WIDTH
	j SKIN_TEX_HEIGHT
	<init> ()V <init>
	a (Leox;Lacq;III)V draw
	a (Leox;Lacq;IIIZZ)V draw
	a (Leox;Lacq;IIIZ)V drawHat
eqg net/minecraft/client/gui/components/PlayerTabOverlay
	j PLAYER_COMPARATOR
	k GUI_ICONS_LOCATION
	a MAX_ROWS_PER_COL
	b HEART_EMPTY_CONTAINER
	c HEART_EMPTY_CONTAINER_BLINKING
	d HEART_FULL
	e HEART_HALF_FULL
	f HEART_GOLDEN_FULL
	g HEART_GOLDEN_HALF_FULL
	h HEART_GHOST_FULL
	i HEART_GHOST_HALF_FULL
	l minecraft
	m gui
	n footer
	o header
	p visible
	q healthStates
	<init> (Lenn;Leow;)V <init>
	a (Lffb;)Lsw; getNameForDisplay
	a (Lffb;Ltj;)Lsw; decorateName
	a (Z)V setVisible
	b ()Ljava/util/List; getPlayerInfos
	a (Leox;ILefg;Lefd;)V render
	a (Leox;IIILffb;)V renderPingIcon
	a (Lefd;ILjava/lang/String;IILjava/util/UUID;Leox;)V renderTablistScore
	a (IIILjava/util/UUID;Leox;I)V renderTablistHearts
	a (Lsw;)V setFooter
	b (Lsw;)V setHeader
	a ()V reset
	a (ILjava/util/UUID;)Leqg$a; lambda$renderTablistHearts$5
	a (Ljava/util/Set;Ljava/util/UUID;)Z lambda$render$4
	b (Lffb;)Ljava/util/UUID; lambda$render$3
	c (Lffb;)Ljava/lang/String; lambda$static$2
	d (Lffb;)Ljava/lang/String; lambda$static$1
	e (Lffb;)I lambda$static$0
	<clinit> ()V <clinit>
eqg$a net/minecraft/client/gui/components/PlayerTabOverlay$HealthState
	a DISPLAY_UPDATE_DELAY
	b DECREASE_BLINK_DURATION
	c INCREASE_BLINK_DURATION
	d lastValue
	e displayedValue
	f lastUpdateTick
	g blinkUntilTick
	<init> (I)V <init>
	a (IJ)V update
	a ()I displayedValue
	a (J)Z isBlinking
eqh net/minecraft/client/gui/components/Renderable
	a (Leox;IIF)V render
eqi net/minecraft/client/gui/components/SplashRenderer
	a CHRISTMAS
	b NEW_YEAR
	c HALLOWEEN
	d WIDTH_OFFSET
	e HEIGH_OFFSET
	f splash
	<init> (Ljava/lang/String;)V <init>
	a (Leox;ILeov;I)V render
	<clinit> ()V <clinit>
eqj net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	f yDiffTex
	<init> (IIIIZ)V <init>
	a (IIIILacq;)V initTextureValues
	b (Z)V setStateTriggered
	a ()Z isStateTriggered
	a (Lesp;)V updateWidgetNarration
	b (Leox;IIF)V renderWidget
eqk net/minecraft/client/gui/components/StringWidget
	a alignX
	<init> (Lsw;Leov;)V <init>
	<init> (IILsw;Leov;)V <init>
	<init> (IIIILsw;Leov;)V <init>
	h (I)Leqk; setColor
	b (F)Leqk; horizontalAlignment
	e ()Leqk; alignLeft
	f ()Leqk; alignCenter
	g ()Leqk; alignRight
	b (Leox;IIF)V renderWidget
	a (I)Lepe; setColor
eql net/minecraft/client/gui/components/SubtitleOverlay
	a DISPLAY_TIME
	b minecraft
	c subtitles
	d isListening
	<init> (Lenn;)V <init>
	a (Leox;)V render
	a (Lfxy;Lfzd;)V onPlaySound
eql$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	a text
	b time
	c location
	<init> (Lsw;Leei;)V <init>
	a ()Lsw; getText
	b ()J getTime
	c ()Leei; getLocation
	a (Leei;)V refresh
eqm net/minecraft/client/gui/components/TabButton
	a TEXTURE_LOCATION
	b TEXTURE_WIDTH
	c TEXTURE_HEIGHT
	d TEXTURE_BORDER
	e TEXTURE_BORDER_BOTTOM
	f SELECTED_OFFSET
	g TEXT_MARGIN
	h UNDERLINE_HEIGHT
	i UNDERLINE_MARGIN_X
	j UNDERLINE_MARGIN_BOTTOM
	k tabManager
	l tab
	<init> (Lera;Leqz;II)V <init>
	b (Leox;IIF)V renderWidget
	a (Leox;Leov;I)V renderString
	b (Leox;Leov;I)V renderFocusUnderline
	a ()I getTextureY
	a (Lesp;)V updateWidgetNarration
	a (Lfzc;)V playDownSound
	b ()Leqz; tab
	e ()Z isSelected
	<clinit> ()V <clinit>
eqn net/minecraft/client/gui/components/TabOrderedElement
	aC_ ()I getTabOrderGroup
eqo net/minecraft/client/gui/components/TextAndImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	f textureHeight
	A xOffset
	C yOffset
	D usedTextureWidth
	E usedTextureHeight
	<init> (Lsw;IIIIIIIIILacq;Lepi$c;)V <init>
	b (Leox;IIF)V renderWidget
	a (Leox;Leov;I)V renderString
	a ()I getXOffset
	b ()I getYOffset
	a (Lsw;Lacq;Lepi$c;)Leqo$a; builder
eqo$a net/minecraft/client/gui/components/TextAndImageButton$Builder
	a message
	b resourceLocation
	c onPress
	d xTexStart
	e yTexStart
	f yDiffTex
	g usedTextureWidth
	h usedTextureHeight
	i textureWidth
	j textureHeight
	k xOffset
	l yOffset
	<init> (Lsw;Lacq;Lepi$c;)V <init>
	a (II)Leqo$a; texStart
	b (II)Leqo$a; offset
	a (I)Leqo$a; yDiffTex
	c (II)Leqo$a; usedTextureSize
	d (II)Leqo$a; textureSize
	a ()Leqo; build
eqp net/minecraft/client/gui/components/Tooltip
	a MAX_WIDTH
	b message
	c cachedTooltip
	d narration
	<init> (Lsw;Lsw;)V <init>
	a (Lsw;Lsw;)Leqp; create
	a (Lsw;)Leqp; create
	b (Lesp;)V updateNarration
	a (Lenn;)Ljava/util/List; toCharSequence
	a (Lenn;Lsw;)Ljava/util/List; splitTooltip
eqq net/minecraft/client/gui/components/Whence
	a ABSOLUTE
	b RELATIVE
	c END
	d $VALUES
	values ()[Leqq; values
	valueOf (Ljava/lang/String;)Leqq; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leqq; $values
	<clinit> ()V <clinit>
eqr net/minecraft/client/gui/components/events/AbstractContainerEventHandler
	a focused
	b isDragging
	<init> ()V <init>
	aA_ ()Z isDragging
	c_ (Z)V setDragging
	t ()Leqt; getFocused
	a (Leqt;)V setFocused
eqs net/minecraft/client/gui/components/events/ContainerEventHandler
	i ()Ljava/util/List; children
	d (DD)Ljava/util/Optional; getChildAt
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	aA_ ()Z isDragging
	c_ (Z)V setDragging
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	t ()Leqt; getFocused
	a (Leqt;)V setFocused
	b_ (Z)V setFocused
	aB_ ()Z isFocused
	aF_ ()Leou; getCurrentFocusPath
	b (Leqt;)V magicalSpecialHackyFocus
	a (Lesv;)Leou; nextFocusPath
	a (Lesv$c;)Leou; handleTabNavigation
	a (Lesv$a;)Leou; handleArrowNavigation
	a (Lesz;Lesx;Leqt;Lesv;)Leou; nextFocusPathInDirection
	b (Lesz;Lesx;Leqt;Lesv;)Leou; nextFocusPathVaguelyInDirection
	a (Lesx;Leqt;)Ljava/lang/Integer; lambda$nextFocusPathInDirection$4
	b (Lesx;Leqt;)Ljava/lang/Integer; lambda$nextFocusPathInDirection$3
	c (Leqt;)I lambda$handleTabNavigation$2
	a (DDDLeqt;)Z lambda$mouseScrolled$1
	a (DDILeqt;)Z lambda$mouseReleased$0
eqt net/minecraft/client/gui/components/events/GuiEventListener
	B DOUBLE_CLICK_THRESHOLD_MS
	e (DD)V mouseMoved
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	a (Lesv;)Leou; nextFocusPath
	a_ (DD)Z isMouseOver
	b_ (Z)V setFocused
	aB_ ()Z isFocused
	aF_ ()Leou; getCurrentFocusPath
	s ()Lesz; getRectangle
equ net/minecraft/client/gui/components/events/package-info
eqv net/minecraft/client/gui/components/package-info
eqw net/minecraft/client/gui/components/spectator/SpectatorGui
	b WIDGETS_LOCATION
	a SPECTATOR_LOCATION
	c FADE_OUT_DELAY
	d FADE_OUT_TIME
	e minecraft
	f lastSelectionTime
	g menu
	<init> (Lenn;)V <init>
	a (I)V onHotbarSelected
	c ()F getHotbarAlpha
	a (Leox;)V renderHotbar
	a (Leox;FIILezt;)V renderPage
	a (Leox;IIFFLezr;)V renderSlot
	b (Leox;)V renderTooltip
	a (Lezp;)V onSpectatorMenuClosed
	a ()Z isMenuActive
	b (I)V onMouseScrolled
	b ()V onMouseMiddleClick
	<clinit> ()V <clinit>
eqx net/minecraft/client/gui/components/spectator/package-info
eqy net/minecraft/client/gui/components/tabs/GridLayoutTab
	b title
	a layout
	<init> (Lsw;)V <init>
	a ()Lsw; getTabTitle
	a (Ljava/util/function/Consumer;)V visitChildren
	a (Lesz;)V doLayout
eqz net/minecraft/client/gui/components/tabs/Tab
	a ()Lsw; getTabTitle
	a (Ljava/util/function/Consumer;)V visitChildren
	a (Lesz;)V doLayout
	b ()V tick
era net/minecraft/client/gui/components/tabs/TabManager
	a addWidget
	b removeWidget
	c currentTab
	d tabArea
	<init> (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V <init>
	a (Lesz;)V setTabArea
	a (Leqz;Z)V setCurrentTab
	a ()Leqz; getCurrentTab
	b ()V tickCurrent
erb net/minecraft/client/gui/components/tabs/TabNavigationBar
	a NO_TAB
	b MAX_WIDTH
	c HEIGHT
	d MARGIN
	e USAGE_NARRATION
	f layout
	g width
	h tabManager
	i tabs
	j tabButtons
	<init> (ILera;Ljava/lang/Iterable;)V <init>
	a (Lera;I)Lerb$a; builder
	a (I)V setWidth
	b_ (Z)V setFocused
	a (Leqt;)V setFocused
	a (Lesv;)Leou; nextFocusPath
	i ()Ljava/util/List; children
	q ()Lesn$a; narrationPriority
	b (Lesp;)V updateNarration
	a (Lesp;Leqm;)V narrateListElementPosition
	a (Leox;IIF)V render
	s ()Lesz; getRectangle
	b ()V arrangeElements
	a (IZ)V selectTab
	b (I)Z keyPressed
	c (I)I getNextTabIndex
	d ()I currentTabIndex
	e ()Leqm; currentTabButton
	b (Lesp;Leqm;)V lambda$updateNarration$1
	f ()Ljava/util/Optional; lambda$updateNarration$0
	<clinit> ()V <clinit>
erb$a net/minecraft/client/gui/components/tabs/TabNavigationBar$Builder
	a width
	b tabManager
	c tabs
	<init> (Lera;I)V <init>
	a ([Leqz;)Lerb$a; addTabs
	a ()Lerb; build
erc net/minecraft/client/gui/components/tabs/package-info
erd net/minecraft/client/gui/components/toasts/AdvancementToast
	a DISPLAY_TIME
	e advancement
	f playedSound
	<init> (Lae;)V <init>
	a (Leox;Lerh;J)Lerg$a; render
ere net/minecraft/client/gui/components/toasts/RecipeToast
	a DISPLAY_TIME
	e TITLE_TEXT
	f DESCRIPTION_TEXT
	g recipes
	h lastChanged
	i changed
	<init> (Lcjc;)V <init>
	a (Leox;Lerh;J)Lerg$a; render
	a (Lcjc;)V addItem
	a (Lerh;Lcjc;)V addOrUpdate
	<clinit> ()V <clinit>
erf net/minecraft/client/gui/components/toasts/SystemToast
	a MAX_LINE_SIZE
	e LINE_SPACING
	f MARGIN
	g id
	h title
	i messageLines
	j lastChanged
	k changed
	l width
	<init> (Lerf$a;Lsw;Lsw;)V <init>
	a (Lenn;Lerf$a;Lsw;Lsw;)Lerf; multiline
	<init> (Lerf$a;Lsw;Ljava/util/List;I)V <init>
	a (Lsw;)Lcom/google/common/collect/ImmutableList; nullToEmpty
	a ()I width
	b ()I height
	a (Leox;Lerh;J)Lerg$a; render
	a (Leox;Lerh;IIII)V renderBackgroundRow
	a (Lsw;Lsw;)V reset
	c ()Lerf$a; getToken
	a (Lerh;Lerf$a;Lsw;Lsw;)V add
	b (Lerh;Lerf$a;Lsw;Lsw;)V addOrUpdate
	a (Lenn;Ljava/lang/String;)V onWorldAccessFailure
	b (Lenn;Ljava/lang/String;)V onWorldDeleteFailure
	c (Lenn;Ljava/lang/String;)V onPackCopyFailure
	d ()Ljava/lang/Object; getToken
erf$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d PACK_LOAD_FAILURE
	e WORLD_ACCESS_FAILURE
	f PACK_COPY_FAILURE
	g PERIODIC_NOTIFICATION
	h UNSECURE_SERVER_WARNING
	i displayTime
	j $VALUES
	values ()[Lerf$a; values
	valueOf (Ljava/lang/String;)Lerf$a; valueOf
	<init> (Ljava/lang/String;IJ)V <init>
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lerf$a; $values
	<clinit> ()V <clinit>
erg net/minecraft/client/gui/components/toasts/Toast
	b TEXTURE
	c NO_TOKEN
	d SLOT_HEIGHT
	a (Leox;Lerh;J)Lerg$a; render
	d ()Ljava/lang/Object; getToken
	a ()I width
	b ()I height
	e ()I slotCount
	<clinit> ()V <clinit>
erg$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	values ()[Lerg$a; values
	valueOf (Ljava/lang/String;)Lerg$a; valueOf
	<init> (Ljava/lang/String;ILamg;)V <init>
	a (Lfzc;)V playSound
	a ()[Lerg$a; $values
	<clinit> ()V <clinit>
erh net/minecraft/client/gui/components/toasts/ToastComponent
	a SLOT_COUNT
	b NO_SPACE
	c minecraft
	d visible
	e occupiedSlots
	f queued
	<init> (Lenn;)V <init>
	a (Leox;)V render
	a (I)I findFreeIndex
	d ()I freeSlots
	a (Ljava/lang/Class;Ljava/lang/Object;)Lerg; getToast
	a ()V clear
	a (Lerg;)V addToast
	b ()Lenn; getMinecraft
	c ()D getNotificationDisplayTimeMultiplier
	b (Lerg;)Z lambda$render$1
	a (ILeox;Lerh$a;)Z lambda$render$0
erh$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	b ANIMATION_TIME
	c toast
	d index
	e slotCount
	f animationTime
	g visibleTime
	h visibility
	a this$0
	<init> (Lerh;Lerg;II)V <init>
	a ()Lerg; getToast
	a (J)F getVisibility
	a (ILeox;)Z render
eri net/minecraft/client/gui/components/toasts/TutorialToast
	a PROGRESS_BAR_WIDTH
	e PROGRESS_BAR_HEIGHT
	f PROGRESS_BAR_X
	g PROGRESS_BAR_Y
	h icon
	i title
	j message
	k visibility
	l lastProgressTime
	m lastProgress
	n progress
	o progressable
	<init> (Leri$a;Lsw;Lsw;Z)V <init>
	a (Leox;Lerh;J)Lerg$a; render
	c ()V hide
	a (F)V updateProgress
eri$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f SOCIAL_INTERACTIONS
	g RIGHT_CLICK
	h x
	i y
	j $VALUES
	values ()[Leri$a; values
	valueOf (Ljava/lang/String;)Leri$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a (Leox;II)V render
	a ()[Leri$a; $values
	<clinit> ()V <clinit>
erj net/minecraft/client/gui/components/toasts/package-info
erk net/minecraft/client/gui/font/AllMissingGlyphProvider
	<init> ()V <init>
	a (I)Legl; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
erl net/minecraft/client/gui/font/CodepointMap
	a BLOCK_BITS
	b BLOCK_SIZE
	c IN_BLOCK_MASK
	d MAX_BLOCK
	e BLOCK_COUNT
	f empty
	g blockMap
	h blockConstructor
	<init> (Ljava/util/function/IntFunction;Ljava/util/function/IntFunction;)V <init>
	a ()V clear
	a (I)Ljava/lang/Object; get
	a (ILjava/lang/Object;)Ljava/lang/Object; put
	a (ILjava/util/function/IntFunction;)Ljava/lang/Object; computeIfAbsent
	b (I)Ljava/lang/Object; remove
	a (Lerl$a;)V forEach
	b ()Lit/unimi/dsi/fastutil/ints/IntSet; keySet
	a (Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;ILjava/lang/Object;)V lambda$keySet$0
erl$a net/minecraft/client/gui/font/CodepointMap$Output
	accept (ILjava/lang/Object;)V accept
erm net/minecraft/client/gui/font/FontManager
	b LOGGER
	c FONTS_PATH
	a MISSING_FONT
	d FONT_DEFINITIONS
	e GSON
	f missingFontSet
	g providersToClose
	h fontSets
	i textureManager
	j renames
	<init> (Lfuw;)V <init>
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lakx;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	a (Lerm$a;Lerx$a;Lakx;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; safeLoad
	a (Ljava/util/List;)Ljava/util/Map; resolveProviders
	a (Ljava/util/List;Legm;)V finalizeProviderLoading
	a (Lerm$d;Lban;)V apply
	a (Ljava/util/List;Lacq;)Ljava/util/List; loadResourceStack
	a (Ljava/util/Map;)V setRenames
	a (Lacq;)Lacq; getActualId
	a ()Leov; createFont
	b ()Leov; createFontFilterFishy
	close ()V close
	b (Lacq;)Lern; lambda$createFontFilterFishy$18
	c (Lacq;)Lern; lambda$createFont$17
	a (Lacq;Ljava/util/List;)V lambda$apply$16
	a (Ljava/util/List;I)V lambda$finalizeProviderLoading$15
	a (Ljava/util/Map;Lacq;Lerm$e;)V lambda$resolveProviders$14
	a (Ljava/util/Map;Lacq;Ljava/util/List;)V lambda$resolveProviders$13
	a (Laof;Lerm$e;)V lambda$resolveProviders$12
	a (Lerx$a;Lakx;Lerm$a;)Ljava/util/Optional; lambda$safeLoad$11
	a (Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletionStage; lambda$prepare$10
	a (Ljava/util/List;Legm;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletionStage; lambda$prepare$9
	a (Ljava/util/List;Ljava/util/Map;Ljava/lang/Void;)Lerm$d; lambda$prepare$8
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$prepare$7
	a (Legm;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; lambda$prepare$6
	b (Ljava/util/List;Legm;)V lambda$prepare$5
	a (Ljava/util/Map$Entry;Lacq;Lakx;Ljava/util/concurrent/Executor;)Lerm$e; lambda$prepare$4
	a (Lerm$e;Lerm$a;Lerx$b;)V lambda$prepare$3
	a (Lerm$a;Lakx;Ljava/util/concurrent/Executor;Lerm$e;Lerx$a;)V lambda$prepare$2
	a (Lban;Lerm$d;)V lambda$reload$1
	a (Lern;)V lambda$new$0
	<clinit> ()V <clinit>
erm$a net/minecraft/client/gui/font/FontManager$BuilderId
	a fontId
	b pack
	c index
	<init> (Lacq;Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; fontId
	b ()Ljava/lang/String; pack
	c ()I index
erm$b net/minecraft/client/gui/font/FontManager$BuilderResult
	a id
	b result
	<init> (Lerm$a;Lcom/mojang/datafixers/util/Either;)V <init>
	a (Ljava/util/function/Function;)Ljava/util/Optional; resolve
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lerm$a; id
	b ()Lcom/mojang/datafixers/util/Either; result
	a (Ljava/util/function/Function;Lacq;)Ljava/util/Optional; lambda$resolve$1
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/Optional; lambda$resolve$0
erm$c net/minecraft/client/gui/font/FontManager$FontDefinitionFile
	b providers
	a CODEC
	<init> (Ljava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; providers
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
erm$d net/minecraft/client/gui/font/FontManager$Preparation
	a providers
	b allProviders
	<init> (Ljava/util/Map;Ljava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; providers
	b ()Ljava/util/List; allProviders
erm$e net/minecraft/client/gui/font/FontManager$UnresolvedBuilderBundle
	a fontId
	b builders
	c dependencies
	<init> (Lacq;)V <init>
	<init> (Lacq;Ljava/util/List;Ljava/util/Set;)V <init>
	a (Lerm$a;Lerx$b;)V add
	a (Lerm$a;Ljava/util/concurrent/CompletableFuture;)V add
	d ()Ljava/util/stream/Stream; listBuilders
	a (Ljava/util/function/Function;)Ljava/util/Optional; resolve
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; fontId
	b ()Ljava/util/List; builders
	c ()Ljava/util/Set; dependencies
	a (Lerm$b;)Ljava/util/stream/Stream; lambda$listBuilders$0
ern net/minecraft/client/gui/font/FontSet
	a RANDOM
	b LARGE_FORWARD_ADVANCE
	c textureManager
	d name
	e missingGlyph
	f whiteGlyph
	g providers
	h glyphs
	i glyphInfos
	j glyphsByWidth
	k textures
	<init> (Lfuw;Lacq;)V <init>
	a (Ljava/util/List;)V reload
	close ()V close
	b ()V closeProviders
	c ()V closeTextures
	b (Legl;)Z hasFishyAdvance
	b (I)Lern$a; computeGlyphInfo
	a (IZ)Legl; getGlyphInfo
	c (I)Lerr; computeBakedGlyph
	a (I)Lerr; getGlyph
	a (Legn;)Lerr; stitch
	a (Legl;)Lerr; getRandomGlyph
	a ()Lerr; whiteGlyph
	a (Ljava/util/List;Ljava/util/Set;I)V lambda$reload$5
	d (I)Lit/unimi/dsi/fastutil/ints/IntList; lambda$reload$4
	e (I)[[Lern$a; lambda$new$3
	f (I)[Lern$a; lambda$new$2
	g (I)[[Lerr; lambda$new$1
	h (I)[Lerr; lambda$new$0
	<clinit> ()V <clinit>
ern$a net/minecraft/client/gui/font/FontSet$GlyphInfoFilter
	a glyphInfo
	b glyphInfoNotFishy
	c MISSING
	<init> (Legl;Legl;)V <init>
	a (Z)Legl; select
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Legl; glyphInfo
	b ()Legl; glyphInfoNotFishy
	<clinit> ()V <clinit>
ero net/minecraft/client/gui/font/FontTexture
	e SIZE
	f renderTypes
	g colored
	h root
	<init> (Lerp;Z)V <init>
	a (Lakx;)V load
	close ()V close
	a (Legn;)Lerr; add
	a (Lacq;Ljava/nio/file/Path;)V dumpContents
	a (I)I lambda$dumpContents$0
ero$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	<init> (IIII)V <init>
	a (Legn;)Lero$a; insert
erp net/minecraft/client/gui/font/GlyphRenderTypes
	a normal
	b seeThrough
	c polygonOffset
	<init> (Lfkf;Lfkf;Lfkf;)V <init>
	a (Lacq;)Lerp; createForIntensityTexture
	b (Lacq;)Lerp; createForColorTexture
	a (Leov$a;)Lfkf; select
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfkf; normal
	b ()Lfkf; seeThrough
	c ()Lfkf; polygonOffset
erp$1 net/minecraft/client/gui/font/GlyphRenderTypes$1
	a $SwitchMap$net$minecraft$client$gui$Font$DisplayMode
	<clinit> ()V <clinit>
erq net/minecraft/client/gui/font/TextFieldHelper
	a getMessageFn
	b setMessageFn
	c getClipboardFn
	d setClipboardFn
	e stringValidator
	f cursorPos
	g selectionPos
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Supplier;Ljava/util/function/Consumer;Ljava/util/function/Predicate;)V <init>
	a (Lenn;)Ljava/util/function/Supplier; createClipboardGetter
	b (Lenn;)Ljava/lang/String; getClipboardContents
	c (Lenn;)Ljava/util/function/Consumer; createClipboardSetter
	a (Lenn;Ljava/lang/String;)V setClipboardContents
	a (C)Z charTyped
	a (I)Z keyPressed
	h (I)I clampToMsgLength
	a (Ljava/lang/String;Ljava/lang/String;)V insertText
	a (Ljava/lang/String;)V insertText
	c (Z)V resetSelectionIfNeeded
	a (IZLerq$a;)V moveBy
	b (I)V moveByChars
	a (IZ)V moveByChars
	c (I)V moveByWords
	b (IZ)V moveByWords
	a (ILerq$a;)V removeFromCursor
	d (I)V removeWordsFromCursor
	e (I)V removeCharsFromCursor
	a ()V cut
	b ()V paste
	c ()V copy
	d ()V selectAll
	b (Ljava/lang/String;)Ljava/lang/String; getSelected
	c (Ljava/lang/String;)Ljava/lang/String; deleteSelection
	e ()V setCursorToStart
	a (Z)V setCursorToStart
	f ()V setCursorToEnd
	b (Z)V setCursorToEnd
	g ()I getCursorPos
	f (I)V setCursorPos
	c (IZ)V setCursorPos
	h ()I getSelectionPos
	g (I)V setSelectionPos
	a (II)V setSelectionRange
	i ()Z isSelecting
	b (Lenn;Ljava/lang/String;)V lambda$createClipboardSetter$1
	d (Lenn;)Ljava/lang/String; lambda$createClipboardGetter$0
erq$1 net/minecraft/client/gui/font/TextFieldHelper$1
	a $SwitchMap$net$minecraft$client$gui$font$TextFieldHelper$CursorStep
	<clinit> ()V <clinit>
erq$a net/minecraft/client/gui/font/TextFieldHelper$CursorStep
	a CHARACTER
	b WORD
	c $VALUES
	values ()[Lerq$a; values
	valueOf (Ljava/lang/String;)Lerq$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lerq$a; $values
	<clinit> ()V <clinit>
err net/minecraft/client/gui/font/glyphs/BakedGlyph
	a renderTypes
	b u0
	c u1
	d v0
	e v1
	f left
	g right
	h up
	i down
	<init> (Lerp;FFFFFFFF)V <init>
	a (ZFFLorg/joml/Matrix4f;Lein;FFFFI)V render
	a (Lerr$a;Lorg/joml/Matrix4f;Lein;I)V renderEffect
	a (Leov$a;)Lfkf; renderType
err$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	g g
	h b
	i a
	<init> (FFFFFFFFF)V <init>
ers net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a INSTANCE
	<init> ()V <init>
	a (ZFFLorg/joml/Matrix4f;Lein;FFFFI)V render
	<clinit> ()V <clinit>
ert net/minecraft/client/gui/font/glyphs/SpecialGlyphs
	a WHITE
	b MISSING
	c image
	d $VALUES
	values ()[Lert; values
	valueOf (Ljava/lang/String;)Lert; valueOf
	a (IILert$a;)Lehk; generate
	<init> (Ljava/lang/String;ILjava/util/function/Supplier;)V <init>
	getAdvance ()F getAdvance
	bake (Ljava/util/function/Function;)Lerr; bake
	c ()Lehk; lambda$static$3
	a (II)I lambda$static$2
	d ()Lehk; lambda$static$1
	b (II)I lambda$static$0
	e ()[Lert; $values
	<clinit> ()V <clinit>
ert$1 net/minecraft/client/gui/font/glyphs/SpecialGlyphs$1
	a this$0
	<init> (Lert;)V <init>
	a ()I getPixelWidth
	b ()I getPixelHeight
	d ()F getOversample
	a (II)V upload
	c ()Z isColored
ert$a net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider
	getColor (II)I getColor
eru net/minecraft/client/gui/font/glyphs/package-info
erv net/minecraft/client/gui/font/package-info
erw net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	<init> (Lehk;Lerl;)V <init>
	close ()V close
	a (I)Legl; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	<clinit> ()V <clinit>
erw$a net/minecraft/client/gui/font/providers/BitmapProvider$Definition
	c file
	d height
	e ascent
	f codepointGrid
	g CODEPOINT_GRID_CODEC
	a CODEC
	<init> (Lacq;II[[I)V <init>
	a ([[I)Lcom/mojang/serialization/DataResult; validateDimensions
	a (Lerw$a;)Lcom/mojang/serialization/DataResult; validate
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	a (Lakx;)Legm; load
	a (Lehk;IIII)I getActualGlyphWidth
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lacq; file
	d ()I height
	e ()I ascent
	f ()[[I codepointGrid
	a (I)[[Lerw$b; lambda$load$8
	b (I)[Lerw$b; lambda$load$7
	b (Lerw$a;)Ljava/lang/String; lambda$validate$6
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a ([II)Ljava/lang/String; lambda$validateDimensions$4
	g ()Ljava/lang/String; lambda$validateDimensions$3
	h ()Ljava/lang/String; lambda$validateDimensions$2
	b ([[I)Ljava/util/List; lambda$static$1
	a (Ljava/util/List;)[[I lambda$static$0
	<clinit> ()V <clinit>
erw$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	<init> (FLehk;IIIIII)V <init>
	getAdvance ()F getAdvance
	bake (Ljava/util/function/Function;)Lerr; bake
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()F scale
	d ()Lehk; image
	e ()I offsetX
	f ()I offsetY
	g ()I width
	h ()I height
	i ()I advance
	j ()I ascent
erw$b$1 net/minecraft/client/gui/font/providers/BitmapProvider$Glyph$1
	a this$0
	<init> (Lerw$b;)V <init>
	d ()F getOversample
	a ()I getPixelWidth
	b ()I getPixelHeight
	j ()F getBearingY
	a (II)V upload
	c ()Z isColored
erx net/minecraft/client/gui/font/providers/GlyphProviderDefinition
	b CODEC
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	a (Lery;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
erx$a net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader
	load (Lakx;)Legm; load
erx$b net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference
	a id
	<init> (Lacq;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; id
ery net/minecraft/client/gui/font/providers/GlyphProviderType
	a BITMAP
	b TTF
	c SPACE
	d UNIHEX
	e REFERENCE
	f CODEC
	g name
	h codec
	i $VALUES
	values ()[Lery; values
	valueOf (Ljava/lang/String;)Lery; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcom/mojang/serialization/MapCodec;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Lcom/mojang/serialization/MapCodec; mapCodec
	b ()[Lery; $values
	<clinit> ()V <clinit>
erz net/minecraft/client/gui/font/providers/ProviderReferenceDefinition
	c id
	a CODEC
	<init> (Lacq;)V <init>
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lacq; id
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
esa net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition
	c location
	d size
	e oversample
	f shift
	g skip
	h SKIP_LIST_CODEC
	a CODEC
	<init> (Lacq;FFLesa$a;Ljava/lang/String;)V <init>
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	a (Lakx;)Legm; load
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lacq; location
	d ()F size
	e ()F oversample
	f ()Lesa$a; shift
	g ()Ljava/lang/String; skip
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/String; lambda$static$2
	a (Ljava/util/List;)Ljava/lang/String; lambda$static$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
esa$a net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift
	c x
	d y
	a NONE
	b CODEC
	<init> (FF)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()F x
	b ()F y
	a (Lesa$a;)Ljava/util/List; lambda$static$2
	a (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$1
	b (Ljava/util/List;)Lesa$a; lambda$static$0
	<clinit> ()V <clinit>
esb net/minecraft/client/gui/font/providers/UnihexProvider
	a LOGGER
	b GLYPH_HEIGHT
	c DIGITS_PER_BYTE
	d DIGITS_FOR_WIDTH_8
	e DIGITS_FOR_WIDTH_16
	f DIGITS_FOR_WIDTH_24
	g DIGITS_FOR_WIDTH_32
	h glyphs
	<init> (Lerl;)V <init>
	a (I)Legl; getGlyph
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (Ljava/nio/IntBuffer;III)V unpackBitsToBytes
	a (Ljava/nio/IntBuffer;Lesb$f;II)V unpackBitsToBytes
	a (Ljava/io/InputStream;Lesb$h;)V readFromStream
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;I)I decodeHex
	a (IB)I decodeHex
	a (Ljava/io/InputStream;Lit/unimi/dsi/fastutil/bytes/ByteList;I)Z copyUntil
	<clinit> ()V <clinit>
esb$a net/minecraft/client/gui/font/providers/UnihexProvider$ByteContents
	a contents
	<init> ([B)V <init>
	a (I)I line
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lesb$f; read
	a ()I bitWidth
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()[B contents
esb$b net/minecraft/client/gui/font/providers/UnihexProvider$Definition
	a CODEC
	c hexFile
	d sizeOverrides
	<init> (Lacq;Ljava/util/List;)V <init>
	a ()Lery; type
	b ()Lcom/mojang/datafixers/util/Either; unpack
	a (Lakx;)Legm; load
	a (Ljava/io/InputStream;)Lesb; loadData
	a (Lerl;ILesb$f;)V lambda$loadData$7
	a (I)[[Lesb$d; lambda$loadData$6
	b (I)[Lesb$d; lambda$loadData$5
	c (I)[[Lesb$f; lambda$loadData$4
	d (I)[Lesb$f; lambda$loadData$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lesb$b;)Ljava/util/List; lambda$static$1
	b (Lesb$b;)Lacq; lambda$static$0
	<clinit> ()V <clinit>
esb$c net/minecraft/client/gui/font/providers/UnihexProvider$Dimensions
	c left
	d right
	a MAP_CODEC
	b CODEC
	<init> (II)V <init>
	a ()I pack
	a (II)I pack
	a (I)I left
	b (I)I right
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I left
	c ()I right
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
esb$d net/minecraft/client/gui/font/providers/UnihexProvider$Glyph
	a contents
	b left
	c right
	<init> (Lesb$f;II)V <init>
	c ()I width
	getAdvance ()F getAdvance
	b ()F getShadowOffset
	a ()F getBoldOffset
	bake (Ljava/util/function/Function;)Lerr; bake
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Lesb$f; contents
	e ()I left
	f ()I right
esb$d$1 net/minecraft/client/gui/font/providers/UnihexProvider$Glyph$1
	a this$0
	<init> (Lesb$d;)V <init>
	d ()F getOversample
	a ()I getPixelWidth
	b ()I getPixelHeight
	a (II)V upload
	c ()Z isColored
esb$e net/minecraft/client/gui/font/providers/UnihexProvider$IntContents
	a contents
	b bitWidth
	c SIZE_24
	<init> ([II)V <init>
	a (I)I line
	b (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lesb$f; read24
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lesb$f; read32
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()[I contents
	a ()I bitWidth
esb$f net/minecraft/client/gui/font/providers/UnihexProvider$LineData
	a (I)I line
	a ()I bitWidth
	c ()I mask
	d ()I calculateWidth
esb$g net/minecraft/client/gui/font/providers/UnihexProvider$OverrideRange
	b from
	c to
	d dimensions
	e RAW_CODEC
	a CODEC
	<init> (IILesb$c;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I from
	b ()I to
	c ()Lesb$c; dimensions
	a (Lesb$g;)Lcom/mojang/serialization/DataResult; lambda$static$2
	b (Lesb$g;)Ljava/lang/String; lambda$static$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
esb$h net/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput
	accept (ILesb$f;)V accept
esb$i net/minecraft/client/gui/font/providers/UnihexProvider$ShortContents
	a contents
	<init> ([S)V <init>
	a (I)I line
	a (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lesb$f; read
	a ()I bitWidth
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()[S contents
esc net/minecraft/client/gui/font/providers/package-info
esd net/minecraft/client/gui/layouts/AbstractLayout
	c x
	d y
	a width
	b height
	<init> (IIII)V <init>
	e (I)V setX
	f (I)V setY
	p ()I getX
	r ()I getY
	k ()I getWidth
	h ()I getHeight
	a (ILesi;)V lambda$setY$1
	b (ILesi;)V lambda$setX$0
esd$a net/minecraft/client/gui/layouts/AbstractLayout$AbstractChildWrapper
	a child
	b layoutSettings
	<init> (Lesi;Lesj;)V <init>
	a ()I getHeight
	b ()I getWidth
	a (II)V setX
	b (II)V setY
ese net/minecraft/client/gui/layouts/FrameLayout
	c children
	d minWidth
	e minHeight
	f defaultChildLayoutSettings
	<init> ()V <init>
	<init> (II)V <init>
	<init> (IIII)V <init>
	a (II)Lese; setMinDimensions
	a (I)Lese; setMinHeight
	b (I)Lese; setMinWidth
	a ()Lesj; newChildLayoutSettings
	b ()Lesj; defaultChildLayoutSetting
	c ()V arrangeElements
	a (Lesi;)Lesi; addChild
	a (Lesi;Lesj;)Lesi; addChild
	b (Ljava/util/function/Consumer;)V visitChildren
	a (Lesi;IIII)V centerInRectangle
	a (Lesi;Lesz;)V centerInRectangle
	a (Lesi;Lesz;FF)V alignInRectangle
	a (Lesi;IIIIFF)V alignInRectangle
	a (IIILjava/util/function/Consumer;F)V alignInDimension
	a (Ljava/util/function/Consumer;Lese$a;)V lambda$visitChildren$0
ese$a net/minecraft/client/gui/layouts/FrameLayout$ChildContainer
	<init> (Lesi;Lesj;)V <init>
esf net/minecraft/client/gui/layouts/GridLayout
	c children
	d cellInhabitants
	e defaultCellSettings
	f rowSpacing
	g columnSpacing
	<init> ()V <init>
	<init> (II)V <init>
	c ()V arrangeElements
	a (Lesi;II)Lesi; addChild
	a (Lesi;IILesj;)Lesi; addChild
	a (Lesi;IIII)Lesi; addChild
	a (Lesi;IIIILesj;)Lesi; addChild
	a (I)Lesf; columnSpacing
	b (I)Lesf; rowSpacing
	c (I)Lesf; spacing
	b (Ljava/util/function/Consumer;)V visitChildren
	a ()Lesj; newCellSettings
	b ()Lesj; defaultCellSetting
	d (I)Lesf$b; createRowHelper
esf$a net/minecraft/client/gui/layouts/GridLayout$CellInhabitant
	c row
	d column
	e occupiedRows
	f occupiedColumns
	<init> (Lesi;IIIILesj;)V <init>
	c ()I getLastOccupiedRow
	d ()I getLastOccupiedColumn
esf$b net/minecraft/client/gui/layouts/GridLayout$RowHelper
	b columns
	c index
	a this$0
	<init> (Lesf;I)V <init>
	a (Lesi;)Lesi; addChild
	a (Lesi;I)Lesi; addChild
	a (Lesi;Lesj;)Lesi; addChild
	a (Lesi;ILesj;)Lesi; addChild
	a ()Lesf; getGrid
	b ()Lesj; newCellSettings
	c ()Lesj; defaultCellSetting
esg net/minecraft/client/gui/layouts/HeaderAndFooterLayout
	a DEFAULT_HEADER_AND_FOOTER_HEIGHT
	b DEFAULT_CONTENT_MARGIN_TOP
	c headerFrame
	d footerFrame
	e contentsFrame
	f screen
	g headerHeight
	h footerHeight
	<init> (Leuq;)V <init>
	<init> (Leuq;I)V <init>
	<init> (Leuq;II)V <init>
	e (I)V setX
	f (I)V setY
	p ()I getX
	r ()I getY
	k ()I getWidth
	h ()I getHeight
	a ()I getFooterHeight
	a (I)V setFooterHeight
	b (I)V setHeaderHeight
	b ()I getHeaderHeight
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
	a (Lesi;)Lesi; addToHeader
	a (Lesi;Lesj;)Lesi; addToHeader
	b (Lesi;)Lesi; addToFooter
	b (Lesi;Lesj;)Lesi; addToFooter
	c (Lesi;)Lesi; addToContents
	c (Lesi;Lesj;)Lesi; addToContents
	d ()Lesj; newHeaderLayoutSettings
	e ()Lesj; newContentLayoutSettings
	f ()Lesj; newFooterLayoutSettings
esh net/minecraft/client/gui/layouts/Layout
	b (Ljava/util/function/Consumer;)V visitChildren
	a (Ljava/util/function/Consumer;)V visitWidgets
	c ()V arrangeElements
	a (Lesi;)V lambda$arrangeElements$1
	a (Ljava/util/function/Consumer;Lesi;)V lambda$visitWidgets$0
esi net/minecraft/client/gui/layouts/LayoutElement
	e (I)V setX
	f (I)V setY
	p ()I getX
	r ()I getY
	k ()I getWidth
	h ()I getHeight
	s ()Lesz; getRectangle
	b (II)V setPosition
	a (Ljava/util/function/Consumer;)V visitWidgets
esj net/minecraft/client/gui/layouts/LayoutSettings
	a (I)Lesj; padding
	a (II)Lesj; padding
	a (IIII)Lesj; padding
	b (I)Lesj; paddingLeft
	c (I)Lesj; paddingTop
	d (I)Lesj; paddingRight
	e (I)Lesj; paddingBottom
	f (I)Lesj; paddingHorizontal
	g (I)Lesj; paddingVertical
	a (FF)Lesj; align
	a (F)Lesj; alignHorizontally
	b (F)Lesj; alignVertically
	a ()Lesj; alignHorizontallyLeft
	b ()Lesj; alignHorizontallyCenter
	c ()Lesj; alignHorizontallyRight
	d ()Lesj; alignVerticallyTop
	e ()Lesj; alignVerticallyMiddle
	f ()Lesj; alignVerticallyBottom
	g ()Lesj; copy
	h ()Lesj$a; getExposed
	i ()Lesj; defaults
esj$a net/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl
	a paddingLeft
	b paddingTop
	c paddingRight
	d paddingBottom
	e xAlignment
	f yAlignment
	<init> ()V <init>
	<init> (Lesj$a;)V <init>
	h (I)Lesj$a; padding
	b (II)Lesj$a; padding
	b (IIII)Lesj$a; padding
	i (I)Lesj$a; paddingLeft
	j (I)Lesj$a; paddingTop
	k (I)Lesj$a; paddingRight
	l (I)Lesj$a; paddingBottom
	m (I)Lesj$a; paddingHorizontal
	n (I)Lesj$a; paddingVertical
	b (FF)Lesj$a; align
	c (F)Lesj$a; alignHorizontally
	d (F)Lesj$a; alignVertically
	j ()Lesj$a; copy
	h ()Lesj$a; getExposed
	g ()Lesj; copy
	b (F)Lesj; alignVertically
	a (F)Lesj; alignHorizontally
	a (FF)Lesj; align
	g (I)Lesj; paddingVertical
	f (I)Lesj; paddingHorizontal
	e (I)Lesj; paddingBottom
	d (I)Lesj; paddingRight
	c (I)Lesj; paddingTop
	b (I)Lesj; paddingLeft
	a (IIII)Lesj; padding
	a (II)Lesj; padding
	a (I)Lesj; padding
esk net/minecraft/client/gui/layouts/LinearLayout
	c orientation
	d children
	e defaultChildLayoutSettings
	<init> (IILesk$b;)V <init>
	<init> (IIIILesk$b;)V <init>
	c ()V arrangeElements
	b (Ljava/util/function/Consumer;)V visitChildren
	a ()Lesj; newChildLayoutSettings
	b ()Lesj; defaultChildLayoutSetting
	a (Lesi;)Lesi; addChild
	a (Lesi;Lesj;)Lesi; addChild
	a (Ljava/util/function/Consumer;Lesk$a;)V lambda$visitChildren$0
esk$1 net/minecraft/client/gui/layouts/LinearLayout$1
	a $SwitchMap$net$minecraft$client$gui$layouts$LinearLayout$Orientation
	<clinit> ()V <clinit>
esk$a net/minecraft/client/gui/layouts/LinearLayout$ChildContainer
	<init> (Lesi;Lesj;)V <init>
esk$b net/minecraft/client/gui/layouts/LinearLayout$Orientation
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	values ()[Lesk$b; values
	valueOf (Ljava/lang/String;)Lesk$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lesi;)I getPrimaryLength
	a (Lesk$a;)I getPrimaryLength
	b (Lesi;)I getSecondaryLength
	b (Lesk$a;)I getSecondaryLength
	a (Lesk$a;I)V setPrimaryPosition
	a (Lesk$a;II)V setSecondaryPosition
	c (Lesi;)I getPrimaryPosition
	d (Lesi;)I getSecondaryPosition
	a ()[Lesk$b; $values
	<clinit> ()V <clinit>
esl net/minecraft/client/gui/layouts/SpacerElement
	a x
	b y
	c width
	d height
	<init> (II)V <init>
	<init> (IIII)V <init>
	a (I)Lesl; width
	b (I)Lesl; height
	e (I)V setX
	f (I)V setY
	p ()I getX
	r ()I getY
	k ()I getWidth
	h ()I getHeight
	a (Ljava/util/function/Consumer;)V visitWidgets
esm net/minecraft/client/gui/layouts/package-info
esn net/minecraft/client/gui/narration/NarratableEntry
	q ()Lesn$a; narrationPriority
	aD_ ()Z isActive
esn$a net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority
	a NONE
	b HOVERED
	c FOCUSED
	d $VALUES
	values ()[Lesn$a; values
	valueOf (Ljava/lang/String;)Lesn$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z isTerminal
	b ()[Lesn$a; $values
	<clinit> ()V <clinit>
eso net/minecraft/client/gui/narration/NarratedElementType
	a TITLE
	b POSITION
	c HINT
	d USAGE
	e $VALUES
	values ()[Leso; values
	valueOf (Ljava/lang/String;)Leso; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leso; $values
	<clinit> ()V <clinit>
esp net/minecraft/client/gui/narration/NarrationElementOutput
	a (Leso;Lsw;)V add
	a (Leso;Ljava/lang/String;)V add
	a (Leso;[Lsw;)V add
	a (Leso;Lesr;)V add
	a ()Lesp; nest
esq net/minecraft/client/gui/narration/NarrationSupplier
	b (Lesp;)V updateNarration
esr net/minecraft/client/gui/narration/NarrationThunk
	b contents
	c converter
	a EMPTY
	<init> (Ljava/lang/Object;Ljava/util/function/BiConsumer;)V <init>
	a (Ljava/lang/String;)Lesr; from
	a (Lsw;)Lesr; from
	a (Ljava/util/List;)Lesr; from
	a (Ljava/util/function/Consumer;)V getText
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/util/List;Ljava/util/function/Consumer;Ljava/util/List;)V lambda$from$2
	a (Ljava/util/function/Consumer;Lsw;)V lambda$from$1
	a (Ljava/util/function/Consumer;Lapz;)V lambda$static$0
	<clinit> ()V <clinit>
ess net/minecraft/client/gui/narration/ScreenNarrationCollector
	a generation
	b entries
	<init> ()V <init>
	a (Ljava/util/function/Consumer;)V update
	a (Z)Ljava/lang/String; collectNarrationText
	a (ZLjava/util/function/Consumer;Less$a;Less$b;)V lambda$collectNarrationText$2
	a (Less$a;)Ljava/lang/Integer; lambda$new$1
	b (Less$a;)Leso; lambda$new$0
ess$1 net/minecraft/client/gui/narration/ScreenNarrationCollector$1
	c firstEntry
	a val$result
	b this$0
	<init> (Less;Ljava/lang/StringBuilder;)V <init>
	a (Ljava/lang/String;)V accept
	accept (Ljava/lang/Object;)V accept
ess$a net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey
	a type
	b depth
	<init> (Leso;I)V <init>
ess$b net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry
	a contents
	b generation
	c alreadyNarrated
	<init> ()V <init>
	a (ILesr;)Less$b; update
ess$c net/minecraft/client/gui/narration/ScreenNarrationCollector$Output
	b depth
	a this$0
	<init> (Less;I)V <init>
	a (Leso;Lesr;)V add
	a ()Lesp; nest
	a (Less$a;)Less$b; lambda$add$0
est net/minecraft/client/gui/narration/package-info
esu net/minecraft/client/gui/navigation/CommonInputs
	<init> ()V <init>
	a (I)Z selected
esv net/minecraft/client/gui/navigation/FocusNavigationEvent
	a ()Lesx; getVerticalDirectionForInitialFocus
esv$a net/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation
	a direction
	<init> (Lesx;)V <init>
	a ()Lesx; getVerticalDirectionForInitialFocus
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lesx; direction
esv$b net/minecraft/client/gui/navigation/FocusNavigationEvent$InitialFocus
	<init> ()V <init>
	a ()Lesx; getVerticalDirectionForInitialFocus
esv$c net/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation
	a forward
	<init> (Z)V <init>
	a ()Lesx; getVerticalDirectionForInitialFocus
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Z forward
esw net/minecraft/client/gui/navigation/ScreenAxis
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	values ()[Lesw; values
	valueOf (Ljava/lang/String;)Lesw; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lesw; orthogonal
	b ()Lesx; getPositive
	c ()Lesx; getNegative
	a (Z)Lesx; getDirection
	d ()[Lesw; $values
	<clinit> ()V <clinit>
esw$1 net/minecraft/client/gui/navigation/ScreenAxis$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenAxis
	<clinit> ()V <clinit>
esx net/minecraft/client/gui/navigation/ScreenDirection
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e coordinateValueComparator
	f $VALUES
	values ()[Lesx; values
	valueOf (Ljava/lang/String;)Lesx; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lesw; getAxis
	b ()Lesx; getOpposite
	c ()Z isPositive
	a (II)Z isAfter
	b (II)Z isBefore
	d ()Lit/unimi/dsi/fastutil/ints/IntComparator; coordinateValueComparator
	c (II)I lambda$new$0
	e ()[Lesx; $values
	<clinit> ()V <clinit>
esx$1 net/minecraft/client/gui/navigation/ScreenDirection$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenDirection
	<clinit> ()V <clinit>
esy net/minecraft/client/gui/navigation/ScreenPosition
	a x
	b y
	<init> (II)V <init>
	a (Lesw;II)Lesy; of
	a (Lesx;)Lesy; step
	a (Lesw;)I getCoordinate
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I x
	b ()I y
esy$1 net/minecraft/client/gui/navigation/ScreenPosition$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenAxis
	b $SwitchMap$net$minecraft$client$gui$navigation$ScreenDirection
	<clinit> ()V <clinit>
esz net/minecraft/client/gui/navigation/ScreenRectangle
	a position
	b width
	c height
	d EMPTY
	<init> (IIII)V <init>
	<init> (Lesy;II)V <init>
	a ()Lesz; empty
	a (Lesw;IIII)Lesz; of
	a (Lesx;)Lesz; step
	a (Lesw;)I getLength
	b (Lesx;)I getBoundInDirection
	c (Lesx;)Lesz; getBorder
	a (Lesz;)Z overlaps
	a (Lesz;Lesw;)Z overlapsInAxis
	b (Lesw;)I getCenterInAxis
	b (Lesz;)Lesz; intersection
	b ()I top
	c ()I bottom
	d ()I left
	e ()I right
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Lesy; position
	g ()I width
	h ()I height
	<clinit> ()V <clinit>
esz$1 net/minecraft/client/gui/navigation/ScreenRectangle$1
	a $SwitchMap$net$minecraft$client$gui$navigation$ScreenAxis
	<clinit> ()V <clinit>
eta net/minecraft/client/gui/navigation/package-info
etb net/minecraft/client/gui/package-info
etc net/minecraft/client/gui/screens/AccessibilityOnboardingScreen
	a ONBOARDING_NARRATOR_MESSAGE
	b PADDING
	c TITLE_PADDING
	k panorama
	l logoRenderer
	m options
	n narratorAvailable
	o hasNarrated
	p timer
	q textWidget
	<init> (Lenr;)V <init>
	b ()V init
	l ()I initTitleYPos
	aw_ ()V onClose
	a (Leuq;)V closeAndSetScreen
	a (Leox;IIF)V render
	B ()V handleInitialNarrationDelay
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
etd net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	a (Lenr;)[Lenq; options
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	e ()V createFooter
	a (Lepi;)V lambda$createFooter$2
	b (Lepi;)V lambda$createFooter$1
	c (Z)V lambda$createFooter$0
ete net/minecraft/client/gui/screens/AlertScreen
	a LABEL_Y
	b messageText
	c message
	k callback
	l okButton
	m shouldCloseOnEsc
	<init> (Ljava/lang/Runnable;Lsw;Lsw;)V <init>
	<init> (Ljava/lang/Runnable;Lsw;Lsw;Lsw;Z)V <init>
	au_ ()Lsw; getNarrationMessage
	b ()V init
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
	a (Lepi;)V lambda$init$0
etf net/minecraft/client/gui/screens/BackupConfirmScreen
	c lastScreen
	a listener
	k description
	l promptForCacheErase
	m message
	b id
	n eraseCache
	<init> (Leuq;Letf$a;Lsw;Lsw;Z)V <init>
	b ()V init
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
	a (III)Z keyPressed
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
etf$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
	proceed (ZZ)V proceed
etg net/minecraft/client/gui/screens/BanNoticeScreen
	a TEMPORARY_BAN_TITLE
	b PERMANENT_BAN_TITLE
	<init> ()V <init>
	a (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Letj; create
	a (Lcom/mojang/authlib/minecraft/BanDetails;)Lsw; getBannedTitle
	b (Lcom/mojang/authlib/minecraft/BanDetails;)Lsw; getBannedScreenText
	c (Lcom/mojang/authlib/minecraft/BanDetails;)Lsw; getBanReasonText
	d (Lcom/mojang/authlib/minecraft/BanDetails;)Lsw; getBanStatusText
	e (Lcom/mojang/authlib/minecraft/BanDetails;)Lsw; getBanDurationText
	f (Lcom/mojang/authlib/minecraft/BanDetails;)Z isTemporaryBan
	<clinit> ()V <clinit>
eth net/minecraft/client/gui/screens/ChatOptionsScreen
	<init> (Leuq;Lenr;)V <init>
eti net/minecraft/client/gui/screens/ChatScreen
	a MOUSE_SCROLL_SPEED
	c USAGE_TEXT
	k TOOLTIP_MAX_WIDTH
	l historyBuffer
	m historyPos
	b input
	n initial
	o commandSuggestions
	<init> (Ljava/lang/String;)V <init>
	b ()V init
	a (Lenn;II)V resize
	ax_ ()V removed
	f ()V tick
	b (Ljava/lang/String;)V onEdited
	a (III)Z keyPressed
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (Ljava/lang/String;Z)V insertText
	a (I)V moveInHistory
	a (Leox;IIF)V render
	az_ ()Z isPauseScreen
	c (Ljava/lang/String;)V setChatLine
	a (Lesp;)V updateNarrationState
	a (DD)Lts; getComponentStyleAt
	b (Ljava/lang/String;Z)Z handleChatInput
	a (Ljava/lang/String;)Ljava/lang/String; normalizeChatMessage
	<clinit> ()V <clinit>
eti$1 net/minecraft/client/gui/screens/ChatScreen$1
	d this$0
	<init> (Leti;Leov;IIIILsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
etj net/minecraft/client/gui/screens/ConfirmLinkScreen
	k COPY_BUTTON_TEXT
	l WARNING_TEXT
	m url
	n showWarning
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ljava/lang/String;Z)V <init>
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Ljava/lang/String;Z)V <init>
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Ljava/lang/String;Lsw;Z)V <init>
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Lsw;Ljava/lang/String;Lsw;Z)V <init>
	a (ZLjava/lang/String;)Ltj; confirmMessage
	c (Z)Ltj; confirmMessage
	a (I)V addButtons
	j ()V copyToClipboard
	a (Leox;IIF)V render
	a (Ljava/lang/String;Leuq;Z)V confirmLinkNow
	b (Ljava/lang/String;Leuq;Z)Lepi$c; confirmLink
	a (Ljava/lang/String;Leuq;ZLepi;)V lambda$confirmLink$4
	a (Ljava/lang/String;Lenn;Leuq;Z)V lambda$confirmLinkNow$3
	b (Lepi;)V lambda$addButtons$2
	c (Lepi;)V lambda$addButtons$1
	d (Lepi;)V lambda$addButtons$0
	<clinit> ()V <clinit>
etk net/minecraft/client/gui/screens/ConfirmScreen
	k MARGIN
	l message
	m multilineMessage
	a yesButton
	b noButton
	n delayTicker
	c callback
	o exitButtons
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Lsw;)V <init>
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Lsw;Lsw;Lsw;)V <init>
	au_ ()Lsw; getNarrationMessage
	b ()V init
	a (I)V addButtons
	a (Lepi;)V addExitButton
	a (Leox;IIF)V render
	l ()I titleTop
	B ()I messageTop
	C ()I messageHeight
	b (I)V setDelay
	f ()V tick
	av_ ()Z shouldCloseOnEsc
	a (III)Z keyPressed
	b (Lepi;)V lambda$addButtons$1
	c (Lepi;)V lambda$addButtons$0
etl net/minecraft/client/gui/screens/ConnectScreen
	b UNIQUE_THREAD_ID
	c LOGGER
	k NARRATION_DELAY_MS
	a UNKNOWN_HOST_MESSAGE
	l connection
	m aborted
	n parent
	o status
	p lastNarration
	q connectFailedTitle
	<init> (Leuq;Lsw;)V <init>
	a (Leuq;Lenn;Lfga;Lffd;Z)V startConnecting
	a (Lenn;Lfga;Lffd;)V connect
	a (Lsw;)V updateStatus
	f ()V tick
	av_ ()Z shouldCloseOnEsc
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
etl$1 net/minecraft/client/gui/screens/ConnectScreen$1
	a val$hostAndPort
	b val$minecraft
	c val$server
	d this$0
	<init> (Letl;Ljava/lang/String;Lfga;Lenn;Lffd;)V <init>
	run ()V run
	a (Lenn;Ljava/lang/String;)V lambda$run$1
	a (Lenn;)V lambda$run$0
etm net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a BIOME_SELECT_INFO
	b parent
	c applySettings
	k biomes
	l list
	m biome
	n doneButton
	<init> (Leuq;Lezi;Ljava/util/function/Consumer;)V <init>
	aw_ ()V onClose
	b ()V init
	l ()V updateButtonValidity
	a (Leox;IIF)V render
	a (Letm$a$a;)Z lambda$init$3
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	B ()Ljava/util/Optional; lambda$new$0
	<clinit> ()V <clinit>
etm$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a this$0
	<init> (Letm;)V <init>
	a (Letm$a$a;)V setSelected
	a (Lepc$a;)V setSelected
	a (Letm$a;Lepc$a;)V lambda$new$2
	b (Letm$a$a;)Ljava/lang/String; lambda$new$1
	a (Lhe$c;)Letm$a$a; lambda$new$0
etm$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	b biome
	c name
	a this$1
	<init> (Letm$a;Lhe$c;)V <init>
	a ()Lsw; getNarration
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
etn net/minecraft/client/gui/screens/CreateFlatWorldScreen
	b SLOT_TEX_SIZE
	c SLOT_BG_SIZE
	k SLOT_STAT_HEIGHT
	l SLOT_BG_X
	m SLOT_BG_Y
	n SLOT_FG_X
	o SLOT_FG_Y
	a parent
	p applySettings
	q generator
	r columnType
	s columnHeight
	t list
	u deleteLayerButton
	<init> (Leza;Ljava/util/function/Consumer;Ldqd;)V <init>
	j ()Ldqd; settings
	a (Ldqd;)V setConfig
	b ()V init
	l ()V updateButtonValidity
	B ()Z hasValidSelection
	aw_ ()V onClose
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Lepi;)V lambda$init$1
	d (Lepi;)V lambda$init$0
etn$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	l STATS_ICON_LOCATION
	a this$0
	<init> (Letn;)V <init>
	a (Letn$a$a;)V setSelected
	c ()I getScrollbarPosition
	d ()V resetRows
	a (Lepc$a;)V setSelected
	<clinit> ()V <clinit>
etn$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a this$1
	<init> (Letn$a;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Ldcb;)Lcfz; getDisplayItem
	a ()Lsw; getNarration
	a (DDI)Z mouseClicked
	a (Leox;IILcfz;)V blitSlot
	a (Leox;II)V blitSlotBg
eto net/minecraft/client/gui/screens/CreditsAndAttributionScreen
	a BUTTON_SPACING
	b BUTTON_WIDTH
	c TITLE
	k CREDITS_BUTTON
	l ATTRIBUTION_BUTTON
	m LICENSES_BUTTON
	n lastScreen
	o layout
	<init> (Leuq;)V <init>
	b ()V init
	aG_ ()V repositionElements
	l ()V openCreditsScreen
	aw_ ()V onClose
	a (Leox;IIF)V render
	B ()V lambda$openCreditsScreen$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
etp net/minecraft/client/gui/screens/DatapackLoadFailureScreen
	a message
	b callback
	<init> (Ljava/lang/Runnable;)V <init>
	b ()V init
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
etq net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	k deathScore
	l exitButtons
	m exitToTitleButton
	<init> (Lsw;Z)V <init>
	b ()V init
	av_ ()Z shouldCloseOnEsc
	l ()V handleExitToTitleScreen
	B ()V exitToTitleScreen
	a (Leox;IIF)V render
	a (I)Lts; getClickedComponentStyleAt
	a (DDI)Z mouseClicked
	az_ ()Z isPauseScreen
	f ()V tick
	c (Z)V setButtonsActive
	e (Z)V lambda$handleExitToTitleScreen$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
etq$a net/minecraft/client/gui/screens/DeathScreen$TitleConfirmScreen
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lsw;Lsw;Lsw;Lsw;)V <init>
etr net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	b movementMessage
	c durationMessage
	<init> ()V <init>
	b ()V init
	a (Leox;)V renderBackground
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ets net/minecraft/client/gui/screens/DirectJoinServerScreen
	a ENTER_IP_LABEL
	b selectButton
	c serverData
	k ipEdit
	l callback
	m lastScreen
	<init> (Leuq;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lffd;)V <init>
	f ()V tick
	a (III)Z keyPressed
	b ()V init
	a (Lenn;II)V resize
	l ()V onSelect
	aw_ ()V onClose
	ax_ ()V removed
	B ()V updateSelectButtonStatus
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	a (Ljava/lang/String;)V lambda$init$0
	<clinit> ()V <clinit>
ett net/minecraft/client/gui/screens/DisconnectedScreen
	a TO_SERVER_LIST
	b TO_TITLE
	c parent
	k reason
	l buttonText
	m layout
	<init> (Leuq;Lsw;Lsw;)V <init>
	<init> (Leuq;Lsw;Lsw;Lsw;)V <init>
	b ()V init
	aG_ ()V repositionElements
	au_ ()Lsw; getNarrationMessage
	av_ ()Z shouldCloseOnEsc
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
etu net/minecraft/client/gui/screens/EditServerScreen
	a NAME_LABEL
	b IP_LABEL
	c addButton
	k callback
	l serverData
	m ipEdit
	n nameEdit
	o lastScreen
	<init> (Leuq;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lffd;)V <init>
	f ()V tick
	b ()V init
	a (Lenn;II)V resize
	l ()V onAdd
	aw_ ()V onClose
	B ()V updateAddButtonStatus
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$4
	b (Lepi;)V lambda$init$3
	a (Lepp;Lffd$a;)V lambda$init$2
	a (Ljava/lang/String;)V lambda$init$1
	b (Ljava/lang/String;)V lambda$init$0
	<clinit> ()V <clinit>
etv net/minecraft/client/gui/screens/ErrorScreen
	a message
	<init> (Lsw;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
	a (Lepi;)V lambda$init$0
etw net/minecraft/client/gui/screens/FaviconTexture
	a MISSING_LOCATION
	b WIDTH
	c HEIGHT
	d textureManager
	e textureLocation
	f texture
	g closed
	<init> (Lfuw;Lacq;)V <init>
	a (Lfuw;Ljava/lang/String;)Letw; forWorld
	b (Lfuw;Ljava/lang/String;)Letw; forServer
	a (Lehk;)V upload
	a ()V clear
	b ()Lacq; textureLocation
	close ()V close
	c ()V checkOpen
	<clinit> ()V <clinit>
etx net/minecraft/client/gui/screens/GenericDirtMessageScreen
	<init> (Lsw;)V <init>
	av_ ()Z shouldCloseOnEsc
	a (Leox;IIF)V render
ety net/minecraft/client/gui/screens/GenericWaitingScreen
	a TITLE_Y
	b MESSAGE_Y
	c MESSAGE_MAX_WIDTH
	k messageText
	l buttonLabel
	m buttonCallback
	n message
	o button
	p disableButtonTicks
	a (Lsw;Lsw;Ljava/lang/Runnable;)Lety; createWaiting
	a (Lsw;Lsw;Lsw;Ljava/lang/Runnable;)Lety; createCompleted
	<init> (Lsw;Lsw;Lsw;Ljava/lang/Runnable;I)V <init>
	b ()V init
	f ()V tick
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
	aw_ ()V onClose
	au_ ()Lsw; getNarrationMessage
	a (Lepi;)V lambda$init$0
etz net/minecraft/client/gui/screens/InBedChatScreen
	c leaveBedButton
	<init> ()V <init>
	b ()V init
	a (Leox;IIF)V render
	aw_ ()V onClose
	a (CI)Z charTyped
	a (III)Z keyPressed
	l ()V sendWakeUp
	k ()V onPlayerWokeUp
	a (Lepi;)V lambda$init$0
eua net/minecraft/client/gui/screens/LanguageSelectScreen
	c WARNING_LABEL
	k packSelectionList
	l languageManager
	<init> (Leuq;Lenr;Lfwb;)V <init>
	b ()V init
	l ()V onDone
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eua$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a this$0
	<init> (Leua;Lenn;)V <init>
	c ()I getScrollbarPosition
	b ()I getRowWidth
	a (Leox;)V renderBackground
	a (Ljava/lang/String;Ljava/lang/String;Lfwa;)V lambda$new$0
	a (Leua$a;)I access$000
eua$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	b code
	c language
	d lastClickTime
	a this$1
	<init> (Leua$a;Ljava/lang/String;Lfwa;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	b ()V select
	a ()Lsw; getNarration
eub net/minecraft/client/gui/screens/LevelLoadingScreen
	a NARRATION_DELAY_MS
	b progressListener
	c lastNarration
	k done
	l COLORS
	<init> (Lais;)V <init>
	av_ ()Z shouldCloseOnEsc
	aH_ ()Z shouldNarrateNavigation
	ax_ ()V removed
	b (Lesp;)V updateNarratedWidget
	l ()Ljava/lang/String; getFormattedProgress
	a (Leox;IIF)V render
	a (Leox;Lais;IIII)V renderChunks
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$1
	a (ILeox;IIIIILais;III)V lambda$renderChunks$0
	<clinit> ()V <clinit>
euc net/minecraft/client/gui/screens/LoadingDotsText
	a FRAMES
	b INTERVAL_MS
	<init> ()V <init>
	a (J)Ljava/lang/String; get
	<clinit> ()V <clinit>
eud net/minecraft/client/gui/screens/LoadingOverlay
	c MOJANG_STUDIOS_LOGO_LOCATION
	d LOGO_BACKGROUND_COLOR
	e LOGO_BACKGROUND_COLOR_DARK
	f BRAND_BACKGROUND
	g LOGO_SCALE
	h LOGO_QUARTER_FLOAT
	i LOGO_QUARTER
	j LOGO_HALF
	k LOGO_OVERLAP
	l SMOOTHING
	a FADE_OUT_TIME
	b FADE_IN_TIME
	m minecraft
	n reload
	o onFinish
	p fadeIn
	q currentProgress
	r fadeOutStart
	s fadeInStart
	<init> (Lenn;Lakt;Ljava/util/function/Consumer;Z)V <init>
	a (Lenn;)V registerTextures
	a (II)I replaceAlpha
	a (Leox;IIF)V render
	a (Leox;IIIIF)V drawProgressBar
	a ()Z isPauseScreen
	b ()I lambda$static$0
	<clinit> ()V <clinit>
eud$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	<init> ()V <init>
	b (Lakx;)Lfuo$a; getTextureImage
eue net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	<init> ()V <init>
	a (Lcck;Lenn;ILsw;)V create
	a (Lcck;)Leue$a; getConstructor
	a (Lcck;Leue$a;)V register
	a ()Z selfTest
	<clinit> ()V <clinit>
eue$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lsw;Lcck;Lenn;I)V fromPacket
	create (Lcbf;Lbyn;Lsw;)Leuq; create
euf net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	a (Lenr;)[Lenq; options
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	a (I)[Lenq; lambda$init$0
eug net/minecraft/client/gui/screens/OnlineOptionsScreen
	l difficultyDisplay
	a (Lenn;Leuq;Lenr;)Leug; createOnlineOptionsScreen
	<init> (Leuq;Lenr;[Lenq;Lenq;)V <init>
	b ()V init
	a (Lfew;)Lenq; lambda$createOnlineOptionsScreen$2
	a (Lcom/mojang/datafixers/util/Unit;)V lambda$createOnlineOptionsScreen$1
	a (Lbdu;Lsw;Lcom/mojang/datafixers/util/Unit;)Lsw; lambda$createOnlineOptionsScreen$0
euh net/minecraft/client/gui/screens/OptionsScreen
	a SKIN_CUSTOMIZATION
	b SOUNDS
	c VIDEO
	k CONTROLS
	l LANGUAGE
	m CHAT
	n RESOURCEPACK
	o ACCESSIBILITY
	p TELEMETRY
	q CREDITS_AND_ATTRIBUTION
	r COLUMNS
	s lastScreen
	t options
	u difficultyButton
	v lockButton
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	a (Laki;)V applyPacks
	l ()Lesi; createOnlineButton
	a (IILjava/lang/String;Lenn;)Lepp; createDifficultyButton
	c (Z)V lockCallback
	ax_ ()V removed
	a (Leox;IIF)V render
	a (Lsw;Ljava/util/function/Supplier;)Lepi; openScreenButton
	a (Ljava/util/function/Supplier;Lepi;)V lambda$openScreenButton$14
	a (Lenn;Lepp;Lbdu;)V lambda$createDifficultyButton$13
	a (Lepi;)V lambda$createOnlineButton$12
	b (Lepi;)V lambda$createOnlineButton$11
	c (Lepi;)V lambda$init$10
	B ()Leuq; lambda$init$9
	C ()Leuq; lambda$init$8
	D ()Leuq; lambda$init$7
	E ()Leuq; lambda$init$6
	F ()Leuq; lambda$init$5
	G ()Leuq; lambda$init$4
	H ()Leuq; lambda$init$3
	I ()Leuq; lambda$init$2
	J ()Leuq; lambda$init$1
	K ()Leuq; lambda$init$0
	<clinit> ()V <clinit>
eui net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
	<init> (Leuq;Lenr;Lsw;)V <init>
	ax_ ()V removed
	aw_ ()V onClose
	a (Leox;Leqd;IIF)V basicListRender
euj net/minecraft/client/gui/screens/OutOfMemoryScreen
	a message
	<init> ()V <init>
	b ()V init
	av_ ()Z shouldCloseOnEsc
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
euk net/minecraft/client/gui/screens/Overlay
	<init> ()V <init>
	a ()Z isPauseScreen
eul net/minecraft/client/gui/screens/PauseScreen
	a COLUMNS
	b MENU_PADDING_TOP
	c BUTTON_PADDING
	k BUTTON_WIDTH_FULL
	l BUTTON_WIDTH_HALF
	m RETURN_TO_GAME
	n ADVANCEMENTS
	o STATS
	p SEND_FEEDBACK
	q REPORT_BUGS
	r OPTIONS
	s SHARE_TO_LAN
	t PLAYER_REPORTING
	u RETURN_TO_MENU
	v DISCONNECT
	w SAVING_LEVEL
	x GAME
	y PAUSED
	z showPauseMenu
	A disconnectButton
	<init> (Z)V <init>
	b ()V init
	l ()V createPauseMenu
	B ()V onDisconnect
	f ()V tick
	a (Leox;IIF)V render
	a (Lsw;Ljava/util/function/Supplier;)Lepi; openScreenButton
	a (Lsw;Ljava/lang/String;)Lepi; openLinkButton
	a (Ljava/lang/String;)Leuq; lambda$openLinkButton$8
	b (Ljava/lang/String;Z)V lambda$openLinkButton$7
	a (Ljava/util/function/Supplier;Lepi;)V lambda$openScreenButton$6
	a (Lepi;)V lambda$createPauseMenu$5
	C ()Leuq; lambda$createPauseMenu$4
	D ()Leuq; lambda$createPauseMenu$3
	E ()Leuq; lambda$createPauseMenu$2
	F ()Leuq; lambda$createPauseMenu$1
	b (Lepi;)V lambda$createPauseMenu$0
	<clinit> ()V <clinit>
eum net/minecraft/client/gui/screens/PopupScreen
	a BUTTON_PADDING
	b BUTTON_MARGIN
	c BUTTON_HEIGHT
	k narrationMessage
	l message
	m buttonOptions
	n messageLines
	o contentTop
	p buttonWidth
	<init> (Lsw;Ljava/util/List;Lcom/google/common/collect/ImmutableList;)V <init>
	au_ ()Lsw; getNarrationMessage
	b ()V init
	a (Leox;IIF)V render
	av_ ()Z shouldCloseOnEsc
eum$a net/minecraft/client/gui/screens/PopupScreen$ButtonOption
	a message
	b onPress
	<init> (Lsw;Lepi$c;)V <init>
eun net/minecraft/client/gui/screens/PresetFlatWorldScreen
	b LOGGER
	c SLOT_TEX_SIZE
	k SLOT_BG_SIZE
	l SLOT_STAT_HEIGHT
	m SLOT_BG_X
	n SLOT_BG_Y
	o SLOT_FG_X
	p SLOT_FG_Y
	q DEFAULT_BIOME
	a UNKNOWN_PRESET
	r parent
	s shareText
	t listText
	u list
	v selectButton
	w export
	x settings
	<init> (Letn;)V <init>
	a (Lhf;Ljava/lang/String;I)Ldqa; getLayerInfoFromString
	a (Lhf;Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lhf;Lhf;Lhf;Lhf;Ljava/lang/String;Ldqd;)Ldqd; fromString
	a (Ldqd;)Ljava/lang/String; save
	b ()V init
	a (DDD)Z mouseScrolled
	a (Lenn;II)V resize
	aw_ ()V onClose
	a (Leox;IIF)V render
	f ()V tick
	c (Z)V updateButtonValidity
	a (Lepi;)V lambda$init$4
	a (Lhf;Lhf;Lhf;Lhf;Lepi;)V lambda$init$3
	l ()Ljava/lang/IllegalStateException; lambda$save$2
	a (Ljava/lang/String;Lhe$c;)Lhe$c; lambda$fromString$1
	a (Lacq;)Lacp; lambda$fromString$0
	<clinit> ()V <clinit>
eun$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a this$0
	<init> (Leun;Lhs;Lcaw;)V <init>
	a (Leun$a$a;)V setSelected
	a (III)Z keyPressed
	a (Lepc$a;)V setSelected
	a (Lacp;)Ljava/lang/String; lambda$new$2
	a (Lcaw;Lcpn;)Z lambda$new$1
	a (Ldqa;)Lcpn; lambda$new$0
eun$a$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	b STATS_ICON_LOCATION
	c preset
	d name
	a this$1
	<init> (Leun$a;Lhe;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	b ()V select
	a (Leox;IILcfu;)V blitSlot
	a (Leox;II)V blitSlotBg
	a ()Lsw; getNarration
	a (Lacp;)Lsw; lambda$new$0
	<clinit> ()V <clinit>
euo net/minecraft/client/gui/screens/ProgressScreen
	a header
	b stage
	c progress
	k stop
	l clearScreenAfterStop
	<init> (Z)V <init>
	av_ ()Z shouldCloseOnEsc
	aH_ ()Z shouldNarrateNavigation
	a (Lsw;)V progressStartNoAbort
	b (Lsw;)V progressStart
	c (Lsw;)V progressStage
	a (I)V progressStagePercentage
	a ()V stop
	a (Leox;IIF)V render
eup net/minecraft/client/gui/screens/ReceivingLevelScreen
	a DOWNLOADING_TERRAIN_TEXT
	b CHUNK_LOADING_START_WAIT_LIMIT_MS
	c loadingPacketsReceived
	k oneTickSkipped
	l createdAt
	<init> ()V <init>
	av_ ()Z shouldCloseOnEsc
	aH_ ()Z shouldNarrateNavigation
	a (Leox;IIF)V render
	f ()V tick
	aw_ ()V onClose
	l ()V loadingPacketsReceived
	az_ ()Z isPauseScreen
	<clinit> ()V <clinit>
euq net/minecraft/client/gui/screens/Screen
	a LOGGER
	b ALLOWED_PROTOCOLS
	c USAGE_NARRATION
	d BACKGROUND_LOCATION
	e title
	k children
	l narratables
	f minecraft
	m initialized
	g width
	h height
	n renderables
	i font
	o clickedLink
	p NARRATE_SUPPRESS_AFTER_INIT_TIME
	q NARRATE_DELAY_NARRATOR_ENABLED
	r NARRATE_DELAY_MOUSE_MOVE
	s NARRATE_DELAY_MOUSE_ACTION
	t NARRATE_DELAY_KEYBOARD_ACTION
	u narrationState
	v narrationSuppressTime
	w nextNarrationTime
	x lastNarratable
	y deferredTooltipRendering
	j screenExecutor
	<init> (Lsw;)V <init>
	m ()Lsw; getTitle
	au_ ()Lsw; getNarrationMessage
	b (Leox;IIF)V renderWithTooltip
	a (Leox;IIF)V render
	a (III)Z keyPressed
	l ()Lesv$c; createTabEvent
	a (Lesx;)Lesv$a; createArrowEvent
	c (Leqt;)V setInitialFocus
	B ()V clearFocus
	a (Leou;)V changeFocus
	av_ ()Z shouldCloseOnEsc
	aw_ ()V onClose
	d (Leqt;)Leqt; addRenderableWidget
	a (Leqh;)Leqh; addRenderableOnly
	e (Leqt;)Leqt; addWidget
	f (Leqt;)V removeWidget
	n ()V clearWidgets
	a (Lenn;Lcfz;)Ljava/util/List; getTooltipFromItem
	a (Ljava/lang/String;Z)V insertText
	a (Lts;)Z handleComponentClicked
	b (Lenn;II)V init
	o ()V rebuildWidgets
	i ()Ljava/util/List; children
	b ()V init
	f ()V tick
	ax_ ()V removed
	ay_ ()V added
	a (Leox;)V renderBackground
	b (Leox;)V renderDirtBackground
	az_ ()Z isPauseScreen
	c (Z)V confirmLink
	a (Ljava/net/URI;)V openLink
	p ()Z hasControlDown
	q ()Z hasShiftDown
	r ()Z hasAltDown
	d (I)Z isCut
	e (I)Z isPaste
	f (I)Z isCopy
	g (I)Z isSelectAll
	aG_ ()V repositionElements
	a (Lenn;II)V resize
	a (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V wrapScreenError
	a (Ljava/lang/String;CI)Z isValidCharacterForName
	a_ (DD)Z isMouseOver
	a (Ljava/util/List;)V onFilesDrop
	a (JZ)V scheduleNarration
	a (J)V suppressNarration
	v ()V afterMouseMove
	w ()V afterMouseAction
	x ()V afterKeyboardAction
	F ()Z shouldRunNarration
	y ()V handleDelayedNarration
	d (Z)V triggerImmediateNarration
	e (Z)V runNarration
	aH_ ()Z shouldNarrateNavigation
	a (Lesp;)V updateNarrationState
	b (Lesp;)V updateNarratedWidget
	a (Ljava/util/List;Lesn;)Leuq$b; findNarratableWidget
	z ()V narrationEnabled
	b (Ljava/util/List;)V setTooltipForNextRenderPass
	a (Ljava/util/List;Lexi;Z)V setTooltipForNextRenderPass
	d (Lsw;)V setTooltipForNextRenderPass
	a (Leqp;Lexi;Z)V setTooltipForNextRenderPass
	a ([Lepf;)V hideWidgets
	s ()Lesz; getRectangle
	A ()Lame; getBackgroundMusic
	b (Ljava/lang/String;)Ljava/lang/String; lambda$wrapScreenError$2
	a (Ljava/lang/Runnable;)V lambda$new$1
	b (Ljava/lang/Runnable;)V lambda$new$0
	<clinit> ()V <clinit>
euq$a net/minecraft/client/gui/screens/Screen$DeferredTooltipRendering
	a tooltip
	b positioner
	<init> (Ljava/util/List;Lexi;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; tooltip
	b ()Lexi; positioner
euq$b net/minecraft/client/gui/screens/Screen$NarratableSearchResult
	a entry
	b index
	c priority
	<init> (Lesn;ILesn$a;)V <init>
eur net/minecraft/client/gui/screens/ShareToLanScreen
	a PORT_LOWER_BOUND
	b PORT_HIGHER_BOUND
	c ALLOW_COMMANDS_LABEL
	k GAME_MODE_LABEL
	l INFO_TEXT
	m PORT_INFO_TEXT
	n PORT_UNAVAILABLE
	o INVALID_PORT
	p INVALID_PORT_COLOR
	q lastScreen
	r gameMode
	s commands
	t port
	u portEdit
	<init> (Leuq;)V <init>
	b ()V init
	f ()V tick
	a (Ljava/lang/String;)Lsw; tryParsePort
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$4
	a (Lepi;Ljava/lang/String;)V lambda$init$3
	a (Lfyp;Lepi;)V lambda$init$2
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$1
	a (Lepp;Lcmj;)V lambda$init$0
	<clinit> ()V <clinit>
eus net/minecraft/client/gui/screens/SimpleOptionsSubScreen
	c smallOptions
	l narratorButton
	k list
	<init> (Leuq;Lenr;Lsw;[Lenq;)V <init>
	b ()V init
	e ()V createFooter
	a (Leox;IIF)V render
	l ()V updateNarratorButton
	a (Lepi;)V lambda$createFooter$0
eut net/minecraft/client/gui/screens/SkinCustomizationScreen
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	a (Lbyp;Lepp;Ljava/lang/Boolean;)V lambda$init$0
euu net/minecraft/client/gui/screens/SoundOptionsScreen
	c list
	a (Lenr;)[Lenq; buttonOptions
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	l ()[Lenq; getAllSoundOptionsExceptMaster
	a (Leox;IIF)V render
	a (I)[Lenq; lambda$getAllSoundOptionsExceptMaster$3
	a (Lami;)Lenq; lambda$getAllSoundOptionsExceptMaster$2
	b (Lami;)Z lambda$getAllSoundOptionsExceptMaster$1
	a (Lepi;)V lambda$init$0
euv net/minecraft/client/gui/screens/SymlinkWarningScreen
	a TITLE
	b MESSAGE_TEXT
	c callbackScreen
	k layout
	<init> (Leuq;)V <init>
	b ()V init
	aG_ ()V repositionElements
	a (Leox;IIF)V render
	au_ ()Lsw; getNarrationMessage
	aw_ ()V onClose
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
euw net/minecraft/client/gui/screens/TitleScreen
	c LOGGER
	k DEMO_LEVEL_ID
	a COPYRIGHT_TEXT
	b CUBE_MAP
	l PANORAMA_OVERLAY
	m splash
	n resetDemoButton
	o realmsNotificationsScreen
	p panorama
	q fading
	r fadeInStart
	s warningLabel
	t logoRenderer
	<init> ()V <init>
	<init> (Z)V <init>
	<init> (ZLepx;)V <init>
	l ()Z realmsNotificationsEnabled
	f ()V tick
	a (Lfuw;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	az_ ()Z isPauseScreen
	av_ ()Z shouldCloseOnEsc
	b ()V init
	a (II)V createNormalMenuOptions
	B ()Lsw; getMultiplayerDisabledReason
	b (II)V createDemoMenuOptions
	C ()Z checkDemoWorldPresence
	D ()V realmsButtonClicked
	a (Leox;IIF)V render
	a (DDI)Z mouseClicked
	ax_ ()V removed
	ay_ ()V added
	c (Z)V confirmDemo
	a (Lepi;)V lambda$createDemoMenuOptions$10
	a (ZLepi;)V lambda$createDemoMenuOptions$9
	b (Lepi;)V lambda$createNormalMenuOptions$8
	c (Lepi;)V lambda$createNormalMenuOptions$7
	d (Lepi;)V lambda$createNormalMenuOptions$6
	e (Lepi;)V lambda$init$5
	f (Lepi;)V lambda$init$4
	g (Lepi;)V lambda$init$3
	h (Lepi;)V lambda$init$2
	i (Lepi;)V lambda$init$1
	E ()Lepx; lambda$new$0
	<clinit> ()V <clinit>
euw$a net/minecraft/client/gui/screens/TitleScreen$WarningLabel
	a font
	b label
	c x
	d y
	<init> (Leov;Lepz;II)V <init>
	a (Leox;I)V render
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Leov; font
	b ()Lepz; label
	c ()I x
	d ()I y
eux net/minecraft/client/gui/screens/VideoSettingsScreen
	c FABULOUS
	k WARNING_MESSAGE
	l WARNING_TITLE
	m BUTTON_ACCEPT
	n BUTTON_CANCEL
	o list
	p gpuWarnlistManager
	q oldMipmaps
	a (Lenr;)[Lenq; options
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	ax_ ()V removed
	a (DDI)Z mouseClicked
	a (DDD)Z mouseScrolled
	a (Leox;IIF)V render
	a (Lepi;)V lambda$mouseClicked$4
	b (Lepi;)V lambda$mouseClicked$3
	a (Lehn;Lepi;)V lambda$init$2
	a (Lehi;Lehn;Ljava/lang/Integer;)V lambda$init$1
	a (Lehi;Lsw;Ljava/lang/Integer;)Lsw; lambda$init$0
	<clinit> ()V <clinit>
euy net/minecraft/client/gui/screens/WinScreen
	a LOGGER
	b VIGNETTE_LOCATION
	c SECTION_HEADING
	k NAME_PREFIX
	l OBFUSCATE_TOKEN
	m SPEEDUP_FACTOR
	n SPEEDUP_FACTOR_FAST
	o poem
	p onFinished
	q scroll
	r lines
	s centeredLines
	t totalScrollLength
	u speedupActive
	v speedupModifiers
	w scrollSpeed
	x unmodifiedScrollSpeed
	y direction
	z logoRenderer
	<init> (ZLjava/lang/Runnable;)V <init>
	l ()F calculateScrollSpeed
	f ()V tick
	a (III)Z keyPressed
	b (III)Z keyReleased
	aw_ ()V onClose
	B ()V respawn
	b ()V init
	a (Ljava/lang/String;Leuy$a;)V wrapCreditsIO
	a (Ljava/io/Reader;)V addPoemFile
	b (Ljava/io/Reader;)V addCreditsFile
	C ()V addEmptyLine
	a (Ljava/lang/String;)V addPoemLines
	a (Lsw;Z)V addCreditsLine
	c (Leox;)V renderBg
	a (Leox;IIF)V render
	ax_ ()V removed
	A ()Lame; getBackgroundMusic
	<clinit> ()V <clinit>
euy$a net/minecraft/client/gui/screens/WinScreen$CreditsReader
	read (Ljava/io/Reader;)V read
euz net/minecraft/client/gui/screens/achievement/StatsScreen
	c PENDING_TEXT
	k STATS_ICON_LOCATION
	a lastScreen
	l statsList
	m itemStatsList
	n mobsStatsList
	o stats
	p activeList
	q isLoading
	r SLOT_TEX_SIZE
	s SLOT_BG_SIZE
	t SLOT_STAT_HEIGHT
	u SLOT_BG_X
	v SLOT_BG_Y
	w SLOT_FG_X
	x SLOT_FG_Y
	y SLOT_LEFT_INSERT
	z SLOT_TEXT_OFFSET
	A SORT_NONE
	C SORT_DOWN
	D SORT_UP
	<init> (Leuq;Lams;)V <init>
	b ()V init
	l ()V initLists
	B ()V initButtons
	a (Leox;IIF)V render
	C ()V onStatsUpdated
	az_ ()Z isPauseScreen
	D ()Leqc; getActiveList
	a (Leqc;)V setActiveList
	a (Lamo;)Ljava/lang/String; getTranslationKey
	a (I)I getColumnX
	a (Leox;IILcfu;)V blitSlot
	a (Leox;IIII)V blitSlotIcon
	a (Lepi;)V lambda$initButtons$3
	b (Lepi;)V lambda$initButtons$2
	c (Lepi;)V lambda$initButtons$1
	d (Lepi;)V lambda$initButtons$0
	a (Leuz;)Leov; access$000
	b (Leuz;)Leov; access$100
	c (Leuz;)Leov; access$200
	d (Leuz;)Leov; access$300
	e (Leuz;)Leov; access$400
	f (Leuz;)Leov; access$500
	g (Leuz;)Leov; access$600
	h (Leuz;)Leov; access$700
	i (Leuz;)Leov; access$800
	j (Leuz;)Leov; access$900
	k (Leuz;)Leov; access$1000
	l (Leuz;)Leov; access$1100
	m (Leuz;)Leov; access$1200
	<clinit> ()V <clinit>
euz$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
	a this$0
	<init> (Leuz;Lenn;)V <init>
	a (Leox;)V renderBackground
	a (Lamo;)Ljava/lang/String; lambda$new$0
euz$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	b stat
	c statDisplay
	a this$1
	<init> (Leuz$a;Lamo;)V <init>
	b ()Ljava/lang/String; getValueText
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
euz$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	l itemColumns
	r iconOffsets
	m headerPressed
	n itemStatSorter
	o sortColumn
	p sortOrder
	q this$0
	<init> (Leuz;Lenn;)V <init>
	a (Leox;II)V renderHeader
	b ()I getRowWidth
	c ()I getScrollbarPosition
	a (Leox;)V renderBackground
	a (II)V clickedHeader
	a (I)Lamq; getColumn
	b (Lamq;)I getColumnIndex
	b (Leox;II)V renderDecorations
	a (Leox;Lsw;II)V renderMousehoverTooltip
	a (Lcfu;)Lsw; getString
	a (Lamq;)V sortByColumn
euz$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	b item
	a this$1
	<init> (Leuz$b;Lcfu;)V <init>
	b ()Lcfu; getItem
	a (Leox;IIIIIIIZF)V render
	a (Leox;Lamo;IIZ)V renderStat
	a ()Lsw; getNarration
euz$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator
	a this$1
	<init> (Leuz$b;)V <init>
	a (Leuz$b$a;Leuz$b$a;)I compare
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
euz$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
	a this$0
	<init> (Leuz;Lenn;)V <init>
	a (Leox;)V renderBackground
euz$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	b mobName
	c kills
	d hasKills
	e killedBy
	f wasKilledBy
	a this$1
	<init> (Leuz$c;Lbfn;)V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
eva net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	C ()V onStatsUpdated
	<clinit> ()V <clinit>
evb net/minecraft/client/gui/screens/achievement/package-info
evc net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	f display
	g icon
	h title
	i root
	j widgets
	k scrollX
	l scrollY
	m minX
	n minY
	o maxX
	p maxY
	q fade
	r centered
	<init> (Lenn;Levg;Levd;ILae;Lan;)V <init>
	a ()Levd; getType
	b ()I getIndex
	c ()Lae; getAdvancement
	d ()Lsw; getTitle
	e ()Lan; getDisplay
	a (Leox;IIZ)V drawTab
	a (Leox;II)V drawIcon
	b (Leox;II)V drawContents
	a (Leox;IIII)V drawTooltips
	a (IIDD)Z isMouseOver
	a (Lenn;Levg;ILae;)Levc; create
	a (DD)V scroll
	a (Lae;)V addAdvancement
	a (Leve;Lae;)V addWidget
	b (Lae;)Leve; getWidget
	f ()Levg; getScreen
evd net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	values ()[Levd; values
	valueOf (Ljava/lang/String;)Levd; valueOf
	<init> (Ljava/lang/String;IIIIII)V <init>
	a ()I getMax
	a (Leox;IIZI)V draw
	a (Leox;IIILcfz;)V drawIcon
	a (I)I getX
	b (I)I getY
	a (IIIDD)Z isMouseOver
	b ()[Levd; $values
	<clinit> ()V <clinit>
evd$1 net/minecraft/client/gui/screens/advancements/AdvancementTabType$1
	a $SwitchMap$net$minecraft$client$gui$screens$advancements$AdvancementTabType
	<clinit> ()V <clinit>
eve net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a WIDGETS_LOCATION
	b HEIGHT
	c BOX_X
	d BOX_WIDTH
	e FRAME_WIDTH
	f ICON_X
	g ICON_Y
	h ICON_WIDTH
	i TITLE_PADDING_LEFT
	j TITLE_PADDING_RIGHT
	k TITLE_X
	l TITLE_Y
	m TITLE_MAX_WIDTH
	n TEST_SPLIT_OFFSETS
	o tab
	p advancement
	q display
	r title
	s width
	t description
	u minecraft
	v parent
	w children
	x progress
	y x
	z y
	<init> (Levc;Lenn;Lae;Lan;)V <init>
	a (Lenz;Ljava/util/List;)F getMaxWidth
	a (Lsw;I)Ljava/util/List; findOptimalLines
	a (Lae;)Leve; getFirstVisibleParent
	a (Leox;IIZ)V drawConnectivity
	a (Leox;II)V draw
	a ()I getWidth
	a (Lag;)V setProgress
	a (Leve;)V addChild
	a (Leox;IIFII)V drawHover
	a (IIII)Z isMouseOver
	b ()V attachToParent
	c ()I getY
	d ()I getX
	<clinit> ()V <clinit>
evf net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	values ()[Levf; values
	valueOf (Ljava/lang/String;)Levf; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getIndex
	b ()[Levf; $values
	<clinit> ()V <clinit>
evg net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	q WINDOW_LOCATION
	a TABS_LOCATION
	b WINDOW_WIDTH
	c WINDOW_HEIGHT
	r WINDOW_INSIDE_X
	s WINDOW_INSIDE_Y
	k WINDOW_INSIDE_WIDTH
	l WINDOW_INSIDE_HEIGHT
	t WINDOW_TITLE_X
	u WINDOW_TITLE_Y
	m BACKGROUND_TILE_WIDTH
	n BACKGROUND_TILE_HEIGHT
	o BACKGROUND_TILE_COUNT_X
	p BACKGROUND_TILE_COUNT_Y
	v VERY_SAD_LABEL
	w NO_ADVANCEMENTS_LABEL
	x TITLE
	y advancements
	z tabs
	A selectedTab
	C isScrolling
	<init> (Lfet;)V <init>
	b ()V init
	ax_ ()V removed
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (DDIDD)Z mouseDragged
	a (Leox;IIII)V renderInside
	a (Leox;II)V renderWindow
	b (Leox;IIII)V renderTooltips
	a (Lae;)V onAddAdvancementRoot
	b (Lae;)V onRemoveAdvancementRoot
	c (Lae;)V onAddAdvancementTask
	d (Lae;)V onRemoveAdvancementTask
	a (Lae;Lag;)V onUpdateAdvancementProgress
	e (Lae;)V onSelectedTabChanged
	a ()V onAdvancementsCleared
	f (Lae;)Leve; getAdvancementWidget
	g (Lae;)Levc; getTab
	<clinit> ()V <clinit>
evh net/minecraft/client/gui/screens/advancements/package-info
evi net/minecraft/client/gui/screens/controls/ControlsScreen
	c ROW_SPACING
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
evj net/minecraft/client/gui/screens/controls/KeyBindsList
	a keyBindsScreen
	l maxNameWidth
	<init> (Levk;Lenn;)V <init>
	d ()V resetMappingAndUpdateButtons
	e ()V refreshEntries
	c ()I getScrollbarPosition
	b ()I getRowWidth
	a (Levj;)Lenn; access$000
	b (Levj;)Lenn; access$100
	c (Levj;)Lenn; access$200
	d (Levj;)Lenn; access$300
	e (Levj;)Lenn; access$400
	f (Levj;)Lenn; access$500
	g (Levj;)Lenn; access$600
	h (Levj;)Lenn; access$700
evj$a net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry
	b name
	c width
	a this$0
	<init> (Levj;Lsw;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Lesv;)Leou; nextFocusPath
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
evj$a$1 net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry$1
	a this$1
	<init> (Levj$a;)V <init>
	q ()Lesn$a; narrationPriority
	b (Lesp;)V updateNarration
evj$b net/minecraft/client/gui/screens/controls/KeyBindsList$Entry
	<init> ()V <init>
	d ()V refreshEntry
evj$c net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry
	b key
	c name
	d changeButton
	e resetButton
	f hasCollision
	a this$0
	<init> (Levj;Lenl;Lsw;)V <init>
	a (Leox;IIIIIIIZF)V render
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
	a (Lsw;Ljava/util/function/Supplier;)Ltj; lambda$new$3
	a (Lenl;Lepi;)V lambda$new$2
	a (Lenl;Lsw;Ljava/util/function/Supplier;)Ltj; lambda$new$1
	b (Lenl;Lepi;)V lambda$new$0
evk net/minecraft/client/gui/screens/controls/KeyBindsScreen
	c selectedKey
	k lastKeySelection
	l keyBindsList
	m resetButton
	<init> (Leuq;Lenr;)V <init>
	b ()V init
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
evl net/minecraft/client/gui/screens/controls/package-info
evm net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen
	a GAMEMODE_SWITCHER_LOCATION
	b SPRITE_SHEET_WIDTH
	c SPRITE_SHEET_HEIGHT
	k SLOT_AREA
	l SLOT_PADDING
	m SLOT_AREA_PADDED
	n HELP_TIPS_OFFSET_Y
	o ALL_SLOTS_WIDTH
	p SELECT_KEY
	q previousHovered
	r currentlyHovered
	s firstMouseX
	t firstMouseY
	u setFirstMousePos
	v slots
	<init> ()V <init>
	l ()Lcmj; getDefaultSelected
	b ()V init
	a (Leox;IIF)V render
	B ()V switchToHoveredGameMode
	a (Lenn;Levm$a;)V switchToHoveredGameMode
	C ()Z checkToClose
	a (III)Z keyPressed
	az_ ()Z isPauseScreen
	<clinit> ()V <clinit>
evm$1 net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$1
	a $SwitchMap$net$minecraft$client$gui$screens$debug$GameModeSwitcherScreen$GameModeIcon
	b $SwitchMap$net$minecraft$world$level$GameType
	<clinit> ()V <clinit>
evm$a net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon
	a CREATIVE
	b SURVIVAL
	c ADVENTURE
	d SPECTATOR
	e VALUES
	j ICON_AREA
	f ICON_TOP_LEFT
	g name
	h command
	i renderStack
	k $VALUES
	values ()[Levm$a; values
	valueOf (Ljava/lang/String;)Levm$a; valueOf
	<init> (Ljava/lang/String;ILsw;Ljava/lang/String;Lcfz;)V <init>
	a (Leox;II)V drawIcon
	a ()Lsw; getName
	b ()Ljava/lang/String; getCommand
	c ()Levm$a; getNext
	a (Lcmj;)Levm$a; getFromGameType
	d ()[Levm$a; $values
	<clinit> ()V <clinit>
evm$b net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot
	b icon
	c isSelected
	a this$0
	<init> (Levm;Levm$a;II)V <init>
	b (Leox;IIF)V renderWidget
	a (Lesp;)V updateWidgetNarration
	n ()Z isHoveredOrFocused
	b (Z)V setSelected
	a (Leox;)V drawSlot
	b (Leox;)V drawSelection
evn net/minecraft/client/gui/screens/debug/package-info
evo net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	m SET_COMMAND_LABEL
	n COMMAND_LABEL
	o PREVIOUS_OUTPUT_LABEL
	a commandEdit
	b previousEdit
	c doneButton
	k cancelButton
	l outputButton
	p commandSuggestions
	<init> ()V <init>
	f ()V tick
	l ()Lcln; getCommandBlock
	B ()I getPreviousY
	b ()V init
	a (Lenn;II)V resize
	c (Z)V updatePreviousOutput
	C ()V onDone
	a (Lcln;)V populateAndSendPacket
	a (Ljava/lang/String;)V onEdited
	a (III)Z keyPressed
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (Leox;IIF)V render
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
evo$1 net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen$1
	d this$0
	<init> (Levo;Leov;IIIILsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
evp net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	a INVENTORY_LOCATION
	w SNAPBACK_SPEED
	x QUICKDROP_DELAY
	b SLOT_ITEM_BLIT_OFFSET
	y HOVER_ITEM_BLIT_OFFSET
	c imageWidth
	k imageHeight
	l titleLabelX
	m titleLabelY
	n inventoryLabelX
	o inventoryLabelY
	p menu
	q playerInventoryTitle
	r hoveredSlot
	z clickedSlot
	A snapbackEnd
	C quickdropSlot
	D lastClickSlot
	s leftPos
	t topPos
	E isSplittingStack
	F draggingItem
	G snapbackStartX
	H snapbackStartY
	I snapbackTime
	J snapbackItem
	K quickdropTime
	u quickCraftSlots
	v isQuickCrafting
	L quickCraftingType
	M quickCraftingButton
	N skipNextRelease
	O quickCraftingRemainder
	P lastClickTime
	Q lastClickButton
	R doubleclick
	S lastQuickMoved
	<init> (Lcbf;Lbyn;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Leox;III)V renderSlotHighlight
	a (Leox;II)V renderTooltip
	a (Lcfz;)Ljava/util/List; getTooltipFromContainerItem
	a (Leox;Lcfz;IILjava/lang/String;)V renderFloatingItem
	b (Leox;II)V renderLabels
	a (Leox;FII)V renderBg
	a (Leox;Lccx;)V renderSlot
	F ()V recalculateQuickCraftRemaining
	a (DD)Lccx; findSlot
	a (DDI)Z mouseClicked
	a (I)V checkHotbarMouseClicked
	a (DDIII)Z hasClickedOutside
	a (DDIDD)Z mouseDragged
	b (DDI)Z mouseReleased
	l ()V clearDraggingState
	a (Lccx;DD)Z isHovering
	a (IIIIDD)Z isHovering
	a (Lccx;IILcbo;)V slotClicked
	a (III)Z keyPressed
	a (II)Z checkHotbarKeyPressed
	ax_ ()V removed
	az_ ()Z isPauseScreen
	f ()V tick
	B ()V containerTick
	C ()Lcbf; getMenu
	aw_ ()V onClose
	<clinit> ()V <clinit>
evq net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	x RECIPE_BUTTON_LOCATION
	w recipeBookComponent
	y widthTooNarrow
	z texture
	<init> (Lcbg;Lexy;Lbyn;Lsw;Lacq;)V <init>
	b ()V init
	B ()V containerTick
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (DDI)Z mouseClicked
	a (Lccx;IILcbo;)V slotClicked
	a (III)Z keyPressed
	a (DDIII)Z hasClickedOutside
	a (CI)Z charTyped
	D ()V recipesUpdated
	E ()Leyc; getRecipeBookComponent
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
evr net/minecraft/client/gui/screens/inventory/AbstractSignEditScreen
	b sign
	c text
	k messages
	l isFrontText
	a woodType
	m frame
	n line
	o signField
	<init> (Ldav;ZZ)V <init>
	<init> (Ldav;ZZLsw;)V <init>
	b ()V init
	f ()V tick
	B ()Z isValid
	a (III)Z keyPressed
	a (CI)Z charTyped
	a (Leox;IIF)V render
	aw_ ()V onClose
	ax_ ()V removed
	az_ ()Z isPauseScreen
	a (Leox;Ldcb;)V renderSignBackground
	l ()Lorg/joml/Vector3f; getSignTextScale
	b (Leox;Ldcb;)V offsetSign
	c (Leox;)V renderSign
	d (Leox;)V renderSignText
	a (Ljava/lang/String;)V setMessage
	C ()V onDone
	b (Ljava/lang/String;)Z lambda$init$4
	D ()Ljava/lang/String; lambda$init$3
	a (Lepi;)V lambda$init$2
	a (I)[Ljava/lang/String; lambda$new$1
	a (ZI)Lsw; lambda$new$0
evs net/minecraft/client/gui/screens/inventory/AnvilScreen
	w ANVIL_LOCATION
	x TOO_EXPENSIVE_TEXT
	y name
	z player
	<init> (Lcbh;Lbyn;Lsw;)V <init>
	B ()V containerTick
	D ()V subInit
	a (Lenn;II)V resize
	a (III)Z keyPressed
	a (Ljava/lang/String;)V onNameChanged
	b (Leox;II)V renderLabels
	a (Leox;FII)V renderBg
	c (Leox;IIF)V renderFg
	c (Leox;II)V renderErrorIcon
	a (Lcbf;ILcfz;)V slotChanged
	<clinit> ()V <clinit>
evt net/minecraft/client/gui/screens/inventory/BeaconScreen
	w BEACON_LOCATION
	x PRIMARY_EFFECT_LABEL
	y SECONDARY_EFFECT_LABEL
	z beaconButtons
	A primary
	C secondary
	<init> (Lcbi;Lbyn;Lsw;)V <init>
	a (Lepf;)V addBeaconButton
	b ()V init
	B ()V containerTick
	D ()V updateButtons
	b (Leox;II)V renderLabels
	a (Leox;FII)V renderBg
	a (Leox;IIF)V render
	a (ILevt$a;)V lambda$updateButtons$0
	a (Levt;)Lenn; access$000
	b (Levt;)Lenn; access$100
	c (Levt;)Lenn; access$200
	<clinit> ()V <clinit>
evt$1 net/minecraft/client/gui/screens/inventory/BeaconScreen$1
	a val$menu
	b this$0
	<init> (Levt;Lcbi;)V <init>
	a (Lcbf;ILcfz;)V slotChanged
	a (Lcbf;II)V dataChanged
evt$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton
	a (I)V updateStatus
evt$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a this$0
	<init> (Levt;II)V <init>
	c ()V onPress
	a (I)V updateStatus
evt$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a this$0
	<init> (Levt;II)V <init>
	c ()V onPress
	a (I)V updateStatus
evt$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	c isPrimary
	a tier
	d effect
	e sprite
	b this$0
	<init> (Levt;IILbey;ZI)V <init>
	a (Lbey;)V setEffect
	b (Lbey;)Ltj; createEffectDescription
	c ()V onPress
	a (Leox;)V renderIcon
	a (I)V updateStatus
	aE_ ()Ltj; createNarrationMessage
evt$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	<init> (II)V <init>
	<init> (IILsw;)V <init>
	b (Leox;IIF)V renderWidget
	a (Leox;)V renderIcon
	a ()Z isSelected
	b (Z)V setSelected
	a (Lesp;)V updateWidgetNarration
evt$f net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	<init> (IIIILsw;)V <init>
	a (Leox;)V renderIcon
evt$g net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton
	c this$0
	<init> (Levt;IILbey;)V <init>
	b (Lbey;)Ltj; createEffectDescription
	a (I)V updateStatus
evu net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	x TEXTURE
	<init> (Lcbj;Lbyn;Lsw;)V <init>
	<clinit> ()V <clinit>
evv net/minecraft/client/gui/screens/inventory/BookEditScreen
	a TEXT_WIDTH
	b TEXT_HEIGHT
	c IMAGE_WIDTH
	k IMAGE_HEIGHT
	l EDIT_TITLE_LABEL
	m FINALIZE_WARNING_LABEL
	n BLACK_CURSOR
	o GRAY_CURSOR
	p owner
	q book
	r isModified
	s isSigning
	t frameTick
	u currentPage
	v pages
	w title
	x pageEdit
	y titleEdit
	z lastClickTime
	A lastIndex
	C forwardButton
	D backButton
	E doneButton
	F signButton
	G finalizeButton
	H cancelButton
	I hand
	J displayCache
	K pageMsg
	L ownerText
	<init> (Lbyo;Lcfz;Lbdw;)V <init>
	a (Ljava/lang/String;)V setClipboard
	l ()Ljava/lang/String; getClipboard
	B ()I getNumPages
	f ()V tick
	b ()V init
	C ()V pageBack
	D ()V pageForward
	E ()V updateButtonVisibility
	F ()V eraseEmptyTrailingPages
	c (Z)V saveChanges
	e (Z)V updateLocalCopy
	G ()V appendPageToBook
	a (III)Z keyPressed
	a (CI)Z charTyped
	c (III)Z bookKeyPressed
	H ()V keyUp
	I ()V keyDown
	a (I)V changeLine
	J ()V keyHome
	K ()V keyEnd
	d (III)Z titleKeyPressed
	L ()Ljava/lang/String; getCurrentPageText
	b (Ljava/lang/String;)V setCurrentPageText
	a (Leox;IIF)V render
	a (Leox;Levv$c;Z)V renderCursor
	a (Leox;[Lfkc;)V renderHighlight
	a (Levv$c;)Levv$c; convertScreenToLocal
	b (Levv$c;)Levv$c; convertLocalToScreen
	a (DDI)Z mouseClicked
	b (I)V selectWord
	a (DDIDD)Z mouseDragged
	M ()Levv$a; getDisplayCache
	N ()V clearDisplayCache
	O ()V clearDisplayCacheAfterPageChange
	P ()Levv$a; rebuildDisplayCache
	a ([II)I findLineFromPos
	a (Ljava/lang/String;Lenz;IIII)Lfkc; createPartialLineSelection
	a (Levv$c;Levv$c;)Lfkc; createSelection
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;Lts;II)V lambda$rebuildDisplayCache$10
	a (Lepi;)V lambda$init$9
	b (Lepi;)V lambda$init$8
	c (Lepi;)V lambda$init$7
	d (Lepi;)V lambda$init$6
	e (Lepi;)V lambda$init$5
	f (Lepi;)V lambda$init$4
	c (Ljava/lang/String;)Z lambda$new$3
	d (Ljava/lang/String;)V lambda$new$2
	Q ()Ljava/lang/String; lambda$new$1
	e (Ljava/lang/String;)Z lambda$new$0
	<clinit> ()V <clinit>
evv$a net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache
	a EMPTY
	b fullText
	c cursor
	d cursorAtEnd
	e lineStarts
	f lines
	g selection
	<init> (Ljava/lang/String;Levv$c;Z[I[Levv$b;[Lfkc;)V <init>
	a (Leov;Levv$c;)I getIndexAtPosition
	a (II)I changeLine
	a (I)I findLineStart
	b (I)I findLineEnd
	<clinit> ()V <clinit>
evv$b net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo
	a style
	b contents
	c asComponent
	d x
	e y
	<init> (Lts;Ljava/lang/String;II)V <init>
evv$c net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a x
	b y
	<init> (II)V <init>
evw net/minecraft/client/gui/screens/inventory/BookViewScreen
	a PAGE_INDICATOR_TEXT_Y_OFFSET
	b PAGE_TEXT_X_OFFSET
	c PAGE_TEXT_Y_OFFSET
	k EMPTY_ACCESS
	l BOOK_LOCATION
	m TEXT_WIDTH
	n TEXT_HEIGHT
	o IMAGE_WIDTH
	p IMAGE_HEIGHT
	q bookAccess
	r currentPage
	s cachedPageComponents
	t cachedPage
	u pageMsg
	v forwardButton
	w backButton
	x playTurnSound
	<init> (Levw$a;)V <init>
	<init> ()V <init>
	<init> (Levw$a;Z)V <init>
	a (Levw$a;)V setBookAccess
	a (I)Z setPage
	b (I)Z forcePage
	b ()V init
	l ()V createMenuControls
	B ()V createPageControlButtons
	C ()I getNumPages
	D ()V pageBack
	E ()V pageForward
	G ()V updateButtonVisibility
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (DDI)Z mouseClicked
	a (Lts;)Z handleComponentClicked
	F ()V closeScreen
	a (DD)Lts; getClickedComponentStyleAt
	a (Lqr;)Ljava/util/List; loadPages
	a (Lqr;Ljava/util/function/Consumer;)V loadPages
	a (Lqr;Lqx;I)Ljava/lang/String; lambda$loadPages$3
	a (Lepi;)V lambda$createPageControlButtons$2
	b (Lepi;)V lambda$createPageControlButtons$1
	c (Lepi;)V lambda$createMenuControls$0
	<clinit> ()V <clinit>
evw$1 net/minecraft/client/gui/screens/inventory/BookViewScreen$1
	<init> ()V <init>
	a ()I getPageCount
	a (I)Lta; getPageRaw
evw$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lta; getPageRaw
	b (I)Lta; getPage
	a (Lcfz;)Levw$a; fromItem
evw$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	<init> (Lcfz;)V <init>
	b (Lcfz;)Ljava/util/List; readPages
	a ()I getPageCount
	a (I)Lta; getPageRaw
evw$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	<init> (Lcfz;)V <init>
	b (Lcfz;)Ljava/util/List; readPages
	a ()I getPageCount
	a (I)Lta; getPageRaw
evx net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	w BREWING_STAND_LOCATION
	x BUBBLELENGTHS
	<init> (Lcbk;Lbyn;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
evy net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	w BG_LOCATION
	<init> (Lcbl;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (Leox;Ljava/lang/Integer;Ldyo;ZZZZ)V renderResultingMap
	a (Leox;Ljava/lang/Integer;Ldyo;IIF)V renderMap
	<clinit> ()V <clinit>
evz net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	m autoCommandBlock
	n modeButton
	o conditionalButton
	p autoexecButton
	q mode
	r conditional
	s autoexec
	<init> (Lczx;)V <init>
	l ()Lcln; getCommandBlock
	B ()I getPreviousY
	b ()V init
	e (Z)V enableControls
	D ()V updateGui
	a (Lenn;II)V resize
	a (Lcln;)V populateAndSendPacket
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$3
	b (Lepp;Ljava/lang/Boolean;)V lambda$init$2
	a (Lepp;Lczx$a;)V lambda$init$1
	a (Lczx$a;)Lsw; lambda$init$0
evz$1 net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen$1
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	<clinit> ()V <clinit>
ewa net/minecraft/client/gui/screens/inventory/ContainerScreen
	w CONTAINER_BACKGROUND
	x containerRows
	<init> (Lcbm;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
ewb net/minecraft/client/gui/screens/inventory/CraftingScreen
	w CRAFTING_TABLE_LOCATION
	x RECIPE_BUTTON_LOCATION
	y recipeBookComponent
	z widthTooNarrow
	<init> (Lcbu;Lbyn;Lsw;)V <init>
	b ()V init
	B ()V containerTick
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (IIIIDD)Z isHovering
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (Lccx;IILcbo;)V slotClicked
	D ()V recipesUpdated
	E ()Leyc; getRecipeBookComponent
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ewc net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	<init> (Lenn;)V <init>
	a (Lcbf;ILcfz;)V slotChanged
	a (Lcbf;II)V dataChanged
ewd net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	w CREATIVE_TABS_LOCATION
	x GUI_CREATIVE_TAB_PREFIX
	y CUSTOM_SLOT_LOCK
	z NUM_ROWS
	A NUM_COLS
	C TAB_WIDTH
	D TAB_HEIGHT
	E SCROLLER_WIDTH
	F SCROLLER_HEIGHT
	G CONTAINER
	H TRASH_SLOT_TOOLTIP
	I TEXT_COLOR
	J selectedTab
	K scrollOffs
	L scrolling
	M searchBox
	N originalSlots
	O destroyItemSlot
	P listener
	Q ignoreTextInput
	R hasClickedOutside
	S visibleTags
	T displayOperatorCreativeTab
	<init> (Lbyo;Lcaw;Z)V <init>
	a (Lbyo;)Z hasPermissions
	a (Lcaw;ZLhg$b;)V tryRefreshInvalidatedTabs
	a (Ljava/util/Collection;)V refreshCurrentTabContents
	B ()V containerTick
	a (Lccx;IILcbo;)V slotClicked
	a (Lccx;)Z isCreativeSlot
	b ()V init
	a (Lenn;II)V resize
	ax_ ()V removed
	a (CI)Z charTyped
	a (III)Z keyPressed
	b (III)Z keyReleased
	E ()V refreshSearchResults
	a (Ljava/lang/String;)V updateVisibleTags
	b (Leox;II)V renderLabels
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	G ()Z canScroll
	a (Lcef;)V selectTab
	a (DDD)Z mouseScrolled
	a (DDIII)Z hasClickedOutside
	a (DD)Z insideScrollbar
	a (DDIDD)Z mouseDragged
	a (Leox;IIF)V render
	a (Lcfz;)Ljava/util/List; getTooltipFromContainerItem
	a (Leox;FII)V renderBg
	b (Lcef;)I getTabX
	c (Lcef;)I getTabY
	a (Lcef;DD)Z checkTabClicked
	a (Leox;Lcef;II)Z checkTabHovering
	a (Leox;Lcef;)V renderTabButton
	D ()Z isInventoryOpen
	a (Lenn;IZZ)V handleHotbarLoadOrSave
	a (Lcfz;Ljava/util/List;Lanl;)V lambda$getTooltipFromContainerItem$3
	a (Ljava/util/function/Predicate;Lanl;)Z lambda$updateVisibleTags$2
	a (Ljava/lang/String;Ljava/lang/String;Lacq;)Z lambda$updateVisibleTags$1
	a (Ljava/lang/String;Lacq;)Z lambda$updateVisibleTags$0
	<clinit> ()V <clinit>
ewd$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	<init> (Lbdq;III)V <init>
	a (Lbyo;)Z mayPickup
ewd$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	k items
	l inventoryMenu
	<init> (Lbyo;)V <init>
	a (Lbyo;)Z stillValid
	l ()I calculateRowCount
	a (F)I getRowIndexForScroll
	e (I)F getScrollForRowIndex
	a (FD)F subtractInputFromScroll
	b (F)V scrollTo
	m ()Z canScroll
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	b (Lccx;)Z canDragTo
	g ()Lcfz; getCarried
	b (Lcfz;)V setCarried
ewd$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	<init> (Lccx;III)V <init>
	a (Lbyo;Lcfz;)V onTake
	a (Lcfz;)Z mayPlace
	e ()Lcfz; getItem
	f ()Z hasItem
	d (Lcfz;)V setByPlayer
	e (Lcfz;)V set
	d ()V setChanged
	a ()I getMaxStackSize
	a_ (Lcfz;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	a (I)Lcfz; remove
	b ()Z isActive
	a (Lbyo;)Z mayPickup
ewe net/minecraft/client/gui/screens/inventory/CyclingSlotBackground
	a ICON_CHANGE_TICK_RATE
	b ICON_SIZE
	c ICON_TRANSITION_TICK_DURATION
	d slotIndex
	e icons
	f tick
	g iconIndex
	<init> (I)V <init>
	a (Ljava/util/List;)V tick
	a (Lcbf;Leox;FII)V render
	a (Lccx;Lacq;FLeox;II)V renderIcon
	a (F)F getIconTransitionTransparency
ewf net/minecraft/client/gui/screens/inventory/DispenserScreen
	w CONTAINER_LOCATION
	<init> (Lcbw;Lbyn;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
ewg net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	<init> (Lcbf;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	F ()Z canSeeEffects
	c (Leox;II)V renderEffects
	a (Leox;IILjava/lang/Iterable;Z)V renderBackgrounds
	b (Leox;IILjava/lang/Iterable;Z)V renderIcons
	a (Leox;IILjava/lang/Iterable;)V renderLabels
	a (Lbfa;)Lsw; getEffectName
ewh net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a ALT_FONT
	b ROOT_STYLE
	c INSTANCE
	d random
	e words
	<init> ()V <init>
	a ()Lewh; getInstance
	a (Leov;I)Lta; getRandomName
	a (J)V initSeed
	<clinit> ()V <clinit>
ewi net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	E ENCHANTING_TABLE_LOCATION
	F ENCHANTING_BOOK_LOCATION
	G random
	H bookModel
	w time
	x flip
	y oFlip
	z flipT
	A flipA
	C open
	D oOpen
	I last
	<init> (Lcbx;Lbyn;Lsw;)V <init>
	b ()V init
	B ()V containerTick
	a (DDI)Z mouseClicked
	a (Leox;FII)V renderBg
	c (Leox;IIF)V renderBook
	a (Leox;IIF)V render
	D ()V tickBook
	<clinit> ()V <clinit>
ewj net/minecraft/client/gui/screens/inventory/FurnaceScreen
	x TEXTURE
	<init> (Lcbz;Lbyn;Lsw;)V <init>
	<clinit> ()V <clinit>
ewk net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	w GRINDSTONE_LOCATION
	<init> (Lccb;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
ewl net/minecraft/client/gui/screens/inventory/HangingSignEditScreen
	b MAGIC_BACKGROUND_SCALE
	c TEXT_SCALE
	k TEXTURE_WIDTH
	l TEXTURE_HEIGHT
	m texture
	<init> (Ldav;ZZ)V <init>
	b (Leox;Ldcb;)V offsetSign
	a (Leox;Ldcb;)V renderSignBackground
	l ()Lorg/joml/Vector3f; getSignTextScale
	<clinit> ()V <clinit>
ewm net/minecraft/client/gui/screens/inventory/HopperScreen
	w HOPPER_LOCATION
	<init> (Lccc;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
ewn net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	w HORSE_INVENTORY_LOCATION
	x horse
	y xMouse
	z yMouse
	<init> (Lccd;Lbyn;Lbtk;)V <init>
	a (Leox;FII)V renderBg
	a (Leox;IIF)V render
	<clinit> ()V <clinit>
ewo net/minecraft/client/gui/screens/inventory/InventoryScreen
	w RECIPE_BUTTON_LOCATION
	x xMouse
	y yMouse
	z recipeBookComponent
	A widthTooNarrow
	C buttonClicked
	<init> (Lbyo;)V <init>
	B ()V containerTick
	b ()V init
	b (Leox;II)V renderLabels
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (Leox;IIIFFLbfz;)V renderEntityInInventoryFollowsMouse
	a (Leox;IIILorg/joml/Quaternionf;Lorg/joml/Quaternionf;Lbfz;)V renderEntityInInventory
	a (IIIIDD)Z isHovering
	a (DDI)Z mouseClicked
	b (DDI)Z mouseReleased
	a (DDIII)Z hasClickedOutside
	a (Lccx;IILcbo;)V slotClicked
	D ()V recipesUpdated
	E ()Leyc; getRecipeBookComponent
	a (Lfow;Lbfz;Leox;)V lambda$renderEntityInInventory$1
	a (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ewp net/minecraft/client/gui/screens/inventory/ItemCombinerScreen
	w menuResource
	<init> (Lccf;Lbyn;Lsw;Lacq;)V <init>
	D ()V subInit
	b ()V init
	ax_ ()V removed
	a (Leox;IIF)V render
	c (Leox;IIF)V renderFg
	a (Leox;FII)V renderBg
	c (Leox;II)V renderErrorIcon
	a (Lcbf;II)V dataChanged
	a (Lcbf;ILcfz;)V slotChanged
ewq net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	a MAX_LEVELS
	b JOINT_LABEL
	c POOL_LABEL
	k NAME_LABEL
	l TARGET_LABEL
	m FINAL_STATE_LABEL
	n jigsawEntity
	o nameEdit
	p targetEdit
	q poolEdit
	r finalStateEdit
	s levels
	t keepJigsaws
	u jointButton
	v doneButton
	w generateButton
	x joint
	<init> (Ldam;)V <init>
	f ()V tick
	l ()V onDone
	B ()V onCancel
	C ()V sendToServer
	D ()V sendGenerate
	aw_ ()V onClose
	b ()V init
	E ()V updateValidity
	a (Lenn;II)V resize
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$7
	b (Lepi;)V lambda$init$6
	c (Lepi;)V lambda$init$5
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$4
	a (Lepp;Ldam$a;)V lambda$init$3
	a (Ljava/lang/String;)V lambda$init$2
	b (Ljava/lang/String;)V lambda$init$1
	c (Ljava/lang/String;)V lambda$init$0
	<clinit> ()V <clinit>
ewq$1 net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen$1
	a this$0
	<init> (Lewq;IIIILsw;D)V <init>
	b ()V updateMessage
	a ()V applyValue
ewr net/minecraft/client/gui/screens/inventory/LecternScreen
	q menu
	r listener
	<init> (Lcch;Lbyn;Lsw;)V <init>
	G ()Lcch; getMenu
	b ()V init
	aw_ ()V onClose
	ax_ ()V removed
	l ()V createMenuControls
	D ()V pageBack
	E ()V pageForward
	b (I)Z forcePage
	c (I)V sendButtonClick
	az_ ()Z isPauseScreen
	H ()V bookChanged
	I ()V pageChanged
	F ()V closeScreen
	C ()Lcbf; getMenu
	a (Lepi;)V lambda$createMenuControls$1
	b (Lepi;)V lambda$createMenuControls$0
ewr$1 net/minecraft/client/gui/screens/inventory/LecternScreen$1
	a this$0
	<init> (Lewr;)V <init>
	a (Lcbf;ILcfz;)V slotChanged
	a (Lcbf;II)V dataChanged
ews net/minecraft/client/gui/screens/inventory/LoomScreen
	w BG_LOCATION
	x PATTERN_COLUMNS
	y PATTERN_ROWS
	z SCROLLER_WIDTH
	A SCROLLER_HEIGHT
	C PATTERN_IMAGE_SIZE
	D SCROLLER_FULL_HEIGHT
	E PATTERNS_X
	F PATTERNS_Y
	G flag
	H resultBannerPatterns
	I bannerStack
	J dyeStack
	K patternStack
	L displayPatterns
	M hasMaxPatterns
	N scrollOffs
	O scrolling
	P startRow
	<init> (Lcci;Lbyn;Lsw;)V <init>
	b ()V init
	a (Leox;IIF)V render
	D ()I totalRowCount
	a (Leox;FII)V renderBg
	a (Leox;Lhe;II)V renderPattern
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	a (DDIII)Z hasClickedOutside
	E ()V containerChanged
	<clinit> ()V <clinit>
ewt net/minecraft/client/gui/screens/inventory/MenuAccess
	C ()Lcbf; getMenu
ewu net/minecraft/client/gui/screens/inventory/MerchantScreen
	w VILLAGER_LOCATION
	x TEXTURE_WIDTH
	y TEXTURE_HEIGHT
	z MERCHANT_MENU_PART_X
	A PROGRESS_BAR_X
	C PROGRESS_BAR_Y
	D SELL_ITEM_1_X
	E SELL_ITEM_2_X
	F BUY_ITEM_X
	G LABEL_Y
	H NUMBER_OF_OFFER_BUTTONS
	I TRADE_BUTTON_X
	J TRADE_BUTTON_HEIGHT
	K TRADE_BUTTON_WIDTH
	L SCROLLER_HEIGHT
	M SCROLLER_WIDTH
	N SCROLL_BAR_HEIGHT
	O SCROLL_BAR_TOP_POS_Y
	P SCROLL_BAR_START_X
	Q TRADES_LABEL
	R LEVEL_SEPARATOR
	S DEPRECATED_TOOLTIP
	T shopItem
	U tradeOfferButtons
	V scrollOff
	W isDragging
	<init> (Lccm;Lbyn;Lsw;)V <init>
	D ()V postButtonClick
	b ()V init
	b (Leox;II)V renderLabels
	a (Leox;FII)V renderBg
	a (Leox;IILclk;)V renderProgressBar
	a (Leox;IILcll;)V renderScroller
	a (Leox;IIF)V render
	a (Leox;Lclk;II)V renderButtonArrows
	a (Leox;Lcfz;Lcfz;II)V renderAndDecorateCostA
	a (I)Z canScroll
	a (DDD)Z mouseScrolled
	a (DDIDD)Z mouseDragged
	a (DDI)Z mouseClicked
	a (Lepi;)V lambda$init$0
	a (Lewu;)Leov; access$000
	b (Lewu;)Leov; access$100
	c (Lewu;)Leov; access$200
	<clinit> ()V <clinit>
ewu$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	b this$0
	<init> (Lewu;IIILepi$c;)V <init>
	a ()I getIndex
	a (Leox;II)V renderToolTip
ewv net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	m commandBlock
	<init> (Lcln;)V <init>
	l ()Lcln; getCommandBlock
	B ()I getPreviousY
	b ()V init
	a (Lcln;)V populateAndSendPacket
eww net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
	<init> (IIZLepi$c;Z)V <init>
	b (Leox;IIF)V renderWidget
	a (Lfzc;)V playDownSound
ewx net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	w CONTAINER_TEXTURE
	<init> (Lccu;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	<clinit> ()V <clinit>
ewy net/minecraft/client/gui/screens/inventory/SignEditScreen
	b MAGIC_SCALE_NUMBER
	c MAGIC_TEXT_SCALE
	k TEXT_SCALE
	l signModel
	<init> (Ldav;ZZ)V <init>
	b ()V init
	b (Leox;Ldcb;)V offsetSign
	a (Leox;Ldcb;)V renderSignBackground
	l ()Lorg/joml/Vector3f; getSignTextScale
	<clinit> ()V <clinit>
ewz net/minecraft/client/gui/screens/inventory/SmithingScreen
	D SMITHING_LOCATION
	E EMPTY_SLOT_SMITHING_TEMPLATE_ARMOR_TRIM
	F EMPTY_SLOT_SMITHING_TEMPLATE_NETHERITE_UPGRADE
	G MISSING_TEMPLATE_TOOLTIP
	H ERROR_TOOLTIP
	I EMPTY_SLOT_SMITHING_TEMPLATES
	J TITLE_LABEL_X
	K TITLE_LABEL_Y
	L ERROR_ICON_WIDTH
	M ERROR_ICON_HEIGHT
	N ERROR_ICON_X
	O ERROR_ICON_Y
	P TOOLTIP_WIDTH
	w ARMOR_STAND_Y_ROT
	x ARMOR_STAND_X_ROT
	y ARMOR_STAND_ANGLE
	z ARMOR_STAND_SCALE
	A ARMOR_STAND_OFFSET_Y
	C ARMOR_STAND_OFFSET_X
	Q templateIcon
	R baseIcon
	S additionalIcon
	T armorStandPreview
	<init> (Lccy;Lbyn;Lsw;)V <init>
	D ()V subInit
	B ()V containerTick
	E ()Ljava/util/Optional; getTemplateItem
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (Lcbf;ILcfz;)V slotChanged
	b (Lcfz;)V updateArmorStandPreview
	c (Leox;II)V renderErrorIcon
	d (Leox;II)V renderOnboardingTooltips
	F ()Z hasRecipeError
	a (Leox;IILsw;)V lambda$renderOnboardingTooltips$0
	<clinit> ()V <clinit>
exa net/minecraft/client/gui/screens/inventory/SmokerScreen
	x TEXTURE
	<init> (Lccz;Lbyn;Lsw;)V <init>
	<clinit> ()V <clinit>
exb net/minecraft/client/gui/screens/inventory/StonecutterScreen
	w BG_LOCATION
	x SCROLLER_WIDTH
	y SCROLLER_HEIGHT
	z RECIPES_COLUMNS
	A RECIPES_ROWS
	C RECIPES_IMAGE_SIZE_WIDTH
	D RECIPES_IMAGE_SIZE_HEIGHT
	E SCROLLER_FULL_HEIGHT
	F RECIPES_X
	G RECIPES_Y
	H scrollOffs
	I scrolling
	J startIndex
	K displayRecipes
	<init> (Lcdb;Lbyn;Lsw;)V <init>
	a (Leox;IIF)V render
	a (Leox;FII)V renderBg
	a (Leox;II)V renderTooltip
	a (Leox;IIIII)V renderButtons
	b (Leox;III)V renderRecipes
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDD)Z mouseScrolled
	E ()Z isScrollBarActive
	D ()I getOffscreenRows
	F ()V containerChanged
	<clinit> ()V <clinit>
exc net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	a NAME_LABEL
	b POSITION_LABEL
	c SIZE_LABEL
	k INTEGRITY_LABEL
	l CUSTOM_DATA_LABEL
	m INCLUDE_ENTITIES_LABEL
	n DETECT_SIZE_LABEL
	o SHOW_AIR_LABEL
	p SHOW_BOUNDING_BOX_LABEL
	q ALL_MODES
	r DEFAULT_MODES
	s structure
	t initialMirror
	u initialRotation
	v initialMode
	w initialEntityIgnoring
	x initialShowAir
	y initialShowBoundingBox
	z nameEdit
	A posXEdit
	C posYEdit
	D posZEdit
	E sizeXEdit
	F sizeYEdit
	G sizeZEdit
	H integrityEdit
	I seedEdit
	J dataEdit
	K saveButton
	L loadButton
	M rot0Button
	N rot90Button
	O rot180Button
	P rot270Button
	Q detectButton
	R includeEntitiesButton
	S mirrorButton
	T toggleAirButton
	U toggleBoundingBox
	V decimalFormat
	<init> (Ldba;)V <init>
	f ()V tick
	l ()V onDone
	B ()V onCancel
	b ()V init
	a (Lenn;II)V resize
	C ()V updateDirectionButtons
	a (Lddl;)V updateMode
	a (Ldba$a;)Z sendToServer
	a (Ljava/lang/String;)J parseSeed
	b (Ljava/lang/String;)F parseIntegrity
	c (Ljava/lang/String;)I parseCoordinate
	aw_ ()V onClose
	a (III)Z keyPressed
	a (Leox;IIF)V render
	az_ ()Z isPauseScreen
	a (Lepi;)V lambda$init$15
	b (Lepi;)V lambda$init$14
	c (Lepi;)V lambda$init$13
	d (Lepi;)V lambda$init$12
	a (Lepp;Ljava/lang/Boolean;)V lambda$init$11
	b (Lepp;Ljava/lang/Boolean;)V lambda$init$10
	a (Lepp;Lcui;)V lambda$init$9
	c (Lepp;Ljava/lang/Boolean;)V lambda$init$8
	e (Lepi;)V lambda$init$7
	a (Lepp;Lddl;)V lambda$init$6
	b (Lddl;)Lsw; lambda$init$5
	f (Lepi;)V lambda$init$4
	g (Lepi;)V lambda$init$3
	h (Lepi;)V lambda$init$2
	i (Lepi;)V lambda$init$1
	c (Lddl;)Z lambda$static$0
	a (Lexc;Ljava/lang/String;CI)Z access$000
	<clinit> ()V <clinit>
exc$1 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$1
	d this$0
	<init> (Lexc;Leov;IIIILsw;)V <init>
	a (CI)Z charTyped
exc$2 net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen$2
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	<clinit> ()V <clinit>
exd net/minecraft/client/gui/screens/inventory/package-info
exe net/minecraft/client/gui/screens/inventory/tooltip/BelowOrAboveWidgetTooltipPositioner
	a widget
	<init> (Lepf;)V <init>
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
exf net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip
	a TEXTURE_LOCATION
	b MARGIN_Y
	c BORDER_WIDTH
	d TEX_SIZE
	e SLOT_SIZE_X
	f SLOT_SIZE_Y
	g items
	h weight
	<init> (Lcde;)V <init>
	a ()I getHeight
	a (Leov;)I getWidth
	a (Leov;IILeox;)V renderImage
	a (IIIZLeox;Leov;)V renderSlot
	a (IIIILeox;)V drawBorder
	a (Leox;IILexf$a;)V blit
	b ()I gridSizeX
	c ()I gridSizeY
	<clinit> ()V <clinit>
exf$a net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture
	a SLOT
	b BLOCKED_SLOT
	c BORDER_VERTICAL
	d BORDER_HORIZONTAL_TOP
	e BORDER_HORIZONTAL_BOTTOM
	f BORDER_CORNER_TOP
	g BORDER_CORNER_BOTTOM
	h x
	i y
	j w
	k h
	l $VALUES
	values ()[Lexf$a; values
	valueOf (Ljava/lang/String;)Lexf$a; valueOf
	<init> (Ljava/lang/String;IIIII)V <init>
	a ()[Lexf$a; $values
	<clinit> ()V <clinit>
exg net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip
	a text
	<init> (Laom;)V <init>
	a (Leov;)I getWidth
	a ()I getHeight
	a (Leov;IILorg/joml/Matrix4f;Lfjx$a;)V renderText
exh net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent
	a (Laom;)Lexh; create
	a (Lcdf;)Lexh; create
	a ()I getHeight
	a (Leov;)I getWidth
	a (Leov;IILorg/joml/Matrix4f;Lfjx$a;)V renderText
	a (Leov;IILeox;)V renderImage
exi net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
exj net/minecraft/client/gui/screens/inventory/tooltip/DefaultTooltipPositioner
	a INSTANCE
	<init> ()V <init>
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
	a (IILorg/joml/Vector2i;II)V positionTooltip
	<clinit> ()V <clinit>
exk net/minecraft/client/gui/screens/inventory/tooltip/MenuTooltipPositioner
	c MARGIN
	d MOUSE_OFFSET_X
	a MAX_OVERLAP_WITH_WIDGET
	b MAX_DISTANCE_TO_WIDGET
	e widget
	<init> (Lepf;)V <init>
	a (IIIIII)Lorg/joml/Vector2ic; positionTooltip
	a (III)I getOffset
exl net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil
	a MOUSE_OFFSET
	f PADDING
	b PADDING_LEFT
	c PADDING_RIGHT
	d PADDING_TOP
	e PADDING_BOTTOM
	g BACKGROUND_COLOR
	h BORDER_COLOR_TOP
	i BORDER_COLOR_BOTTOM
	<init> ()V <init>
	a (Leox;IIIII)V renderTooltipBackground
	a (Leox;IIIIIII)V renderFrameGradient
	b (Leox;IIIII)V renderVerticalLine
	a (Leox;IIIIII)V renderVerticalLineGradient
	c (Leox;IIIII)V renderHorizontalLine
	b (Leox;IIIIII)V renderRectangle
exm net/minecraft/client/gui/screens/inventory/tooltip/package-info
exn net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	a BUTTON_ROW_WIDTH
	b TOP_ROW_BUTTON_WIDTH
	c LOWER_ROW_BUTTON_WIDTH
	k FOOTER_HEIGHT
	m LOGGER
	n pinger
	o lastScreen
	l serverSelectionList
	p servers
	q editButton
	r selectButton
	s deleteButton
	t toolTip
	u editingServer
	v lanServerList
	w lanServerDetector
	x initedOnce
	<init> (Leuq;)V <init>
	b ()V init
	f ()V tick
	ax_ ()V removed
	E ()V refreshServerList
	c (Z)V deleteCallback
	e (Z)V editServerCallback
	f (Z)V addServerCallback
	g (Z)V directJoinCallback
	a (III)Z keyPressed
	a (Leox;IIF)V render
	l ()V joinSelectedServer
	a (Lffd;)V join
	a (Lexq$a;)V setSelected
	B ()V onSelectedChange
	C ()Lfff; getPinger
	c (Ljava/util/List;)V setToolTip
	D ()Lffe; getServers
	a (Lepi;)V lambda$init$6
	b (Lepi;)V lambda$init$5
	c (Lepi;)V lambda$init$4
	d (Lepi;)V lambda$init$3
	e (Lepi;)V lambda$init$2
	f (Lepi;)V lambda$init$1
	g (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
exo net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen
	b TITLE
	c CONTENT
	k CHECK
	l NARRATION
	m previous
	<init> (Leuq;)V <init>
	a (I)V initButtons
	a (Lepi;)V lambda$initButtons$0
	<clinit> ()V <clinit>
exp net/minecraft/client/gui/screens/multiplayer/SafetyScreen
	b TITLE
	c CONTENT
	k CHECK
	l NARRATION
	m previous
	<init> (Leuq;)V <init>
	a (I)V initButtons
	a (Lepi;)V lambda$initButtons$1
	b (Lepi;)V lambda$initButtons$0
	<clinit> ()V <clinit>
exq net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	a LOGGER
	l THREAD_POOL
	m ICON_MISSING
	n ICON_OVERLAY_LOCATION
	o GUI_ICONS_LOCATION
	p SCANNING_LABEL
	q CANT_RESOLVE_TEXT
	r CANT_CONNECT_TEXT
	s INCOMPATIBLE_STATUS
	t NO_CONNECTION_STATUS
	u PINGING_STATUS
	v ONLINE_STATUS
	w screen
	x onlineServers
	y lanHeader
	z networkServers
	<init> (Lexn;Lenn;IIIII)V <init>
	e ()V refreshEntries
	a (Lexq$a;)V setSelected
	a (III)Z keyPressed
	a (Lffe;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	c ()I getScrollbarPosition
	b ()I getRowWidth
	d ()V removed
	a (Lepc$a;)V setSelected
	b (Lexq;Lepc$a;)V lambda$refreshEntries$3
	c (Lexq;Lepc$a;)V lambda$refreshEntries$2
	a (Lts;)Lts; lambda$static$1
	b (Lts;)Lts; lambda$static$0
	a (Lexq;Lepc$a;)V access$000
	a (Lexq;I)I access$100
	<clinit> ()V <clinit>
exq$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
	<init> ()V <init>
	close ()V close
exq$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
	<init> ()V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
exq$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	c ICON_WIDTH
	d LAN_SERVER_HEADER
	e HIDDEN_ADDRESS_TEXT
	f screen
	a minecraft
	b serverData
	g lastClickTime
	<init> (Lexn;Lfyq;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	b ()Lfyq; getServerData
	a ()Lsw; getNarration
	d ()Lsw; getServerNarration
	<clinit> ()V <clinit>
exq$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d ICON_OVERLAY_X_MOVE_RIGHT
	e ICON_OVERLAY_X_MOVE_LEFT
	f ICON_OVERLAY_X_MOVE_DOWN
	g ICON_OVERLAY_X_MOVE_UP
	h ICON_OVERLAY_Y_UNSELECTED
	i ICON_OVERLAY_Y_SELECTED
	j screen
	k minecraft
	l serverData
	m icon
	n lastIconBytes
	o lastClickTime
	a this$0
	<init> (Lexq;Lexn;Lffd;)V <init>
	a (Leox;IIIIIIIZF)V render
	e ()Z pingCompleted
	f ()Z isCompatible
	b ()V updateServerList
	a (Leox;IILacq;)V drawIcon
	g ()Z canJoin
	a ([B)Z uploadServerIcon
	a (III)Z keyPressed
	a (II)V swap
	a (DDI)Z mouseClicked
	d ()Lffd; getServerData
	a ()Lsw; getNarration
	close ()V close
	h ()V lambda$render$1
	i ()V lambda$render$0
exr net/minecraft/client/gui/screens/multiplayer/WarningScreen
	b content
	c check
	k narration
	a stopShowing
	l message
	<init> (Lsw;Lsw;Lsw;)V <init>
	<init> (Lsw;Lsw;Lsw;Lsw;)V <init>
	a (I)V initButtons
	b ()V init
	au_ ()Lsw; getNarrationMessage
	a (Leox;IIF)V render
	c (Leox;)V renderTitle
	l ()I getLineHeight
exs net/minecraft/client/gui/screens/multiplayer/package-info
ext net/minecraft/client/gui/screens/package-info
exu net/minecraft/client/gui/screens/packs/PackSelectionModel
	a repository
	b selected
	c unselected
	d iconGetter
	e onListChanged
	f output
	<init> (Ljava/lang/Runnable;Ljava/util/function/Function;Laki;Ljava/util/function/Consumer;)V <init>
	a ()Ljava/util/stream/Stream; getUnselected
	b ()Ljava/util/stream/Stream; getSelected
	e ()V updateRepoSelectedList
	c ()V commit
	d ()V findNewPacks
	a (Lakg;)Lexu$a; lambda$getSelected$1
	b (Lakg;)Lexu$a; lambda$getUnselected$0
exu$a net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry
	a ()Lacq; getIconTexture
	b ()Lakh; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lsw; getTitle
	e ()Lsw; getDescription
	f ()Lakj; getPackSource
	g ()Lsw; getExtendedDescription
	h ()Z isFixedPosition
	i ()Z isRequired
	j ()V select
	k ()V unselect
	l ()V moveUp
	m ()V moveDown
	n ()Z isSelected
	o ()Z canSelect
	p ()Z canUnselect
	q ()Z canMoveUp
	r ()Z canMoveDown
exu$b net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase
	b pack
	a this$0
	<init> (Lexu;Lakg;)V <init>
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
	a ()Lacq; getIconTexture
	b ()Lakh; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lsw; getTitle
	e ()Lsw; getDescription
	f ()Lakj; getPackSource
	h ()Z isFixedPosition
	i ()Z isRequired
	u ()V toggleSelection
	v ()V updateHighContrastOptionInstance
	a (I)V move
	q ()Z canMoveUp
	l ()V moveUp
	r ()Z canMoveDown
	m ()V moveDown
exu$c net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry
	b this$0
	<init> (Lexu;Lakg;)V <init>
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
	n ()Z isSelected
	j ()V select
	k ()V unselect
exu$d net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry
	b this$0
	<init> (Lexu;Lakg;)V <init>
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
	n ()Z isSelected
	j ()V select
	k ()V unselect
exv net/minecraft/client/gui/screens/packs/PackSelectionScreen
	a LOGGER
	b LIST_WIDTH
	c DRAG_AND_DROP
	k DIRECTORY_BUTTON_TOOLTIP
	l RELOAD_COOLDOWN
	m DEFAULT_ICON
	n model
	o watcher
	p ticksToReload
	q availablePackList
	r selectedPackList
	s packDir
	t doneButton
	u packIcons
	<init> (Laki;Ljava/util/function/Consumer;Ljava/nio/file/Path;Lsw;)V <init>
	aw_ ()V onClose
	B ()V closeWatcher
	b ()V init
	f ()V tick
	C ()V populateLists
	a (Lexw;Ljava/util/stream/Stream;)V updateList
	a (Lexw;)V updateFocus
	l ()V clearSelected
	D ()V reload
	a (Leox;IIF)V render
	a (Lenn;Ljava/util/List;Ljava/nio/file/Path;)V copyPacks
	a (Ljava/util/List;)V onFilesDrop
	a (Lfuw;Lakg;)Lacq; loadPackIcon
	a (Lakg;)Lacq; getPackIcon
	a (Lakg;Ljava/lang/String;)Lacq; lambda$getPackIcon$6
	a (Ljava/util/List;Z)V lambda$onFilesDrop$5
	a (Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$copyPacks$4
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/nio/file/Path;)V lambda$copyPacks$3
	a (Lexw;Ljava/lang/String;Lexu$a;)V lambda$updateList$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
exv$a net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher
	a watcher
	b packPath
	<init> (Ljava/nio/file/Path;)V <init>
	a (Ljava/nio/file/Path;)Lexv$a; create
	b (Ljava/nio/file/Path;)V watchDir
	a ()Z pollForChanges
	close ()V close
exw net/minecraft/client/gui/screens/packs/TransferableSelectionList
	a ICON_OVERLAY_LOCATION
	l INCOMPATIBLE_TITLE
	m INCOMPATIBLE_CONFIRM_TITLE
	n title
	o screen
	<init> (Lenn;Lexv;IILsw;)V <init>
	a (Leox;II)V renderHeader
	b ()I getRowWidth
	c ()I getScrollbarPosition
	a (III)Z keyPressed
	a (Lexw;I)I access$000
	<clinit> ()V <clinit>
exw$a net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry
	b ICON_OVERLAY_X_MOVE_RIGHT
	c ICON_OVERLAY_X_MOVE_LEFT
	d ICON_OVERLAY_X_MOVE_DOWN
	e ICON_OVERLAY_X_MOVE_UP
	f ICON_OVERLAY_Y_UNSELECTED
	g ICON_OVERLAY_Y_SELECTED
	h MAX_DESCRIPTION_WIDTH_PIXELS
	i MAX_NAME_WIDTH_PIXELS
	j TOO_LONG_NAME_SUFFIX
	k parent
	a minecraft
	l pack
	m nameDisplayCache
	n descriptionDisplayCache
	o incompatibleNameDisplayCache
	p incompatibleDescriptionDisplayCache
	<init> (Lenn;Lexw;Lexu$a;)V <init>
	a (Lenn;Lsw;)Laom; cacheName
	b (Lenn;Lsw;)Lepz; cacheDescription
	a ()Lsw; getNarration
	a (Leox;IIIIIIIZF)V render
	b ()Ljava/lang/String; getPackId
	e ()Z showHoverOverlay
	d ()V keyboardSelection
	f ()V keyboardMoveUp
	g ()V keyboardMoveDown
	h ()Z handlePackSelection
	a (DDI)Z mouseClicked
	b (Z)V lambda$handlePackSelection$0
exx net/minecraft/client/gui/screens/packs/package-info
exy net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	h fuels
	<init> ()V <init>
	a ()V initFilterButtonTextures
	a (Lccx;)V slotClicked
	a (Lcjc;Ljava/util/List;)V setupGhostRecipe
	b ()Ljava/util/Set; getFuelItems
	a (Lcfu;)Z lambda$setupGhostRecipe$0
exz net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	h FILTER_NAME
	<init> ()V <init>
	d ()Lsw; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
eya net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	<init> ()V <init>
	a ()V clear
	a (Lciz;II)V addIngredient
	a (I)Leya$a; get
	b ()I size
	c ()Lcjc; getRecipe
	a (Lcjc;)V setRecipe
	a (Leox;Lenn;IIZF)V render
eya$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	b ingredient
	c x
	d y
	a this$0
	<init> (Leya;Lciz;II)V <init>
	a ()I getX
	b ()I getY
	c ()Lcfz; getItem
eyb net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	b RECIPE_BOOK_LOCATION
	c MAX_ROW
	d MAX_ROW_LARGE
	e ITEM_RENDER_SCALE
	a BUTTON_SIZE
	f recipeButtons
	g isVisible
	h x
	i y
	j minecraft
	k collection
	l lastRecipeClicked
	m time
	n isFurnaceMenu
	<init> ()V <init>
	a (Lenn;Leyg;IIIIF)V init
	a ()Leyg; getRecipeCollection
	b ()Lcjc; getLastRecipeClicked
	a (DDI)Z mouseClicked
	a_ (DD)Z isMouseOver
	a (Leox;IIF)V render
	b (Z)V setVisible
	d ()Z isVisible
	b_ (Z)V setFocused
	aB_ ()Z isFocused
	<clinit> ()V <clinit>
eyb$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	c recipe
	d isCraftable
	a ingredientPos
	b this$0
	<init> (Leyb;IILcjc;Z)V <init>
	a (Lcjc;)V calculateIngredientsPositions
	a (Lesp;)V updateWidgetNarration
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	b (Leox;IIF)V renderWidget
eyb$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
	d this$1
	<init> (Leyb$a;II[Lcfz;)V <init>
eyb$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	c this$0
	<init> (Leyb;IILcjc;Z)V <init>
	a (Lcjc;)V calculateIngredientsPositions
eyc net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	a RECIPE_BOOK_LOCATION
	h SEARCH_HINT
	b IMAGE_WIDTH
	c IMAGE_HEIGHT
	i OFFSET_X_POSITION
	j ONLY_CRAFTABLES_TOOLTIP
	k ALL_RECIPES_TOOLTIP
	l xOffset
	m width
	n height
	d ghostRecipe
	o tabButtons
	p selectedTab
	e filterButton
	f menu
	g minecraft
	q searchBox
	r lastSearch
	s book
	t recipeBookPage
	u stackedContents
	v timesInventoryChanged
	w ignoreTextInput
	x visible
	y widthTooNarrow
	<init> ()V <init>
	a (IILenn;ZLccp;)V init
	e ()V initVisuals
	b ()V updateFilterButtonTooltip
	a ()V initFilterButtonTextures
	a (II)I updateScreenPosition
	f ()V toggleVisibility
	g ()Z isVisible
	k ()Z isVisibleAccordingToBookData
	b (Z)V setVisible
	a (Lccx;)V slotClicked
	c (Z)V updateCollections
	l ()V updateTabs
	h ()V tick
	m ()V updateStackedContents
	a (Leox;IIF)V render
	a (Leox;IIII)V renderTooltip
	d ()Lsw; getRecipeFilterName
	b (Leox;IIII)V renderGhostRecipeTooltip
	a (Leox;IIZF)V renderGhostRecipe
	a (DDI)Z mouseClicked
	n ()Z toggleFiltering
	a (DDIIIII)Z hasClickedOutside
	a (III)Z keyPressed
	b (III)Z keyReleased
	a (CI)Z charTyped
	a_ (DD)Z isMouseOver
	b_ (Z)V setFocused
	aB_ ()Z isFocused
	p ()V checkSearchStringUpdate
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	r ()Z isOffsetNextToMainGUI
	i ()V recipesUpdated
	a (Ljava/util/List;)V recipesShown
	a (Lcjc;Ljava/util/List;)V setupGhostRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	j ()V sendUpdateSettings
	q ()Lesn$a; narrationPriority
	b (Lesp;)V updateNarration
	a (Ljava/util/List;Lepf;)V lambda$updateNarration$6
	a (Leyg;)Z lambda$updateCollections$5
	a (Lit/unimi/dsi/fastutil/objects/ObjectSet;Leyg;)Z lambda$updateCollections$4
	b (Leyg;)Z lambda$updateCollections$3
	c (Leyg;)Z lambda$updateCollections$2
	d (Leyg;)V lambda$updateCollections$1
	a (Leye;)Z lambda$initVisuals$0
	<clinit> ()V <clinit>
eyd net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a ITEMS_PER_PAGE
	b buttons
	c hoveredButton
	d overlay
	e minecraft
	f showListeners
	g recipeCollections
	h forwardButton
	i backButton
	j totalPages
	k currentPage
	l recipeBook
	m lastClickedRecipe
	n lastClickedRecipeCollection
	<init> ()V <init>
	a (Lenn;II)V init
	a (Leyc;)V addListener
	a (Ljava/util/List;Z)V updateCollections
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
	a (Leox;IIIIF)V render
	a (Leox;II)V renderTooltip
	a ()Lcjc; getLastClickedRecipe
	b ()Leyg; getLastClickedRecipeCollection
	c ()V setInvisible
	a (DDIIIII)Z mouseClicked
	a (Ljava/util/List;)V recipesShown
	d ()Lenn; getMinecraft
	e ()Lamk; getRecipeBook
	a (Ljava/util/function/Consumer;)V listButtons
eye net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	g category
	h ANIMATION_TIME
	i animationTime
	<init> (Lenw;)V <init>
	a (Lenn;)V startAnimation
	b (Leox;IIF)V renderWidget
	a (Leox;Lfpw;)V renderIcon
	b ()Lenw; getCategory
	a (Lenb;)Z updateVisibility
eyf net/minecraft/client/gui/screens/recipebook/RecipeButton
	b RECIPE_BOOK_LOCATION
	c ANIMATION_TIME
	d BACKGROUND_SIZE
	a TICKS_TO_SWAP
	e MORE_RECIPES_TOOLTIP
	f menu
	g book
	h collection
	i time
	j animationTime
	k currentIndex
	<init> ()V <init>
	a (Leyg;Leyd;)V init
	a ()Leyg; getCollection
	b (Leox;IIF)V renderWidget
	g ()Ljava/util/List; getOrderedRecipes
	b ()Z isOnlyOption
	e ()Lcjc; getRecipe
	f ()Ljava/util/List; getTooltipText
	a (Lesp;)V updateWidgetNarration
	k ()I getWidth
	c (I)Z isValidClickButton
	<clinit> ()V <clinit>
eyg net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a registryAccess
	b recipes
	c singleResultItem
	d craftable
	e fitsDimensions
	f known
	<init> (Lhs;Ljava/util/List;)V <init>
	a (Lhs;Ljava/util/List;)Z allRecipesHaveSameResult
	a ()Lhs; registryAccess
	b ()Z hasKnownRecipes
	a (Lamk;)V updateKnownRecipes
	a (Lbys;IILamk;)V canCraft
	a (Lcjc;)Z isCraftable
	c ()Z hasCraftable
	d ()Z hasFitting
	e ()Ljava/util/List; getRecipes
	a (Z)Ljava/util/List; getRecipes
	b (Z)Ljava/util/List; getDisplayRecipes
	f ()Z hasSingleResultItem
eyh net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
eyi net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	D ()V recipesUpdated
	E ()Leyc; getRecipeBookComponent
eyj net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	h FILTER_NAME
	<init> ()V <init>
	d ()Lsw; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
eyk net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	h FILTER_NAME
	<init> ()V <init>
	d ()Lsw; getRecipeFilterName
	b ()Ljava/util/Set; getFuelItems
	<clinit> ()V <clinit>
eyl net/minecraft/client/gui/screens/recipebook/package-info
eym net/minecraft/client/gui/screens/reporting/ChatReportScreen
	a BUTTON_WIDTH
	b BUTTON_HEIGHT
	c BUTTON_MARGIN
	k BUTTON_MARGIN_HALF
	l LABEL_HEIGHT
	m SCREEN_WIDTH
	n SCREEN_HEIGHT
	o OBSERVED_WHAT_LABEL
	p SELECT_REASON
	q MORE_COMMENTS_LABEL
	r DESCRIBE_PLACEHOLDER
	s REPORT_SENT_MESSAGE
	t SELECT_CHAT_MESSAGE
	u REPORT_SENDING_TITLE
	v REPORT_SENT_TITLE
	w REPORT_ERROR_TITLE
	x REPORT_SEND_GENERIC_ERROR
	y LOGGER
	z lastScreen
	A reportingContext
	C reasonDescriptionLabel
	D commentBox
	E sendButton
	F reportBuilder
	G cannotBuildReason
	<init> (Leuq;Lffs;Lffo;)V <init>
	<init> (Leuq;Lffs;Ljava/util/UUID;)V <init>
	<init> (Leuq;Lffs;Lffo$b;)V <init>
	b ()V init
	l ()V onReportChanged
	B ()V sendReport
	C ()V onReportSendSuccess
	a (Ljava/lang/Throwable;)V onReportSendError
	a (Lsw;)V displayReportSendError
	D ()V saveDraft
	E ()V clearDraft
	a (Leox;IIF)V render
	f ()V tick
	aw_ ()V onClose
	ax_ ()V removed
	b (DDI)Z mouseReleased
	F ()I contentLeft
	G ()I contentRight
	H ()I contentTop
	I ()I contentBottom
	J ()I selectChatTop
	K ()I selectInfoTop
	L ()I commentBoxTop
	M ()I commentBoxBottom
	N ()I completeButtonTop
	O ()V lambda$displayReportSendError$13
	P ()V lambda$onReportSendSuccess$12
	a (Lffo$a;)V lambda$sendReport$11
	a (Lffo$c;)V lambda$sendReport$10
	a (Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$sendReport$9
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$sendReport$8
	b (Lffo$a;)Leqp; lambda$onReportChanged$7
	a (Lepi;)V lambda$init$6
	b (Lepi;)V lambda$init$5
	a (Ljava/lang/String;)V lambda$init$4
	c (Lepi;)V lambda$init$3
	a (Lffr;)V lambda$init$2
	d (Lepi;)V lambda$init$1
	a (Lffo;)V lambda$init$0
	<clinit> ()V <clinit>
eym$a net/minecraft/client/gui/screens/reporting/ChatReportScreen$DiscardReportWarningScreen
	c TITLE
	k MESSAGE
	l RETURN
	m DRAFT
	n DISCARD
	b this$0
	<init> (Leym;)V <init>
	a (I)V initButtons
	aw_ ()V onClose
	av_ ()Z shouldCloseOnEsc
	c (Leox;)V renderTitle
	a (Lepi;)V lambda$initButtons$2
	b (Lepi;)V lambda$initButtons$1
	c (Lepi;)V lambda$initButtons$0
	<clinit> ()V <clinit>
eyn net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller
	a log
	b contextBuilder
	c canReport
	d previousLink
	e eventId
	f missedCount
	g lastMessage
	<init> (Lffs;Ljava/util/function/Predicate;)V <init>
	a (ILeyn$a;)V fillNextPage
	a (Leyn$a;Lffk$a;)Z acceptMessage
eyn$a net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output
	a (ILffk$a;)V acceptMessage
	a (Lsw;)V acceptDivider
eyo net/minecraft/client/gui/screens/reporting/ChatSelectionScreen
	a TITLE
	b CONTEXT_INFO
	c lastScreen
	k reportingContext
	l confirmSelectedButton
	m contextInfoLabel
	n chatSelectionList
	o report
	p onSelected
	q chatLogFiller
	<init> (Leuq;Lffs;Lffo;Ljava/util/function/Consumer;)V <init>
	b ()V init
	a (Lffk;)Z canReport
	l ()V extendLog
	B ()V onReachedScrollTop
	C ()V updateConfirmSelectedButton
	a (Leox;IIF)V render
	aw_ ()V onClose
	au_ ()Lsw; getNarrationMessage
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	a (Leyo;)Leov; access$000
	b (Leyo;)Leov; access$100
	c (Leyo;)Leov; access$200
	d (Leyo;)Leov; access$300
	e (Leyo;)Leov; access$400
	f (Leyo;)Leov; access$500
	g (Leyo;)Leov; access$600
	h (Leyo;)Leov; access$700
	i (Leyo;)Leov; access$900
	j (Leyo;)Leov; access$1000
	k (Leyo;)Leov; access$1100
	l (Leyo;)Leov; access$1200
	m (Leyo;)Leov; access$1300
	<clinit> ()V <clinit>
eyo$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList
	l previousHeading
	a this$0
	<init> (Leyo;Lenn;I)V <init>
	a (D)V setScrollAmount
	a (ILffk$a;)V acceptMessage
	a (Lffk$a;Z)V updateHeading
	a (Lsw;)V acceptDivider
	c ()I getScrollbarPosition
	b ()I getRowWidth
	d ()I getMaxVisibleEntries
	a (Leox;IIFIIIII)V renderItem
	b (Leyo$a$b;)Z shouldHighlightEntry
	b (Lesx;)Leyo$a$b; nextEntry
	a (Leyo$a$b;)V setSelected
	a (III)Z keyPressed
	e ()I getFooterTop
	a (Lesx;)Lepc$a; nextEntry
	a (Lepc$a;)V setSelected
	a (Leyo$a;)Lenn; access$800
eyo$a$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry
	c COLOR
	d text
	a this$1
	<init> (Leyo$a;Lsw;)V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
eyo$a$b net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry
	b this$1
	<init> (Leyo$a;)V <init>
	a ()Lsw; getNarration
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
eyo$a$c net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading
	a sender
	b entry
	<init> (Ljava/util/UUID;Leyo$a$b;)V <init>
	a (Leyo$a$c;)Z canCombine
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; sender
	b ()Leyo$a$b; entry
eyo$a$d net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry
	c CHECKMARK_TEXTURE
	d CHECKMARK_WIDTH
	e CHECKMARK_HEIGHT
	f INDENT_AMOUNT
	g TAG_MARGIN_LEFT
	h chatId
	i text
	j narration
	k hoverText
	l tagIcon
	m tagHoverText
	n canReport
	o playerMessage
	a this$1
	<init> (Leyo$a;ILsw;Lsw;Leni;ZZ)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Leox;IIIII)V renderTag
	a (Leox;III)V renderSelectedCheckmark
	f ()I getMaximumTextWidth
	g ()I getTextIndent
	a ()Lsw; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
	h ()Z toggleReport
	<clinit> ()V <clinit>
eyo$a$e net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry
	c FACE_SIZE
	d heading
	e skin
	f canReport
	a this$1
	<init> (Leyo$a;Lcom/mojang/authlib/GameProfile;Lsw;Z)V <init>
	a (Leox;IIIIIIIZF)V render
eyo$a$f net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry
	a this$1
	<init> (Leyo$a;)V <init>
	a (Leox;IIIIIIIZF)V render
eyp net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen
	a REASON_TITLE
	b REASON_DESCRIPTION
	c READ_INFO_LABEL
	k FOOTER_HEIGHT
	l BUTTON_WIDTH
	m BUTTON_HEIGHT
	n CONTENT_WIDTH
	o PADDING
	p lastScreen
	q reasonSelectionList
	r currentlySelectedReason
	s onSelectedReason
	<init> (Leuq;Lffr;Ljava/util/function/Consumer;)V <init>
	b ()V init
	a (Leox;IIF)V render
	l ()I buttonTop
	B ()I contentLeft
	C ()I contentRight
	D ()I descriptionTop
	E ()I descriptionBottom
	aw_ ()V onClose
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Z)V lambda$init$0
	a (Leyp;)Leov; access$000
	b (Leyp;)Leov; access$100
	<clinit> ()V <clinit>
eyp$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList
	a this$0
	<init> (Leyp;Lenn;)V <init>
	a (Lffr;)Leyp$a$a; findEntry
	b ()I getRowWidth
	c ()I getScrollbarPosition
	a (Leyp$a$a;)V setSelected
	a (Lepc$a;)V setSelected
	a (Lffr;Leyp$a$a;)Z lambda$findEntry$0
eyp$a$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry
	b reason
	a this$1
	<init> (Leyp$a;Lffr;)V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
	a (DDI)Z mouseClicked
	b ()Lffr; getReason
eyq net/minecraft/client/gui/screens/reporting/package-info
eyr net/minecraft/client/gui/screens/social/PlayerEntry
	f REPORT_BUTTON_LOCATION
	g TOOLTIP_DELAY
	h minecraft
	i children
	j id
	k playerName
	l skinGetter
	m isRemoved
	n hasRecentMessages
	o reportingEnabled
	p playerReportable
	q hasDraftReport
	r hideButton
	s showButton
	t reportButton
	u tooltipHoverTime
	v HIDDEN
	w BLOCKED
	x OFFLINE
	y HIDDEN_OFFLINE
	z BLOCKED_OFFLINE
	A REPORT_DISABLED_TOOLTIP
	C NOT_REPORTABLE_TOOLTIP
	D HIDE_TEXT_TOOLTIP
	E SHOW_TEXT_TOOLTIP
	F REPORT_PLAYER_TOOLTIP
	G SKIN_SIZE
	H PADDING
	I CHAT_TOGGLE_ICON_SIZE
	J CHAT_TOGGLE_ICON_X
	K CHAT_TOGGLE_ICON_Y
	a SKIN_SHADE
	b BG_FILL
	c BG_FILL_REMOVED
	d PLAYERNAME_COLOR
	e PLAYER_STATUS_COLOR
	<init> (Lenn;Leyu;Ljava/util/UUID;Ljava/lang/String;Ljava/util/function/Supplier;Z)V <init>
	h ()Leqp; createReportButtonTooltip
	a (Leox;IIIIIIIZF)V render
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
	d ()Ljava/lang/String; getPlayerName
	e ()Ljava/util/UUID; getPlayerId
	c (Z)V setRemoved
	f ()Z isRemoved
	d (Z)V setHasRecentMessages
	g ()Z hasRecentMessages
	a (ZLsw;)V onHiddenOrShown
	e (Z)V updateHideAndShowButton
	a (Ltj;)Ltj; getEntryNarationMessage
	j ()Lsw; getStatusComponent
	a (Leys;Ljava/util/UUID;Ljava/lang/String;Lepi;)V lambda$new$3
	b (Leys;Ljava/util/UUID;Ljava/lang/String;Lepi;)V lambda$new$2
	a (Lffs;Lenn;Leyu;Ljava/util/UUID;Lepi;)V lambda$new$1
	a (Lenn;Leyu;Lffs;Ljava/util/UUID;)V lambda$new$0
	<clinit> ()V <clinit>
eyr$1 net/minecraft/client/gui/screens/social/PlayerEntry$1
	a this$0
	<init> (Leyr;IIIIIIILacq;IILepi$c;Lsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
eyr$2 net/minecraft/client/gui/screens/social/PlayerEntry$2
	a this$0
	<init> (Leyr;IIIIIIILacq;IILepi$c;Lsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
eyr$3 net/minecraft/client/gui/screens/social/PlayerEntry$3
	a this$0
	<init> (Leyr;IIIIIIILacq;IILepi$c;Lsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
eys net/minecraft/client/gui/screens/social/PlayerSocialManager
	a minecraft
	b hiddenPlayers
	c service
	d discoveredNamesToUUID
	e onlineMode
	f pendingBlockListRefresh
	<init> (Lenn;Lcom/mojang/authlib/minecraft/UserApiService;)V <init>
	a (Ljava/util/UUID;)V hidePlayer
	b (Ljava/util/UUID;)V showPlayer
	c (Ljava/util/UUID;)Z shouldHideMessageFrom
	d (Ljava/util/UUID;)Z isHidden
	a ()V startOnlineMode
	b ()V stopOnlineMode
	e (Ljava/util/UUID;)Z isBlocked
	c ()Ljava/util/Set; getHiddenPlayers
	a (Ljava/lang/String;)Ljava/util/UUID; getDiscoveredUUID
	a (Lffb;)V addPlayer
	f (Ljava/util/UUID;)V removePlayer
eyt net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList
	a socialInteractionsScreen
	l players
	m filter
	<init> (Leyu;Lenn;IIIII)V <init>
	b (Leox;)V enableScissor
	a (Ljava/util/Collection;DZ)V updatePlayerList
	a (Ljava/util/Collection;Ljava/util/Map;)V addOnlinePlayers
	a (Ljava/util/Map;Z)V updatePlayersFromChatLog
	a (Lffh;)Ljava/util/Collection; collectProfilesFromChatLog
	e ()V sortPlayerEntries
	a (Ljava/util/Collection;D)V updateFiltersAndScroll
	v ()V updateFilteredPlayers
	a (Ljava/lang/String;)V setFilter
	d ()Z isEmpty
	a (Lffb;Leyu$a;)V addPlayer
	a (Ljava/util/UUID;)V removePlayer
	a (Leyr;)Z lambda$updateFilteredPlayers$4
	b (Leyr;)Ljava/lang/Integer; lambda$sortPlayerEntries$3
	c (Leyr;)Ljava/lang/Integer; lambda$sortPlayerEntries$2
	a (Lcom/mojang/authlib/GameProfile;Ljava/util/UUID;)Leyr; lambda$updatePlayersFromChatLog$1
	a (Lcom/mojang/authlib/GameProfile;)Lacq; lambda$updatePlayersFromChatLog$0
eyu net/minecraft/client/gui/screens/social/SocialInteractionsScreen
	a SOCIAL_INTERACTIONS_LOCATION
	k TAB_ALL
	l TAB_HIDDEN
	m TAB_BLOCKED
	n TAB_ALL_SELECTED
	o TAB_HIDDEN_SELECTED
	p TAB_BLOCKED_SELECTED
	q SEARCH_HINT
	r EMPTY_SEARCH
	s EMPTY_HIDDEN
	t EMPTY_BLOCKED
	u BLOCKING_HINT
	v BG_BORDER_SIZE
	w BG_WIDTH
	x SEARCH_HEIGHT
	y MARGIN_Y
	b SEARCH_START
	c LIST_START
	z IMAGE_WIDTH
	A BUTTON_HEIGHT
	C ITEM_HEIGHT
	D socialInteractionsPlayerList
	E searchBox
	F lastSearch
	G page
	H allButton
	I hiddenButton
	J blockedButton
	K blockingHintButton
	L serverLabel
	M playerCount
	N initialized
	<init> ()V <init>
	l ()I windowHeight
	B ()I listEnd
	C ()I marginX
	au_ ()Lsw; getNarrationMessage
	f ()V tick
	b ()V init
	a (Leyu$a;)V showPage
	a (Leox;)V renderBackground
	a (Leox;IIF)V render
	a (III)Z keyPressed
	az_ ()Z isPauseScreen
	a (Ljava/lang/String;)V checkSearchStringUpdate
	a (Lenn;)V updateServerLabel
	a (Lffb;)V onAddPlayer
	a (Ljava/util/UUID;)V onRemovePlayer
	a (Lepi;)V lambda$init$4
	c (Z)V lambda$init$3
	b (Lepi;)V lambda$init$2
	c (Lepi;)V lambda$init$1
	d (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eyu$1 net/minecraft/client/gui/screens/social/SocialInteractionsScreen$1
	d this$0
	<init> (Leyu;Leov;IIIILsw;)V <init>
	aE_ ()Ltj; createNarrationMessage
eyu$2 net/minecraft/client/gui/screens/social/SocialInteractionsScreen$2
	a $SwitchMap$net$minecraft$client$gui$screens$social$SocialInteractionsScreen$Page
	<clinit> ()V <clinit>
eyu$a net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page
	a ALL
	b HIDDEN
	c BLOCKED
	d $VALUES
	values ()[Leyu$a; values
	valueOf (Ljava/lang/String;)Leyu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leyu$a; $values
	<clinit> ()V <clinit>
eyv net/minecraft/client/gui/screens/social/package-info
eyw net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget
	a HEADER_HORIZONTAL_PADDING
	b TELEMETRY_REQUIRED_TRANSLATION_KEY
	c TELEMETRY_OPTIONAL_TRANSLATION_KEY
	d PROPERTY_TITLE
	e font
	f content
	g onScrolledListener
	<init> (IIIILeov;)V <init>
	b (Z)V onOptInChanged
	c (Z)Leyw$a; buildContent
	a (Ljava/util/function/DoubleConsumer;)V setOnScrolledListener
	a (D)V setScrollAmount
	f ()I getInnerHeight
	g ()D scrollRate
	c (Leox;IIF)V renderContents
	a (Lesp;)V updateWidgetNarration
	a (Leyw$b;Lfzl;)V addEventType
	a (Lfzl;Leyw$b;)V addEventTypeProperties
	v ()I containerWidth
	a (Leox;IIFLepf;)V lambda$renderContents$0
	<clinit> ()V <clinit>
eyw$a net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content
	a container
	b narration
	<init> (Lesf;Lsw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lesf; container
	b ()Lsw; narration
eyw$b net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder
	a width
	b grid
	c helper
	d alignHeader
	e narration
	<init> (I)V <init>
	a (Leov;Lsw;)V addLine
	a (Leov;Lsw;I)V addLine
	b (Leov;Lsw;)V addHeader
	a (I)V addSpacer
	a ()Leyw$a; build
eyx net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen
	a PADDING
	b TITLE
	c DESCRIPTION
	k BUTTON_GIVE_FEEDBACK
	l BUTTON_SHOW_DATA
	m lastScreen
	n options
	o telemetryEventWidget
	p savedScroll
	<init> (Leuq;Lenr;)V <init>
	au_ ()Lsw; getNarrationMessage
	b ()V init
	l ()Lepf; createTelemetryButton
	a (Lepi;)V openLastScreen
	b (Lepi;)V openFeedbackLink
	c (Lepi;)V openDataFolder
	aw_ ()V onClose
	a (Leox;IIF)V render
	a (Lepf;Lepf;)Lesf; twoButtonContainer
	c (Z)V lambda$openFeedbackLink$3
	a (Ljava/lang/Boolean;)V lambda$createTelemetryButton$2
	a (Leyx;Leqt;)V lambda$init$1
	a (D)V lambda$init$0
	<clinit> ()V <clinit>
eyy net/minecraft/client/gui/screens/telemetry/package-info
eyz net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen
	a TITLE
	b MESSAGE
	c DETAILS_BUTTON
	k COLUMN_SPACING
	l DETAILS_BUTTON_WIDTH
	m callback
	n enabledPacks
	o layout
	<init> (Ljava/util/Collection;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;)V <init>
	au_ ()Lsw; getNarrationMessage
	b ()V init
	aG_ ()V repositionElements
	a (Leox;IIF)V render
	aw_ ()V onClose
	a (Leyz;Leqt;)V lambda$init$3
	a (Lepi;)V lambda$init$2
	b (Lepi;)V lambda$init$1
	c (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
eyz$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen
	b packList
	a this$0
	<init> (Leyz;)V <init>
	aw_ ()V onClose
	b ()V init
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$0
	a (Leyz$a;)Leov; access$000
	b (Leyz$a;)Lenn; access$100
	c (Leyz$a;)Leov; access$200
eyz$a$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList
	a this$1
	<init> (Leyz$a;Lenn;Ljava/util/Collection;)V <init>
	b ()I getRowWidth
eyz$a$b net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry
	b packId
	c message
	d splitMessage
	a this$1
	<init> (Leyz$a;Lsw;Lsw;Lepz;)V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
eza net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	k GROUP_BOTTOM
	l TAB_COLUMN_WIDTH
	m FOOTER_HEIGHT
	n TEXT_INDENT
	o LOGGER
	p TEMP_WORLD_PREFIX
	q GAME_MODEL_LABEL
	r NAME_LABEL
	s EXPERIMENTS_LABEL
	t ALLOW_CHEATS_INFO
	u PREPARING_WORLD_DATA
	v HORIZONTAL_BUTTON_SPACING
	w VERTICAL_BUTTON_SPACING
	a HEADER_SEPERATOR
	b FOOTER_SEPERATOR
	c LIGHT_DIRT_BACKGROUND
	x uiState
	y tabManager
	z recreated
	A lastScreen
	C tempDataPackDir
	D tempDataPackRepository
	E bottomButtons
	F tabNavigationBar
	a (Lenn;Leuq;)V openFresh
	a (Lenn;Leuq;Lcmq;Lezi;Ljava/nio/file/Path;)Leza; createFromExisting
	<init> (Lenn;Leuq;Lezi;Ljava/util/Optional;Ljava/util/OptionalLong;)V <init>
	l ()Lezj; getUiState
	f ()V tick
	b ()V init
	aG_ ()V repositionElements
	a (Lenn;Lsw;)V queueLoadScreen
	C ()V onCreate
	a (Ldzc$a;Lhl;Lcom/mojang/serialization/Lifecycle;)V createNewWorld
	c (Z)Lcmq; createLevelSettings
	a (III)Z keyPressed
	aw_ ()V onClose
	B ()V popScreen
	a (Leox;IIF)V render
	b (Leox;)V renderDirtBackground
	e (Leqt;)Leqt; addWidget
	d (Leqt;)Leqt; addRenderableWidget
	D ()Ljava/nio/file/Path; getTempDataPackDir
	a (Lcnf;)V openExperimentsScreen
	b (Lcnf;)V openDataPackSelectionScreen
	a (Laki;ZLjava/util/function/Consumer;)V tryApplyNewDataPacks
	a (Laki;Lcnf;Ljava/util/function/Consumer;)V applyNewPackConfig
	a (Laki;Lcnf;)Ladj$c; createDefaultLoadConfig
	E ()V removeTempDataPackDir
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	F ()Ljava/util/Optional; createNewWorldDirectory
	a (Ljava/nio/file/Path;Lenn;)Ljava/nio/file/Path; createTempDataPackDirFromExistingWorld
	c (Lcnf;)Lcom/mojang/datafixers/util/Pair; getDataPackSelectionSettings
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$createTempDataPackDirFromExistingWorld$20
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z lambda$createTempDataPackDirFromExistingWorld$19
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$createNewWorldDirectory$18
	a (Ljava/nio/file/Path;)Z lambda$createNewWorldDirectory$17
	b (Ljava/nio/file/Path;)V lambda$removeTempDataPackDir$16
	a (Ljava/util/function/Consumer;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$applyNewPackConfig$15
	a (Ljava/util/function/Consumer;Z)V lambda$applyNewPackConfig$14
	a (Lakn;Lada;Lhl;Leza$a;)Lezi; lambda$applyNewPackConfig$13
	a (Ladj$a;)Ladj$b; lambda$applyNewPackConfig$12
	a (Lcom/mojang/serialization/DynamicOps;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$applyNewPackConfig$11
	a (Laki;Lcnf;Ljava/util/function/Consumer;Z)V lambda$tryApplyNewDataPacks$10
	a (Ljava/util/List;Ljava/lang/String;)Z lambda$tryApplyNewDataPacks$9
	a (Laki;)V lambda$openDataPackSelectionScreen$8
	b (Laki;)V lambda$openExperimentsScreen$7
	a (Ldif$b;Lhl;Lcom/mojang/serialization/Lifecycle;)V lambda$onCreate$6
	a (Lepf;)V lambda$init$5
	a (Lepi;)V lambda$init$4
	b (Lepi;)V lambda$init$3
	b (Lakn;Lada;Lhl;Leza$a;)Lezi; lambda$openFresh$2
	b (Ladj$a;)Ladj$b; lambda$openFresh$1
	b (Leza;Leqt;)V lambda$new$0
	a (Leza;)Lenn; access$000
	b (Leza;)Leov; access$100
	a (Leza;Leqt;)V access$200
	c (Leza;)Leov; access$300
	d (Leza;)Leov; access$400
	e (Leza;)Lenn; access$500
	f (Leza;)Lenn; access$600
	g (Leza;)Lenn; access$700
	<clinit> ()V <clinit>
eza$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$DataPackReloadCookie
	a worldGenSettings
	b dataConfiguration
	<init> (Ldig;Lcnf;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldig; worldGenSettings
	b ()Lcnf; dataConfiguration
eza$b net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab
	c TITLE
	d ALLOW_CHEATS
	e nameEdit
	b this$0
	<init> (Leza;)V <init>
	b ()V tick
	a (Lepi;)V lambda$new$9
	a (Lepp;Lezj;)V lambda$new$8
	a (Lepp;Ljava/lang/Boolean;)V lambda$new$7
	a (Ljava/lang/Boolean;)Leqp; lambda$new$6
	b (Lepp;Lezj;)V lambda$new$5
	a (Lepp;Lbdu;)V lambda$new$4
	c (Lepp;Lezj;)V lambda$new$3
	a (Lepp;Lezj$a;)V lambda$new$2
	a (Lezj$a;)Lsw; lambda$new$1
	a (Lezj;)V lambda$new$0
	<clinit> ()V <clinit>
eza$c net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$MoreTab
	c TITLE
	d GAME_RULES_LABEL
	e DATA_PACKS_LABEL
	b this$0
	<init> (Leza;)V <init>
	c ()V openGameRulesScreen
	a (Ljava/util/Optional;)V lambda$openGameRulesScreen$3
	a (Lepi;)V lambda$new$2
	b (Lepi;)V lambda$new$1
	c (Lepi;)V lambda$new$0
	<clinit> ()V <clinit>
eza$d net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab
	c TITLE
	d AMPLIFIED_HELP_TEXT
	e GENERATE_STRUCTURES
	f GENERATE_STRUCTURES_INFO
	g BONUS_CHEST
	h SEED_LABEL
	i SEED_EMPTY_HINT
	j WORLD_TAB_WIDTH
	k seedEdit
	l customizeTypeButton
	b this$0
	<init> (Leza;)V <init>
	c ()V openPresetEditor
	d ()Lepp$c; createWorldTypeValueSupplier
	a (Lepp;)Ltj; createTypeButtonNarration
	b ()V tick
	a (Lezh;Lezj;)V lambda$new$8
	a (Lesf$b;Lesi;)V lambda$new$7
	e ()Z lambda$new$6
	f ()Z lambda$new$5
	a (Ljava/lang/String;)V lambda$new$4
	a (Lezj;)V lambda$new$3
	a (Lepi;)V lambda$new$2
	a (Lepp;Lezj;)V lambda$new$1
	a (Lepp;Lezj$b;)V lambda$new$0
	<clinit> ()V <clinit>
eza$d$1 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab$1
	d val$this$0
	e this$1
	<init> (Leza$d;Leov;IIIILsw;Leza;)V <init>
	aE_ ()Ltj; createNarrationMessage
eza$d$2 net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab$2
	a this$1
	<init> (Leza$d;)V <init>
	a ()Ljava/util/List; getSelectedList
	b ()Ljava/util/List; getDefaultList
ezb net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen
	a exitCallback
	b rules
	c invalidEntries
	k doneButton
	l tooltip
	m gameRules
	<init> (Lcmi;Ljava/util/function/Consumer;)V <init>
	b ()V init
	aw_ ()V onClose
	a (Leox;IIF)V render
	l ()V updateDoneButton
	a (Lezb$f;)V markInvalid
	b (Lezb$f;)V clearInvalid
	a (Lezb;Leqt;)V lambda$init$2
	a (Lepi;)V lambda$init$1
	b (Lepi;)V lambda$init$0
	a (Lezb;)Lenn; access$000
	b (Lezb;)Lenn; access$100
	c (Lezb;)Lenn; access$200
	d (Lezb;)Lenn; access$300
	e (Lezb;)Lenn; access$400
	f (Lezb;)Lenn; access$500
	g (Lezb;)Lenn; access$600
	h (Lezb;)Leov; access$700
ezb$a net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry
	d checkbox
	a this$0
	<init> (Lezb;Lsw;Ljava/util/List;Ljava/lang/String;Lcmi$a;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Lcmi$a;Lepp;Ljava/lang/Boolean;)V lambda$new$1
	a (Ljava/lang/String;Lepp;)Ltj; lambda$new$0
ezb$b net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry
	b label
	a this$0
	<init> (Lezb;Lsw;)V <init>
	a (Leox;IIIIIIIZF)V render
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
ezb$b$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry$1
	a this$1
	<init> (Lezb$b;)V <init>
	q ()Lesn$a; narrationPriority
	b (Lesp;)V updateNarration
ezb$c net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory
	create (Lsw;Ljava/util/List;Ljava/lang/String;Lcmi$g;)Lezb$f; create
ezb$d net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry
	a label
	b children
	c this$0
	<init> (Lezb;Ljava/util/List;Lsw;)V <init>
	i ()Ljava/util/List; children
	b ()Ljava/util/List; narratables
	a (Leox;II)V renderLabel
ezb$e net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry
	d input
	a this$0
	<init> (Lezb;Lsw;Ljava/util/List;Ljava/lang/String;Lcmi$d;)V <init>
	a (Leox;IIIIIIIZF)V render
	a (Lcmi$d;Ljava/lang/String;)V lambda$new$0
ezb$f net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry
	a tooltip
	<init> (Ljava/util/List;)V <init>
ezb$g net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList
	a this$0
	<init> (Lezb;Lcmi;)V <init>
	a (Leox;IIF)V render
	a (Ljava/util/Map$Entry;)V lambda$new$1
	b (Ljava/util/Map$Entry;)V lambda$new$0
ezb$g$1 net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList$1
	a val$this$0
	b val$gameRules
	c val$entries
	d this$1
	<init> (Lezb$g;Lezb;Lcmi;Ljava/util/Map;)V <init>
	b (Lcmi$e;Lcmi$f;)V visitBoolean
	c (Lcmi$e;Lcmi$f;)V visitInteger
	a (Lcmi$e;Lezb$c;)V addEntry
	a (Lcmi$b;)Ljava/util/Map; lambda$addEntry$2
	a (Lsw;Ljava/util/List;Ljava/lang/String;Lcmi$d;)Lezb$f; lambda$visitInteger$1
	a (Lsw;Ljava/util/List;Ljava/lang/String;Lcmi$a;)Lezb$f; lambda$visitBoolean$0
ezc net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a LOGGER
	b NAME_LABEL
	c renameButton
	k callback
	l nameEdit
	m levelAccess
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Ldyy$c;)V <init>
	f ()V tick
	b ()V init
	a (Lenn;II)V resize
	aw_ ()V onClose
	l ()V onRename
	a (Ldyy;Ljava/lang/String;)V makeBackupAndShowToast
	a (Ldyy$c;)Z makeBackupAndShowToast
	a (Leox;IIF)V render
	a (Ljava/nio/file/Path;)Z lambda$init$10
	a (Lepi;)V lambda$init$9
	b (Lepi;)V lambda$init$8
	a (ZZ)V lambda$init$7
	c (Lepi;)V lambda$init$6
	d (Lepi;)V lambda$init$5
	e (Lepi;)V lambda$init$4
	f (Lepi;)V lambda$init$3
	b (Ljava/nio/file/Path;)V lambda$init$2
	a (Ljava/lang/String;)V lambda$init$1
	g (Lepi;)V lambda$init$0
	<clinit> ()V <clinit>
ezd net/minecraft/client/gui/screens/worldselection/ExperimentsScreen
	a MAIN_CONTENT_WIDTH
	b layout
	c parent
	k packRepository
	l output
	m packs
	<init> (Leuq;Laki;Ljava/util/function/Consumer;)V <init>
	b ()V init
	a (Lakg;)Lsw; getHumanReadableTitle
	aw_ ()V onClose
	l ()V onDone
	aG_ ()V repositionElements
	a (Leox;IIF)V render
	a (Ljava/util/List;Ljava/util/List;Lakg;Ljava/lang/Boolean;)V lambda$onDone$6
	a (Lezd;Leqt;)V lambda$init$5
	a (Lepi;)V lambda$init$4
	b (Lepi;)V lambda$init$3
	a (Lezh$a;Lakg;Ljava/lang/Boolean;)V lambda$init$2
	a (Lakg;Ljava/lang/Boolean;)V lambda$init$1
	b (Lakg;)Z lambda$init$0
eze net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a LOGGER
	b DIMENSION_COLORS
	c callback
	k upgrader
	a (Lenn;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Ldyy$c;Z)Leze; create
	<init> (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Ldyy$c;Lcmq;ZLhr;)V <init>
	b ()V init
	f ()V tick
	aw_ ()V onClose
	ax_ ()V removed
	a (Leox;IIF)V render
	a (Lepi;)V lambda$init$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ezf net/minecraft/client/gui/screens/worldselection/PresetEditor
	a EDITORS
	createEditScreen (Leza;Lezi;)Leuq; createEditScreen
	a (Ldqd;)Lezi$a; flatWorldConfigurator
	a (Lhe;)Lezi$a; fixedBiomeConfigurator
	a (Lhe;Lhs$b;Ldif;)Ldif; lambda$fixedBiomeConfigurator$5
	a (Ldqd;Lhs$b;Ldif;)Ldif; lambda$flatWorldConfigurator$4
	a (Leza;Lezi;)Leuq; lambda$static$3
	a (Leza;Lhe;)V lambda$static$2
	b (Leza;Lezi;)Leuq; lambda$static$1
	a (Leza;Ldqd;)V lambda$static$0
	<clinit> ()V <clinit>
ezg net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	k LOGGER
	a TEST_OPTIONS
	b lastScreen
	l deleteButton
	m selectButton
	n renameButton
	o copyButton
	c searchBox
	p list
	<init> (Leuq;)V <init>
	f ()V tick
	b ()V init
	a (III)Z keyPressed
	aw_ ()V onClose
	a (CI)Z charTyped
	a (Leox;IIF)V render
	a (ZZ)V updateButtonStatus
	ax_ ()V removed
	a (Lepi;)V lambda$init$7
	b (Lepi;)V lambda$init$6
	c (Lepi;)V lambda$init$5
	d (Lepi;)V lambda$init$4
	e (Lepi;)V lambda$init$3
	f (Lepi;)V lambda$init$2
	g (Lepi;)V lambda$init$1
	a (Ljava/lang/String;)V lambda$init$0
	<clinit> ()V <clinit>
ezh net/minecraft/client/gui/screens/worldselection/SwitchGrid
	a DEFAULT_SWITCH_BUTTON_WIDTH
	b switches
	<init> (Ljava/util/List;)V <init>
	a ()V refreshStates
	a (I)Lezh$a; builder
ezh$a net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder
	a width
	b switchBuilders
	c paddingLeft
	d rowSpacing
	e rowCount
	f infoUnderneath
	<init> (I)V <init>
	a ()V increaseRow
	a (Lsw;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lezh$d; addSwitch
	a (I)Lezh$a; withPaddingLeft
	b (I)Lezh$a; withRowSpacing
	a (Ljava/util/function/Consumer;)Lezh; build
	a (IZ)Lezh$a; withInfoUnderneath
ezh$b net/minecraft/client/gui/screens/worldselection/SwitchGrid$InfoUnderneathSettings
	a maxInfoRows
	b alwaysMaxHeight
	<init> (IZ)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I maxInfoRows
	b ()Z alwaysMaxHeight
ezh$c net/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch
	a button
	b stateSupplier
	c isActiveCondition
	<init> (Lepp;Ljava/util/function/BooleanSupplier;Ljava/util/function/BooleanSupplier;)V <init>
	a ()V refreshState
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lepp; button
	c ()Ljava/util/function/BooleanSupplier; stateSupplier
	d ()Ljava/util/function/BooleanSupplier; isActiveCondition
ezh$d net/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder
	a label
	b stateSupplier
	c onClicked
	d info
	e isActiveCondition
	f buttonWidth
	<init> (Lsw;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;I)V <init>
	a (Ljava/util/function/BooleanSupplier;)Lezh$d; withIsActiveCondition
	a (Lsw;)Lezh$d; withInfo
	a (Lezh$a;Lesf;I)Lezh$c; build
	a (Lezh$a;Lesf;ILezh$b;)V lambda$build$4
	a (Lepp;Ljava/lang/Boolean;)V lambda$build$3
	a (Lepp;)Ltj; lambda$build$2
	b (Lepp;)Ltj; lambda$build$1
	a (Leqp;Ljava/lang/Boolean;)Leqp; lambda$build$0
ezi net/minecraft/client/gui/screens/worldselection/WorldCreationContext
	a options
	b datapackDimensions
	c selectedDimensions
	d worldgenRegistries
	e dataPackResources
	f dataConfiguration
	<init> (Ldig;Lhl;Lada;Lcnf;)V <init>
	<init> (Ldii;Ldif;Lhl;Lada;Lcnf;)V <init>
	<init> (Ldii;Lhr;Ldif;Lhl;Lada;Lcnf;)V <init>
	a (Ldii;Ldif;)Lezi; withSettings
	a (Lezi$b;)Lezi; withOptions
	a (Lezi$a;)Lezi; withDimensions
	a ()Lhs$b; worldgenLoadContext
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldii; options
	c ()Lhr; datapackDimensions
	d ()Ldif; selectedDimensions
	e ()Lhl; worldgenRegistries
	f ()Lada; dataPackResources
	g ()Lcnf; dataConfiguration
ezi$a net/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater
ezi$b net/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier
ezj net/minecraft/client/gui/screens/worldselection/WorldCreationUiState
	a DEFAULT_WORLD_NAME
	b listeners
	c name
	d gameMode
	e difficulty
	f allowCheats
	g seed
	h generateStructures
	i bonusChest
	j savesFolder
	k targetFolder
	l settings
	m worldType
	n normalPresetList
	o altPresetList
	p gameRules
	<init> (Ljava/nio/file/Path;Lezi;Ljava/util/Optional;Ljava/util/OptionalLong;)V <init>
	a (Ljava/util/function/Consumer;)V addListener
	a ()V onChanged
	a (Ljava/lang/String;)V setName
	c (Ljava/lang/String;)Ljava/lang/String; findResultFolder
	b ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getTargetFolder
	a (Lezj$a;)V setGameMode
	d ()Lezj$a; getGameMode
	a (Lbdu;)V setDifficulty
	e ()Lbdu; getDifficulty
	f ()Z isHardcore
	a (Z)V setAllowCheats
	g ()Z isAllowCheats
	b (Ljava/lang/String;)V setSeed
	h ()Ljava/lang/String; getSeed
	b (Z)V setGenerateStructures
	i ()Z isGenerateStructures
	c (Z)V setBonusChest
	j ()Z isBonusChest
	a (Lezi;)V setSettings
	k ()Lezi; getSettings
	a (Lezi$a;)V updateDimensions
	a (Lcnf;)Z tryUpdateDataConfiguration
	l ()Z isDebug
	a (Lezj$b;)V setWorldType
	m ()Lezj$b; getWorldType
	n ()Lezf; getPresetEditor
	o ()Ljava/util/List; getNormalPresetList
	p ()Ljava/util/List; getAltPresetList
	r ()V updatePresetLists
	a (Lezi;Ljava/util/Optional;)Ljava/util/Optional; findPreset
	a (Lhr;Lanl;)Ljava/util/Optional; getNonEmptyList
	a (Lcmi;)V setGameRules
	q ()Lcmi; getGameRules
	a (Ljava/util/List;)Z lambda$getNonEmptyList$7
	a (Lhi$c;)Ljava/util/List; lambda$getNonEmptyList$6
	a (Lezi;Lacp;)Ljava/util/Optional; lambda$findPreset$5
	a (Lhr;)Ljava/util/List; lambda$updatePresetLists$4
	a (Lhe;Lhs$b;Ldif;)Ldif; lambda$setWorldType$3
	a (Ldii;)Ldii; lambda$setSeed$2
	a (ZLdii;)Ldii; lambda$onChanged$1
	b (ZLdii;)Ldii; lambda$onChanged$0
	<clinit> ()V <clinit>
ezj$a net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e gameType
	f displayName
	g info
	h $VALUES
	values ()[Lezj$a; values
	valueOf (Ljava/lang/String;)Lezj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcmj;)V <init>
	a ()Lsw; getInfo
	b ()[Lezj$a; $values
	<clinit> ()V <clinit>
ezj$b net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry
	a preset
	b CUSTOM_WORLD_DESCRIPTION
	<init> (Lhe;)V <init>
	a ()Lsw; describePreset
	b ()Z isAmplified
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lhe; preset
	a (Lacp;)Z lambda$isAmplified$1
	b (Lacp;)Lsw; lambda$describePreset$0
	<clinit> ()V <clinit>
ezk net/minecraft/client/gui/screens/worldselection/WorldOpenFlows
	a LOGGER
	b minecraft
	c levelSource
	<init> (Lenn;Ldyy;)V <init>
	a (Leuq;Ljava/lang/String;)V loadLevel
	a (Ljava/lang/String;Lcmq;Ldii;Ljava/util/function/Function;)V createFreshLevel
	a (Ljava/lang/String;)Ldyy$c; createWorldAccess
	a (Ldyy$c;Lada;Lhl;Ldze;)V createLevelFromExistingSettings
	a (Ldyy$c;ZLaki;)Ladk; loadWorldStem
	a (Ldyy$c;)Lcom/mojang/datafixers/util/Pair; recreateWorldData
	b (Ldyy$c;ZLaki;)Ladj$d; getPackConfigFromLevelData
	a (Ldyy$c;Z)Ladk; loadWorldStem
	a (Ladj$d;Ladj$f;Ladj$e;)Ljava/lang/Object; loadWorldDataBlocking
	a (Leuq;Ljava/lang/String;ZZ)V doLoadLevel
	a ()Ljava/util/concurrent/CompletableFuture; promptBundledPackLoadFailure
	a (Ldyy$c;Ljava/lang/String;)V safeCloseAccess
	a (Leuq;Ljava/lang/String;ZLjava/lang/Runnable;)V askForBackup
	a (Lenn;Leza;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V confirmWorldCreation
	a (Ljava/lang/Runnable;Lenn;Leza;Z)V lambda$confirmWorldCreation$13
	a (Ljava/lang/String;Ljava/lang/Runnable;ZZ)V lambda$askForBackup$12
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$doLoadLevel$11
	a (Ljava/lang/String;Ldyy$c;Laki;Ladk;Leuq;Ljava/lang/Boolean;)V lambda$doLoadLevel$10
	a (Leuq;)V lambda$doLoadLevel$9
	b (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage; lambda$doLoadLevel$8
	a (Ljava/lang/Void;)Ljava/lang/Boolean; lambda$doLoadLevel$7
	a (Leuq;Ljava/lang/String;Z)V lambda$doLoadLevel$6
	b ()V lambda$doLoadLevel$5
	b (Leuq;Ljava/lang/String;Z)V lambda$doLoadLevel$4
	a (Lakn;Lada;Lhl;Lezk$a;)Lcom/mojang/datafixers/util/Pair; lambda$recreateWorldData$3
	a (Ldyy$c;Ladj$a;)Ladj$b; lambda$recreateWorldData$2
	b (Ldyy$c;Ladj$a;)Ladj$b; lambda$loadWorldStem$1
	a (Ljava/util/function/Function;Lcmq;Ldii;Ladj$a;)Ladj$b; lambda$createFreshLevel$0
	<clinit> ()V <clinit>
ezk$a net/minecraft/client/gui/screens/worldselection/WorldOpenFlows$1Data
	a levelSettings
	b options
	c existingDimensions
	<init> (Lcmq;Ldii;Lhr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcmq; levelSettings
	b ()Ldii; options
	c ()Lhr; existingDimensions
ezl net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	a LOGGER
	l DATE_FORMAT
	m ICON_MISSING
	n ICON_OVERLAY_LOCATION
	o FROM_NEWER_TOOLTIP_1
	p FROM_NEWER_TOOLTIP_2
	q SNAPSHOT_TOOLTIP_1
	r SNAPSHOT_TOOLTIP_2
	s WORLD_LOCKED_TOOLTIP
	t WORLD_REQUIRES_CONVERSION
	u screen
	v pendingLevels
	w currentlyDisplayedLevels
	x filter
	y loadingHeader
	<init> (Lezg;Lenn;IIIIILjava/lang/String;Lezl;)V <init>
	j ()V clearEntries
	v ()Ljava/util/List; pollLevelsIgnoreErrors
	w ()V reloadWorldList
	a (III)Z keyPressed
	a (Leox;IIF)V render
	a (Ljava/util/List;)V handleNewLevels
	a (Ljava/lang/String;)V updateFilter
	x ()Ljava/util/concurrent/CompletableFuture; loadLevels
	a (Ljava/lang/String;Ljava/util/List;)V fillLevels
	a (Ljava/lang/String;Ldyz;)Z filterAccepts
	y ()V fillLoadingLevels
	z ()V notifyListUpdated
	a (Lsw;)V handleLevelLoadFailure
	c ()I getScrollbarPosition
	b ()I getRowWidth
	a (Lezl$a;)V setSelected
	d ()Ljava/util/Optional; getSelectedOpt
	e ()Lezg; getScreen
	b (Lesp;)V updateNarration
	a (Lepc$a;)V setSelected
	a (Ljava/lang/Throwable;)Ljava/util/List; lambda$loadLevels$0
	a (Lezl;)Lenn; access$000
	<clinit> ()V <clinit>
ezl$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry
	<init> ()V <init>
	b ()Z isSelectable
	close ()V close
ezl$b net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader
	a LOADING_LABEL
	b minecraft
	<init> (Lenn;)V <init>
	a (Leox;IIIIIIIZF)V render
	a ()Lsw; getNarration
	b ()Z isSelectable
	<clinit> ()V <clinit>
ezl$c net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d ICON_OVERLAY_X_JOIN
	e ICON_OVERLAY_X_JOIN_WITH_NOTIFY
	f ICON_OVERLAY_X_WARNING
	g ICON_OVERLAY_X_ERROR
	h ICON_OVERLAY_Y_UNSELECTED
	i ICON_OVERLAY_Y_SELECTED
	j minecraft
	k screen
	l summary
	m icon
	n iconFile
	o lastClickTime
	a this$0
	<init> (Lezl;Lezl;Ldyz;)V <init>
	j ()V validateIconFile
	a ()Lsw; getNarration
	a (Leox;IIIIIIIZF)V render
	a (DDI)Z mouseClicked
	d ()V joinWorld
	e ()V deleteWorld
	f ()V doDeleteWorld
	g ()V editWorld
	h ()V recreateWorld
	k ()V loadWorld
	l ()V queueLoadScreen
	m ()V loadIcon
	close ()V close
	i ()Ljava/lang/String; getLevelName
	b ()Z isSelectable
	n ()V lambda$recreateWorld$6
	a (Lcmq;Lezi;Ljava/nio/file/Path;Z)V lambda$recreateWorld$5
	a (Ldyy$c;Ljava/lang/String;Z)V lambda$editWorld$4
	b (Z)V lambda$deleteWorld$3
	c (Z)V lambda$joinWorld$2
	o ()V lambda$joinWorld$1
	a (ZZ)V lambda$joinWorld$0
ezm net/minecraft/client/gui/screens/worldselection/package-info
ezn net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	c name
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezo net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a PROMPT_TEXT
	b items
	<init> ()V <init>
	a ()Ljava/util/List; getItems
	b ()Lsw; getPrompt
	<clinit> ()V <clinit>
ezp net/minecraft/client/gui/spectator/SpectatorMenu
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f MAX_PER_PAGE
	g CLOSE_MENU_TEXT
	h PREVIOUS_PAGE_TEXT
	i NEXT_PAGE_TEXT
	a EMPTY_SLOT
	j listener
	k category
	l selectedSlot
	m page
	<init> (Lezs;)V <init>
	a (I)Lezr; getItem
	a ()Ljava/util/List; getItems
	b ()Lezr; getSelectedItem
	c ()Lezq; getSelectedCategory
	b (I)V selectSlot
	d ()V exit
	e ()I getSelectedSlot
	a (Lezq;)V selectCategory
	f ()Lezt; getCurrentPage
	<clinit> ()V <clinit>
ezp$1 net/minecraft/client/gui/spectator/SpectatorMenu$1
	<init> ()V <init>
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezp$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	<init> ()V <init>
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezp$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	<init> (IZ)V <init>
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezq net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lsw; getPrompt
ezr net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezs net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Lezp;)V onSpectatorMenuClosed
ezt net/minecraft/client/gui/spectator/categories/SpectatorPage
	a NO_SELECTION
	b items
	c selection
	<init> (Ljava/util/List;I)V <init>
	a (I)Lezr; getItem
	a ()I getSelectedSlot
ezu net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b TELEPORT_TEXT
	c TELEPORT_PROMPT
	d items
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	a ()Ljava/util/List; getItems
	b ()Lsw; getPrompt
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
	a (Lffb;)Lezr; lambda$new$2
	b (Lffb;)Z lambda$new$1
	c (Lffb;)Ljava/util/UUID; lambda$static$0
	<clinit> ()V <clinit>
ezv net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a TELEPORT_TEXT
	b TELEPORT_PROMPT
	c items
	<init> ()V <init>
	a (Lenn;Lefg;)Ljava/util/List; createTeamEntries
	a ()Ljava/util/List; getItems
	b ()Lsw; getPrompt
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
	a (Lenn;Lefe;)Ljava/util/stream/Stream; lambda$createTeamEntries$0
	<clinit> ()V <clinit>
ezv$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	a team
	b iconSkin
	c players
	<init> (Lefe;Ljava/util/List;Lacq;)V <init>
	a (Lenn;Lefe;)Ljava/util/Optional; create
	a (Lezp;)V selectItem
	aI_ ()Lsw; getName
	a (Leox;FI)V renderIcon
	aJ_ ()Z isEnabled
ezw net/minecraft/client/gui/spectator/categories/package-info
ezx net/minecraft/client/gui/spectator/package-info
ezy net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e quickPlay
	<init> (Lezy$d;Leha;Lezy$a;Lezy$b;Lezy$c;)V <init>
ezy$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	<init> (Ljava/io/File;Ljava/io/File;Ljava/io/File;Ljava/lang/String;)V <init>
	a ()Ljava/nio/file/Path; getExternalAssetSource
ezy$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
	d disableMultiplayer
	e disableChat
	<init> (ZLjava/lang/String;Ljava/lang/String;ZZ)V <init>
ezy$c net/minecraft/client/main/GameConfig$QuickPlayData
	a path
	b singleplayer
	c multiplayer
	d realms
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()Z isEnabled
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; path
	c ()Ljava/lang/String; singleplayer
	d ()Ljava/lang/String; multiplayer
	e ()Ljava/lang/String; realms
ezy$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
	<init> (Leoc;Lcom/mojang/authlib/properties/PropertyMap;Lcom/mojang/authlib/properties/PropertyMap;Ljava/net/Proxy;)V <init>
net/minecraft/client/main/Main net/minecraft/client/main/Main
	a LOGGER
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Ljava/lang/String;)Ljava/util/Optional; emptyStringToEmptyOptional
	a (Ljava/lang/Integer;)Ljava/util/OptionalInt; ofNullable
	a (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; parseArgument
	b (Ljava/lang/String;)Z stringHasValue
	<clinit> ()V <clinit>
net/minecraft/client/main/Main$1 net/minecraft/client/main/Main$1
	a val$proxyUser
	b val$proxyPass
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	getPasswordAuthentication ()Ljava/net/PasswordAuthentication; getPasswordAuthentication
net/minecraft/client/main/Main$2 net/minecraft/client/main/Main$2
	<init> (Ljava/lang/String;)V <init>
	run ()V run
net/minecraft/client/main/Main$3 net/minecraft/client/main/Main$3
	a val$minecraft
	<init> (Ljava/lang/String;Lenn;)V <init>
	run ()V run
ezz net/minecraft/client/main/SilentInitException
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
faa net/minecraft/client/main/package-info
fab net/minecraft/client/model/AbstractZombieModel
	<init> (Lfee;)V <init>
	a (Lbwc;FFFFF)V setupAnim
	a (Lbwc;)Z isAggressive
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fac net/minecraft/client/model/AgeableHierarchicalModel
	a youngScaleFactor
	b bodyYOffset
	<init> (FF)V <init>
	<init> (FFLjava/util/function/Function;)V <init>
	a (Leij;Lein;IIFFFF)V renderToBuffer
fad net/minecraft/client/model/AgeableListModel
	a scaleHead
	b babyYHeadOffset
	f babyZHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	<init> (ZFF)V <init>
	<init> (ZFFFFF)V <init>
	<init> (Ljava/util/function/Function;ZFFFFF)V <init>
	<init> ()V <init>
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$3
	b (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$2
	c (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$1
	d (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$0
fae net/minecraft/client/model/AllayModel
	a root
	b head
	f body
	g right_arm
	h left_arm
	i right_wing
	j left_wing
	k FLYING_ANIMATION_X_ROT
	l MAX_HAND_HOLDING_ITEM_X_ROT_RAD
	m MIN_HAND_HOLDING_ITEM_X_ROT_RAD
	<init> (Lfee;)V <init>
	a ()Lfee; root
	b ()Lfek; createBodyLayer
	a (Lbsp;FFFFF)V setupAnim
	a (Lbft;Leij;)V translateToHand
	a (Lbfj;FFFFF)V setupAnim
faf net/minecraft/client/model/AnimationUtils
	<init> ()V <init>
	a (Lfee;Lfee;Lfee;Z)V animateCrossbowHold
	a (Lfee;Lfee;Lbfz;Z)V animateCrossbowCharge
	a (Lfee;Lfee;Lbgb;FF)V swingWeaponDown
	a (Lfee;FF)V bobModelPart
	a (Lfee;Lfee;F)V bobArms
	a (Lfee;Lfee;ZFF)V animateZombieArms
fag net/minecraft/client/model/ArmedModel
	a (Lbft;Leij;)V translateToHand
fah net/minecraft/client/model/ArmorStandArmorModel
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a (Lbux;FFFFF)V setupAnim
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fai net/minecraft/client/model/ArmorStandModel
	a RIGHT_BODY_STICK
	b LEFT_BODY_STICK
	w SHOULDER_STICK
	x BASE_PLATE
	y rightBodyStick
	z leftBodyStick
	A shoulderStick
	B basePlate
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbux;FFF)V prepareMobModel
	a (Lbux;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbft;Leij;)V translateToHand
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfz;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
faj net/minecraft/client/model/AxolotlModel
	a SWIMMING_LEG_XROT
	b tail
	f leftHindLeg
	g rightHindLeg
	h leftFrontLeg
	i rightFrontLeg
	j body
	k head
	l topGills
	m leftGills
	n rightGills
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbss;FFFFF)V setupAnim
	a (Lbss;)V saveAnimationValues
	a (Lfee;)Lorg/joml/Vector3f; getRotationVector
	a (Lfee;Lorg/joml/Vector3f;)V setRotationFromVector
	a (Lbss;FF)V setupInitialAnimationValues
	a (FF)F lerpTo
	a (FFF)F lerpTo
	a (Lfee;FFF)V lerpPart
	b (FF)V setupLayStillOnGroundAnimation
	c (FF)V setupGroundCrawlingAnimation
	a (F)V setupWaterHoveringAnimation
	d (FF)V setupSwimmingAnimation
	b (F)V setupPlayDeadAnimation
	d ()V applyMirrorLegRotations
	a (Lbfj;FFFFF)V setupAnim
fak net/minecraft/client/model/BatModel
	a root
	b head
	f body
	g rightWing
	h leftWing
	i rightWingTip
	j leftWingTip
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbrg;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fal net/minecraft/client/model/BeeModel
	a BEE_Y_BASE
	b BONE
	f STINGER
	g LEFT_ANTENNA
	h RIGHT_ANTENNA
	i FRONT_LEGS
	j MIDDLE_LEGS
	k BACK_LEGS
	l bone
	m rightWing
	n leftWing
	o frontLeg
	p midLeg
	q backLeg
	r stinger
	s leftAntenna
	t rightAntenna
	u rollAmount
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbrm;FFF)V prepareMobModel
	a (Lbrm;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fam net/minecraft/client/model/BlazeModel
	a root
	b upperBodyParts
	f head
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; getPartName
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
	a (Lfee;I)Lfee; lambda$new$0
fan net/minecraft/client/model/BoatModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f WATER_PATCH
	g BOTTOM
	h BACK
	i FRONT
	j RIGHT
	k LEFT
	l leftPaddle
	m rightPaddle
	n waterPatch
	o parts
	<init> (Lfee;)V <init>
	a (Lfee;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfen;)V createChildren
	a ()Lfek; createBodyModel
	a (Lcah;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Lfee; waterPatch
	a (Lcah;ILfee;F)V animatePaddle
	d ()Ljava/lang/Iterable; parts
	a (Lbfj;FFFFF)V setupAnim
fao net/minecraft/client/model/BookModel
	a LEFT_PAGES
	b RIGHT_PAGES
	c FLIP_PAGE_1
	d FLIP_PAGE_2
	e root
	f leftLid
	g rightLid
	h leftPages
	i rightPages
	j flipPage1
	k flipPage2
	<init> (Lfee;)V <init>
	a ()Lfek; createBodyLayer
	a (Leij;Lein;IIFFFF)V renderToBuffer
	b (Leij;Lein;IIFFFF)V render
	a (FFFF)V setupAnim
fap net/minecraft/client/model/CamelModel
	a MAX_WALK_ANIMATION_SPEED
	b WALK_ANIMATION_SCALE_FACTOR
	f BABY_SCALE
	g BABY_Y_OFFSET
	h SADDLE
	i BRIDLE
	j REINS
	k root
	l head
	m saddleParts
	n ridingParts
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbsx;FFFFF)V setupAnim
	a (Lbsx;FFF)V applyHeadRotation
	a (Lbsx;)V toggleInvisibleParts
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
faq net/minecraft/client/model/CatModel
	q lieDownAmount
	r lieDownAmountTail
	s relaxStateOneAmount
	<init> (Lfee;)V <init>
	a (Lbro;FFF)V prepareMobModel
	a (Lbro;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
far net/minecraft/client/model/ChestBoatModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	<init> (Lfee;)V <init>
	a (Lfee;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	e ()Lfek; createBodyModel
fas net/minecraft/client/model/ChestRaftModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	<init> (Lfee;)V <init>
	a (Lfee;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a ()Lfek; createBodyModel
fat net/minecraft/client/model/ChestedHorseModel
	g leftChest
	h rightChest
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbtj;FFFFF)V setupAnim
	a (Lbtk;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fau net/minecraft/client/model/ChickenModel
	a RED_THING
	b head
	f body
	g rightLeg
	h leftLeg
	i rightWing
	j leftWing
	k beak
	l redThing
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfj;FFFFF)V setupAnim
fav net/minecraft/client/model/CodModel
	a root
	b tailFin
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
faw net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	<init> ()V <init>
	a (FFF)V setColor
	a (Leij;Lein;IIFFFF)V renderToBuffer
fax net/minecraft/client/model/ColorableHierarchicalModel
	a r
	b g
	f b
	<init> ()V <init>
	a (FFF)V setColor
	a (Leij;Lein;IIFFFF)V renderToBuffer
fay net/minecraft/client/model/CowModel
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	d ()Lfee; getHead
faz net/minecraft/client/model/CreeperModel
	a root
	b head
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j Y_OFFSET
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fba net/minecraft/client/model/DolphinModel
	a root
	b body
	f tail
	g tailFin
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fbb net/minecraft/client/model/DrownedModel
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a (Lbwv;FFF)V prepareMobModel
	a (Lbwv;FFFFF)V setupAnim
	a (Lbwc;FFFFF)V setupAnim
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfz;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fbc net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	<init> (Lfee;)V <init>
	c ()Lfek; createLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fbd net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fbe net/minecraft/client/model/EndermiteModel
	a BODY_COUNT
	b BODY_SIZES
	f BODY_TEXS
	g root
	h bodyParts
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; createSegmentName
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
	<clinit> ()V <clinit>
fbf net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	<init> ()V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Lbfj;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
	a (Lfbf;)V copyPropertiesTo
fbg net/minecraft/client/model/EvokerFangsModel
	a BASE
	b UPPER_JAW
	f LOWER_JAW
	g root
	h base
	i upperJaw
	j lowerJaw
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
fbh net/minecraft/client/model/FoxModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j tail
	k LEG_SIZE
	l HEAD_HEIGHT
	m LEG_POS
	n legMotionPos
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbrv;FFF)V prepareMobModel
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbrv;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fbi net/minecraft/client/model/FrogModel
	a MAX_WALK_ANIMATION_SPEED
	b MAX_SWIM_ANIMATION_SPEED
	f WALK_ANIMATION_SCALE_FACTOR
	g root
	h body
	i head
	j eyes
	k tongue
	l leftArm
	m rightArm
	n leftLeg
	o rightLeg
	p croakingBody
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbta;FFFFF)V setupAnim
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fbj net/minecraft/client/model/GhastModel
	a root
	b tentacles
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; createTentacleName
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
fbk net/minecraft/client/model/GiantZombieModel
	<init> (Lfee;)V <init>
	a (Lbvx;)Z isAggressive
	a (Lbwc;)Z isAggressive
fbl net/minecraft/client/model/GoatModel
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbtg;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fbm net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j EYE
	k TAIL_0
	l TAIL_1
	m TAIL_2
	n root
	o head
	p eye
	q spikeParts
	r tailParts
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; createSpikeName
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbvy;FFFFF)V setupAnim
	a (FF)V setupSpikes
	a (IFF)F getSpikeOffset
	b (IFF)F getSpikeX
	c (IFF)F getSpikeY
	d (IFF)F getSpikeZ
	a (Lbfj;FFFFF)V setupAnim
	<clinit> ()V <clinit>
fbn net/minecraft/client/model/HeadedModel
	d ()Lfee; getHead
fbo net/minecraft/client/model/HierarchicalModel
	a ANIMATION_VECTOR_CACHE
	<init> ()V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a ()Lfee; root
	a (Ljava/lang/String;)Ljava/util/Optional; getAnyDescendantWithName
	a (Lbff;Leoe;F)V animate
	a (Leoe;FFFF)V animateWalk
	a (Lbff;Leoe;FF)V animate
	a (Leoe;)V applyStatic
	a (Leoe;Lbff;)V lambda$animate$2
	a (Ljava/lang/String;Lfee;)Lfee; lambda$getAnyDescendantWithName$1
	b (Ljava/lang/String;Lfee;)Z lambda$getAnyDescendantWithName$0
	<clinit> ()V <clinit>
fbp net/minecraft/client/model/HoglinModel
	a DEFAULT_HEAD_X_ROT
	b ATTACK_HEAD_X_ROT_END
	f head
	g rightEar
	h leftEar
	i body
	j rightFrontLeg
	k leftFrontLeg
	l rightHindLeg
	m leftHindLeg
	n mane
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbgb;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fbq net/minecraft/client/model/HorseModel
	g DEG_125
	h DEG_60
	i DEG_45
	j DEG_30
	k DEG_15
	a HEAD_PARTS
	l LEFT_HIND_BABY_LEG
	m RIGHT_HIND_BABY_LEG
	n LEFT_FRONT_BABY_LEG
	o RIGHT_FRONT_BABY_LEG
	p SADDLE
	q LEFT_SADDLE_MOUTH
	r LEFT_SADDLE_LINE
	s RIGHT_SADDLE_MOUTH
	t RIGHT_SADDLE_LINE
	u HEAD_SADDLE
	w MOUTH_SADDLE_WRAP
	b body
	f headParts
	x rightHindLeg
	y leftHindLeg
	z rightFrontLeg
	A leftFrontLeg
	B rightHindBabyLeg
	C leftHindBabyLeg
	D rightFrontBabyLeg
	E leftFrontBabyLeg
	F tail
	G saddleParts
	H ridingParts
	<init> (Lfee;)V <init>
	a (Lfei;)Lfem; createBodyMesh
	a (Lbtk;FFFFF)V setupAnim
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbtk;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fbr net/minecraft/client/model/HumanoidArmorModel
	<init> (Lfee;)V <init>
	a (Lfei;)Lfem; createBodyLayer
fbs net/minecraft/client/model/HumanoidModel
	f OVERLAY_SCALE
	g HAT_OVERLAY_SCALE
	h LEGGINGS_OVERLAY_SCALE
	a DUCK_WALK_ROTATION
	b SPYGLASS_ARM_ROT_Y
	w SPYGLASS_ARM_ROT_X
	x SPYGLASS_ARM_CROUCH_ROT_X
	i TOOT_HORN_XROT_BASE
	j TOOT_HORN_YROT_BASE
	k head
	l hat
	m body
	n rightArm
	o leftArm
	p rightLeg
	q leftLeg
	r leftArmPose
	s rightArmPose
	t crouching
	u swimAmount
	<init> (Lfee;)V <init>
	<init> (Lfee;Ljava/util/function/Function;)V <init>
	a (Lfei;F)Lfem; createMesh
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfz;FFF)V prepareMobModel
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfz;)V poseRightArm
	b (Lbfz;)V poseLeftArm
	a (Lbfz;F)V setupAttackAnimation
	a (FFF)F rotlerpRad
	a (F)F quadraticArmUpdate
	a (Lfbs;)V copyPropertiesTo
	d_ (Z)V setAllVisible
	a (Lbft;Leij;)V translateToHand
	a (Lbft;)Lfee; getArm
	d ()Lfee; getHead
	c (Lbfz;)Lbft; getAttackArm
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fbs$1 net/minecraft/client/model/HumanoidModel$1
	a $SwitchMap$net$minecraft$client$model$HumanoidModel$ArmPose
	<clinit> ()V <clinit>
fbs$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k twoHanded
	l $VALUES
	values ()[Lfbs$a; values
	valueOf (Ljava/lang/String;)Lfbs$a; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	a ()Z isTwoHanded
	b ()[Lfbs$a; $values
	<clinit> ()V <clinit>
fbt net/minecraft/client/model/IllagerModel
	a root
	b head
	f hat
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbvk;FFFFF)V setupAnim
	a (Lbft;)Lfee; getArm
	c ()Lfee; getHat
	d ()Lfee; getHead
	a (Lbft;Leij;)V translateToHand
	a (Lbfj;FFFFF)V setupAnim
fbu net/minecraft/client/model/IronGolemModel
	a root
	b head
	f rightArm
	g leftArm
	h rightLeg
	i leftLeg
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbrx;FFFFF)V setupAnim
	a (Lbrx;FFF)V prepareMobModel
	c ()Lfee; getFlowerHoldingArm
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fbv net/minecraft/client/model/LavaSlimeModel
	a SEGMENT_COUNT
	b root
	f bodyCubes
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; getSegmentName
	b ()Lfek; createBodyLayer
	a (Lbwl;FFFFF)V setupAnim
	a (Lbwl;FFF)V prepareMobModel
	a ()Lfee; root
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
	a (Lfee;I)Lfee; lambda$new$0
fbw net/minecraft/client/model/LeashKnotModel
	a KNOT
	b root
	f knot
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fbx net/minecraft/client/model/ListModel
	<init> ()V <init>
	<init> (Ljava/util/function/Function;)V <init>
	a (Leij;Lein;IIFFFF)V renderToBuffer
	d ()Ljava/lang/Iterable; parts
	a (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$0
fby net/minecraft/client/model/LlamaModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j rightChest
	k leftChest
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a (Lbtj;FFFFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a (Lbfj;FFFFF)V setupAnim
	a (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$1
	b (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$0
fbz net/minecraft/client/model/LlamaSpitModel
	a MAIN
	b root
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
fca net/minecraft/client/model/MinecartModel
	a root
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
fcb net/minecraft/client/model/Model
	v renderType
	<init> (Ljava/util/function/Function;)V <init>
	a (Lacq;)Lfkf; renderType
	a (Leij;Lein;IIFFFF)V renderToBuffer
fcc net/minecraft/client/model/ModelUtils
	<init> ()V <init>
	a (FFF)F rotlerpRad
fcd net/minecraft/client/model/OcelotModel
	q CROUCH_STATE
	r WALK_STATE
	s SPRINT_STATE
	a SITTING_STATE
	t XO
	u YO
	w ZO
	x HEAD_WALK_Y
	y HEAD_WALK_Z
	z BODY_WALK_Y
	A BODY_WALK_Z
	B TAIL_1_WALK_Y
	C TAIL_1_WALK_Z
	D TAIL_2_WALK_Y
	E TAIL_2_WALK_Z
	b BACK_LEG_Y
	f BACK_LEG_Z
	g FRONT_LEG_Y
	F FRONT_LEG_Z
	G TAIL_1
	H TAIL_2
	h leftHindLeg
	i rightHindLeg
	j leftFrontLeg
	k rightFrontLeg
	l tail1
	m tail2
	n head
	o body
	p state
	<init> (Lfee;)V <init>
	a (Lfei;)Lfem; createBodyMesh
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfj;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
fce net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbsa;FFF)V prepareMobModel
	a (Lbsa;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
fcf net/minecraft/client/model/ParrotModel
	a FEATHER
	b root
	f body
	g tail
	h leftWing
	i rightWing
	j head
	k feather
	l leftLeg
	m rightLeg
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbsb;FFFFF)V setupAnim
	a (Lbsb;FFF)V prepareMobModel
	a (Leij;Lein;IIFFFFI)V renderOnShoulder
	a (Lfcf$a;IFFFFF)V setupAnim
	a (Lfcf$a;)V prepare
	a (Lbsb;)Lfcf$a; getState
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fcf$1 net/minecraft/client/model/ParrotModel$1
	a $SwitchMap$net$minecraft$client$model$ParrotModel$State
	<clinit> ()V <clinit>
fcf$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
	values ()[Lfcf$a; values
	valueOf (Ljava/lang/String;)Lfcf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfcf$a; $values
	<clinit> ()V <clinit>
fcg net/minecraft/client/model/PhantomModel
	a TAIL_BASE
	b TAIL_TIP
	f root
	g leftWingBase
	h leftWingTip
	i rightWingBase
	j rightWingTip
	k tailBase
	l tailTip
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbwe;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fch net/minecraft/client/model/PigModel
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
fci net/minecraft/client/model/PiglinHeadModel
	a head
	b leftEar
	c rightEar
	<init> (Lfee;)V <init>
	a ()Lfem; createHeadModel
	a (FFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
fcj net/minecraft/client/model/PiglinModel
	a rightEar
	A leftEar
	B bodyDefault
	C headDefault
	D leftArmDefault
	E rightArmDefault
	<init> (Lfee;)V <init>
	a (Lfei;)Lfem; createMesh
	a (Lfei;Lfem;)V addHead
	a (Lbgb;FFFFF)V setupAnim
	a (Lbgb;F)V setupAttackAnimation
	a (Lbgb;)V holdWeaponHigh
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfz;F)V setupAttackAnimation
	a (Lbfj;FFFFF)V setupAnim
fck net/minecraft/client/model/PlayerModel
	a EAR
	A CLOAK
	B LEFT_SLEEVE
	C RIGHT_SLEEVE
	D LEFT_PANTS
	E RIGHT_PANTS
	F parts
	b leftSleeve
	w rightSleeve
	x leftPants
	y rightPants
	z jacket
	G cloak
	H ear
	I slim
	<init> (Lfee;Z)V <init>
	a (Lfei;Z)Lfem; createMesh
	b ()Ljava/lang/Iterable; bodyParts
	a (Leij;Lein;II)V renderEars
	b (Leij;Lein;II)V renderCloak
	a (Lbfz;FFFFF)V setupAnim
	d_ (Z)V setAllVisible
	a (Lbft;Leij;)V translateToHand
	a (Lapf;)Lfee; getRandomModelPart
	a (Lbfj;FFFFF)V setupAnim
	a (Lfee;)Z lambda$new$0
fcl net/minecraft/client/model/PolarBearModel
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbsd;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fcm net/minecraft/client/model/PufferfishBigModel
	a root
	b leftBlueFin
	f rightBlueFin
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fcn net/minecraft/client/model/PufferfishMidModel
	a root
	b leftBlueFin
	f rightBlueFin
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fco net/minecraft/client/model/PufferfishSmallModel
	a root
	b leftFin
	f rightFin
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fcp net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	<init> (Lfee;ZFFFFI)V <init>
	a (ILfei;)Lfem; createBodyMesh
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbfj;FFFFF)V setupAnim
fcq net/minecraft/client/model/RabbitModel
	a REAR_JUMP_ANGLE
	b FRONT_JUMP_ANGLE
	f LEFT_HAUNCH
	g RIGHT_HAUNCH
	h leftRearFoot
	i rightRearFoot
	j leftHaunch
	k rightHaunch
	l body
	m leftFrontLeg
	n rightFrontLeg
	o head
	p rightEar
	q leftEar
	r tail
	s nose
	t jumpRotation
	u NEW_SCALE
	<init> (Lfee;)V <init>
	a ()Lfek; createBodyLayer
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a (Lbsf;FFFFF)V setupAnim
	a (Lbsf;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
	a (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$2
	b (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$1
	c (Leij;Lein;IIFFFFLfee;)V lambda$renderToBuffer$0
fcr net/minecraft/client/model/RaftModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f BOTTOM
	g leftPaddle
	h rightPaddle
	i parts
	<init> (Lfee;)V <init>
	a (Lfee;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfen;)V createChildren
	b ()Lfek; createBodyModel
	a (Lcah;FFFFF)V setupAnim
	c ()Lcom/google/common/collect/ImmutableList; parts
	a (Lcah;ILfee;F)V animatePaddle
	d ()Ljava/lang/Iterable; parts
	a (Lbfj;FFFFF)V setupAnim
fcs net/minecraft/client/model/RavagerModel
	a root
	b head
	f mouth
	g rightHindLeg
	h leftHindLeg
	i rightFrontLeg
	j leftFrontLeg
	k neck
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbwh;FFFFF)V setupAnim
	a (Lbwh;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fct net/minecraft/client/model/SalmonModel
	a BODY_FRONT
	b BODY_BACK
	f root
	g bodyBack
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fcu net/minecraft/client/model/SheepFurModel
	j headXRot
	<init> (Lfee;)V <init>
	c ()Lfek; createFurLayer
	a (Lbsh;FFF)V prepareMobModel
	a (Lbsh;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
fcv net/minecraft/client/model/SheepModel
	j headXRot
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbsh;FFF)V prepareMobModel
	a (Lbsh;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
fcw net/minecraft/client/model/ShieldModel
	a PLATE
	b HANDLE
	c SHIELD_WIDTH
	d SHIELD_HEIGHT
	e root
	f plate
	g handle
	<init> (Lfee;)V <init>
	a ()Lfek; createLayer
	b ()Lfee; plate
	c ()Lfee; handle
	a (Leij;Lein;IIFFFF)V renderToBuffer
fcx net/minecraft/client/model/ShulkerBulletModel
	a MAIN
	b root
	f main
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fcy net/minecraft/client/model/ShulkerModel
	a LID
	b BASE
	f base
	g lid
	h head
	<init> (Lfee;)V <init>
	a ()Lfek; createBodyLayer
	a (Lbwi;FFFFF)V setupAnim
	d ()Ljava/lang/Iterable; parts
	b ()Lfee; getLid
	c ()Lfee; getHead
	a (Lbfj;FFFFF)V setupAnim
fcz net/minecraft/client/model/SilverfishModel
	a BODY_COUNT
	b root
	f bodyParts
	g bodyLayers
	h BODY_SIZES
	i BODY_TEXS
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; getLayerName
	b (I)Ljava/lang/String; getSegmentName
	b ()Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
	a (Lfee;I)Lfee; lambda$new$1
	b (Lfee;I)Lfee; lambda$new$0
	<clinit> ()V <clinit>
fda net/minecraft/client/model/SkeletonModel
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbgb;FFF)V prepareMobModel
	a (Lbgb;FFFFF)V setupAnim
	a (Lbft;Leij;)V translateToHand
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfz;FFF)V prepareMobModel
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fdb net/minecraft/client/model/SkullModel
	b root
	a head
	<init> (Lfee;)V <init>
	a ()Lfem; createHeadModel
	b ()Lfek; createHumanoidHeadLayer
	c ()Lfek; createMobHeadLayer
	a (FFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
fdc net/minecraft/client/model/SkullModelBase
	<init> ()V <init>
	a (FFF)V setupAnim
fdd net/minecraft/client/model/SlimeModel
	a root
	<init> (Lfee;)V <init>
	b ()Lfek; createOuterBodyLayer
	c ()Lfek; createInnerBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
fde net/minecraft/client/model/SnifferModel
	a WALK_ANIMATION_SPEED_MAX
	b WALK_ANIMATION_SCALE_FACTOR
	f root
	g head
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbtx;FFFFF)V setupAnim
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fdf net/minecraft/client/model/SnowGolemModel
	a UPPER_BODY
	b root
	f upperBody
	g head
	h leftArm
	i rightArm
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
	c ()Lfee; getHead
fdg net/minecraft/client/model/SpiderModel
	a BODY_0
	b BODY_1
	f RIGHT_MIDDLE_FRONT_LEG
	g LEFT_MIDDLE_FRONT_LEG
	h RIGHT_MIDDLE_HIND_LEG
	i LEFT_MIDDLE_HIND_LEG
	j root
	k head
	l rightHindLeg
	m leftHindLeg
	n rightMiddleHindLeg
	o leftMiddleHindLeg
	p rightMiddleFrontLeg
	q leftMiddleFrontLeg
	r rightFrontLeg
	s leftFrontLeg
	<init> (Lfee;)V <init>
	b ()Lfek; createSpiderBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fdh net/minecraft/client/model/SquidModel
	a tentacles
	b root
	<init> (Lfee;)V <init>
	a (I)Ljava/lang/String; createTentacleName
	b ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	a ()Lfee; root
	a (Lfee;I)Lfee; lambda$new$0
fdi net/minecraft/client/model/StriderModel
	a RIGHT_BOTTOM_BRISTLE
	b RIGHT_MIDDLE_BRISTLE
	f RIGHT_TOP_BRISTLE
	g LEFT_TOP_BRISTLE
	h LEFT_MIDDLE_BRISTLE
	i LEFT_BOTTOM_BRISTLE
	j root
	k rightLeg
	l leftLeg
	m body
	n rightBottomBristle
	o rightMiddleBristle
	p rightTopBristle
	q leftTopBristle
	r leftMiddleBristle
	s leftBottomBristle
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbwp;FFFFF)V setupAnim
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fdj net/minecraft/client/model/TadpoleModel
	a root
	b tail
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbtd;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fdk net/minecraft/client/model/TridentModel
	a TEXTURE
	b root
	<init> (Lfee;)V <init>
	a ()Lfek; createLayer
	a (Leij;Lein;IIFFFF)V renderToBuffer
	<clinit> ()V <clinit>
fdl net/minecraft/client/model/TropicalFishModelA
	a root
	b tail
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fdm net/minecraft/client/model/TropicalFishModelB
	a root
	b tail
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
fdn net/minecraft/client/model/TurtleModel
	j EGG_BELLY
	k eggBelly
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbsm;FFFFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a (Lbfj;FFFFF)V setupAnim
fdo net/minecraft/client/model/VexModel
	a root
	b body
	f rightArm
	g leftArm
	h rightWing
	i leftWing
	j head
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbwq;FFFFF)V setupAnim
	a (Lcfz;Lcfz;F)V setArmsCharging
	a ()Lfee; root
	a (Lbft;Leij;)V translateToHand
	a (Leij;Z)V offsetStackPosition
	a (Lbfj;FFFFF)V setupAnim
fdp net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
fdq net/minecraft/client/model/VillagerModel
	b root
	f head
	g hat
	h hatRim
	i rightLeg
	j leftLeg
	a nose
	<init> (Lfee;)V <init>
	b ()Lfem; createBodyModel
	a ()Lfee; root
	a (Lbfj;FFFFF)V setupAnim
	d ()Lfee; getHead
	a (Z)V hatVisible
fdr net/minecraft/client/model/WardenModel
	o DEFAULT_ARM_X_Y
	p DEFAULT_ARM_Z
	q root
	a bone
	b body
	f head
	g rightTendril
	h leftTendril
	i leftLeg
	j leftArm
	k leftRibcage
	l rightArm
	m rightLeg
	n rightRibcage
	r tendrilsLayerModelParts
	s heartLayerModelParts
	t bioluminescentLayerModelParts
	u pulsatingSpotsLayerModelParts
	<init> (Lfee;)V <init>
	b ()Lfek; createBodyLayer
	a (Lbxs;FFFFF)V setupAnim
	a (FF)V animateHeadLookTarget
	a (F)V animateIdlePose
	b (FF)V animateWalk
	g ()V resetArmPoses
	a (Lbxs;FF)V animateTendrils
	a ()Lfee; root
	c ()Ljava/util/List; getTendrilsLayerModelParts
	d ()Ljava/util/List; getHeartLayerModelParts
	e ()Ljava/util/List; getBioluminescentLayerModelParts
	f ()Ljava/util/List; getPulsatingSpotsLayerModelParts
	a (Lbfj;FFFFF)V setupAnim
fds net/minecraft/client/model/WaterPatchModel
	c ()Lfee; waterPatch
fdt net/minecraft/client/model/WitchModel
	b holdingItem
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lbfj;FFFFF)V setupAnim
	e ()Lfee; getNose
	b (Z)V setHoldingItem
fdu net/minecraft/client/model/WitherBossModel
	a RIBCAGE
	b CENTER_HEAD
	f RIGHT_HEAD
	g LEFT_HEAD
	h RIBCAGE_X_ROT_OFFSET
	i TAIL_X_ROT_OFFSET
	j root
	k centerHead
	l rightHead
	m leftHead
	n ribcage
	o tail
	<init> (Lfee;)V <init>
	a (Lfei;)Lfek; createBodyLayer
	a ()Lfee; root
	a (Lbuv;FFFFF)V setupAnim
	a (Lbuv;FFF)V prepareMobModel
	a (Lbuv;Lfee;I)V setupHeadRotation
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fdv net/minecraft/client/model/WolfModel
	a REAL_HEAD
	b UPPER_BODY
	f REAL_TAIL
	g head
	h realHead
	i body
	j rightHindLeg
	k leftHindLeg
	l rightFrontLeg
	m leftFrontLeg
	n tail
	o realTail
	p upperBody
	q LEG_SIZE
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a ()Ljava/lang/Iterable; headParts
	b ()Ljava/lang/Iterable; bodyParts
	a (Lbso;FFF)V prepareMobModel
	a (Lbso;FFFFF)V setupAnim
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fdw net/minecraft/client/model/ZombieModel
	<init> (Lfee;)V <init>
	a (Lbwv;)Z isAggressive
	a (Lbwc;)Z isAggressive
fdx net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	<init> (Lfee;)V <init>
	c ()Lfek; createBodyLayer
	a (Lfei;)Lfek; createArmorLayer
	a (Lbwv;FFFFF)V setupAnim
	a (Z)V hatVisible
	a (Lbfz;FFFFF)V setupAnim
	a (Lbfj;FFFFF)V setupAnim
fdy net/minecraft/client/model/dragon/DragonHeadModel
	a head
	b jaw
	<init> (Lfee;)V <init>
	a ()Lfek; createHeadLayer
	a (FFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
fdz net/minecraft/client/model/dragon/package-info
fea net/minecraft/client/model/geom/EntityModelSet
	a roots
	<init> ()V <init>
	a (Lfec;)Lfee; bakeLayer
	a (Lakx;)V onResourceManagerReload
feb net/minecraft/client/model/geom/LayerDefinitions
	a FISH_PATTERN_DEFORMATION
	b OUTER_ARMOR_DEFORMATION
	c INNER_ARMOR_DEFORMATION
	<init> ()V <init>
	a ()Ljava/util/Map; createRoots
	a (Lcom/google/common/collect/ImmutableMap;Lfec;)Z lambda$createRoots$2
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lfek;Lddo;)V lambda$createRoots$1
	b (Lcom/google/common/collect/ImmutableMap$Builder;Lfek;Lddo;)V lambda$createRoots$0
	<clinit> ()V <clinit>
fec net/minecraft/client/model/geom/ModelLayerLocation
	a model
	b layer
	<init> (Lacq;Ljava/lang/String;)V <init>
	a ()Lacq; getModel
	b ()Ljava/lang/String; getLayer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
fed net/minecraft/client/model/geom/ModelLayers
	ci DEFAULT_LAYER
	cj ALL_MODELS
	a ALLAY
	b ARMOR_STAND
	c ARMOR_STAND_INNER_ARMOR
	d ARMOR_STAND_OUTER_ARMOR
	e AXOLOTL
	f BANNER
	g BAT
	h BED_FOOT
	i BED_HEAD
	j BEE
	k BELL
	l BLAZE
	m BOOK
	n CAT
	o CAT_COLLAR
	p CAMEL
	q CAVE_SPIDER
	r CHEST
	s CHEST_MINECART
	t CHICKEN
	u COD
	v COMMAND_BLOCK_MINECART
	w CONDUIT_CAGE
	x CONDUIT_EYE
	y CONDUIT_SHELL
	z CONDUIT_WIND
	A COW
	B CREEPER
	C CREEPER_ARMOR
	D CREEPER_HEAD
	E DECORATED_POT_BASE
	F DECORATED_POT_SIDES
	G DOLPHIN
	H DONKEY
	I DOUBLE_CHEST_LEFT
	J DOUBLE_CHEST_RIGHT
	K DRAGON_SKULL
	L DROWNED
	M DROWNED_INNER_ARMOR
	N DROWNED_OUTER_ARMOR
	O DROWNED_OUTER_LAYER
	P ELDER_GUARDIAN
	Q ELYTRA
	R ENDERMAN
	S ENDERMITE
	T ENDER_DRAGON
	U END_CRYSTAL
	V EVOKER
	W EVOKER_FANGS
	X FOX
	Y FROG
	Z FURNACE_MINECART
	aa GHAST
	ab GIANT
	ac GIANT_INNER_ARMOR
	ad GIANT_OUTER_ARMOR
	ae GLOW_SQUID
	af GOAT
	ag GUARDIAN
	ah HOGLIN
	ai HOPPER_MINECART
	aj HORSE
	ak HORSE_ARMOR
	al HUSK
	am HUSK_INNER_ARMOR
	an HUSK_OUTER_ARMOR
	ao ILLUSIONER
	ap IRON_GOLEM
	aq LEASH_KNOT
	ar LLAMA
	as LLAMA_DECOR
	at LLAMA_SPIT
	au MAGMA_CUBE
	av MINECART
	aw MOOSHROOM
	ax MULE
	ay OCELOT
	az PANDA
	aA PARROT
	aB PHANTOM
	aC PIG
	aD PIGLIN
	aE PIGLIN_BRUTE
	aF PIGLIN_BRUTE_INNER_ARMOR
	aG PIGLIN_BRUTE_OUTER_ARMOR
	aH PIGLIN_HEAD
	aI PIGLIN_INNER_ARMOR
	aJ PIGLIN_OUTER_ARMOR
	aK PIG_SADDLE
	aL PILLAGER
	aM PLAYER
	aN PLAYER_HEAD
	aO PLAYER_INNER_ARMOR
	aP PLAYER_OUTER_ARMOR
	aQ PLAYER_SLIM
	aR PLAYER_SLIM_INNER_ARMOR
	aS PLAYER_SLIM_OUTER_ARMOR
	aT PLAYER_SPIN_ATTACK
	aU POLAR_BEAR
	aV PUFFERFISH_BIG
	aW PUFFERFISH_MEDIUM
	aX PUFFERFISH_SMALL
	aY RABBIT
	aZ RAVAGER
	ba SALMON
	bb SHEEP
	bc SHEEP_FUR
	bd SHIELD
	be SHULKER
	bf SHULKER_BULLET
	bg SILVERFISH
	bh SKELETON
	bi SKELETON_HORSE
	bj SKELETON_INNER_ARMOR
	bk SKELETON_OUTER_ARMOR
	bl SKELETON_SKULL
	bm SLIME
	bn SLIME_OUTER
	bo SNIFFER
	bp SNOW_GOLEM
	bq SPAWNER_MINECART
	br SPIDER
	bs SQUID
	bt STRAY
	bu STRAY_INNER_ARMOR
	bv STRAY_OUTER_ARMOR
	bw STRAY_OUTER_LAYER
	bx STRIDER
	by STRIDER_SADDLE
	bz TADPOLE
	bA TNT_MINECART
	bB TRADER_LLAMA
	bC TRIDENT
	bD TROPICAL_FISH_LARGE
	bE TROPICAL_FISH_LARGE_PATTERN
	bF TROPICAL_FISH_SMALL
	bG TROPICAL_FISH_SMALL_PATTERN
	bH TURTLE
	bI VEX
	bJ VILLAGER
	bK VINDICATOR
	bL WARDEN
	bM WANDERING_TRADER
	bN WITCH
	bO WITHER
	bP WITHER_ARMOR
	bQ WITHER_SKELETON
	bR WITHER_SKELETON_INNER_ARMOR
	bS WITHER_SKELETON_OUTER_ARMOR
	bT WITHER_SKELETON_SKULL
	bU WITHER_SKULL
	bV WOLF
	bW ZOGLIN
	bX ZOMBIE
	bY ZOMBIE_HEAD
	bZ ZOMBIE_HORSE
	ca ZOMBIE_INNER_ARMOR
	cb ZOMBIE_OUTER_ARMOR
	cc ZOMBIE_VILLAGER
	cd ZOMBIE_VILLAGER_INNER_ARMOR
	ce ZOMBIE_VILLAGER_OUTER_ARMOR
	cf ZOMBIFIED_PIGLIN
	cg ZOMBIFIED_PIGLIN_INNER_ARMOR
	ch ZOMBIFIED_PIGLIN_OUTER_ARMOR
	<init> ()V <init>
	a (Ljava/lang/String;)Lfec; register
	a (Ljava/lang/String;Ljava/lang/String;)Lfec; register
	b (Ljava/lang/String;Ljava/lang/String;)Lfec; createLocation
	b (Ljava/lang/String;)Lfec; registerInnerArmor
	c (Ljava/lang/String;)Lfec; registerOuterArmor
	a (Lcah$b;)Lfec; createRaftModelName
	b (Lcah$b;)Lfec; createChestRaftModelName
	c (Lcah$b;)Lfec; createBoatModelName
	d (Lcah$b;)Lfec; createChestBoatModelName
	a (Lddo;)Lfec; createSignModelName
	b (Lddo;)Lfec; createHangingSignModelName
	a ()Ljava/util/stream/Stream; getKnownLocations
	<clinit> ()V <clinit>
fee net/minecraft/client/model/geom/ModelPart
	a DEFAULT_SCALE
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	h xScale
	i yScale
	j zScale
	k visible
	l skipDraw
	m cubes
	n children
	o initialPose
	<init> (Ljava/util/List;Ljava/util/Map;)V <init>
	a ()Lfeg; storePose
	b ()Lfeg; getInitialPose
	a (Lfeg;)V setInitialPose
	c ()V resetPose
	b (Lfeg;)V loadPose
	a (Lfee;)V copyFrom
	a (Ljava/lang/String;)Z hasChild
	b (Ljava/lang/String;)Lfee; getChild
	a (FFF)V setPos
	b (FFF)V setRotation
	a (Leij;Lein;II)V render
	a (Leij;Lein;IIFFFF)V render
	a (Leij;Lfee$d;)V visit
	a (Leij;Lfee$d;Ljava/lang/String;)V visit
	a (Leij;)V translateAndRotate
	a (Leij$a;Lein;IIFFFF)V compile
	a (Lapf;)Lfee$a; getRandomCube
	d ()Z isEmpty
	a (Lorg/joml/Vector3f;)V offsetPos
	b (Lorg/joml/Vector3f;)V offsetRotation
	c (Lorg/joml/Vector3f;)V offsetScale
	e ()Ljava/util/stream/Stream; getAllParts
	a (Leij;Lfee$d;Ljava/lang/String;Ljava/lang/String;Lfee;)V lambda$visit$0
fee$a net/minecraft/client/model/geom/ModelPart$Cube
	g polygons
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	<init> (IIFFFFFFFFFZFFLjava/util/Set;)V <init>
	a (Leij$a;Lein;IIFFFF)V compile
fee$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
	<init> ([Lfee$c;FFFFFFZLha;)V <init>
fee$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	<init> (FFFFF)V <init>
	a (FF)Lfee$c; remap
	<init> (Lorg/joml/Vector3f;FF)V <init>
fee$d net/minecraft/client/model/geom/ModelPart$Visitor
	visit (Leij$a;Ljava/lang/String;ILfee$a;)V visit
fef net/minecraft/client/model/geom/PartNames
	a LEFT_FIN
	b RIGHT_FIN
	c TOP_FIN
	d BOTTOM_FIN
	e TAIL_FIN
	f LEFT_BLUE_FIN
	g RIGHT_BLUE_FIN
	h LEFT_ARM
	i RIGHT_ARM
	j LEFT_WING
	k RIGHT_WING
	l LEFT_WING_BASE
	m RIGHT_WING_BASE
	n LEFT_WING_TIP
	o RIGHT_WING_TIP
	p LEFT_EAR
	q RIGHT_EAR
	r LEFT_LEG
	s RIGHT_LEG
	t LEFT_HIND_LEG
	u RIGHT_HIND_LEG
	v LEFT_MID_LEG
	w RIGHT_MID_LEG
	x LEFT_FRONT_LEG
	y RIGHT_FRONT_LEG
	z LEFT_HIND_FOOT
	A RIGHT_HIND_FOOT
	B LEFT_FRONT_FOOT
	C RIGHT_FRONT_FOOT
	D LEFT_HIND_LEG_TIP
	E RIGHT_HIND_LEG_TIP
	F LEFT_FRONT_LEG_TIP
	G RIGHT_FRONT_LEG_TIP
	H LEFT_LID
	I RIGHT_LID
	J LEFT_CHEST
	K RIGHT_CHEST
	L LEFT_HORN
	M RIGHT_HORN
	N LEFT_EYE
	O RIGHT_EYE
	P JAW
	Q NOSE
	R ARMS
	S TAIL
	T CUBE
	U BEAK
	V BACK_FIN
	W MANE
	X NECK
	Y MOUTH
	Z HEAD
	aa HAT
	ab BODY
	ac HAT_RIM
	ad JACKET
	ae TOP_GILLS
	af LEFT_GILLS
	ag RIGHT_GILLS
	ah ROOT
	ai CROAKING_BODY
	aj TONGUE
	ak TONGUE_R1
	al LEFT_HAND
	am RIGHT_HAND
	an LEFT_FOOT
	ao RIGHT_FOOT
	ap EYES
	aq RIGHT_TENDRIL
	ar LEFT_TENDRIL
	as RIGHT_RIBCAGE
	at LEFT_RIBCAGE
	au BONE
	<init> ()V <init>
feg net/minecraft/client/model/geom/PartPose
	a ZERO
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	<init> (FFFFFF)V <init>
	a (FFF)Lfeg; offset
	b (FFF)Lfeg; rotation
	a (FFFFFF)Lfeg; offsetAndRotation
	<clinit> ()V <clinit>
feh net/minecraft/client/model/geom/builders/CubeDefinition
	a comment
	b origin
	c dimensions
	d grow
	e mirror
	f texCoord
	g texScale
	h visibleFaces
	<init> (Ljava/lang/String;FFFFFFFFLfei;ZFFLjava/util/Set;)V <init>
	a (II)Lfee$a; bake
fei net/minecraft/client/model/geom/builders/CubeDeformation
	a NONE
	b growX
	c growY
	d growZ
	<init> (FFF)V <init>
	<init> (F)V <init>
	a (F)Lfei; extend
	a (FFF)Lfei; extend
	<clinit> ()V <clinit>
fej net/minecraft/client/model/geom/builders/CubeListBuilder
	a ALL_VISIBLE
	b cubes
	c xTexOffs
	d yTexOffs
	e mirror
	<init> ()V <init>
	a (II)Lfej; texOffs
	a ()Lfej; mirror
	a (Z)Lfej; mirror
	a (Ljava/lang/String;FFFIIILfei;II)Lfej; addBox
	a (Ljava/lang/String;FFFIIIII)Lfej; addBox
	a (FFFFFF)Lfej; addBox
	a (FFFFFFLjava/util/Set;)Lfej; addBox
	a (Ljava/lang/String;FFFFFF)Lfej; addBox
	a (Ljava/lang/String;FFFFFFLfei;)Lfej; addBox
	a (FFFFFFZ)Lfej; addBox
	a (FFFFFFLfei;FF)Lfej; addBox
	a (FFFFFFLfei;)Lfej; addBox
	b ()Ljava/util/List; getCubes
	c ()Lfej; create
	<clinit> ()V <clinit>
fek net/minecraft/client/model/geom/builders/LayerDefinition
	a mesh
	b material
	<init> (Lfem;Lfel;)V <init>
	a ()Lfee; bakeRoot
	a (Lfem;II)Lfek; create
fel net/minecraft/client/model/geom/builders/MaterialDefinition
	a xTexSize
	b yTexSize
	<init> (II)V <init>
fem net/minecraft/client/model/geom/builders/MeshDefinition
	a root
	<init> ()V <init>
	a ()Lfen; getRoot
fen net/minecraft/client/model/geom/builders/PartDefinition
	a cubes
	b partPose
	c children
	<init> (Ljava/util/List;Lfeg;)V <init>
	a (Ljava/lang/String;Lfej;Lfeg;)Lfen; addOrReplaceChild
	a (II)Lfee; bake
	a (Ljava/lang/String;)Lfen; getChild
	a (IILfeh;)Lfee$a; lambda$bake$2
	a (Lfee;Lfee;)Lfee; lambda$bake$1
	a (IILjava/util/Map$Entry;)Lfee; lambda$bake$0
feo net/minecraft/client/model/geom/builders/UVPair
	a u
	b v
	<init> (FF)V <init>
	a ()F u
	b ()F v
	toString ()Ljava/lang/String; toString
fep net/minecraft/client/model/geom/builders/package-info
feq net/minecraft/client/model/geom/package-info
fer net/minecraft/client/model/package-info
fes net/minecraft/client/multiplayer/AccountProfileKeyPairManager
	b LOGGER
	c MINIMUM_PROFILE_KEY_REFRESH_INTERVAL
	d PROFILE_KEY_PAIR_DIR
	e userApiService
	f profileKeyPairPath
	g keyPair
	h nextProfileKeyRefreshTime
	<init> (Lcom/mojang/authlib/minecraft/UserApiService;Ljava/util/UUID;Ljava/nio/file/Path;)V <init>
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	b ()Z shouldRefreshKeyPair
	a (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; readOrFetchProfileKeyPair
	c ()Ljava/util/Optional; readProfileKeyPair
	a (Lbyq;)V writeProfileKeyPair
	a (Lcom/mojang/authlib/minecraft/UserApiService;)Lbyq; fetchProfileKeyPair
	a (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lbyr$a; parsePublicKey
	a (Lcom/google/gson/JsonElement;)V lambda$writeProfileKeyPair$3
	b (Ljava/util/Optional;)Ljava/util/Optional; lambda$readOrFetchProfileKeyPair$2
	d ()Ljava/util/Optional; lambda$new$1
	b (Lbyq;)Z lambda$new$0
	<clinit> ()V <clinit>
fet net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c telemetryManager
	d advancements
	e progress
	f listener
	g selectedTab
	<init> (Lenn;Lfzp;)V <init>
	a (Lyt;)V update
	a ()Laf; getAdvancements
	a (Lae;Z)V setSelectedTab
	a (Lfet$a;)V setListener
	<clinit> ()V <clinit>
fet$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lae;Lag;)V onUpdateAdvancementProgress
	e (Lae;)V onSelectedTabChanged
feu net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	<init> (Lfew;I)V <init>
	p ()Ldwt; getLightEngine
	a (Ldei;II)Z isValidChunk
	d (II)V drop
	b (IILdec;Z)Ldei; getChunk
	q ()Lcls; getLevel
	a (IILsf;)V replaceBiomes
	a (IILsf;Lqr;Ljava/util/function/Consumer;)Ldei; replaceWithPacketData
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	e (II)V updateViewCenter
	a (I)V updateViewRadius
	b (I)I calculateStorageRange
	e ()Ljava/lang/String; gatherStats
	j ()I getLoadedChunksCount
	a (Lcmv;Lhx;)V onLightUpdate
	a (IILdec;Z)Lddx; getChunk
	<clinit> ()V <clinit>
feu$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a this$0
	<init> (Lfeu;I)V <init>
	a (II)I getIndex
	a (ILdei;)V replace
	a (ILdei;Ldei;)Ldei; replace
	b (II)Z inRange
	a (I)Ldei; getChunk
	a (Ljava/lang/String;)V dumpChunks
fev net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c serverData
	d parent
	e updateStatus
	f connection
	g localGameProfile
	h newWorld
	i worldLoadDuration
	j minigameName
	<init> (Lsd;Lenn;Lffd;Leuq;ZLjava/time/Duration;Ljava/util/function/Consumer;)V <init>
	a (Labh;)V handleHello
	b (Ljava/lang/String;)Lsw; authenticateServer
	c ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	a (Labg;)V handleGameProfile
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
	a (Labj;)V handleDisconnect
	a (Labi;)V handleCompression
	a (Labf;)V handleCustomQuery
	a (Ljava/lang/String;)V setMinigameName
	a (Ljava/lang/String;Labn;Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V lambda$handleHello$1
	a (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V lambda$handleHello$0
	<clinit> ()V <clinit>
few net/minecraft/client/multiplayer/ClientLevel
	a LOGGER
	b FLUID_PARTICLE_SPAWN_OFFSET
	c NORMAL_LIGHT_UPDATES_PER_FRAME
	d LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD
	e tickingEntities
	f entityStorage
	D connection
	E levelRenderer
	F clientLevelData
	G effects
	H minecraft
	I players
	J scoreboard
	K mapData
	L CLOUD_COLOR
	M skyFlashTime
	N tintCaches
	O chunkSource
	P lightUpdateQueue
	Q serverSimulationDistance
	R blockStatePredictionHandler
	S MARKER_PARTICLE_ITEMS
	b (I)V handleBlockChangedAck
	b (Lgu;Ldcb;I)V setServerVerifiedBlockState
	a (Lgu;Ldcb;Leei;)V syncBlockState
	a ()Lffv; getBlockStatePredictionHandler
	a (Lgu;Ldcb;II)Z setBlock
	<init> (Lfex;Lfew$a;Lacp;Lhe;IILjava/util/function/Supplier;Lfjv;ZJ)V <init>
	a (Ljava/lang/Runnable;)V queueLightUpdate
	b ()V pollLightUpdates
	c ()Z isLightUpdateQueueEmpty
	d ()Lfjm; effects
	a (Ljava/util/function/BooleanSupplier;)V tick
	o ()V tickTime
	b (J)V setGameTime
	c (J)V setDayTime
	e ()Ljava/lang/Iterable; entitiesForRendering
	f ()V tickEntities
	h (Lbfj;)Z shouldTickDeath
	a (Lbfj;)V tickNonPassenger
	a (Lbfj;Lbfj;)V tickPassenger
	a (Ldei;)V unload
	a (Lclt;)V onChunkLoaded
	g ()V clearTintCaches
	b (II)Z hasChunk
	h ()I getEntityCount
	a (ILfiv;)V addPlayer
	a (ILbfj;)V putNonPlayerEntity
	b (ILbfj;)V addEntity
	a (ILbfj$c;)V removeEntity
	a (I)Lbfj; getEntity
	U ()V disconnect
	b (III)V animateTick
	p ()Lcpn; getMarkerParticleTarget
	a (IIIILapf;Lcpn;Lgu$a;)V doAnimateTick
	a (Lgu;Ldcb;Lit;Z)V trySpawnDripParticles
	a (Lgu;Lit;Lefb;D)V spawnParticle
	a (DDDDDLit;)V spawnFluidParticle
	a (Lo;)Lp; fillReportDetails
	a (Lbyo;DDDLhe;Lami;FFJ)V playSeededSound
	a (Lbyo;Lbfj;Lhe;Lami;FFJ)V playSeededSound
	a (DDDLamg;Lami;FFZ)V playLocalSound
	a (DDDLamg;Lami;FFZJ)V playSound
	a (DDDDDDLqr;)V createFireworks
	a (Luo;)V sendPacketToServer
	q ()Lcjd; getRecipeManager
	a (Lefg;)V setScoreboard
	L ()Lefp; getBlockTicks
	K ()Lefp; getFluidTicks
	i ()Lfeu; getChunkSource
	a (Ljava/lang/String;)Ldyo; getMapData
	b (Ljava/lang/String;Ldyo;)V overrideMapData
	a (Ljava/lang/String;Ldyo;)V setMapData
	t ()I getFreeMapId
	I ()Lefg; getScoreboard
	a (Lgu;Ldcb;Ldcb;I)V sendBlockUpdated
	b (Lgu;Ldcb;Ldcb;)V setBlocksDirty
	c (III)V setSectionDirtyWithNeighbors
	a (ILgu;I)V destroyBlockProgress
	b (ILgu;I)V globalLevelEvent
	a (Lbyo;ILgu;I)V levelEvent
	a (Lit;DDDDDD)V addParticle
	a (Lit;ZDDDDDD)V addParticle
	b (Lit;DDDDDD)V addAlwaysVisibleParticle
	b (Lit;ZDDDDDD)V addAlwaysVisibleParticle
	v ()Ljava/util/List; players
	a (III)Lhe; getUncachedNoiseBiome
	g (F)F getSkyDarken
	a (Leei;F)Leei; getSkyColor
	h (F)Leei; getCloudColor
	i (F)F getStarBrightness
	j ()I getSkyFlashTime
	c (I)V setSkyFlashTime
	a (Lha;Z)F getShade
	a (Lgu;Lclx;)I getBlockTint
	b (Lgu;Lclx;)I calculateBlockTint
	a (Lgu;F)V setDefaultSpawnPos
	toString ()Ljava/lang/String; toString
	k ()Lfew$a; getLevelData
	a (Ldgl;Leei;Ldgl$a;)V gameEvent
	l ()Ljava/util/Map; getAllMapData
	a (Ljava/util/Map;)V addMapData
	E ()Ldgb; getEntities
	F ()Ljava/lang/String; gatherChunkSourceStats
	a (Lgu;Ldcb;)V addDestroyBlockEffect
	h (I)V setServerSimulationDistance
	m ()I getServerSimulationDistance
	G ()Lcaw; enabledFeatures
	u_ ()Ldyv; getLevelData
	J ()Ldeb; getChunkSource
	a (Lcnm;III)Leei; lambda$getSkyColor$11
	s ()Ljava/lang/String; lambda$fillReportDetails$10
	u ()Ljava/lang/String; lambda$fillReportDetails$9
	a (Lgu$a;Lcnj;)V lambda$doAnimateTick$8
	a (Lclx;Leop;)V lambda$clearTintCaches$7
	a (Lclt;Lclx;Leop;)V lambda$onChunkLoaded$6
	c (Lbfj;)Ljava/lang/String; lambda$tickNonPassenger$5
	d (Lbfj;)V lambda$tickEntities$4
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$new$3
	a (Lgu;)I lambda$new$2
	b (Lgu;)I lambda$new$1
	c (Lgu;)I lambda$new$0
	<clinit> ()V <clinit>
few$1 net/minecraft/client/multiplayer/ClientLevel$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
few$a net/minecraft/client/multiplayer/ClientLevel$ClientLevelData
	a hardcore
	b gameRules
	c isFlat
	d xSpawn
	e ySpawn
	f zSpawn
	g spawnAngle
	h gameTime
	i dayTime
	j raining
	k difficulty
	l difficultyLocked
	<init> (Lbdu;ZZ)V <init>
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lgu;F)V setSpawn
	i ()Z isThundering
	k ()Z isRaining
	b (Z)V setRaining
	n ()Z isHardcore
	q ()Lcmi; getGameRules
	s ()Lbdu; getDifficulty
	t ()Z isDifficultyLocked
	a (Lp;Lcmo;)V fillCrashReportCategory
	a (Lbdu;)V setDifficulty
	a (Z)V setDifficultyLocked
	a (Lcmo;)D getHorizonHeight
	g ()F getClearColorScale
few$b net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks
	a this$0
	<init> (Lfew;)V <init>
	a (Lbfj;)V onCreated
	b (Lbfj;)V onDestroyed
	c (Lbfj;)V onTickingStart
	d (Lbfj;)V onTickingEnd
	e (Lbfj;)V onTrackingStart
	f (Lbfj;)V onTrackingEnd
	g (Lbfj;)V onSectionChange
	a (Ljava/lang/Object;)V onSectionChange
	b (Ljava/lang/Object;)V onTrackingEnd
	c (Ljava/lang/Object;)V onTrackingStart
	d (Ljava/lang/Object;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	f (Ljava/lang/Object;)V onDestroyed
	g (Ljava/lang/Object;)V onCreated
fex net/minecraft/client/multiplayer/ClientPacketListener
	a LOGGER
	b GENERIC_DISCONNECT_MESSAGE
	c UNSECURE_SERVER_TOAST_TITLE
	d UNSERURE_SERVER_TOAST
	e INVALID_PACKET
	f CHAT_VALIDATION_FAILED_ERROR
	g PENDING_OFFSET_THRESHOLD
	h connection
	i deferredPackets
	j serverData
	k localGameProfile
	l callbackScreen
	m minecraft
	n level
	o levelData
	p playerInfoMap
	q listedPlayers
	r advancements
	s suggestionsProvider
	t debugQueryHandler
	u serverChunkRadius
	v serverSimulationDistance
	w random
	x commands
	y recipeManager
	z id
	A levels
	B registryAccess
	C enabledFeatures
	D telemetryManager
	E chatSession
	F signedMessageEncoder
	G lastSeenMessages
	H messageSignatureCache
	<init> (Lenn;Leuq;Lsd;Lffd;Lcom/mojang/authlib/GameProfile;Lfzp;)V <init>
	d ()Lfez; getSuggestionsProvider
	e ()V close
	f ()Lcjd; getRecipeManager
	a (Lwi;)V handleLogin
	a (Lus;)V handleAddEntity
	a (Lbfj;)V postAddEntitySoundInstance
	a (Lut;)V handleAddExperienceOrb
	a (Lxy;)V handleSetEntityMotion
	a (Lxw;)V handleSetEntityData
	a (Luu;)V handleAddPlayer
	a (Lys;)V handleTeleportEntity
	a (Lxr;)V handleSetCarriedItem
	a (Lwl;)V handleMoveEntity
	a (Lxg;)V handleRotateMob
	a (Lxc;)V handleRemoveEntities
	a (Lxa;)V handleMovePlayer
	a (Lxh;)V handleChunkBlocksUpdate
	a (Lwd;)V handleLevelChunkWithLight
	a (Lvf;)V handleChunksBiomes
	a (IILwc;)V updateLevelChunk
	a (Ldei;II)V enableChunkLight
	a (Lvw;)V handleForgetLevelChunk
	b (Lvw;)V queueLightRemoval
	a (Lvb;)V handleBlockUpdate
	a (Lvs;)V handleDisconnect
	a (Lsw;)V onDisconnect
	a (Luo;)V send
	a (Lyr;)V handleTakeItemEntity
	a (Lyo;)V handleSystemChat
	a (Lwt;)V handlePlayerChat
	a (Lvt;)V handleDisguisedChat
	a (Lvr;)V handleDeleteChat
	a (Luv;)V handleAnimate
	a (Lvz;)V handleHurtAnimation
	a (Lyi;)V handleSetTime
	a (Lxu;)V handleSetSpawn
	a (Lyd;)V handleSetEntityPassengersPacket
	a (Lxx;)V handleEntityLinkPacket
	a (Lbyo;)Lcfz; findTotem
	a (Lvu;)V handleEntityEvent
	a (Lvq;)V handleDamageEvent
	a (Lyb;)V handleSetHealth
	a (Lya;)V handleSetExperience
	a (Lxf;)V handleRespawn
	a (Lvv;)V handleExplosion
	a (Lvy;)V handleHorseScreenOpen
	a (Lwo;)V handleOpenScreen
	a (Lvm;)V handleContainerSetSlot
	a (Lvk;)V handleContainerContent
	a (Lwp;)V handleOpenSignEditor
	a (Luz;)V handleBlockEntityData
	a (Lvl;)V handleContainerSetData
	a (Lxz;)V handleSetEquipment
	a (Lvj;)V handleContainerClose
	a (Lva;)V handleBlockEvent
	a (Luy;)V handleBlockDestruction
	a (Lvx;)V handleGameEvent
	a (Lwj;)V handleMapItemData
	a (Lwe;)V handleLevelEvent
	a (Lyt;)V handleUpdateAdvancementsPacket
	a (Lxi;)V handleSelectAdvancementsTab
	a (Lvi;)V handleCommands
	a (Lyn;)V handleStopSoundEvent
	a (Lvh;)V handleCommandSuggestions
	a (Lyx;)V handleUpdateRecipes
	a (Lwz;)V handleLookAt
	a (Lyq;)V handleTagQueryPacket
	a (Luw;)V handleAwardStats
	a (Lxb;)V handleAddOrRemoveRecipes
	a (Lyw;)V handleUpdateMobEffect
	a (Lyy;)V handleUpdateTags
	a (Lyv;)V handleEnabledFeatures
	a (Lacp;Lano$a;)V updateTagsForRegistry
	a (Lwu;)V handlePlayerCombatEnd
	a (Lwv;)V handlePlayerCombatEnter
	a (Lww;)V handlePlayerCombatKill
	a (Lve;)V handleChangeDifficulty
	a (Lxq;)V handleSetCamera
	a (Lwa;)V handleInitializeBorder
	a (Lxl;)V handleSetBorderCenter
	a (Lxm;)V handleSetBorderLerpSize
	a (Lxn;)V handleSetBorderSize
	a (Lxp;)V handleSetBorderWarningDistance
	a (Lxo;)V handleSetBorderWarningDelay
	a (Lvg;)V handleTitlesClear
	a (Lxj;)V handleServerData
	a (Lvo;)V handleCustomChatCompletions
	a (Lxk;)V setActionBarText
	a (Lyj;)V setTitleText
	a (Lyh;)V setSubtitleText
	a (Lyk;)V setTitlesAnimation
	a (Lyp;)V handleTabListCustomisation
	a (Lxd;)V handleRemoveMobEffect
	a (Lwx;)V handlePlayerInfoRemove
	a (Lwy;)V handlePlayerInfoUpdate
	a (Lwy$a;Lwy$b;Lffb;)V applyPlayerInfoUpdate
	a (Lwy$b;Lffb;)V initializeChatSession
	u ()Z enforcesSecureChat
	a (Lwb;)V handleKeepAlive
	a (Luo;Ljava/util/function/BooleanSupplier;Ljava/time/Duration;)V sendWhen
	v ()V sendDeferredPackets
	a (Lws;)V handlePlayerAbilities
	a (Lym;)V handleSoundEvent
	a (Lyl;)V handleSoundEntityEvent
	a (Lxe;)V handleResourcePack
	a (Lsw;Lsw;)Lsw; preparePackPrompt
	e (Ljava/lang/String;)Ljava/net/URL; parseResourcePackUrl
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Laak$a;)V send
	a (Lvc;)V handleBossUpdate
	a (Lvn;)V handleItemCooldown
	a (Lwm;)V handleMoveVehicle
	a (Lwn;)V handleOpenBook
	a (Lvp;)V handleCustomPayload
	a (Lyc;)V handleAddObjective
	a (Lyf;)V handleSetScore
	a (Lxv;)V handleSetDisplayObjective
	a (Lye;)V handleSetPlayerTeamPacket
	a (Lwf;)V handleParticleEvent
	a (Lwq;)V handlePing
	a (Lyu;)V handleUpdateAttributes
	a (Lwr;)V handlePlaceRecipe
	a (Lwg;)V handleLightUpdatePacket
	a (IILwh;)V applyLightData
	a (Lwk;)V handleMerchantOffers
	a (Lxt;)V handleSetChunkCacheRadius
	a (Lyg;)V handleSetSimulationDistance
	a (Lxs;)V handleSetChunkCacheCenter
	a (Lux;)V handleBlockChangedAck
	a (Lvd;)V handleBundlePacket
	a (IILdwt;Lcmv;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;)V readSectionList
	g ()Lsd; getConnection
	a ()Z isAcceptingMessages
	h ()Ljava/util/Collection; getListedOnlinePlayers
	i ()Ljava/util/Collection; getOnlinePlayers
	j ()Ljava/util/Collection; getOnlinePlayerIds
	a (Ljava/util/UUID;)Lffb; getPlayerInfo
	a (Ljava/lang/String;)Lffb; getPlayerInfo
	k ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	l ()Lfet; getAdvancements
	m ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	n ()Lfew; getLevel
	o ()Lene; getDebugQueryHandler
	p ()Ljava/util/UUID; getId
	q ()Ljava/util/Set; levels
	r ()Lhs; registryAccess
	a (Ltl;Z)V markMessageAsProcessed
	w ()V sendChatAcknowledgement
	b (Ljava/lang/String;)V sendChat
	c (Ljava/lang/String;)V sendCommand
	d (Ljava/lang/String;)Z sendUnsignedCommand
	f (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	c ()V tick
	a (Lbyq;)V setKeyPair
	s ()Lffd; getServerData
	t ()Lcaw; enabledFeatures
	a (Lcaw;)Z isFeatureEnabled
	a (Ljava/util/Optional;)V lambda$tick$22
	a (Ljava/time/Instant;JLtd$a;Ljava/lang/String;)Lth; lambda$sendCommand$21
	b (IILwh;)V lambda$handleLightUpdatePacket$20
	a (Lcbf;Lcjc;)V lambda$handlePlaceRecipe$19
	a (Lefe;Lye$b;)V lambda$handleSetPlayerTeamPacket$18
	a (Lacq;)Ljava/lang/IllegalArgumentException; lambda$handleCustomPayload$17
	a (Ljava/lang/Throwable;)Ljava/lang/Void; lambda$downloadCallback$16
	x ()V lambda$downloadCallback$15
	a (Ljava/net/URL;Ljava/lang/String;ZLxe;)V lambda$handleResourcePack$14
	a (Ljava/net/URL;Ljava/lang/String;ZZ)V lambda$handleResourcePack$13
	y ()Z lambda$handleKeepAlive$12
	a (Lacp;)Ljava/lang/IllegalStateException; lambda$updateTagsForRegistry$11
	a (Lenb;Leyg;)V lambda$handleAddOrRemoveRecipes$10
	a (Lenb;Lcjc;)V lambda$handleAddOrRemoveRecipes$9
	z ()V lambda$handleGameEvent$8
	a (Lbfj;Lcom/mojang/datafixers/util/Pair;)V lambda$handleSetEquipment$7
	a (Luz;Lczn;)V lambda$handleBlockEntityData$6
	a (Lclt;)V lambda$queueLightRemoval$5
	c (IILwh;)V lambda$handleLevelChunkWithLight$4
	a (Lgu;Ldcb;)V lambda$handleChunkBlocksUpdate$3
	a (I)V lambda$handleRemoveEntities$2
	b (Ljava/util/Optional;)V lambda$handleLogin$1
	a (Lhs$d;)V lambda$handleLogin$0
	<clinit> ()V <clinit>
fex$1 net/minecraft/client/multiplayer/ClientPacketListener$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundRecipePacket$State
	b $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoUpdatePacket$Action
	c $SwitchMap$net$minecraft$server$ServerScoreboard$Method
	<clinit> ()V <clinit>
fex$a net/minecraft/client/multiplayer/ClientPacketListener$DeferredPacket
	a packet
	b sendCondition
	c expirationTime
	<init> (Luo;Ljava/util/function/BooleanSupplier;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Luo; packet
	b ()Ljava/util/function/BooleanSupplier; sendCondition
	c ()J expirationTime
fey net/minecraft/client/multiplayer/ClientRegistryLayer
	a STATIC
	b REMOTE
	c VALUES
	d STATIC_ACCESS
	e $VALUES
	values ()[Lfey; values
	valueOf (Ljava/lang/String;)Lfey; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lhl; createRegistryAccess
	b ()[Lfey; $values
	<clinit> ()V <clinit>
fez net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	e customCompletionSuggestions
	<init> (Lfex;Lenn;)V <init>
	q ()Ljava/util/Collection; getOnlinePlayerNames
	x ()Ljava/util/Collection; getCustomTabSugggestions
	y ()Ljava/util/Collection; getSelectedEntities
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	c (I)Z hasPermission
	a (Lacp;Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	z ()Ljava/util/Collection; getRelevantCoordinates
	A ()Ljava/util/Collection; getAbsoluteCoordinates
	u ()Ljava/util/Set; levels
	v ()Lhs; registryAccess
	w ()Lcaw; enabledFeatures
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lvo$a;Ljava/util/List;)V modifyCustomCompletions
	b (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; lambda$suggestRegistryElements$1
	a (Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhr;)Ljava/util/concurrent/CompletableFuture; lambda$suggestRegistryElements$0
fez$1 net/minecraft/client/multiplayer/ClientSuggestionProvider$1
	a $SwitchMap$net$minecraft$network$protocol$game$ClientboundCustomChatCompletionsPacket$Action
	<clinit> ()V <clinit>
ffa net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k previousLocalPlayerMode
	l carriedIndex
	<init> (Lenn;Lfex;)V <init>
	a (Lbyo;)V adjustPlayer
	a (Lcmj;Lcmj;)V setLocalMode
	a (Lcmj;)V setLocalMode
	a ()Z canHurtPlayer
	a (Lgu;)Z destroyBlock
	a (Lgu;Lha;)Z startDestroyBlock
	b ()V stopDestroyBlock
	b (Lgu;Lha;)Z continueDestroyBlock
	a (Lfew;Lffw;)V startPrediction
	c ()F getPickRange
	d ()V tick
	b (Lgu;)Z sameDestroyTarget
	o ()V ensureHasSentCarriedItem
	a (Lfiy;Lbdw;Leee;)Lbdx; useItemOn
	b (Lfiy;Lbdw;Leee;)Lbdx; performUseItemOn
	a (Lbyo;Lbdw;)Lbdx; useItem
	a (Lfew;Lams;Lenb;)Lfiy; createPlayer
	a (Lfew;Lams;Lenb;ZZ)Lfiy; createPlayer
	a (Lbyo;Lbfj;)V attack
	a (Lbyo;Lbfj;Lbdw;)Lbdx; interact
	a (Lbyo;Lbfj;Leef;Lbdw;)Lbdx; interactAt
	a (IIILcbo;Lbyo;)V handleInventoryMouseClick
	a (ILcjc;Z)V handlePlaceRecipe
	a (II)V handleInventoryButtonClick
	a (Lcfz;I)V handleCreativeModeItemAdd
	a (Lcfz;)V handleCreativeModeItemDrop
	b (Lbyo;)V releaseUsingItem
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lcmj; getPreviousPlayerMode
	l ()Lcmj; getPlayerMode
	m ()Z isDestroying
	n ()I getDestroyStage
	a (I)V handlePickItem
	a (Lbdw;Lbyo;Lorg/apache/commons/lang3/mutable/MutableObject;I)Luo; lambda$useItem$5
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Lfiy;Lbdw;Leee;I)Luo; lambda$useItemOn$4
	a (Lgu;Lha;I)Luo; lambda$continueDestroyBlock$3
	b (Lgu;Lha;I)Luo; lambda$continueDestroyBlock$2
	a (Ldcb;Lgu;Lha;I)Luo; lambda$startDestroyBlock$1
	c (Lgu;Lha;I)Luo; lambda$startDestroyBlock$0
	<clinit> ()V <clinit>
ffb net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h chatSession
	i messageValidator
	<init> (Lcom/mojang/authlib/GameProfile;Z)V <init>
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()Ltm; getChatSession
	c ()Ltr; getMessageValidator
	d ()Z hasVerifiableChat
	a (Ltm;)V setChatSession
	a (Z)V clearChatSession
	b (Z)Ltr; fallbackMessageValidator
	e ()Lcmj; getGameMode
	a (Lcmj;)V setGameMode
	f ()I getLatency
	a (I)V setLatency
	g ()Z isCapeLoaded
	h ()Z isSkinLoaded
	i ()Ljava/lang/String; getModelName
	j ()Lacq; getSkinLocation
	k ()Lacq; getCapeLocation
	l ()Lacq; getElytraLocation
	m ()Lefe; getTeam
	n ()V registerTextures
	a (Lsw;)V setTabListDisplayName
	o ()Lsw; getTabListDisplayName
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lacq;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTextures$0
ffc net/minecraft/client/multiplayer/ProfileKeyPairManager
	a EMPTY_KEY_MANAGER
	a (Lcom/mojang/authlib/minecraft/UserApiService;Leoc;Ljava/nio/file/Path;)Lffc; create
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	b ()Z shouldRefreshKeyPair
	<clinit> ()V <clinit>
ffc$1 net/minecraft/client/multiplayer/ProfileKeyPairManager$1
	<init> ()V <init>
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	b ()Z shouldRefreshKeyPair
ffd net/minecraft/client/multiplayer/ServerData
	k LOGGER
	a name
	b ip
	c status
	d motd
	e players
	f ping
	g protocol
	h version
	i pinged
	j playerList
	l packStatus
	m iconBytes
	n lan
	o enforcesSecureChat
	<init> (Ljava/lang/String;Ljava/lang/String;Z)V <init>
	a ()Lqr; write
	b ()Lffd$a; getResourcePackStatus
	a (Lffd$a;)V setResourcePackStatus
	a (Lqr;)Lffd; read
	c ()[B getIconBytes
	a ([B)V setIconBytes
	d ()Z isLan
	a (Z)V setEnforcesSecureChat
	e ()Z enforcesSecureChat
	a (Lffd;)V copyNameIconFrom
	b (Lffd;)V copyFrom
	<clinit> ()V <clinit>
ffd$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	values ()[Lffd$a; values
	valueOf (Ljava/lang/String;)Lffd$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Lsw; getName
	b ()[Lffd$a; $values
	<clinit> ()V <clinit>
ffe net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b IO_MAILBOX
	c MAX_HIDDEN_SERVERS
	d minecraft
	e serverList
	f hiddenServerList
	<init> (Lenn;)V <init>
	a ()V load
	b ()V save
	a (I)Lffd; get
	a (Ljava/lang/String;)Lffd; get
	b (Ljava/lang/String;)Lffd; unhide
	a (Lffd;)V remove
	a (Lffd;Z)V add
	c ()I size
	a (II)V swap
	a (ILffd;)V replace
	a (Lffd;Ljava/util/List;)Z set
	b (Lffd;)V saveSingleServer
	c (Lffd;)V lambda$saveSingleServer$0
	<clinit> ()V <clinit>
fff net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c CANT_CONNECT_MESSAGE
	d connections
	<init> ()V <init>
	a (Lffd;Ljava/lang/Runnable;)V pingServer
	a (Lsw;Lffd;)V onPingFailed
	a (Ljava/net/InetSocketAddress;Lffd;)V pingLegacyServer
	a (II)Lsw; formatPlayerCount
	a ()V tick
	b ()V removeAll
	a (Lts;)Lts; lambda$static$0
	<clinit> ()V <clinit>
fff$1 net/minecraft/client/multiplayer/ServerStatusPinger$1
	f success
	g receivedPing
	h pingStart
	a val$connection
	b val$data
	c val$onPersistentDataChange
	d val$address
	e this$0
	<init> (Lfff;Lsd;Lffd;Ljava/lang/Runnable;Ljava/net/InetSocketAddress;)V <init>
	a (Labs;)V handleStatusResponse
	a (Labr;)V handlePongResponse
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
	a (Lffd;Ljava/lang/Runnable;Labt$a;)V lambda$handleStatusResponse$4
	a (Lffd;)V lambda$handleStatusResponse$3
	a (Lffd;Labt$b;)V lambda$handleStatusResponse$2
	b (Lffd;)V lambda$handleStatusResponse$1
	a (Lffd;Labt$c;)V lambda$handleStatusResponse$0
fff$2 net/minecraft/client/multiplayer/ServerStatusPinger$2
	a val$address
	b val$data
	c this$0
	<init> (Lfff;Ljava/net/InetSocketAddress;Lffd;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
fff$2$1 net/minecraft/client/multiplayer/ServerStatusPinger$2$1
	a this$1
	<init> (Lfff$2;)V <init>
	channelActive (Lio/netty/channel/ChannelHandlerContext;)V channelActive
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V channelRead0
	exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V exceptionCaught
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead0
ffg net/minecraft/client/multiplayer/chat/ChatListener
	a minecraft
	b delayedMessageQueue
	c messageDelay
	d previousMessageTime
	<init> (Lenn;)V <init>
	a ()V tick
	a (D)V setMessageDelay
	b ()V acceptNextDelayedMessage
	c ()J queueSize
	d ()V clearQueue
	a (Lth;)Z removeFromDelayedMessageQueue
	e ()Z willDelayMessages
	a (Lth;Ljava/util/function/BooleanSupplier;)V handleMessage
	a (Ltl;Lcom/mojang/authlib/GameProfile;Lss$a;)V handlePlayerChatMessage
	a (Lsw;Lss$a;)V handleDisguisedChatMessage
	a (Lss$a;Ltl;Lsw;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z showMessageToPlayer
	a (Lss$a;Lsw;)V narrateChatMessage
	a (Ltl;Lsw;Ljava/time/Instant;)Lffi; evaluateTrustLevel
	a (Ltl;Lss$a;Lcom/mojang/authlib/GameProfile;Lffi;)V logPlayerMessage
	a (Lsw;Ljava/time/Instant;)V logSystemMessage
	a (Lsw;Z)V handleSystemMessage
	a (Lsw;)Ljava/util/UUID; guessChatUUID
	a (Ljava/util/UUID;)Z isSenderLocalPlayer
	a (Lss$a;Lsw;Ljava/time/Instant;)Z lambda$handleDisguisedChatMessage$2
	b (Lss$a;Ltl;Lsw;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z lambda$handlePlayerChatMessage$1
	a (Lth;Lffg$a;)Z lambda$removeFromDelayedMessageQueue$0
ffg$a net/minecraft/client/multiplayer/chat/ChatListener$Message
	a signature
	b handler
	<init> (Lth;Ljava/util/function/BooleanSupplier;)V <init>
	a ()Z accept
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lth; signature
	c ()Ljava/util/function/BooleanSupplier; handler
ffh net/minecraft/client/multiplayer/chat/ChatLog
	a buffer
	b nextId
	a (I)Lcom/mojang/serialization/Codec; codec
	<init> (I)V <init>
	<init> (ILjava/util/List;)V <init>
	c ()Ljava/util/List; loggedChatEvents
	a (Lffj;)V push
	b (I)Lffj; lookup
	c (I)I index
	a ()I start
	b ()I end
	d ()I size
	a (II)[Lffj; lambda$new$2
	a (ILjava/util/List;)Lcom/mojang/serialization/DataResult; lambda$codec$1
	b (II)Ljava/lang/String; lambda$codec$0
ffi net/minecraft/client/multiplayer/chat/ChatTrustLevel
	a SECURE
	b MODIFIED
	c NOT_SECURE
	d CODEC
	e serializedName
	f $VALUES
	values ()[Lffi; values
	valueOf (Ljava/lang/String;)Lffi; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ltl;Lsw;Ljava/time/Instant;)Lffi; evaluate
	a (Ltl;Lsw;)Z isModified
	a (Lsw;)Z containsModifiedStyle
	a (Lts;)Z isModifiedStyle
	a ()Z isNotSecure
	a (Ltl;)Leni; createTag
	c ()Ljava/lang/String; getSerializedName
	a (Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$containsModifiedStyle$0
	b ()[Lffi; $values
	<clinit> ()V <clinit>
ffi$1 net/minecraft/client/multiplayer/chat/ChatTrustLevel$1
	a $SwitchMap$net$minecraft$client$multiplayer$chat$ChatTrustLevel
	<clinit> ()V <clinit>
ffj net/minecraft/client/multiplayer/chat/LoggedChatEvent
	a CODEC
	a ()Lffj$a; type
	<clinit> ()V <clinit>
ffj$a net/minecraft/client/multiplayer/chat/LoggedChatEvent$Type
	a PLAYER
	b SYSTEM
	c serializedName
	d codec
	e $VALUES
	values ()[Lffj$a; values
	valueOf (Ljava/lang/String;)Lffj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	c ()Ljava/lang/String; getSerializedName
	b ()Lcom/mojang/serialization/Codec; lambda$static$1
	d ()Lcom/mojang/serialization/Codec; lambda$static$0
	e ()[Lffj$a; $values
	<clinit> ()V <clinit>
ffk net/minecraft/client/multiplayer/chat/LoggedChatMessage
	a (Lcom/mojang/authlib/GameProfile;Ltl;Lffi;)Lffk$a; player
	a (Lsw;Ljava/time/Instant;)Lffk$b; system
	b ()Lsw; toContentComponent
	c ()Lsw; toNarrationComponent
	a (Ljava/util/UUID;)Z canReport
ffk$a net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player
	c profile
	d message
	e trustLevel
	b CODEC
	f TIME_FORMATTER
	<init> (Lcom/mojang/authlib/GameProfile;Ltl;Lffi;)V <init>
	b ()Lsw; toContentComponent
	c ()Lsw; toNarrationComponent
	d ()Lsw; toHeadingComponent
	i ()Lsw; getTimeComponent
	a (Ljava/util/UUID;)Z canReport
	e ()Ljava/util/UUID; profileId
	a ()Lffj$a; type
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Lcom/mojang/authlib/GameProfile; profile
	g ()Ltl; message
	h ()Lffi; trustLevel
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
ffk$b net/minecraft/client/multiplayer/chat/LoggedChatMessage$System
	c message
	d timeStamp
	b CODEC
	<init> (Lsw;Ljava/time/Instant;)V <init>
	b ()Lsw; toContentComponent
	a (Ljava/util/UUID;)Z canReport
	a ()Lffj$a; type
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Lsw; message
	e ()Ljava/time/Instant; timeStamp
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
ffl net/minecraft/client/multiplayer/chat/package-info
ffm net/minecraft/client/multiplayer/chat/report/AbuseReportSender
	a (Lffq;Lcom/mojang/authlib/minecraft/UserApiService;)Lffm; create
	a (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	a ()Z isEnabled
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
ffm$1 net/minecraft/client/multiplayer/chat/report/AbuseReportSender$1
	a $SwitchMap$com$mojang$authlib$exceptions$MinecraftClientException$ErrorType
	<clinit> ()V <clinit>
ffm$a net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException
	<init> (Lsw;Ljava/lang/Throwable;)V <init>
ffm$b net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services
	a environment
	b userApiService
	c SERVICE_UNAVAILABLE_TEXT
	d HTTP_ERROR_TEXT
	e JSON_ERROR_TEXT
	<init> (Lffq;Lcom/mojang/authlib/minecraft/UserApiService;)V <init>
	a (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	a ()Z isEnabled
	a (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lsw; getHttpErrorDescription
	a (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lsw; getErrorDescription
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lffq; environment
	d ()Lcom/mojang/authlib/minecraft/UserApiService; userApiService
	b (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Lcom/mojang/datafixers/util/Unit; lambda$send$0
	<clinit> ()V <clinit>
ffn net/minecraft/client/multiplayer/chat/report/BanReason
	a GENERIC_VIOLATION
	b FALSE_REPORTING
	c HATE_SPEECH
	d HATE_TERRORISM_NOTORIOUS_FIGURE
	e HARASSMENT_OR_BULLYING
	f DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	g DRUGS
	h FRAUD
	i SPAM_OR_ADVERTISING
	j NUDITY_OR_PORNOGRAPHY
	k SEXUALLY_INAPPROPRIATE
	l EXTREME_VIOLENCE_OR_GORE
	m IMMINENT_HARM_TO_PERSON_OR_PROPERTY
	n title
	o $VALUES
	values ()[Lffn; values
	valueOf (Ljava/lang/String;)Lffn; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Lsw; title
	a (I)Lffn; byId
	b ()[Lffn; $values
	<clinit> ()V <clinit>
ffo net/minecraft/client/multiplayer/chat/report/ChatReportBuilder
	a report
	b limits
	<init> (Lffo$b;Lcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V <init>
	<init> (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V <init>
	a ()Lffo$b; report
	b ()Ljava/util/UUID; reportedProfileId
	c ()Lit/unimi/dsi/fastutil/ints/IntSet; reportedMessages
	d ()Ljava/lang/String; comments
	a (Ljava/lang/String;)V setComments
	e ()Lffr; reason
	a (Lffr;)V setReason
	a (I)V toggleReported
	b (I)Z isReported
	f ()Z hasContent
	g ()Lffo$a; checkBuildable
	a (Lffs;)Lcom/mojang/datafixers/util/Either; build
	a (Lffh;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; buildEvidence
	a (Lffk$a;Z)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; buildReportedChatMessage
	h ()Lffo; copy
	a (Ljava/util/List;ILffk$a;)V lambda$buildEvidence$0
ffo$a net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason
	e message
	a NO_REASON
	b NO_REPORTED_MESSAGES
	c TOO_MANY_MESSAGES
	d COMMENTS_TOO_LONG
	<init> (Lsw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; message
	<clinit> ()V <clinit>
ffo$b net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport
	b reportId
	c createdAt
	d reportedProfileId
	e reportedMessages
	f comments
	g reason
	a this$0
	<init> (Lffo;Ljava/util/UUID;Ljava/time/Instant;Ljava/util/UUID;)V <init>
	a (ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V toggleReported
	a ()Lffo$b; copy
	a (Ljava/util/UUID;)Z isReportedPlayer
ffo$c net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$Result
	a id
	b report
	<init> (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; id
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReport; report
ffp net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder
	a leadingCount
	b activeCollectors
	<init> (I)V <init>
	a (Lffh;Lit/unimi/dsi/fastutil/ints/IntCollection;Lffp$b;)V collectAllContext
	a (Ltl;)V trackContext
	b (Ltl;)Z acceptContext
	a ()Z isActive
ffp$a net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Collector
	b lastSeenSignatures
	c lastChainMessage
	d collectingChain
	e count
	a this$0
	<init> (Lffp;Ltl;)V <init>
	a (Ltl;)Z accept
	a ()Z isComplete
ffp$b net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler
	accept (ILffk$a;)V accept
ffq net/minecraft/client/multiplayer/chat/report/ReportEnvironment
	a clientVersion
	b server
	<init> (Ljava/lang/String;Lffq$a;)V <init>
	a ()Lffq; local
	a (Ljava/lang/String;)Lffq; thirdParty
	a (Lejq;)Lffq; realm
	a (Lffq$a;)Lffq; create
	b ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; clientInfo
	c ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; thirdPartyServerInfo
	d ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; realmInfo
	g ()Ljava/lang/String; getClientVersion
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	e ()Ljava/lang/String; clientVersion
	f ()Lffq$a; server
ffq$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server
ffq$a$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm
	a realmId
	b slotId
	<init> (Lejq;)V <init>
	<init> (JI)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()J realmId
	b ()I slotId
ffq$a$b net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty
	a ip
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; ip
ffr net/minecraft/client/multiplayer/chat/report/ReportReason
	a HATE_SPEECH
	b TERRORISM_OR_VIOLENT_EXTREMISM
	c CHILD_SEXUAL_EXPLOITATION_OR_ABUSE
	d IMMINENT_HARM
	e NON_CONSENSUAL_INTIMATE_IMAGERY
	f HARASSMENT_OR_BULLYING
	g DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	h SELF_HARM_OR_SUICIDE
	i ALCOHOL_TOBACCO_DRUGS
	j backendName
	k title
	l description
	m $VALUES
	values ()[Lffr; values
	valueOf (Ljava/lang/String;)Lffr; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; backendName
	b ()Lsw; title
	c ()Lsw; description
	d ()[Lffr; $values
	<clinit> ()V <clinit>
ffs net/minecraft/client/multiplayer/chat/report/ReportingContext
	a LOG_CAPACITY
	b sender
	c environment
	d chatLog
	e chatReportDraft
	<init> (Lffm;Lffq;Lffh;)V <init>
	a (Lffq;Lcom/mojang/authlib/minecraft/UserApiService;)Lffs; create
	a (Lenn;Leuq;Ljava/lang/Runnable;Z)V draftReportHandled
	a ()Lffm; sender
	b ()Lffh; chatLog
	a (Lffq;)Z matches
	a (Lffo$b;)V setChatReportDraft
	c ()Z hasDraftReport
	a (Ljava/util/UUID;)Z hasDraftReportFor
	a (Lenn;Leuq;Lffo$b;Ljava/lang/Runnable;Z)V lambda$draftReportHandled$0
fft net/minecraft/client/multiplayer/chat/report/package-info
ffu net/minecraft/client/multiplayer/package-info
ffv net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler
	a serverVerifiedStates
	b currentSequenceNr
	c isPredicting
	<init> ()V <init>
	a (Lgu;Ldcb;Lfiy;)V retainKnownServerState
	a (Lgu;Ldcb;)Z updateKnownServerState
	a (ILfew;)V endPredictionsUpTo
	a ()Lffv; startPredicting
	close ()V close
	b ()I currentSequence
	c ()Z isPredicting
	a (Ldcb;Lfiy;Ljava/lang/Long;Lffv$a;)Lffv$a; lambda$retainKnownServerState$0
ffv$a net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState
	a playerPos
	b sequence
	c blockState
	<init> (ILdcb;Leei;)V <init>
	a (I)Lffv$a; setSequence
	a (Ldcb;)V setBlockState
ffw net/minecraft/client/multiplayer/prediction/PredictiveAction
	predict (I)Luo; predict
ffx net/minecraft/client/multiplayer/prediction/package-info
ffy net/minecraft/client/multiplayer/resolver/AddressCheck
	a (Lffz;)Z isAllowed
	a (Lfga;)Z isAllowed
	a ()Lffy; createFromService
ffy$1 net/minecraft/client/multiplayer/resolver/AddressCheck$1
	a val$blockLists
	<init> (Lcom/google/common/collect/ImmutableList;)V <init>
	a (Lffz;)Z isAllowed
	a (Lfga;)Z isAllowed
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Z lambda$isAllowed$1
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Predicate;)Z lambda$isAllowed$0
ffz net/minecraft/client/multiplayer/resolver/ResolvedServerAddress
	a ()Ljava/lang/String; getHostName
	b ()Ljava/lang/String; getHostIp
	c ()I getPort
	d ()Ljava/net/InetSocketAddress; asInetSocketAddress
	a (Ljava/net/InetSocketAddress;)Lffz; from
ffz$1 net/minecraft/client/multiplayer/resolver/ResolvedServerAddress$1
	a val$address
	<init> (Ljava/net/InetSocketAddress;)V <init>
	a ()Ljava/lang/String; getHostName
	b ()Ljava/lang/String; getHostIp
	c ()I getPort
	d ()Ljava/net/InetSocketAddress; asInetSocketAddress
fga net/minecraft/client/multiplayer/resolver/ServerAddress
	a LOGGER
	b hostAndPort
	c INVALID
	<init> (Ljava/lang/String;I)V <init>
	<init> (Lcom/google/common/net/HostAndPort;)V <init>
	a ()Ljava/lang/String; getHost
	b ()I getPort
	a (Ljava/lang/String;)Lfga; parseString
	b (Ljava/lang/String;)Z isValidAddress
	c (Ljava/lang/String;)I parsePort
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<clinit> ()V <clinit>
fgb net/minecraft/client/multiplayer/resolver/ServerAddressResolver
	a LOGGER
	b SYSTEM
	resolve (Lfga;)Ljava/util/Optional; resolve
	a (Lfga;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
fgc net/minecraft/client/multiplayer/resolver/ServerNameResolver
	a DEFAULT
	b resolver
	c redirectHandler
	d addressCheck
	<init> (Lfgb;Lfgd;Lffy;)V <init>
	a (Lfga;)Ljava/util/Optional; resolveAddress
	<clinit> ()V <clinit>
fgd net/minecraft/client/multiplayer/resolver/ServerRedirectHandler
	a LOGGER
	b EMPTY
	lookupRedirect (Lfga;)Ljava/util/Optional; lookupRedirect
	createDnsSrvRedirectHandler ()Lfgd; createDnsSrvRedirectHandler
	a (Ljavax/naming/directory/DirContext;Lfga;)Ljava/util/Optional; lambda$createDnsSrvRedirectHandler$1
	a (Lfga;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
fge net/minecraft/client/multiplayer/resolver/package-info
fgf net/minecraft/client/package-info
fgg net/minecraft/client/particle/AshParticle
	<init> (Lfew;DDDDDDFLfih;)V <init>
fgg$a net/minecraft/client/particle/AshParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgh net/minecraft/client/particle/AttackSweepParticle
	a sprites
	<init> (Lfew;DDDDLfih;)V <init>
	a (F)I getLightColor
	a ()V tick
	b ()Lfhq; getRenderType
fgh$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgi net/minecraft/client/particle/BaseAshSmokeParticle
	a sprites
	<init> (Lfew;DDDFFFDDDFLfih;FIFZ)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
	a ()V tick
fgj net/minecraft/client/particle/BlockMarker
	<init> (Lfew;DDDLdcb;)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
fgj$a net/minecraft/client/particle/BlockMarker$Provider
	<init> ()V <init>
	a (Lin;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgk net/minecraft/client/particle/BreakingItemParticle
	a uo
	b vo
	<init> (Lfew;DDDDDDLcfz;)V <init>
	b ()Lfhq; getRenderType
	<init> (Lfew;DDDLcfz;)V <init>
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fgk$a net/minecraft/client/particle/BreakingItemParticle$Provider
	<init> ()V <init>
	a (Lir;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgk$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	<init> ()V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgk$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	<init> ()V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgl net/minecraft/client/particle/BubbleColumnUpParticle
	<init> (Lfew;DDDDDD)V <init>
	a ()V tick
	b ()Lfhq; getRenderType
fgl$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgm net/minecraft/client/particle/BubbleParticle
	<init> (Lfew;DDDDDD)V <init>
	a ()V tick
	b ()Lfhq; getRenderType
fgm$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgn net/minecraft/client/particle/BubblePopParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	a ()V tick
	b ()Lfhq; getRenderType
fgn$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgo net/minecraft/client/particle/CampfireSmokeParticle
	<init> (Lfew;DDDDDDZ)V <init>
	a ()V tick
	b ()Lfhq; getRenderType
fgo$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgo$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgp net/minecraft/client/particle/CherryParticle
	a ACCELERATION_SCALE
	b INITIAL_LIFETIME
	F CURVE_ENDPOINT_TIME
	G FALL_ACC
	H WIND_BIG
	I rotSpeed
	J particleRandom
	K spinAcceleration
	<init> (Lfew;DDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fgq net/minecraft/client/particle/CritParticle
	<init> (Lfew;DDDDDD)V <init>
	b (F)F getQuadSize
	a ()V tick
	b ()Lfhq; getRenderType
fgq$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgq$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgq$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgr net/minecraft/client/particle/DragonBreathParticle
	a COLOR_MIN
	b COLOR_MAX
	F COLOR_MIN_RED
	G COLOR_MIN_GREEN
	H COLOR_MIN_BLUE
	I COLOR_MAX_RED
	J COLOR_MAX_GREEN
	K COLOR_MAX_BLUE
	L hasHitGround
	M sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	a ()V tick
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
fgr$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgs net/minecraft/client/particle/DripParticle
	b type
	a isGlowing
	<init> (Lfew;DDDLdxd;)V <init>
	g ()Ldxd; getType
	b ()Lfhq; getRenderType
	a (F)I getLightColor
	a ()V tick
	h ()V preMoveUpdate
	i ()V postMoveUpdate
	a (Liy;Lfew;DDDDDD)Lfim; createWaterHangParticle
	b (Liy;Lfew;DDDDDD)Lfim; createWaterFallParticle
	c (Liy;Lfew;DDDDDD)Lfim; createLavaHangParticle
	d (Liy;Lfew;DDDDDD)Lfim; createLavaFallParticle
	e (Liy;Lfew;DDDDDD)Lfim; createLavaLandParticle
	f (Liy;Lfew;DDDDDD)Lfim; createHoneyHangParticle
	g (Liy;Lfew;DDDDDD)Lfim; createHoneyFallParticle
	h (Liy;Lfew;DDDDDD)Lfim; createHoneyLandParticle
	i (Liy;Lfew;DDDDDD)Lfim; createDripstoneWaterHangParticle
	j (Liy;Lfew;DDDDDD)Lfim; createDripstoneWaterFallParticle
	k (Liy;Lfew;DDDDDD)Lfim; createDripstoneLavaHangParticle
	l (Liy;Lfew;DDDDDD)Lfim; createDripstoneLavaFallParticle
	m (Liy;Lfew;DDDDDD)Lfim; createNectarFallParticle
	n (Liy;Lfew;DDDDDD)Lfim; createSporeBlossomFallParticle
	o (Liy;Lfew;DDDDDD)Lfim; createObsidianTearHangParticle
	p (Liy;Lfew;DDDDDD)Lfim; createObsidianTearFallParticle
	q (Liy;Lfew;DDDDDD)Lfim; createObsidianTearLandParticle
fgs$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	<init> (Lfew;DDDLdxd;Lit;)V <init>
	h ()V preMoveUpdate
fgs$b net/minecraft/client/particle/DripParticle$DripHangParticle
	b fallingParticle
	<init> (Lfew;DDDLdxd;Lit;)V <init>
	h ()V preMoveUpdate
	i ()V postMoveUpdate
fgs$c net/minecraft/client/particle/DripParticle$DripLandParticle
	<init> (Lfew;DDDLdxd;)V <init>
fgs$d net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle
	<init> (Lfew;DDDLdxd;Lit;)V <init>
	i ()V postMoveUpdate
fgs$e net/minecraft/client/particle/DripParticle$FallAndLandParticle
	b landParticle
	<init> (Lfew;DDDLdxd;Lit;)V <init>
	i ()V postMoveUpdate
fgs$f net/minecraft/client/particle/DripParticle$FallingParticle
	<init> (Lfew;DDDLdxd;)V <init>
	<init> (Lfew;DDDLdxd;I)V <init>
	i ()V postMoveUpdate
fgs$g net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	<init> (Lfew;DDDLdxd;Lit;)V <init>
	i ()V postMoveUpdate
fgt net/minecraft/client/particle/DustColorTransitionParticle
	a fromColor
	b toColor
	<init> (Lfew;DDDDDDLio;Lfih;)V <init>
	a (Lorg/joml/Vector3f;F)Lorg/joml/Vector3f; randomizeColor
	f (F)V lerpColors
	a (Lein;Lemz;F)V render
fgt$a net/minecraft/client/particle/DustColorTransitionParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Lio;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgu net/minecraft/client/particle/DustParticle
	<init> (Lfew;DDDDDDLip;Lfih;)V <init>
fgu$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Lip;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgv net/minecraft/client/particle/DustParticleBase
	a sprites
	<init> (Lfew;DDDDDDLiq;Lfih;)V <init>
	a (FF)F randomizeColor
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
	a ()V tick
fgw net/minecraft/client/particle/EnchantmentTableParticle
	a xStart
	b yStart
	F zStart
	<init> (Lfew;DDDDDD)V <init>
	b ()Lfhq; getRenderType
	a (DDD)V move
	a (F)I getLightColor
	a ()V tick
fgw$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgw$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgx net/minecraft/client/particle/EndRodParticle
	<init> (Lfew;DDDDDDLfih;)V <init>
	a (DDD)V move
fgx$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgy net/minecraft/client/particle/ExplodeParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fgy$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fgz net/minecraft/client/particle/FallingDustParticle
	a rotSpeed
	b sprites
	<init> (Lfew;DDDFFFLfih;)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
	a ()V tick
fgz$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Lin;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fha net/minecraft/client/particle/FireworkParticles
	<init> ()V <init>
fha$1 net/minecraft/client/particle/FireworkParticles$1
	a $SwitchMap$net$minecraft$world$item$FireworkRocketItem$Shape
	<clinit> ()V <clinit>
fha$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fha$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	a (Lein;Lemz;F)V render
	b (F)F getQuadSize
fha$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	b trail
	F flicker
	G engine
	H fadeR
	I fadeG
	J fadeB
	K hasFade
	<init> (Lfew;DDDDDDLfho;Lfih;)V <init>
	a (Z)V setTrail
	b (Z)V setFlicker
	a (Lein;Lemz;F)V render
	a ()V tick
fha$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fha$e net/minecraft/client/particle/FireworkParticles$Starter
	a life
	b engine
	D explosions
	E twinkleDelay
	<init> (Lfew;DDDDDDLfho;Lqr;)V <init>
	a ()V tick
	c ()Z isFarAwayFromCamera
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
fhb net/minecraft/client/particle/FlameParticle
	<init> (Lfew;DDDDDD)V <init>
	b ()Lfhq; getRenderType
	a (DDD)V move
	b (F)F getQuadSize
	a (F)I getLightColor
fhb$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhb$b net/minecraft/client/particle/FlameParticle$SmallFlameProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhc net/minecraft/client/particle/GlowParticle
	a RANDOM
	b sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a (F)I getLightColor
	a ()V tick
	<clinit> ()V <clinit>
fhc$a net/minecraft/client/particle/GlowParticle$ElectricSparkProvider
	a SPEED_FACTOR
	b sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhc$b net/minecraft/client/particle/GlowParticle$GlowSquidProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhc$c net/minecraft/client/particle/GlowParticle$ScrapeProvider
	a SPEED_FACTOR
	b sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhc$d net/minecraft/client/particle/GlowParticle$WaxOffProvider
	a SPEED_FACTOR
	b sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhc$e net/minecraft/client/particle/GlowParticle$WaxOnProvider
	a SPEED_FACTOR
	b sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhd net/minecraft/client/particle/HeartParticle
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
fhd$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhd$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhe net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	<init> (Lfew;DDDDLfih;)V <init>
	a (F)I getLightColor
	a ()V tick
	b ()Lfhq; getRenderType
fhe$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhf net/minecraft/client/particle/HugeExplosionSeedParticle
	a life
	b lifeTime
	<init> (Lfew;DDD)V <init>
	a ()V tick
fhf$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	<init> ()V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhg net/minecraft/client/particle/ItemPickupParticle
	a LIFE_TIME
	b renderBuffers
	D itemEntity
	E target
	F life
	G entityRenderDispatcher
	<init> (Lfow;Lfkd;Lfew;Lbfj;Lbfj;)V <init>
	<init> (Lfow;Lfkd;Lfew;Lbfj;Lbfj;Leei;)V <init>
	a (Lbfj;)Lbfj; getSafeCopy
	b ()Lfhq; getRenderType
	a (Lein;Lemz;F)V render
	a ()V tick
fhh net/minecraft/client/particle/LargeSmokeParticle
	<init> (Lfew;DDDDDDLfih;)V <init>
fhh$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhi net/minecraft/client/particle/LavaParticle
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	a (F)I getLightColor
	b (F)F getQuadSize
	a ()V tick
fhi$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhj net/minecraft/client/particle/MobAppearanceParticle
	a model
	b renderType
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	a (Lein;Lemz;F)V render
fhj$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	<init> ()V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhk net/minecraft/client/particle/NoRenderParticle
	<init> (Lfew;DDD)V <init>
	<init> (Lfew;DDDDDD)V <init>
	a (Lein;Lemz;F)V render
	b ()Lfhq; getRenderType
fhl net/minecraft/client/particle/NoteParticle
	<init> (Lfew;DDDD)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
fhl$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhm net/minecraft/client/particle/Particle
	a INITIAL_AABB
	b MAXIMUM_COLLISION_VELOCITY_SQUARED
	c level
	d xo
	e yo
	f zo
	g x
	h y
	i z
	j xd
	k yd
	l zd
	D bb
	m onGround
	n hasPhysics
	E stoppedByCollision
	o removed
	p bbWidth
	q bbHeight
	r random
	s age
	t lifetime
	u gravity
	v rCol
	w gCol
	x bCol
	y alpha
	z roll
	A oRoll
	B friction
	C speedUpWhenYMotionIsBlocked
	<init> (Lfew;DDD)V <init>
	<init> (Lfew;DDDDDD)V <init>
	c (F)Lfhm; setPower
	b (DDD)V setParticleSpeed
	d (F)Lfhm; scale
	a (FFF)V setColor
	e (F)V setAlpha
	a (I)V setLifetime
	j ()I getLifetime
	a ()V tick
	a (Lein;Lemz;F)V render
	b ()Lfhq; getRenderType
	toString ()Ljava/lang/String; toString
	k ()V remove
	b (FF)V setSize
	c (DDD)V setPos
	a (DDD)V move
	l ()V setLocationFromBoundingbox
	a (F)I getLightColor
	m ()Z isAlive
	n ()Leed; getBoundingBox
	a (Leed;)V setBoundingBox
	o ()Ljava/util/Optional; getParticleGroup
	<clinit> ()V <clinit>
fhn net/minecraft/client/particle/ParticleDescription
	a textures
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonObject;)Lfhn; fromJson
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; lambda$fromJson$0
fho net/minecraft/client/particle/ParticleEngine
	b LOGGER
	c PARTICLE_LISTER
	d PARTICLES_ATLAS_INFO
	e MAX_PARTICLES_PER_LAYER
	f RENDER_ORDER
	a level
	g particles
	h trackingEmitters
	i textureManager
	j random
	k providers
	l particlesToAdd
	m spriteSets
	n textureAtlas
	o trackedParticleCounts
	<init> (Lfew;Lfuw;)V <init>
	e ()V registerProviders
	a (Liu;Lfhp;)V register
	a (Liu;Lfhp$a;)V register
	a (Liu;Lfho$c;)V register
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a ()V close
	a (Lacq;Lakv;)Ljava/util/Optional; loadParticleDescription
	a (Lbfj;Lit;)V createTrackingEmitter
	a (Lbfj;Lit;I)V createTrackingEmitter
	a (Lit;DDDDDD)Lfhm; createParticle
	b (Lit;DDDDDD)Lfhm; makeParticle
	a (Lfhm;)V add
	b ()V tick
	a (Ljava/util/Collection;)V tickParticleList
	a (Lis;I)V updateCount
	b (Lfhm;)V tickParticle
	a (Leij;Lfjx$a;Lfjw;Lemz;F)V render
	a (Lfew;)V setLevel
	a (Lgu;Ldcb;)V destroy
	a (Lgu;Lha;)V crack
	d ()Ljava/lang/String; countParticles
	a (Lis;)Z hasSpaceInParticleLimit
	f ()V clearParticles
	a (Lgu;Ldcb;DDDDDD)V lambda$destroy$13
	b (Lis;)V lambda$tickParticleList$12
	a (Lfhq;)Ljava/util/Queue; lambda$tick$11
	a (Lfhq;Ljava/util/Queue;)V lambda$tick$10
	a (Lban;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V lambda$reload$9
	a (Lfuq$a;Ljava/util/Set;Lfuv;Lfho$a;)V lambda$reload$8
	a (Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage; lambda$reload$7
	a (Ljava/util/List;Ljava/util/concurrent/Executor;Lacq;Lakv;)V lambda$reload$6
	b (Lacq;Lakv;)Lfho$a; lambda$reload$5
	a (Lakx;)Ljava/util/Map; lambda$reload$4
	a (Lfhp$a;Lfih;)Lfhp; lambda$register$3
	a (Lfhp$a;Lfih;Lit;Lfew;DDDDDD)Lfhm; lambda$register$2
	a (Lfih;)Lfhp; lambda$registerProviders$1
	a (Lfih;Liy;Lfew;DDDDDD)Lfhm; lambda$registerProviders$0
	<clinit> ()V <clinit>
fho$a net/minecraft/client/particle/ParticleEngine$1ParticleDefinition
	a id
	b sprites
	<init> (Lacq;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; id
	b ()Ljava/util/Optional; sprites
fho$b net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	a sprites
	<init> ()V <init>
	a (II)Lfuv; get
	a (Lapf;)Lfuv; get
	a (Ljava/util/List;)V rebind
fho$c net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
	create (Lfih;)Lfhp; create
fhp net/minecraft/client/particle/ParticleProvider
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhp$a net/minecraft/client/particle/ParticleProvider$Sprite
	createParticle (Lit;Lfew;DDDDDD)Lfim; createParticle
fhq net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	<clinit> ()V <clinit>
fhq$1 net/minecraft/client/particle/ParticleRenderType$1
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhq$2 net/minecraft/client/particle/ParticleRenderType$2
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhq$3 net/minecraft/client/particle/ParticleRenderType$3
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhq$4 net/minecraft/client/particle/ParticleRenderType$4
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhq$5 net/minecraft/client/particle/ParticleRenderType$5
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhq$6 net/minecraft/client/particle/ParticleRenderType$6
	<init> ()V <init>
	a (Leie;Lfuw;)V begin
	a (Leil;)V end
	toString ()Ljava/lang/String; toString
fhr net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	b (F)F getQuadSize
	a ()V tick
fhr$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhr$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhs net/minecraft/client/particle/PortalParticle
	a xStart
	b yStart
	F zStart
	<init> (Lfew;DDDDDD)V <init>
	b ()Lfhq; getRenderType
	a (DDD)V move
	b (F)F getQuadSize
	a (F)I getLightColor
	a ()V tick
fhs$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fht net/minecraft/client/particle/ReversePortalParticle
	<init> (Lfew;DDDDDD)V <init>
	b (F)F getQuadSize
	a ()V tick
fht$a net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhu net/minecraft/client/particle/RisingParticle
	<init> (Lfew;DDDDDD)V <init>
fhv net/minecraft/client/particle/SculkChargeParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	a (F)I getLightColor
	b ()Lfhq; getRenderType
	a ()V tick
fhv$a net/minecraft/client/particle/SculkChargeParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liw;Lfew;DDDDDD)Lfhm; createParticle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfih; sprite
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhw net/minecraft/client/particle/SculkChargePopParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	a (F)I getLightColor
	b ()Lfhq; getRenderType
	a ()V tick
fhw$a net/minecraft/client/particle/SculkChargePopParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfih; sprite
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhx net/minecraft/client/particle/ShriekParticle
	a ROTATION_VECTOR
	b TRANSFORM_VECTOR
	F MAGICAL_X_ROT
	G delay
	<init> (Lfew;DDDI)V <init>
	b (F)F getQuadSize
	a (Lein;Lemz;F)V render
	a (Lein;Lemz;FLjava/util/function/Consumer;)V renderRotatedParticle
	a (Lein;Lorg/joml/Vector3f;FFI)V makeCornerVertex
	a (F)I getLightColor
	b ()Lfhq; getRenderType
	a ()V tick
	a (Lorg/joml/Quaternionf;)V lambda$render$1
	b (Lorg/joml/Quaternionf;)V lambda$render$0
	<clinit> ()V <clinit>
fhx$a net/minecraft/client/particle/ShriekParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Lix;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fhy net/minecraft/client/particle/SimpleAnimatedParticle
	a sprites
	b fadeR
	F fadeG
	G fadeB
	H hasFade
	<init> (Lfew;DDDLfih;F)V <init>
	b (I)V setColor
	c (I)V setFadeColor
	b ()Lfhq; getRenderType
	a ()V tick
	a (F)I getLightColor
fhz net/minecraft/client/particle/SingleQuadParticle
	D quadSize
	<init> (Lfew;DDD)V <init>
	<init> (Lfew;DDDDDD)V <init>
	a (Lein;Lemz;F)V render
	b (F)F getQuadSize
	d (F)Lfhm; scale
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fia net/minecraft/client/particle/SmokeParticle
	<init> (Lfew;DDDDDDFLfih;)V <init>
fia$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fib net/minecraft/client/particle/SnowflakeParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fib$a net/minecraft/client/particle/SnowflakeParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fic net/minecraft/client/particle/SonicBoomParticle
	<init> (Lfew;DDDDLfih;)V <init>
fic$a net/minecraft/client/particle/SonicBoomParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fid net/minecraft/client/particle/SoulParticle
	b sprites
	a isGlowing
	<init> (Lfew;DDDDDDLfih;)V <init>
	a (F)I getLightColor
	b ()Lfhq; getRenderType
	a ()V tick
fid$a net/minecraft/client/particle/SoulParticle$EmissiveProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fid$b net/minecraft/client/particle/SoulParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fie net/minecraft/client/particle/SpellParticle
	a RANDOM
	b sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
	g ()Z isCloseToScopingPlayer
	<clinit> ()V <clinit>
fie$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fie$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fie$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fie$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fie$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fif net/minecraft/client/particle/SpitParticle
	<init> (Lfew;DDDDDDLfih;)V <init>
fif$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fig net/minecraft/client/particle/SplashParticle
	<init> (Lfew;DDDDDD)V <init>
fig$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fih net/minecraft/client/particle/SpriteSet
	a (II)Lfuv; get
	a (Lapf;)Lfuv; get
fii net/minecraft/client/particle/SquidInkParticle
	<init> (Lfew;DDDDDDILfih;)V <init>
	a ()V tick
fii$a net/minecraft/client/particle/SquidInkParticle$GlowInkProvider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fii$b net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fij net/minecraft/client/particle/SuspendedParticle
	<init> (Lfew;Lfih;DDD)V <init>
	<init> (Lfew;Lfih;DDDDDD)V <init>
	b ()Lfhq; getRenderType
fij$a net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fij$b net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fij$b$1 net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider$1
	a this$0
	<init> (Lfij$b;Lfew;Lfih;DDDDDD)V <init>
	o ()Ljava/util/Optional; getParticleGroup
fij$c net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fij$d net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fik net/minecraft/client/particle/SuspendedTownParticle
	<init> (Lfew;DDDDDD)V <init>
	b ()Lfhq; getRenderType
	a (DDD)V move
	a ()V tick
fik$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fik$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fik$c net/minecraft/client/particle/SuspendedTownParticle$EggCrackProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fik$d net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fik$e net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fil net/minecraft/client/particle/TerrainParticle
	a pos
	b uo
	F vo
	<init> (Lfew;DDDDDDLdcb;)V <init>
	<init> (Lfew;DDDDDDLdcb;Lgu;)V <init>
	b ()Lfhq; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	a (F)I getLightColor
fil$a net/minecraft/client/particle/TerrainParticle$Provider
	<init> ()V <init>
	a (Lin;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fim net/minecraft/client/particle/TextureSheetParticle
	E sprite
	<init> (Lfew;DDD)V <init>
	<init> (Lfew;DDDDDD)V <init>
	a (Lfuv;)V setSprite
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	a (Lfih;)V pickSprite
	b (Lfih;)V setSpriteFromAge
fin net/minecraft/client/particle/TotemParticle
	<init> (Lfew;DDDDDDLfih;)V <init>
fin$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fio net/minecraft/client/particle/TrackingEmitter
	a entity
	b life
	D lifeTime
	E particleType
	<init> (Lfew;Lbfj;Lit;)V <init>
	<init> (Lfew;Lbfj;Lit;I)V <init>
	<init> (Lfew;Lbfj;Lit;ILeei;)V <init>
	a ()V tick
fip net/minecraft/client/particle/VibrationSignalParticle
	a target
	b rot
	F rotO
	G pitch
	H pitchO
	<init> (Lfew;DDDLdgp;I)V <init>
	a (Lein;Lemz;F)V render
	a (Lein;Lemz;FLjava/util/function/Consumer;)V renderSignal
	a (F)I getLightColor
	b ()Lfhq; getRenderType
	a ()V tick
	a (FFFLorg/joml/Quaternionf;)V lambda$render$1
	b (FFFLorg/joml/Quaternionf;)V lambda$render$0
fip$a net/minecraft/client/particle/VibrationSignalParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liz;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fiq net/minecraft/client/particle/WakeParticle
	a sprites
	<init> (Lfew;DDDDDDLfih;)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fiq$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fir net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fir$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fis net/minecraft/client/particle/WaterDropParticle
	<init> (Lfew;DDD)V <init>
	b ()Lfhq; getRenderType
	a ()V tick
fis$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fit net/minecraft/client/particle/WhiteAshParticle
	a COLOR_RGB24
	<init> (Lfew;DDDDDDFLfih;)V <init>
fit$a net/minecraft/client/particle/WhiteAshParticle$Provider
	a sprites
	<init> (Lfih;)V <init>
	a (Liy;Lfew;DDDDDD)Lfhm; createParticle
	createParticle (Lit;Lfew;DDDDDD)Lfhm; createParticle
fiu net/minecraft/client/particle/package-info
fiv net/minecraft/client/player/AbstractClientPlayer
	g SKIN_URL_TEMPLATE
	cl playerInfo
	b deltaMovementOnPreviousTick
	c elytraRotX
	d elytraRotY
	e elytraRotZ
	f clientLevel
	<init> (Lfew;Lcom/mojang/authlib/GameProfile;)V <init>
	G_ ()Z isSpectator
	f ()Z isCreative
	a ()Z isCapeLoaded
	b ()Lffb; getPlayerInfo
	l ()V tick
	b (F)Leei; getDeltaMovementLerped
	c ()Z isSkinLoaded
	d ()Lacq; getSkinTextureLocation
	e ()Lacq; getCloakTextureLocation
	h ()Z isElytraLoaded
	i ()Lacq; getElytraTextureLocation
	a (Lacq;Ljava/lang/String;)V registerSkinTexture
	c (Ljava/lang/String;)Lacq; getSkinLocation
	j ()Ljava/lang/String; getModelName
	m ()F getFieldOfViewModifier
fiw net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	<init> ()V <init>
	a (ZF)V tick
	a ()Leeh; getMoveVector
	b ()Z hasForwardImpulse
fix net/minecraft/client/player/KeyboardInput
	i options
	<init> (Lenr;)V <init>
	a (ZZ)F calculateImpulse
	a (ZF)V tick
fiy net/minecraft/client/player/LocalPlayer
	g LOGGER
	cv POSITION_REMINDER_INTERVAL
	cw WATER_VISION_MAX_TIME
	cx WATER_VISION_QUICK_TIME
	cy WATER_VISION_QUICK_PERCENT
	cz SUFFOCATING_COLLISION_CHECK_SCALE
	cA MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN
	cB DEFAULT_SNEAKING_MOVEMENT_FACTOR
	cl connection
	cC stats
	cD recipeBook
	cE ambientSoundHandlers
	cF permissionLevel
	cG xLast
	cH yLast1
	cI zLast
	cJ yRotLast
	cK xRotLast
	cL lastOnGround
	cM crouching
	cN wasShiftKeyDown
	cO wasSprinting
	cP positionReminder
	cQ flashOnSetHealth
	cR serverBrand
	cm input
	cn minecraft
	co sprintTriggerTime
	cp yBob
	cq xBob
	cr yBobO
	cs xBobO
	cS jumpRidingTicks
	cT jumpRidingScale
	ct spinningEffectIntensity
	cu oSpinningEffectIntensity
	cU startedUsingItem
	cV usingItemHand
	cW handsBusy
	cX autoJumpEnabled
	cY autoJumpTime
	cZ wasFallFlying
	da waterVisionTime
	db showDeathScreen
	<init> (Lenn;Lfew;Lfex;Lams;Lenb;ZZ)V <init>
	a (Lben;F)Z hurt
	s (F)V heal
	a (Lbfj;Z)Z startRiding
	bA ()V removeVehicle
	g (F)F getViewXRot
	h (F)F getViewYRot
	l ()V tick
	o ()F getCurrentMood
	K ()V sendPosition
	L ()V sendIsSprintingIfNeeded
	a (Z)Z drop
	a (Lbdw;)V swing
	fL ()V respawn
	f (Lben;F)V actuallyHurt
	q ()V closeContainer
	p ()V clientSideCloseContainer
	c (F)V hurtTo
	w ()V onUpdateAbilities
	g ()Z isLocalPlayer
	fq ()Z isSuppressingSlidingDownLadder
	bg ()Z canSpawnSprintParticle
	dO ()Z canSpawnSoulSpeedParticle
	s ()V sendRidingJump
	t ()V sendOpenInventory
	d (Ljava/lang/String;)V setServerBrand
	u ()Ljava/lang/String; getServerBrand
	v ()Lams; getStats
	x ()Lenb; getRecipeBook
	a (Lcjc;)V removeRecipeHighlight
	B ()I getPermissionLevel
	a (I)V setPermissionLevel
	a (Lsw;Z)V displayClientMessage
	c (DD)V moveTowardsClosestSpace
	i (Lgu;)Z suffocatesAt
	a (FII)V setExperienceValues
	a (Lsw;)V sendSystemMessage
	b (B)V handleEntityEvent
	b (Z)V setShowDeathScreen
	y ()Z shouldShowDeathScreen
	a (Lamg;FF)V playSound
	a (Lamg;Lami;FF)V playNotifySound
	cV ()Z isEffectiveAi
	c (Lbdw;)V startUsingItem
	fi ()Z isUsingItem
	fo ()V stopUsingItem
	fj ()Lbdw; getUsedItemHand
	a (Laby;)V onSyncedDataUpdated
	z ()Lbgk; jumpableVehicle
	A ()F getJumpRidingScale
	U ()Z isTextFilteringEnabled
	a (Ldav;Z)V openTextEdit
	a (Lcln;)V openMinecartCommandBlock
	a (Lczx;)V openCommandBlock
	a (Ldba;)V openStructureBlock
	a (Ldam;)V openJigsawBlock
	a (Lcfz;Lbdw;)V openItemGui
	a (Lbfj;)V crit
	b (Lbfj;)V magicCrit
	bP ()Z isShiftKeyDown
	bU ()Z isCrouching
	C ()Z isMovingSlowly
	fc ()V serverAiStep
	D ()Z isControlledCamera
	E ()V resetPos
	b_ ()V aiStep
	dX ()V tickDeath
	M ()V handleNetherPortalClient
	bv ()V rideTick
	G ()Z isHandsBusy
	c (Lbey;)Lbfa; removeEffectNoUpdate
	a (Lbgf;Leei;)V move
	I ()Z isAutoJumpEnabled
	f (FF)V updateAutoJump
	b (Leei;)Z isHorizontalCollisionMinor
	N ()Z canAutoJump
	O ()Z isMoving
	P ()Z canStartSprinting
	c (Lbfj;)Z vehicleCanSprint
	Q ()Z hasEnoughImpulseToStartSprinting
	R ()Z hasEnoughFoodToStartSprinting
	J ()F getWaterVision
	a (Lcmj;)V onGameModeChanged
	aZ ()Z isUnderWater
	fG ()Z updateIsUnderwater
	q (F)Leei; getRopeHoldPosition
	a (Lcfz;Lcfz;Lcbn;)V updateTutorialInventoryAction
	dz ()F getVisualRotationYInDegrees
	a (Lefb;)Ljava/util/stream/Stream; lambda$updateAutoJump$0
	<clinit> ()V <clinit>
fiz net/minecraft/client/player/RemotePlayer
	g lerpDeltaMovement
	cl lerpDeltaMovementSteps
	<init> (Lfew;Lcom/mojang/authlib/GameProfile;)V <init>
	a (D)Z shouldRenderAtSqrDistance
	a (Lben;F)Z hurt
	l ()V tick
	b_ ()V aiStep
	l (DDD)V lerpMotion
	fH ()V updatePlayerPose
	a (Lsw;)V sendSystemMessage
fja net/minecraft/client/player/inventory/Hotbar
	a items
	<init> ()V <init>
	delegate ()Ljava/util/List; delegate
	a ()Lqx; createTag
	a (Lqx;)V fromTag
	isEmpty ()Z isEmpty
	delegate ()Ljava/util/Collection; delegate
	delegate ()Ljava/lang/Object; delegate
fjb net/minecraft/client/player/inventory/package-info
fjc net/minecraft/client/player/package-info
fjd net/minecraft/client/profiling/ClientMetricsSamplersProvider
	a levelRenderer
	b samplers
	c samplerFactory
	<init> (Ljava/util/function/LongSupplier;Lfjv;)V <init>
	a ()V registerStaticSamplers
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
fje net/minecraft/client/profiling/package-info
fjf net/minecraft/client/quickplay/QuickPlay
	a ERROR_TITLE
	b INVALID_IDENTIFIER
	c REALM_CONNECT
	d REALM_PERMISSION
	e TO_TITLE
	f TO_WORLD_LIST
	g TO_REALMS_LIST
	<init> ()V <init>
	a (Lenn;Lezy$c;Lakt;Leiz;)V connect
	a (Lenn;Ljava/lang/String;)V joinSingleplayerWorld
	b (Lenn;Ljava/lang/String;)V joinMultiplayerWorld
	a (Lenn;Leiz;Ljava/lang/String;)V joinRealmsWorld
	a (JLejq;)Z lambda$joinRealmsWorld$1
	a (Ljava/lang/String;Lenn;Ljava/lang/String;Ljava/lang/String;Leiz;)V lambda$connect$0
	<clinit> ()V <clinit>
fjg net/minecraft/client/quickplay/QuickPlayLog
	a INACTIVE
	b LOGGER
	c GSON
	d path
	e worldData
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lfjg; of
	a (Lfjg$c;Ljava/lang/String;Ljava/lang/String;)V setWorldData
	a (Lenn;)V log
	b (Lenn;)V lambda$log$1
	a (Lcom/google/gson/JsonElement;)V lambda$log$0
	<clinit> ()V <clinit>
fjg$1 net/minecraft/client/quickplay/QuickPlayLog$1
	<init> (Ljava/lang/String;)V <init>
	a (Lenn;)V log
	a (Lfjg$c;Ljava/lang/String;Ljava/lang/String;)V setWorldData
fjg$a net/minecraft/client/quickplay/QuickPlayLog$QuickPlayEntry
	b quickPlayWorld
	c lastPlayedTime
	d gamemode
	a CODEC
	<init> (Lfjg$b;Ljava/time/Instant;Lcmj;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfjg$b; quickPlayWorld
	b ()Ljava/time/Instant; lastPlayedTime
	c ()Lcmj; gamemode
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
fjg$b net/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld
	b type
	c id
	d name
	a MAP_CODEC
	<init> (Lfjg$c;Ljava/lang/String;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfjg$c; type
	b ()Ljava/lang/String; id
	c ()Ljava/lang/String; name
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
fjg$c net/minecraft/client/quickplay/QuickPlayLog$Type
	a SINGLEPLAYER
	b MULTIPLAYER
	c REALMS
	d CODEC
	e name
	f $VALUES
	values ()[Lfjg$c; values
	valueOf (Ljava/lang/String;)Lfjg$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lfjg$c; $values
	<clinit> ()V <clinit>
fjh net/minecraft/client/quickplay/package-info
fji net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	<init> ()V <init>
	a (Lclp;Lgu;Lclx;)I getAverageColor
	a (Lclp;Lgu;)I getAverageGrassColor
	b (Lclp;Lgu;)I getAverageFoliageColor
	c (Lclp;Lgu;)I getAverageWaterColor
	a (Lcnk;DD)I lambda$static$1
	b (Lcnk;DD)I lambda$static$0
	<clinit> ()V <clinit>
fjj net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	a SHULKER_BOXES
	b DEFAULT_SHULKER_BOX
	c chest
	d trappedChest
	e enderChest
	f banner
	g bed
	h conduit
	i decoratedPot
	j shieldModel
	k tridentModel
	l skullModels
	m blockEntityRenderDispatcher
	n entityModelSet
	<init> (Lflt;Lfea;)V <init>
	a (Lakx;)V onResourceManagerReload
	a (Lcfz;Lcfw;Leij;Lfjx;II)V renderByItem
	a (Lqr;Lcom/mojang/authlib/GameProfile;)V lambda$renderByItem$2
	a (I)[Ldau; lambda$static$1
	a (Lcen;)Ldau; lambda$static$0
	<clinit> ()V <clinit>
fjk net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	<init> ()V <init>
	a (Lfkf;)Leie; builder
	a ()V clearAll
	b ()V discardAll
	b (Lfkf;)Leie; lambda$new$1
	c (Lfkf;)Lfkf; lambda$new$0
fjl net/minecraft/client/renderer/CubeMap
	a SIDES
	b images
	<init> (Lacq;)V <init>
	a (Lenn;FFF)V render
	a (Lfuw;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
fjm net/minecraft/client/renderer/DimensionSpecialEffects
	a EFFECTS
	b sunriseCol
	c cloudLevel
	d hasGround
	e skyType
	f forceBrightLightmap
	g constantAmbientLight
	<init> (FZLfjm$d;ZZ)V <init>
	a (Ldfk;)Lfjm; forType
	a (FF)[F getSunriseColor
	a ()F getCloudHeight
	b ()Z hasGround
	a (Leei;F)Leei; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
	c ()Lfjm$d; skyType
	d ()Z forceBrightLightmap
	e ()Z constantAmbientLight
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectArrayMap;)V lambda$static$0
	<clinit> ()V <clinit>
fjm$a net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects
	<init> ()V <init>
	a (Leei;F)Leei; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
	a (FF)[F getSunriseColor
fjm$b net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects
	<init> ()V <init>
	a (Leei;F)Leei; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
fjm$c net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects
	a CLOUD_LEVEL
	<init> ()V <init>
	a (Leei;F)Leei; getBrightnessDependentFogColor
	a (II)Z isFoggyAt
fjm$d net/minecraft/client/renderer/DimensionSpecialEffects$SkyType
	a NONE
	b NORMAL
	c END
	d $VALUES
	values ()[Lfjm$d; values
	valueOf (Ljava/lang/String;)Lfjm$d; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfjm$d; $values
	<clinit> ()V <clinit>
fjn net/minecraft/client/renderer/EffectInstance
	a EFFECT_SHADER_PATH
	b LOGGER
	c DUMMY_UNIFORM
	d ALWAYS_REAPPLY
	e lastAppliedEffect
	f lastProgramId
	g samplerMap
	h samplerNames
	i samplerLocations
	j uniforms
	k uniformLocations
	l uniformMap
	m programId
	n name
	o dirty
	p blend
	q attributes
	r attributeNames
	s vertexProgram
	t fragmentProgram
	<init> (Lakx;Ljava/lang/String;)V <init>
	a (Lakx;Lehx$a;Ljava/lang/String;)Lehv; getOrCreate
	a (Lcom/google/gson/JsonObject;)Leht; parseBlendNode
	close ()V close
	f ()V clear
	g ()V apply
	b ()V markDirty
	a (Ljava/lang/String;)Leia; getUniform
	b (Ljava/lang/String;)Lehs; safeGetUniform
	i ()V updateLocations
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;)V setSampler
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	c ()Lehx; getVertexProgram
	d ()Lehx; getFragmentProgram
	e ()V attachToProgram
	h ()Ljava/lang/String; getName
	a ()I getId
	<clinit> ()V <clinit>
fjo net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	values ()[Lfjo; values
	valueOf (Ljava/lang/String;)Lfjo; valueOf
	a (Lha;)Lfjo; fromFacing
	<init> (Ljava/lang/String;I[Lfjo$b;)V <init>
	a (I)Lfjo$b; getVertexInfo
	a ([Lfjo;)V lambda$static$0
	a ()[Lfjo; $values
	<clinit> ()V <clinit>
fjo$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
	<init> ()V <init>
	<clinit> ()V <clinit>
fjo$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
	<init> (III)V <init>
fjp net/minecraft/client/renderer/FogRenderer
	b WATER_FOG_DISTANCE
	c MOB_EFFECT_FOG
	a BIOME_FOG_TRANSITION_TIME
	d fogRed
	e fogGreen
	f fogBlue
	g targetBiomeFog
	h previousBiomeFog
	i biomeChangedTime
	<init> ()V <init>
	a (Lemz;FLfew;IF)V setupColor
	a ()V setupNoFog
	a (Lbfj;F)Lfjp$e; getPriorityFogFunction
	a (Lemz;Lfjp$d;FZF)V setupFog
	b ()V levelFogColor
	a (Lbfz;FLfjp$e;)Z lambda$getPriorityFogFunction$1
	a (Lfew;Lcnm;FIII)Leei; lambda$setupColor$0
	<clinit> ()V <clinit>
fjp$a net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction
	<init> ()V <init>
	a ()Lbey; getMobEffect
	a (Lfjp$c;Lbfz;Lbfa;FF)V setupFog
fjp$b net/minecraft/client/renderer/FogRenderer$DarknessFogFunction
	<init> ()V <init>
	a ()Lbey; getMobEffect
	a (Lfjp$c;Lbfz;Lbfa;FF)V setupFog
	a (Lbfz;Lbfa;FF)F getModifiedVoidDarkness
fjp$c net/minecraft/client/renderer/FogRenderer$FogData
	a mode
	b start
	c end
	d shape
	<init> (Lfjp$d;)V <init>
fjp$d net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
	values ()[Lfjp$d; values
	valueOf (Ljava/lang/String;)Lfjp$d; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfjp$d; $values
	<clinit> ()V <clinit>
fjp$e net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction
	a ()Lbey; getMobEffect
	a (Lfjp$c;Lbfz;Lbfa;FF)V setupFog
	a (Lbfz;F)Z isEnabled
	a (Lbfz;Lbfa;FF)F getModifiedVoidDarkness
fjq net/minecraft/client/renderer/GameRenderer
	f NAUSEA_LOCATION
	g LOGGER
	h DEPTH_BUFFER_DEBUG
	a PROJECTION_Z_NEAR
	i GUI_Z_NEAR
	j minecraft
	k resourceManager
	l random
	m renderDistance
	b itemInHandRenderer
	n mapRenderer
	o renderBuffers
	p tick
	q fov
	r oldFov
	s darkenWorldAmount
	t darkenWorldAmountO
	u renderHand
	v renderBlockOutline
	w lastScreenshotAttempt
	x hasWorldScreenshot
	y lastActiveTime
	z lightTexture
	A overlayTexture
	B panoramicMode
	C zoom
	D zoomX
	E zoomY
	c ITEM_ACTIVATION_ANIMATION_LENGTH
	F itemActivationItem
	G itemActivationTicks
	H itemActivationOffX
	I itemActivationOffY
	J postEffect
	K EFFECTS
	d EFFECT_NONE
	L effectIndex
	M effectActive
	N mainCamera
	e blitShader
	O shaders
	P positionShader
	Q positionColorShader
	R positionColorTexShader
	S positionTexShader
	T positionTexColorShader
	U particleShader
	V positionColorLightmapShader
	W positionColorTexLightmapShader
	X positionTexColorNormalShader
	Y positionTexLightmapColorShader
	Z rendertypeSolidShader
	aa rendertypeCutoutMippedShader
	ab rendertypeCutoutShader
	ac rendertypeTranslucentShader
	ad rendertypeTranslucentMovingBlockShader
	ae rendertypeTranslucentNoCrumblingShader
	af rendertypeArmorCutoutNoCullShader
	ag rendertypeEntitySolidShader
	ah rendertypeEntityCutoutShader
	ai rendertypeEntityCutoutNoCullShader
	aj rendertypeEntityCutoutNoCullZOffsetShader
	ak rendertypeItemEntityTranslucentCullShader
	al rendertypeEntityTranslucentCullShader
	am rendertypeEntityTranslucentShader
	an rendertypeEntityTranslucentEmissiveShader
	ao rendertypeEntitySmoothCutoutShader
	ap rendertypeBeaconBeamShader
	aq rendertypeEntityDecalShader
	ar rendertypeEntityNoOutlineShader
	as rendertypeEntityShadowShader
	at rendertypeEntityAlphaShader
	au rendertypeEyesShader
	av rendertypeEnergySwirlShader
	aw rendertypeLeashShader
	ax rendertypeWaterMaskShader
	ay rendertypeOutlineShader
	az rendertypeArmorGlintShader
	aA rendertypeArmorEntityGlintShader
	aB rendertypeGlintTranslucentShader
	aC rendertypeGlintShader
	aD rendertypeGlintDirectShader
	aE rendertypeEntityGlintShader
	aF rendertypeEntityGlintDirectShader
	aG rendertypeTextShader
	aH rendertypeTextBackgroundShader
	aI rendertypeTextIntensityShader
	aJ rendertypeTextSeeThroughShader
	aK rendertypeTextBackgroundSeeThroughShader
	aL rendertypeTextIntensitySeeThroughShader
	aM rendertypeLightningShader
	aN rendertypeTripwireShader
	aO rendertypeEndPortalShader
	aP rendertypeEndGatewayShader
	aQ rendertypeLinesShader
	aR rendertypeCrumblingShader
	aS rendertypeGuiShader
	aT rendertypeGuiOverlayShader
	aU rendertypeGuiTextHighlightShader
	aV rendertypeGuiGhostRecipeOverlayShader
	<init> (Lenn;Lfjt;Lakx;Lfkd;)V <init>
	close ()V close
	a (Z)V setRenderHand
	b (Z)V setRenderBlockOutline
	c (Z)V setPanoramicMode
	a ()Z isPanoramicMode
	b ()V shutdownEffect
	c ()V togglePostEffect
	a (Lbfj;)V checkEntityPostEffect
	d ()V cycleEffect
	a (Lacq;)V loadEffect
	e ()Lakr; createReloadListener
	a (Lala;)V preloadUiShader
	a (Lala;Ljava/lang/String;Leio;)Lfki; preloadShader
	b (Lala;)V reloadShaders
	aw ()V shutdownShaders
	a (Ljava/lang/String;)Lfki; getShader
	f ()V tick
	g ()Lfka; currentEffect
	a (II)V resize
	a (F)V pick
	ax ()V tickFov
	a (Lemz;FZ)D getFov
	a (Leij;F)V bobHurt
	b (Leij;F)V bobView
	a (FFF)V renderZoomed
	a (Leij;Lemz;F)V renderItemInHand
	a (Lorg/joml/Matrix4f;)V resetProjectionMatrix
	a (D)Lorg/joml/Matrix4f; getProjectionMatrix
	h ()F getDepthFar
	a (Lbfz;F)F getNightVisionScale
	a (FJZ)V render
	ay ()V tryTakeScreenshotIfNeeded
	a (Ljava/nio/file/Path;)V takeAutoScreenshot
	az ()Z shouldRenderBlockOutline
	a (FJLeij;)V renderLevel
	i ()V resetData
	j ()Leoy; getMapRenderer
	a (Lcfz;)V displayItemActivation
	a (IIF)V renderItemActivationAnimation
	a (Leox;F)V renderConfusionOverlay
	k ()Lenn; getMinecraft
	b (F)F getDarkenWorldAmount
	l ()F getRenderDistance
	m ()Lemz; getMainCamera
	n ()Lfjw; lightTexture
	o ()Lfum; overlayTexture
	p ()Lfki; getPositionShader
	q ()Lfki; getPositionColorShader
	r ()Lfki; getPositionColorTexShader
	s ()Lfki; getPositionTexShader
	t ()Lfki; getPositionTexColorShader
	u ()Lfki; getParticleShader
	v ()Lfki; getPositionColorLightmapShader
	w ()Lfki; getPositionColorTexLightmapShader
	x ()Lfki; getPositionTexColorNormalShader
	y ()Lfki; getPositionTexLightmapColorShader
	z ()Lfki; getRendertypeSolidShader
	A ()Lfki; getRendertypeCutoutMippedShader
	B ()Lfki; getRendertypeCutoutShader
	C ()Lfki; getRendertypeTranslucentShader
	D ()Lfki; getRendertypeTranslucentMovingBlockShader
	E ()Lfki; getRendertypeTranslucentNoCrumblingShader
	F ()Lfki; getRendertypeArmorCutoutNoCullShader
	G ()Lfki; getRendertypeEntitySolidShader
	H ()Lfki; getRendertypeEntityCutoutShader
	I ()Lfki; getRendertypeEntityCutoutNoCullShader
	J ()Lfki; getRendertypeEntityCutoutNoCullZOffsetShader
	K ()Lfki; getRendertypeItemEntityTranslucentCullShader
	L ()Lfki; getRendertypeEntityTranslucentCullShader
	M ()Lfki; getRendertypeEntityTranslucentShader
	N ()Lfki; getRendertypeEntityTranslucentEmissiveShader
	O ()Lfki; getRendertypeEntitySmoothCutoutShader
	P ()Lfki; getRendertypeBeaconBeamShader
	Q ()Lfki; getRendertypeEntityDecalShader
	R ()Lfki; getRendertypeEntityNoOutlineShader
	S ()Lfki; getRendertypeEntityShadowShader
	T ()Lfki; getRendertypeEntityAlphaShader
	U ()Lfki; getRendertypeEyesShader
	V ()Lfki; getRendertypeEnergySwirlShader
	W ()Lfki; getRendertypeLeashShader
	X ()Lfki; getRendertypeWaterMaskShader
	Y ()Lfki; getRendertypeOutlineShader
	Z ()Lfki; getRendertypeArmorGlintShader
	aa ()Lfki; getRendertypeArmorEntityGlintShader
	ab ()Lfki; getRendertypeGlintTranslucentShader
	ac ()Lfki; getRendertypeGlintShader
	ad ()Lfki; getRendertypeGlintDirectShader
	ae ()Lfki; getRendertypeEntityGlintShader
	af ()Lfki; getRendertypeEntityGlintDirectShader
	ag ()Lfki; getRendertypeTextShader
	ah ()Lfki; getRendertypeTextBackgroundShader
	ai ()Lfki; getRendertypeTextIntensityShader
	aj ()Lfki; getRendertypeTextSeeThroughShader
	ak ()Lfki; getRendertypeTextBackgroundSeeThroughShader
	al ()Lfki; getRendertypeTextIntensitySeeThroughShader
	am ()Lfki; getRendertypeLightningShader
	an ()Lfki; getRendertypeTripwireShader
	ao ()Lfki; getRendertypeEndPortalShader
	ap ()Lfki; getRendertypeEndGatewayShader
	aq ()Lfki; getRendertypeLinesShader
	ar ()Lfki; getRendertypeCrumblingShader
	as ()Lfki; getRendertypeGuiShader
	at ()Lfki; getRendertypeGuiOverlayShader
	au ()Lfki; getRendertypeGuiTextHighlightShader
	av ()Lfki; getRendertypeGuiGhostRecipeOverlayShader
	a (Lehk;Ljava/nio/file/Path;)V lambda$takeAutoScreenshot$68
	b (Ljava/nio/file/Path;)V lambda$tryTakeScreenshotIfNeeded$67
	aA ()Ljava/lang/String; lambda$render$66
	aB ()Ljava/lang/String; lambda$render$65
	b (II)Ljava/lang/String; lambda$render$64
	aC ()Ljava/lang/String; lambda$render$63
	aD ()Ljava/lang/String; lambda$render$62
	b (Lbfj;)Z lambda$pick$61
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$reloadShaders$60
	b (Lcom/mojang/datafixers/util/Pair;)V lambda$reloadShaders$59
	a (Lfki;)V lambda$reloadShaders$58
	b (Lfki;)V lambda$reloadShaders$57
	c (Lfki;)V lambda$reloadShaders$56
	d (Lfki;)V lambda$reloadShaders$55
	e (Lfki;)V lambda$reloadShaders$54
	f (Lfki;)V lambda$reloadShaders$53
	g (Lfki;)V lambda$reloadShaders$52
	h (Lfki;)V lambda$reloadShaders$51
	i (Lfki;)V lambda$reloadShaders$50
	j (Lfki;)V lambda$reloadShaders$49
	k (Lfki;)V lambda$reloadShaders$48
	l (Lfki;)V lambda$reloadShaders$47
	m (Lfki;)V lambda$reloadShaders$46
	n (Lfki;)V lambda$reloadShaders$45
	o (Lfki;)V lambda$reloadShaders$44
	p (Lfki;)V lambda$reloadShaders$43
	q (Lfki;)V lambda$reloadShaders$42
	r (Lfki;)V lambda$reloadShaders$41
	s (Lfki;)V lambda$reloadShaders$40
	t (Lfki;)V lambda$reloadShaders$39
	u (Lfki;)V lambda$reloadShaders$38
	v (Lfki;)V lambda$reloadShaders$37
	w (Lfki;)V lambda$reloadShaders$36
	x (Lfki;)V lambda$reloadShaders$35
	y (Lfki;)V lambda$reloadShaders$34
	z (Lfki;)V lambda$reloadShaders$33
	A (Lfki;)V lambda$reloadShaders$32
	B (Lfki;)V lambda$reloadShaders$31
	C (Lfki;)V lambda$reloadShaders$30
	D (Lfki;)V lambda$reloadShaders$29
	E (Lfki;)V lambda$reloadShaders$28
	F (Lfki;)V lambda$reloadShaders$27
	G (Lfki;)V lambda$reloadShaders$26
	H (Lfki;)V lambda$reloadShaders$25
	I (Lfki;)V lambda$reloadShaders$24
	J (Lfki;)V lambda$reloadShaders$23
	K (Lfki;)V lambda$reloadShaders$22
	L (Lfki;)V lambda$reloadShaders$21
	M (Lfki;)V lambda$reloadShaders$20
	N (Lfki;)V lambda$reloadShaders$19
	O (Lfki;)V lambda$reloadShaders$18
	P (Lfki;)V lambda$reloadShaders$17
	Q (Lfki;)V lambda$reloadShaders$16
	R (Lfki;)V lambda$reloadShaders$15
	S (Lfki;)V lambda$reloadShaders$14
	T (Lfki;)V lambda$reloadShaders$13
	U (Lfki;)V lambda$reloadShaders$12
	V (Lfki;)V lambda$reloadShaders$11
	W (Lfki;)V lambda$reloadShaders$10
	X (Lfki;)V lambda$reloadShaders$9
	Y (Lfki;)V lambda$reloadShaders$8
	Z (Lfki;)V lambda$reloadShaders$7
	aa (Lfki;)V lambda$reloadShaders$6
	ab (Lfki;)V lambda$reloadShaders$5
	ac (Lfki;)V lambda$reloadShaders$4
	ad (Lfki;)V lambda$reloadShaders$3
	ae (Lfki;)V lambda$reloadShaders$2
	af (Lfki;)V lambda$reloadShaders$1
	ag (Lfki;)V lambda$reloadShaders$0
	<clinit> ()V <clinit>
fjq$1 net/minecraft/client/renderer/GameRenderer$1
	a this$0
	<init> (Lfjq;)V <init>
	a (Lakx;Lban;)Lfjq$a; prepare
	a (Lfjq$a;Lakx;Lban;)V apply
	c ()Ljava/lang/String; getName
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	a (Ljava/util/Map;Lacq;Lakv;)V lambda$prepare$2
	a ([B)Ljava/io/InputStream; lambda$prepare$1
	a (Lacq;)Z lambda$prepare$0
fjq$a net/minecraft/client/renderer/GameRenderer$ResourceCache
	a original
	b cache
	<init> (Lala;Ljava/util/Map;)V <init>
	getResource (Lacq;)Ljava/util/Optional; getResource
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lala; original
	b ()Ljava/util/Map; cache
fjr net/minecraft/client/renderer/GpuWarnlistManager
	a LOGGER
	b GPU_WARNLIST_LOCATION
	c warnings
	d showWarning
	e warningDismissed
	f skipFabulous
	<init> ()V <init>
	a ()Z hasWarnings
	b ()Z willShowWarning
	d ()V showWarning
	e ()V dismissWarning
	f ()V dismissWarningAndSkipFabulous
	g ()Z isShowingWarning
	h ()Z isSkippingFabulous
	i ()V resetWarnings
	j ()Ljava/lang/String; getRendererWarnings
	k ()Ljava/lang/String; getVersionWarnings
	l ()Ljava/lang/String; getVendorWarnings
	m ()Ljava/lang/String; getAllWarnings
	a (Lakx;Lban;)Lfjr$a; prepare
	a (Lfjr$a;Lakx;Lban;)V apply
	a (Lcom/google/gson/JsonArray;Ljava/util/List;)V compilePatterns
	c (Lakx;Lban;)Lcom/google/gson/JsonObject; parseJson
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	a (Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$compilePatterns$1
	a (Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V lambda$getAllWarnings$0
	<clinit> ()V <clinit>
fjr$a net/minecraft/client/renderer/GpuWarnlistManager$Preparations
	a rendererPatterns
	b versionPatterns
	c vendorPatterns
	<init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V <init>
	a (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; matchAny
	a ()Lcom/google/common/collect/ImmutableMap; apply
fjs net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	<init> ()V <init>
	a (Ldcb;)Lfkf; getChunkRenderType
	b (Ldcb;)Lfkf; getMovingBlockRenderType
	a (Ldcb;Z)Lfkf; getRenderType
	a (Lcfz;Z)Lfkf; getRenderType
	a (Ldxe;)Lfkf; getRenderLayer
	a (Z)V setFancy
	a (Ljava/util/HashMap;)V lambda$static$1
	b (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
fjt net/minecraft/client/renderer/ItemInHandRenderer
	a MAP_BACKGROUND
	b MAP_BACKGROUND_CHECKERBOARD
	c ITEM_SWING_X_POS_SCALE
	d ITEM_SWING_Y_POS_SCALE
	e ITEM_SWING_Z_POS_SCALE
	f ITEM_HEIGHT_SCALE
	g ITEM_POS_X
	h ITEM_POS_Y
	i ITEM_POS_Z
	j ITEM_PRESWING_ROT_Y
	k ITEM_SWING_X_ROT_AMOUNT
	l ITEM_SWING_Y_ROT_AMOUNT
	m ITEM_SWING_Z_ROT_AMOUNT
	n EAT_JIGGLE_X_ROT_AMOUNT
	o EAT_JIGGLE_Y_ROT_AMOUNT
	p EAT_JIGGLE_Z_ROT_AMOUNT
	q EAT_JIGGLE_X_POS_SCALE
	r EAT_JIGGLE_Y_POS_SCALE
	s EAT_JIGGLE_Z_POS_SCALE
	t EAT_JIGGLE_EXPONENT
	u EAT_EXTRA_JIGGLE_CUTOFF
	v EAT_EXTRA_JIGGLE_SCALE
	w ARM_SWING_X_POS_SCALE
	x ARM_SWING_Y_POS_SCALE
	y ARM_SWING_Z_POS_SCALE
	z ARM_SWING_Y_ROT_AMOUNT
	A ARM_SWING_Z_ROT_AMOUNT
	B ARM_HEIGHT_SCALE
	C ARM_POS_SCALE
	D ARM_POS_X
	E ARM_POS_Y
	F ARM_POS_Z
	G ARM_PRESWING_ROT_Y
	H ARM_PREROTATION_X_OFFSET
	I ARM_PREROTATION_Y_OFFSET
	J ARM_PREROTATION_Z_OFFSET
	K ARM_POSTROTATION_X_OFFSET
	L ARM_ROT_X
	M ARM_ROT_Y
	N ARM_ROT_Z
	O MAP_SWING_X_POS_SCALE
	P MAP_SWING_Z_POS_SCALE
	Q MAP_HANDS_POS_X
	R MAP_HANDS_POS_Y
	S MAP_HANDS_POS_Z
	T MAP_HANDS_HEIGHT_SCALE
	U MAP_HANDS_TILT_SCALE
	V MAP_PLAYER_PITCH_SCALE
	W MAP_HANDS_Z_ROT_AMOUNT
	X MAPHAND_X_ROT_AMOUNT
	Y MAPHAND_Y_ROT_AMOUNT
	Z MAPHAND_Z_ROT_AMOUNT
	aa MAP_HAND_X_POS
	ab MAP_HAND_Y_POS
	ac MAP_HAND_Z_POS
	ad MAP_SWING_X_ROT_AMOUNT
	ae MAP_PRE_ROT_SCALE
	af MAP_GLOBAL_X_POS
	ag MAP_GLOBAL_Y_POS
	ah MAP_GLOBAL_Z_POS
	ai MAP_FINAL_SCALE
	aj MAP_BORDER
	ak MAP_HEIGHT
	al MAP_WIDTH
	am BOW_CHARGE_X_POS_SCALE
	an BOW_CHARGE_Y_POS_SCALE
	ao BOW_CHARGE_Z_POS_SCALE
	ap BOW_CHARGE_SHAKE_X_SCALE
	aq BOW_CHARGE_SHAKE_Y_SCALE
	ar BOW_CHARGE_SHAKE_Z_SCALE
	as BOW_CHARGE_Z_SCALE
	at BOW_MIN_SHAKE_CHARGE
	au minecraft
	av mainHandItem
	aw offHandItem
	ax mainHandHeight
	ay oMainHandHeight
	az offHandHeight
	aA oOffHandHeight
	aB entityRenderDispatcher
	aC itemRenderer
	<init> (Lenn;Lfow;Lfpw;)V <init>
	a (Lbfz;Lcfz;Lcfw;ZLeij;Lfjx;I)V renderItem
	a (F)F calculateMapTilt
	a (Leij;Lfjx;ILbft;)V renderMapHand
	a (Leij;Lfjx;IFLbft;FLcfz;)V renderOneHandedMap
	a (Leij;Lfjx;IFFF)V renderTwoHandedMap
	a (Leij;Lfjx;ILcfz;)V renderMap
	a (Leij;Lfjx;IFFLbft;)V renderPlayerArm
	a (Leij;FLbft;Lcfz;)V applyEatTransform
	a (Leij;FLbft;Lcfz;F)V applyBrushTransform
	a (Leij;Lbft;F)V applyItemArmAttackTransform
	b (Leij;Lbft;F)V applyItemArmTransform
	a (FLeij;Lfjx$a;Lfiy;I)V renderHandsWithItems
	a (Lfiy;)Lfjt$a; evaluateWhichHandsToRender
	b (Lfiy;)Lfjt$a; selectionUsingItemWhileHoldingBowLike
	a (Lcfz;)Z isChargedCrossbow
	a (Lfiv;FFLbdw;FLcfz;FLeij;Lfjx;I)V renderArmWithItem
	a ()V tick
	a (Lbdw;)V itemUsed
	<clinit> ()V <clinit>
fjt$1 net/minecraft/client/renderer/ItemInHandRenderer$1
	a $SwitchMap$net$minecraft$world$item$UseAnim
	<clinit> ()V <clinit>
fjt$a net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection
	a RENDER_BOTH_HANDS
	b RENDER_MAIN_HAND_ONLY
	c RENDER_OFF_HAND_ONLY
	d renderMainHand
	e renderOffHand
	f $VALUES
	values ()[Lfjt$a; values
	valueOf (Ljava/lang/String;)Lfjt$a; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a (Lbdw;)Lfjt$a; onlyForHand
	a ()[Lfjt$a; $values
	<clinit> ()V <clinit>
fju net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	<init> (Lfwx;)V <init>
	a (Lcfz;)Lfwr; getItemModel
	a (Lcfu;)Lfwr; getItemModel
	b (Lcfu;)I getIndex
	a (Lcfu;Lfwy;)V register
	a ()Lfwx; getModelManager
	b ()V rebuildCache
fjv net/minecraft/client/renderer/LevelRenderer
	c LOGGER
	a CHUNK_SIZE
	d HALF_CHUNK_SIZE
	e SKY_DISC_RADIUS
	f MINIMUM_ADVANCED_CULLING_DISTANCE
	g CEILED_SECTION_DIAGONAL
	h MIN_FOG_DISTANCE
	i RAIN_RADIUS
	j RAIN_DIAMETER
	k TRANSPARENT_SORT_COUNT
	l HALF_A_SECOND_IN_MILLIS
	m MOON_LOCATION
	n SUN_LOCATION
	o CLOUDS_LOCATION
	p END_SKY_LOCATION
	q FORCEFIELD_LOCATION
	r RAIN_LOCATION
	s SNOW_LOCATION
	b DIRECTIONS
	t minecraft
	u entityRenderDispatcher
	v blockEntityRenderDispatcher
	w renderBuffers
	x level
	y recentlyCompiledChunks
	z renderChunkStorage
	A renderChunksInFrustum
	B globalBlockEntities
	C lastFullRenderChunkUpdate
	D viewArea
	E starBuffer
	F skyBuffer
	G darkBuffer
	H generateClouds
	I cloudBuffer
	J frameTimes
	K ticks
	L destroyingBlocks
	M destructionProgress
	N playingRecords
	O entityTarget
	P entityEffect
	Q translucentTarget
	R itemEntityTarget
	S particlesTarget
	T weatherTarget
	U cloudsTarget
	V transparencyChain
	W lastCameraX
	X lastCameraY
	Y lastCameraZ
	Z lastCameraChunkX
	aa lastCameraChunkY
	ab lastCameraChunkZ
	ac prevCamX
	ad prevCamY
	ae prevCamZ
	af prevCamRotX
	ag prevCamRotY
	ah prevCloudX
	ai prevCloudY
	aj prevCloudZ
	ak prevCloudColor
	al prevCloudsType
	am chunkRenderDispatcher
	an lastViewDistance
	ao renderedEntities
	ap culledEntities
	aq cullingFrustum
	ar captureFrustum
	as capturedFrustum
	at frustumPoints
	au frustumPos
	av xTransparentOld
	aw yTransparentOld
	ax zTransparentOld
	ay needsFullRenderChunkUpdate
	az nextFullUpdateMillis
	aA needsFrustumUpdate
	aB rainSoundTime
	aC rainSizeX
	aD rainSizeZ
	<init> (Lenn;Lfow;Lflt;Lfkd;)V <init>
	a (Lfjw;FDDD)V renderSnowAndRain
	a (Lemz;)V tickRain
	close ()V close
	a (Lakx;)V onResourceManagerReload
	a ()V initOutline
	y ()V initTransparency
	z ()V deinitTransparency
	b ()V doEntityOutline
	d ()Z shouldShowEntityOutlines
	A ()V createDarkSky
	B ()V createLightSky
	a (Leie;F)Leie$b; buildSkyDisc
	C ()V createStars
	a (Leie;)Leie$b; drawStars
	a (Lfew;)V setLevel
	e ()V graphicsChanged
	f ()V allChanged
	a (II)V resize
	g ()Ljava/lang/String; getChunkStatistics
	h ()Lfmp; getChunkRenderDispatcher
	i ()D getTotalChunks
	j ()D getLastViewDistance
	k ()I countRenderedChunks
	l ()Ljava/lang/String; getEntityStatistics
	a (Lemz;Lfmw;ZZ)V setupRender
	a (Lfmw;)V applyFrustum
	a (Lemz;Ljava/util/Queue;)V initializeQueueForFullUpdate
	a (Lfmp$c;)V addRecentlyCompiledChunk
	a (Ljava/util/LinkedHashSet;Lfjv$c;Leei;Ljava/util/Queue;Z)V updateRenderChunks
	a (Lgu;Lfmp$c;Lha;)Lfmp$c; getRelativeFrom
	a (Lgu;Lfmp$c;)Z closeToBorder
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLfmw;)V captureFrustum
	a (Leij;Leei;Lorg/joml/Matrix4f;)V prepareCullFrustum
	a (Leij;FJZLemz;Lfjq;Lfjw;Lorg/joml/Matrix4f;)V renderLevel
	a (Leij;)V checkPoseStack
	a (Lbfj;DDDFLeij;Lfjx;)V renderEntity
	a (Lfkf;Leij;DDDLorg/joml/Matrix4f;)V renderChunkLayer
	a (Leij;Lfjx;Lemz;)V renderDebug
	a (Lein;Lorg/joml/Matrix4f;I)V addFrustumVertex
	a (Lein;Lorg/joml/Matrix4f;IIIIIII)V addFrustumQuad
	m ()V captureFrustum
	n ()V killFrustum
	o ()V tick
	a (Laho;)V removeProgress
	b (Leij;)V renderEndSky
	a (Leij;Lorg/joml/Matrix4f;FLemz;ZLjava/lang/Runnable;)V renderSky
	b (Lemz;)Z doesMobEffectBlockSky
	a (Leij;Lorg/joml/Matrix4f;FDDD)V renderClouds
	a (Leie;DDDLeei;)Leie$b; buildClouds
	c (Lemz;)V compileChunks
	d (Lemz;)V renderWorldBorder
	a (Leij;Lein;Lbfj;DDDLgu;Ldcb;)V renderHitOutline
	a (F)Leei; mixColor
	a (FFFF)Leei; shiftHue
	a (Leij;Lein;Lefb;DDDFFFFZ)V renderVoxelShape
	a (Leij;Lein;Lefb;DDDFFFF)V renderShape
	a (Lein;DDDDDDFFFF)V renderLineBox
	a (Leij;Lein;Leed;FFFF)V renderLineBox
	a (Leij;Lein;DDDDDDFFFF)V renderLineBox
	a (Leij;Lein;DDDDDDFFFFFFF)V renderLineBox
	b (Leij;Lein;DDDDDDFFFF)V addChainedFilledBoxVertices
	a (Leij;Lein;FFFFFFFFFF)V addChainedFilledBoxVertices
	a (Lcls;Lgu;Ldcb;Ldcb;I)V blockChanged
	a (Lgu;Z)V setBlockDirty
	a (IIIIII)V setBlocksDirty
	a (Lgu;Ldcb;Ldcb;)V setBlockDirty
	a (III)V setSectionDirtyWithNeighbors
	b (III)V setSectionDirty
	a (IIIZ)V setSectionDirty
	a (Lamg;Lgu;)V playStreamingMusic
	a (Lcmm;Lgu;Z)V notifyNearbyEntities
	a (Lit;ZDDDDDD)V addParticle
	a (Lit;ZZDDDDDD)V addParticle
	a (Lit;DDDDDD)V addParticle
	b (Lit;ZDDDDDD)Lfhm; addParticleInternal
	b (Lit;ZZDDDDDD)Lfhm; addParticleInternal
	a (Z)Lens; calculateParticleLevel
	p ()V clear
	a (ILgu;I)V globalLevelEvent
	b (ILgu;I)V levelEvent
	c (ILgu;I)V destroyBlockProgress
	q ()Z hasRenderedAllChunks
	r ()V needsUpdate
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lclp;Lgu;)I getLightColor
	a (Lclp;Ldcb;Lgu;)I getLightColor
	a (Lgu;)Z isChunkCompiled
	s ()Legv; entityTarget
	t ()Legv; getTranslucentTarget
	u ()Legv; getItemEntityTarget
	v ()Legv; getParticlesTarget
	w ()Legv; getWeatherTarget
	x ()Legv; getCloudsTarget
	a (J)Ljava/util/SortedSet; lambda$destroyBlockProgress$10
	a (Lapf;)Leei; lambda$levelEvent$9
	a (DDD)Ljava/lang/String; lambda$addParticle$8
	a (Lein;Leij$a;DDDFFFFDDDDDD)V lambda$renderShape$7
	a (Lfkf;)Ljava/lang/String; lambda$renderChunkLayer$6
	a (Lfjx$a;Lein;Lfkf;)Lein; lambda$renderLevel$5
	a (Lemz;FZF)V lambda$renderLevel$4
	a (Lgu;Lfjv$a;)D lambda$initializeQueueForFullUpdate$3
	a (Lemz;Leei;Z)V lambda$setupRender$2
	b (J)J lambda$setupRender$1
	a (Lajl;)Ltj; lambda$initTransparency$0
	<clinit> ()V <clinit>
fjv$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	a chunk
	b sourceDirections
	c directions
	d step
	<init> (Lfmp$c;Lha;I)V <init>
	a (BLha;)V setDirections
	a (Lha;)Z hasDirection
	b (Lha;)V addSourceDirection
	a (I)Z hasSourceDirection
	a ()Z hasSourceDirections
	a (III)Z isAxisAlignedWith
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
fjv$b net/minecraft/client/renderer/LevelRenderer$RenderChunkStorage
	a renderInfoMap
	b renderChunks
	<init> (I)V <init>
fjv$c net/minecraft/client/renderer/LevelRenderer$RenderInfoMap
	a infos
	<init> (I)V <init>
	a (Lfmp$c;Lfjv$a;)V put
	a (Lfmp$c;)Lfjv$a; get
fjv$d net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
fjw net/minecraft/client/renderer/LightTexture
	a FULL_BRIGHT
	b FULL_SKY
	c FULL_BLOCK
	d lightTexture
	e lightPixels
	f lightTextureLocation
	g updateLightTexture
	h blockLightRedFlicker
	i renderer
	j minecraft
	<init> (Lfjq;Lenn;)V <init>
	close ()V close
	a ()V tick
	b ()V turnOffLightLayer
	c ()V turnOnLightLayer
	b (F)F getDarknessGamma
	a (Lbfz;FF)F calculateDarknessScale
	a (F)V updateLightTexture
	a (Lorg/joml/Vector3f;)V clampColor
	c (F)F notGamma
	a (Ldfk;I)F getBrightness
	a (II)I pack
	a (I)I block
	b (I)I sky
fjx net/minecraft/client/renderer/MultiBufferSource
	a (Leie;)Lfjx$a; immediate
	a (Ljava/util/Map;Leie;)Lfjx$a; immediateWithBuffers
	getBuffer (Lfkf;)Lein; getBuffer
fjx$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	<init> (Leie;Ljava/util/Map;)V <init>
	getBuffer (Lfkf;)Lein; getBuffer
	b (Lfkf;)Leie; getBuilderRaw
	a ()V endLastBatch
	b ()V endBatch
	a (Lfkf;)V endBatch
	c (Lfkf;)V lambda$endBatch$0
fjy net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	<init> (Lfjx$a;)V <init>
	getBuffer (Lfkf;)Lein; getBuffer
	a (IIII)V setColor
	a ()V endOutlineBatch
fjy$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	f delegate
	g x
	h y
	i z
	j u
	k v
	<init> (Lein;IIII)V <init>
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
	a (FFFFFFFFFIIFFF)V vertex
	e ()V endVertex
fjz net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c spin
	d bob
	<init> (Lfjl;)V <init>
	a (FF)V render
	b (FF)F wrap
fka net/minecraft/client/renderer/PostChain
	a MAIN_RENDER_TARGET
	b screenTarget
	c resourceManager
	d name
	e passes
	f customRenderTargets
	g fullSizedTargets
	h shaderOrthoMatrix
	i screenWidth
	j screenHeight
	k time
	l lastStamp
	<init> (Lfuw;Lakx;Legv;Lacq;)V <init>
	a (Lfuw;Lacq;)V load
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Lfuw;Lcom/google/gson/JsonElement;)V parsePassNode
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	a (Ljava/lang/String;)Legv; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	close ()V close
	a (Ljava/lang/String;Legv;Legv;)Lfkb; addPass
	b ()V updateOrthoMatrix
	a (II)V resize
	a (F)V process
	a ()Ljava/lang/String; getName
	b (Ljava/lang/String;)Legv; getRenderTarget
	c (Ljava/lang/String;)Lact; lambda$parsePassNode$0
fkb net/minecraft/client/renderer/PostPass
	c effect
	a inTarget
	b outTarget
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	<init> (Lakx;Ljava/lang/String;Legv;Legv;)V <init>
	close ()V close
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V addAuxAsset
	a (Lorg/joml/Matrix4f;)V setOrthoMatrix
	a (F)V process
	b ()Lfjn; getEffect
fkc net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	<init> (IIII)V <init>
	a (Lfkc;)Lfkc; intersect
	a ()I getX
	b ()I getY
	a (I)V setX
	b (I)V setY
	c ()I getWidth
	d ()I getHeight
	c (I)V setWidth
	d (I)V setHeight
	a (II)V setPosition
	b (II)Z contains
fkd net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	<init> ()V <init>
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lfkf;)V put
	a ()Lfjk; fixedBufferPack
	b ()Lfjx$a; bufferSource
	c ()Lfjx$a; crumblingBufferSource
	d ()Lfjy; outlineBufferSource
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;)V lambda$new$1
	b (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lfkf;)V lambda$new$0
fke net/minecraft/client/renderer/RenderStateShard
	aS VIEW_SCALE_Z_EPSILON
	a MAX_ENCHANTMENT_GLINT_SPEED_MILLIS
	b name
	aT setupState
	aU clearState
	c NO_TRANSPARENCY
	d ADDITIVE_TRANSPARENCY
	e LIGHTNING_TRANSPARENCY
	f GLINT_TRANSPARENCY
	g CRUMBLING_TRANSPARENCY
	h TRANSLUCENT_TRANSPARENCY
	i NO_SHADER
	j POSITION_COLOR_LIGHTMAP_SHADER
	k POSITION_SHADER
	l POSITION_COLOR_TEX_SHADER
	m POSITION_TEX_SHADER
	n POSITION_COLOR_TEX_LIGHTMAP_SHADER
	o POSITION_COLOR_SHADER
	p RENDERTYPE_SOLID_SHADER
	q RENDERTYPE_CUTOUT_MIPPED_SHADER
	r RENDERTYPE_CUTOUT_SHADER
	s RENDERTYPE_TRANSLUCENT_SHADER
	t RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER
	u RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER
	v RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER
	w RENDERTYPE_ENTITY_SOLID_SHADER
	x RENDERTYPE_ENTITY_CUTOUT_SHADER
	y RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER
	z RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER
	A RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER
	B RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER
	C RENDERTYPE_ENTITY_TRANSLUCENT_SHADER
	D RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER
	E RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER
	F RENDERTYPE_BEACON_BEAM_SHADER
	G RENDERTYPE_ENTITY_DECAL_SHADER
	H RENDERTYPE_ENTITY_NO_OUTLINE_SHADER
	I RENDERTYPE_ENTITY_SHADOW_SHADER
	J RENDERTYPE_ENTITY_ALPHA_SHADER
	K RENDERTYPE_EYES_SHADER
	L RENDERTYPE_ENERGY_SWIRL_SHADER
	M RENDERTYPE_LEASH_SHADER
	N RENDERTYPE_WATER_MASK_SHADER
	O RENDERTYPE_OUTLINE_SHADER
	P RENDERTYPE_ARMOR_GLINT_SHADER
	Q RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER
	R RENDERTYPE_GLINT_TRANSLUCENT_SHADER
	S RENDERTYPE_GLINT_SHADER
	T RENDERTYPE_GLINT_DIRECT_SHADER
	U RENDERTYPE_ENTITY_GLINT_SHADER
	V RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER
	W RENDERTYPE_CRUMBLING_SHADER
	X RENDERTYPE_TEXT_SHADER
	Y RENDERTYPE_TEXT_BACKGROUND_SHADER
	Z RENDERTYPE_TEXT_INTENSITY_SHADER
	aa RENDERTYPE_TEXT_SEE_THROUGH_SHADER
	ab RENDERTYPE_TEXT_BACKGROUND_SEE_THROUGH_SHADER
	ac RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER
	ad RENDERTYPE_LIGHTNING_SHADER
	ae RENDERTYPE_TRIPWIRE_SHADER
	af RENDERTYPE_END_PORTAL_SHADER
	ag RENDERTYPE_END_GATEWAY_SHADER
	ah RENDERTYPE_LINES_SHADER
	ai RENDERTYPE_GUI_SHADER
	aj RENDERTYPE_GUI_OVERLAY_SHADER
	ak RENDERTYPE_GUI_TEXT_HIGHLIGHT_SHADER
	al RENDERTYPE_GUI_GHOST_RECIPE_OVERLAY_SHADER
	am BLOCK_SHEET_MIPPED
	an BLOCK_SHEET
	ao NO_TEXTURE
	ap DEFAULT_TEXTURING
	aq GLINT_TEXTURING
	ar ENTITY_GLINT_TEXTURING
	as LIGHTMAP
	at NO_LIGHTMAP
	au OVERLAY
	av NO_OVERLAY
	aw CULL
	ax NO_CULL
	ay NO_DEPTH_TEST
	az EQUAL_DEPTH_TEST
	aA LEQUAL_DEPTH_TEST
	aB GREATER_DEPTH_TEST
	aC COLOR_DEPTH_WRITE
	aD COLOR_WRITE
	aE DEPTH_WRITE
	aF NO_LAYERING
	aG POLYGON_OFFSET_LAYERING
	aH VIEW_OFFSET_Z_LAYERING
	aI MAIN_TARGET
	aJ OUTLINE_TARGET
	aK TRANSLUCENT_TARGET
	aL PARTICLES_TARGET
	aM WEATHER_TARGET
	aN CLOUDS_TARGET
	aO ITEM_ENTITY_TARGET
	aP DEFAULT_LINE
	aQ NO_COLOR_LOGIC
	aR OR_REVERSE_COLOR_LOGIC
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a ()V setupRenderState
	b ()V clearRenderState
	toString ()Ljava/lang/String; toString
	a (F)V setupGlintTexturing
	c ()V lambda$static$41
	d ()V lambda$static$40
	e ()V lambda$static$39
	f ()V lambda$static$38
	g ()V lambda$static$37
	h ()V lambda$static$36
	i ()V lambda$static$35
	j ()V lambda$static$34
	k ()V lambda$static$33
	l ()V lambda$static$32
	m ()V lambda$static$31
	n ()V lambda$static$30
	o ()V lambda$static$29
	p ()V lambda$static$28
	q ()V lambda$static$27
	r ()V lambda$static$26
	s ()V lambda$static$25
	t ()V lambda$static$24
	u ()V lambda$static$23
	v ()V lambda$static$22
	w ()V lambda$static$21
	x ()V lambda$static$20
	y ()V lambda$static$19
	z ()V lambda$static$18
	A ()V lambda$static$17
	B ()V lambda$static$16
	C ()V lambda$static$15
	D ()V lambda$static$14
	E ()V lambda$static$13
	F ()V lambda$static$12
	G ()V lambda$static$11
	H ()V lambda$static$10
	I ()V lambda$static$9
	J ()V lambda$static$8
	K ()V lambda$static$7
	L ()V lambda$static$6
	M ()V lambda$static$5
	N ()V lambda$static$4
	O ()V lambda$static$3
	P ()V lambda$static$2
	Q ()V lambda$static$1
	R ()V lambda$static$0
	<clinit> ()V <clinit>
fke$a net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	aS enabled
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;Z)V <init>
	toString ()Ljava/lang/String; toString
fke$b net/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
fke$c net/minecraft/client/renderer/RenderStateShard$CullStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
fke$d net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	aS functionName
	<init> (Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	a (I)V lambda$new$1
	b (I)V lambda$new$0
fke$e net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard
	<init> (Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	<init> ()V <init>
	c ()Ljava/util/Optional; cutoutTexture
	d ()V lambda$new$1
	e ()V lambda$new$0
fke$f net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
fke$g net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
fke$h net/minecraft/client/renderer/RenderStateShard$LineStateShard
	aS width
	<init> (Ljava/util/OptionalDouble;)V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/util/OptionalDouble;)V lambda$new$1
	b (Ljava/util/OptionalDouble;)V lambda$new$0
fke$i net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard
	aS cutoutTexture
	<init> (Lcom/google/common/collect/ImmutableList;)V <init>
	c ()Ljava/util/Optional; cutoutTexture
	d ()Lfke$i$a; builder
	e ()V lambda$new$1
	a (Lcom/google/common/collect/ImmutableList;)V lambda$new$0
fke$i$a net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder
	a builder
	<init> ()V <init>
	a (Lacq;ZZ)Lfke$i$a; add
	a ()Lfke$i; build
fke$j net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
	<init> (FF)V <init>
	c ()V lambda$new$1
	a (FF)V lambda$new$0
fke$k net/minecraft/client/renderer/RenderStateShard$OutputStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
fke$l net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
	<init> (Z)V <init>
	a (Z)V lambda$new$1
	b (Z)V lambda$new$0
fke$m net/minecraft/client/renderer/RenderStateShard$ShaderStateShard
	aS shader
	<init> (Ljava/util/function/Supplier;)V <init>
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
	c ()V lambda$new$4
	d ()V lambda$new$3
	e ()Lfki; lambda$new$2
	f ()V lambda$new$1
	a (Ljava/util/function/Supplier;)V lambda$new$0
fke$n net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	aS texture
	aT blur
	aU mipmap
	<init> (Lacq;ZZ)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/util/Optional; cutoutTexture
	d ()V lambda$new$1
	a (Lacq;ZZ)V lambda$new$0
fke$o net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
fke$p net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
	<init> (Ljava/lang/String;Ljava/lang/Runnable;Ljava/lang/Runnable;)V <init>
fke$q net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	aS writeColor
	aT writeDepth
	<init> (ZZ)V <init>
	toString ()Ljava/lang/String; toString
	a (ZZ)V lambda$new$1
	b (ZZ)V lambda$new$0
fkf net/minecraft/client/renderer/RenderType
	aY BYTES_IN_INT
	aZ MEGABYTE
	aS BIG_BUFFER_SIZE
	aT MEDIUM_BUFFER_SIZE
	aU SMALL_BUFFER_SIZE
	aV TRANSIENT_BUFFER_SIZE
	ba SOLID
	bb CUTOUT_MIPPED
	bc CUTOUT
	bd TRANSLUCENT
	be TRANSLUCENT_MOVING_BLOCK
	bf TRANSLUCENT_NO_CRUMBLING
	bg ARMOR_CUTOUT_NO_CULL
	bh ENTITY_SOLID
	bi ENTITY_CUTOUT
	bj ENTITY_CUTOUT_NO_CULL
	bk ENTITY_CUTOUT_NO_CULL_Z_OFFSET
	bl ITEM_ENTITY_TRANSLUCENT_CULL
	bm ENTITY_TRANSLUCENT_CULL
	bn ENTITY_TRANSLUCENT
	bo ENTITY_TRANSLUCENT_EMISSIVE
	bp ENTITY_SMOOTH_CUTOUT
	bq BEACON_BEAM
	br ENTITY_DECAL
	bs ENTITY_NO_OUTLINE
	bt ENTITY_SHADOW
	bu DRAGON_EXPLOSION_ALPHA
	bv EYES
	bw LEASH
	bx WATER_MASK
	by ARMOR_GLINT
	bz ARMOR_ENTITY_GLINT
	bA GLINT_TRANSLUCENT
	bB GLINT
	bC GLINT_DIRECT
	bD ENTITY_GLINT
	bE ENTITY_GLINT_DIRECT
	bF CRUMBLING
	bG TEXT
	bH TEXT_BACKGROUND
	bI TEXT_INTENSITY
	bJ TEXT_POLYGON_OFFSET
	bK TEXT_INTENSITY_POLYGON_OFFSET
	bL TEXT_SEE_THROUGH
	bM TEXT_BACKGROUND_SEE_THROUGH
	bN TEXT_INTENSITY_SEE_THROUGH
	bO LIGHTNING
	bP TRIPWIRE
	bQ END_PORTAL
	bR END_GATEWAY
	aW LINES
	aX LINE_STRIP
	bS DEBUG_LINE_STRIP
	bT DEBUG_FILLED_BOX
	bU DEBUG_QUADS
	bV DEBUG_SECTION_QUADS
	bW GUI
	bX GUI_OVERLAY
	bY GUI_TEXT_HIGHLIGHT
	bZ GUI_GHOST_RECIPE_OVERLAY
	ca CHUNK_BUFFER_LAYERS
	cb format
	cc mode
	cd bufferSize
	ce affectsCrumbling
	cf sortOnUpload
	cg asOptional
	c ()Lfkf; solid
	d ()Lfkf; cutoutMipped
	e ()Lfkf; cutout
	a (Lfke$m;)Lfkf$b; translucentState
	f ()Lfkf; translucent
	P ()Lfkf$b; translucentMovingBlockState
	g ()Lfkf; translucentMovingBlock
	h ()Lfkf; translucentNoCrumbling
	a (Lacq;)Lfkf; armorCutoutNoCull
	b (Lacq;)Lfkf; entitySolid
	c (Lacq;)Lfkf; entityCutout
	a (Lacq;Z)Lfkf; entityCutoutNoCull
	d (Lacq;)Lfkf; entityCutoutNoCull
	b (Lacq;Z)Lfkf; entityCutoutNoCullZOffset
	e (Lacq;)Lfkf; entityCutoutNoCullZOffset
	f (Lacq;)Lfkf; itemEntityTranslucentCull
	g (Lacq;)Lfkf; entityTranslucentCull
	c (Lacq;Z)Lfkf; entityTranslucent
	h (Lacq;)Lfkf; entityTranslucent
	d (Lacq;Z)Lfkf; entityTranslucentEmissive
	i (Lacq;)Lfkf; entityTranslucentEmissive
	j (Lacq;)Lfkf; entitySmoothCutout
	e (Lacq;Z)Lfkf; beaconBeam
	k (Lacq;)Lfkf; entityDecal
	l (Lacq;)Lfkf; entityNoOutline
	m (Lacq;)Lfkf; entityShadow
	n (Lacq;)Lfkf; dragonExplosionAlpha
	o (Lacq;)Lfkf; eyes
	a (Lacq;FF)Lfkf; energySwirl
	i ()Lfkf; leash
	j ()Lfkf; waterMask
	p (Lacq;)Lfkf; outline
	k ()Lfkf; armorGlint
	l ()Lfkf; armorEntityGlint
	m ()Lfkf; glintTranslucent
	n ()Lfkf; glint
	o ()Lfkf; glintDirect
	p ()Lfkf; entityGlint
	q ()Lfkf; entityGlintDirect
	q (Lacq;)Lfkf; crumbling
	r (Lacq;)Lfkf; text
	r ()Lfkf; textBackground
	s (Lacq;)Lfkf; textIntensity
	t (Lacq;)Lfkf; textPolygonOffset
	u (Lacq;)Lfkf; textIntensityPolygonOffset
	v (Lacq;)Lfkf; textSeeThrough
	s ()Lfkf; textBackgroundSeeThrough
	w (Lacq;)Lfkf; textIntensitySeeThrough
	t ()Lfkf; lightning
	Q ()Lfkf$b; tripwireState
	u ()Lfkf; tripwire
	v ()Lfkf; endPortal
	w ()Lfkf; endGateway
	x ()Lfkf; lines
	y ()Lfkf; lineStrip
	a (D)Lfkf; debugLineStrip
	z ()Lfkf; debugFilledBox
	A ()Lfkf; debugQuads
	B ()Lfkf; debugSectionQuads
	C ()Lfkf; gui
	D ()Lfkf; guiOverlay
	E ()Lfkf; guiTextHighlight
	F ()Lfkf; guiGhostRecipeOverlay
	<init> (Ljava/lang/String;Leio;Leio$b;IZZLjava/lang/Runnable;Ljava/lang/Runnable;)V <init>
	a (Ljava/lang/String;Leio;Leio$b;ILfkf$b;)Lfkf$a; create
	a (Ljava/lang/String;Leio;Leio$b;IZZLfkf$b;)Lfkf$a; create
	a (Leie;Leir;)V end
	toString ()Ljava/lang/String; toString
	G ()Ljava/util/List; chunkBufferLayers
	H ()I bufferSize
	I ()Leio; format
	J ()Leio$b; mode
	K ()Ljava/util/Optional; outline
	L ()Z isOutline
	M ()Z affectsCrumbling
	N ()Z canConsolidateConsecutiveGeometry
	O ()Ljava/util/Optional; asOptional
	a (Ljava/lang/Double;)Lfkf$a; lambda$static$23
	x (Lacq;)Lfkf; lambda$static$22
	y (Lacq;)Lfkf; lambda$static$21
	z (Lacq;)Lfkf; lambda$static$20
	A (Lacq;)Lfkf; lambda$static$19
	B (Lacq;)Lfkf; lambda$static$18
	C (Lacq;)Lfkf; lambda$static$17
	D (Lacq;)Lfkf; lambda$static$16
	E (Lacq;)Lfkf; lambda$static$15
	F (Lacq;)Lfkf; lambda$static$14
	G (Lacq;)Lfkf; lambda$static$13
	H (Lacq;)Lfkf; lambda$static$12
	I (Lacq;)Lfkf; lambda$static$11
	a (Lacq;Ljava/lang/Boolean;)Lfkf; lambda$static$10
	J (Lacq;)Lfkf; lambda$static$9
	b (Lacq;Ljava/lang/Boolean;)Lfkf; lambda$static$8
	c (Lacq;Ljava/lang/Boolean;)Lfkf; lambda$static$7
	K (Lacq;)Lfkf; lambda$static$6
	L (Lacq;)Lfkf; lambda$static$5
	d (Lacq;Ljava/lang/Boolean;)Lfkf; lambda$static$4
	e (Lacq;Ljava/lang/Boolean;)Lfkf; lambda$static$3
	M (Lacq;)Lfkf; lambda$static$2
	N (Lacq;)Lfkf; lambda$static$1
	O (Lacq;)Lfkf; lambda$static$0
	<clinit> ()V <clinit>
fkf$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	aY OUTLINE
	aZ state
	ba outline
	bb isOutline
	<init> (Ljava/lang/String;Leio;Leio$b;IZZLfkf$b;)V <init>
	K ()Ljava/util/Optional; outline
	L ()Z isOutline
	P ()Lfkf$b; state
	toString ()Ljava/lang/String; toString
	a (Lfkf$b;Lacq;)Lfkf; lambda$new$3
	a (Lfkf$b;)V lambda$new$2
	b (Lfkf$b;)V lambda$new$1
	a (Lacq;Lfke$c;)Lfkf; lambda$static$0
	<clinit> ()V <clinit>
fkf$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	m colorLogicState
	n outlineProperty
	o states
	<init> (Lfke$e;Lfke$m;Lfke$p;Lfke$d;Lfke$c;Lfke$g;Lfke$l;Lfke$f;Lfke$k;Lfke$o;Lfke$q;Lfke$h;Lfke$b;Lfkf$c;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Lfkf$b$a; builder
fkf$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	m colorLogicState
	<init> ()V <init>
	a (Lfke$e;)Lfkf$b$a; setTextureState
	a (Lfke$m;)Lfkf$b$a; setShaderState
	a (Lfke$p;)Lfkf$b$a; setTransparencyState
	a (Lfke$d;)Lfkf$b$a; setDepthTestState
	a (Lfke$c;)Lfkf$b$a; setCullState
	a (Lfke$g;)Lfkf$b$a; setLightmapState
	a (Lfke$l;)Lfkf$b$a; setOverlayState
	a (Lfke$f;)Lfkf$b$a; setLayeringState
	a (Lfke$k;)Lfkf$b$a; setOutputState
	a (Lfke$o;)Lfkf$b$a; setTexturingState
	a (Lfke$q;)Lfkf$b$a; setWriteMaskState
	a (Lfke$h;)Lfkf$b$a; setLineState
	a (Lfke$b;)Lfkf$b$a; setColorLogicState
	a (Z)Lfkf$b; createCompositeState
	a (Lfkf$c;)Lfkf$b; createCompositeState
fkf$c net/minecraft/client/renderer/RenderType$OutlineProperty
	a NONE
	b IS_OUTLINE
	c AFFECTS_OUTLINE
	d name
	e $VALUES
	values ()[Lfkf$c; values
	valueOf (Ljava/lang/String;)Lfkf$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a ()[Lfkf$c; $values
	<clinit> ()V <clinit>
fkg net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	<init> (I)V <init>
	a (J)J registerValueAndGetMean
fkh net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	<init> ()V <init>
	a (Lenn;Leij;)V renderScreenEffect
	a (Lbyo;)Ldcb; getViewBlockingState
	a (Lfuv;Leij;)V renderTex
	b (Lenn;Leij;)V renderWater
	c (Lenn;Leij;)V renderFire
	<clinit> ()V <clinit>
fki net/minecraft/client/renderer/ShaderInstance
	a SHADER_PATH
	r SHADER_CORE_PATH
	s SHADER_INCLUDE_PATH
	t LOGGER
	u DUMMY_UNIFORM
	v ALWAYS_REAPPLY
	w lastAppliedShader
	x lastProgramId
	y samplerMap
	z samplerNames
	A samplerLocations
	B uniforms
	C uniformLocations
	D uniformMap
	E programId
	F name
	G dirty
	H blend
	I attributes
	J attributeNames
	K vertexProgram
	L fragmentProgram
	M vertexFormat
	b MODEL_VIEW_MATRIX
	c PROJECTION_MATRIX
	d INVERSE_VIEW_ROTATION_MATRIX
	e TEXTURE_MATRIX
	f SCREEN_SIZE
	g COLOR_MODULATOR
	h LIGHT0_DIRECTION
	i LIGHT1_DIRECTION
	j GLINT_ALPHA
	k FOG_START
	l FOG_END
	m FOG_COLOR
	n FOG_SHAPE
	o LINE_WIDTH
	p GAME_TIME
	q CHUNK_OFFSET
	<init> (Lala;Ljava/lang/String;Leio;)V <init>
	a (Lala;Lehx$a;Ljava/lang/String;)Lehx; getOrCreate
	a (Lcom/google/gson/JsonObject;)Leht; parseBlendNode
	close ()V close
	f ()V clear
	g ()V apply
	b ()V markDirty
	a (Ljava/lang/String;)Leia; getUniform
	b (Ljava/lang/String;)Lehs; safeGetUniform
	j ()V updateLocations
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Ljava/lang/String;Ljava/lang/Object;)V setSampler
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	c ()Lehx; getVertexProgram
	d ()Lehx; getFragmentProgram
	e ()V attachToProgram
	h ()Leio; getVertexFormat
	i ()Ljava/lang/String; getName
	a ()I getId
	<clinit> ()V <clinit>
fki$1 net/minecraft/client/renderer/ShaderInstance$1
	c importedPaths
	a val$relativePath
	b val$resourceProvider
	<init> (Ljava/lang/String;Lala;)V <init>
	a (ZLjava/lang/String;)Ljava/lang/String; applyImport
fkj net/minecraft/client/renderer/Sheets
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	g ARMOR_TRIMS_SHEET
	h DECORATED_POT_SHEET
	A SHULKER_BOX_SHEET_TYPE
	B BED_SHEET_TYPE
	C BANNER_SHEET_TYPE
	D SHIELD_SHEET_TYPE
	E SIGN_SHEET_TYPE
	F CHEST_SHEET_TYPE
	G ARMOR_TRIMS_SHEET_TYPE
	H SOLID_BLOCK_SHEET
	I CUTOUT_BLOCK_SHEET
	J TRANSLUCENT_ITEM_CULL_BLOCK_SHEET
	K TRANSLUCENT_CULL_BLOCK_SHEET
	i DEFAULT_SHULKER_TEXTURE_LOCATION
	j SHULKER_TEXTURE_LOCATION
	k SIGN_MATERIALS
	l HANGING_SIGN_MATERIALS
	m BANNER_MATERIALS
	n SHIELD_MATERIALS
	o DECORATED_POT_MATERIALS
	p BED_TEXTURES
	q CHEST_TRAP_LOCATION
	r CHEST_TRAP_LOCATION_LEFT
	s CHEST_TRAP_LOCATION_RIGHT
	t CHEST_XMAS_LOCATION
	u CHEST_XMAS_LOCATION_LEFT
	v CHEST_XMAS_LOCATION_RIGHT
	w CHEST_LOCATION
	x CHEST_LOCATION_LEFT
	y CHEST_LOCATION_RIGHT
	z ENDER_CHEST_LOCATION
	<init> ()V <init>
	a ()Lfkf; bannerSheet
	b ()Lfkf; shieldSheet
	c ()Lfkf; bedSheet
	d ()Lfkf; shulkerBoxSheet
	e ()Lfkf; signSheet
	f ()Lfkf; hangingSignSheet
	g ()Lfkf; chestSheet
	h ()Lfkf; armorTrimsSheet
	i ()Lfkf; solidBlockSheet
	j ()Lfkf; cutoutBlockSheet
	k ()Lfkf; translucentItemSheet
	l ()Lfkf; translucentCullBlockSheet
	a (Ljava/util/function/Consumer;)V getAllMaterials
	c (Lddo;)Lfwu; createSignMaterial
	d (Lddo;)Lfwu; createHangingSignMaterial
	a (Lddo;)Lfwu; getSignMaterial
	b (Lddo;)Lfwu; getHangingSignMaterial
	d (Lacp;)Lfwu; createBannerMaterial
	a (Lacp;)Lfwu; getBannerMaterial
	e (Lacp;)Lfwu; createShieldMaterial
	b (Lacp;)Lfwu; getShieldMaterial
	a (Ljava/lang/String;)Lfwu; chestMaterial
	f (Lacp;)Lfwu; createDecoratedPotMaterial
	c (Lacp;)Lfwu; getDecoratedPotMaterial
	a (Lczn;Ldct;Z)Lfwu; chooseMaterial
	a (Ldct;Lfwu;Lfwu;Lfwu;)Lfwu; chooseMaterial
	a (I)[Lfwu; lambda$static$2
	a (Lcen;)Lfwu; lambda$static$1
	b (Ljava/lang/String;)Lfwu; lambda$static$0
	<clinit> ()V <clinit>
fkj$1 net/minecraft/client/renderer/Sheets$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
	<clinit> ()V <clinit>
fkk net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	<init> (Lein;Lfuv;)V <init>
	a (DDD)Lein; vertex
	a (IIII)Lein; color
	a (FF)Lein; uv
	a (II)Lein; overlayCoords
	b (II)Lein; uv2
	a (FFF)Lein; normal
	e ()V endVertex
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
	a (FFFFFFFFFIIFFF)V vertex
fkl net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	<init> (Lfmp;Lcmm;ILfjv;)V <init>
	a (Lfmp;)V createChunks
	a ()V releaseAllBuffers
	a (III)I getChunkIndex
	a (I)V setViewDistance
	a (DD)V repositionCamera
	a (IIIZ)V setDirty
	a (Lgu;)Lfmp$c; getRenderChunkAt
fkm net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	<init> (Lenn;)V <init>
	a (Leha;Ljava/lang/String;Ljava/lang/String;)Lehn; newWindow
	close ()V close
fkn net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	<init> (Lfwx;)V <init>
	a (Ldcb;)Lfuv; getParticleIcon
	b (Ldcb;)Lfwr; getBlockModel
	a ()Lfwx; getModelManager
	a (Ljava/util/Map;)V replaceCache
	c (Ldcb;)Lfwy; stateToModelLocation
	a (Lacq;Ldcb;)Lfwy; stateToModelLocation
	b (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	a (Ldde;Ljava/lang/Comparable;)Ljava/lang/String; getValue
fko net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c blockEntityRenderer
	d liquidBlockRenderer
	e random
	f blockColors
	<init> (Lfkn;Lfjj;Leoo;)V <init>
	a ()Lfkn; getBlockModelShaper
	a (Ldcb;Lgu;Lclp;Leij;Lein;)V renderBreakingTexture
	a (Ldcb;Lgu;Lclp;Leij;Lein;ZLapf;)V renderBatched
	a (Lgu;Lclp;Lein;Ldcb;Ldxe;)V renderLiquid
	b ()Lfkq; getModelRenderer
	a (Ldcb;)Lfwr; getBlockModel
	a (Ldcb;Leij;Lfjx;II)V renderSingleBlock
	a (Lakx;)V onResourceManagerReload
fko$1 net/minecraft/client/renderer/block/BlockRenderDispatcher$1
	a $SwitchMap$net$minecraft$world$level$block$RenderShape
	<clinit> ()V <clinit>
fkp net/minecraft/client/renderer/block/LiquidBlockRenderer
	a MAX_FLUID_HEIGHT
	b lavaIcons
	c waterIcons
	d waterOverlay
	<init> ()V <init>
	a ()V setupSprites
	a (Ldxe;Ldxe;)Z isNeighborSameFluid
	a (Lcls;Lha;FLgu;Ldcb;)Z isFaceOccludedByState
	a (Lcls;Lgu;Lha;FLdcb;)Z isFaceOccludedByNeighbor
	a (Lcls;Lgu;Ldcb;Lha;)Z isFaceOccludedBySelf
	a (Lclp;Lgu;Ldxe;Ldcb;Lha;Ldxe;)Z shouldRenderFace
	a (Lclp;Lgu;Lein;Ldcb;Ldxe;)V tesselate
	a (Lclp;Ldxd;FFFLgu;)F calculateAverageHeight
	a ([FF)V addWeightedHeight
	a (Lclp;Ldxd;Lgu;)F getHeight
	a (Lclp;Ldxd;Lgu;Ldcb;Ldxe;)F getHeight
	a (Lein;DDDFFFFFI)V vertex
	a (Lclp;Lgu;)I getLightColor
fkp$1 net/minecraft/client/renderer/block/LiquidBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
fkq net/minecraft/client/renderer/block/ModelBlockRenderer
	a FACE_CUBIC
	b FACE_PARTIAL
	c DIRECTIONS
	d blockColors
	e CACHE_SIZE
	f CACHE
	<init> (Leoo;)V <init>
	a (Lclp;Lfwr;Ldcb;Lgu;Leij;Lein;ZLapf;JI)V tesselateBlock
	b (Lclp;Lfwr;Ldcb;Lgu;Leij;Lein;ZLapf;JI)V tesselateWithAO
	c (Lclp;Lfwr;Ldcb;Lgu;Leij;Lein;ZLapf;JI)V tesselateWithoutAO
	a (Lclp;Ldcb;Lgu;Leij;Lein;Ljava/util/List;[FLjava/util/BitSet;Lfkq$b;I)V renderModelFaceAO
	a (Lclp;Ldcb;Lgu;Lein;Leij$a;Lfkr;FFFFIIIII)V putQuadData
	a (Lclp;Ldcb;Lgu;[ILha;[FLjava/util/BitSet;)V calculateShape
	a (Lclp;Ldcb;Lgu;IIZLeij;Lein;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Leij$a;Lein;Ldcb;Lfwr;FFFII)V renderModel
	a (Leij$a;Lein;FFFLjava/util/List;II)V renderQuadList
	a ()V enableCaching
	b ()V clearCache
	<clinit> ()V <clinit>
fkq$1 net/minecraft/client/renderer/block/ModelBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
fkq$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	values ()[Lfkq$a; values
	valueOf (Ljava/lang/String;)Lfkq$a; valueOf
	<init> (Ljava/lang/String;I[Lha;FZ[Lfkq$e;[Lfkq$e;[Lfkq$e;[Lfkq$e;)V <init>
	a (Lha;)Lfkq$a; fromFacing
	a ([Lfkq$a;)V lambda$static$0
	a ()[Lfkq$a; $values
	<clinit> ()V <clinit>
fkq$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	a brightness
	b lightmap
	<init> ()V <init>
	a (Lclp;Ldcb;Lgu;Lha;[FLjava/util/BitSet;Z)V calculate
	a (IIII)I blend
	a (IIIIFFFF)I blend
fkq$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	values ()[Lfkq$c; values
	valueOf (Ljava/lang/String;)Lfkq$c; valueOf
	<init> (Ljava/lang/String;IIIII)V <init>
	a (Lha;)Lfkq$c; fromFacing
	a ([Lfkq$c;)V lambda$static$0
	a ()[Lfkq$c; $values
	<clinit> ()V <clinit>
fkq$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	<init> ()V <init>
	a ()V enable
	b ()V disable
	a (Ldcb;Lclp;Lgu;)I getLightColor
	b (Ldcb;Lclp;Lgu;)F getShadeBrightness
	c ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
	d ()Lit/unimi/dsi/fastutil/longs/Long2IntLinkedOpenHashMap; lambda$new$0
fkq$d$1 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$1
	a this$0
	<init> (Lfkq$d;IF)V <init>
	rehash (I)V rehash
fkq$d$2 net/minecraft/client/renderer/block/ModelBlockRenderer$Cache$2
	a this$0
	<init> (Lfkq$d;IF)V <init>
	rehash (I)V rehash
fkq$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	values ()[Lfkq$e; values
	valueOf (Ljava/lang/String;)Lfkq$e; valueOf
	<init> (Ljava/lang/String;ILha;Z)V <init>
	a ()[Lfkq$e; $values
	<clinit> ()V <clinit>
fkr net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	e shade
	<init> ([IILha;Lfuv;Z)V <init>
	a ()Lfuv; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lha; getDirection
	f ()Z isShade
fks net/minecraft/client/renderer/block/model/BlockElement
	f DEFAULT_RESCALE
	g MIN_EXTENT
	h MAX_EXTENT
	a from
	b to
	c faces
	d rotation
	e shade
	<init> (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Ljava/util/Map;Lfku;Z)V <init>
	a ()V fillUvs
	a (Lha;)[F uvsByFace
fks$1 net/minecraft/client/renderer/block/model/BlockElement$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
fks$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a DEFAULT_SHADE
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfks; deserialize
	a (Lcom/google/gson/JsonObject;)Lfku; getRotation
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lha$a; getAxis
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	a (Ljava/lang/String;)Lha; getFacing
	d (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getTo
	e (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getFrom
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lorg/joml/Vector3f; getVector3f
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fkt net/minecraft/client/renderer/block/model/BlockElementFace
	a NO_TINT
	b cullForDirection
	c tintIndex
	d texture
	e uv
	<init> (Lha;ILjava/lang/String;Lfkv;)V <init>
fkt$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a DEFAULT_TINT_INDEX
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfkt; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lha; getCullFacing
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fku net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
	<init> (Lorg/joml/Vector3f;Lha$a;FZ)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lorg/joml/Vector3f; origin
	b ()Lha$a; axis
	c ()F angle
	d ()Z rescale
fkv net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	<init> ([FI)V <init>
	a (I)F getU
	b (I)F getV
	d (I)I getShiftedIndex
	c (I)I getReverseIndex
	a ([F)V setMissingUv
fkv$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a DEFAULT_ROTATION
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfkv; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fkw net/minecraft/client/renderer/block/model/BlockModel
	g LOGGER
	h FACE_BAKERY
	a GSON
	i REFERENCE_CHAR
	b PARTICLE_TEXTURE_REFERENCE
	j DEFAULT_AMBIENT_OCCLUSION
	k elements
	l guiLight
	m hasAmbientOcclusion
	n transforms
	o overrides
	c name
	d textureMap
	e parent
	f parentLocation
	a (Ljava/io/Reader;)Lfkw; fromStream
	a (Ljava/lang/String;)Lfkw; fromString
	<init> (Lacq;Ljava/util/List;Ljava/util/Map;Ljava/lang/Boolean;Lfkw$b;Lfld;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getElements
	b ()Z hasAmbientOcclusion
	c ()Lfkw$b; getGuiLight
	d ()Z isResolved
	e ()Ljava/util/List; getOverrides
	a (Lfwv;Lfkw;)Lflb; getItemOverrides
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;)V resolveParents
	a (Lfwv;Ljava/util/function/Function;Lfwz;Lacq;)Lfwr; bake
	a (Lfwv;Lfkw;Ljava/util/function/Function;Lfwz;Lacq;Z)Lfwr; bake
	a (Lfks;Lfkt;Lfuv;Lha;Lfwz;Lacq;)Lfkr; bakeFace
	b (Ljava/lang/String;)Z hasTexture
	c (Ljava/lang/String;)Lfwu; getMaterial
	d (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	e (Ljava/lang/String;)Z isTextureReference
	g ()Lfkw; getRootModel
	h ()Lfld; getTransforms
	a (Lcfw;)Lflc; getTransform
	toString ()Ljava/lang/String; toString
	a (Ljava/util/function/Function;Lfla;)V lambda$resolveParents$0
	<clinit> ()V <clinit>
fkw$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfkw; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	a (Lacq;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Boolean; getAmbientOcclusion
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fkw$b net/minecraft/client/renderer/block/model/BlockModel$GuiLight
	a FRONT
	b SIDE
	c name
	d $VALUES
	values ()[Lfkw$b; values
	valueOf (Ljava/lang/String;)Lfkw$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lfkw$b; getByName
	a ()Z lightLikeBlock
	b ()[Lfkw$b; $values
	<clinit> ()V <clinit>
fkw$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
	<init> (Ljava/lang/String;)V <init>
fkx net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a (Lfkx$a;Ljava/io/Reader;)Lfkx; fromStream
	a (Lfkx$a;Lcom/google/gson/JsonElement;)Lfkx; fromJsonElement
	<init> (Ljava/util/Map;Lflj;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/lang/String;)Z hasVariant
	b (Ljava/lang/String;)Lfle; getVariant
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/util/Map; getVariants
	b ()Ljava/util/Set; getMultiVariants
	c ()Z isMultiPart
	d ()Lflj; getMultiPart
fkx$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	<init> ()V <init>
	a ()Ldcc; getDefinition
	a (Ldcc;)V setDefinition
fkx$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfkx; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lflj; getMultiPart
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fkx$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
	a this$0
	<init> (Lfkx;)V <init>
fky net/minecraft/client/renderer/block/model/FaceBakery
	a VERTEX_INT_SIZE
	d RESCALE_22_5
	e RESCALE_45
	b VERTEX_COUNT
	f COLOR_INDEX
	c UV_INDEX
	<init> ()V <init>
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lfkt;Lfuv;Lha;Lfwz;Lfku;ZLacq;)Lfkr; bakeQuad
	a (Lfkv;Lha;Lj;Lacq;)Lfkv; recomputeUVs
	a (Lfkv;Lfuv;Lha;[FLj;Lfku;Z)[I makeVertices
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)[F setupShape
	a ([IILha;Lfkv;[FLfuv;Lj;Lfku;Z)V bakeVertex
	a ([IILorg/joml/Vector3f;Lfuv;Lfkv;)V fillVertex
	a (Lorg/joml/Vector3f;Lfku;)V applyElementRotation
	a (Lorg/joml/Vector3f;Lj;)V applyModelRotation
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;Lorg/joml/Vector3f;)V rotateVertexBy
	a ([I)Lha; calculateFacing
	a ([ILha;)V recalculateWinding
	a (Lacq;)Ljava/lang/String; lambda$recomputeUVs$0
	<clinit> ()V <clinit>
fky$1 net/minecraft/client/renderer/block/model/FaceBakery$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
fkz net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	b MIN_Z
	c MAX_Z
	<init> ()V <init>
	a (Ljava/util/function/Function;Lfkw;)Lfkw; generateBlockModel
	a (ILjava/lang/String;Lfup;)Ljava/util/List; processFrames
	a (Lfup;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Lfup;)Ljava/util/List; getSpans
	a (Lfkz$b;Ljava/util/List;Lfup;IIIIIZ)V checkTransition
	a (Ljava/util/List;Lfkz$b;II)V createOrExpandSpan
	a (Lfup;IIIII)Z isTransparent
	a (IILfup;Ljava/util/List;I)V lambda$getSpans$0
	<clinit> ()V <clinit>
fkz$1 net/minecraft/client/renderer/block/model/ItemModelGenerator$1
	a $SwitchMap$net$minecraft$client$renderer$block$model$ItemModelGenerator$SpanFacing
	<clinit> ()V <clinit>
fkz$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	<init> (Lfkz$b;II)V <init>
	a (I)V expand
	a ()Lfkz$b; getFacing
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
fkz$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	values ()[Lfkz$b; values
	valueOf (Ljava/lang/String;)Lfkz$b; valueOf
	<init> (Ljava/lang/String;ILha;II)V <init>
	a ()Lha; getDirection
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
	e ()[Lfkz$b; $values
	<clinit> ()V <clinit>
fla net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	<init> (Lacq;Ljava/util/List;)V <init>
	a ()Lacq; getModel
	b ()Ljava/util/stream/Stream; getPredicates
fla$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfla; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getPredicates
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/util/Map$Entry;)Lfla$b; lambda$getPredicates$0
fla$b net/minecraft/client/renderer/block/model/ItemOverride$Predicate
	a property
	b value
	<init> (Lacq;F)V <init>
	a ()Lacq; getProperty
	b ()F getValue
flb net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b NO_OVERRIDE
	c overrides
	d properties
	<init> ()V <init>
	<init> (Lfwv;Lfkw;Ljava/util/List;)V <init>
	a (Lfwv;Lfkw;Lfla;)Lfwr; bakeModel
	a (Lfwr;Lcfz;Lfew;Lbfz;I)Lfwr; resolve
	a (I)[Lflb$b; lambda$new$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lfla$b;)Lflb$b; lambda$new$1
	b (I)[Lacq; lambda$new$0
	<clinit> ()V <clinit>
flb$a net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride
	a matchers
	b model
	<init> ([Lflb$b;Lfwr;)V <init>
	a ([F)Z test
flb$b net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher
	a index
	b value
	<init> (IF)V <init>
flc net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	<init> (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V <init>
	a (ZLeij;)V apply
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<clinit> ()V <clinit>
flc$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	c DEFAULT_ROTATION
	d DEFAULT_TRANSLATION
	e DEFAULT_SCALE
	a MAX_TRANSLATION
	b MAX_SCALE
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lflc; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lorg/joml/Vector3f;)Lorg/joml/Vector3f; getVector3f
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	<clinit> ()V <clinit>
fld net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	<init> ()V <init>
	<init> (Lfld;)V <init>
	<init> (Lflc;Lflc;Lflc;Lflc;Lflc;Lflc;Lflc;Lflc;)V <init>
	a (Lcfw;)Lflc; getTransform
	b (Lcfw;)Z hasTransform
	<clinit> ()V <clinit>
fld$1 net/minecraft/client/renderer/block/model/ItemTransforms$1
	a $SwitchMap$net$minecraft$world$item$ItemDisplayContext
	<clinit> ()V <clinit>
fld$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfld; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Lcfw;)Lflc; getTransform
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
fle net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; getVariants
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;)V resolveParents
	a (Lfwv;Ljava/util/function/Function;Lfwz;Lacq;)Lfwr; bake
	a (Ljava/util/function/Function;Lacq;)V lambda$resolveParents$0
fle$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfle; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
flf net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	<init> (Lacq;Lj;ZI)V <init>
	a ()Lacq; getModelLocation
	b ()Lj; getRotation
	c ()Z isUvLocked
	d ()I getWeight
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
flf$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a DEFAULT_UVLOCK
	b DEFAULT_WEIGHT
	c DEFAULT_X_ROTATION
	d DEFAULT_Y_ROTATION
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lflf; deserialize
	d (Lcom/google/gson/JsonObject;)Z getUvLock
	a (Lcom/google/gson/JsonObject;)Lfws; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lacq; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
flg net/minecraft/client/renderer/block/model/multipart/AndCondition
	a TOKEN
	d conditions
	<init> (Ljava/lang/Iterable;)V <init>
	getPredicate (Ldcc;)Ljava/util/function/Predicate; getPredicate
	a (Ljava/util/List;Ldcb;)Z lambda$getPredicate$2
	a (Ldcb;Ljava/util/function/Predicate;)Z lambda$getPredicate$1
	a (Ldcc;Lflh;)Ljava/util/function/Predicate; lambda$getPredicate$0
flh net/minecraft/client/renderer/block/model/multipart/Condition
	b TRUE
	c FALSE
	getPredicate (Ldcc;)Ljava/util/function/Predicate; getPredicate
	a (Ldcc;)Ljava/util/function/Predicate; lambda$static$3
	a (Ldcb;)Z lambda$static$2
	b (Ldcc;)Ljava/util/function/Predicate; lambda$static$1
	b (Ldcb;)Z lambda$static$0
	<clinit> ()V <clinit>
fli net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	a PIPE_SPLITTER
	d key
	e value
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	getPredicate (Ldcc;)Ljava/util/function/Predicate; getPredicate
	a (Ldcc;Ldde;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
	toString ()Ljava/lang/String; toString
	a (Ldde;Ljava/util/Optional;Ldcb;)Z lambda$getBlockStatePredicate$3
	a (Ljava/util/List;Ldcb;)Z lambda$getPredicate$2
	a (Ldcb;Ljava/util/function/Predicate;)Z lambda$getPredicate$1
	b (Ldcc;Ldde;Ljava/lang/String;)Ljava/util/function/Predicate; lambda$getPredicate$0
	<clinit> ()V <clinit>
flj net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	<init> (Ldcc;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getSelectors
	b ()Ljava/util/Set; getMultiVariants
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;)V resolveParents
	a (Lfwv;Ljava/util/function/Function;Lfwz;Lacq;)Lfwr; bake
	a (Ljava/util/function/Function;Lfll;)V lambda$resolveParents$1
	a (Lfll;)Ljava/util/stream/Stream; lambda$getDependencies$0
flj$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	<init> (Lfkx$a;)V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lflj; deserialize
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
flk net/minecraft/client/renderer/block/model/multipart/OrCondition
	a TOKEN
	d conditions
	<init> (Ljava/lang/Iterable;)V <init>
	getPredicate (Ldcc;)Ljava/util/function/Predicate; getPredicate
	a (Ljava/util/List;Ldcb;)Z lambda$getPredicate$2
	a (Ldcb;Ljava/util/function/Predicate;)Z lambda$getPredicate$1
	a (Ldcc;Lflh;)Ljava/util/function/Predicate; lambda$getPredicate$0
fll net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	<init> (Lflh;Lfle;)V <init>
	a ()Lfle; getVariant
	a (Ldcc;)Ljava/util/function/Predicate; getPredicate
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
fll$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfll; deserialize
	b (Lcom/google/gson/JsonObject;)Lflh; getSelector
	a (Lcom/google/gson/JsonObject;)Lflh; getCondition
	a (Ljava/util/Map$Entry;)Lflh; getKeyValueCondition
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonElement;)Lflh; lambda$getCondition$1
	b (Lcom/google/gson/JsonElement;)Lflh; lambda$getCondition$0
flm net/minecraft/client/renderer/block/model/multipart/package-info
fln net/minecraft/client/renderer/block/model/package-info
flo net/minecraft/client/renderer/block/package-info
flp net/minecraft/client/renderer/blockentity/BannerRenderer
	b BANNER_WIDTH
	c BANNER_HEIGHT
	d MAX_PATTERNS
	a FLAG
	e POLE
	f BAR
	g flag
	h pole
	i bar
	<init> (Lflv$a;)V <init>
	a ()Lfek; createBodyLayer
	a (Lczd;FLeij;Lfjx;II)V render
	a (Leij;Lfjx;IILfee;Lfwu;ZLjava/util/List;)V renderPatterns
	a (Leij;Lfjx;IILfee;Lfwu;ZLjava/util/List;Z)V renderPatterns
	a (Lczn;FLeij;Lfjx;II)V render
	a (Lfee;Leij;Lfjx;II[FLfwu;)V lambda$renderPatterns$1
	a (ZLacp;)Lfwu; lambda$renderPatterns$0
flq net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	b MAX_RENDER_Y
	<init> (Lflv$a;)V <init>
	a (Lczi;FLeij;Lfjx;II)V render
	a (Leij;Lfjx;FJII[F)V renderBeaconBeam
	a (Leij;Lfjx;Lacq;FFJII[FFF)V renderBeaconBeam
	a (Leij;Lein;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lein;FFFFIIFFFFFFFF)V renderQuad
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lein;FFFFIFFFF)V addVertex
	a (Lczi;)Z shouldRenderOffScreen
	aK_ ()I getViewDistance
	a (Lczi;Leei;)Z shouldRender
	a (Lczn;Leei;)Z shouldRender
	a (Lczn;)Z shouldRenderOffScreen
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
flr net/minecraft/client/renderer/blockentity/BedRenderer
	a headRoot
	b footRoot
	<init> (Lflv$a;)V <init>
	b ()Lfek; createHeadLayer
	c ()Lfek; createFootLayer
	a (Lczj;FLeij;Lfjx;II)V render
	a (Leij;Lfjx;Lfee;Lha;Lfwu;IIZ)V renderPiece
	a (Lczn;FLeij;Lfjx;II)V render
	a (Lcmn;Lgu;)Z lambda$render$0
fls net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	b BELL_BODY
	c bellBody
	<init> (Lflv$a;)V <init>
	b ()Lfek; createBodyLayer
	a (Lczl;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
flt net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	d renderers
	e font
	f entityModelSet
	a level
	b camera
	c cameraHitResult
	g blockRenderDispatcher
	h itemRenderer
	i entityRenderer
	<init> (Leov;Lfea;Ljava/util/function/Supplier;Ljava/util/function/Supplier;Ljava/util/function/Supplier;)V <init>
	a (Lczn;)Lflu; getRenderer
	a (Lcmm;Lemz;Leeg;)V prepare
	a (Lczn;FLeij;Lfjx;)V render
	a (Lflu;Lczn;FLeij;Lfjx;)V setupAndRender
	a (Lczn;Leij;Lfjx;II)Z renderItem
	a (Lczn;Ljava/lang/Runnable;)V tryRender
	a (Lcmm;)V setLevel
	a (Lakx;)V onResourceManagerReload
	a (Lflu;Lczn;Leij;Lfjx;II)V lambda$renderItem$1
	b (Lflu;Lczn;FLeij;Lfjx;)V lambda$render$0
flu net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	a (Lczn;FLeij;Lfjx;II)V render
	a (Lczn;)Z shouldRenderOffScreen
	aK_ ()I getViewDistance
	a (Lczn;Leei;)Z shouldRender
flv net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider
	create (Lflv$a;)Lflu; create
flv$a net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context
	a blockEntityRenderDispatcher
	b blockRenderDispatcher
	c itemRenderer
	d entityRenderer
	e modelSet
	f font
	<init> (Lflt;Lfko;Lfpw;Lfow;Lfea;Leov;)V <init>
	a ()Lflt; getBlockEntityRenderDispatcher
	b ()Lfko; getBlockRenderDispatcher
	c ()Lfow; getEntityRenderer
	d ()Lfpw; getItemRenderer
	e ()Lfea; getModelSet
	a (Lfec;)Lfee; bakeLayer
	f ()Leov; getFont
flw net/minecraft/client/renderer/blockentity/BlockEntityRenderers
	a PROVIDERS
	<init> ()V <init>
	a (Lczp;Lflv;)V register
	a (Lflv$a;)Ljava/util/Map; createEntityRenderers
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lflv$a;Lczp;Lflv;)V lambda$createEntityRenderers$0
	<clinit> ()V <clinit>
flx net/minecraft/client/renderer/blockentity/BrightnessCombiner
	<init> ()V <init>
	a (Lczn;Lczn;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	a (Lczn;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (I)I lambda$acceptNone$2
	b (I)I lambda$acceptSingle$1
	a (Lczn;Lczn;I)I lambda$acceptDouble$0
fly net/minecraft/client/renderer/blockentity/BrushableBlockRenderer
	a itemRenderer
	<init> (Lflv$a;)V <init>
	a (Lczr;FLeij;Lfjx;II)V render
	a (Lha;I)[F translations
	a (Lczn;FLeij;Lfjx;II)V render
fly$1 net/minecraft/client/renderer/blockentity/BrushableBlockRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
flz net/minecraft/client/renderer/blockentity/CampfireRenderer
	a SIZE
	b itemRenderer
	<init> (Lflv$a;)V <init>
	a (Lczt;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
fma net/minecraft/client/renderer/blockentity/ChestRenderer
	a BOTTOM
	b LID
	c LOCK
	d lid
	e bottom
	f lock
	g doubleLeftLid
	h doubleLeftBottom
	i doubleLeftLock
	j doubleRightLid
	k doubleRightBottom
	l doubleRightLock
	m xmasTextures
	<init> (Lflv$a;)V <init>
	b ()Lfek; createSingleBodyLayer
	c ()Lfek; createDoubleBodyRightLayer
	d ()Lfek; createDoubleBodyLeftLayer
	a (Lczn;FLeij;Lfjx;II)V render
	a (Leij;Lein;Lfee;Lfee;Lfee;FII)V render
fmb net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	b ACTIVE_SHELL_TEXTURE
	c WIND_TEXTURE
	d VERTICAL_WIND_TEXTURE
	e OPEN_EYE_TEXTURE
	f CLOSED_EYE_TEXTURE
	g eye
	h wind
	i shell
	j cage
	k renderer
	<init> (Lflv$a;)V <init>
	b ()Lfek; createEyeLayer
	c ()Lfek; createWindLayer
	d ()Lfek; createShellLayer
	e ()Lfek; createCageLayer
	a (Lczz;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
fmc net/minecraft/client/renderer/blockentity/DecoratedPotRenderer
	a NECK
	b FRONT
	c BACK
	d LEFT
	e RIGHT
	f TOP
	g BOTTOM
	h neck
	i frontSide
	j backSide
	k leftSide
	l rightSide
	m top
	n bottom
	o baseMaterial
	<init> (Lflv$a;)V <init>
	b ()Lfek; createBaseLayer
	c ()Lfek; createSidesLayer
	a (Lcfu;)Lfwu; getMaterial
	a (Ldac;FLeij;Lfjx;II)V render
	a (Lfee;Leij;Lfjx;IILfwu;)V renderSide
	a (Lczn;FLeij;Lfjx;II)V render
fmd net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	b bookModel
	<init> (Lflv$a;)V <init>
	a (Ldag;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
fme net/minecraft/client/renderer/blockentity/HangingSignRenderer
	a PLANK
	b V_CHAINS
	c NORMAL_CHAINS
	d CHAIN_L_1
	e CHAIN_L_2
	f CHAIN_R_1
	g CHAIN_R_2
	h BOARD
	i MODEL_RENDER_SCALE
	j TEXT_RENDER_SCALE
	k TEXT_OFFSET
	l hangingSignModels
	<init> (Lflv$a;)V <init>
	b ()F getSignModelRenderScale
	c ()F getSignTextRenderScale
	a (Ldav;FLeij;Lfjx;II)V render
	a (Leij;FLdcb;)V translateSign
	a (Leij;IILfcb;Lein;)V renderSignModel
	a (Lddo;)Lfwu; getSignMaterial
	d ()Leei; getTextOffset
	e ()Lfek; createHangingSignLayer
	a (Lczn;FLeij;Lfjx;II)V render
	a (Lflv$a;Lddo;)Lfme$a; lambda$new$1
	b (Lddo;)Lddo; lambda$new$0
	<clinit> ()V <clinit>
fme$a net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel
	a root
	b plank
	c vChains
	d normalChains
	<init> (Lfee;)V <init>
	a (Ldcb;)V evaluateVisibleParts
	a (Leij;Lein;IIFFFF)V renderToBuffer
fmf net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	<init> (Lflv$a;)V <init>
	a (Ldao;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
fmg net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	<init> (Lflv$a;)V <init>
	a (Ldbx;FLeij;Lfjx;II)V render
	a (Lgu;Ldcb;Leij;Lfjx;Lcmm;ZI)V renderBlock
	aK_ ()I getViewDistance
	a (Lczn;FLeij;Lfjx;II)V render
fmh net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	<init> (Lflv$a;)V <init>
	a (Ldau;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
fmi net/minecraft/client/renderer/blockentity/SignRenderer
	a STICK
	b BLACK_TEXT_OUTLINE_COLOR
	c OUTLINE_RENDER_DISTANCE
	d RENDER_SCALE
	e TEXT_OFFSET
	f signModels
	g font
	<init> (Lflv$a;)V <init>
	a (Ldav;FLeij;Lfjx;II)V render
	b ()F getSignModelRenderScale
	c ()F getSignTextRenderScale
	a (Ldav;Leij;Lfjx;IILdcb;Lcwn;Lddo;Lfcb;)V renderSignWithText
	a (Leij;FLdcb;)V translateSign
	a (Leij;Lfjx;IILddo;Lfcb;)V renderSign
	a (Leij;IILfcb;Lein;)V renderSignModel
	a (Lddo;)Lfwu; getSignMaterial
	a (Lgu;Ldaw;Leij;Lfjx;IIIZ)V renderSignText
	a (Leij;ZLeei;)V translateSignText
	d ()Leei; getTextOffset
	a (Lgu;I)Z isOutlineVisible
	a (Ldaw;)I getDarkColor
	a (Lfea;Lddo;)Lfmi$a; createSignModel
	f ()Lfek; createSignLayer
	a (Lczn;FLeij;Lfjx;II)V render
	a (ILsw;)Laom; lambda$renderSignText$2
	a (Lflv$a;Lddo;)Lfmi$a; lambda$new$1
	b (Lddo;)Lddo; lambda$new$0
	<clinit> ()V <clinit>
fmi$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a root
	b stick
	<init> (Lfee;)V <init>
	a (Leij;Lein;IIFFFF)V renderToBuffer
fmj net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a modelByType
	b SKIN_BY_TYPE
	a (Lfea;)Ljava/util/Map; createSkullRenderers
	<init> (Lflv$a;)V <init>
	a (Ldax;FLeij;Lfjx;II)V render
	a (Lha;FFLeij;Lfjx;ILfdc;Lfkf;)V renderSkull
	a (Lcwp$a;Lcom/mojang/authlib/GameProfile;)Lfkf; getRenderType
	a (Lczn;FLeij;Lfjx;II)V render
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
fmk net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a entityRenderer
	<init> (Lflv$a;)V <init>
	a (Ldaz;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
fml net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	<init> (Lflv$a;)V <init>
	a (Ldba;FLeij;Lfjx;II)V render
	a (Ldba;Lein;Lgu;Leij;)V renderInvisibleBlocks
	a (Ldba;)Z shouldRenderOffScreen
	aK_ ()I getViewDistance
	a (Lczn;)Z shouldRenderOffScreen
	a (Lczn;FLeij;Lfjx;II)V render
fml$1 net/minecraft/client/renderer/blockentity/StructureBlockRenderer$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
fmm net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	c BEAM_LOCATION
	<init> (Lflv$a;)V <init>
	a (Ldbb;FLeij;Lfjx;II)V render
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfkf; renderType
	aK_ ()I getViewDistance
	a (Ldbc;FLeij;Lfjx;II)V render
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
fmn net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	b END_PORTAL_LOCATION
	<init> (Lflv$a;)V <init>
	a (Ldbc;FLeij;Lfjx;II)V render
	a (Ldbc;Lorg/joml/Matrix4f;Lein;)V renderCube
	a (Ldbc;Lorg/joml/Matrix4f;Lein;FFFFFFFFLha;)V renderFace
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfkf; renderType
	a (Lczn;FLeij;Lfjx;II)V render
	<clinit> ()V <clinit>
fmo net/minecraft/client/renderer/blockentity/package-info
fmp net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b MAX_WORKERS_32_BIT
	c VERTEX_FORMAT
	d MAX_HIGH_PRIORITY_QUOTA
	e toBatchHighPriority
	f toBatchLowPriority
	g highPriorityQuota
	h freeBuffers
	i toUpload
	j toBatchCount
	k freeBufferCount
	l fixedBuffers
	m mailbox
	n executor
	o level
	p renderer
	q camera
	<init> (Lfew;Lfjv;Ljava/util/concurrent/Executor;ZLfjk;)V <init>
	a (Lfew;)V setLevel
	j ()V runTask
	k ()Lfmp$c$a; pollTask
	a ()Ljava/lang/String; getStats
	b ()I getToBatchCount
	c ()I getToUpload
	d ()I getFreeBufferCount
	a (Leei;)V setCamera
	e ()Leei; getCameraPosition
	f ()V uploadAllPendingUploads
	a (Lfmp$c;Lfms;)V rebuildChunkSync
	g ()V blockUntilClear
	a (Lfmp$c$a;)V schedule
	a (Leie$b;Leim;)Ljava/util/concurrent/CompletableFuture; uploadChunkLayer
	l ()V clearBatchQueue
	h ()Z isQueueEmpty
	i ()V dispose
	a (Leim;Leie$b;)V lambda$uploadChunkLayer$5
	b (Lfmp$c$a;)V lambda$schedule$4
	a (Lfjk;Lfmp$a;Ljava/lang/Throwable;)V lambda$runTask$3
	a (Lfmp$a;Lfjk;)V lambda$runTask$2
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$runTask$1
	a (Lfmp$c$a;Lfjk;)Ljava/util/concurrent/CompletableFuture; lambda$runTask$0
	<clinit> ()V <clinit>
fmp$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
	values ()[Lfmp$a; values
	valueOf (Ljava/lang/String;)Lfmp$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfmp$a; $values
	<clinit> ()V <clinit>
fmp$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c renderableBlockEntities
	d visibilitySet
	e transparencyState
	<init> ()V <init>
	a ()Z hasNoRenderableLayers
	a (Lfkf;)Z isEmpty
	b ()Ljava/util/List; getRenderableBlockEntities
	a (Lha;Lha;)Z facesCanSeeEachother
	<clinit> ()V <clinit>
fmp$b$1 net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk$1
	<init> ()V <init>
	a (Lha;Lha;)Z facesCanSeeEachother
fmp$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk
	a SIZE
	b index
	c compiled
	e initialCompilationCancelCount
	f lastRebuildTask
	g lastResortTransparencyTask
	h globalBlockEntities
	i buffers
	j bb
	k dirty
	l origin
	m relativeOrigins
	n playerChanged
	d this$0
	<init> (Lfmp;IIII)V <init>
	a (Lgu;)Z doesChunkExistAt
	a ()Z hasAllNeighbors
	b ()Leed; getBoundingBox
	a (Lfkf;)Leim; getBuffer
	a (III)V setOrigin
	c ()D getDistToPlayerSqr
	a (Leie;)V beginLayer
	d ()Lfmp$b; getCompiledChunk
	k ()V reset
	e ()V releaseBuffers
	f ()Lgu; getOrigin
	a (Z)V setDirty
	g ()V setNotDirty
	h ()Z isDirty
	i ()Z isDirtyFromPlayer
	a (Lha;)Lgu; getRelativeOrigin
	a (Lfkf;Lfmp;)Z resortTransparency
	j ()Z cancelTasks
	a (Lfms;)Lfmp$c$a; createCompileTask
	a (Lfmp;Lfms;)V rebuildChunkAsync
	a (Ljava/util/Collection;)V updateGlobalBlockEntities
	b (Lfms;)V compileSync
	a ([Lgu$a;)V lambda$new$2
	b (Lfkf;)Leim; lambda$new$1
	c (Lfkf;)Lfkf; lambda$new$0
fmp$c$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask
	a distAtCreation
	b isCancelled
	c isHighPriority
	d this$1
	<init> (Lfmp$c;DZ)V <init>
	a (Lfjk;)Ljava/util/concurrent/CompletableFuture; doTask
	a ()V cancel
	b ()Ljava/lang/String; name
	a (Lfmp$c$a;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
fmp$c$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask
	e region
	f this$1
	<init> (Lfmp$c;DLfmr;Z)V <init>
	b ()Ljava/lang/String; name
	a (Lfjk;)Ljava/util/concurrent/CompletableFuture; doTask
	a (FFFLfjk;)Lfmp$c$b$a; compile
	a (Lfmp$c$b$a;Lczn;)V handleBlockEntity
	a ()V cancel
	a (Lfmp$b;Ljava/util/List;Ljava/lang/Throwable;)Lfmp$a; lambda$doTask$1
	a (Ljava/util/List;Lfmp$b;Lfkf;Leie$b;)V lambda$doTask$0
fmp$c$b$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults
	a globalBlockEntities
	b blockEntities
	c renderedLayers
	d visibilitySet
	e transparencyState
	<init> ()V <init>
fmp$c$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask
	f compiledChunk
	e this$1
	<init> (Lfmp$c;DLfmp$b;)V <init>
	b ()Ljava/lang/String; name
	a (Lfjk;)Ljava/util/concurrent/CompletableFuture; doTask
	a ()V cancel
	a (Lfmp$a;Ljava/lang/Throwable;)Lfmp$a; lambda$doTask$1
	a (Ljava/lang/Void;)Lfmp$a; lambda$doTask$0
fmq net/minecraft/client/renderer/chunk/RenderChunk
	a blockEntities
	b sections
	c debug
	d wrapped
	<init> (Ldei;)V <init>
	a (Lgu;)Lczn; getBlockEntity
	b (Lgu;)Ldcb; getBlockState
	a (III)Ljava/lang/String; lambda$getBlockState$0
fmr net/minecraft/client/renderer/chunk/RenderChunkRegion
	c centerX
	d centerZ
	a chunks
	b level
	<init> (Lcmm;II[[Lfmq;)V <init>
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	a (Lha;Z)F getShade
	s_ ()Ldwt; getLightEngine
	c_ (Lgu;)Lczn; getBlockEntity
	a (Lgu;Lclx;)I getBlockTint
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
fms net/minecraft/client/renderer/chunk/RenderRegionCache
	a chunkInfoCache
	<init> ()V <init>
	a (Lcmm;Lgu;Lgu;I)Lfmr; createRegion
	a (Lgu;Lgu;II[[Lfms$a;)Z isAllEmpty
	a (Lcmm;J)Lfms$a; lambda$createRegion$0
fms$a net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo
	a chunk
	b renderChunk
	<init> (Ldei;)V <init>
	a ()Ldei; chunk
	b ()Lfmq; renderChunk
fmt net/minecraft/client/renderer/chunk/VisGraph
	a SIZE_IN_BITS
	b LEN
	c MASK
	d SIZE
	e X_SHIFT
	f Z_SHIFT
	g Y_SHIFT
	h DX
	i DZ
	j DY
	k INVALID_INDEX
	l DIRECTIONS
	m bitSet
	n INDEX_OF_EDGES
	o empty
	<init> ()V <init>
	a (Lgu;)V setOpaque
	b (Lgu;)I getIndex
	a (III)I getIndex
	a ()Lfmu; resolve
	a (I)Ljava/util/Set; floodFill
	a (ILjava/util/Set;)V addEdges
	a (ILha;)I getNeighborIndexAtFace
	a ([I)V lambda$static$0
	<clinit> ()V <clinit>
fmt$1 net/minecraft/client/renderer/chunk/VisGraph$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
fmu net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	<init> ()V <init>
	a (Ljava/util/Set;)V add
	a (Lha;Lha;Z)V set
	a (Z)V setAll
	a (Lha;Lha;)Z visibilityBetween
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
fmv net/minecraft/client/renderer/chunk/package-info
fmw net/minecraft/client/renderer/culling/Frustum
	a OFFSET_STEP
	b intersection
	c matrix
	d viewVector
	e camX
	f camY
	g camZ
	<init> (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V <init>
	<init> (Lfmw;)V <init>
	a (I)Lfmw; offsetToFullyIncludeCameraCube
	a (DDD)V prepare
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V calculateFrustum
	a (Leed;)Z isVisible
	a (DDDDDD)Z cubeInFrustum
fmx net/minecraft/client/renderer/culling/package-info
fmy net/minecraft/client/renderer/debug/BeeDebugRenderer
	a SHOW_GOAL_FOR_ALL_BEES
	b SHOW_NAME_FOR_ALL_BEES
	c SHOW_HIVE_FOR_ALL_BEES
	d SHOW_FLOWER_POS_FOR_ALL_BEES
	e SHOW_TRAVEL_TICKS_FOR_ALL_BEES
	f SHOW_PATH_FOR_ALL_BEES
	g SHOW_GOAL_FOR_SELECTED_BEE
	h SHOW_NAME_FOR_SELECTED_BEE
	i SHOW_HIVE_FOR_SELECTED_BEE
	j SHOW_FLOWER_POS_FOR_SELECTED_BEE
	k SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE
	l SHOW_PATH_FOR_SELECTED_BEE
	m SHOW_HIVE_MEMBERS
	n SHOW_BLACKLISTS
	o MAX_RENDER_DIST_FOR_HIVE_OVERLAY
	p MAX_RENDER_DIST_FOR_BEE_OVERLAY
	q MAX_TARGETING_DIST
	r HIVE_TIMEOUT
	s TEXT_SCALE
	t WHITE
	u YELLOW
	v ORANGE
	w GREEN
	x GRAY
	y PINK
	z RED
	A minecraft
	B hives
	C beeInfosPerEntity
	D lastLookedAtUuid
	<init> (Lenn;)V <init>
	a ()V clear
	a (Lfmy$b;)V addOrUpdateHiveInfo
	a (Lfmy$a;)V addOrUpdateBeeInfo
	a (I)V removeBeeInfo
	a (Leij;Lfjx;DDD)V render
	b ()V clearRemovedBees
	c ()V clearRemovedHives
	a (Leij;Lfjx;)V doRender
	d ()Ljava/util/Map; createHiveBlacklistMap
	b (Leij;Lfjx;)V renderFlowerInfos
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Leij;Lfjx;Lgu;)V highlightHive
	a (Leij;Lfjx;Lgu;Ljava/util/List;)V renderGhostHive
	a (Leij;Lfjx;Lfmy$b;Ljava/util/Collection;)V renderHiveInfo
	a (Leij;Lfjx;Lfmy$a;)V renderPath
	b (Leij;Lfjx;Lfmy$a;)V renderBeeInfo
	a (Leij;Lfjx;Ljava/lang/String;Lfmy$b;II)V renderTextOverHive
	a (Leij;Lfjx;Ljava/lang/String;Lgu;II)V renderTextOverPos
	a (Leij;Lfjx;Lho;ILjava/lang/String;IF)V renderTextOverMob
	e ()Lemz; getCamera
	b (Lfmy$b;)Ljava/util/Set; getHiveMemberNames
	a (Lfmy$a;Lgu;)Ljava/lang/String; getPosDescription
	b (Lfmy$a;)Z isBeeSelected
	c (Lfmy$a;)Z isPlayerCloseEnoughToMob
	a (Lgu;)Ljava/util/Collection; getHiveMembers
	f ()Ljava/util/Map; getGhostHives
	g ()V updateLastLookedAtUuid
	a (Lbfj;)V lambda$updateLastLookedAtUuid$14
	b (Lgu;)Ljava/util/List; lambda$getGhostHives$13
	a (Lgu;Lfmy$a;)Z lambda$getHiveMembers$12
	a (Leij;Lfjx;Ljava/util/Map$Entry;)V lambda$renderFlowerInfos$11
	a (Ljava/util/Map;Lfmy$a;)V lambda$renderFlowerInfos$10
	c (Lgu;)Ljava/util/Set; lambda$renderFlowerInfos$9
	b (Ljava/util/Map;Lfmy$a;)V lambda$createHiveBlacklistMap$8
	a (Ljava/util/Map;Lfmy$a;Lgu;)V lambda$createHiveBlacklistMap$7
	d (Lgu;)Ljava/util/Set; lambda$createHiveBlacklistMap$6
	a (Lgu;Leij;Lfjx;Lgu;Ljava/util/List;)V lambda$doRender$5
	a (Lgu;Ljava/util/Map;Leij;Lfjx;Lfmy$b;)V lambda$doRender$4
	c (Leij;Lfjx;Lfmy$a;)V lambda$doRender$3
	a (JLjava/util/Map$Entry;)Z lambda$clearRemovedHives$2
	a (Ljava/util/Map$Entry;)Z lambda$clearRemovedBees$1
	a (ILfmy$a;)Z lambda$removeBeeInfo$0
fmy$a net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	<init> (Ljava/util/UUID;ILho;Ldxt;Lgu;Lgu;I)V <init>
	a (Lgu;)Z hasHive
	a ()Ljava/util/UUID; getUuid
	b ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	c ()Z hasFlower
fmy$b net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	f lastSeen
	<init> (Lgu;Ljava/lang/String;IIZJ)V <init>
fmz net/minecraft/client/renderer/debug/BrainDebugRenderer
	a LOGGER
	b SHOW_NAME_FOR_ALL
	c SHOW_PROFESSION_FOR_ALL
	d SHOW_BEHAVIORS_FOR_ALL
	e SHOW_ACTIVITIES_FOR_ALL
	f SHOW_INVENTORY_FOR_ALL
	g SHOW_GOSSIPS_FOR_ALL
	h SHOW_PATH_FOR_ALL
	i SHOW_HEALTH_FOR_ALL
	j SHOW_WANTS_GOLEM_FOR_ALL
	k SHOW_ANGER_LEVEL_FOR_ALL
	l SHOW_NAME_FOR_SELECTED
	m SHOW_PROFESSION_FOR_SELECTED
	n SHOW_BEHAVIORS_FOR_SELECTED
	o SHOW_ACTIVITIES_FOR_SELECTED
	p SHOW_MEMORIES_FOR_SELECTED
	q SHOW_INVENTORY_FOR_SELECTED
	r SHOW_GOSSIPS_FOR_SELECTED
	s SHOW_PATH_FOR_SELECTED
	t SHOW_HEALTH_FOR_SELECTED
	u SHOW_WANTS_GOLEM_FOR_SELECTED
	v SHOW_ANGER_LEVEL_FOR_SELECTED
	w SHOW_POI_INFO
	x MAX_RENDER_DIST_FOR_BRAIN_INFO
	y MAX_RENDER_DIST_FOR_POI_INFO
	z MAX_TARGETING_DIST
	A TEXT_SCALE
	B WHITE
	C YELLOW
	D CYAN
	E GREEN
	F GRAY
	G PINK
	H RED
	I ORANGE
	J minecraft
	K pois
	L brainDumpsPerEntity
	M lastLookedAtUuid
	<init> (Lenn;)V <init>
	a ()V clear
	a (Lfmz$b;)V addPoi
	a (Lgu;)V removePoi
	a (Lgu;I)V setFreeTicketCount
	a (Lfmz$a;)V addOrUpdateBrainDump
	a (I)V removeBrainDump
	a (Leij;Lfjx;DDD)V render
	b ()V clearRemovedEntities
	b (Leij;Lfjx;DDD)V doRender
	a (Leij;Lfjx;Lgu;)V highlightPoi
	a (Leij;Lfjx;Lgu;Ljava/util/List;)V renderGhostPoi
	a (Leij;Lfjx;Lfmz$b;)V renderPoiInfo
	a (Leij;Lfjx;Lfmz$a;DDD)V renderPath
	b (Leij;Lfjx;Lfmz$a;DDD)V renderBrainInfo
	a (Leij;Lfjx;Ljava/lang/String;Lfmz$b;II)V renderTextOverPoi
	a (Leij;Lfjx;Ljava/lang/String;Lgu;II)V renderTextOverPos
	a (Leij;Lfjx;Lho;ILjava/lang/String;IF)V renderTextOverMob
	b (Lfmz$b;)Ljava/util/Set; getTicketHolderNames
	c (Lfmz$b;)Ljava/util/Set; getPotentialTicketHolderNames
	b (Lfmz$a;)Z isMobSelected
	c (Lfmz$a;)Z isPlayerCloseEnoughToMob
	b (Lgu;)Ljava/util/Collection; getTicketHolders
	c (Lgu;)Ljava/util/Collection; getPotentialTicketHolders
	c ()Ljava/util/Map; getGhostPois
	d ()V updateLastLookedAtUuid
	a (Lbfj;)V lambda$updateLastLookedAtUuid$8
	d (Lgu;)Ljava/util/List; lambda$getGhostPois$7
	a (Lgu;Lfmz$a;)Z lambda$getPotentialTicketHolders$6
	b (Lgu;Lfmz$a;)Z lambda$getTicketHolders$5
	a (Lgu;Leij;Lfjx;Lgu;Ljava/util/List;)V lambda$doRender$4
	a (Lgu;Leij;Lfjx;Lfmz$b;)V lambda$doRender$3
	a (Leij;Lfjx;DDDLfmz$a;)V lambda$doRender$2
	a (Ljava/util/Map$Entry;)Z lambda$clearRemovedEntities$1
	a (ILfmz$a;)Z lambda$removeBrainDump$0
	<clinit> ()V <clinit>
fmz$a net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f health
	g maxHealth
	h pos
	i inventory
	j path
	k wantsGolem
	l angerLevel
	m activities
	n behaviors
	o memories
	p gossips
	q pois
	r potentialPois
	<init> (Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLho;Ljava/lang/String;Ldxt;ZI)V <init>
	a (Lgu;)Z hasPoi
	b (Lgu;)Z hasPotentialPoi
	a ()Ljava/util/UUID; getUuid
fmz$b net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
	<init> (Lgu;Ljava/lang/String;I)V <init>
fna net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	b CELL_BORDER
	c YELLOW
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	<clinit> ()V <clinit>
fnb net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
fnb$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	b clientData
	c serverData
	a this$0
	<init> (Lfnb;Lfyp;DD)V <init>
	a (Lfyp;Lacp;II)Ljava/util/Map; lambda$new$0
fnc net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
fnd net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f supportBlockRenderer
	g neighborsUpdateRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m brainDebugRenderer
	n villageSectionsDebugRenderer
	o beeDebugRenderer
	p raidDebugRenderer
	q goalSelectorRenderer
	r gameTestDebugRenderer
	s gameEventListenerRenderer
	t skyLightSectionDebugRenderer
	u renderChunkborder
	<init> (Lenn;)V <init>
	a ()V clear
	b ()Z switchRenderChunkborder
	a (Leij;Lfjx$a;DDD)V render
	a (Lbfj;I)Ljava/util/Optional; getTargetedEntity
	a (Leij;Lfjx;Lgu;Lgu;FFFF)V renderFilledBox
	a (Leij;Lfjx;Lgu;FFFFF)V renderFilledBox
	a (Leij;Lfjx;Leed;FFFF)V renderFilledBox
	a (Leij;Lfjx;DDDDDDFFFF)V renderFilledBox
	a (Leij;Lfjx;Ljava/lang/String;IIII)V renderFloatingText
	a (Leij;Lfjx;Ljava/lang/String;DDDI)V renderFloatingText
	a (Leij;Lfjx;Ljava/lang/String;DDDIF)V renderFloatingText
	a (Leij;Lfjx;Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Lbfj;)Z lambda$getTargetedEntity$0
fnd$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a (Leij;Lfjx;DDD)V render
	a ()V clear
fne net/minecraft/client/renderer/debug/GameEventListenerRenderer
	a minecraft
	b LISTENER_RENDER_DIST
	c BOX_HEIGHT
	d trackedGameEvents
	e trackedListeners
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;Leed;FFFF)V renderFilledBox
	a (Ldgl;Leei;)V trackGameEvent
	a (Ldgp;I)V trackListener
	a (Leij;Lfjx;Leei;)V lambda$render$3
	a (Leij;Lein;DDDLeei;)V lambda$render$2
	a (Lfne$b;Leij;Lein;DDDLeei;)V lambda$render$1
	a (Lcmm;Leei;Lfne$b;)Z lambda$render$0
fne$a net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent
	a timeStamp
	b gameEvent
	c position
	<init> (JLdgl;Leei;)V <init>
	a ()Z isExpired
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()J timeStamp
	c ()Ldgl; gameEvent
	d ()Leei; position
fne$b net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener
	a listenerSource
	b listenerRange
	<init> (Ldgp;I)V <init>
	a (Lcmm;Leei;)Z isExpired
	a (Lcmm;)Ljava/util/Optional; getPosition
	a ()Ldgp; getListenerSource
	b ()I getListenerRadius
	a (Laif;Ldgl;Ldgl$a;Leei;)Z handleGameEvent
	a (Leei;Leei;)Z lambda$isExpired$0
fnf net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a PADDING
	b markers
	<init> ()V <init>
	a (Lgu;ILjava/lang/String;I)V addMarker
	a ()V clear
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;Lgu;Lfnf$a;)V renderMarker
	b (Leij;Lfjx;Lgu;Lfnf$a;)V lambda$render$1
	a (JLjava/util/Map$Entry;)Z lambda$render$0
fnf$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	<init> (ILjava/lang/String;J)V <init>
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
fng net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a MAX_RENDER_DIST
	b minecraft
	c goalSelectors
	a ()V clear
	a (ILjava/util/List;)V addGoalSelector
	a (I)V removeGoalSelector
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Lgu;Leij;Lfjx;Ljava/lang/Integer;Ljava/util/List;)V lambda$render$0
fng$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
	<init> (Lgu;ILjava/lang/String;Z)V <init>
fnh net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	b CHUNK_DIST
	c BOX_HEIGHT
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Ldhk$a;)Lorg/joml/Vector3f; getColor
fnh$1 net/minecraft/client/renderer/debug/HeightMapRenderer$1
	a $SwitchMap$net$minecraft$world$level$levelgen$Heightmap$Types
	<clinit> ()V <clinit>
fni net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	b MAX_RENDER_DIST
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
fnj net/minecraft/client/renderer/debug/LightSectionDebugRenderer
	a REFRESH_INTERVAL
	b RADIUS
	c LIGHT_AND_BLOCKS_COLOR
	d LIGHT_ONLY_COLOR
	e minecraft
	f lightLayer
	g lastUpdateTime
	h data
	<init> (Lenn;Lcmv;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Leij;Leer;Lhx;Lein;DDDLorg/joml/Vector4f;)V renderFaces
	a (Leij;Leer;Lhx;Lfjx;DDDLorg/joml/Vector4f;)V renderEdges
	a (Leij;Lein;Lha;DDDIIILorg/joml/Vector4f;)V renderFace
	a (Leij;Lein;DDDIIIIIILorg/joml/Vector4f;)V renderEdge
	a (Lhx;Lfjx;Leij;DDDLorg/joml/Vector4f;IIIIII)V lambda$renderEdges$1
	a (Lhx;Leij;Lein;DDDLorg/joml/Vector4f;Lha;III)V lambda$renderFaces$0
	<clinit> ()V <clinit>
fnj$1 net/minecraft/client/renderer/debug/LightSectionDebugRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
fnj$a net/minecraft/client/renderer/debug/LightSectionDebugRenderer$SectionData
	a lightAndBlocksShape
	b lightShape
	c minPos
	<init> (Ldwt;Lhx;ILcmv;)V <init>
fnk net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	<init> (Lenn;)V <init>
	a (JLgu;)V addUpdate
	a (Leij;Lfjx;DDD)V render
	a (Ljava/lang/Long;)Ljava/util/Map; lambda$addUpdate$0
fnl net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	d TIMEOUT
	e MAX_RENDER_DIST
	f SHOW_OPEN_CLOSED
	g SHOW_OPEN_CLOSED_COST_MALUS
	h SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT
	i SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX
	j SHOW_GROUND_LABELS
	k TEXT_SCALE
	<init> ()V <init>
	a (ILdxt;F)V addPath
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;Ldxt;FZZDDD)V renderPath
	a (Leij;Lein;Ldxt;DDD)V renderPathLine
	a (Lgu;DDD)F distanceToCamera
fnm net/minecraft/client/renderer/debug/RaidDebugRenderer
	a MAX_RENDER_DIST
	b TEXT_SCALE
	c minecraft
	d raidCenters
	<init> (Lenn;)V <init>
	a (Ljava/util/Collection;)V setRaidCenters
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;Lgu;)V highlightRaidCenter
	a (Leij;Lfjx;Ljava/lang/String;Lgu;I)V renderTextOverBlock
	b ()Lemz; getCamera
fnn net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
fno net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	e MAX_RENDER_DIST
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Ldrs;Ljava/util/List;Ljava/util/List;Ldfk;)V addBoundingBox
	a ()V clear
fnp net/minecraft/client/renderer/debug/SupportBlockRenderer
	a minecraft
	b lastUpdateTime
	c surroundEntities
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;DDDLbfj;Ljava/util/function/DoubleSupplier;FFF)V drawHighlights
	a (Lbfj;)D getBias
	a (Lgu;Leij;DDDLfjx;DFFF)V highlightPosition
	a (Ljava/util/function/DoubleSupplier;Lbfj;Leij;DDDLfjx;FFFLgu;)V lambda$drawHighlights$2
	b (Lbfj;)D lambda$render$1
	b ()D lambda$render$0
fnq net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer
	a MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS
	b villageSections
	<init> ()V <init>
	a ()V clear
	a (Lhx;)V setVillageSection
	b (Lhx;)V setNotVillageSection
	a (Leij;Lfjx;DDD)V render
	a (Leij;Lfjx;Lhx;)V highlightVillageSection
	a (Lgu;Leij;Lfjx;Lhx;)V lambda$render$0
fnr net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	<init> (Lenn;)V <init>
	a (Leij;Lfjx;DDD)V render
fns net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	<init> ()V <init>
	a (Lgu;FFFFF)V addPos
	a (Leij;Lfjx;DDD)V render
fnt net/minecraft/client/renderer/debug/package-info
fnu net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	<init> (Lfoy$a;Lfbq;F)V <init>
	a (Lbtk;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
fnv net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	<init> (Lfoy$a;Lfdw;Lfdw;Lfdw;)V <init>
	a (Lbwv;)Lacq; getTextureLocation
	b (Lbwv;)Z isShaking
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fnw net/minecraft/client/renderer/entity/AllayRenderer
	a ALLAY_TEXTURE
	<init> (Lfoy$a;)V <init>
	a (Lbsp;)Lacq; getTextureLocation
	a (Lbsp;Lgu;)I getBlockLightLevel
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fnx net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbux;)Lacq; getTextureLocation
	a (Lbux;Leij;FFF)V setupRotations
	b (Lbux;)Z shouldShowName
	a (Lbux;ZZZ)Lfkf; getRenderType
	b (Lbfz;)Z shouldShowName
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfz;ZZZ)Lfkf; getRenderType
	a (Lbfj;)Lacq; getTextureLocation
	b (Lbfj;)Z shouldShowName
	<clinit> ()V <clinit>
fny net/minecraft/client/renderer/entity/ArrowRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbyu;FFLeij;Lfjx;I)V render
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lein;IIIFFIIII)V vertex
	a (Lbfj;FFLeij;Lfjx;I)V render
fnz net/minecraft/client/renderer/entity/AxolotlRenderer
	a TEXTURE_BY_TYPE
	<init> (Lfoy$a;)V <init>
	a (Lbss;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
foa net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrg;)Lacq; getTextureLocation
	a (Lbrg;Leij;F)V scale
	a (Lbrg;Leij;FFF)V setupRotations
	a (Lbfz;Leij;F)V scale
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fob net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	i ANGRY_NECTAR_BEE_TEXTURE
	j BEE_TEXTURE
	k NECTAR_BEE_TEXTURE
	<init> (Lfoy$a;)V <init>
	a (Lbrm;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
foc net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvm;Lgu;)I getBlockLightLevel
	a (Lbvm;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fod net/minecraft/client/renderer/entity/BoatRenderer
	a boatResources
	<init> (Lfoy$a;Z)V <init>
	a (Lfoy$a;Lcah$b;Z)Lfbx; createBoatModel
	a (Lcah$b;Z)Ljava/lang/String; getTextureLocation
	a (Lcah;FFLeij;Lfjx;I)V render
	a (Lcah;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (ZLfoy$a;Lcah$b;)Lcom/mojang/datafixers/util/Pair; lambda$new$1
	a (Lcah$b;)Lcah$b; lambda$new$0
foe net/minecraft/client/renderer/entity/CamelRenderer
	a CAMEL_LOCATION
	<init> (Lfoy$a;Lfec;)V <init>
	a (Lbsx;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fof net/minecraft/client/renderer/entity/CatRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbro;)Lacq; getTextureLocation
	a (Lbro;Leij;F)V scale
	a (Lbro;Leij;FFF)V setupRotations
	a (Lbfz;Leij;F)V scale
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
fog net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	i SCALE
	<init> (Lfoy$a;)V <init>
	a (Lbvn;Leij;F)V scale
	a (Lbvn;)Lacq; getTextureLocation
	a (Lbwn;)Lacq; getTextureLocation
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
foh net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	<init> (Lfoy$a;FLfec;)V <init>
	a (Lbtj;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
foi net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrq;)Lacq; getTextureLocation
	a (Lbrq;F)F getBob
	a (Lbfz;F)F getBob
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
foj net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrr;)Lacq; getTextureLocation
	a (Lbrr;Leij;FFF)V setupRotations
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fok net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrs;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fol net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvo;Leij;F)V scale
	a (Lbvo;F)F getWhiteOverlayProgress
	a (Lbvo;)Lacq; getTextureLocation
	a (Lbfz;Leij;F)V scale
	b (Lbfz;F)F getWhiteOverlayProgress
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fom net/minecraft/client/renderer/entity/DisplayRenderer
	a entityRenderDispatcher
	<init> (Lfoy$a;)V <init>
	a (Lbfi;)Lacq; getTextureLocation
	a (Lbfi;FFLeij;Lfjx;I)V render
	a (Lbfi$j;Lbfi;)Lorg/joml/Quaternionf; calculateOrientation
	b (Lbfi;)Ljava/lang/Object; getSubState
	a (Lbfi;Ljava/lang/Object;Leij;Lfjx;IF)V renderInner
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fom$1 net/minecraft/client/renderer/entity/DisplayRenderer$1
	a $SwitchMap$net$minecraft$world$entity$Display$BillboardConstraints
	b $SwitchMap$net$minecraft$world$entity$Display$TextDisplay$Align
	<clinit> ()V <clinit>
fom$a net/minecraft/client/renderer/entity/DisplayRenderer$BlockDisplayRenderer
	a blockRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbfi$b;)Lbfi$b$a; getSubState
	a (Lbfi$b;Lbfi$b$a;Leij;Lfjx;IF)V renderInner
	a (Lbfi;Ljava/lang/Object;Leij;Lfjx;IF)V renderInner
	b (Lbfi;)Ljava/lang/Object; getSubState
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fom$b net/minecraft/client/renderer/entity/DisplayRenderer$ItemDisplayRenderer
	a itemRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbfi$g;)Lbfi$g$a; getSubState
	a (Lbfi$g;Lbfi$g$a;Leij;Lfjx;IF)V renderInner
	a (Lbfi;Ljava/lang/Object;Leij;Lfjx;IF)V renderInner
	b (Lbfi;)Ljava/lang/Object; getSubState
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fom$c net/minecraft/client/renderer/entity/DisplayRenderer$TextDisplayRenderer
	a font
	<init> (Lfoy$a;)V <init>
	a (Lsw;I)Lbfi$k$b; splitLines
	a (Lbfi$k;)Lbfi$k$e; getSubState
	a (Lbfi$k;Lbfi$k$e;Leij;Lfjx;IF)V renderInner
	a (Lbfi;Ljava/lang/Object;Leij;Lfjx;IF)V renderInner
	b (Lbfi;)Ljava/lang/Object; getSubState
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fon net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrt;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
foo net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	<init> (Lfoy$a;)V <init>
	a (Lbyx;Lgu;)I getBlockLightLevel
	a (Lbyx;FFLeij;Lfjx;I)V render
	a (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (Lbyx;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fop net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwv;)Lacq; getTextureLocation
	a (Lbvq;Leij;FFF)V setupRotations
	a (Lbfz;Leij;FFF)V setupRotations
	<clinit> ()V <clinit>
foq net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvy;Leij;F)V scale
	a (Lbvy;)Lacq; getTextureLocation
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fos net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	f RENDER_TYPE
	g SIN_45
	h GLASS
	i BASE
	j cube
	k glass
	l base
	<init> (Lfoy$a;)V <init>
	a ()Lfek; createBodyLayer
	a (Lbua;FFLeij;Lfjx;I)V render
	a (Lbua;F)F getY
	a (Lbua;)Lacq; getTextureLocation
	a (Lbua;Lfmw;DDD)Z shouldRender
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lfmw;DDD)Z shouldRender
	<clinit> ()V <clinit>
fot net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	f DRAGON_EXPLODING_LOCATION
	g DRAGON_LOCATION
	h DRAGON_EYES_LOCATION
	i RENDER_TYPE
	j DECAL
	k EYES
	l BEAM
	m HALF_SQRT_3
	n model
	<init> (Lfoy$a;)V <init>
	a (Lbub;FFLeij;Lfjx;I)V render
	a (Lein;Lorg/joml/Matrix4f;I)V vertex01
	a (Lein;Lorg/joml/Matrix4f;FF)V vertex2
	b (Lein;Lorg/joml/Matrix4f;FF)V vertex3
	c (Lein;Lorg/joml/Matrix4f;FF)V vertex4
	a (FFFFILeij;Lfjx;I)V renderCrystalBeams
	a (Lbub;)Lacq; getTextureLocation
	a ()Lfek; createBodyLayer
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fot$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	q rightWingTip
	r rightFrontLeg
	s rightFrontLegTip
	t rightFrontFoot
	u rightRearLeg
	w rightRearLegTip
	x rightRearFoot
	y entity
	z a
	<init> (Lfee;)V <init>
	a (Lbub;FFF)V prepareMobModel
	a (Lbub;FFFFF)V setupAnim
	a (Leij;Lein;IIFFFF)V renderToBuffer
	a (Leij;Lein;IIFLfee;Lfee;Lfee;Lfee;Lfee;Lfee;Lfee;F)V renderSide
	a (Lbfj;FFF)V prepareMobModel
	a (Lbfj;FFFFF)V setupAnim
fou net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	i random
	<init> (Lfoy$a;)V <init>
	a (Lbvs;FFLeij;Lfjx;I)V render
	a (Lbvs;F)Leei; getRenderOffset
	a (Lbvs;)Lacq; getTextureLocation
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;F)Leei; getRenderOffset
	<clinit> ()V <clinit>
fov net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvt;)F getFlipDegrees
	b (Lbvt;)Lacq; getTextureLocation
	c (Lbfz;)F getFlipDegrees
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fow net/minecraft/client/renderer/entity/EntityRenderDispatcher
	e SHADOW_RENDER_TYPE
	f MAX_SHADOW_RADIUS
	g SHADOW_POWER_FALLOFF_Y
	h renderers
	i playerRenderers
	a textureManager
	j level
	b camera
	k cameraOrientation
	c crosshairPickEntity
	l itemRenderer
	m blockRenderDispatcher
	n itemInHandRenderer
	o font
	d options
	p entityModels
	q shouldRenderShadow
	r renderHitBoxes
	a (Lbfj;F)I getPackedLightCoords
	<init> (Lenn;Lfuw;Lfpw;Lfko;Leov;Lenr;Lfea;)V <init>
	a (Lbfj;)Lfox; getRenderer
	a (Lcmm;Lemz;Lbfj;)V prepare
	a (Lorg/joml/Quaternionf;)V overrideCameraOrientation
	a (Z)V setRenderShadow
	b (Z)V setRenderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (Lbfj;Lfmw;DDD)Z shouldRender
	a (Lbfj;DDDFFLeij;Lfjx;I)V render
	a (Leij;Lein;Lbfj;F)V renderHitbox
	a (Leij;Lfjx;Lbfj;)V renderFlame
	a (Leij$a;Lein;FFFFF)V fireVertex
	a (Leij;Lfjx;Lbfj;FFLcmp;F)V renderShadow
	a (Leij$a;Lein;Lddx;Lcmp;Lgu;DDDFF)V renderBlockShadow
	a (Leij$a;Lein;FFFFFF)V shadowVertex
	a (Lcmm;)V setLevel
	b (Lbfj;)D distanceToSqr
	a (DDD)D distanceToSqr
	b ()Lorg/joml/Quaternionf; cameraOrientation
	d ()Lfjt; getItemInHandRenderer
	a (Lakx;)V onResourceManagerReload
	<clinit> ()V <clinit>
fox net/minecraft/client/renderer/entity/EntityRenderer
	b NAMETAG_SCALE
	c entityRenderDispatcher
	a font
	d shadowRadius
	e shadowStrength
	<init> (Lfoy$a;)V <init>
	b (Lbfj;F)I getPackedLightCoords
	b (Lbfj;Lgu;)I getSkyLightLevel
	a (Lbfj;Lgu;)I getBlockLightLevel
	a (Lbfj;Lfmw;DDD)Z shouldRender
	a (Lbfj;F)Leei; getRenderOffset
	a (Lbfj;FFLeij;Lfjx;I)V render
	b (Lbfj;)Z shouldShowName
	a (Lbfj;)Lacq; getTextureLocation
	b ()Leov; getFont
	a (Lbfj;Lsw;Leij;Lfjx;I)V renderNameTag
foy net/minecraft/client/renderer/entity/EntityRendererProvider
	create (Lfoy$a;)Lfox; create
foy$a net/minecraft/client/renderer/entity/EntityRendererProvider$Context
	a entityRenderDispatcher
	b itemRenderer
	c blockRenderDispatcher
	d itemInHandRenderer
	e resourceManager
	f modelSet
	g font
	<init> (Lfow;Lfpw;Lfko;Lfjt;Lakx;Lfea;Leov;)V <init>
	a ()Lfow; getEntityRenderDispatcher
	b ()Lfpw; getItemRenderer
	c ()Lfko; getBlockRenderDispatcher
	d ()Lfjt; getItemInHandRenderer
	e ()Lakx; getResourceManager
	f ()Lfea; getModelSet
	g ()Lfwx; getModelManager
	a (Lfec;)Lfee; bakeLayer
	h ()Leov; getFont
foz net/minecraft/client/renderer/entity/EntityRenderers
	b LOGGER
	a DEFAULT_PLAYER_MODEL
	c PROVIDERS
	d PLAYER_PROVIDERS
	<init> ()V <init>
	a (Lbfn;Lfoy;)V register
	a (Lfoy$a;)Ljava/util/Map; createEntityRenderers
	b (Lfoy$a;)Ljava/util/Map; createPlayerRenderers
	a ()Z validateRegistrations
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lfoy$a;Ljava/lang/String;Lfoy;)V lambda$createPlayerRenderers$27
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lfoy$a;Lbfn;Lfoy;)V lambda$createEntityRenderers$26
	c (Lfoy$a;)Lfox; lambda$static$25
	d (Lfoy$a;)Lfox; lambda$static$24
	e (Lfoy$a;)Lfox; lambda$static$23
	f (Lfoy$a;)Lfox; lambda$static$22
	g (Lfoy$a;)Lfox; lambda$static$21
	h (Lfoy$a;)Lfox; lambda$static$20
	i (Lfoy$a;)Lfox; lambda$static$19
	j (Lfoy$a;)Lfox; lambda$static$18
	k (Lfoy$a;)Lfox; lambda$static$17
	l (Lfoy$a;)Lfox; lambda$static$16
	m (Lfoy$a;)Lfox; lambda$static$15
	n (Lfoy$a;)Lfox; lambda$static$14
	o (Lfoy$a;)Lfox; lambda$static$13
	p (Lfoy$a;)Lfox; lambda$static$12
	q (Lfoy$a;)Lfox; lambda$static$11
	r (Lfoy$a;)Lfox; lambda$static$10
	s (Lfoy$a;)Lfox; lambda$static$9
	t (Lfoy$a;)Lfox; lambda$static$8
	u (Lfoy$a;)Lfox; lambda$static$7
	v (Lfoy$a;)Lfox; lambda$static$6
	w (Lfoy$a;)Lfox; lambda$static$5
	x (Lfoy$a;)Lfox; lambda$static$4
	y (Lfoy$a;)Lfox; lambda$static$3
	z (Lfoy$a;)Lfox; lambda$static$2
	A (Lfoy$a;)Lfox; lambda$static$1
	B (Lfoy$a;)Lfox; lambda$static$0
	<clinit> ()V <clinit>
fpa net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	f model
	<init> (Lfoy$a;)V <init>
	a (Lbyy;FFLeij;Lfjx;I)V render
	a (Lbyy;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fpb net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	<init> (Lfoy$a;)V <init>
	a (Lbwm;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpb$1 net/minecraft/client/renderer/entity/EvokerRenderer$1
	a this$0
	<init> (Lfpb;Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbwm;FFFFFF)V render
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fpc net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	f RENDER_TYPE
	<init> (Lfoy$a;)V <init>
	a (Lbfp;Lgu;)I getBlockLightLevel
	a (Lbfp;FFLeij;Lfjx;I)V render
	a (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFIIIFFI)V vertex
	a (Lbfp;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fpd net/minecraft/client/renderer/entity/FallingBlockRenderer
	a dispatcher
	<init> (Lfoy$a;)V <init>
	a (Lbvg;FFLeij;Lfjx;I)V render
	a (Lbvg;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fpe net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbzb;FFLeij;Lfjx;I)V render
	a (Lbzb;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fpf net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g VIEW_BOBBING_SCALE
	<init> (Lfoy$a;)V <init>
	a (Lbzc;FFLeij;Lfjx;I)V render
	a (II)F fraction
	a (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (FFFLein;Leij$a;FF)V stringVertex
	a (Lbzc;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fpg net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	i RED_FOX_SLEEP_TEXTURE
	j SNOW_FOX_TEXTURE
	k SNOW_FOX_SLEEP_TEXTURE
	<init> (Lfoy$a;)V <init>
	a (Lbrv;Leij;FFF)V setupRotations
	a (Lbrv;)Lacq; getTextureLocation
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fph net/minecraft/client/renderer/entity/FrogRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbta;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
fpi net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	i GHAST_SHOOTING_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvw;)Lacq; getTextureLocation
	a (Lbvw;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpj net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	i scale
	<init> (Lfoy$a;F)V <init>
	a (Lbvx;Leij;F)V scale
	a (Lbvx;)Lacq; getTextureLocation
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpk net/minecraft/client/renderer/entity/GlowSquidRenderer
	a GLOW_SQUID_LOCATION
	<init> (Lfoy$a;Lfdh;)V <init>
	a (Lbfr;)Lacq; getTextureLocation
	a (Lbfr;Lgu;)I getBlockLightLevel
	a (Lbsk;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fpl net/minecraft/client/renderer/entity/GoatRenderer
	a GOAT_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbtg;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpm net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	i GUARDIAN_BEAM_LOCATION
	j BEAM_RENDER_TYPE
	<init> (Lfoy$a;)V <init>
	<init> (Lfoy$a;FLfec;)V <init>
	a (Lbvy;Lfmw;DDD)Z shouldRender
	a (Lbfz;DF)Leei; getPosition
	a (Lbvy;FFLeij;Lfjx;I)V render
	a (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFFIIIFF)V vertex
	a (Lbvy;)Lacq; getTextureLocation
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbgb;Lfmw;DDD)Z shouldRender
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lfmw;DDD)Z shouldRender
	<clinit> ()V <clinit>
fpn net/minecraft/client/renderer/entity/HoglinRenderer
	a HOGLIN_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwy;)Lacq; getTextureLocation
	b (Lbwy;)Z isShaking
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpo net/minecraft/client/renderer/entity/HorseRenderer
	a LOCATION_BY_VARIANT
	<init> (Lfoy$a;)V <init>
	a (Lbtm;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
fpp net/minecraft/client/renderer/entity/HumanoidMobRenderer
	<init> (Lfoy$a;Lfbs;F)V <init>
	<init> (Lfoy$a;Lfbs;FFFF)V <init>
fpq net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwv;Leij;F)V scale
	a (Lbwv;)Lacq; getTextureLocation
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpr net/minecraft/client/renderer/entity/IllagerRenderer
	<init> (Lfoy$a;Lfbt;F)V <init>
	a (Lbvk;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
fps net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	<init> (Lfoy$a;)V <init>
	a (Lbwa;)Lacq; getTextureLocation
	a (Lbwa;FFLeij;Lfjx;I)V render
	b (Lbwa;)Z isBodyVisible
	a (Lbgb;FFLeij;Lfjx;I)V render
	d (Lbfz;)Z isBodyVisible
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fps$1 net/minecraft/client/renderer/entity/IllusionerRenderer$1
	a this$0
	<init> (Lfps;Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbwa;FFFFFF)V render
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fpt net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrx;)Lacq; getTextureLocation
	a (Lbrx;Leij;FFF)V setupRotations
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fpu net/minecraft/client/renderer/entity/ItemEntityRenderer
	a ITEM_BUNDLE_OFFSET_SCALE
	f ITEM_COUNT_FOR_5_BUNDLE
	g ITEM_COUNT_FOR_4_BUNDLE
	h ITEM_COUNT_FOR_3_BUNDLE
	i ITEM_COUNT_FOR_2_BUNDLE
	j FLAT_ITEM_BUNDLE_OFFSET_X
	k FLAT_ITEM_BUNDLE_OFFSET_Y
	l FLAT_ITEM_BUNDLE_OFFSET_Z
	m itemRenderer
	n random
	<init> (Lfoy$a;)V <init>
	a (Lcfz;)I getRenderAmount
	a (Lbvh;FFLeij;Lfjx;I)V render
	a (Lbvh;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fpv net/minecraft/client/renderer/entity/ItemFrameRenderer
	g FRAME_LOCATION
	h MAP_FRAME_LOCATION
	i GLOW_FRAME_LOCATION
	j GLOW_MAP_FRAME_LOCATION
	a GLOW_FRAME_BRIGHTNESS
	f BRIGHT_MAP_LIGHT_ADJUSTMENT
	k itemRenderer
	l blockRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbva;Lgu;)I getBlockLightLevel
	a (Lbva;FFLeij;Lfjx;I)V render
	a (Lbva;II)I getLightVal
	a (Lbva;Lcfz;)Lfwy; getFrameModelResourceLoc
	a (Lbva;F)Leei; getRenderOffset
	a (Lbva;)Lacq; getTextureLocation
	b (Lbva;)Z shouldShowName
	a (Lbva;Lsw;Leij;Lfjx;I)V renderNameTag
	a (Lbfj;Lsw;Leij;Lfjx;I)V renderNameTag
	a (Lbfj;)Lacq; getTextureLocation
	b (Lbfj;)Z shouldShowName
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;F)Leei; getRenderOffset
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fpw net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANTED_GLINT_ENTITY
	b ENCHANTED_GLINT_ITEM
	k IGNORED
	c GUI_SLOT_CENTER_X
	d GUI_SLOT_CENTER_Y
	e ITEM_COUNT_BLIT_OFFSET
	f COMPASS_FOIL_UI_SCALE
	g COMPASS_FOIL_FIRST_PERSON_SCALE
	h COMPASS_FOIL_TEXTURE_SCALE
	l TRIDENT_MODEL
	i TRIDENT_IN_HAND_MODEL
	m SPYGLASS_MODEL
	j SPYGLASS_IN_HAND_MODEL
	n minecraft
	o itemModelShaper
	p textureManager
	q itemColors
	r blockEntityRenderer
	<init> (Lenn;Lfuw;Lfwx;Leos;Lfjj;)V <init>
	a ()Lfju; getItemModelShaper
	a (Lfwr;Lcfz;IILeij;Lein;)V renderModelLists
	a (Lcfz;Lcfw;ZLeij;Lfjx;IILfwr;)V render
	a (Lcfz;)Z hasAnimatedTexture
	a (Lfjx;Lfkf;ZZ)Lein; getArmorFoilBuffer
	a (Lfjx;Lfkf;Leij$a;)Lein; getCompassFoilBuffer
	b (Lfjx;Lfkf;Leij$a;)Lein; getCompassFoilBufferDirect
	b (Lfjx;Lfkf;ZZ)Lein; getFoilBuffer
	c (Lfjx;Lfkf;ZZ)Lein; getFoilBufferDirect
	a (Leij;Lein;Ljava/util/List;Lcfz;II)V renderQuadList
	a (Lcfz;Lcmm;Lbfz;I)Lfwr; getModel
	a (Lcfz;Lcfw;IILeij;Lfjx;Lcmm;I)V renderStatic
	a (Lbfz;Lcfz;Lcfw;ZLeij;Lfjx;Lcmm;III)V renderStatic
	a (Lakx;)V onResourceManagerReload
	<clinit> ()V <clinit>
fpx net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	f model
	<init> (Lfoy$a;)V <init>
	a (Lbvb;FFLeij;Lfjx;I)V render
	a (Lbvb;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fpy net/minecraft/client/renderer/entity/LightningBoltRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbfy;FFLeij;Lfjx;I)V render
	a (Lorg/joml/Matrix4f;Lein;FFIFFFFFFFZZZZ)V quad
	a (Lbfy;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fpz net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	h EYE_BED_OFFSET
	f model
	g layers
	<init> (Lfoy$a;Lfbf;F)V <init>
	a (Lftg;)Z addLayer
	a ()Lfbf; getModel
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfz;ZZZ)Lfkf; getRenderType
	c (Lbfz;F)I getOverlayCoords
	d (Lbfz;)Z isBodyVisible
	a (Lha;)F sleepDirectionToRotation
	a (Lbfz;)Z isShaking
	a (Lbfz;Leij;FFF)V setupRotations
	d (Lbfz;F)F getAttackAnim
	a (Lbfz;F)F getBob
	c (Lbfz;)F getFlipDegrees
	b (Lbfz;F)F getWhiteOverlayProgress
	a (Lbfz;Leij;F)V scale
	b (Lbfz;)Z shouldShowName
	e (Lbfz;)Z isEntityUpsideDown
	b (Lbfj;)Z shouldShowName
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fpz$1 net/minecraft/client/renderer/entity/LivingEntityRenderer$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$scores$Team$Visibility
	<clinit> ()V <clinit>
fqa net/minecraft/client/renderer/entity/LlamaRenderer
	a CREAMY
	i WHITE
	j BROWN
	k GRAY
	<init> (Lfoy$a;Lfec;)V <init>
	a (Lbtn;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqa$1 net/minecraft/client/renderer/entity/LlamaRenderer$1
	a $SwitchMap$net$minecraft$world$entity$animal$horse$Llama$Variant
	<clinit> ()V <clinit>
fqb net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	f model
	<init> (Lfoy$a;)V <init>
	a (Lbzf;FFLeij;Lfjx;I)V render
	a (Lbzf;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fqc net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwb;Lgu;)I getBlockLightLevel
	a (Lbwb;)Lacq; getTextureLocation
	a (Lbwb;FFLeij;Lfjx;I)V render
	a (Lbwb;Leij;F)V scale
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;Leij;F)V scale
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fqd net/minecraft/client/renderer/entity/MinecartRenderer
	f MINECART_LOCATION
	a model
	g blockRenderer
	<init> (Lfoy$a;Lfec;)V <init>
	a (Lcaf;FFLeij;Lfjx;I)V render
	a (Lcaf;)Lacq; getTextureLocation
	a (Lcaf;FLdcb;Leij;Lfjx;I)V renderMinecartContents
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fqe net/minecraft/client/renderer/entity/MobRenderer
	h LEASH_RENDER_STEPS
	<init> (Lfoy$a;Lfbf;F)V <init>
	a (Lbgb;)Z shouldShowName
	a (Lbgb;Lfmw;DDD)Z shouldRender
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbgb;FLeij;Lfjx;Lbfj;)V renderLeash
	a (Lein;Lorg/joml/Matrix4f;FFFIIIIFFFFIZ)V addVertexPair
	b (Lbfz;)Z shouldShowName
	a (Lbfz;FFLeij;Lfjx;I)V render
	b (Lbfj;)Z shouldShowName
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lfmw;DDD)Z shouldRender
fqf net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	<init> (Lfoy$a;)V <init>
	a (Lbry;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
fqg net/minecraft/client/renderer/entity/NoopRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbfj;)Lacq; getTextureLocation
fqh net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbrz;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqi net/minecraft/client/renderer/entity/PaintingRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbvc;FFLeij;Lfjx;I)V render
	a (Lbvc;)Lacq; getTextureLocation
	a (Leij;Lein;Lbvc;IILfuv;Lfuv;)V renderPainting
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lein;FFFFFIIII)V vertex
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fqj net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	<init> (Lfoy$a;)V <init>
	a (Lbsa;)Lacq; getTextureLocation
	a (Lbsa;Leij;FFF)V setupRotations
	a (FFIFF)F getAngle
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
fqk net/minecraft/client/renderer/entity/ParrotRenderer
	a RED_BLUE
	i BLUE
	j GREEN
	k YELLOW_BLUE
	l GREY
	<init> (Lfoy$a;)V <init>
	a (Lbsb;)Lacq; getTextureLocation
	a (Lbsb$b;)Lacq; getVariantTexture
	a (Lbsb;F)F getBob
	a (Lbfz;F)F getBob
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqk$1 net/minecraft/client/renderer/entity/ParrotRenderer$1
	a $SwitchMap$net$minecraft$world$entity$animal$Parrot$Variant
	<clinit> ()V <clinit>
fql net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwe;)Lacq; getTextureLocation
	a (Lbwe;Leij;F)V scale
	a (Lbwe;Leij;FFF)V setupRotations
	a (Lbfz;Leij;F)V scale
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqm net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsc;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqn net/minecraft/client/renderer/entity/PiglinRenderer
	a TEXTURES
	i PIGLIN_CUSTOM_HEAD_SCALE
	<init> (Lfoy$a;Lfec;Lfec;Lfec;Z)V <init>
	a (Lfea;Lfec;Z)Lfcj; createModel
	b (Lbgb;)Lacq; getTextureLocation
	c (Lbgb;)Z isShaking
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqo net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	<init> (Lfoy$a;)V <init>
	a (Lbwf;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqp net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsd;)Lacq; getTextureLocation
	a (Lbsd;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqq net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	i puffStateO
	j small
	k mid
	l big
	<init> (Lfoy$a;)V <init>
	a (Lbse;)Lacq; getTextureLocation
	a (Lbse;FFLeij;Lfjx;I)V render
	a (Lbse;Leij;FFF)V setupRotations
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fqr net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	i RABBIT_WHITE_LOCATION
	j RABBIT_BLACK_LOCATION
	k RABBIT_GOLD_LOCATION
	l RABBIT_SALT_LOCATION
	m RABBIT_WHITE_SPLOTCHED_LOCATION
	n RABBIT_TOAST_LOCATION
	o RABBIT_EVIL_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsf;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqr$1 net/minecraft/client/renderer/entity/RabbitRenderer$1
	a $SwitchMap$net$minecraft$world$entity$animal$Rabbit$Variant
	<clinit> ()V <clinit>
fqs net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwh;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqt net/minecraft/client/renderer/entity/RenderLayerParent
	a ()Lfbf; getModel
	a (Lbfj;)Lacq; getTextureLocation
fqu net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsg;)Lacq; getTextureLocation
	a (Lbsg;Leij;FFF)V setupRotations
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqv net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsh;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqw net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g model
	<init> (Lfoy$a;)V <init>
	a (Lbzi;Lgu;)I getBlockLightLevel
	a (Lbzi;FFLeij;Lfjx;I)V render
	a (Lbzi;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fqx net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	i TEXTURE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwi;F)Leei; getRenderOffset
	a (Lbwi;Lfmw;DDD)Z shouldRender
	a (Lbwi;)Lacq; getTextureLocation
	a (Lcen;)Lacq; getTextureLocation
	a (Lbwi;Leij;FFF)V setupRotations
	a (Lbgb;Lfmw;DDD)Z shouldRender
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;F)Leei; getRenderOffset
	a (Lbfj;Lfmw;DDD)Z shouldRender
	a (Lbwi;Lfmw;Leei;)Z lambda$shouldRender$2
	a (I)[Lacq; lambda$static$1
	a (Lfwu;)Lacq; lambda$static$0
	<clinit> ()V <clinit>
fqy net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwj;)F getFlipDegrees
	b (Lbwj;)Lacq; getTextureLocation
	c (Lbfz;)F getFlipDegrees
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fqz net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	<init> (Lfoy$a;)V <init>
	<init> (Lfoy$a;Lfec;Lfec;Lfec;)V <init>
	a (Lbvl;)Lacq; getTextureLocation
	b (Lbvl;)Z isShaking
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fra net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwl;FFLeij;Lfjx;I)V render
	a (Lbwl;Leij;F)V scale
	a (Lbwl;)Lacq; getTextureLocation
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;Leij;F)V scale
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
frb net/minecraft/client/renderer/entity/SnifferRenderer
	a SNIFFER_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbtx;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frc net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsj;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frd net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbzl;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fre net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	<init> (Lfoy$a;)V <init>
	<init> (Lfoy$a;Lfec;)V <init>
	b (Lbwn;)F getFlipDegrees
	a (Lbwn;)Lacq; getTextureLocation
	c (Lbfz;)F getFlipDegrees
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frf net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	<init> (Lfoy$a;Lfdh;)V <init>
	a (Lbsk;)Lacq; getTextureLocation
	a (Lbsk;Leij;FFF)V setupRotations
	a (Lbsk;F)F getBob
	a (Lbfz;F)F getBob
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frg net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvl;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frh net/minecraft/client/renderer/entity/StriderRenderer
	a STRIDER_LOCATION
	i COLD_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwp;)Lacq; getTextureLocation
	a (Lbwp;Leij;F)V scale
	b (Lbwp;)Z isShaking
	a (Lbfz;Leij;F)V scale
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fri net/minecraft/client/renderer/entity/TadpoleRenderer
	a TADPOLE_TEXTURE
	<init> (Lfoy$a;)V <init>
	a (Lbtd;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frj net/minecraft/client/renderer/entity/ThrownItemRenderer
	a MIN_CAMERA_DISTANCE_SQUARED
	f itemRenderer
	g scale
	h fullBright
	<init> (Lfoy$a;FZ)V <init>
	<init> (Lfoy$a;)V <init>
	a (Lbfj;Lgu;)I getBlockLightLevel
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
frk net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	f model
	<init> (Lfoy$a;)V <init>
	a (Lbzs;FFLeij;Lfjx;I)V render
	a (Lbzs;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
frl net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	f TIPPED_ARROW_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbyw;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frm net/minecraft/client/renderer/entity/TntMinecartRenderer
	f blockRenderer
	<init> (Lfoy$a;)V <init>
	a (Lcar;FLdcb;Leij;Lfjx;I)V renderMinecartContents
	a (Lfko;Ldcb;Leij;Lfjx;IZ)V renderWhiteSolidBlock
	a (Lcaf;FLdcb;Leij;Lfjx;I)V renderMinecartContents
frn net/minecraft/client/renderer/entity/TntRenderer
	a blockRenderer
	<init> (Lfoy$a;)V <init>
	a (Lbvi;FFLeij;Lfjx;I)V render
	a (Lbvi;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
fro net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	i modelB
	j MODEL_A_TEXTURE
	k MODEL_B_TEXTURE
	<init> (Lfoy$a;)V <init>
	a (Lbsl;)Lacq; getTextureLocation
	a (Lbsl;FFLeij;Lfjx;I)V render
	a (Lbsl;Leij;FFF)V setupRotations
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fro$1 net/minecraft/client/renderer/entity/TropicalFishRenderer$1
	a $SwitchMap$net$minecraft$world$entity$animal$TropicalFish$Base
	<clinit> ()V <clinit>
frp net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbsm;FFLeij;Lfjx;I)V render
	a (Lbsm;)Lacq; getTextureLocation
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
frq net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	<init> (Lfoy$a;Lfec;)V <init>
	a (Lbtk;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frr net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	i VEX_CHARGING_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwq;Lgu;)I getBlockLightLevel
	a (Lbwq;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
frs net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	<init> (Lfoy$a;)V <init>
	a (Lbyb;)Lacq; getTextureLocation
	a (Lbyb;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frt net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	<init> (Lfoy$a;)V <init>
	a (Lbwr;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frt$1 net/minecraft/client/renderer/entity/VindicatorRenderer$1
	a this$0
	<init> (Lfrt;Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbwr;FFFFFF)V render
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fru net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	<init> (Lfoy$a;)V <init>
	a (Lbyh;)Lacq; getTextureLocation
	a (Lbyh;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frv net/minecraft/client/renderer/entity/WardenRenderer
	a TEXTURE
	i BIOLUMINESCENT_LAYER_TEXTURE
	j HEART_TEXTURE
	k PULSATING_SPOTS_TEXTURE_1
	l PULSATING_SPOTS_TEXTURE_2
	<init> (Lfoy$a;)V <init>
	a (Lbxs;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbxs;FF)F lambda$new$4
	b (Lbxs;FF)F lambda$new$3
	c (Lbxs;FF)F lambda$new$2
	d (Lbxs;FF)F lambda$new$1
	e (Lbxs;FF)F lambda$new$0
	<clinit> ()V <clinit>
frw net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbws;FFLeij;Lfjx;I)V render
	a (Lbws;)Lacq; getTextureLocation
	a (Lbws;Leij;F)V scale
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;Leij;F)V scale
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
frx net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	i WITHER_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbuv;Lgu;)I getBlockLightLevel
	a (Lbuv;)Lacq; getTextureLocation
	a (Lbuv;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fry net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbvl;)Lacq; getTextureLocation
	a (Lbvl;Leij;F)V scale
	a (Lbfz;Leij;F)V scale
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
frz net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	f WITHER_LOCATION
	g model
	<init> (Lfoy$a;)V <init>
	a ()Lfek; createSkullLayer
	a (Lbzt;Lgu;)I getBlockLightLevel
	a (Lbzt;FFLeij;Lfjx;I)V render
	a (Lbzt;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;Lgu;)I getBlockLightLevel
	<clinit> ()V <clinit>
fsa net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	i WOLF_TAME_LOCATION
	j WOLF_ANGRY_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbso;F)F getBob
	a (Lbso;FFLeij;Lfjx;I)V render
	a (Lbso;)Lacq; getTextureLocation
	a (Lbgb;FFLeij;Lfjx;I)V render
	a (Lbfz;F)F getBob
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;FFLeij;Lfjx;I)V render
	<clinit> ()V <clinit>
fsb net/minecraft/client/renderer/entity/ZoglinRenderer
	a ZOGLIN_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbwu;)Lacq; getTextureLocation
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fsc net/minecraft/client/renderer/entity/ZombieRenderer
	<init> (Lfoy$a;)V <init>
	<init> (Lfoy$a;Lfec;Lfec;Lfec;)V <init>
fsd net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	<init> (Lfoy$a;)V <init>
	a (Lbww;)Lacq; getTextureLocation
	b (Lbww;)Z isShaking
	a (Lbfz;)Z isShaking
	a (Lbfj;)Lacq; getTextureLocation
	<clinit> ()V <clinit>
fse net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	<init> (Lfoy$a;Lfpz;)V <init>
	a (Lbfz;)I numStuck
	a (Leij;Lfjx;ILbfj;FFFF)V renderStuckItem
fsf net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	<init> (Lfpz;)V <init>
	a (Lbfz;)I numStuck
	a (Leij;Lfjx;ILbfj;FFFF)V renderStuckItem
	a (Lein;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FIFFI)V vertex
	<clinit> ()V <clinit>
fsg net/minecraft/client/renderer/entity/layers/CapeLayer
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILfiv;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsh net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a blockRenderer
	<init> (Lfqt;Lfko;)V <init>
	a (Leij;Lfjx;ILbvs;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsi net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbro;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
fsj net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	<init> (Lfqt;Lfea;)V <init>
	a (F)F xOffset
	a ()Lacq; getTextureLocation
	b ()Lfbf; model
	<clinit> ()V <clinit>
fsk net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	a itemInHandRenderer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsl net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a scaleX
	b scaleY
	c scaleZ
	d skullModels
	e itemInHandRenderer
	<init> (Lfqt;Lfea;Lfjt;)V <init>
	<init> (Lfqt;Lfea;FFFLfjt;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Z)V translateToHead
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsm net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILfiv;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsn net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a itemInHandRenderer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbrt;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fso net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbvq;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
fsp net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
fsq net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	<init> (Lfqt;)V <init>
	a ()Lfkf; renderType
	<clinit> ()V <clinit>
fsr net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (F)F xOffset
	a ()Lacq; getTextureLocation
	b ()Lfbf; model
fss net/minecraft/client/renderer/entity/layers/EyesLayer
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a ()Lfkf; renderType
fst net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a itemInHandRenderer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbrv;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsu net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbtm;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsv net/minecraft/client/renderer/entity/layers/HorseMarkingLayer
	a LOCATION_BY_MARKINGS
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbtm;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
fsw net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a ARMOR_LOCATION_CACHE
	b innerModel
	c outerModel
	d armorTrimAtlas
	<init> (Lfqt;Lfbs;Lfbs;Lfwx;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;Lbfz;Lbfo;ILfbs;)V renderArmorPiece
	a (Lfbs;Lbfo;)V setPartVisibility
	a (Leij;Lfjx;ILcdj;Lfbs;ZFFFLjava/lang/String;)V renderModel
	a (Lcdk;Leij;Lfjx;ILcib;Lfbs;Z)V renderTrim
	a (Leij;Lfjx;ILfbs;)V renderGlint
	a (Lbfo;)Lfbs; getArmorModel
	b (Lbfo;)Z usesInnerModel
	a (Lcdj;ZLjava/lang/String;)Lacq; getArmorLocation
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (Lcdj;Leij;Lfjx;ILfbs;ZLcib;)V lambda$renderArmorPiece$0
	<clinit> ()V <clinit>
fsw$1 net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
fsx net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbrx;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
fsy net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a blockRenderer
	<init> (Lfqt;Lfko;)V <init>
	a (Leij;Lfjx;ILbrx;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fsz net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a itemInHandRenderer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Lbfz;Lcfz;Lcfw;Lbft;Leij;Lfjx;I)V renderArmWithItem
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fta net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbtn;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
ftb net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a blockRenderer
	<init> (Lfqt;Lfko;)V <init>
	a (Leij;Lfjx;ILbry;FFFFFF)V render
	a (Leij;Lfjx;IZLdcb;ILfwr;)V renderMushroomBlock
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftc net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a itemInHandRenderer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbsa;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftd net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbyo;FFFFFF)V render
	a (Leij;Lfjx;ILbyo;FFFFZ)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (Leij;ZLbyo;Lqr;Lfjx;IFFFFLbfn;)V lambda$render$1
	a (Lbfn;)Z lambda$render$0
fte net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	<init> (Lfqt;)V <init>
	a ()Lfkf; renderType
	<clinit> ()V <clinit>
ftf net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer
	a itemInHandRenderer
	b X_ROT_MIN
	c X_ROT_MAX
	<init> (Lfqt;Lfjt;)V <init>
	a (Lbfz;Lcfz;Lcfw;Lbft;Leij;Lfjx;I)V renderArmWithItem
	a (Lbfz;Lcfz;Lbft;Leij;Lfjx;I)V renderArmWithSpyglass
ftg net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	<init> (Lfqt;)V <init>
	a (Lfbf;Lfbf;Lacq;Leij;Lfjx;ILbfz;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Lfbf;Lacq;Leij;Lfjx;ILbfz;FFF)V renderColoredCutoutModel
	c ()Lfbf; getParentModel
	a (Lbfj;)Lacq; getTextureLocation
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fth net/minecraft/client/renderer/entity/layers/SaddleLayer
	a textureLocation
	b model
	<init> (Lfqt;Lfbf;Lacq;)V <init>
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
fti net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbsh;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
ftj net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbwi;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftk net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftl net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a blockRenderer
	b itemRenderer
	<init> (Lfqt;Lfko;Lfpw;)V <init>
	a (Leij;Lfjx;ILbsj;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftm net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	<init> (Lfqt;)V <init>
	a ()Lfkf; renderType
	<clinit> ()V <clinit>
ftn net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b BOX
	c box
	<init> (Lfqt;Lfea;)V <init>
	a ()Lfek; createLayer
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
fto net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbgb;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
ftp net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	<init> (Lfpz;)V <init>
	a (Lbfz;)I numStuck
	a (Leij;Lfjx;ILbfj;FFFF)V renderStuckItem
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftq net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a KOB_TEXTURE
	b SUNSTREAK_TEXTURE
	c SNOOPER_TEXTURE
	d DASHER_TEXTURE
	e BRINELY_TEXTURE
	f SPOTTY_TEXTURE
	g FLOPPER_TEXTURE
	h STRIPEY_TEXTURE
	i GLITTER_TEXTURE
	j BLOCKFISH_TEXTURE
	k BETTY_TEXTURE
	l CLAYFISH_TEXTURE
	m modelA
	n modelB
	<init> (Lfqt;Lfea;)V <init>
	a (Leij;Lfjx;ILbsl;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
ftq$1 net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer$1
	a $SwitchMap$net$minecraft$world$entity$animal$TropicalFish$Base
	b $SwitchMap$net$minecraft$world$entity$animal$TropicalFish$Pattern
	<clinit> ()V <clinit>
ftr net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	<init> (Lfqt;Lakx;Ljava/lang/String;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Ljava/lang/String;Lacq;)Lacq; getResourceLocation
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lgz;Ljava/lang/Object;)Lfwh$a; getHatData
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (Ljava/lang/String;Lgz;Ljava/lang/Object;Ljava/lang/Object;)Lfwh$a; lambda$getHatData$3
	a (Lakv;)Ljava/util/Optional; lambda$getHatData$2
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$getResourceLocation$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
fts net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer
	a texture
	b alphaFunction
	c drawSelector
	<init> (Lfqt;Lacq;Lfts$a;Lfts$b;)V <init>
	a (Leij;Lfjx;ILbxs;FFFFFF)V render
	a ()V onlyDrawSelectedParts
	b ()V resetDrawForAllParts
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	a (Lfee;)V lambda$resetDrawForAllParts$2
	b (Lfee;)V lambda$onlyDrawSelectedParts$1
	c (Lfee;)V lambda$onlyDrawSelectedParts$0
fts$a net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction
	apply (Lbxs;FF)F apply
fts$b net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector
	getPartsToDraw (Lfbf;)Ljava/util/List; getPartsToDraw
ftt net/minecraft/client/renderer/entity/layers/WitchItemLayer
	<init> (Lfqt;Lfjt;)V <init>
	a (Leij;Lfjx;ILbfz;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
ftu net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	<init> (Lfqt;Lfea;)V <init>
	a (F)F xOffset
	a ()Lacq; getTextureLocation
	b ()Lfbf; model
	<clinit> ()V <clinit>
ftv net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	<init> (Lfqt;)V <init>
	a (Leij;Lfjx;ILbso;FFFFFF)V render
	a (Leij;Lfjx;ILbfj;FFFFFF)V render
	<clinit> ()V <clinit>
ftw net/minecraft/client/renderer/entity/layers/package-info
ftx net/minecraft/client/renderer/entity/package-info
fty net/minecraft/client/renderer/entity/player/PlayerRenderer
	<init> (Lfoy$a;Z)V <init>
	a (Lfiv;FFLeij;Lfjx;I)V render
	a (Lfiv;F)Leei; getRenderOffset
	b (Lfiv;)V setModelProperties
	a (Lfiv;Lbdw;)Lfbs$a; getArmPose
	a (Lfiv;)Lacq; getTextureLocation
	a (Lfiv;Leij;F)V scale
	a (Lfiv;Lsw;Leij;Lfjx;I)V renderNameTag
	a (Leij;Lfjx;ILfiv;)V renderRightHand
	b (Leij;Lfjx;ILfiv;)V renderLeftHand
	a (Leij;Lfjx;ILfiv;Lfee;Lfee;)V renderHand
	a (Lfiv;Leij;FFF)V setupRotations
	a (Lbfz;Leij;F)V scale
	a (Lbfz;Leij;FFF)V setupRotations
	a (Lbfz;FFLeij;Lfjx;I)V render
	a (Lbfj;)Lacq; getTextureLocation
	a (Lbfj;Lsw;Leij;Lfjx;I)V renderNameTag
	a (Lbfj;FFLeij;Lfjx;I)V render
	a (Lbfj;F)Leei; getRenderOffset
ftz net/minecraft/client/renderer/entity/player/package-info
fua net/minecraft/client/renderer/item/ClampedItemPropertyFunction
	call (Lcfz;Lfew;Lbfz;I)F call
	unclampedCall (Lcfz;Lfew;Lbfz;I)F unclampedCall
fub net/minecraft/client/renderer/item/CompassItemPropertyFunction
	a DEFAULT_ROTATION
	c wobble
	d wobbleRandom
	b compassTarget
	<init> (Lfub$a;)V <init>
	unclampedCall (Lcfz;Lfew;Lbfz;I)F unclampedCall
	a (Lcfz;Lfew;ILbfj;)F getCompassRotation
	a (IJ)F getRandomlySpinningRotation
	a (Lbfj;JLgu;)F getRotationTowardsCompassTarget
	a (Lbfj;Lfew;)Lfew; tryFetchLevelIfMissing
	a (Lbfj;Lhd;)Z isValidCompassTargetPos
	a (Lbfj;Lgu;)D getAngleFromEntityToPos
	a (Lbfj;)D getWrappedVisualRotationY
	a (I)I hash
fub$a net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget
	getPos (Lfew;Lcfz;Lbfj;)Lhd; getPos
fub$b net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble
	a rotation
	b deltaRotation
	c lastUpdateTick
	<init> ()V <init>
	a (J)Z shouldUpdate
	a (JD)V update
fuc net/minecraft/client/renderer/item/ItemProperties
	a GENERIC_PROPERTIES
	b TAG_CUSTOM_MODEL_DATA
	c DAMAGED
	d DAMAGE
	e PROPERTY_DAMAGED
	f PROPERTY_DAMAGE
	g PROPERTIES
	<init> ()V <init>
	a (Lacq;Lfua;)Lfua; registerGeneric
	a (Lfud;)V registerCustomModelData
	a (Lcfu;Lacq;Lfua;)V register
	a (Lcfu;Lacq;)Lfud; getProperty
	a (Lcfz;Lfew;Lbfz;I)F lambda$static$22
	b (Lcfz;Lfew;Lbfz;I)F lambda$static$21
	c (Lcfz;Lfew;Lbfz;I)F lambda$static$20
	d (Lcfz;Lfew;Lbfz;I)F lambda$static$19
	e (Lcfz;Lfew;Lbfz;I)F lambda$static$18
	f (Lcfz;Lfew;Lbfz;I)F lambda$static$17
	g (Lcfz;Lfew;Lbfz;I)F lambda$static$16
	h (Lcfz;Lfew;Lbfz;I)F lambda$static$15
	i (Lcfz;Lfew;Lbfz;I)F lambda$static$14
	j (Lcfz;Lfew;Lbfz;I)F lambda$static$13
	a (Lfew;Lcfz;Lbfj;)Lhd; lambda$static$12
	b (Lfew;Lcfz;Lbfj;)Lhd; lambda$static$11
	k (Lcfz;Lfew;Lbfz;I)F lambda$static$10
	l (Lcfz;Lfew;Lbfz;I)F lambda$static$9
	m (Lcfz;Lfew;Lbfz;I)F lambda$static$8
	n (Lcfz;Lfew;Lbfz;I)F lambda$static$7
	o (Lcfz;Lfew;Lbfz;I)F lambda$static$6
	p (Lcfz;Lfew;Lbfz;I)F lambda$static$5
	q (Lcfz;Lfew;Lbfz;I)F lambda$static$4
	r (Lcfz;Lfew;Lbfz;I)F lambda$static$3
	a (Lcfu;)Ljava/util/Map; lambda$register$2
	s (Lcfz;Lfew;Lbfz;I)F lambda$static$1
	t (Lcfz;Lfew;Lbfz;I)F lambda$static$0
	<clinit> ()V <clinit>
fuc$1 net/minecraft/client/renderer/item/ItemProperties$1
	a rotation
	b rota
	c lastUpdateTick
	<init> ()V <init>
	unclampedCall (Lcfz;Lfew;Lbfz;I)F unclampedCall
	a (Lcmm;D)D wobble
fud net/minecraft/client/renderer/item/ItemPropertyFunction
	call (Lcfz;Lfew;Lbfz;I)F call
fue net/minecraft/client/renderer/item/package-info
fuf net/minecraft/client/renderer/package-info
fug net/minecraft/client/renderer/texture/AbstractTexture
	a NOT_ASSIGNED
	b id
	c blur
	d mipmap
	<init> ()V <init>
	a (ZZ)V setFilter
	a ()I getId
	b ()V releaseId
	a (Lakx;)V load
	c ()V bind
	a (Lfuw;Lakx;Lacq;Ljava/util/concurrent/Executor;)V reset
	close ()V close
	d ()V lambda$bind$1
	e ()V lambda$releaseId$0
fuh net/minecraft/client/renderer/texture/Dumpable
	a (Lacq;Ljava/nio/file/Path;)V dumpContents
fui net/minecraft/client/renderer/texture/DynamicTexture
	e LOGGER
	f pixels
	<init> (Lehk;)V <init>
	<init> (IIZ)V <init>
	a (Lakx;)V load
	d ()V upload
	e ()Lehk; getPixels
	a (Lehk;)V setPixels
	close ()V close
	a (Lacq;Ljava/nio/file/Path;)V dumpContents
	f ()V lambda$new$0
	<clinit> ()V <clinit>
fuj net/minecraft/client/renderer/texture/HttpTexture
	f LOGGER
	g SKIN_WIDTH
	h SKIN_HEIGHT
	i LEGACY_SKIN_HEIGHT
	j file
	k urlString
	l processLegacySkin
	m onDownloaded
	n future
	o uploaded
	<init> (Ljava/io/File;Ljava/lang/String;Lacq;ZLjava/lang/Runnable;)V <init>
	a (Lehk;)V loadCallback
	b (Lehk;)V upload
	a (Lakx;)V load
	a (Ljava/io/InputStream;)Lehk; load
	c (Lehk;)Lehk; processLegacySkin
	a (Lehk;IIII)V doNotchTransparencyHack
	b (Lehk;IIII)V setNoAlpha
	d ()V lambda$load$4
	b (Ljava/io/InputStream;)V lambda$load$3
	c (Lakx;)V lambda$load$2
	d (Lehk;)V lambda$loadCallback$1
	e (Lehk;)V lambda$loadCallback$0
	<clinit> ()V <clinit>
fuk net/minecraft/client/renderer/texture/MipmapGenerator
	a ALPHA_CUTOUT_CUTOFF
	b POW22
	<init> ()V <init>
	a ([Lehk;I)[Lehk; generateMipLevels
	a (Lehk;)Z hasTransparentPixel
	a (IIIIZ)I alphaBlend
	a (IIIII)I gammaBlend
	a (I)F getPow22
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
ful net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	a MISSING_IMAGE_WIDTH
	b MISSING_IMAGE_HEIGHT
	c MISSING_TEXTURE_NAME
	d MISSING_TEXTURE_LOCATION
	e EMPTY_ANIMATION_META
	f missingTexture
	<init> ()V <init>
	a (II)Lehk; generateMissingImage
	a ()Lfup; create
	b ()Lacq; getLocation
	c ()Lfui; getTexture
	<clinit> ()V <clinit>
fum net/minecraft/client/renderer/texture/OverlayTexture
	e SIZE
	a NO_WHITE_U
	b RED_OVERLAY_V
	c WHITE_OVERLAY_V
	d NO_OVERLAY
	f texture
	<init> ()V <init>
	close ()V close
	a ()V setupOverlayColor
	a (F)I u
	a (Z)I v
	a (II)I pack
	a (FZ)I pack
	b ()V teardownOverlayColor
	<clinit> ()V <clinit>
fun net/minecraft/client/renderer/texture/PreloadedTexture
	f future
	<init> (Lakx;Lacq;Ljava/util/concurrent/Executor;)V <init>
	b (Lakx;)Lfuo$a; getTextureImage
	d ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Lfuw;Lakx;Lacq;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$executor$5
	a (Ljava/lang/Runnable;)V lambda$executor$4
	a (Lfuw;)V lambda$reset$3
	c (Lakx;)Lfuo$a; lambda$reset$2
	a (Lfuo$a;)Ljava/lang/Void; lambda$getFuture$1
	a (Lakx;Lacq;)Lfuo$a; lambda$new$0
fuo net/minecraft/client/renderer/texture/SimpleTexture
	f LOGGER
	e location
	<init> (Lacq;)V <init>
	a (Lakx;)V load
	a (Lehk;ZZ)V doLoad
	b (Lakx;)Lfuo$a; getTextureImage
	b (Lehk;ZZ)V lambda$load$0
	<clinit> ()V <clinit>
fuo$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	<init> (Ljava/io/IOException;)V <init>
	<init> (Lfwn;Lehk;)V <init>
	a (Lakx;Lacq;)Lfuo$a; load
	a ()Lfwn; getTextureMetadata
	b ()Lehk; getImage
	close ()V close
	c ()V throwIfError
fup net/minecraft/client/renderer/texture/SpriteContents
	a LOGGER
	b name
	c width
	d height
	e originalImage
	f byMipLevel
	g animatedTexture
	<init> (Lacq;Lfwg;Lehk;Lfwe;)V <init>
	a (I)V increaseMipLevel
	f ()I getFrameCount
	a (Lfwg;IILfwe;)Lfup$a; createAnimatedTexture
	a (IIII[Lehk;)V upload
	a ()I width
	b ()I height
	c ()Lacq; name
	d ()Ljava/util/stream/IntStream; getUniqueFrames
	e ()Lfur; createTicker
	close ()V close
	toString ()Ljava/lang/String; toString
	a (III)Z isTransparent
	a (II)V uploadFirstFrame
	a (Lit/unimi/dsi/fastutil/ints/IntSet;I)Z lambda$createAnimatedTexture$4
	a (Ljava/util/List;II)V lambda$createAnimatedTexture$3
	g ()Ljava/lang/String; lambda$increaseMipLevel$2
	h ()Ljava/lang/String; lambda$increaseMipLevel$1
	i ()Ljava/lang/String; lambda$increaseMipLevel$0
	<clinit> ()V <clinit>
fup$a net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture
	b frames
	c frameRowSize
	d interpolateFrames
	a this$0
	<init> (Lfup;Ljava/util/List;IZ)V <init>
	a (I)I getFrameX
	b (I)I getFrameY
	a (III)V uploadFrame
	a ()Lfur; createTicker
	a (II)V uploadFirstFrame
	b ()Ljava/util/stream/IntStream; getUniqueFrames
	a (Lfup$b;)I lambda$getUniqueFrames$0
fup$b net/minecraft/client/renderer/texture/SpriteContents$FrameInfo
	a index
	b time
	<init> (II)V <init>
fup$c net/minecraft/client/renderer/texture/SpriteContents$InterpolationData
	b activeFrame
	a this$0
	<init> (Lfup;)V <init>
	a (IILfup$d;)V uploadInterpolatedFrame
	a (Lfup$a;IIII)I getPixel
	a (DII)I mix
	close ()V close
fup$d net/minecraft/client/renderer/texture/SpriteContents$Ticker
	b frame
	c subFrame
	d animationInfo
	e interpolationData
	a this$0
	<init> (Lfup;Lfup$a;Lfup$c;)V <init>
	a (II)V tickAndUpload
	close ()V close
	b (II)V lambda$tickAndUpload$0
fuq net/minecraft/client/renderer/texture/SpriteLoader
	a LOGGER
	b location
	c maxSupportedTextureSize
	d minWidth
	e minHeight
	<init> (Lacq;III)V <init>
	a (Lfuu;)Lfuq; create
	a (Ljava/util/List;ILjava/util/concurrent/Executor;)Lfuq$a; stitch
	a (Ljava/util/List;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; runSpriteSuppliers
	a (Lakx;Lacq;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadAndStitch
	a (Lacq;Lakv;)Lfup; loadSprite
	a (Lfus;II)Ljava/util/Map; getStitchedSprites
	a (Ljava/util/Map;IILfup;II)V lambda$getStitchedSprites$8
	a (ILjava/util/concurrent/Executor;Ljava/util/List;)Lfuq$a; lambda$loadAndStitch$7
	a (Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletionStage; lambda$loadAndStitch$6
	a (Lakx;Lacq;)Ljava/util/List; lambda$loadAndStitch$5
	a (Ljava/util/List;)Ljava/util/List; lambda$runSpriteSuppliers$4
	a (Ljava/util/concurrent/Executor;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; lambda$runSpriteSuppliers$3
	a (Ljava/util/Map;I)V lambda$stitch$2
	a (ILfuv;)V lambda$stitch$1
	a (Lfus$a;)Ljava/lang/String; lambda$stitch$0
	<clinit> ()V <clinit>
fuq$a net/minecraft/client/renderer/texture/SpriteLoader$Preparations
	a width
	b height
	c mipLevel
	d missing
	e regions
	f readyForUpload
	<init> (IIILfuv;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;)V <init>
	a ()Ljava/util/concurrent/CompletableFuture; waitForUpload
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I width
	c ()I height
	d ()I mipLevel
	e ()Lfuv; missing
	f ()Ljava/util/Map; regions
	g ()Ljava/util/concurrent/CompletableFuture; readyForUpload
	a (Ljava/lang/Void;)Lfuq$a; lambda$waitForUpload$0
fur net/minecraft/client/renderer/texture/SpriteTicker
	a (II)V tickAndUpload
	close ()V close
fus net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	<init> (III)V <init>
	a ()I getWidth
	b ()I getHeight
	a (Lfus$a;)V registerSprite
	c ()V stitch
	a (Lfus$d;)V gatherSprites
	a (II)I smallestFittingMinTexel
	a (Lfus$b;)Z addToStorage
	b (Lfus$b;)Z expand
	c (Lfus$b;)Lfus$a; lambda$stitch$3
	d (Lfus$b;)Lacq; lambda$static$2
	e (Lfus$b;)Ljava/lang/Integer; lambda$static$1
	f (Lfus$b;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
fus$a net/minecraft/client/renderer/texture/Stitcher$Entry
	a ()I width
	b ()I height
	c ()Lacq; name
fus$b net/minecraft/client/renderer/texture/Stitcher$Holder
	a entry
	b width
	c height
	<init> (Lfus$a;I)V <init>
	<init> (Lfus$a;II)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfus$a; entry
	b ()I width
	c ()I height
fus$c net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	<init> (IIII)V <init>
	a ()I getX
	b ()I getY
	a (Lfus$b;)Z add
	a (Lfus$d;)V walk
	toString ()Ljava/lang/String; toString
fus$d net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
	load (Lfus$a;II)V load
fut net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	<init> (Lfus$a;Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getAllSprites
fuu net/minecraft/client/renderer/texture/TextureAtlas
	g LOGGER
	e LOCATION_BLOCKS
	f LOCATION_PARTICLES
	h sprites
	i animatedTextures
	j texturesByName
	k location
	l maxSupportedTextureSize
	m width
	n height
	o mipLevel
	<init> (Lacq;)V <init>
	a (Lakx;)V load
	a (Lfuq$a;)V upload
	a (Lacq;Ljava/nio/file/Path;)V dumpContents
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/Map;)V dumpSpriteNames
	d ()V cycleAnimationFrames
	e ()V tick
	a (Lacq;)Lfuv; getSprite
	f ()V clearTextureData
	g ()Lacq; location
	h ()I maxSupportedTextureSize
	i ()I getWidth
	j ()I getHeight
	b (Lfuq$a;)V updateFilter
	<clinit> ()V <clinit>
fuv net/minecraft/client/renderer/texture/TextureAtlasSprite
	a atlasLocation
	b contents
	c x
	d y
	e u0
	f u1
	g v0
	h v1
	<init> (Lacq;Lfup;IIII)V <init>
	a ()I getX
	b ()I getY
	c ()F getU0
	d ()F getU1
	e ()Lfup; contents
	f ()Lfuv$a; createTicker
	a (D)F getU
	a (F)F getUOffset
	g ()F getV0
	h ()F getV1
	b (D)F getV
	b (F)F getVOffset
	i ()Lacq; atlasLocation
	toString ()Ljava/lang/String; toString
	j ()V uploadFirstFrame
	l ()F atlasSize
	k ()F uvShrinkRatio
	a (Lein;)Lein; wrap
fuv$1 net/minecraft/client/renderer/texture/TextureAtlasSprite$1
	a val$ticker
	b this$0
	<init> (Lfuv;Lfur;)V <init>
	a ()V tickAndUpload
	close ()V close
fuv$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker
	a ()V tickAndUpload
	close ()V close
fuw net/minecraft/client/renderer/texture/TextureManager
	b LOGGER
	a INTENTIONAL_MISSING_TEXTURE
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	<init> (Lakx;)V <init>
	a (Lacq;)V bindForSetup
	d (Lacq;)V _bind
	a (Lacq;Lfug;)V register
	c (Lacq;Lfug;)V safeClose
	d (Lacq;Lfug;)Lfug; loadTexture
	b (Lacq;)Lfug; getTexture
	b (Lacq;Lfug;)Lfug; getTexture
	a (Ljava/lang/String;Lfui;)Lacq; register
	a (Lacq;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	a (Ljava/lang/Runnable;)V execute
	e ()V tick
	c (Lacq;)V release
	close ()V close
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/nio/file/Path;)V dumpAllSheets
	b (Ljava/nio/file/Path;)V _dumpAllSheets
	a (Ljava/nio/file/Path;Lacq;Lfug;)V lambda$_dumpAllSheets$8
	c (Ljava/nio/file/Path;)V lambda$dumpAllSheets$7
	b (Ljava/lang/Runnable;)V lambda$reload$6
	a (Lakx;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V lambda$reload$5
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$reload$4
	c (Ljava/lang/Runnable;)V lambda$execute$3
	a (Lacq;Lfun;)V lambda$preload$2
	a (Lfug;)Ljava/lang/String; lambda$loadTexture$1
	e (Lacq;)V lambda$bindForSetup$0
	<clinit> ()V <clinit>
fux net/minecraft/client/renderer/texture/Tickable
	e ()V tick
fuy net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader
	a LOGGER
	b ATLAS_INFO_CONVERTER
	c sources
	<init> (Ljava/util/List;)V <init>
	a (Lakx;)Ljava/util/List; list
	a (Lakx;Lacq;)Lfuy; load
	a (Lakx;Lfuz$a;Lfuz;)V lambda$list$0
	<clinit> ()V <clinit>
fuy$1 net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader$1
	a val$sprites
	b this$0
	<init> (Lfuy;Ljava/util/Map;)V <init>
	a (Lacq;Lfuz$b;)V add
	a (Ljava/util/function/Predicate;)V removeAll
fuz net/minecraft/client/renderer/texture/atlas/SpriteSource
	a TEXTURE_ID_CONVERTER
	a (Lakx;Lfuz$a;)V run
	a ()Lfva; type
	<clinit> ()V <clinit>
fuz$a net/minecraft/client/renderer/texture/atlas/SpriteSource$Output
	a (Lacq;Lakv;)V add
	a (Lacq;Lfuz$b;)V add
	a (Ljava/util/function/Predicate;)V removeAll
	b (Lacq;Lakv;)Lfup; lambda$add$0
fuz$b net/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier
	a ()V discard
fva net/minecraft/client/renderer/texture/atlas/SpriteSourceType
	a codec
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcom/mojang/serialization/Codec; codec
fvb net/minecraft/client/renderer/texture/atlas/SpriteSources
	i TYPES
	a SINGLE_FILE
	b DIRECTORY
	c FILTER
	d UNSTITCHER
	e PALETTED_PERMUTATIONS
	f TYPE_CODEC
	g CODEC
	h FILE_CODEC
	<init> ()V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfva; register
	a (Lfva;)Lcom/mojang/serialization/DataResult; lambda$static$3
	a (Lacq;)Ljava/lang/String; lambda$static$2
	b (Lacq;)Lcom/mojang/serialization/DataResult; lambda$static$1
	c (Lacq;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
fvc net/minecraft/client/renderer/texture/atlas/package-info
fvd net/minecraft/client/renderer/texture/atlas/sources/DirectoryLister
	b CODEC
	c sourcePath
	d idPrefix
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lakx;Lfuz$a;)V run
	a ()Lfva; type
	a (Lacj;Lfuz$a;Lacq;Lakv;)V lambda$run$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lfvd;)Ljava/lang/String; lambda$static$1
	b (Lfvd;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
fve net/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage
	a id
	b resource
	c image
	d referenceCount
	<init> (Lacq;Lakv;I)V <init>
	a ()Lehk; get
	b ()V release
fvf net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations
	c LOGGER
	b CODEC
	d textures
	e permutations
	f paletteKey
	<init> (Ljava/util/List;Lacq;Ljava/util/Map;)V <init>
	a (Lakx;Lfuz$a;)V run
	a ([I[I)Ljava/util/function/IntUnaryOperator; createPaletteMapping
	a (Lakx;Lacq;)[I loadPaletteEntryFromImage
	a ()Lfva; type
	a (Lit/unimi/dsi/fastutil/ints/Int2IntMap;I)I lambda$createPaletteMapping$7
	a (Ljava/util/Map;Ljava/util/function/Supplier;Lakx;Ljava/lang/String;Lacq;)V lambda$run$6
	a (Ljava/util/function/Supplier;Lakx;Lacq;)Ljava/util/function/IntUnaryOperator; lambda$run$5
	a (Lakx;)[I lambda$run$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lfvf;)Ljava/util/Map; lambda$static$2
	b (Lfvf;)Lacq; lambda$static$1
	c (Lfvf;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
fvf$a net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations$PalettedSpriteSupplier
	a baseImage
	b palette
	c permutationLocation
	<init> (Lfve;Ljava/util/function/Supplier;Lacq;)V <init>
	b ()Lfup; get
	a ()V discard
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lfve; baseImage
	d ()Ljava/util/function/Supplier; palette
	e ()Lacq; permutationLocation
	get ()Ljava/lang/Object; get
fvg net/minecraft/client/renderer/texture/atlas/sources/SingleFile
	c LOGGER
	b CODEC
	d resourceId
	e spriteId
	<init> (Lacq;Ljava/util/Optional;)V <init>
	a (Lakx;Lfuz$a;)V run
	a ()Lfva; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lfvg;)Ljava/util/Optional; lambda$static$1
	b (Lfvg;)Lacq; lambda$static$0
	<clinit> ()V <clinit>
fvh net/minecraft/client/renderer/texture/atlas/sources/SourceFilter
	b CODEC
	c filter
	<init> (Lapg;)V <init>
	a (Lakx;Lfuz$a;)V run
	a ()Lfva; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lfvh;)Lapg; lambda$static$0
	<clinit> ()V <clinit>
fvi net/minecraft/client/renderer/texture/atlas/sources/Unstitcher
	c LOGGER
	b CODEC
	d resource
	e regions
	f xDivisor
	g yDivisor
	<init> (Lacq;Ljava/util/List;DD)V <init>
	a (Lakx;Lfuz$a;)V run
	a ()Lfva; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lfvi;)Ljava/lang/Double; lambda$static$3
	b (Lfvi;)Ljava/lang/Double; lambda$static$2
	c (Lfvi;)Ljava/util/List; lambda$static$1
	d (Lfvi;)Lacq; lambda$static$0
	<clinit> ()V <clinit>
fvi$a net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region
	b sprite
	c x
	d y
	e width
	f height
	a CODEC
	<init> (Lacq;DDDD)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; sprite
	b ()D x
	c ()D y
	d ()D width
	e ()D height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
fvi$b net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance
	a image
	b region
	c xDivisor
	d yDivisor
	<init> (Lfve;Lfvi$a;DD)V <init>
	b ()Lfup; get
	a ()V discard
	get ()Ljava/lang/Object; get
fvj net/minecraft/client/renderer/texture/atlas/sources/package-info
fvk net/minecraft/client/renderer/texture/package-info
fvl net/minecraft/client/resources/ClientPackSource
	c VERSION_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	b HIGH_CONTRAST_PACK
	f SPECIAL_PACK_NAMES
	g PACKS_DIR
	h externalAssetDir
	<init> (Ljava/nio/file/Path;)V <init>
	a (Ljava/nio/file/Path;)Ljava/nio/file/Path; findExplodedAssetPacks
	b (Ljava/nio/file/Path;)Lajo; createVanillaPackSource
	a (Ljava/lang/String;)Lsw; getPackTitle
	a (Lajl;)Lakg; createVanillaPack
	a (Ljava/lang/String;Lakg$c;Lsw;)Lakg; createBuiltinPack
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Lajl;Ljava/lang/String;)Lajl; lambda$createVanillaPack$0
	<clinit> ()V <clinit>
fvm net/minecraft/client/resources/DefaultPlayerSkin
	a DEFAULT_SKINS
	<init> ()V <init>
	a ()Lacq; getDefaultSkin
	a (Ljava/util/UUID;)Lacq; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Lfvm$b; getSkinType
	<clinit> ()V <clinit>
fvm$a net/minecraft/client/resources/DefaultPlayerSkin$ModelType
	a SLIM
	b WIDE
	c id
	d $VALUES
	values ()[Lfvm$a; values
	valueOf (Ljava/lang/String;)Lfvm$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()[Lfvm$a; $values
	<clinit> ()V <clinit>
fvm$b net/minecraft/client/resources/DefaultPlayerSkin$SkinType
	a texture
	b model
	<init> (Ljava/lang/String;Lfvm$a;)V <init>
	<init> (Lacq;Lfvm$a;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; texture
	b ()Lfvm$a; model
fvn net/minecraft/client/resources/DownloadedPackSource
	a LOGGER
	b SHA1
	c MAX_PACK_SIZE_BYTES
	d MAX_KEPT_PACKS
	e SERVER_ID
	f SERVER_NAME
	g APPLYING_PACK_TEXT
	h serverPackDir
	i downloadLock
	j currentDownload
	k serverPack
	<init> (Ljava/io/File;)V <init>
	a (Ljava/util/function/Consumer;)V loadPacks
	b ()Ljava/util/Map; getDownloadHeaders
	a (Ljava/net/URL;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/io/File;)V deleteQuietly
	a ()Ljava/util/concurrent/CompletableFuture; clearServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	c ()V clearOldDownloads
	a (Ljava/io/File;Lakj;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ldyy$c;)Ljava/util/concurrent/CompletableFuture; loadBundledResourcePack
	a (Ljava/io/File;Ljava/lang/String;)Lajl; lambda$setServerPack$8
	a (Ljava/lang/Void;)V lambda$downloadAndSelectResourcePack$7
	a (Ljava/io/File;Lenn;Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage; lambda$downloadAndSelectResourcePack$6
	a (Lenn;Ljava/lang/Void;)V lambda$downloadAndSelectResourcePack$5
	a (Lenn;Z)V lambda$downloadAndSelectResourcePack$4
	a (Ljava/lang/Throwable;Ljava/io/File;Ljava/lang/Void;)V lambda$downloadAndSelectResourcePack$3
	a (Ljava/lang/String;Ljava/io/File;Lenn;ZLjava/lang/Object;)Ljava/util/concurrent/CompletionStage; lambda$downloadAndSelectResourcePack$2
	a (ZLenn;)V lambda$downloadAndSelectResourcePack$1
	a (Lenn;Leuo;)V lambda$downloadAndSelectResourcePack$0
	<clinit> ()V <clinit>
fvo net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	<init> ()V <init>
	a (Lakx;Lban;)[I prepare
	a ([ILakx;Lban;)V apply
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
fvp net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	<init> ()V <init>
	a (Lakx;Lban;)[I prepare
	a ([ILakx;Lban;)V apply
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
fvq net/minecraft/client/resources/IndexedAssetSource
	b LOGGER
	a PATH_SPLITTER
	<init> ()V <init>
	a (Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path; createIndexFs
	<clinit> ()V <clinit>
fvr net/minecraft/client/resources/LegacyStuffWrapper
	<init> ()V <init>
	a (Lakx;Lacq;)[I getPixels
fvs net/minecraft/client/resources/MobEffectTextureManager
	<init> (Lfuw;)V <init>
	a (Lbey;)Lfuv; get
fvt net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	<init> (Lfuw;)V <init>
	a (Lbvd;)Lfuv; get
	a ()Lfuv; getBackSprite
	<clinit> ()V <clinit>
fvu net/minecraft/client/resources/SkinManager
	a PROPERTY_TEXTURES
	b textureManager
	c skinsDirectory
	d sessionService
	e insecureSkinCache
	<init> (Lfuw;Ljava/io/File;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V <init>
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lacq; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lfvu$a;)Lacq; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ljava/lang/String;)Lacq; getTextureLocation
	a (Lcom/mojang/authlib/GameProfile;Lfvu$a;Z)V registerSkins
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	b (Lcom/mojang/authlib/GameProfile;)Lacq; getInsecureSkinLocation
	a (Lcom/mojang/authlib/GameProfile;ZLfvu$a;)V lambda$registerSkins$4
	a (Ljava/util/Map;Lfvu$a;)V lambda$registerSkins$3
	b (Ljava/util/Map;Lfvu$a;)V lambda$registerSkins$2
	a (Ljava/util/Map;Lfvu$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)V lambda$registerSkins$1
	a (Lfvu$a;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lacq;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V lambda$registerTexture$0
fvu$1 net/minecraft/client/resources/SkinManager$1
	a val$sessionService
	b this$0
	<init> (Lfvu;Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V <init>
	a (Ljava/lang/String;)Ljava/util/Map; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
fvu$2 net/minecraft/client/resources/SkinManager$2
	a $SwitchMap$com$mojang$authlib$minecraft$MinecraftProfileTexture$Type
	<clinit> ()V <clinit>
fvu$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
	onSkinTextureAvailable (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lacq;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;)V onSkinTextureAvailable
fvv net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	<init> (Leoc;)V <init>
	a (Lakx;Lban;)Ljava/util/List; prepare
	a (Ljava/util/List;Lakx;Lban;)V apply
	a ()Leqi; getSplash
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	a (Ljava/lang/String;)Z lambda$prepare$0
	<clinit> ()V <clinit>
fvw net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b atlasInfoLocation
	<init> (Lfuw;Lacq;Lacq;)V <init>
	a (Lacq;)Lfuv; getSprite
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lfuq$a;Lban;)V apply
	close ()V close
	a (Lban;Lfuq$a;)V lambda$reload$0
fvx net/minecraft/client/resources/language/ClientLanguage
	b LOGGER
	c storage
	d defaultRightToLeft
	<init> (Ljava/util/Map;Z)V <init>
	a (Lakx;Ljava/util/List;Z)Lfvx; loadFrom
	a (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V appendFrom
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lta;)Laom; getVisualOrder
	<clinit> ()V <clinit>
fvy net/minecraft/client/resources/language/FormattedBidiReorder
	<init> ()V <init>
	a (Lta;Z)Laom; reorder
	a (Ljava/lang/String;)Ljava/lang/String; shape
fvz net/minecraft/client/resources/language/I18n
	a language
	<init> ()V <init>
	a (Lqm;)V setLanguage
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Ljava/lang/String;)Z exists
	<clinit> ()V <clinit>
fwa net/minecraft/client/resources/language/LanguageInfo
	b region
	c name
	d bidirectional
	a CODEC
	<init> (Ljava/lang/String;Ljava/lang/String;Z)V <init>
	a ()Lsw; toComponent
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; region
	c ()Ljava/lang/String; name
	d ()Z bidirectional
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
fwb net/minecraft/client/resources/language/LanguageManager
	b LOGGER
	a DEFAULT_LANGUAGE_CODE
	c DEFAULT_LANGUAGE
	d languages
	e currentCode
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/util/stream/Stream;)Ljava/util/Map; extractLanguages
	a (Lakx;)V onResourceManagerReload
	a (Ljava/lang/String;)V setSelected
	a ()Ljava/lang/String; getSelected
	b ()Ljava/util/SortedMap; getLanguages
	b (Ljava/lang/String;)Lfwa; getLanguage
	a (Ljava/util/Map;Lajl;)V lambda$extractLanguages$0
	<clinit> ()V <clinit>
fwc net/minecraft/client/resources/language/package-info
fwd net/minecraft/client/resources/metadata/animation/AnimationFrame
	a UNKNOWN_FRAME_TIME
	b index
	c time
	<init> (I)V <init>
	<init> (II)V <init>
	a (I)I getTime
	a ()I getIndex
fwe net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b SECTION_NAME
	c DEFAULT_FRAME_TIME
	d UNKNOWN_SIZE
	e EMPTY
	f frames
	g frameWidth
	h frameHeight
	i defaultFrameTime
	j interpolatedFrames
	<init> (Ljava/util/List;IIIZ)V <init>
	a (II)Lfwg; calculateFrameSize
	a ()I getDefaultFrameTime
	b ()Z isInterpolatedFrames
	a (Lfwe$a;)V forEachFrame
	<clinit> ()V <clinit>
fwe$1 net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$1
	<init> (Ljava/util/List;IIIZ)V <init>
	a (II)Lfwg; calculateFrameSize
fwe$a net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput
	accept (II)V accept
fwf net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lfwe; fromJson
	a (ILcom/google/gson/JsonElement;)Lfwd; getFrame
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
fwg net/minecraft/client/resources/metadata/animation/FrameSize
	a width
	b height
	<init> (II)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I width
	b ()I height
fwh net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b SECTION_NAME
	c hat
	<init> (Lfwh$a;)V <init>
	a ()Lfwh$a; getHat
	<clinit> ()V <clinit>
fwh$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	values ()[Lfwh$a; values
	valueOf (Ljava/lang/String;)Lfwh$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lfwh$a; getByName
	a (Lfwh$a;)Lfwh$a; lambda$static$0
	b ()[Lfwh$a; $values
	<clinit> ()V <clinit>
fwi net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lfwh; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
fwj net/minecraft/client/resources/metadata/animation/package-info
fwk net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	d languages
	a LANGUAGE_CODE_CODEC
	b CODEC
	c TYPE
	<init> (Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; languages
	<clinit> ()V <clinit>
fwl net/minecraft/client/resources/metadata/language/package-info
fwm net/minecraft/client/resources/metadata/package-info
fwn net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b DEFAULT_BLUR
	c DEFAULT_CLAMP
	d blur
	e clamp
	<init> (ZZ)V <init>
	a ()Z isBlur
	b ()Z isClamp
	<clinit> ()V <clinit>
fwo net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lfwn; fromJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
fwp net/minecraft/client/resources/metadata/texture/package-info
fwq net/minecraft/client/resources/model/AtlasSet
	a atlases
	<init> (Ljava/util/Map;Lfuw;)V <init>
	a (Lacq;)Lfuu; getAtlas
	close ()V close
	a (Lakx;ILjava/util/concurrent/Executor;)Ljava/util/Map; scheduleLoad
	a (Lakx;ILjava/util/concurrent/Executor;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture; lambda$scheduleLoad$2
	a (Lfwq$a;Lfuq$a;)Lfwq$b; lambda$scheduleLoad$1
	a (Lfuw;Ljava/util/Map$Entry;)Lfwq$a; lambda$new$0
fwq$a net/minecraft/client/resources/model/AtlasSet$AtlasEntry
	a atlas
	b atlasInfoLocation
	<init> (Lfuu;Lacq;)V <init>
	close ()V close
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfuu; atlas
	b ()Lacq; atlasInfoLocation
fwq$b net/minecraft/client/resources/model/AtlasSet$StitchResult
	a atlas
	b preparations
	<init> (Lfuu;Lfuq$a;)V <init>
	a (Lacq;)Lfuv; getSprite
	a ()Lfuv; missing
	b ()Ljava/util/concurrent/CompletableFuture; readyForUpload
	c ()V upload
fwr net/minecraft/client/resources/model/BakedModel
	a (Ldcb;Lha;Lapf;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfuv; getParticleIcon
	f ()Lfld; getTransforms
	g ()Lflb; getOverrides
fws net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q DEGREES
	r BY_INDEX
	s transformation
	t actualRotation
	u index
	v $VALUES
	values ()[Lfws; values
	valueOf (Ljava/lang/String;)Lfws; valueOf
	b (II)I getIndex
	<init> (Ljava/lang/String;III)V <init>
	b ()Lj; getRotation
	a (II)Lfws; by
	a ()Lh; actualRotation
	a (Lfws;)Lfws; lambda$static$1
	b (Lfws;)Ljava/lang/Integer; lambda$static$0
	d ()[Lfws; $values
	<clinit> ()V <clinit>
fwt net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	d usesBlockLight
	<init> (Lfld;Lflb;Lfuv;Z)V <init>
	a (Ldcb;Lha;Lapf;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfuv; getParticleIcon
	f ()Lfld; getTransforms
	g ()Lflb; getOverrides
fwu net/minecraft/client/resources/model/Material
	a COMPARATOR
	b atlasLocation
	c texture
	d renderType
	<init> (Lacq;Lacq;)V <init>
	a ()Lacq; atlasLocation
	b ()Lacq; texture
	c ()Lfuv; sprite
	a (Ljava/util/function/Function;)Lfkf; renderType
	a (Lfjx;Ljava/util/function/Function;)Lein; buffer
	a (Lfjx;Ljava/util/function/Function;Z)Lein; buffer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
fwv net/minecraft/client/resources/model/ModelBaker
	a (Lacq;)Lfxc; getModel
	a (Lacq;Lfwz;)Lfwr; bake
fww net/minecraft/client/resources/model/ModelBakery
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGE_COUNT
	j DESTROY_STAGES
	k BREAKING_LOCATIONS
	l DESTROY_TYPES
	m SINGLETON_MODEL_GROUP
	t INVISIBLE_MODEL_GROUP
	u LOGGER
	v BUILTIN_SLASH
	w BUILTIN_SLASH_GENERATED
	x BUILTIN_BLOCK_ENTITY
	y MISSING_MODEL_NAME
	n MISSING_MODEL_LOCATION
	o BLOCKSTATE_LISTER
	p MODEL_LISTER
	q MISSING_MODEL_MESH
	z BUILTIN_MODELS
	A COMMA_SPLITTER
	B EQUAL_SPLITTER
	r GENERATION_MARKER
	s BLOCK_ENTITY_MARKER
	C ITEM_FRAME_FAKE_DEFINITION
	D ITEM_MODEL_GENERATOR
	E STATIC_DEFINITIONS
	F blockColors
	G modelResources
	H blockStateResources
	I loadingStack
	J context
	K unbakedCache
	L bakedCache
	M topLevelModels
	N bakedTopLevelModels
	O nextModelGroup
	P modelGroups
	<init> (Leoo;Lban;Ljava/util/Map;Ljava/util/Map;)V <init>
	a (Ljava/util/function/BiFunction;)V bakeModels
	a (Ldcc;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Ldde;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	a (Lacq;)Lfxc; getModel
	b (Lacq;)V loadModel
	a (Lacq;Lfxc;)V cacheAndQueueDependencies
	a (Lfwy;)V loadTopLevel
	a (Ljava/lang/Iterable;)V registerModelGroup
	c (Lacq;)Lfkw; loadBlockModel
	a ()Ljava/util/Map; getBakedTopLevelModels
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	a (ILdcb;)V lambda$registerModelGroup$24
	a (Lfww$e;Ljava/util/Set;)V lambda$loadModel$23
	a (Ljava/util/Map;Lacq;Lcom/mojang/datafixers/util/Pair;Ljava/util/Map;Lfwy;Ldcb;)V lambda$loadModel$22
	a (Lfww$e;)Ljava/util/Set; lambda$loadModel$21
	a (Lcom/google/common/collect/ImmutableList;Ldcc;Ljava/util/Map;Ljava/util/List;Lflj;Lcom/mojang/datafixers/util/Pair;Lfkx;Lacq;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;Lfle;)V lambda$loadModel$20
	a (Ljava/util/Map;Lfle;Ljava/util/List;Lflj;Lcom/mojang/datafixers/util/Pair;Lfkx;Ldcb;)V lambda$loadModel$19
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Z lambda$loadModel$18
	a (Ldcb;Lfle;Ljava/util/List;)Lfww$e; lambda$loadModel$17
	a (Ljava/util/Map;Lflj;Ljava/util/List;Ldcb;)V lambda$loadModel$16
	a (Ldcb;Lflj;Ljava/util/List;)Lfww$e; lambda$loadModel$15
	a (Lacq;Lfww$c;)Lcom/mojang/datafixers/util/Pair; lambda$loadModel$14
	b (Lfww$e;)Lfww$e; lambda$loadModel$13
	a (Ljava/util/Map;Lacq;Ldcb;)V lambda$loadModel$12
	d (Lacq;)Ldcc; lambda$loadModel$11
	a (Lcpn;Ljava/util/Map;Ldcb;)Z lambda$predicate$10
	a (Ljava/util/function/BiFunction;Lacq;)V lambda$bakeModels$9
	a (Lfxc;)V lambda$new$8
	a (Ldcb;)V lambda$new$7
	a (Lacq;Ldcc;)V lambda$new$6
	a (Lacq;Ldcb;)V lambda$new$5
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$4
	a (Lfkw;)V lambda$static$3
	b (Lfkw;)V lambda$static$2
	e (Lacq;)Lacq; lambda$static$1
	a (I)Lacq; lambda$static$0
	<clinit> ()V <clinit>
fww$a net/minecraft/client/resources/model/ModelBakery$BakedCacheKey
	a id
	b transformation
	c isUvLocked
	<init> (Lacq;Lj;Z)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; id
	b ()Lj; transformation
	c ()Z isUvLocked
fww$b net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
	<init> (Ljava/lang/String;)V <init>
fww$c net/minecraft/client/resources/model/ModelBakery$LoadedJson
	a source
	b data
	<init> (Ljava/lang/String;Lcom/google/gson/JsonElement;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; source
	b ()Lcom/google/gson/JsonElement; data
fww$d net/minecraft/client/resources/model/ModelBakery$ModelBakerImpl
	b modelTextureGetter
	a this$0
	<init> (Lfww;Ljava/util/function/BiFunction;Lacq;)V <init>
	a (Lacq;)Lfxc; getModel
	a (Lacq;Lfwz;)Lfwr; bake
	a (Ljava/util/function/BiFunction;Lacq;Lfwu;)Lfuv; lambda$new$0
fww$e net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ldcb;Lflj;Ljava/util/Collection;)Lfww$e; create
	a (Ldcb;Lfxc;Ljava/util/Collection;)Lfww$e; create
	a (Ldcb;Ljava/util/Collection;)Ljava/util/List; getColoringValues
	a (Ldcc;Ldcb;Lfll;)Z lambda$create$0
fwx net/minecraft/client/resources/model/ModelManager
	a LOGGER
	b VANILLA_ATLASES
	c bakedRegistry
	d atlases
	e blockModelShaper
	f blockColors
	g maxMipmapLevels
	h missingModel
	i modelGroups
	<init> (Lfuw;Leoo;I)V <init>
	a (Lfwy;)Lfwr; getModel
	a ()Lfwr; getMissingModel
	b ()Lfkn; getBlockModelShaper
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lakx;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockModels
	b (Lakx;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockStates
	a (Lban;Ljava/util/Map;Lfww;)Lfwx$a; loadModels
	a (Lfwx$a;Lban;)V apply
	a (Ldcb;Ldcb;)Z requiresRender
	a (Lacq;)Lfuu; getAtlas
	close ()V close
	a (I)V updateMaxMipLevel
	b (I)[Ljava/util/concurrent/CompletableFuture; lambda$loadModels$19
	a (Ljava/util/Map;Lfwr;Ljava/util/Map;Ldcb;)V lambda$loadModels$18
	a (Lacq;Ljava/util/Collection;)V lambda$loadModels$17
	a (Lfwu;)Ljava/lang/String; lambda$loadModels$16
	a (Ljava/util/Map;Lcom/google/common/collect/Multimap;Lacq;Lfwu;)Lfuv; lambda$loadModels$15
	a (Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage; lambda$loadBlockStates$14
	a (Ljava/util/List;)Ljava/util/Map; lambda$loadBlockStates$13
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$loadBlockStates$12
	a (Lakx;)Ljava/util/Map; lambda$loadBlockStates$11
	b (Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage; lambda$loadBlockModels$10
	b (Ljava/util/List;)Ljava/util/Map; lambda$loadBlockModels$9
	b (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$loadBlockModels$8
	b (Lakx;)Ljava/util/Map; lambda$loadBlockModels$7
	a (Lban;Lfwx$a;)V lambda$reload$6
	a (Lfwx$a;)Ljava/util/concurrent/CompletionStage; lambda$reload$5
	a (Lfwx$a;Ljava/lang/Void;)Lfwx$a; lambda$reload$4
	a (Lban;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)Lfwx$a; lambda$reload$3
	c (Ljava/util/Map$Entry;)Lfwq$b; lambda$reload$2
	c (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	a (Lban;Ljava/util/Map;Ljava/util/Map;)Lfww; lambda$reload$0
	<clinit> ()V <clinit>
fwx$a net/minecraft/client/resources/model/ModelManager$ReloadState
	a modelBakery
	b missingModel
	c modelCache
	d atlasPreparations
	e readyForUpload
	<init> (Lfww;Lfwr;Ljava/util/Map;Ljava/util/Map;Ljava/util/concurrent/CompletableFuture;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfww; modelBakery
	b ()Lfwr; missingModel
	c ()Ljava/util/Map; modelCache
	d ()Ljava/util/Map; atlasPreparations
	e ()Ljava/util/concurrent/CompletableFuture; readyForUpload
fwy net/minecraft/client/resources/model/ModelResourceLocation
	e VARIANT_SEPARATOR
	f variant
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lacq$a;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	<init> (Lacq;Ljava/lang/String;)V <init>
	c (Ljava/lang/String;Ljava/lang/String;)Lfwy; vanilla
	h (Ljava/lang/String;)Ljava/lang/String; lowercaseVariant
	f ()Ljava/lang/String; getVariant
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
fwz net/minecraft/client/resources/model/ModelState
	b ()Lj; getRotation
	c ()Z isUvLocked
fxa net/minecraft/client/resources/model/MultiPartBakedModel
	g selectors
	a hasAmbientOcclusion
	b isGui3d
	c usesBlockLight
	d particleIcon
	e transforms
	f overrides
	h selectorCache
	<init> (Ljava/util/List;)V <init>
	a (Ldcb;Lha;Lapf;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfuv; getParticleIcon
	f ()Lfld; getTransforms
	g ()Lflb; getOverrides
fxa$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lfwr;)V add
	a ()Lfwr; build
fxb net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e usesBlockLight
	f particleIcon
	g transforms
	h overrides
	<init> (Ljava/util/List;Ljava/util/Map;ZZZLfuv;Lfld;Lflb;)V <init>
	a (Ldcb;Lha;Lapf;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfuv; getParticleIcon
	f ()Lfld; getTransforms
	g ()Lflb; getOverrides
fxb$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f usesBlockLight
	g isGui3d
	h transforms
	<init> (Lfkw;Lflb;Z)V <init>
	<init> (ZZZLfld;Lflb;)V <init>
	a (Lha;Lfkr;)Lfxb$a; addCulledFace
	a (Lfkr;)Lfxb$a; addUnculledFace
	a (Lfuv;)Lfxb$a; particle
	a ()Lfxb$a; item
	b ()Lfwr; build
fxc net/minecraft/client/resources/model/UnbakedModel
	f ()Ljava/util/Collection; getDependencies
	a (Ljava/util/function/Function;)V resolveParents
	a (Lfwv;Ljava/util/function/Function;Lfwz;Lacq;)Lfwr; bake
fxd net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	<init> (Ljava/util/List;)V <init>
	a (Ldcb;Lha;Lapf;)Ljava/util/List; getQuads
	a ()Z useAmbientOcclusion
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lfuv; getParticleIcon
	f ()Lfld; getTransforms
	g ()Lflb; getOverrides
	a (Ldcb;Lha;Lapf;Lbcj$b;)Ljava/util/List; lambda$getQuads$0
fxd$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	<init> ()V <init>
	a (Lfwr;I)Lfxd$a; add
	a ()Lfwr; build
fxe net/minecraft/client/resources/model/package-info
fxf net/minecraft/client/resources/package-info
fxg net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l relative
	m random
	<init> (Lamg;Lami;Lapf;)V <init>
	<init> (Lacq;Lami;Lapf;)V <init>
	a ()Lacq; getLocation
	a (Lfzc;)Lfzd; resolve
	b ()Lfxv; getSound
	c ()Lami; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lfxy$a; getAttenuation
	l ()Z isRelative
	toString ()Ljava/lang/String; toString
fxh net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	<init> (Lamg;Lami;Lapf;)V <init>
	m ()Z isStopped
	n ()V stop
fxi net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
fxj net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	<init> (Lbrm;)V <init>
	o ()Lfxh; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
fxk net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	<init> (Lbrm;)V <init>
	o ()Lfxh; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
fxl net/minecraft/client/resources/sounds/BeeSoundInstance
	o VOLUME_MIN
	p VOLUME_MAX
	q PITCH_MIN
	n bee
	r hasSwitched
	<init> (Lbrm;Lamg;Lami;)V <init>
	q ()V tick
	u ()F getMinPitch
	v ()F getMaxPitch
	r ()Z canStartSilent
	s ()Z canPlaySound
	o ()Lfxh; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
fxm net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler
	a LOOP_SOUND_CROSS_FADE_TIME
	b SKY_MOOD_RECOVERY_RATE
	c player
	d soundManager
	e biomeManager
	f random
	g loopSounds
	h moodSettings
	i additionsSettings
	j moodiness
	k previousBiome
	<init> (Lfiy;Lfzc;Lcnm;)V <init>
	b ()F getMoodiness
	a ()V tick
	a (Lcni;)V lambda$tick$3
	a (Lcnh;)V lambda$tick$2
	a (Lcnk;Lhe;)V lambda$tick$1
	a (Lhe;Lcnk;Lfxm$a;)Lfxm$a; lambda$tick$0
fxm$a net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance
	n fadeDirection
	o fade
	<init> (Lamg;)V <init>
	q ()V tick
	o ()V fadeOut
	p ()V fadeIn
fxn net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	<init> (Lfiy;)V <init>
	a ()V tick
	a (Ldcb;)Z lambda$tick$0
fxo net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	n DELAY
	o player
	p time
	<init> (Lfiy;)V <init>
	q ()V tick
fxp net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	n entity
	<init> (Lamg;Lami;FFLbfj;J)V <init>
	s ()Z canPlaySound
	q ()V tick
fxq net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	n VOLUME_MIN
	o VOLUME_SCALE
	p PITCH_MIN
	q PITCH_SCALE
	r guardian
	<init> (Lbvy;)V <init>
	s ()Z canPlaySound
	q ()V tick
fxr net/minecraft/client/resources/sounds/MinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p PITCH_MIN
	q PITCH_MAX
	r PITCH_DELTA
	s minecart
	t pitch
	<init> (Lcaf;)V <init>
	s ()Z canPlaySound
	r ()Z canStartSilent
	q ()V tick
fxs net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p player
	q minecart
	r underwaterSound
	<init> (Lbyo;Lcaf;Z)V <init>
	s ()Z canPlaySound
	r ()Z canStartSilent
	q ()V tick
fxt net/minecraft/client/resources/sounds/SimpleSoundInstance
	<init> (Lamg;Lami;FFLapf;Lgu;)V <init>
	a (Lamg;F)Lfxt; forUI
	a (Lhe;F)Lfxt; forUI
	a (Lamg;FF)Lfxt; forUI
	a (Lamg;)Lfxt; forMusic
	a (Lamg;Leei;)Lfxt; forRecord
	b (Lamg;FF)Lfxt; forLocalAmbience
	b (Lamg;)Lfxt; forAmbientAddition
	a (Lamg;Lapf;DDD)Lfxt; forAmbientMood
	<init> (Lamg;Lami;FFLapf;DDD)V <init>
	<init> (Lamg;Lami;FFLapf;ZILfxy$a;DDD)V <init>
	<init> (Lacq;Lami;FFLapf;ZILfxy$a;DDDZ)V <init>
fxu net/minecraft/client/resources/sounds/SnifferSoundInstance
	n VOLUME
	o PITCH
	p sniffer
	<init> (Lbtx;)V <init>
	s ()Z canPlaySound
	q ()V tick
fxv net/minecraft/client/resources/sounds/Sound
	a SOUND_LISTER
	b location
	c volume
	d pitch
	e weight
	f type
	g stream
	h preload
	i attenuationDistance
	<init> (Ljava/lang/String;Lbdf;Lbdf;ILfxv$a;ZZI)V <init>
	a ()Lacq; getLocation
	b ()Lacq; getPath
	c ()Lbdf; getVolume
	d ()Lbdf; getPitch
	e ()I getWeight
	a (Lapf;)Lfxv; getSound
	a (Lfyz;)V preloadIfRequired
	f ()Lfxv$a; getType
	g ()Z shouldStream
	h ()Z shouldPreload
	i ()I getAttenuationDistance
	toString ()Ljava/lang/String; toString
	b (Lapf;)Ljava/lang/Object; getSound
	<clinit> ()V <clinit>
fxv$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	values ()[Lfxv$a; values
	valueOf (Ljava/lang/String;)Lfxv$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lfxv$a; getByName
	a ()[Lfxv$a; $values
	<clinit> ()V <clinit>
fxw net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	<init> (Ljava/util/List;ZLjava/lang/String;)V <init>
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
fxx net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a DEFAULT_FLOAT
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfxw; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	b (Lcom/google/gson/JsonObject;)Lfxv; getSound
	a (Lcom/google/gson/JsonObject;Lfxv$a;)Lfxv$a; getType
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	<clinit> ()V <clinit>
fxy net/minecraft/client/resources/sounds/SoundInstance
	a ()Lacq; getLocation
	a (Lfzc;)Lfzd; resolve
	b ()Lfxv; getSound
	c ()Lami; getSource
	d ()Z isLooping
	l ()Z isRelative
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lfxy$a; getAttenuation
	r ()Z canStartSilent
	s ()Z canPlaySound
	t ()Lapf; createUnseededRandom
fxy$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
	values ()[Lfxy$a; values
	valueOf (Ljava/lang/String;)Lfxy$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfxy$a; $values
	<clinit> ()V <clinit>
fxz net/minecraft/client/resources/sounds/TickableSoundInstance
	m ()Z isStopped
	q ()V tick
fya net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a CHANCE_PER_TICK
	b RARE_CHANCE_PER_TICK
	c ULTRA_RARE_CHANCE_PER_TICK
	d MINIMUM_TICK_DELAY
	e player
	f soundManager
	g tickDelay
	<init> (Lfiy;Lfzc;)V <init>
	a ()V tick
fyb net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
	<init> ()V <init>
fyb$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	n player
	<init> (Lfiy;Lamg;)V <init>
	q ()V tick
fyb$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	n FADE_DURATION
	o player
	p fade
	<init> (Lfiy;)V <init>
	q ()V tick
fyc net/minecraft/client/resources/sounds/package-info
fyd net/minecraft/client/searchtree/FullTextSearchTree
	c contents
	d filler
	e plainTextSearchTree
	<init> (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/List;)V <init>
	a ()V refresh
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
fye net/minecraft/client/searchtree/IdSearchTree
	a additionOrder
	b resourceLocationSearchTree
	<init> (Ljava/util/function/Function;Ljava/util/List;)V <init>
	search (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
fyf net/minecraft/client/searchtree/IntersectionIterator
	a firstIterator
	b secondIterator
	c comparator
	<init> (Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Comparator;)V <init>
	computeNext ()Ljava/lang/Object; computeNext
fyg net/minecraft/client/searchtree/MergingUniqueIterator
	a firstIterator
	b secondIterator
	c comparator
	<init> (Ljava/util/Iterator;Ljava/util/Iterator;Ljava/util/Comparator;)V <init>
	computeNext ()Ljava/lang/Object; computeNext
fyh net/minecraft/client/searchtree/PlainTextSearchTree
	a ()Lfyh; empty
	a (Ljava/util/List;Ljava/util/function/Function;)Lfyh; create
	search (Ljava/lang/String;)Ljava/util/List; search
	a (Lfym;Ljava/lang/Object;Ljava/lang/String;)V lambda$create$1
	a (Ljava/lang/String;)Ljava/util/List; lambda$empty$0
fyi net/minecraft/client/searchtree/RefreshableSearchTree
	b ()Lfyi; empty
	a ()V refresh
	a (Ljava/lang/String;)Ljava/util/List; lambda$empty$0
fyj net/minecraft/client/searchtree/ResourceLocationSearchTree
	a ()Lfyj; empty
	a (Ljava/util/List;Ljava/util/function/Function;)Lfyj; create
	a (Ljava/lang/String;)Ljava/util/List; searchNamespace
	b (Ljava/lang/String;)Ljava/util/List; searchPath
	a (Lfym;Ljava/lang/Object;Lfym;Lacq;)V lambda$create$0
fyj$1 net/minecraft/client/searchtree/ResourceLocationSearchTree$1
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/util/List; searchNamespace
	b (Ljava/lang/String;)Ljava/util/List; searchPath
fyj$2 net/minecraft/client/searchtree/ResourceLocationSearchTree$2
	a val$namespaceTree
	b val$pathTree
	<init> (Lfym;Lfym;)V <init>
	a (Ljava/lang/String;)Ljava/util/List; searchNamespace
	b (Ljava/lang/String;)Ljava/util/List; searchPath
fyk net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	<init> ()V <init>
	a (Lakx;)V onResourceManagerReload
	a (Lfyk$a;Lfyk$b;)V register
	b (Lfyk$a;)Lfyk$c; getSupplier
	a (Lfyk$a;Ljava/util/List;)V populate
	a (Lfyk$a;)Lfyl; getTree
	<clinit> ()V <clinit>
fyk$a net/minecraft/client/searchtree/SearchRegistry$Key
	<init> ()V <init>
fyk$b net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier
fyk$c net/minecraft/client/searchtree/SearchRegistry$TreeEntry
	a factory
	b tree
	<init> (Lfyk$b;)V <init>
	a (Ljava/util/List;)V populate
	a ()V refresh
fyl net/minecraft/client/searchtree/SearchTree
	search (Ljava/lang/String;)Ljava/util/List; search
fym net/minecraft/client/searchtree/SuffixArray
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e END_OF_TEXT_MARKER
	f END_OF_DATA
	a list
	g chars
	h wordStarts
	i suffixToT
	j offsets
	k maxStringLength
	<init> ()V <init>
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a ()V generate
	b ()V print
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;I)I compare
	a (Ljava/lang/String;)Ljava/util/List; search
	a ([I[I[III)V lambda$generate$1
	a ([I[III)I lambda$generate$0
	<clinit> ()V <clinit>
fyn net/minecraft/client/searchtree/package-info
fyo net/minecraft/client/server/IntegratedPlayerList
	a playerData
	<init> (Lfyp;Lhl;Ldzb;)V <init>
	b (Laig;)V save
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lsw; canPlayerLogin
	b ()Lfyp; getServer
	r ()Lqr; getSingleplayerData
	c ()Lnet/minecraft/server/MinecraftServer; getServer
fyp net/minecraft/client/server/IntegratedServer
	n LOGGER
	o MIN_SIM_DISTANCE
	p minecraft
	q paused
	r publishedPort
	s publishedGameType
	t lanPinger
	u uuid
	v previousSimulationDistance
	<init> (Ljava/lang/Thread;Lenn;Ldyy$c;Laki;Ladk;Ladh;Laip;)V <init>
	e ()Z initServer
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a ()V tickPaused
	k ()Z shouldRconBroadcast
	N_ ()Z shouldInformAdmins
	z ()Ljava/io/File; getServerDirectory
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	a (Lo;)V onServerCrash
	a (Lab;)Lab; fillServerSystemReport
	K ()Laoz; getModdedStatus
	a (Lcmj;ZI)Z publishServer
	t ()V stopServer
	a (Z)V halt
	p ()Z isPublished
	M ()I getPort
	a (Lcmj;)V setDefaultGameType
	o ()Z isCommandBlockEnabled
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	a (Ljava/util/UUID;)V setUUID
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (I)I getScaledTrackingDistance
	aS ()Z forceSynchronousWrites
	aX ()Lcmj; getForcedGameType
	b ()V lambda$halt$3
	a (Ljava/util/Optional;)V lambda$publishServer$2
	a (Lbyq;)V lambda$publishServer$1
	c ()Ljava/lang/String; lambda$fillServerSystemReport$0
	<clinit> ()V <clinit>
fyq net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
fyr net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
	<init> ()V <init>
	<clinit> ()V <clinit>
fyr$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
	<init> (Lfyr$b;)V <init>
	run ()V run
fyr$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	<init> ()V <init>
	a ()Ljava/util/List; takeDirtyServers
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
fys net/minecraft/client/server/LanServerPinger
	c UNIQUE_THREAD_ID
	d LOGGER
	a MULTICAST_GROUP
	b PING_PORT
	e PING_INTERVAL
	f motd
	g socket
	h isRunning
	i serverAddress
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	run ()V run
	interrupt ()V interrupt
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
	<clinit> ()V <clinit>
fyt net/minecraft/client/server/package-info
fyu net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
fyv net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	<init> (Legf;Ljava/util/concurrent/Executor;)V <init>
	a (Legf$c;)Ljava/util/concurrent/CompletableFuture; createHandle
	a (Ljava/util/function/Consumer;)V executeOnChannels
	a ()V scheduleTick
	b ()V clear
	c ()V lambda$scheduleTick$3
	b (Ljava/util/function/Consumer;)V lambda$executeOnChannels$2
	a (Lfyv$a;)Lege; lambda$executeOnChannels$1
	a (Legf$c;Ljava/util/concurrent/CompletableFuture;)V lambda$createHandle$0
fyv$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	b channel
	c stopped
	a this$0
	a ()Z isStopped
	<init> (Lfyv;Lege;)V <init>
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
	b (Ljava/util/function/Consumer;)V lambda$execute$0
fyw net/minecraft/client/sounds/LoopingAudioStream
	a provider
	b stream
	c bufferedInputStream
	<init> (Lfyw$a;Ljava/io/InputStream;)V <init>
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	close ()V close
fyw$a net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider
	create (Ljava/io/InputStream;)Lfyu; create
fyw$b net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer
	<init> (Ljava/io/InputStream;)V <init>
	close ()V close
fyx net/minecraft/client/sounds/MusicManager
	a STARTING_DELAY
	b random
	c minecraft
	d currentMusic
	e nextSongDelay
	<init> (Lenn;)V <init>
	a ()V tick
	a (Lame;)V startPlaying
	b (Lame;)V stopPlaying
	b ()V stopPlaying
	c (Lame;)Z isPlayingMusic
fyy net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	<init> (Lala;)V <init>
	a (Lacq;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	a (Lacq;Z)Ljava/util/concurrent/CompletableFuture; getStream
	a ()V clear
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$preload$5
	a (Lfxv;)Ljava/util/concurrent/CompletableFuture; lambda$preload$4
	a (Ljava/util/concurrent/CompletableFuture;)V lambda$clear$3
	b (Lacq;Z)Lfyu; lambda$getStream$2
	b (Lacq;)Ljava/util/concurrent/CompletableFuture; lambda$getCompleteBuffer$1
	c (Lacq;)Legj; lambda$getCompleteBuffer$0
fyz net/minecraft/client/sounds/SoundEngine
	d MARKER
	e LOGGER
	f PITCH_MIN
	g PITCH_MAX
	h VOLUME_MIN
	i VOLUME_MAX
	j MIN_SOURCE_LIFETIME
	k ONLY_WARN_ONCE
	l DEFAULT_DEVICE_CHECK_INTERVAL_MS
	a MISSING_SOUND
	b OPEN_AL_SOFT_PREFIX
	c OPEN_AL_SOFT_PREFIX_LENGTH
	m soundManager
	n options
	o loaded
	p library
	q listener
	r soundBuffers
	s executor
	t channelAccess
	u tickCount
	v lastDeviceCheckTime
	w devicePoolState
	x instanceToChannel
	y instanceBySource
	z tickingSounds
	A queuedSounds
	B soundDeleteTime
	C listeners
	D queuedTickableSounds
	E preloadQueue
	<init> (Lfzc;Lenr;Lala;)V <init>
	a ()V reload
	h ()V loadLibrary
	a (Lami;)F getVolume
	a (Lami;F)V updateCategoryVolume
	b ()V destroy
	a (Lfxy;)V stop
	c ()V stopAll
	a (Lfzb;)V addEventListener
	b (Lfzb;)V removeEventListener
	i ()Z shouldChangeDevice
	a (Z)V tick
	j ()V tickNonPaused
	d (Lfxy;)Z requiresManualLooping
	e (Lfxy;)Z shouldLoopManually
	f (Lfxy;)Z shouldLoopAutomatically
	b (Lfxy;)Z isActive
	c (Lfxy;)V play
	a (Lfxz;)V queueTickingSound
	a (Lfxv;)V requestPreload
	g (Lfxy;)F calculatePitch
	h (Lfxy;)F calculateVolume
	a (FLami;)F calculateVolume
	d ()V pause
	e ()V resume
	a (Lfxy;I)V playDelayed
	a (Lemz;)V updateSource
	a (Lacq;Lami;)V stop
	f ()Ljava/lang/String; getDebugString
	g ()Ljava/util/List; getAvailableSoundDevices
	a (Leei;Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V lambda$updateSource$12
	a (Ljava/util/stream/Stream;)V lambda$resume$11
	b (Ljava/util/stream/Stream;)V lambda$pause$10
	a (Lfyv$a;Lfyu;)V lambda$play$9
	a (Lfyu;Lege;)V lambda$play$8
	a (Lfyv$a;Legj;)V lambda$play$7
	a (Legj;Lege;)V lambda$play$6
	a (FFLfxy$a;FZZLeei;ZLege;)V lambda$play$5
	a (FFLeei;Lege;)V lambda$tickNonPaused$4
	a (Ljava/lang/String;)V lambda$shouldChangeDevice$3
	a (Lfyv$a;)V lambda$stopAll$2
	a (Lfxy;Lfyv$a;)V lambda$updateCategoryVolume$1
	a (FLege;)V lambda$updateCategoryVolume$0
	<clinit> ()V <clinit>
fyz$a net/minecraft/client/sounds/SoundEngine$DeviceCheckState
	a ONGOING
	b CHANGE_DETECTED
	c NO_CHANGE
	d $VALUES
	values ()[Lfyz$a; values
	valueOf (Ljava/lang/String;)Lfyz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lfyz$a; $values
	<clinit> ()V <clinit>
fza net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	<init> ()V <init>
	b ()Ljava/lang/Thread; createThread
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	e (Ljava/lang/Runnable;)Z shouldRun
	au ()Ljava/lang/Thread; getRunningThread
	c ()V run
	bq ()V waitForTasks
	a ()V flush
	d ()Z lambda$run$0
fzb net/minecraft/client/sounds/SoundEventListener
	a (Lfxy;Lfzd;)V onPlaySound
fzc net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b INTENTIONALLY_EMPTY_SOUND_LOCATION
	c INTENTIONALLY_EMPTY_SOUND_EVENT
	d INTENTIONALLY_EMPTY_SOUND
	e LOGGER
	f SOUNDS_PATH
	g GSON
	h SOUND_EVENT_REGISTRATION_TYPE
	i registry
	j soundEngine
	k soundCache
	<init> (Lenr;)V <init>
	a (Lakx;Lban;)Lfzc$a; prepare
	a (Lfzc$a;Lakx;Lban;)V apply
	a ()Ljava/util/List; getAvailableSoundDevices
	a (Lfxv;Lacq;Lala;)Z validateSoundResource
	a (Lacq;)Lfzd; getSoundEvent
	b ()Ljava/util/Collection; getAvailableSounds
	a (Lfxz;)V queueTickingSound
	a (Lfxy;)V play
	a (Lfxy;I)V playDelayed
	a (Lemz;)V updateSource
	d ()V pause
	e ()V stop
	f ()V destroy
	a (Z)V tick
	g ()V resume
	a (Lami;F)V updateSourceVolume
	b (Lfxy;)V stop
	c (Lfxy;)Z isActive
	a (Lfzb;)V addListener
	b (Lfzb;)V removeListener
	a (Lacq;Lami;)V stop
	h ()Ljava/lang/String; getDebugString
	i ()V reload
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
fzc$1 net/minecraft/client/sounds/SoundManager$1
	<init> ()V <init>
fzc$2 net/minecraft/client/sounds/SoundManager$2
	a $SwitchMap$net$minecraft$client$resources$sounds$Sound$Type
	<clinit> ()V <clinit>
fzc$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	b soundCache
	<init> ()V <init>
	a (Lakx;)V listResources
	a (Lacq;Lfxw;)V handleRegistration
	a (Ljava/util/Map;Ljava/util/Map;Lfyz;)V apply
fzc$a$1 net/minecraft/client/sounds/SoundManager$Preparations$1
	a val$soundLocation
	b val$sound
	c this$0
	<init> (Lfzc$a;Lacq;Lfxv;)V <init>
	e ()I getWeight
	a (Lapf;)Lfxv; getSound
	a (Lfyz;)V preloadIfRequired
	b (Lapf;)Ljava/lang/Object; getSound
fzd net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b subtitle
	<init> (Lacq;Ljava/lang/String;)V <init>
	e ()I getWeight
	a (Lapf;)Lfxv; getSound
	a (Lfze;)V addSound
	a ()Lsw; getSubtitle
	a (Lfyz;)V preloadIfRequired
	b (Lapf;)Ljava/lang/Object; getSound
fze net/minecraft/client/sounds/Weighted
	e ()I getWeight
	b (Lapf;)Ljava/lang/Object; getSound
	a (Lfyz;)V preloadIfRequired
fzf net/minecraft/client/sounds/package-info
fzg net/minecraft/client/telemetry/ClientTelemetryManager
	a THREAD_COUNT
	b EXECUTOR
	c userApiService
	d deviceSessionProperties
	e logDirectory
	f logManager
	g outsideSessionSender
	<init> (Lenn;Lcom/mojang/authlib/minecraft/UserApiService;Leoc;)V <init>
	a (ZLjava/time/Duration;Ljava/lang/String;)Lfzp; createWorldSessionManager
	a ()Lfzk; getOutsideSessionSender
	c ()Lfzk; createEventSender
	b ()Ljava/nio/file/Path; getLogDirectory
	close ()V close
	a (Ljava/util/Optional;)V lambda$close$7
	a (Ljava/util/concurrent/CompletableFuture;Lcom/mojang/authlib/minecraft/TelemetrySession;Lfzl;Ljava/util/function/Consumer;)V lambda$createEventSender$6
	a (Lfzh;Lcom/mojang/authlib/minecraft/TelemetrySession;Ljava/util/Optional;)V lambda$createEventSender$5
	b (Ljava/util/Optional;)Ljava/util/concurrent/CompletionStage; lambda$createEventSender$4
	d ()Ljava/util/concurrent/CompletableFuture; lambda$createEventSender$3
	a (Lfzo$a;Ljava/lang/String;)V lambda$new$2
	b (Lfzo$a;Ljava/lang/String;)V lambda$new$1
	a (Ljava/lang/Runnable;)Ljava/lang/Thread; lambda$static$0
	<clinit> ()V <clinit>
fzh net/minecraft/client/telemetry/TelemetryEventInstance
	b type
	c properties
	a CODEC
	<init> (Lfzl;Lfzo;)V <init>
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lfzl; type
	b ()Lfzo; properties
	a (Lfzl;Lfzn;)V lambda$new$0
	<clinit> ()V <clinit>
fzi net/minecraft/client/telemetry/TelemetryEventLog
	a LOGGER
	b log
	c mailbox
	<init> (Ljava/nio/channels/FileChannel;Ljava/util/concurrent/Executor;)V <init>
	a ()Lfzj; logger
	close ()V close
	b ()V lambda$close$2
	a (Lfzh;)V lambda$logger$1
	b (Lfzh;)V lambda$logger$0
	<clinit> ()V <clinit>
fzj net/minecraft/client/telemetry/TelemetryEventLogger
	log (Lfzh;)V log
fzk net/minecraft/client/telemetry/TelemetryEventSender
	a DISABLED
	decorate (Ljava/util/function/Consumer;)Lfzk; decorate
	send (Lfzl;Ljava/util/function/Consumer;)V send
	a (Ljava/util/function/Consumer;Lfzl;Ljava/util/function/Consumer;)V lambda$decorate$2
	a (Ljava/util/function/Consumer;Ljava/util/function/Consumer;Lfzo$a;)V lambda$decorate$1
	a (Lfzl;Ljava/util/function/Consumer;)V lambda$static$0
	<clinit> ()V <clinit>
fzl net/minecraft/client/telemetry/TelemetryEventType
	h REGISTRY
	a CODEC
	i GLOBAL_PROPERTIES
	j WORLD_SESSION_PROPERTIES
	b WORLD_LOADED
	c PERFORMANCE_METRICS
	d WORLD_LOAD_TIMES
	e WORLD_UNLOADED
	f ADVANCEMENT_MADE
	g GAME_LOAD_TIMES
	k id
	l exportKey
	m properties
	n isOptIn
	o codec
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)Lfzl$a; builder
	a ()Ljava/lang/String; id
	b ()Ljava/util/List; properties
	c ()Lcom/mojang/serialization/Codec; codec
	d ()Z isOptIn
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;Lfzo;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	a (Lfzn;)Z contains
	toString ()Ljava/lang/String; toString
	e ()Ltj; title
	f ()Ltj; description
	a (Ljava/lang/String;)Ltj; makeTranslation
	g ()Ljava/util/List; values
	a (Lfzo;)Lfzh; lambda$new$2
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$1
	c (Ljava/lang/String;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
fzl$a net/minecraft/client/telemetry/TelemetryEventType$Builder
	a id
	b exportKey
	c properties
	d isOptIn
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ljava/util/List;)Lfzl$a; defineAll
	a (Lfzn;)Lfzl$a; define
	a ()Lfzl$a; optIn
	b ()Lfzl; register
fzm net/minecraft/client/telemetry/TelemetryLogManager
	a LOGGER
	b RAW_EXTENSION
	c EXPIRY_DAYS
	d directory
	e sessionLog
	<init> (Lazz;)V <init>
	a (Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; open
	a ()Ljava/util/concurrent/CompletableFuture; openLogger
	close ()V close
	a (Ljava/util/Optional;)V lambda$close$3
	b (Ljava/util/Optional;)Ljava/util/Optional; lambda$openLogger$2
	b ()Ljava/util/Optional; lambda$openLogger$1
	b (Ljava/nio/file/Path;)Ljava/util/Optional; lambda$open$0
	<clinit> ()V <clinit>
fzn net/minecraft/client/telemetry/TelemetryProperty
	F id
	G exportKey
	H codec
	I exporter
	J TIMESTAMP_FORMATTER
	a USER_ID
	b CLIENT_ID
	c MINECRAFT_SESSION_ID
	d GAME_VERSION
	e OPERATING_SYSTEM
	f PLATFORM
	g CLIENT_MODDED
	h LAUNCHER_NAME
	i WORLD_SESSION_ID
	j SERVER_MODDED
	k SERVER_TYPE
	l OPT_IN
	m EVENT_TIMESTAMP_UTC
	n GAME_MODE
	o REALMS_MAP_CONTENT
	p SECONDS_SINCE_LOAD
	q TICKS_SINCE_LOAD
	r FRAME_RATE_SAMPLES
	s RENDER_TIME_SAMPLES
	t USED_MEMORY_SAMPLES
	u NUMBER_OF_SAMPLES
	v RENDER_DISTANCE
	w DEDICATED_MEMORY_KB
	x WORLD_LOAD_TIME_MS
	y NEW_WORLD
	z LOAD_TIME_TOTAL_TIME_MS
	A LOAD_TIME_PRE_WINDOW_MS
	B LOAD_TIME_BOOTSTRAP_MS
	C LOAD_TIME_LOADING_OVERLAY_MS
	D ADVANCEMENT_ID
	E ADVANCEMENT_GAME_TIME
	<init> (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lfzn$a;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lfzn$a;)Lfzn; create
	a (Ljava/lang/String;Ljava/lang/String;)Lfzn; bool
	b (Ljava/lang/String;Ljava/lang/String;)Lfzn; string
	c (Ljava/lang/String;Ljava/lang/String;)Lfzn; integer
	d (Ljava/lang/String;Ljava/lang/String;)Lfzn; makeLong
	e (Ljava/lang/String;Ljava/lang/String;)Lfzn; uuid
	f (Ljava/lang/String;Ljava/lang/String;)Lfzn; gameLoadMeasurement
	g (Ljava/lang/String;Ljava/lang/String;)Lfzn; longSamples
	a (Lfzo;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V export
	a ()Ltj; title
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; id
	c ()Ljava/lang/String; exportKey
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lfzn$a; exporter
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Lit/unimi/dsi/fastutil/longs/LongList;)V lambda$longSamples$5
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Lfzr$a;)V lambda$gameLoadMeasurement$4
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Ljava/util/UUID;)V lambda$uuid$3
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Lfzn$b;)V lambda$static$2
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Ljava/time/Instant;)V lambda$static$1
	a (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Lfzn$c;)V lambda$static$0
	<clinit> ()V <clinit>
fzn$a net/minecraft/client/telemetry/TelemetryProperty$Exporter
	apply (Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;Ljava/lang/String;Ljava/lang/Object;)V apply
fzn$b net/minecraft/client/telemetry/TelemetryProperty$GameMode
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e HARDCORE
	f CODEC
	g key
	h id
	i $VALUES
	values ()[Lfzn$b; values
	valueOf (Ljava/lang/String;)Lfzn$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	a ()I id
	c ()Ljava/lang/String; getSerializedName
	b ()[Lfzn$b; $values
	<clinit> ()V <clinit>
fzn$c net/minecraft/client/telemetry/TelemetryProperty$ServerType
	a REALM
	b LOCAL
	c OTHER
	d CODEC
	e key
	f $VALUES
	values ()[Lfzn$c; values
	valueOf (Ljava/lang/String;)Lfzn$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lfzn$c; $values
	<clinit> ()V <clinit>
fzo net/minecraft/client/telemetry/TelemetryPropertyMap
	a entries
	<init> (Ljava/util/Map;)V <init>
	a ()Lfzo$a; builder
	a (Ljava/util/List;)Lcom/mojang/serialization/Codec; createCodec
	a (Lfzn;)Ljava/lang/Object; get
	toString ()Ljava/lang/String; toString
	b ()Ljava/util/Set; propertySet
fzo$1 net/minecraft/client/telemetry/TelemetryPropertyMap$1
	a val$properties
	<init> (Ljava/util/List;)V <init>
	a (Lfzo;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lfzo;Lcom/mojang/serialization/RecordBuilder;Lfzn;)Lcom/mojang/serialization/RecordBuilder; encodeProperty
	decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; decode
	a (Lcom/mojang/serialization/DataResult;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;Lfzn;)Lcom/mojang/serialization/DataResult; decodeProperty
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lfzn;Lfzo$a;Ljava/lang/Object;)Lfzo$a; lambda$decodeProperty$0
fzo$a net/minecraft/client/telemetry/TelemetryPropertyMap$Builder
	a entries
	<init> ()V <init>
	a (Lfzn;Ljava/lang/Object;)Lfzo$a; put
	b (Lfzn;Ljava/lang/Object;)Lfzo$a; putIfNotNull
	a (Lfzo;)Lfzo$a; putAll
	a ()Lfzo; build
fzp net/minecraft/client/telemetry/WorldSessionTelemetryManager
	a worldSessionId
	b eventSender
	c worldLoadEvent
	d worldUnloadEvent
	e performanceMetricsEvent
	f worldLoadTimesEvent
	<init> (Lfzk;ZLjava/time/Duration;Ljava/lang/String;)V <init>
	a ()V tick
	a (Lcmj;Z)V onPlayerInfoReceived
	a (Ljava/lang/String;)V onServerBrandReceived
	a (J)V setTime
	b ()V worldSessionStart
	c ()V onDisconnect
	a (Lcmm;Lae;)V onAdvancementDone
	a (Lacq;JLfzo$a;)V lambda$onAdvancementDone$1
	a (Lfzo$a;)V lambda$new$0
fzq net/minecraft/client/telemetry/events/AggregatedTelemetryEvent
	a SAMPLE_INTERVAL_MS
	b SAMPLES_PER_EVENT
	c sampleCount
	d ticking
	e lastSampleTime
	<init> ()V <init>
	a ()V start
	a (Lfzk;)V tick
	b ()Z shouldTakeSample
	c ()Z shouldSentEvent
	d ()V stop
	e ()I getSampleCount
	f ()V takeSample
	b (Lfzk;)V sendEvent
fzr net/minecraft/client/telemetry/events/GameLoadTimesEvent
	a INSTANCE
	b LOGGER
	c timeSource
	d measurements
	e bootstrapTime
	<init> (Lcom/google/common/base/Ticker;)V <init>
	a (Lfzn;)V beginStep
	a (Lfzn;Lcom/google/common/base/Stopwatch;)V beginStep
	a (Lfzn;Ljava/util/function/Function;)V beginStep
	b (Lfzn;)V endStep
	a (Lfzk;)V send
	a (J)V setBootstrapTime
	a (Lfzo$a;)V lambda$send$4
	a (Lfzo$a;J)V lambda$send$3
	a (Lfzo$a;Lfzn;Lcom/google/common/base/Stopwatch;)V lambda$send$2
	a (Lcom/google/common/base/Stopwatch;Lfzn;)Lcom/google/common/base/Stopwatch; lambda$beginStep$1
	c (Lfzn;)Lcom/google/common/base/Stopwatch; lambda$beginStep$0
	<clinit> ()V <clinit>
fzr$a net/minecraft/client/telemetry/events/GameLoadTimesEvent$Measurement
	b millis
	a CODEC
	<init> (I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I millis
	a (Lfzr$a;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
fzs net/minecraft/client/telemetry/events/PerformanceMetricsEvent
	a DEDICATED_MEMORY_KB
	b fpsSamples
	c frameTimeSamples
	d usedMemorySamples
	<init> ()V <init>
	a (Lfzk;)V tick
	g ()V resetValues
	f ()V takeSample
	h ()V takeUsedMemorySample
	b (Lfzk;)V sendEvent
	a (J)J toKilobytes
	a (Lfzo$a;)V lambda$sendEvent$0
	<clinit> ()V <clinit>
fzt net/minecraft/client/telemetry/events/WorldLoadEvent
	a eventSent
	b gameMode
	c serverBrand
	d minigameName
	<init> (Ljava/lang/String;)V <init>
	a (Lfzo$a;)V addProperties
	a ()Lfzn$c; getServerType
	a (Lfzk;)Z send
	a (Lcmj;Z)V setGameMode
	a (Ljava/lang/String;)V setServerBrand
	b (Lfzo$a;)V lambda$send$0
fzt$1 net/minecraft/client/telemetry/events/WorldLoadEvent$1
	a $SwitchMap$net$minecraft$world$level$GameType
	<clinit> ()V <clinit>
fzu net/minecraft/client/telemetry/events/WorldLoadTimesEvent
	a newWorld
	b worldLoadDuration
	<init> (ZLjava/time/Duration;)V <init>
	a (Lfzk;)V send
	a (Lfzo$a;)V lambda$send$0
fzv net/minecraft/client/telemetry/events/WorldUnloadEvent
	a NOT_TRACKING_TIME
	b worldLoadedTime
	c totalTicks
	d lastGameTime
	<init> ()V <init>
	a ()V onPlayerInfoReceived
	a (J)V setTime
	a (Ljava/time/Instant;)I getTimeInSecondsSinceLoad
	a (Lfzk;)V send
	a (Lfzk;Ljava/time/Instant;)V lambda$send$1
	a (Ljava/time/Instant;Lfzo$a;)V lambda$send$0
fzw net/minecraft/client/telemetry/events/package-info
fzx net/minecraft/client/telemetry/package-info
fzy net/minecraft/client/tutorial/BundleTutorial
	a tutorial
	b options
	c toast
	<init> (Lgaf;Lenr;)V <init>
	a ()V showToast
	b ()V clearToast
	a (Lcfz;Lcfz;Lcbn;)V onInventoryAction
fzz net/minecraft/client/tutorial/CompletedTutorialStepInstance
	<init> (Lgaf;)V <init>
gaa net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a HINT_DELAY
	b CRAFT_TITLE
	c CRAFT_DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	<init> (Lgaf;)V <init>
	a ()V tick
	b ()V clear
	a (Lcfz;)V onGetItem
	a (Lfiy;Lanl;)Z hasCraftedPlanksPreviously
	<clinit> ()V <clinit>
gab net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	<init> (Lgaf;)V <init>
	a ()V tick
	b ()V clear
	a (Lfew;Leeg;)V onLookAt
	a (Lcfz;)V onGetItem
	b (Lfiy;)Z hasCollectedTreeItems
	a (Lfiy;)Z hasPunchedTreesPreviously
	b (Lcfz;)Z lambda$hasCollectedTreeItems$0
	<clinit> ()V <clinit>
gac net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MINIMUM_TIME_MOVED
	b MINIMUM_TIME_LOOKED
	c MOVE_HINT_DELAY
	d LOOK_HINT_DELAY
	e INCOMPLETE
	f MOVE_TITLE
	g MOVE_DESCRIPTION
	h LOOK_TITLE
	i LOOK_DESCRIPTION
	j tutorial
	k moveToast
	l lookToast
	m timeWaiting
	n timeMoved
	o timeLooked
	p moved
	q turned
	r moveCompleted
	s lookCompleted
	<init> (Lgaf;)V <init>
	a ()V tick
	b ()V clear
	a (Lfiw;)V onInput
	a (DD)V onMouse
	<clinit> ()V <clinit>
gad net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	<init> (Lgaf;)V <init>
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
	<clinit> ()V <clinit>
gae net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	g resetCount
	<init> (Lgaf;)V <init>
	a ()V tick
	b ()V clear
	a (Lfew;Lgu;Ldcb;F)V onDestroyBlock
	a (Lcfz;)V onGetItem
	<clinit> ()V <clinit>
gaf net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	c timedToasts
	d bundleTutorial
	<init> (Lenn;Lenr;)V <init>
	a (Lfiw;)V onInput
	a (DD)V onMouse
	a (Lfew;Leeg;)V onLookAt
	a (Lfew;Lgu;Ldcb;F)V onDestroyBlock
	a ()V onOpenInventory
	a (Lcfz;)V onGetItem
	b ()V stop
	c ()V start
	a (Leri;I)V addTimedToast
	a (Leri;)V removeTimedToast
	d ()V tick
	a (Lgah;)V setStep
	e ()Lenn; getMinecraft
	f ()Z isSurvival
	a (Ljava/lang/String;)Lsw; key
	a (Lcfz;Lcfz;Lcbn;)V onInventoryAction
	a (Leri;Lgaf$a;)Z lambda$removeTimedToast$0
gaf$a net/minecraft/client/tutorial/Tutorial$TimedToast
	a toast
	b durationTicks
	c progress
	<init> (Leri;I)V <init>
	a ()Z updateProgress
gag net/minecraft/client/tutorial/TutorialStepInstance
	b ()V clear
	a ()V tick
	a (Lfiw;)V onInput
	a (DD)V onMouse
	a (Lfew;Leeg;)V onLookAt
	a (Lfew;Lgu;Ldcb;F)V onDestroyBlock
	c ()V onOpenInventory
	a (Lcfz;)V onGetItem
gah net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	values ()[Lgah; values
	valueOf (Ljava/lang/String;)Lgah; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Function;)V <init>
	a (Lgaf;)Lgag; create
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lgah; getByName
	b ()[Lgah; $values
	<clinit> ()V <clinit>
gai net/minecraft/client/tutorial/package-info
dl net/minecraft/commands/BrigadierExceptions
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	A DISPATCHER_PARSE_EXCEPTION
	<init> ()V <init>
	doubleTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooLow
	doubleTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooHigh
	floatTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooLow
	floatTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooHigh
	integerTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooLow
	integerTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooHigh
	longTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooLow
	longTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooHigh
	literalIncorrect ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; literalIncorrect
	readerExpectedStartOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedStartOfQuote
	readerExpectedEndOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedEndOfQuote
	readerInvalidEscape ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidEscape
	readerInvalidBool ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidBool
	readerInvalidInt ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidInt
	readerExpectedInt ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedInt
	readerInvalidLong ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidLong
	readerExpectedLong ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedLong
	readerInvalidDouble ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidDouble
	readerExpectedDouble ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedDouble
	readerInvalidFloat ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidFloat
	readerExpectedFloat ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedFloat
	readerExpectedBool ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedBool
	readerExpectedSymbol ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerExpectedSymbol
	dispatcherUnknownCommand ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownCommand
	dispatcherUnknownArgument ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownArgument
	dispatcherExpectedArgumentSeparator ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherExpectedArgumentSeparator
	dispatcherParseException ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; dispatcherParseException
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$16
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$15
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$14
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$13
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$12
	f (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$11
	g (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$10
	h (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$9
	i (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$8
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$7
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$6
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	d (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	e (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	f (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	g (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	h (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dm net/minecraft/commands/CommandBuildContext
	a (Lacp;)Lhg; holderLookup
	a (Lhg$b;Lcaw;)Ldm; simple
	a (Lhs;Lcaw;)Ldm$a; configurable
dm$1 net/minecraft/commands/CommandBuildContext$1
	a val$access
	b val$enabledFeatures
	<init> (Lhg$b;Lcaw;)V <init>
	a (Lacp;)Lhg; holderLookup
dm$2 net/minecraft/commands/CommandBuildContext$2
	c missingTagAccessPolicy
	a val$registryAccess
	b val$enabledFeatures
	<init> (Lhs;Lcaw;)V <init>
	a (Ldm$b;)V missingTagAccessPolicy
	a (Lacp;)Lhg; holderLookup
dm$2$1 net/minecraft/commands/CommandBuildContext$2$1
	a val$originalLookup
	b val$originalTagAddingLookup
	c this$0
	<init> (Ldm$2;Lhg$c;Lhg$c;)V <init>
	a ()Lhg$c; parent
dm$3 net/minecraft/commands/CommandBuildContext$3
	a $SwitchMap$net$minecraft$commands$CommandBuildContext$MissingTagAccessPolicy
	<clinit> ()V <clinit>
dm$a net/minecraft/commands/CommandBuildContext$Configurable
	a (Ldm$b;)V missingTagAccessPolicy
dm$b net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	a CREATE_NEW
	b FAIL
	c $VALUES
	values ()[Ldm$b; values
	valueOf (Ljava/lang/String;)Ldm$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldm$b; $values
	<clinit> ()V <clinit>
dn net/minecraft/commands/CommandFunction
	a entries
	b id
	<init> (Lacq;[Ldn$c;)V <init>
	a ()Lacq; getId
	b ()[Ldn$c; getEntries
	a (Lacq;Lcom/mojang/brigadier/CommandDispatcher;Lds;Ljava/util/List;)Ldn; fromLines
dn$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	<init> (Lacq;)V <init>
	<init> (Ldn;)V <init>
	a (Lade;)Ljava/util/Optional; get
	a ()Lacq; getId
	a (Ldn;)Lacq; lambda$getId$0
	<clinit> ()V <clinit>
dn$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	<init> (Lcom/mojang/brigadier/ParseResults;)V <init>
	execute (Lade;Lds;Ljava/util/Deque;IILade$c;)V execute
	a (Lade;Lds;)I execute
	toString ()Ljava/lang/String; toString
	a (Lds;Lds;)Lds; lambda$execute$0
dn$c net/minecraft/commands/CommandFunction$Entry
	execute (Lade;Lds;Ljava/util/Deque;IILade$c;)V execute
dn$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
	<init> (Ldn;)V <init>
	execute (Lade;Lds;Ljava/util/Deque;IILade$c;)V execute
	toString ()Ljava/lang/String; toString
	a (Lade$c;I)V lambda$execute$1
	a (Lade$c;IILjava/util/Deque;Lds;Ldn;)V lambda$execute$0
dp net/minecraft/commands/CommandRuntimeException
	a message
	<init> (Lsw;)V <init>
	a ()Lsw; getComponent
dq net/minecraft/commands/CommandSigningContext
	a ANONYMOUS
	a (Ljava/lang/String;)Ltl; getArgument
	<clinit> ()V <clinit>
dq$1 net/minecraft/commands/CommandSigningContext$1
	<init> ()V <init>
	a (Ljava/lang/String;)Ltl; getArgument
dq$a net/minecraft/commands/CommandSigningContext$SignedArguments
	b arguments
	<init> (Ljava/util/Map;)V <init>
	a (Ljava/lang/String;)Ltl; getArgument
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; arguments
dr net/minecraft/commands/CommandSource
	a NULL
	a (Lsw;)V sendSystemMessage
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	f_ ()Z alwaysAccepts
	<clinit> ()V <clinit>
dr$1 net/minecraft/commands/CommandSource$1
	<init> ()V <init>
	a (Lsw;)V sendSystemMessage
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
ds net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	c source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	o signingContext
	p chatMessageChainer
	q returnValueConsumer
	<init> (Ldr;Leei;Leeh;Laif;ILjava/lang/String;Lsw;Lnet/minecraft/server/MinecraftServer;Lbfj;)V <init>
	<init> (Ldr;Leei;Leeh;Laif;ILjava/lang/String;Lsw;Lnet/minecraft/server/MinecraftServer;Lbfj;ZLcom/mojang/brigadier/ResultConsumer;Leb$a;Ldq;Lapt;Ljava/util/function/IntConsumer;)V <init>
	a (Ldr;)Lds; withSource
	a (Lbfj;)Lds; withEntity
	a (Leei;)Lds; withPosition
	a (Leeh;)Lds; withRotation
	a (Lcom/mojang/brigadier/ResultConsumer;)Lds; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lds; withCallback
	a ()Lds; withSuppressedOutput
	a (I)Lds; withPermission
	b (I)Lds; withMaximumPermission
	a (Leb$a;)Lds; withAnchor
	a (Laif;)Lds; withLevel
	a (Lbfj;Leb$a;)Lds; facing
	b (Leei;)Lds; facing
	a (Ldq;)Lds; withSigningContext
	a (Lapt;)Lds; withChatMessageChainer
	a (Ljava/util/function/IntConsumer;)Lds; withReturnValueConsumer
	b ()Lsw; getDisplayName
	c ()Ljava/lang/String; getTextName
	c (I)Z hasPermission
	d ()Leei; getPosition
	e ()Laif; getLevel
	f ()Lbfj; getEntity
	g ()Lbfj; getEntityOrException
	h ()Laig; getPlayerOrException
	i ()Laig; getPlayer
	j ()Z isPlayer
	k ()Leeh; getRotation
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	m ()Leb$a; getAnchor
	n ()Ldq; getSigningContext
	o ()Lapt; getChatMessageChainer
	p ()Ljava/util/function/IntConsumer; getReturnValueConsumer
	a (Laig;)Z shouldFilterMessageTo
	a (Ltk;ZLss$a;)V sendChatMessage
	a (Lsw;)V sendSystemMessage
	a (Ljava/util/function/Supplier;Z)V sendSuccess
	c (Lsw;)V broadcastToAdmins
	b (Lsw;)V sendFailure
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	q ()Ljava/util/Collection; getOnlinePlayerNames
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lacp;Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	u ()Ljava/util/Set; levels
	v ()Lhs; registryAccess
	w ()Lcaw; enabledFeatures
	a (Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lhr;)Ljava/util/concurrent/CompletableFuture; lambda$suggestRegistryElements$2
	d (I)V lambda$new$1
	b (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
	<clinit> ()V <clinit>
dt net/minecraft/commands/Commands
	f LOGGER
	a LEVEL_ALL
	b LEVEL_MODERATORS
	c LEVEL_GAMEMASTERS
	d LEVEL_ADMINS
	e LEVEL_OWNERS
	g dispatcher
	<init> (Ldt$a;Ldm;)V <init>
	a (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; mapSource
	a (Lds;Ljava/lang/String;)I performPrefixedCommand
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I performCommand
	a (Laig;)V sendCommands
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lds;Ljava/util/Map;)V fillUsableCommands
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Ldt$b;)Ljava/util/function/Predicate; createValidator
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	a (Lhg$b;)Ldm; createValidationContext
	b ()V validate
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String; lambda$validate$9
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Z lambda$validate$8
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V lambda$validate$7
	a (Ldt$b;Ljava/lang/String;)Z lambda$createValidator$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$fillUsableCommands$5
	a (Ldu;)Z lambda$fillUsableCommands$4
	a (Ltj;Lts;)Lts; lambda$performCommand$3
	a (Ljava/lang/String;Lts;)Lts; lambda$performCommand$2
	b (Ljava/lang/String;)Ljava/lang/String; lambda$performCommand$1
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
	<clinit> ()V <clinit>
dt$1 net/minecraft/commands/Commands$1
	a val$registries
	<init> (Lhg$b;)V <init>
	a (Lacp;)Lhg; holderLookup
dt$1$1 net/minecraft/commands/Commands$1$1
	a val$original
	b this$0
	<init> (Ldt$1;Lhg;Lhg$c;)V <init>
	a (Lanl;)Ljava/util/Optional; get
	b (Lanl;)Lhi$c; getOrThrow
	a (Lhg$c;Lanl;)Lhi$c; lambda$getOrThrow$0
dt$a net/minecraft/commands/Commands$CommandSelection
	a ALL
	b DEDICATED
	c INTEGRATED
	d includeIntegrated
	e includeDedicated
	f $VALUES
	values ()[Ldt$a; values
	valueOf (Ljava/lang/String;)Ldt$a; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()[Ldt$a; $values
	<clinit> ()V <clinit>
dt$b net/minecraft/commands/Commands$ParseFunction
	parse (Lcom/mojang/brigadier/StringReader;)V parse
du net/minecraft/commands/SharedSuggestionProvider
	q ()Ljava/util/Collection; getOnlinePlayerNames
	x ()Ljava/util/Collection; getCustomTabSugggestions
	y ()Ljava/util/Collection; getSelectedEntities
	r ()Ljava/util/Collection; getAllTeams
	s ()Ljava/util/stream/Stream; getAvailableSounds
	t ()Ljava/util/stream/Stream; getRecipeNames
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	z ()Ljava/util/Collection; getRelevantCoordinates
	A ()Ljava/util/Collection; getAbsoluteCoordinates
	u ()Ljava/util/Set; levels
	v ()Lhs; registryAccess
	w ()Lcaw; enabledFeatures
	a (Lhr;Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestRegistryElements
	a (Lacp;Ldu$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	c (I)Z hasPermission
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	a (Ljava/lang/String;Ljava/lang/String;)Z matchesSubStr
	b (Ljava/lang/String;Ljava/lang/String;)Z lambda$suggest$5
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$suggestResource$4
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lacq;)V lambda$suggestResource$3
	a (Lacq;)Lacq; lambda$suggestResource$2
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lacq;)V lambda$suggestResource$1
	b (Lacq;)Lacq; lambda$suggestResource$0
du$a net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	a TAGS
	b ELEMENTS
	c ALL
	d $VALUES
	values ()[Ldu$a; values
	valueOf (Ljava/lang/String;)Ldu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z shouldSuggestTags
	b ()Z shouldSuggestElements
	c ()[Ldu$a; $values
	<clinit> ()V <clinit>
du$b net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	<clinit> ()V <clinit>
dv net/minecraft/commands/arguments/AngleArgument
	c EXAMPLES
	a ERROR_NOT_COMPLETE
	b ERROR_INVALID_ANGLE
	<init> ()V <init>
	a ()Ldv; angle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F getAngle
	a (Lcom/mojang/brigadier/StringReader;)Ldv$a; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
dv$a net/minecraft/commands/arguments/AngleArgument$SingleAngle
	a angle
	b isRelative
	<init> (FZ)V <init>
	a (Lds;)F getAngle
dw net/minecraft/commands/arguments/ArgumentSignatures
	b entries
	a EMPTY
	c MAX_ARGUMENT_COUNT
	d MAX_ARGUMENT_NAME_LENGTH
	<init> (Lsf;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/lang/String;)Lth; get
	a (Lsf;)V write
	a (Ltn;Ldw$b;)Ldw; signCommand
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; entries
	a (Ldw$b;Ltn$a;)Ldw$a; lambda$signCommand$1
	a (Lsf;Ldw$a;)V lambda$write$0
	<clinit> ()V <clinit>
dw$a net/minecraft/commands/arguments/ArgumentSignatures$Entry
	a name
	b signature
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;Lth;)V <init>
	a (Lsf;)V write
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	b ()Lth; signature
dw$b net/minecraft/commands/arguments/ArgumentSignatures$Signer
	sign (Ljava/lang/String;)Lth; sign
dx net/minecraft/commands/arguments/ColorArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Ldx; color
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ln; getColor
	a (Lcom/mojang/brigadier/StringReader;)Ln; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dy net/minecraft/commands/arguments/ComponentArgument
	b EXAMPLES
	a ERROR_INVALID_JSON
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lsw; getComponent
	a ()Ldy; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lsw; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
dz net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Ldz; compoundTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqr; getCompoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lqr; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ea net/minecraft/commands/arguments/DimensionArgument
	a EXAMPLES
	b ERROR_INVALID_VALUE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Lacq; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a ()Lea; dimension
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laif; getDimension
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lacp;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
eb net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leb$a; getAnchor
	a ()Leb; anchor
	a (Lcom/mojang/brigadier/StringReader;)Leb$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
eb$a net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	a FEET
	b EYES
	c BY_NAME
	d name
	e transform
	f $VALUES
	values ()[Leb$a; values
	valueOf (Ljava/lang/String;)Leb$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V <init>
	a (Ljava/lang/String;)Leb$a; getByName
	a (Lbfj;)Leei; apply
	a (Lds;)Leei; apply
	a (Ljava/util/HashMap;)V lambda$static$2
	a (Leei;Lbfj;)Leei; lambda$static$1
	b (Leei;Lbfj;)Leei; lambda$static$0
	a ()[Leb$a; $values
	<clinit> ()V <clinit>
ec net/minecraft/commands/arguments/EntityArgument
	g EXAMPLES
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	h single
	i playersOnly
	<init> (ZZ)V <init>
	a ()Lec; entity
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbfj; getEntity
	b ()Lec; entities
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	c ()Lec; player
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laig; getPlayer
	d ()Lec; players
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
	a (Lcom/mojang/brigadier/StringReader;)Lga; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ldu;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$0
	<clinit> ()V <clinit>
ec$a net/minecraft/commands/arguments/EntityArgument$Info
	a FLAG_SINGLE
	b FLAG_PLAYERS_ONLY
	<init> ()V <init>
	a (Lec$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lec$a$a; deserializeFromNetwork
	a (Lec$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lec;)Lec$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
ec$a$a net/minecraft/commands/arguments/EntityArgument$Info$Template
	b single
	c playersOnly
	a this$0
	<init> (Lec$a;ZZ)V <init>
	a (Ldm;)Lec; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
ed net/minecraft/commands/arguments/GameModeArgument
	a EXAMPLES
	b VALUES
	c ERROR_INVALID
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Lcmj; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a ()Led; gameMode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcmj; getGameMode
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ee net/minecraft/commands/arguments/GameProfileArgument
	b EXAMPLES
	a ERROR_UNKNOWN_PLAYER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
	a ()Lee; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Lee$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$listSuggestions$1
	a (Ljava/lang/String;Lds;)Ljava/util/Collection; lambda$parse$0
	<clinit> ()V <clinit>
ee$a net/minecraft/commands/arguments/GameProfileArgument$Result
	getNames (Lds;)Ljava/util/Collection; getNames
ee$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
	<init> (Lga;)V <init>
	getNames (Lds;)Ljava/util/Collection; getNames
ef net/minecraft/commands/arguments/HeightmapTypeArgument
	a LOWER_CASE_CODEC
	b ()[Ldhk$a; keptTypes
	<init> ()V <init>
	a ()Lef; heightmap
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldhk$a; getHeightmap
	a (Ljava/lang/String;)Ljava/lang/String; convertId
	a (I)[Ldhk$a; lambda$keptTypes$1
	b (Ljava/lang/String;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
eg net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Leg; message
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lsw; getMessage
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V resolveChatMessage
	a (Ljava/util/function/Consumer;Lds;Ltl;)V resolveSignedMessage
	b (Ljava/util/function/Consumer;Lds;Ltl;)V resolveDisguisedMessage
	a (Lds;Ltl;)Ljava/util/concurrent/CompletableFuture; filterPlainText
	a (Lcom/mojang/brigadier/StringReader;)Leg$a; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ltl;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$resolveDisguisedMessage$3
	a (Ljava/util/function/Consumer;Ltl;Lsw;)V lambda$resolveDisguisedMessage$2
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ltl;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$resolveSignedMessage$1
	a (Ltl;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/lang/Void;)V lambda$resolveSignedMessage$0
	<clinit> ()V <clinit>
eg$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	<init> (Ljava/lang/String;[Leg$b;)V <init>
	a ()Ljava/lang/String; getText
	b ()[Leg$b; getParts
	a (Lds;)Lsw; resolveComponent
	a (Lds;Z)Lsw; toComponent
	a (Lcom/mojang/brigadier/StringReader;Z)Leg$a; parseText
eg$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	<init> (IILga;)V <init>
	a ()I getStart
	b ()I getEnd
	c ()Lga; getSelector
	a (Lds;)Lsw; toComponent
eh net/minecraft/commands/arguments/NbtPathArgument
	d EXAMPLES
	a ERROR_INVALID_NODE
	b ERROR_DATA_TOO_DEEP
	c ERROR_NOTHING_FOUND
	e ERROR_EXPECTED_LIST
	f ERROR_INVALID_INDEX
	g INDEX_MATCH_START
	h INDEX_MATCH_END
	i KEY_MATCH_START
	j KEY_MATCH_END
	k QUOTED_KEY_START
	l SINGLE_QUOTED_KEY_START
	<init> ()V <init>
	a ()Leh; nbtPath
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leh$g; getPath
	a (Lcom/mojang/brigadier/StringReader;)Leh$g; parse
	a (Lcom/mojang/brigadier/StringReader;Z)Leh$h; parseNode
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Leh$h; readObjectNode
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
	getExamples ()Ljava/util/Collection; getExamples
	a (C)Z isAllowedInUnquotedName
	a (Lqr;)Ljava/util/function/Predicate; createTagPredicate
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lqr;Lrk;)Z lambda$createTagPredicate$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
eh$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	<init> ()V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
	<clinit> ()V <clinit>
eh$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	<init> (Ljava/lang/String;)V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
eh$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	<init> (I)V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
eh$d net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	<init> (Lqr;)V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
	a (Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrk;)V lambda$getOrCreateTag$0
eh$e net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	<init> (Ljava/lang/String;Lqr;)V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
eh$f net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	<init> (Lqr;)V <init>
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
eh$g net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	<init> (Ljava/lang/String;[Leh$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V <init>
	a (Lrk;)Ljava/util/List; get
	b (Lrk;)I countMatching
	d (Lrk;)Ljava/util/List; getOrCreateParents
	a (Lrk;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lrk;I)Z isTooDeep
	a (Lrk;Lrk;)I set
	a ()I estimatePathDepth
	a (ILqr;Ljava/util/List;)I insert
	c (Lrk;)I remove
	a (Leh$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	toString ()Ljava/lang/String; toString
	a (Leh$h;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrk;Lrk;)Ljava/lang/Integer; lambda$set$2
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lrk;)Lrk; lambda$set$1
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$apply$0
eh$h net/minecraft/commands/arguments/NbtPathArgument$Node
	a (Lrk;Ljava/util/List;)V getTag
	a (Lrk;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
	a ()Lrk; createPreferredParentTag
	a (Lrk;Ljava/util/function/Supplier;)I setTag
	a (Lrk;)I removeTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/function/Supplier;Lrk;Ljava/util/List;)V lambda$getOrCreate$0
ei net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	<init> ()V <init>
	a ()Lei; nbtTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lrk; getNbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lrk; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
ej net/minecraft/commands/arguments/ObjectiveArgument
	a EXAMPLES
	b ERROR_OBJECTIVE_NOT_FOUND
	c ERROR_OBJECTIVE_READ_ONLY
	<init> ()V <init>
	a ()Lej; objective
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lefd; getObjective
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lefd; getWritableObjective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ek net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Lek; criteria
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lefj; getCriteria
	a (Lcom/mojang/brigadier/StringReader;)Lefj; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	a (Lamq;Ljava/lang/Object;)Ljava/lang/String; getName
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
el net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	<init> ()V <init>
	a ()Lel; operation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lel$a; getOperation
	a (Lcom/mojang/brigadier/StringReader;)Lel$a; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a (Ljava/lang/String;)Lel$a; getOperation
	b (Ljava/lang/String;)Lel$b; getSimpleOperation
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (II)I lambda$getSimpleOperation$6
	b (II)I lambda$getSimpleOperation$5
	c (II)I lambda$getSimpleOperation$4
	d (II)I lambda$getSimpleOperation$3
	e (II)I lambda$getSimpleOperation$2
	f (II)I lambda$getSimpleOperation$1
	a (Leff;Leff;)V lambda$getOperation$0
	<clinit> ()V <clinit>
el$a net/minecraft/commands/arguments/OperationArgument$Operation
	apply (Leff;Leff;)V apply
el$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	apply (II)I apply
	apply (Leff;Leff;)V apply
em net/minecraft/commands/arguments/ParticleArgument
	b EXAMPLES
	a ERROR_UNKNOWN_PARTICLE
	c particles
	<init> (Ldm;)V <init>
	a (Ldm;)Lem; particle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lit; getParticle
	a (Lcom/mojang/brigadier/StringReader;)Lit; parse
	getExamples ()Ljava/util/Collection; getExamples
	a (Lcom/mojang/brigadier/StringReader;Lhg;)Lit; readParticle
	b (Lcom/mojang/brigadier/StringReader;Lhg;)Liu; readParticleType
	a (Lcom/mojang/brigadier/StringReader;Liu;)Lit; readParticle
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readParticleType$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
en net/minecraft/commands/arguments/RangeArgument
	a ()Len$b; intRange
	b ()Len$a; floatRange
en$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$c; getRange
	a (Lcom/mojang/brigadier/StringReader;)Lcj$c; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
en$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcj$d; getRange
	a (Lcom/mojang/brigadier/StringReader;)Lcj$d; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
eo net/minecraft/commands/arguments/ResourceArgument
	c EXAMPLES
	d ERROR_NOT_SUMMONABLE_ENTITY
	a ERROR_UNKNOWN_RESOURCE
	b ERROR_INVALID_RESOURCE_TYPE
	e registryKey
	f registryLookup
	<init> (Ldm;Lacp;)V <init>
	a (Ldm;Lacp;)Leo; resource
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lacp;)Lhe$c; getResource
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getAttribute
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getConfiguredFeature
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructure
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getEntityType
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getSummonableEntityType
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getMobEffect
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getEnchantment
	a (Lcom/mojang/brigadier/StringReader;)Lhe$c; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$3
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
eo$a net/minecraft/commands/arguments/ResourceArgument$Info
	<init> ()V <init>
	a (Leo$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Leo$a$a; deserializeFromNetwork
	a (Leo$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Leo;)Leo$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
eo$a$a net/minecraft/commands/arguments/ResourceArgument$Info$Template
	b registryKey
	a this$0
	<init> (Leo$a;Lacp;)V <init>
	a (Ldm;)Leo; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
ep net/minecraft/commands/arguments/ResourceKeyArgument
	a EXAMPLES
	b ERROR_INVALID_FEATURE
	c ERROR_INVALID_STRUCTURE
	d ERROR_INVALID_TEMPLATE_POOL
	e registryKey
	<init> (Lacp;)V <init>
	a (Lacp;)Lep; key
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lacp;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lacp; getRegistryKey
	a (Lcom/mojang/brigadier/context/CommandContext;Lacp;)Lhr; getRegistry
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lacp;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhe$c; resolveKey
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getConfiguredFeature
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructure
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhe$c; getStructureTemplatePool
	a (Lcom/mojang/brigadier/StringReader;)Lacp; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lacp;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$resolveKey$4
	b (Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lacp;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getRegistryKey$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ep$a net/minecraft/commands/arguments/ResourceKeyArgument$Info
	<init> ()V <init>
	a (Lep$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lep$a$a; deserializeFromNetwork
	a (Lep$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lep;)Lep$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
ep$a$a net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	b registryKey
	a this$0
	<init> (Lep$a;Lacp;)V <init>
	a (Ldm;)Lep; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
eq net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	e ERROR_UNKNOWN_ITEM_MODIFIER
	<init> ()V <init>
	a ()Leq; id
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lae; getAdvancement
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcjc; getRecipe
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leck; getPredicate
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leaz; getItemModifier
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lacq; getId
	a (Lcom/mojang/brigadier/StringReader;)Lacq; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getRecipe$4
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
er net/minecraft/commands/arguments/ResourceOrTagArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_INVALID_TAG_TYPE
	d registryLookup
	e registryKey
	<init> (Ldm;Lacp;)V <init>
	a (Ldm;Lacp;)Ler; resourceOrTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lacp;)Ler$c; getResourceOrTag
	a (Lcom/mojang/brigadier/StringReader;)Ler$c; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$6
	b (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$5
	a (Ler$c;Lacp;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getResourceOrTag$4
	a (Lacp;Lhi$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getResourceOrTag$3
	a (Lacp;Lhe$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getResourceOrTag$2
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
er$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	<init> ()V <init>
	a (Ler$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Ler$a$a; deserializeFromNetwork
	a (Ler$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Ler;)Ler$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
er$a$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	b registryKey
	a this$0
	<init> (Ler$a;Lacp;)V <init>
	a (Ldm;)Ler; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
er$b net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	a value
	<init> (Lhe$c;)V <init>
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	a (Lhe;)Z test
	b ()Ljava/lang/String; asPrintable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lhe$c; value
	test (Ljava/lang/Object;)Z test
er$c net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
er$d net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	a tag
	<init> (Lhi$c;)V <init>
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	a (Lhe;)Z test
	b ()Ljava/lang/String; asPrintable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lhi$c; tag
	test (Ljava/lang/Object;)Z test
es net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	a EXAMPLES
	b registryKey
	<init> (Lacp;)V <init>
	a (Lacp;)Les; resourceOrTagKey
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lacp;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Les$c; getResourceOrTagKey
	a (Lcom/mojang/brigadier/StringReader;)Les$c; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Les$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getResourceOrTagKey$0
	<clinit> ()V <clinit>
es$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	<init> ()V <init>
	a (Les$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Les$a$a; deserializeFromNetwork
	a (Les$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Les;)Les$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
es$a$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	b registryKey
	a this$0
	<init> (Les$a;Lacp;)V <init>
	a (Ldm;)Les; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
es$b net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	a key
	<init> (Lacp;)V <init>
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	a (Lhe;)Z test
	b ()Ljava/lang/String; asPrintable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lacp; key
	test (Ljava/lang/Object;)Z test
es$c net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
es$d net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	a key
	<init> (Lanl;)V <init>
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lacp;)Ljava/util/Optional; cast
	a (Lhe;)Z test
	b ()Ljava/lang/String; asPrintable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lanl; key
	test (Ljava/lang/Object;)Z test
et net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	<init> (Z)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	a ()Let; scoreHolder
	b ()Let; scoreHolders
	a (Lcom/mojang/brigadier/StringReader;)Let$b; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/Collection;Lds;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$3
	a (Lds;Ljava/util/function/Supplier;)Ljava/util/Collection; lambda$parse$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$static$0
	<clinit> ()V <clinit>
et$a net/minecraft/commands/arguments/ScoreHolderArgument$Info
	a FLAG_MULTIPLE
	<init> ()V <init>
	a (Let$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Let$a$a; deserializeFromNetwork
	a (Let$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Let;)Let$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
et$a$a net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	b multiple
	a this$0
	<init> (Let$a;Z)V <init>
	a (Ldm;)Let; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
et$b net/minecraft/commands/arguments/ScoreHolderArgument$Result
	getNames (Lds;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
et$c net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
	<init> (Lga;)V <init>
	getNames (Lds;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
eu net/minecraft/commands/arguments/ScoreboardSlotArgument
	b EXAMPLES
	a ERROR_INVALID_VALUE
	<init> ()V <init>
	a ()Leu; displaySlot
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ev net/minecraft/commands/arguments/SignedArgument
ew net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	<init> ()V <init>
	a ()Lew; slot
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/HashMap;)V lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ex net/minecraft/commands/arguments/StringRepresentableArgument
	a ERROR_INVALID_VALUE
	b codec
	c values
	<init> (Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V <init>
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a (Ljava/lang/String;)Ljava/lang/String; convertId
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Ljava/lang/String; lambda$getExamples$3
	b (Ljava/lang/Object;)Ljava/lang/String; lambda$listSuggestions$2
	b (Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$parse$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ey net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	<init> ()V <init>
	a ()Ley; team
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lefe; getTeam
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ez net/minecraft/commands/arguments/TemplateMirrorArgument
	<init> ()V <init>
	a ()Lex; templateMirror
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcui; getMirror
fa net/minecraft/commands/arguments/TemplateRotationArgument
	<init> ()V <init>
	a ()Lfa; templateRotation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcvz; getRotation
fb net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_TICK_COUNT_TOO_LOW
	d UNITS
	e minimum
	<init> (I)V <init>
	a ()Lfb; time
	a (I)Lfb; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fb$a net/minecraft/commands/arguments/TimeArgument$Info
	<init> ()V <init>
	a (Lfb$a$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lfb$a$a; deserializeFromNetwork
	a (Lfb$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lfb;)Lfb$a$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
fb$a$a net/minecraft/commands/arguments/TimeArgument$Info$Template
	b min
	a this$0
	<init> (Lfb$a;I)V <init>
	a (Ldm;)Lfb; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
fc net/minecraft/commands/arguments/UuidArgument
	a ERROR_INVALID_UUID
	b EXAMPLES
	c ALLOWED_CHARACTERS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; getUuid
	a ()Lfc; uuid
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fd net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	<init> (Ldcb;Ljava/util/Set;Lqr;)V <init>
	a ()Ldcb; getState
	b ()Ljava/util/Set; getDefinedProperties
	a (Ldcf;)Z test
	a (Laif;Lgu;)Z test
	a (Laif;Lgu;I)Z place
	test (Ljava/lang/Object;)Z test
fe net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b blocks
	<init> (Ldm;)V <init>
	a (Ldm;)Lfe; blockPredicate
	a (Lcom/mojang/brigadier/StringReader;)Lfe$b; parse
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lfe$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lfg$b;)Lfe$b; lambda$parse$1
	a (Lfg$a;)Lfe$b; lambda$parse$0
	<clinit> ()V <clinit>
fe$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	<init> (Ldcb;Ljava/util/Set;Lqr;)V <init>
	a (Ldcf;)Z test
	a ()Z requiresNbt
	test (Ljava/lang/Object;)Z test
fe$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	a ()Z requiresNbt
fe$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	<init> (Lhi;Ljava/util/Map;Lqr;)V <init>
	a (Ldcf;)Z test
	a ()Z requiresNbt
	test (Ljava/lang/Object;)Z test
ff net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	b blocks
	<init> (Ldm;)V <init>
	a (Ldm;)Lff; block
	a (Lcom/mojang/brigadier/StringReader;)Lfd; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfd; getBlock
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fg net/minecraft/commands/arguments/blocks/BlockStateParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h ERROR_UNKNOWN_TAG
	i SYNTAX_START_PROPERTIES
	j SYNTAX_START_NBT
	k SYNTAX_END_PROPERTIES
	l SYNTAX_EQUALS
	m SYNTAX_PROPERTY_SEPARATOR
	n SYNTAX_TAG
	o SUGGEST_NOTHING
	p blocks
	q reader
	r forTesting
	s allowNbt
	t properties
	u vagueProperties
	v id
	w definition
	x state
	y nbt
	z tag
	A suggestions
	<init> (Lhg;Lcom/mojang/brigadier/StringReader;ZZ)V <init>
	a (Lhg;Ljava/lang/String;Z)Lfg$a; parseForBlock
	a (Lhg;Lcom/mojang/brigadier/StringReader;Z)Lfg$a; parseForBlock
	b (Lhg;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	b (Lhg;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	a (Lhg;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a ()V parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	b ()Z hasBlockEntity
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ldde;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
	c ()V readBlock
	d ()V readTag
	e ()V readProperties
	f ()V readVagueProperties
	g ()V readNbt
	a (Ldde;Ljava/lang/String;I)V setValue
	a (Ldcb;)Ljava/lang/String; serialize
	a (Ljava/lang/StringBuilder;Ldde;Ljava/lang/Comparable;)V appendProperty
	a (Lacp;)Ljava/lang/String; lambda$serialize$10
	a (Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$readVagueProperties$9
	a (Ldde;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$readProperties$8
	a (ILacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readTag$7
	a (I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readBlock$6
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fg$a net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	a blockState
	b properties
	c nbt
	<init> (Ldcb;Ljava/util/Map;Lqr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldcb; blockState
	b ()Ljava/util/Map; properties
	c ()Lqr; nbt
fg$b net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	a tag
	b vagueProperties
	c nbt
	<init> (Lhi;Ljava/util/Map;Lqr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhi; tag
	b ()Ljava/util/Map; vagueProperties
	c ()Lqr; nbt
fh net/minecraft/commands/arguments/blocks/package-info
fi net/minecraft/commands/arguments/coordinates/BlockPosArgument
	d EXAMPLES
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c ERROR_OUT_OF_BOUNDS
	<init> ()V <init>
	a ()Lfi; blockPos
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgu; getLoadedBlockPos
	a (Lcom/mojang/brigadier/context/CommandContext;Laif;Ljava/lang/String;)Lgu; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgu; getBlockPos
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgu; getSpawnablePos
	a (Lcom/mojang/brigadier/StringReader;)Lfk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fj net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	<init> ()V <init>
	a ()Lfj; columnPos
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lahv; getColumnPos
	a (Lcom/mojang/brigadier/StringReader;)Lfk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fk net/minecraft/commands/arguments/coordinates/Coordinates
	a (Lds;)Leei; getPosition
	b (Lds;)Leeh; getRotation
	c (Lds;)Lgu; getBlockPos
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
fl net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a PREFIX_LOCAL_COORDINATE
	b left
	c up
	d forwards
	<init> (DDD)V <init>
	a (Lds;)Leei; getPosition
	b (Lds;)Leeh; getRotation
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
	a (Lcom/mojang/brigadier/StringReader;)Lfl; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
fm net/minecraft/commands/arguments/coordinates/RotationArgument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	<init> ()V <init>
	a ()Lfm; rotation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfk; getRotation
	a (Lcom/mojang/brigadier/StringReader;)Lfk; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fn net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	<init> ()V <init>
	a ()Lfn; swizzle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fo net/minecraft/commands/arguments/coordinates/Vec2Argument
	b EXAMPLES
	a ERROR_NOT_COMPLETE
	c centerCorrect
	<init> (Z)V <init>
	a ()Lfo; vec2
	a (Z)Lfo; vec2
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leeh; getVec2
	a (Lcom/mojang/brigadier/StringReader;)Lfk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fp net/minecraft/commands/arguments/coordinates/Vec3Argument
	c EXAMPLES
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	d centerCorrect
	<init> (Z)V <init>
	a ()Lfp; vec3
	a (Z)Lfp; vec3
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leei; getVec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfk; getCoordinates
	a (Lcom/mojang/brigadier/StringReader;)Lfk; parse
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fq net/minecraft/commands/arguments/coordinates/WorldCoordinate
	c PREFIX_RELATIVE
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	d relative
	e value
	<init> (ZD)V <init>
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;Z)Lfq; parseDouble
	a (Lcom/mojang/brigadier/StringReader;)Lfq; parseInt
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Z isRelative
	<clinit> ()V <clinit>
fr net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	<init> (Lfq;Lfq;Lfq;)V <init>
	a (Lds;)Leei; getPosition
	b (Lds;)Leeh; getRotation
	a ()Z isXRelative
	b ()Z isYRelative
	c ()Z isZRelative
	equals (Ljava/lang/Object;)Z equals
	a (Lcom/mojang/brigadier/StringReader;)Lfr; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lfr; parseDouble
	a (DDD)Lfr; absolute
	a (Leeh;)Lfr; absolute
	d ()Lfr; current
	hashCode ()I hashCode
fs net/minecraft/commands/arguments/coordinates/package-info
ft net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	<init> ()V <init>
	a ()Lft; functions
	a (Lcom/mojang/brigadier/StringReader;)Lft$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Lacq;)Ldn; getFunction
	b (Lcom/mojang/brigadier/context/CommandContext;Lacq;)Ljava/util/Collection; getFunctionTag
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getFunctionOrTag
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Lacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$getFunction$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
ft$1 net/minecraft/commands/arguments/item/FunctionArgument$1
	a val$id
	b this$0
	<init> (Lft;Lacq;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
ft$2 net/minecraft/commands/arguments/item/FunctionArgument$2
	a val$id
	b this$0
	<init> (Lft;Lacq;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
ft$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
fu net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	b items
	<init> (Ldm;)V <init>
	a (Ldm;)Lfu; item
	a (Lcom/mojang/brigadier/StringReader;)Lfv; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfv; getItem
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
fv net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	<init> (Lhe;Lqr;)V <init>
	a ()Lcfu; getItem
	a (Lcfz;)Z test
	a (IZ)Lcfz; createItemStack
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; getItemName
	test (Ljava/lang/Object;)Z test
	d ()Ljava/lang/Object; lambda$getItemName$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fw net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c ERROR_UNKNOWN_TAG
	d SYNTAX_START_NBT
	e SYNTAX_TAG
	f SUGGEST_NOTHING
	g items
	h reader
	i allowTags
	j result
	k nbt
	l suggestions
	<init> (Lhg;Lcom/mojang/brigadier/StringReader;Z)V <init>
	a (Lhg;Lcom/mojang/brigadier/StringReader;)Lfw$a; parseForItem
	b (Lhg;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; parseForTesting
	a (Lhg;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a ()V readItem
	b ()V readTag
	c ()V readNbt
	d ()V parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
	a (ILacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readTag$6
	b (ILacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$readItem$5
	a (Lfw;Lhi;)Lfw$b; lambda$parseForTesting$4
	a (Lfw;Lhe;)Lfw$a; lambda$parseForTesting$3
	e ()Ljava/lang/IllegalStateException; lambda$parseForItem$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
fw$a net/minecraft/commands/arguments/item/ItemParser$ItemResult
	a item
	b nbt
	<init> (Lhe;Lqr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; item
	b ()Lqr; nbt
fw$b net/minecraft/commands/arguments/item/ItemParser$TagResult
	a tag
	b nbt
	<init> (Lhi;Lqr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhi; tag
	b ()Lqr; nbt
fx net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b items
	<init> (Ldm;)V <init>
	a (Ldm;)Lfx; itemPredicate
	a (Lcom/mojang/brigadier/StringReader;)Lfx$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	a (Ljava/util/function/Predicate;Lqr;)Lfx$a; createResult
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	a (Ljava/util/function/Predicate;Lcfz;)Z lambda$createResult$4
	a (Ljava/util/function/Predicate;Lqr;Lcfz;)Z lambda$createResult$3
	a (Lfw$b;)Lfx$a; lambda$parse$2
	a (Lfw$a;)Lfx$a; lambda$parse$1
	a (Lfw$a;Lhe;)Z lambda$parse$0
	<clinit> ()V <clinit>
fx$a net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
fy net/minecraft/commands/arguments/item/package-info
fz net/minecraft/commands/arguments/package-info
ga net/minecraft/commands/arguments/selector/EntitySelector
	a INFINITE
	b ORDER_ARBITRARY
	c ANY_TYPE
	d maxResults
	e includesEntities
	f worldLimited
	g predicate
	h range
	i position
	j aabb
	k order
	l currentEntity
	m playerName
	n entityUUID
	o type
	p usesSelector
	<init> (IZZLjava/util/function/Predicate;Lcj$c;Ljava/util/function/Function;Leed;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbfn;Z)V <init>
	a ()I getMaxResults
	b ()Z includesEntities
	c ()Z isSelfSelector
	d ()Z isWorldLimited
	e ()Z usesSelector
	e (Lds;)V checkPermissions
	a (Lds;)Lbfj; findSingleEntity
	b (Lds;)Ljava/util/List; findEntities
	f (Lds;)Ljava/util/List; findEntitiesRaw
	a (Ljava/util/List;Laif;Leei;Ljava/util/function/Predicate;)V addEntities
	f ()I getResultLimit
	c (Lds;)Laig; findSinglePlayer
	d (Lds;)Ljava/util/List; findPlayers
	a (Leei;)Ljava/util/function/Predicate; getPredicate
	a (Leei;Ljava/util/List;)Ljava/util/List; sortAndLimit
	a (Ljava/util/List;)Lsw; joinNames
	a (Leei;Lbfj;)Z lambda$getPredicate$3
	a (Leed;Lbfj;)Z lambda$getPredicate$2
	a (Lds;Lbfj;)Z lambda$findEntities$1
	b (Leei;Ljava/util/List;)V lambda$static$0
	<clinit> ()V <clinit>
ga$1 net/minecraft/commands/arguments/selector/EntitySelector$1
	<init> ()V <init>
	a (Lbfj;)Lbfj; tryCast
	a ()Ljava/lang/Class; getBaseClass
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
gb net/minecraft/commands/arguments/selector/EntitySelectorParser
	a SYNTAX_SELECTOR_START
	o SYNTAX_OPTIONS_START
	p SYNTAX_OPTIONS_END
	b SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	q SYNTAX_OPTIONS_SEPARATOR
	c SYNTAX_NOT
	d SYNTAX_TAG
	r SELECTOR_NEAREST_PLAYER
	s SELECTOR_ALL_PLAYERS
	t SELECTOR_RANDOM_PLAYERS
	u SELECTOR_CURRENT_ENTITY
	v SELECTOR_ALL_ENTITIES
	e ERROR_INVALID_NAME_OR_UUID
	f ERROR_UNKNOWN_SELECTOR_TYPE
	g ERROR_SELECTORS_NOT_ALLOWED
	h ERROR_MISSING_SELECTOR_TYPE
	i ERROR_EXPECTED_END_OF_OPTIONS
	j ERROR_EXPECTED_OPTION_VALUE
	k ORDER_NEAREST
	l ORDER_FURTHEST
	m ORDER_RANDOM
	n SUGGEST_NOTHING
	w reader
	x allowSelectors
	y maxResults
	z includesEntities
	A worldLimited
	B distance
	C level
	D x
	E y
	F z
	G deltaX
	H deltaY
	I deltaZ
	J rotX
	K rotY
	L predicate
	M order
	N currentEntity
	O playerName
	P startPosition
	Q entityUUID
	R suggestions
	S hasNameEquals
	T hasNameNotEquals
	U isLimited
	V isSorted
	W hasGamemodeEquals
	X hasGamemodeNotEquals
	Y hasTeamEquals
	Z hasTeamNotEquals
	aa type
	ab typeInverse
	ac hasScores
	ad hasAdvancements
	ae usesSelectors
	<init> (Lcom/mojang/brigadier/StringReader;)V <init>
	<init> (Lcom/mojang/brigadier/StringReader;Z)V <init>
	a ()Lga; getSelector
	a (DDD)Leed; createAabb
	I ()V finalizePredicates
	a (Ldi;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	b ()V parseSelector
	c ()V parseNameOrUUID
	d ()V parseOptions
	e ()Z shouldInvertValue
	f ()Z isTag
	g ()Lcom/mojang/brigadier/StringReader; getReader
	a (Ljava/util/function/Predicate;)V addPredicate
	h ()V setWorldLimited
	i ()Lcj$c; getDistance
	a (Lcj$c;)V setDistance
	j ()Lcj$d; getLevel
	a (Lcj$d;)V setLevel
	k ()Ldi; getRotX
	a (Ldi;)V setRotX
	l ()Ldi; getRotY
	b (Ldi;)V setRotY
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	a (D)V setX
	b (D)V setY
	c (D)V setZ
	d (D)V setDeltaX
	e (D)V setDeltaY
	f (D)V setDeltaZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	a (I)V setMaxResults
	a (Z)V setIncludesEntities
	s ()Ljava/util/function/BiConsumer; getOrder
	a (Ljava/util/function/BiConsumer;)V setOrder
	t ()Lga; parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	u ()Z isCurrentEntity
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	v ()Z hasNameEquals
	b (Z)V setHasNameEquals
	w ()Z hasNameNotEquals
	c (Z)V setHasNameNotEquals
	x ()Z isLimited
	d (Z)V setLimited
	y ()Z isSorted
	e (Z)V setSorted
	z ()Z hasGamemodeEquals
	f (Z)V setHasGamemodeEquals
	A ()Z hasGamemodeNotEquals
	g (Z)V setHasGamemodeNotEquals
	B ()Z hasTeamEquals
	h (Z)V setHasTeamEquals
	C ()Z hasTeamNotEquals
	i (Z)V setHasTeamNotEquals
	a (Lbfn;)V limitToType
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	j (Z)V setHasScores
	H ()Z hasAdvancements
	k (Z)V setHasAdvancements
	a (Ljava/util/function/ToDoubleFunction;DDLbfj;)Z lambda$createRotationPredicate$12
	a (Lbfj;)Z lambda$finalizePredicates$11
	a (Leei;)Leei; lambda$getSelector$10
	b (Leei;)Leei; lambda$getSelector$9
	b (Lbfj;)Z lambda$new$8
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$static$7
	a (Leei;Ljava/util/List;)V lambda$static$6
	b (Leei;Ljava/util/List;)V lambda$static$5
	a (Leei;Lbfj;Lbfj;)I lambda$static$4
	c (Leei;Ljava/util/List;)V lambda$static$3
	b (Leei;Lbfj;Lbfj;)I lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
gc net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	i OPTIONS
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	<init> ()V <init>
	a (Ljava/lang/String;Lgc$a;Ljava/util/function/Predicate;Lsw;)V register
	a ()V bootStrap
	a (Lgb;Ljava/lang/String;I)Lgc$a; get
	a (Lgb;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lgb;)Z lambda$bootStrap$63
	b (Lgb;)V lambda$bootStrap$62
	a (Lacq;ZLbfj;)Z lambda$bootStrap$61
	c (Lgb;)Z lambda$bootStrap$60
	d (Lgb;)V lambda$bootStrap$59
	a (Ljava/util/Map;Lbfj;)Z lambda$bootStrap$58
	a (ZLag;)Z lambda$bootStrap$57
	a (Ljava/util/Map;Lag;)Z lambda$bootStrap$56
	a (ZLak;)Z lambda$bootStrap$55
	e (Lgb;)Z lambda$bootStrap$54
	f (Lgb;)V lambda$bootStrap$53
	b (Ljava/util/Map;Lbfj;)Z lambda$bootStrap$52
	g (Lgb;)Z lambda$bootStrap$51
	h (Lgb;)V lambda$bootStrap$50
	a (Lqr;ZLbfj;)Z lambda$bootStrap$49
	i (Lgb;)Z lambda$bootStrap$48
	j (Lgb;)V lambda$bootStrap$47
	a (Ljava/lang/String;ZLbfj;)Z lambda$bootStrap$46
	k (Lgb;)Z lambda$bootStrap$45
	l (Lgb;)V lambda$bootStrap$44
	a (Lbfn;ZLbfj;)Z lambda$bootStrap$43
	a (Lgb;ILacq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$bootStrap$42
	a (Lanl;ZLbfj;)Z lambda$bootStrap$41
	a (Lgb;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$bootStrap$40
	m (Lgb;)Z lambda$bootStrap$39
	n (Lgb;)V lambda$bootStrap$38
	b (Ljava/lang/String;ZLbfj;)Z lambda$bootStrap$37
	o (Lgb;)Z lambda$bootStrap$36
	p (Lgb;)V lambda$bootStrap$35
	a (ZLcmj;Lbfj;)Z lambda$bootStrap$34
	b (Lgb;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$bootStrap$33
	q (Lgb;)Z lambda$bootStrap$32
	r (Lgb;)V lambda$bootStrap$31
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$bootStrap$30
	s (Lgb;)Z lambda$bootStrap$29
	t (Lgb;)V lambda$bootStrap$28
	u (Lgb;)Z lambda$bootStrap$27
	v (Lgb;)V lambda$bootStrap$26
	w (Lgb;)Z lambda$bootStrap$25
	x (Lgb;)V lambda$bootStrap$24
	y (Lgb;)Z lambda$bootStrap$23
	z (Lgb;)V lambda$bootStrap$22
	A (Lgb;)Z lambda$bootStrap$21
	B (Lgb;)V lambda$bootStrap$20
	C (Lgb;)Z lambda$bootStrap$19
	D (Lgb;)V lambda$bootStrap$18
	E (Lgb;)Z lambda$bootStrap$17
	F (Lgb;)V lambda$bootStrap$16
	G (Lgb;)Z lambda$bootStrap$15
	H (Lgb;)V lambda$bootStrap$14
	I (Lgb;)Z lambda$bootStrap$13
	J (Lgb;)V lambda$bootStrap$12
	K (Lgb;)Z lambda$bootStrap$11
	L (Lgb;)V lambda$bootStrap$10
	M (Lgb;)Z lambda$bootStrap$9
	N (Lgb;)V lambda$bootStrap$8
	O (Lgb;)Z lambda$bootStrap$7
	P (Lgb;)V lambda$bootStrap$6
	c (Ljava/lang/String;ZLbfj;)Z lambda$bootStrap$5
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
gc$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	handle (Lgb;)V handle
gc$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b canUse
	c description
	<init> (Lgc$a;Ljava/util/function/Predicate;Lsw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgc$a; modifier
	b ()Ljava/util/function/Predicate; canUse
	c ()Lsw; description
gd net/minecraft/commands/arguments/selector/options/package-info
ge net/minecraft/commands/arguments/selector/package-info
gf net/minecraft/commands/package-info
gg net/minecraft/commands/synchronization/ArgumentTypeInfo
	a (Lgg$a;Lsf;)V serializeToNetwork
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
gg$a net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
	a ()Lgg; type
gh net/minecraft/commands/synchronization/ArgumentTypeInfos
	a BY_CLASS
	<init> ()V <init>
	a (Lhr;Ljava/lang/String;Ljava/lang/Class;Lgg;)Lgg; register
	a (Lhr;)Lgg; bootstrap
	b (Ljava/lang/Class;)Ljava/lang/Class; fixClassType
	a (Ljava/lang/Class;)Z isClassRecognized
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg; byClass
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	<clinit> ()V <clinit>
gi net/minecraft/commands/synchronization/ArgumentUtils
	a LOGGER
	b NUMBER_FLAG_MIN
	c NUMBER_FLAG_MAX
	<init> ()V <init>
	a (ZZ)I createNumberFlags
	a (B)Z numberHasMin
	b (B)Z numberHasMax
	a (Lcom/google/gson/JsonObject;Lgg$a;)V serializeCap
	a (Lcom/google/gson/JsonObject;Lgg;Lgg$a;)V serializeCap
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeArgumentToJson
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; findUsedArgumentTypes
	a (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V findUsedArgumentTypes
	a (Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V lambda$findUsedArgumentTypes$0
	<clinit> ()V <clinit>
gj net/minecraft/commands/synchronization/SingletonArgumentInfo
	a template
	<init> (Ljava/util/function/Function;)V <init>
	a (Ljava/util/function/Supplier;)Lgj; contextFree
	a (Ljava/util/function/Function;)Lgj; contextAware
	a (Lgj$a;Lsf;)V serializeToNetwork
	a (Lgj$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lsf;)Lgj$a; deserializeFromNetwork
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgj$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
	a (Ljava/util/function/Supplier;Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; lambda$contextFree$0
gj$a net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	b constructor
	a this$0
	<init> (Lgj;Ljava/util/function/Function;)V <init>
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
	a ()Lgg; type
gk net/minecraft/commands/synchronization/SuggestionProviders
	e PROVIDERS_BY_NAME
	f DEFAULT_NAME
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d SUMMONABLE_ENTITIES
	<init> ()V <init>
	a (Lacq;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	a (Lacq;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lacq; getName
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$5
	a (Lbfn;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lbfn;)Z lambda$static$3
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	d (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
gk$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
	<init> (Lacq;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V <init>
	getSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; getSuggestions
gl net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	<init> ()V <init>
	a (Lgl$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lgl$a; deserializeFromNetwork
	a (Lgl$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgl$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
gl$a net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	b min
	c max
	a this$0
	<init> (Lgl;DD)V <init>
	a (Ldm;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gm net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	<init> ()V <init>
	a (Lgm$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lgm$a; deserializeFromNetwork
	a (Lgm$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgm$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
gm$a net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	b min
	c max
	a this$0
	<init> (Lgm;FF)V <init>
	a (Ldm;)Lcom/mojang/brigadier/arguments/FloatArgumentType; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gn net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	<init> ()V <init>
	a (Lgn$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lgn$a; deserializeFromNetwork
	a (Lgn$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgn$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
gn$a net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	b min
	c max
	a this$0
	<init> (Lgn;II)V <init>
	a (Ldm;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
go net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	<init> ()V <init>
	a (Lgo$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lgo$a; deserializeFromNetwork
	a (Lgo$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgo$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
go$a net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	b min
	c max
	a this$0
	<init> (Lgo;JJ)V <init>
	a (Ldm;)Lcom/mojang/brigadier/arguments/LongArgumentType; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gp net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	<init> ()V <init>
	a (Lgp$a;Lsf;)V serializeToNetwork
	a (Lsf;)Lgp$a; deserializeFromNetwork
	a (Lgp$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgp$a; unpack
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgg$a; unpack
	a (Lgg$a;Lcom/google/gson/JsonObject;)V serializeToJson
	b (Lsf;)Lgg$a; deserializeFromNetwork
	a (Lgg$a;Lsf;)V serializeToNetwork
gp$1 net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	a $SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
	<clinit> ()V <clinit>
gp$a net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	b type
	a this$0
	<init> (Lgp;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V <init>
	a (Ldm;)Lcom/mojang/brigadier/arguments/StringArgumentType; instantiate
	a ()Lgg; type
	b (Ldm;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gq net/minecraft/commands/synchronization/brigadier/package-info
gr net/minecraft/commands/synchronization/package-info
gs net/minecraft/core/AxisCycle
	a NONE
	b FORWARD
	c BACKWARD
	d AXIS_VALUES
	e VALUES
	f $VALUES
	values ()[Lgs; values
	valueOf (Ljava/lang/String;)Lgs; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (IIILha$a;)I cycle
	a (DDDLha$a;)D cycle
	a (Lha$a;)Lha$a; cycle
	a ()Lgs; inverse
	a (Lha$a;Lha$a;)Lgs; between
	b ()[Lgs; $values
	<clinit> ()V <clinit>
gs$1 net/minecraft/core/AxisCycle$1
	<init> (Ljava/lang/String;I)V <init>
	a (IIILha$a;)I cycle
	a (DDDLha$a;)D cycle
	a (Lha$a;)Lha$a; cycle
	a ()Lgs; inverse
gs$2 net/minecraft/core/AxisCycle$2
	<init> (Ljava/lang/String;I)V <init>
	a (IIILha$a;)I cycle
	a (DDDLha$a;)D cycle
	a (Lha$a;)Lha$a; cycle
	a ()Lgs; inverse
gs$3 net/minecraft/core/AxisCycle$3
	<init> (Ljava/lang/String;I)V <init>
	a (IIILha$a;)I cycle
	a (DDDLha$a;)D cycle
	a (Lha$a;)Lha$a; cycle
	a ()Lgs; inverse
gt net/minecraft/core/BlockMath
	c LOGGER
	a VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	b VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	<init> ()V <init>
	a (Lj;)Lj; blockCenterToCorner
	b (Lj;)Lj; blockCornerToCenter
	a (Lj;Lha;Ljava/util/function/Supplier;)Lj; getUVLockTransform
	a (Ljava/util/EnumMap;)V lambda$static$1
	b (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
gu net/minecraft/core/BlockPos
	a CODEC
	d LOGGER
	b ZERO
	e PACKED_X_LENGTH
	h PACKED_Z_LENGTH
	c PACKED_Y_LENGTH
	i PACKED_X_MASK
	j PACKED_Y_MASK
	k PACKED_Z_MASK
	l Y_OFFSET
	m Z_OFFSET
	n X_OFFSET
	<init> (III)V <init>
	<init> (Lhz;)V <init>
	a (JLha;)J offset
	a (JIII)J offset
	a (J)I getX
	b (J)I getY
	c (J)I getZ
	d (J)Lgu; of
	a (DDD)Lgu; containing
	a (Lho;)Lgu; containing
	a ()J asLong
	a (III)J asLong
	e (J)J getFlatIndex
	b (III)Lgu; offset
	b ()Leei; getCenter
	a (Lhz;)Lgu; offset
	b (Lhz;)Lgu; subtract
	a (I)Lgu; multiply
	c ()Lgu; above
	b (I)Lgu; above
	d ()Lgu; below
	c (I)Lgu; below
	e ()Lgu; north
	d (I)Lgu; north
	f ()Lgu; south
	e (I)Lgu; south
	g ()Lgu; west
	f (I)Lgu; west
	h ()Lgu; east
	g (I)Lgu; east
	a (Lha;)Lgu; relative
	a (Lha;I)Lgu; relative
	a (Lha$a;I)Lgu; relative
	a (Lcvz;)Lgu; rotate
	c (Lhz;)Lgu; cross
	h (I)Lgu; atY
	i ()Lgu; immutable
	j ()Lgu$a; mutable
	a (Lapf;ILgu;I)Ljava/lang/Iterable; randomInCube
	a (Lgu;)Ljava/util/stream/Stream; squareOutSouthEast
	a (Lapf;IIIIIII)Ljava/lang/Iterable; randomBetweenClosed
	a (Lgu;III)Ljava/lang/Iterable; withinManhattan
	a (Lgu;IILjava/util/function/Predicate;)Ljava/util/Optional; findClosestMatch
	b (Lgu;III)Ljava/util/stream/Stream; withinManhattanStream
	a (Lgu;Lgu;)Ljava/lang/Iterable; betweenClosed
	b (Lgu;Lgu;)Ljava/util/stream/Stream; betweenClosedStream
	a (Ldrs;)Ljava/util/stream/Stream; betweenClosedStream
	a (Leed;)Ljava/util/stream/Stream; betweenClosedStream
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	a (Lgu;ILha;Lha;)Ljava/lang/Iterable; spiralAround
	a (Lgu;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I breadthFirstTraversal
	d (Lhz;)Lhz; cross
	b (Lha$a;I)Lhz; relative
	b (Lha;I)Lhz; relative
	b (Lha;)Lhz; relative
	i (I)Lhz; east
	k ()Lhz; east
	j (I)Lhz; west
	l ()Lhz; west
	k (I)Lhz; south
	m ()Lhz; south
	l (I)Lhz; north
	n ()Lhz; north
	m (I)Lhz; below
	o ()Lhz; below
	n (I)Lhz; above
	p ()Lhz; above
	o (I)Lhz; multiply
	e (Lhz;)Lhz; subtract
	f (Lhz;)Lhz; offset
	c (III)Lhz; offset
	a (Ljava/util/Queue;ILgu;)V lambda$breadthFirstTraversal$7
	a (Lha;Lha;Lgu;I)Ljava/util/Iterator; lambda$spiralAround$6
	c (IIIIII)Ljava/util/Iterator; lambda$betweenClosed$5
	a (IIIIIII)Ljava/util/Iterator; lambda$withinManhattan$4
	a (IILapf;IIIII)Ljava/util/Iterator; lambda$randomBetweenClosed$3
	b (Lgu;)Ljava/util/stream/IntStream; lambda$static$2
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([I)Lgu; lambda$static$0
	<clinit> ()V <clinit>
gu$1 net/minecraft/core/BlockPos$1
	a nextPos
	b counter
	c val$limit
	d val$minX
	e val$random
	f val$width
	g val$minY
	h val$height
	i val$minZ
	j val$depth
	<init> (IILapf;IIIII)V <init>
	a ()Lgu; computeNext
	computeNext ()Ljava/lang/Object; computeNext
gu$2 net/minecraft/core/BlockPos$2
	h cursor
	i currentDepth
	j maxX
	k maxY
	l x
	m y
	n zMirror
	a val$originZ
	b val$maxDepth
	c val$reachX
	d val$reachY
	e val$reachZ
	f val$originX
	g val$originY
	<init> (IIIIIII)V <init>
	a ()Lgu; computeNext
	computeNext ()Ljava/lang/Object; computeNext
gu$3 net/minecraft/core/BlockPos$3
	g cursor
	h index
	a val$end
	b val$width
	c val$height
	d val$minX
	e val$minY
	f val$minZ
	<init> (IIIIII)V <init>
	a ()Lgu; computeNext
	computeNext ()Ljava/lang/Object; computeNext
gu$4 net/minecraft/core/BlockPos$4
	e directions
	f cursor
	g legs
	h leg
	i legSize
	j legIndex
	k lastX
	l lastY
	m lastZ
	a val$firstDirection
	b val$secondDirection
	c val$center
	d val$radius
	<init> (Lha;Lha;Lgu;I)V <init>
	a ()Lgu$a; computeNext
	computeNext ()Ljava/lang/Object; computeNext
gu$5 net/minecraft/core/BlockPos$5
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
gu$a net/minecraft/core/BlockPos$MutableBlockPos
	<init> ()V <init>
	<init> (III)V <init>
	<init> (DDD)V <init>
	b (III)Lgu; offset
	a (I)Lgu; multiply
	a (Lha;I)Lgu; relative
	a (Lha$a;I)Lgu; relative
	a (Lcvz;)Lgu; rotate
	d (III)Lgu$a; set
	b (DDD)Lgu$a; set
	g (Lhz;)Lgu$a; set
	f (J)Lgu$a; set
	a (Lgs;III)Lgu$a; set
	a (Lhz;Lha;)Lgu$a; setWithOffset
	a (Lhz;III)Lgu$a; setWithOffset
	a (Lhz;Lhz;)Lgu$a; setWithOffset
	c (Lha;)Lgu$a; move
	c (Lha;I)Lgu$a; move
	e (III)Lgu$a; move
	h (Lhz;)Lgu$a; move
	a (Lha$a;II)Lgu$a; clamp
	p (I)Lgu$a; setX
	q (I)Lgu$a; setY
	r (I)Lgu$a; setZ
	i ()Lgu; immutable
	d (Lhz;)Lhz; cross
	b (Lha$a;I)Lhz; relative
	b (Lha;I)Lhz; relative
	b (Lha;)Lhz; relative
	i (I)Lhz; east
	k ()Lhz; east
	j (I)Lhz; west
	l ()Lhz; west
	k (I)Lhz; south
	m ()Lhz; south
	l (I)Lhz; north
	n ()Lhz; north
	m (I)Lhz; below
	o ()Lhz; below
	n (I)Lhz; above
	p ()Lhz; above
	o (I)Lhz; multiply
	e (Lhz;)Lhz; subtract
	f (Lhz;)Lhz; offset
	c (III)Lhz; offset
	s (I)Lhz; setZ
	t (I)Lhz; setY
	u (I)Lhz; setX
gv net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	d ()Lgu; getPos
	e ()Ldcb; getBlockState
	f ()Lczn; getEntity
	g ()Laif; getLevel
gw net/minecraft/core/BlockSourceImpl
	a level
	b pos
	<init> (Laif;Lgu;)V <init>
	g ()Laif; getLevel
	a ()D x
	b ()D y
	c ()D z
	d ()Lgu; getPos
	e ()Ldcb; getBlockState
	f ()Lczn; getEntity
gx net/minecraft/core/Cursor3D
	a TYPE_INSIDE
	b TYPE_FACE
	c TYPE_EDGE
	d TYPE_CORNER
	e originX
	f originY
	g originZ
	h width
	i height
	j depth
	k end
	l index
	m x
	n y
	o z
	<init> (IIIIII)V <init>
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
gy net/minecraft/core/DefaultedMappedRegistry
	b defaultKey
	c defaultValue
	<init> (Ljava/lang/String;Lacp;Lcom/mojang/serialization/Lifecycle;Z)V <init>
	a (ILacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; registerMapping
	a (Ljava/lang/Object;)I getId
	b (Ljava/lang/Object;)Lacq; getKey
	a (Lacq;)Ljava/lang/Object; get
	b (Lacq;)Ljava/util/Optional; getOptional
	a (I)Ljava/lang/Object; byId
	a (Lapf;)Ljava/util/Optional; getRandom
	a ()Lacq; getDefaultKey
	b (ILacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe; registerMapping
	v ()Ljava/util/Optional; lambda$getRandom$0
gz net/minecraft/core/DefaultedRegistry
	b (Ljava/lang/Object;)Lacq; getKey
	a (Lacq;)Ljava/lang/Object; get
	a (I)Ljava/lang/Object; byId
	a ()Lacq; getDefaultKey
ha net/minecraft/core/Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g CODEC
	h VERTICAL_CODEC
	i data3d
	j oppositeIndex
	k data2d
	l name
	m axis
	n axisDirection
	o normal
	p VALUES
	q BY_3D_DATA
	r BY_2D_DATA
	s $VALUES
	values ()[Lha; values
	valueOf (Ljava/lang/String;)Lha; valueOf
	<init> (Ljava/lang/String;IIIILjava/lang/String;Lha$b;Lha$a;Lhz;)V <init>
	a (Lbfj;)[Lha; orderedByNearest
	a (Lha;Lha;Lha;)[Lha; makeDirectionArray
	a (Lorg/joml/Matrix4f;Lha;)Lha; rotate
	a (Lapf;)Ljava/util/Collection; allShuffled
	a ()Ljava/util/stream/Stream; stream
	b ()Lorg/joml/Quaternionf; getRotation
	d ()I get3DDataValue
	e ()I get2DDataValue
	f ()Lha$b; getAxisDirection
	a (Lbfj;Lha$a;)Lha; getFacingAxis
	g ()Lha; getOpposite
	a (Lha$a;)Lha; getClockWise
	b (Lha$a;)Lha; getCounterClockWise
	h ()Lha; getClockWise
	r ()Lha; getClockWiseX
	s ()Lha; getCounterClockWiseX
	t ()Lha; getClockWiseZ
	u ()Lha; getCounterClockWiseZ
	i ()Lha; getCounterClockWise
	j ()I getStepX
	k ()I getStepY
	l ()I getStepZ
	m ()Lorg/joml/Vector3f; step
	n ()Ljava/lang/String; getName
	o ()Lha$a; getAxis
	a (Ljava/lang/String;)Lha; byName
	a (I)Lha; from3DDataValue
	b (I)Lha; from2DDataValue
	a (III)Lha; fromDelta
	a (D)Lha; fromYRot
	a (Lha$a;Lha$b;)Lha; fromAxisAndDirection
	p ()F toYRot
	b (Lapf;)Lha; getRandom
	a (DDD)Lha; getNearest
	a (FFF)Lha; getNearest
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a (Lha;)Lcom/mojang/serialization/DataResult; verifyVertical
	a (Lha$b;Lha$a;)Lha; get
	q ()Lhz; getNormal
	a (F)Z isFacingAngle
	v ()Ljava/lang/String; lambda$verifyVertical$5
	c (I)[Lha; lambda$static$4
	b (Lha;)I lambda$static$3
	c (Lha;)Z lambda$static$2
	d (I)[Lha; lambda$static$1
	d (Lha;)I lambda$static$0
	w ()[Lha; $values
	<clinit> ()V <clinit>
ha$1 net/minecraft/core/Direction$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
ha$a net/minecraft/core/Direction$Axis
	a X
	b Y
	c Z
	d VALUES
	e CODEC
	f name
	g $VALUES
	values ()[Lha$a; values
	valueOf (Ljava/lang/String;)Lha$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Lha$a; byName
	a ()Ljava/lang/String; getName
	b ()Z isVertical
	d ()Z isHorizontal
	toString ()Ljava/lang/String; toString
	a (Lapf;)Lha$a; getRandom
	a (Lha;)Z test
	e ()Lha$c; getPlane
	c ()Ljava/lang/String; getSerializedName
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
	f ()[Lha$a; $values
	<clinit> ()V <clinit>
ha$a$1 net/minecraft/core/Direction$Axis$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
ha$a$2 net/minecraft/core/Direction$Axis$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
ha$a$3 net/minecraft/core/Direction$Axis$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (III)I choose
	a (DDD)D choose
	test (Ljava/lang/Object;)Z test
ha$b net/minecraft/core/Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d name
	e $VALUES
	values ()[Lha$b; values
	valueOf (Ljava/lang/String;)Lha$b; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getStep
	b ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	c ()Lha$b; opposite
	d ()[Lha$b; $values
	<clinit> ()V <clinit>
ha$c net/minecraft/core/Direction$Plane
	a HORIZONTAL
	b VERTICAL
	c faces
	d axis
	e $VALUES
	values ()[Lha$c; values
	valueOf (Ljava/lang/String;)Lha$c; valueOf
	<init> (Ljava/lang/String;I[Lha;[Lha$a;)V <init>
	a (Lapf;)Lha; getRandomDirection
	b (Lapf;)Lha$a; getRandomAxis
	a (Lha;)Z test
	iterator ()Ljava/util/Iterator; iterator
	a ()Ljava/util/stream/Stream; stream
	c (Lapf;)Ljava/util/List; shuffledCopy
	test (Ljava/lang/Object;)Z test
	b ()[Lha$c; $values
	<clinit> ()V <clinit>
hb net/minecraft/core/Direction8
	a NORTH
	b NORTH_EAST
	c EAST
	d SOUTH_EAST
	e SOUTH
	f SOUTH_WEST
	g WEST
	h NORTH_WEST
	i directions
	j step
	k $VALUES
	values ()[Lhb; values
	valueOf (Ljava/lang/String;)Lhb; valueOf
	<init> (Ljava/lang/String;I[Lha;)V <init>
	a ()Ljava/util/Set; getDirections
	b ()I getStepX
	c ()I getStepZ
	d ()[Lhb; $values
	<clinit> ()V <clinit>
hc net/minecraft/core/FrontAndTop
	a DOWN_EAST
	b DOWN_NORTH
	c DOWN_SOUTH
	d DOWN_WEST
	e UP_EAST
	f UP_NORTH
	g UP_SOUTH
	h UP_WEST
	i WEST_UP
	j EAST_UP
	k NORTH_UP
	l SOUTH_UP
	m LOOKUP_TOP_FRONT
	n name
	o top
	p front
	q $VALUES
	values ()[Lhc; values
	valueOf (Ljava/lang/String;)Lhc; valueOf
	b (Lha;Lha;)I lookupKey
	<init> (Ljava/lang/String;ILjava/lang/String;Lha;Lha;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Lha;Lha;)Lhc; fromFrontAndTop
	a ()Lha; front
	b ()Lha; top
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	d ()[Lhc; $values
	<clinit> ()V <clinit>
hd net/minecraft/core/GlobalPos
	a CODEC
	b dimension
	c pos
	<init> (Lacp;Lgu;)V <init>
	a (Lacp;Lgu;)Lhd; of
	a ()Lacp; dimension
	b ()Lgu; pos
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
he net/minecraft/core/Holder
	a ()Ljava/lang/Object; value
	b ()Z isBound
	a (Lacq;)Z is
	a (Lacp;)Z is
	a (Ljava/util/function/Predicate;)Z is
	a (Lanl;)Z is
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
	a (Lhh;)Z canSerializeIn
	a (Ljava/lang/Object;)Lhe; direct
he$a net/minecraft/core/Holder$Direct
	a value
	<init> (Ljava/lang/Object;)V <init>
	b ()Z isBound
	a (Lacq;)Z is
	a (Lacp;)Z is
	a (Lanl;)Z is
	a (Ljava/util/function/Predicate;)Z is
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
	toString ()Ljava/lang/String; toString
	a (Lhh;)Z canSerializeIn
	c ()Ljava/util/stream/Stream; tags
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; value
he$b net/minecraft/core/Holder$Kind
	a REFERENCE
	b DIRECT
	c $VALUES
	values ()[Lhe$b; values
	valueOf (Ljava/lang/String;)Lhe$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lhe$b; $values
	<clinit> ()V <clinit>
he$c net/minecraft/core/Holder$Reference
	a owner
	b tags
	c type
	d key
	e value
	<init> (Lhe$c$a;Lhh;Lacp;Ljava/lang/Object;)V <init>
	a (Lhh;Lacp;)Lhe$c; createStandAlone
	a (Lhh;Ljava/lang/Object;)Lhe$c; createIntrusive
	g ()Lacp; key
	a ()Ljava/lang/Object; value
	a (Lacq;)Z is
	a (Lacp;)Z is
	a (Lanl;)Z is
	a (Ljava/util/function/Predicate;)Z is
	a (Lhh;)Z canSerializeIn
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhe$b; kind
	b ()Z isBound
	b (Lacp;)V bindKey
	b (Ljava/lang/Object;)V bindValue
	a (Ljava/util/Collection;)V bindTags
	c ()Ljava/util/stream/Stream; tags
	toString ()Ljava/lang/String; toString
he$c$a net/minecraft/core/Holder$Reference$Type
	a STAND_ALONE
	b INTRUSIVE
	c $VALUES
	values ()[Lhe$c$a; values
	valueOf (Ljava/lang/String;)Lhe$c$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lhe$c$a; $values
	<clinit> ()V <clinit>
hf net/minecraft/core/HolderGetter
	a (Lacp;)Ljava/util/Optional; get
	b (Lacp;)Lhe$c; getOrThrow
	a (Lanl;)Ljava/util/Optional; get
	b (Lanl;)Lhi$c; getOrThrow
	c (Lanl;)Ljava/lang/IllegalStateException; lambda$getOrThrow$1
	c (Lacp;)Ljava/lang/IllegalStateException; lambda$getOrThrow$0
hf$a net/minecraft/core/HolderGetter$Provider
	a (Lacp;)Ljava/util/Optional; lookup
	b (Lacp;)Lhf; lookupOrThrow
	c (Lacp;)Ljava/lang/IllegalStateException; lambda$lookupOrThrow$0
hg net/minecraft/core/HolderLookup
	b ()Ljava/util/stream/Stream; listElements
	c ()Ljava/util/stream/Stream; listElementIds
	d ()Ljava/util/stream/Stream; listTags
	e ()Ljava/util/stream/Stream; listTagIds
	a (Ljava/util/function/Predicate;)Lhg; filterElements
hg$1 net/minecraft/core/HolderLookup$1
	a val$filter
	b this$0
	<init> (Lhg;Lhg;Ljava/util/function/Predicate;)V <init>
	a (Lacp;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	a (Ljava/util/function/Predicate;Lhe$c;)Z lambda$listElements$1
	b (Ljava/util/function/Predicate;Lhe$c;)Z lambda$get$0
hg$a net/minecraft/core/HolderLookup$Delegate
	c parent
	<init> (Lhg;)V <init>
	a (Lacp;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	a (Lanl;)Ljava/util/Optional; get
	d ()Ljava/util/stream/Stream; listTags
hg$b net/minecraft/core/HolderLookup$Provider
	a (Lacp;)Ljava/util/Optional; lookup
	b (Lacp;)Lhg$c; lookupOrThrow
	a ()Lhf$a; asGetterLookup
	a (Ljava/util/stream/Stream;)Lhg$b; create
	a (Lhg$c;)Lhg$c; lambda$create$1
	e (Lacp;)Ljava/lang/IllegalStateException; lambda$lookupOrThrow$0
hg$b$1 net/minecraft/core/HolderLookup$Provider$1
	a this$0
	<init> (Lhg$b;)V <init>
	a (Lacp;)Ljava/util/Optional; lookup
	a (Lhg$c;)Lhf; lambda$lookup$0
hg$b$2 net/minecraft/core/HolderLookup$Provider$2
	a val$map
	<init> (Ljava/util/Map;)V <init>
	a (Lacp;)Ljava/util/Optional; lookup
hg$c net/minecraft/core/HolderLookup$RegistryLookup
	f ()Lacp; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	a (Lcaw;)Lhg; filterFeatures
	a (Lcaw;Ljava/lang/Object;)Z lambda$filterFeatures$0
hg$c$a net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	<init> ()V <init>
	a ()Lhg$c; parent
	f ()Lacp; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	a (Lacp;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	a (Lanl;)Ljava/util/Optional; get
	d ()Ljava/util/stream/Stream; listTags
hh net/minecraft/core/HolderOwner
	a (Lhh;)Z canSerializeIn
hi net/minecraft/core/HolderSet
	a ()Ljava/util/stream/Stream; stream
	b ()I size
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lapf;)Ljava/util/Optional; getRandomElement
	a (I)Lhe; get
	a (Lhe;)Z contains
	a (Lhh;)Z canSerializeIn
	d ()Ljava/util/Optional; unwrapKey
	a (Lhh;Lanl;)Lhi$c; emptyNamed
	a ([Lhe;)Lhi$a; direct
	a (Ljava/util/List;)Lhi$a; direct
	a (Ljava/util/function/Function;[Ljava/lang/Object;)Lhi$a; direct
	a (Ljava/util/function/Function;Ljava/util/List;)Lhi$a; direct
hi$a net/minecraft/core/HolderSet$Direct
	a contents
	b contentsSet
	<init> (Ljava/util/List;)V <init>
	e ()Ljava/util/List; contents
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	a (Lhe;)Z contains
	toString ()Ljava/lang/String; toString
hi$b net/minecraft/core/HolderSet$ListBacked
	<init> ()V <init>
	e ()Ljava/util/List; contents
	b ()I size
	spliterator ()Ljava/util/Spliterator; spliterator
	iterator ()Ljava/util/Iterator; iterator
	a ()Ljava/util/stream/Stream; stream
	a (Lapf;)Ljava/util/Optional; getRandomElement
	a (I)Lhe; get
	a (Lhh;)Z canSerializeIn
hi$c net/minecraft/core/HolderSet$Named
	a owner
	b key
	c contents
	<init> (Lhh;Lanl;)V <init>
	b (Ljava/util/List;)V bind
	f ()Lanl; key
	e ()Ljava/util/List; contents
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	a (Lhe;)Z contains
	toString ()Ljava/lang/String; toString
	a (Lhh;)Z canSerializeIn
hj net/minecraft/core/IdMap
	a DEFAULT
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
	b (I)Ljava/lang/Object; byIdOrThrow
	b ()I size
hk net/minecraft/core/IdMapper
	b nextId
	c tToId
	d idToT
	<init> ()V <init>
	<init> (I)V <init>
	a (Ljava/lang/Object;I)V addMapping
	b (Ljava/lang/Object;)V add
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
	iterator ()Ljava/util/Iterator; iterator
	c (I)Z contains
	b ()I size
hl net/minecraft/core/LayeredRegistryAccess
	a keys
	b values
	c composite
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	d (Ljava/lang/Object;)I getLayerIndexOrThrow
	a (Ljava/lang/Object;)Lhs$b; getLayer
	b (Ljava/lang/Object;)Lhs$b; getAccessForLoading
	c (Ljava/lang/Object;)Lhs$b; getAccessFrom
	a (II)Lhs$b; getCompositeAccessForLayers
	a (Ljava/lang/Object;[Lhs$b;)Lhl; replaceFrom
	a (Ljava/lang/Object;Ljava/util/List;)Lhl; replaceFrom
	a ()Lhs$b; compositeAccess
	a (Ljava/util/stream/Stream;)Ljava/util/Map; collectRegistries
	a (Ljava/util/Map;Lhs;)V lambda$collectRegistries$2
	a (Ljava/util/Map;Lhs$d;)V lambda$collectRegistries$1
	a (Ljava/util/List;)Ljava/util/List; lambda$new$0
hm net/minecraft/core/MappedRegistry
	b LOGGER
	c key
	d byId
	e toId
	f byLocation
	g byKey
	h byValue
	i lifecycles
	j registryLifecycle
	k tags
	l frozen
	m unregisteredIntrusiveHolders
	n holdersInOrder
	o nextId
	p lookup
	<init> (Lacp;Lcom/mojang/serialization/Lifecycle;)V <init>
	<init> (Lacp;Lcom/mojang/serialization/Lifecycle;Z)V <init>
	c ()Lacp; key
	toString ()Ljava/lang/String; toString
	a ()Ljava/util/List; holdersInOrder
	v ()V validateWrite
	g (Lacp;)V validateWrite
	a (ILacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; registerMapping
	a (Lacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	b (Ljava/lang/Object;)Lacq; getKey
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	a (Ljava/lang/Object;)I getId
	a (Lacp;)Ljava/lang/Object; get
	a (I)Ljava/lang/Object; byId
	c (I)Ljava/util/Optional; getHolder
	b (Lacp;)Ljava/util/Optional; getHolder
	d (Ljava/lang/Object;)Lhe; wrapAsHolder
	h (Lacp;)Lhe$c; getOrCreateHolderOrThrow
	b ()I size
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	iterator ()Ljava/util/Iterator; iterator
	a (Lacq;)Ljava/lang/Object; get
	a (Lhe$c;)Ljava/lang/Object; getValueFromNullable
	e ()Ljava/util/Set; keySet
	f ()Ljava/util/Set; registryKeySet
	g ()Ljava/util/Set; entrySet
	h ()Ljava/util/stream/Stream; holders
	i ()Ljava/util/stream/Stream; getTags
	a (Lanl;)Lhi$c; getOrCreateTag
	d (Lanl;)Lhi$c; createTag
	j ()Ljava/util/stream/Stream; getTagNames
	k ()Z isEmpty
	a (Lapf;)Ljava/util/Optional; getRandom
	c (Lacq;)Z containsKey
	c (Lacp;)Z containsKey
	l ()Lhr; freeze
	f (Ljava/lang/Object;)Lhe$c; createIntrusiveHolder
	b (Lanl;)Ljava/util/Optional; getTag
	a (Ljava/util/Map;)V bindTags
	m ()V resetTags
	n ()Lhf; createRegistrationLookup
	o ()Lhh; holderOwner
	p ()Lhg$c; asLookup
	b (ILacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe; registerMapping
	b (Lhe$c;)V lambda$resetTags$14
	a (Lhi$c;)V lambda$resetTags$13
	a (Ljava/util/Map;Lanl;Ljava/util/List;)V lambda$bindTags$12
	e (Lanl;)Ljava/lang/String; lambda$bindTags$11
	b (Ljava/util/Map;Lanl;Ljava/util/List;)V lambda$bindTags$10
	a (Ljava/util/Map;Lhe$c;)V lambda$bindTags$9
	g (Ljava/lang/Object;)Lhe$c; lambda$createIntrusiveHolder$8
	a (Ljava/util/Map$Entry;)Lacq; lambda$freeze$7
	b (Ljava/util/Map$Entry;)Z lambda$freeze$6
	a (Ljava/lang/Object;Lhe$c;)V lambda$freeze$5
	c (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$getTags$4
	i (Lacp;)Lhe$c; lambda$getOrCreateHolderOrThrow$3
	j (Lacp;)Lhe$c; lambda$registerMapping$2
	k (Lacp;)Ljava/lang/String; lambda$new$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenCustomHashMap;)V lambda$new$0
	<clinit> ()V <clinit>
hm$1 net/minecraft/core/MappedRegistry$1
	a this$0
	<init> (Lhm;)V <init>
	f ()Lacp; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	a (Lacp;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	a (Lanl;)Ljava/util/Optional; get
	d ()Ljava/util/stream/Stream; listTags
hm$2 net/minecraft/core/MappedRegistry$2
	a this$0
	<init> (Lhm;)V <init>
	a (Lacp;)Ljava/util/Optional; get
	b (Lacp;)Lhe$c; getOrThrow
	a (Lanl;)Ljava/util/Optional; get
	b (Lanl;)Lhi$c; getOrThrow
hn net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lhn; create
	a (I)Lhn; createWithCapacity
	a (ILjava/lang/Object;)Lhn; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lhn; of
	<init> (Ljava/util/List;Ljava/lang/Object;)V <init>
	get (I)Ljava/lang/Object; get
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	add (ILjava/lang/Object;)V add
	remove (I)Ljava/lang/Object; remove
	size ()I size
	clear ()V clear
ho net/minecraft/core/Position
	a ()D x
	b ()D y
	c ()D z
hp net/minecraft/core/PositionImpl
	a x
	b y
	c z
	<init> (DDD)V <init>
	a ()D x
	b ()D y
	c ()D z
hq net/minecraft/core/QuartPos
	a BITS
	b SIZE
	c MASK
	d SECTION_TO_QUARTS_BITS
	<init> ()V <init>
	a (I)I fromBlock
	b (I)I quartLocal
	c (I)I toBlock
	d (I)I fromSection
	e (I)I toSection
hr net/minecraft/core/Registry
	c ()Lacp; key
	q ()Lcom/mojang/serialization/Codec; byNameCodec
	r ()Lcom/mojang/serialization/Codec; holderByNameCodec
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	b (Ljava/lang/Object;)Lacq; getKey
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	a (Ljava/lang/Object;)I getId
	a (Lacp;)Ljava/lang/Object; get
	a (Lacq;)Ljava/lang/Object; get
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	b (Lacq;)Ljava/util/Optional; getOptional
	d (Lacp;)Ljava/util/Optional; getOptional
	e (Lacp;)Ljava/lang/Object; getOrThrow
	e ()Ljava/util/Set; keySet
	g ()Ljava/util/Set; entrySet
	f ()Ljava/util/Set; registryKeySet
	a (Lapf;)Ljava/util/Optional; getRandom
	s ()Ljava/util/stream/Stream; stream
	c (Lacq;)Z containsKey
	c (Lacp;)Z containsKey
	a (Lhr;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lhr;Lacq;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lhr;Lacp;Ljava/lang/Object;)Ljava/lang/Object; register
	b (Lhr;Lacp;Ljava/lang/Object;)Lhe$c; registerForHolder
	b (Lhr;Lacq;Ljava/lang/Object;)Lhe$c; registerForHolder
	a (Lhr;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	l ()Lhr; freeze
	f (Ljava/lang/Object;)Lhe$c; createIntrusiveHolder
	c (I)Ljava/util/Optional; getHolder
	b (Lacp;)Ljava/util/Optional; getHolder
	d (Ljava/lang/Object;)Lhe; wrapAsHolder
	f (Lacp;)Lhe$c; getHolderOrThrow
	h ()Ljava/util/stream/Stream; holders
	b (Lanl;)Ljava/util/Optional; getTag
	c (Lanl;)Ljava/lang/Iterable; getTagOrEmpty
	a (Lanl;)Lhi$c; getOrCreateTag
	i ()Ljava/util/stream/Stream; getTags
	j ()Ljava/util/stream/Stream; getTagNames
	m ()V resetTags
	a (Ljava/util/Map;)V bindTags
	t ()Lhj; asHolderIdMap
	o ()Lhh; holderOwner
	p ()Lhg$c; asLookup
	u ()Lhg$c; asTagAddingLookup
	g (Lacp;)Ljava/lang/IllegalStateException; lambda$getHolderOrThrow$16
	a (Lcom/mojang/serialization/DynamicOps;Lacq;)Ljava/lang/Object; lambda$keys$15
	a (Lhe;)Lcom/mojang/serialization/Lifecycle; lambda$holderByNameCodec$14
	b (Lhe;)Lcom/mojang/serialization/Lifecycle; lambda$holderByNameCodec$13
	c (Lhe;)Lcom/mojang/serialization/DataResult; lambda$holderByNameCodec$12
	d (Lhe;)Lcom/mojang/serialization/DataResult; lambda$holderByNameCodec$11
	e (Lhe;)Ljava/lang/String; lambda$holderByNameCodec$10
	d (Lacq;)Lcom/mojang/serialization/DataResult; lambda$holderByNameCodec$9
	e (Lacq;)Lcom/mojang/serialization/DataResult; lambda$holderByNameCodec$8
	f (Lacq;)Ljava/lang/String; lambda$holderByNameCodec$7
	g (Ljava/lang/Object;)I lambda$byNameCodec$6
	h (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$byNameCodec$5
	i (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$byNameCodec$4
	j (Ljava/lang/Object;)Ljava/lang/String; lambda$byNameCodec$3
	g (Lacq;)Lcom/mojang/serialization/DataResult; lambda$byNameCodec$2
	h (Lacq;)Lcom/mojang/serialization/DataResult; lambda$byNameCodec$1
	i (Lacq;)Ljava/lang/String; lambda$byNameCodec$0
hr$1 net/minecraft/core/Registry$1
	b this$0
	<init> (Lhr;)V <init>
	a (Lhe;)I getId
	c (I)Lhe; byId
	b ()I size
	iterator ()Ljava/util/Iterator; iterator
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	a (Lhe$c;)Lhe; lambda$iterator$0
hr$2 net/minecraft/core/Registry$2
	a this$0
	<init> (Lhr;)V <init>
	a ()Lhg$c; parent
	a (Lanl;)Ljava/util/Optional; get
	b (Lanl;)Lhi$c; getOrThrow
hs net/minecraft/core/RegistryAccess
	a LOGGER
	b EMPTY
	c (Lacp;)Ljava/util/Optional; registry
	a (Lacp;)Ljava/util/Optional; lookup
	d (Lacp;)Lhr; registryOrThrow
	b ()Ljava/util/stream/Stream; registries
	a (Lhr;)Lhs$b; fromRegistryOfRegistries
	c ()Lhs$b; freeze
	d ()Lcom/mojang/serialization/Lifecycle; allRegistriesLifecycle
	a (Lhs$d;)Lcom/mojang/serialization/Lifecycle; lambda$allRegistriesLifecycle$1
	f (Lacp;)Ljava/lang/IllegalStateException; lambda$registryOrThrow$0
	<clinit> ()V <clinit>
hs$1 net/minecraft/core/RegistryAccess$1
	c val$registries
	<init> (Lhr;)V <init>
	c (Lacp;)Ljava/util/Optional; registry
	b ()Ljava/util/stream/Stream; registries
	c ()Lhs$b; freeze
hs$a net/minecraft/core/RegistryAccess$1FrozenAccess
	c this$0
	<init> (Lhs;Ljava/util/stream/Stream;)V <init>
hs$b net/minecraft/core/RegistryAccess$Frozen
hs$c net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	c registries
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/Map;)V <init>
	<init> (Ljava/util/stream/Stream;)V <init>
	c (Lacp;)Ljava/util/Optional; registry
	b ()Ljava/util/stream/Stream; registries
	b (Lhr;)Lhr; lambda$registry$1
	c (Lhr;)Lhr; lambda$new$0
hs$d net/minecraft/core/RegistryAccess$RegistryEntry
	a key
	b value
	<init> (Lacp;Lhr;)V <init>
	a (Ljava/util/Map$Entry;)Lhs$d; fromMapEntry
	a (Lacp;Lhr;)Lhs$d; fromUntyped
	c ()Lhs$d; freeze
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Lhr; value
ht net/minecraft/core/RegistryCodecs
	<init> ()V <init>
	a (Lacp;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; withNameAndId
	a (Lacp;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; networkCodec
	b (Lacp;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; fullCodec
	a (Lacp;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lacp;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lacp;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lacp;Z)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lhr;)Ljava/util/Map; lambda$fullCodec$5
	a (Lacp;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lhr; lambda$fullCodec$4
	a (Lia;Lcom/mojang/serialization/Lifecycle;Lacp;Ljava/lang/Object;)V lambda$fullCodec$3
	b (Lhr;)Ljava/util/List; lambda$networkCodec$2
	a (Lacp;Lcom/mojang/serialization/Lifecycle;Ljava/util/List;)Lhr; lambda$networkCodec$1
	a (Lacp;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$withNameAndId$0
ht$a net/minecraft/core/RegistryCodecs$RegistryEntry
	a key
	b id
	c value
	<init> (Lacp;ILjava/lang/Object;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()I id
	c ()Ljava/lang/Object; value
hu net/minecraft/core/RegistrySetBuilder
	a entries
	<init> ()V <init>
	a (Lhg$c;)Lhf; wrapContextLookup
	a (Lacp;Lcom/mojang/serialization/Lifecycle;Lhu$e;)Lhu; add
	a (Lacp;Lhu$e;)Lhu; add
	b (Lhs;)Lhu$a; createState
	a (Lhs;)Lhg$b; build
	a (Lhs;Lhg$b;)Lhg$b; buildPatch
	a (Lhs$d;)Lhg$c; lambda$buildPatch$6
	a (Ljava/util/Map;Lhu$f;)V lambda$buildPatch$5
	a (Lhu$a;Lhu$g;)Lhu$f; lambda$buildPatch$4
	b (Ljava/util/Map;Lhu$f;)V lambda$buildPatch$3
	b (Lhu$a;Lhu$g;)Lhg$c; lambda$build$2
	b (Lhs$d;)Lhg$c; lambda$build$1
	c (Lhu$a;Lhu$g;)V lambda$createState$0
hu$1 net/minecraft/core/RegistrySetBuilder$1
	a val$original
	<init> (Lhh;Lhg$c;)V <init>
	a (Lacp;)Ljava/util/Optional; get
hu$a net/minecraft/core/RegistrySetBuilder$BuildState
	a owner
	b lookup
	c registries
	d registeredValues
	e errors
	<init> (Lhu$b;Lhu$h;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V <init>
	a (Lhs;Ljava/util/stream/Stream;)Lhu$a; create
	a ()Lnm; bootstapContext
	b ()V reportRemainingUnreferencedValues
	c ()V throwOnError
	a (Lhh;)V addOwner
	a (Lhg$b;)V fillMissingHolders
	d ()Ljava/util/stream/Stream; collectReferencedRegistries
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	e ()Lhu$b; owner
	f ()Lhu$h; lookup
	g ()Ljava/util/Map; registries
	h ()Ljava/util/Map; registeredValues
	i ()Ljava/util/List; errors
	a (Lacq;)Lhu$f; lambda$collectReferencedRegistries$6
	a (Lhe$c;Ljava/util/Iterator;Lhe$c;)V lambda$fillMissingHolders$5
	a (Lacp;Lhg;)Ljava/util/Optional; lambda$fillMissingHolders$4
	a (Lhg$b;Lacq;)Ljava/util/Optional; lambda$fillMissingHolders$3
	a (Lacp;Lhu$d;)V lambda$reportRemainingUnreferencedValues$2
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lhu$h;Lacp;)V lambda$create$1
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lhs$d;)V lambda$create$0
hu$a$1 net/minecraft/core/RegistrySetBuilder$BuildState$1
	a this$0
	<init> (Lhu$a;)V <init>
	a (Lacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	a (Lacp;)Lhf; lookup
hu$b net/minecraft/core/RegistrySetBuilder$CompositeOwner
	a owners
	<init> ()V <init>
	a (Lhh;)Z canSerializeIn
	b (Lhh;)V add
hu$c net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	b owner
	<init> (Lhh;)V <init>
	a (Lanl;)Ljava/util/Optional; get
hu$d net/minecraft/core/RegistrySetBuilder$RegisteredValue
	a value
	b lifecycle
	<init> (Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; value
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
hu$e net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
	run (Lnm;)V run
hu$f net/minecraft/core/RegistrySetBuilder$RegistryContents
	a key
	b lifecycle
	c values
	<init> (Lacp;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)V <init>
	a ()Lhg$c; buildAsLookup
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lacp; key
	c ()Lcom/mojang/serialization/Lifecycle; lifecycle
	d ()Ljava/util/Map; values
hu$f$1 net/minecraft/core/RegistrySetBuilder$RegistryContents$1
	b entries
	a this$0
	<init> (Lhu$f;)V <init>
	f ()Lacp; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	a (Lacp;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	a (Lanl;)Ljava/util/Optional; get
	d ()Ljava/util/stream/Stream; listTags
	a (Ljava/util/Map$Entry;)Lhe$c; lambda$$1
	b (Ljava/util/Map$Entry;)Lhe$c; lambda$$0
hu$g net/minecraft/core/RegistrySetBuilder$RegistryStub
	a key
	b lifecycle
	c bootstrap
	<init> (Lacp;Lcom/mojang/serialization/Lifecycle;Lhu$e;)V <init>
	b (Lhu$a;)V apply
	a (Lhu$a;)Lhu$f; collectChanges
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
	c ()Lhu$e; bootstrap
hu$h net/minecraft/core/RegistrySetBuilder$UniversalLookup
	a holders
	<init> (Lhh;)V <init>
	a (Lacp;)Ljava/util/Optional; get
	c (Lacp;)Lhe$c; getOrCreate
	d (Lacp;)Lhe$c; lambda$getOrCreate$0
hu$i net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	a value
	b holder
	<init> (Lhu$d;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhu$d; value
	b ()Ljava/util/Optional; holder
hv net/minecraft/core/RegistrySynchronization
	b NETWORKABLE_REGISTRIES
	a NETWORK_CODEC
	<init> ()V <init>
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lacp;Lcom/mojang/serialization/Codec;)V put
	a (Lhs;)Ljava/util/stream/Stream; ownedNetworkableRegistries
	a (Lacp;)Lcom/mojang/serialization/DataResult; getNetworkCodec
	a ()Lcom/mojang/serialization/Codec; makeNetworkCodec
	a (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; captureMap
	a (Lhl;)Ljava/util/stream/Stream; networkedRegistries
	b (Lhl;)Ljava/util/stream/Stream; networkSafeRegistries
	b (Lhs;)Ljava/util/Map; lambda$captureMap$10
	a (Lhs$d;)Lhr; lambda$captureMap$9
	b (Lhs$d;)Lacp; lambda$captureMap$8
	b (Lacp;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$7
	a (Lacp;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$makeNetworkCodec$6
	a (Lhr;)Lcom/mojang/serialization/DataResult; lambda$makeNetworkCodec$5
	c (Lacp;)Lcom/mojang/serialization/DataResult; lambda$getNetworkCodec$4
	d (Lacp;)Ljava/lang/String; lambda$getNetworkCodec$3
	a (Lhv$a;)Lcom/mojang/serialization/Codec; lambda$getNetworkCodec$2
	c (Lhs$d;)Z lambda$ownedNetworkableRegistries$1
	b ()Lcom/google/common/collect/ImmutableMap; lambda$static$0
	<clinit> ()V <clinit>
hv$a net/minecraft/core/RegistrySynchronization$NetworkedRegistryData
	a key
	b networkCodec
	<init> (Lacp;Lcom/mojang/serialization/Codec;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Lcom/mojang/serialization/Codec; networkCodec
hw net/minecraft/core/Rotations
	a x
	b y
	c z
	<init> (FFF)V <init>
	<init> (Lqx;)V <init>
	a ()Lqx; save
	equals (Ljava/lang/Object;)Z equals
	b ()F getX
	c ()F getY
	d ()F getZ
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
hx net/minecraft/core/SectionPos
	a SECTION_BITS
	b SECTION_SIZE
	c SECTION_MASK
	d SECTION_HALF_SIZE
	e SECTION_MAX_INDEX
	h PACKED_X_LENGTH
	i PACKED_Y_LENGTH
	j PACKED_Z_LENGTH
	k PACKED_X_MASK
	l PACKED_Y_MASK
	m PACKED_Z_MASK
	n Y_OFFSET
	o Z_OFFSET
	p X_OFFSET
	q RELATIVE_X_SHIFT
	r RELATIVE_Y_SHIFT
	s RELATIVE_Z_SHIFT
	<init> (III)V <init>
	a (III)Lhx; of
	a (Lgu;)Lhx; of
	a (Lclt;I)Lhx; of
	a (Ldfs;)Lhx; of
	a (Lho;)Lhx; of
	a (J)Lhx; of
	a (Lddx;)Lhx; bottomOf
	a (JLha;)J offset
	a (JIII)J offset
	a (D)I posToSectionCoord
	a (I)I blockToSectionCoord
	b (D)I blockToSectionCoord
	b (I)I sectionRelative
	b (Lgu;)S sectionRelativePos
	a (S)I sectionRelativeX
	b (S)I sectionRelativeY
	c (S)I sectionRelativeZ
	d (S)I relativeToBlockX
	e (S)I relativeToBlockY
	f (S)I relativeToBlockZ
	g (S)Lgu; relativeToBlockPos
	c (I)I sectionToBlockCoord
	a (II)I sectionToBlockCoord
	b (J)I x
	c (J)I y
	d (J)I z
	a ()I x
	b ()I y
	c ()I z
	d ()I minBlockX
	e ()I minBlockY
	f ()I minBlockZ
	g ()I maxBlockX
	h ()I maxBlockY
	i ()I maxBlockZ
	e (J)J blockToSection
	b (II)J getZeroNode
	f (J)J getZeroNode
	j ()Lgu; origin
	q ()Lgu; center
	r ()Lclt; chunk
	c (Lgu;)J asLong
	b (III)J asLong
	s ()J asLong
	d (III)Lhx; offset
	t ()Ljava/util/stream/Stream; blocksInside
	a (Lhx;I)Ljava/util/stream/Stream; cube
	a (Lclt;III)Ljava/util/stream/Stream; aroundChunk
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (Lgu;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	c (III)Lhz; offset
hx$1 net/minecraft/core/SectionPos$1
	a cursor
	b val$minX
	c val$minY
	d val$minZ
	e val$maxX
	f val$maxY
	g val$maxZ
	<init> (JIIIIIII)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
hy net/minecraft/core/UUIDUtil
	a CODEC
	b STRING_CODEC
	c AUTHLIB_CODEC
	d UUID_BYTES
	e UUID_PREFIX_OFFLINE_PLAYER
	<init> ()V <init>
	a ([I)Ljava/util/UUID; uuidFromIntArray
	a (Ljava/util/UUID;)[I uuidToIntArray
	a (JJ)[I leastMostToIntArray
	b (Ljava/util/UUID;)[B uuidToByteArray
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; readUUID
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; getOrCreatePlayerUUID
	a (Ljava/lang/String;)Ljava/util/UUID; createOfflinePlayerUUID
	a (Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID; lambda$static$8
	c (Ljava/util/UUID;)Ljava/util/UUID; lambda$static$7
	d (Ljava/util/UUID;)Ljava/util/UUID; lambda$static$6
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$5
	a (Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String; lambda$static$4
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$3
	b (Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String; lambda$static$2
	e (Ljava/util/UUID;)Ljava/util/stream/IntStream; lambda$static$1
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$0
	<clinit> ()V <clinit>
hz net/minecraft/core/Vec3i
	f CODEC
	g ZERO
	a x
	b y
	c z
	v (I)Lcom/mojang/serialization/Codec; offsetCodec
	<init> (III)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	i (Lhz;)I compareTo
	u ()I getX
	v ()I getY
	w ()I getZ
	u (I)Lhz; setX
	t (I)Lhz; setY
	s (I)Lhz; setZ
	c (III)Lhz; offset
	f (Lhz;)Lhz; offset
	e (Lhz;)Lhz; subtract
	o (I)Lhz; multiply
	p ()Lhz; above
	n (I)Lhz; above
	o ()Lhz; below
	m (I)Lhz; below
	n ()Lhz; north
	l (I)Lhz; north
	m ()Lhz; south
	k (I)Lhz; south
	l ()Lhz; west
	j (I)Lhz; west
	k ()Lhz; east
	i (I)Lhz; east
	b (Lha;)Lhz; relative
	b (Lha;I)Lhz; relative
	b (Lha$a;I)Lhz; relative
	d (Lhz;)Lhz; cross
	a (Lhz;D)Z closerThan
	a (Lho;D)Z closerToCenterThan
	j (Lhz;)D distSqr
	b (Lho;)D distToCenterSqr
	c (DDD)D distToCenterSqr
	d (DDD)D distToLowCornerSqr
	k (Lhz;)I distManhattan
	a (Lha$a;)I get
	toString ()Ljava/lang/String; toString
	x ()Ljava/lang/String; toShortString
	compareTo (Ljava/lang/Object;)I compareTo
	a (ILhz;)Lcom/mojang/serialization/DataResult; lambda$offsetCodec$4
	b (ILhz;)Ljava/lang/String; lambda$offsetCodec$3
	a (Lhz;)Ljava/util/stream/IntStream; lambda$static$2
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([I)Lhz; lambda$static$0
	<clinit> ()V <clinit>
ia net/minecraft/core/WritableRegistry
	b (ILacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe; registerMapping
	a (Lacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	k ()Z isEmpty
	n ()Lhf; createRegistrationLookup
ib net/minecraft/core/cauldron/CauldronInteraction
	a EMPTY
	b WATER
	c LAVA
	d POWDER_SNOW
	e FILL_WATER
	f FILL_LAVA
	g FILL_POWDER_SNOW
	h SHULKER_BOX
	i BANNER
	j DYED_ITEM
	a ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; newInteractionMap
	interact (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; interact
	b ()V bootStrap
	a (Ljava/util/Map;)V addDefaultInteractions
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;Lcfz;Ljava/util/function/Predicate;Lamg;)Lbdx; fillBucket
	a (Lcmm;Lgu;Lbyo;Lbdw;Lcfz;Ldcb;Lamg;)Lbdx; emptyBucket
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$16
	b (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$15
	c (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$14
	d (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$13
	e (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$12
	f (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$static$11
	g (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$10
	a (Ldcb;)Z lambda$bootStrap$9
	h (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$8
	b (Ldcb;)Z lambda$bootStrap$7
	i (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$6
	j (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$5
	k (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$4
	c (Ldcb;)Z lambda$bootStrap$3
	l (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$bootStrap$2
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V lambda$newInteractionMap$1
	m (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Lcfz;)Lbdx; lambda$newInteractionMap$0
	<clinit> ()V <clinit>
ic net/minecraft/core/cauldron/package-info
id net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lgv;)V playSound
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a ()F getUncertainty
	b ()F getPower
ie net/minecraft/core/dispenser/BoatDispenseItemBehavior
	c defaultDispenseItemBehavior
	d type
	e isChestBoat
	<init> (Lcah$b;)V <init>
	<init> (Lcah$b;Z)V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lgv;)V playSound
ig net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	<init> ()V <init>
	dispense (Lgv;Lcfz;)Lcfz; dispense
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lcmm;Lcfz;ILha;Lho;)V spawnItem
	a (Lgv;)V playSound
	a (Lgv;Lha;)V playAnimation
ih net/minecraft/core/dispenser/DispenseItemBehavior
	a LOGGER
	b NOOP
	dispense (Lgv;Lcfz;)Lcfz; dispense
	c ()V bootStrap
	a (Lgv;Lbfj;Lha;)V setEntityPokingOutOfBlock
	a (Lgv;Lcfz;)Lcfz; lambda$static$0
	<clinit> ()V <clinit>
ih$1 net/minecraft/core/dispenser/DispenseItemBehavior$1
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
ih$2 net/minecraft/core/dispenser/DispenseItemBehavior$10
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lha;Lbux;)V lambda$execute$0
ih$3 net/minecraft/core/dispenser/DispenseItemBehavior$11
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lbfz;)Z lambda$execute$0
ih$4 net/minecraft/core/dispenser/DispenseItemBehavior$12
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lbtk;)Z lambda$execute$0
ih$5 net/minecraft/core/dispenser/DispenseItemBehavior$13
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lbtj;)Z lambda$execute$0
ih$6 net/minecraft/core/dispenser/DispenseItemBehavior$14
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lgv;)V playSound
ih$7 net/minecraft/core/dispenser/DispenseItemBehavior$15
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lgv;)V playSound
	a (Lcfz;Lbzj;)V lambda$execute$0
ih$8 net/minecraft/core/dispenser/DispenseItemBehavior$16
	c defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$9 net/minecraft/core/dispenser/DispenseItemBehavior$17
	c defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$10 net/minecraft/core/dispenser/DispenseItemBehavior$18
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$11 net/minecraft/core/dispenser/DispenseItemBehavior$19
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$12 net/minecraft/core/dispenser/DispenseItemBehavior$2
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
ih$13 net/minecraft/core/dispenser/DispenseItemBehavior$20
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$14 net/minecraft/core/dispenser/DispenseItemBehavior$21
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$15 net/minecraft/core/dispenser/DispenseItemBehavior$22
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$16 net/minecraft/core/dispenser/DispenseItemBehavior$23
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$17 net/minecraft/core/dispenser/DispenseItemBehavior$24
	c defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;Lcfz;)Lcfz; takeLiquid
	a (Lgv;Lcfz;)Lcfz; execute
	a (Ldca$a;)Z lambda$execute$0
ih$18 net/minecraft/core/dispenser/DispenseItemBehavior$25
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$19 net/minecraft/core/dispenser/DispenseItemBehavior$26
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$20 net/minecraft/core/dispenser/DispenseItemBehavior$27
	c defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ih$21 net/minecraft/core/dispenser/DispenseItemBehavior$3
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
ih$22 net/minecraft/core/dispenser/DispenseItemBehavior$4
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a (Lcfz;Lbzo;)V lambda$getProjectile$0
ih$23 net/minecraft/core/dispenser/DispenseItemBehavior$5
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a (Lcfz;Lbzk;)V lambda$getProjectile$0
ih$24 net/minecraft/core/dispenser/DispenseItemBehavior$6
	<init> ()V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lcfz;Lbzq;)V lambda$getProjectile$0
ih$25 net/minecraft/core/dispenser/DispenseItemBehavior$7
	<init> ()V <init>
	dispense (Lgv;Lcfz;)Lcfz; dispense
ih$25$1 net/minecraft/core/dispenser/DispenseItemBehavior$7$1
	c this$0
	<init> (Lih$25;)V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lcfz;Lbzr;)V lambda$getProjectile$0
ih$26 net/minecraft/core/dispenser/DispenseItemBehavior$8
	<init> ()V <init>
	dispense (Lgv;Lcfz;)Lcfz; dispense
ih$26$1 net/minecraft/core/dispenser/DispenseItemBehavior$8$1
	c this$0
	<init> (Lih$26;)V <init>
	a (Lcmm;Lho;Lcfz;)Lbzg; getProjectile
	a ()F getUncertainty
	b ()F getPower
	a (Lcfz;Lbzr;)V lambda$getProjectile$0
ih$27 net/minecraft/core/dispenser/DispenseItemBehavior$9
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
ii net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	c success
	<init> ()V <init>
	a ()Z isSuccess
	a (Z)V setSuccess
	a (Lgv;)V playSound
ij net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Laif;Lgu;)Z tryShearBeehive
	b (Laif;Lgu;)Z tryShearLivingEntity
	a (Ldca$a;)Z lambda$tryShearBeehive$0
ik net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	c LOGGER
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	<clinit> ()V <clinit>
il net/minecraft/core/dispenser/package-info
im net/minecraft/core/package-info
in net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a (Liu;)Lcom/mojang/serialization/Codec; codec
	<init> (Liu;Ldcb;)V <init>
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	c ()Ldcb; getState
	a (Lin;)Ldcb; lambda$codec$1
	a (Liu;Ldcb;)Lin; lambda$codec$0
	<clinit> ()V <clinit>
in$1 net/minecraft/core/particles/BlockParticleOption$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Lin; fromCommand
	a (Liu;Lsf;)Lin; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
io net/minecraft/core/particles/DustColorTransitionOptions
	a SCULK_PARTICLE_COLOR
	b SCULK_TO_REDSTONE
	c CODEC
	d DESERIALIZER
	i toColor
	<init> (Lorg/joml/Vector3f;Lorg/joml/Vector3f;F)V <init>
	c ()Lorg/joml/Vector3f; getFromColor
	d ()Lorg/joml/Vector3f; getToColor
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lio;)Ljava/lang/Float; lambda$static$2
	b (Lio;)Lorg/joml/Vector3f; lambda$static$1
	c (Lio;)Lorg/joml/Vector3f; lambda$static$0
	<clinit> ()V <clinit>
io$1 net/minecraft/core/particles/DustColorTransitionOptions$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Lio; fromCommand
	a (Liu;Lsf;)Lio; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
ip net/minecraft/core/particles/DustParticleOptions
	a REDSTONE_PARTICLE_COLOR
	b REDSTONE
	c CODEC
	d DESERIALIZER
	<init> (Lorg/joml/Vector3f;F)V <init>
	b ()Liu; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lip;)Ljava/lang/Float; lambda$static$1
	b (Lip;)Lorg/joml/Vector3f; lambda$static$0
	<clinit> ()V <clinit>
ip$1 net/minecraft/core/particles/DustParticleOptions$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Lip; fromCommand
	a (Liu;Lsf;)Lip; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
iq net/minecraft/core/particles/DustParticleOptionsBase
	e MIN_SCALE
	f MAX_SCALE
	g color
	h scale
	<init> (Lorg/joml/Vector3f;F)V <init>
	a (Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f; readVector3f
	b (Lsf;)Lorg/joml/Vector3f; readVector3f
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	e ()Lorg/joml/Vector3f; getColor
	f ()F getScale
ir net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a (Liu;)Lcom/mojang/serialization/Codec; codec
	<init> (Liu;Lcfz;)V <init>
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	c ()Lcfz; getItem
	a (Lir;)Lcfz; lambda$codec$1
	a (Liu;Lcfz;)Lir; lambda$codec$0
	<clinit> ()V <clinit>
ir$1 net/minecraft/core/particles/ItemParticleOption$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Lir; fromCommand
	a (Liu;Lsf;)Lir; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
is net/minecraft/core/particles/ParticleGroup
	b limit
	a SPORE_BLOSSOM
	<init> (I)V <init>
	a ()I getLimit
	<clinit> ()V <clinit>
it net/minecraft/core/particles/ParticleOptions
	b ()Liu; getType
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
it$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
	b (Liu;Lsf;)Lit; fromNetwork
iu net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	<init> (ZLit$a;)V <init>
	c ()Z getOverrideLimiter
	d ()Lit$a; getDeserializer
	e ()Lcom/mojang/serialization/Codec; codec
iv net/minecraft/core/particles/ParticleTypes
	a AMBIENT_ENTITY_EFFECT
	b ANGRY_VILLAGER
	c BLOCK
	d BLOCK_MARKER
	e BUBBLE
	f CLOUD
	g CRIT
	h DAMAGE_INDICATOR
	i DRAGON_BREATH
	j DRIPPING_LAVA
	k FALLING_LAVA
	l LANDING_LAVA
	m DRIPPING_WATER
	n FALLING_WATER
	o DUST
	p DUST_COLOR_TRANSITION
	q EFFECT
	r ELDER_GUARDIAN
	s ENCHANTED_HIT
	t ENCHANT
	u END_ROD
	v ENTITY_EFFECT
	w EXPLOSION_EMITTER
	x EXPLOSION
	y SONIC_BOOM
	z FALLING_DUST
	A FIREWORK
	B FISHING
	C FLAME
	D CHERRY_LEAVES
	E SCULK_SOUL
	F SCULK_CHARGE
	G SCULK_CHARGE_POP
	H SOUL_FIRE_FLAME
	I SOUL
	J FLASH
	K HAPPY_VILLAGER
	L COMPOSTER
	M HEART
	N INSTANT_EFFECT
	O ITEM
	P VIBRATION
	Q ITEM_SLIME
	R ITEM_SNOWBALL
	S LARGE_SMOKE
	T LAVA
	U MYCELIUM
	V NOTE
	W POOF
	X PORTAL
	Y RAIN
	Z SMOKE
	aa SNEEZE
	ab SPIT
	ac SQUID_INK
	ad SWEEP_ATTACK
	ae TOTEM_OF_UNDYING
	af UNDERWATER
	ag SPLASH
	ah WITCH
	ai BUBBLE_POP
	aj CURRENT_DOWN
	ak BUBBLE_COLUMN_UP
	al NAUTILUS
	am DOLPHIN
	an CAMPFIRE_COSY_SMOKE
	ao CAMPFIRE_SIGNAL_SMOKE
	ap DRIPPING_HONEY
	aq FALLING_HONEY
	ar LANDING_HONEY
	as FALLING_NECTAR
	at FALLING_SPORE_BLOSSOM
	au ASH
	av CRIMSON_SPORE
	aw WARPED_SPORE
	ax SPORE_BLOSSOM_AIR
	ay DRIPPING_OBSIDIAN_TEAR
	az FALLING_OBSIDIAN_TEAR
	aA LANDING_OBSIDIAN_TEAR
	aB REVERSE_PORTAL
	aC WHITE_ASH
	aD SMALL_FLAME
	aE SNOWFLAKE
	aF DRIPPING_DRIPSTONE_LAVA
	aG FALLING_DRIPSTONE_LAVA
	aH DRIPPING_DRIPSTONE_WATER
	aI FALLING_DRIPSTONE_WATER
	aJ GLOW_SQUID_INK
	aK GLOW
	aL WAX_ON
	aM WAX_OFF
	aN ELECTRIC_SPARK
	aO SCRAPE
	aP SHRIEK
	aQ EGG_CRACK
	aR CODEC
	<init> ()V <init>
	a (Ljava/lang/String;Z)Liy; register
	a (Ljava/lang/String;ZLit$a;Ljava/util/function/Function;)Liu; register
	a (Liu;)Lcom/mojang/serialization/Codec; lambda$static$4
	b (Liu;)Lcom/mojang/serialization/Codec; lambda$static$3
	c (Liu;)Lcom/mojang/serialization/Codec; lambda$static$2
	d (Liu;)Lcom/mojang/serialization/Codec; lambda$static$1
	e (Liu;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
iv$1 net/minecraft/core/particles/ParticleTypes$1
	a val$codec
	<init> (ZLit$a;Ljava/util/function/Function;)V <init>
	e ()Lcom/mojang/serialization/Codec; codec
iw net/minecraft/core/particles/SculkChargeParticleOptions
	c roll
	a CODEC
	b DESERIALIZER
	<init> (F)V <init>
	b ()Liu; getType
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()F roll
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Liw;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
iw$1 net/minecraft/core/particles/SculkChargeParticleOptions$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Liw; fromCommand
	a (Liu;Lsf;)Liw; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
ix net/minecraft/core/particles/ShriekParticleOption
	a CODEC
	b DESERIALIZER
	c delay
	<init> (I)V <init>
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	c ()I getDelay
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lix;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
ix$1 net/minecraft/core/particles/ShriekParticleOption$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Lix; fromCommand
	a (Liu;Lsf;)Lix; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
iy net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	b codec
	<init> (Z)V <init>
	f ()Liy; getType
	e ()Lcom/mojang/serialization/Codec; codec
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	<clinit> ()V <clinit>
iy$1 net/minecraft/core/particles/SimpleParticleType$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Liy; fromCommand
	a (Liu;Lsf;)Liy; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
iz net/minecraft/core/particles/VibrationParticleOption
	a CODEC
	b DESERIALIZER
	c destination
	d arrivalInTicks
	<init> (Ldgp;I)V <init>
	a (Lsf;)V writeToNetwork
	a ()Ljava/lang/String; writeToString
	b ()Liu; getType
	c ()Ldgp; getDestination
	d ()I getArrivalInTicks
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Liz;)Ljava/lang/Integer; lambda$static$1
	b (Liz;)Ldgp; lambda$static$0
	<clinit> ()V <clinit>
iz$1 net/minecraft/core/particles/VibrationParticleOption$1
	<init> ()V <init>
	a (Liu;Lcom/mojang/brigadier/StringReader;)Liz; fromCommand
	a (Liu;Lsf;)Liz; fromNetwork
	b (Liu;Lsf;)Lit; fromNetwork
	b (Liu;Lcom/mojang/brigadier/StringReader;)Lit; fromCommand
ja net/minecraft/core/particles/package-info
jb net/minecraft/core/registries/BuiltInRegistries
	aq LOGGER
	ar LOADERS
	a ROOT_REGISTRY_NAME
	as WRITABLE_REGISTRY
	b GAME_EVENT
	c SOUND_EVENT
	d FLUID
	e MOB_EFFECT
	f BLOCK
	g ENCHANTMENT
	h ENTITY_TYPE
	i ITEM
	j POTION
	k PARTICLE_TYPE
	l BLOCK_ENTITY_TYPE
	m PAINTING_VARIANT
	n CUSTOM_STAT
	o CHUNK_STATUS
	p RULE_TEST
	q RULE_BLOCK_ENTITY_MODIFIER
	r POS_RULE_TEST
	s MENU
	t RECIPE_TYPE
	u RECIPE_SERIALIZER
	v ATTRIBUTE
	w POSITION_SOURCE_TYPE
	x COMMAND_ARGUMENT_TYPE
	y STAT_TYPE
	z VILLAGER_TYPE
	A VILLAGER_PROFESSION
	B POINT_OF_INTEREST_TYPE
	C MEMORY_MODULE_TYPE
	D SENSOR_TYPE
	E SCHEDULE
	F ACTIVITY
	G LOOT_POOL_ENTRY_TYPE
	H LOOT_FUNCTION_TYPE
	I LOOT_CONDITION_TYPE
	J LOOT_NUMBER_PROVIDER_TYPE
	K LOOT_NBT_PROVIDER_TYPE
	L LOOT_SCORE_PROVIDER_TYPE
	M FLOAT_PROVIDER_TYPE
	N INT_PROVIDER_TYPE
	O HEIGHT_PROVIDER_TYPE
	P BLOCK_PREDICATE_TYPE
	Q CARVER
	R FEATURE
	S STRUCTURE_PLACEMENT
	T STRUCTURE_PIECE
	U STRUCTURE_TYPE
	V PLACEMENT_MODIFIER_TYPE
	W BLOCKSTATE_PROVIDER_TYPE
	X FOLIAGE_PLACER_TYPE
	Y TRUNK_PLACER_TYPE
	Z ROOT_PLACER_TYPE
	aa TREE_DECORATOR_TYPE
	ab FEATURE_SIZE_TYPE
	ac BIOME_SOURCE
	ad CHUNK_GENERATOR
	ae MATERIAL_CONDITION
	af MATERIAL_RULE
	ag DENSITY_FUNCTION_TYPE
	ah STRUCTURE_PROCESSOR
	ai STRUCTURE_POOL_ELEMENT
	aj CAT_VARIANT
	ak FROG_VARIANT
	al BANNER_PATTERN
	am INSTRUMENT
	an DECORATED_POT_PATTERNS
	ao CREATIVE_MODE_TAB
	ap REGISTRY
	<init> ()V <init>
	a (Lacp;Ljb$a;)Lhr; registerSimple
	a (Lacp;Ljava/lang/String;Ljb$a;)Lgz; registerDefaulted
	b (Lacp;Ljava/lang/String;Ljb$a;)Lgz; registerDefaultedWithIntrusiveHolders
	a (Lacp;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lhr; registerSimple
	a (Lacp;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lgz; registerDefaulted
	b (Lacp;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljb$a;)Lgz; registerDefaultedWithIntrusiveHolders
	a (Lacp;Lia;Ljb$a;Lcom/mojang/serialization/Lifecycle;)Lia; internalRegister
	a ()V bootStrap
	b ()V createContents
	c ()V freeze
	a (Lhr;)V validate
	a (Lhr;Lhr;)V lambda$validate$55
	a (Lacq;Ljava/util/function/Supplier;)V lambda$createContents$54
	a (Ljb$a;Lia;)Ljava/lang/Object; lambda$internalRegister$53
	b (Lhr;)Lbrw; lambda$static$52
	c (Lhr;)Ldti; lambda$static$51
	d (Lhr;)Ldvs; lambda$static$50
	e (Lhr;)Ldnu; lambda$static$49
	f (Lhr;)Ldpl; lambda$static$48
	g (Lhr;)Ldor; lambda$static$47
	h (Lhr;)Ldpx; lambda$static$46
	i (Lhr;)Ldof; lambda$static$45
	j (Lhr;)Ldou; lambda$static$44
	k (Lhr;)Ldri; lambda$static$43
	l (Lhr;)Ldsj; lambda$static$42
	m (Lhr;)Ldsr; lambda$static$41
	n (Lhr;)Ldsy; lambda$static$40
	o (Lhr;)Ldko; lambda$static$39
	p (Lhr;)Ldjp; lambda$static$38
	q (Lhr;)Ldis; lambda$static$37
	r (Lhr;)Ldqi; lambda$static$36
	s (Lhr;)Lbdd; lambda$static$35
	t (Lhr;)Lbdb; lambda$static$34
	u (Lhr;)Ledm; lambda$static$33
	v (Lhr;)Lecx; lambda$static$32
	w (Lhr;)Lede; lambda$static$31
	x (Lhr;)Lecl; lambda$static$30
	y (Lhr;)Leba; lambda$static$29
	z (Lhr;)Leag; lambda$static$28
	A (Lhr;)Lbzz; lambda$static$27
	B (Lhr;)Lcab; lambda$static$26
	C (Lhr;)Lbqg; lambda$static$25
	D (Lhr;)Lbpb; lambda$static$24
	E (Lhr;)Lbye; lambda$static$23
	F (Lhr;)Lbyg; lambda$static$22
	G (Lhr;)Lamq; lambda$static$21
	H (Lhr;)Ldgq; lambda$static$20
	I (Lhr;)Lbhb; lambda$static$19
	J (Lhr;)Lcje; lambda$static$18
	K (Lhr;)Lcjf; lambda$static$17
	L (Lhr;)Lcck; lambda$static$16
	M (Lhr;)Ldvh; lambda$static$15
	N (Lhr;)Ldwc; lambda$static$14
	O (Lhr;)Ldvo; lambda$static$13
	P (Lhr;)Ldec; lambda$static$12
	Q (Lhr;)Lacq; lambda$static$11
	R (Lhr;)Lczp; lambda$static$10
	S (Lhr;)Liu; lambda$static$9
	T (Lhr;)Lchw; lambda$static$8
	U (Lhr;)Lcfu; lambda$static$7
	V (Lhr;)Lbfn; lambda$static$6
	W (Lhr;)Lckg; lambda$static$5
	X (Lhr;)Lcpn; lambda$static$4
	Y (Lhr;)Lbey; lambda$static$3
	Z (Lhr;)Ldxd; lambda$static$2
	aa (Lhr;)Lamg; lambda$static$1
	ab (Lhr;)Ldgl; lambda$static$0
	<clinit> ()V <clinit>
jb$a net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
	run (Lhr;)Ljava/lang/Object; run
jc net/minecraft/core/registries/Registries
	a ACTIVITY
	b ATTRIBUTE
	c BANNER_PATTERN
	d BIOME_SOURCE
	e BLOCK
	f BLOCK_ENTITY_TYPE
	g BLOCK_PREDICATE_TYPE
	h BLOCK_STATE_PROVIDER_TYPE
	i CARVER
	j CAT_VARIANT
	k CHUNK_GENERATOR
	l CHUNK_STATUS
	m COMMAND_ARGUMENT_TYPE
	n CREATIVE_MODE_TAB
	o CUSTOM_STAT
	p DAMAGE_TYPE
	q DENSITY_FUNCTION_TYPE
	r ENCHANTMENT
	s ENTITY_TYPE
	t FEATURE
	u FEATURE_SIZE_TYPE
	v FLOAT_PROVIDER_TYPE
	w FLUID
	x FOLIAGE_PLACER_TYPE
	y FROG_VARIANT
	z GAME_EVENT
	A HEIGHT_PROVIDER_TYPE
	B INSTRUMENT
	C INT_PROVIDER_TYPE
	D ITEM
	E LOOT_CONDITION_TYPE
	F LOOT_FUNCTION_TYPE
	G LOOT_NBT_PROVIDER_TYPE
	H LOOT_NUMBER_PROVIDER_TYPE
	I LOOT_POOL_ENTRY_TYPE
	J LOOT_SCORE_PROVIDER_TYPE
	K MATERIAL_CONDITION
	L MATERIAL_RULE
	M MEMORY_MODULE_TYPE
	N MENU
	O MOB_EFFECT
	P PAINTING_VARIANT
	Q PARTICLE_TYPE
	R PLACEMENT_MODIFIER_TYPE
	S POINT_OF_INTEREST_TYPE
	T POSITION_SOURCE_TYPE
	U POS_RULE_TEST
	V POTION
	W RECIPE_SERIALIZER
	X RECIPE_TYPE
	Y ROOT_PLACER_TYPE
	Z RULE_TEST
	aa RULE_BLOCK_ENTITY_MODIFIER
	ab SCHEDULE
	ac SENSOR_TYPE
	ad SOUND_EVENT
	ae STAT_TYPE
	af STRUCTURE_PIECE
	ag STRUCTURE_PLACEMENT
	ah STRUCTURE_POOL_ELEMENT
	ai STRUCTURE_PROCESSOR
	aj STRUCTURE_TYPE
	ak TREE_DECORATOR_TYPE
	al TRUNK_PLACER_TYPE
	am VILLAGER_PROFESSION
	an VILLAGER_TYPE
	ao DECORATED_POT_PATTERNS
	ap BIOME
	aq CHAT_TYPE
	ar CONFIGURED_CARVER
	as CONFIGURED_FEATURE
	at DENSITY_FUNCTION
	au DIMENSION_TYPE
	av FLAT_LEVEL_GENERATOR_PRESET
	aw NOISE_SETTINGS
	ax NOISE
	ay PLACED_FEATURE
	az STRUCTURE
	aA PROCESSOR_LIST
	aB STRUCTURE_SET
	aC TEMPLATE_POOL
	aD TRIM_MATERIAL
	aE TRIM_PATTERN
	aF WORLD_PRESET
	aG MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	aH DIMENSION
	aI LEVEL_STEM
	<init> ()V <init>
	a (Lacp;)Lacp; levelStemToLevel
	b (Lacp;)Lacp; levelToLevelStem
	a (Ljava/lang/String;)Lacp; createRegistryKey
	<clinit> ()V <clinit>
jd net/minecraft/core/registries/package-info
je net/minecraft/data/BlockFamilies
	am MAP
	an RECIPE_GROUP_PREFIX_WOODEN
	ao RECIPE_UNLOCKED_BY_HAS_PLANKS
	a ACACIA_PLANKS
	b CHERRY_PLANKS
	c BIRCH_PLANKS
	d CRIMSON_PLANKS
	e JUNGLE_PLANKS
	f OAK_PLANKS
	g DARK_OAK_PLANKS
	h SPRUCE_PLANKS
	i WARPED_PLANKS
	j MANGROVE_PLANKS
	k BAMBOO_PLANKS
	l BAMBOO_MOSAIC
	m MUD_BRICKS
	n ANDESITE
	o POLISHED_ANDESITE
	p BLACKSTONE
	q POLISHED_BLACKSTONE
	r POLISHED_BLACKSTONE_BRICKS
	s BRICKS
	t END_STONE_BRICKS
	u MOSSY_STONE_BRICKS
	v COPPER_BLOCK
	w CUT_COPPER
	x WAXED_COPPER_BLOCK
	y WAXED_CUT_COPPER
	z EXPOSED_COPPER
	A EXPOSED_CUT_COPPER
	B WAXED_EXPOSED_COPPER
	C WAXED_EXPOSED_CUT_COPPER
	D WEATHERED_COPPER
	E WEATHERED_CUT_COPPER
	F WAXED_WEATHERED_COPPER
	G WAXED_WEATHERED_CUT_COPPER
	H OXIDIZED_COPPER
	I OXIDIZED_CUT_COPPER
	J WAXED_OXIDIZED_COPPER
	K WAXED_OXIDIZED_CUT_COPPER
	L COBBLESTONE
	M MOSSY_COBBLESTONE
	N DIORITE
	O POLISHED_DIORITE
	P GRANITE
	Q POLISHED_GRANITE
	R NETHER_BRICKS
	S RED_NETHER_BRICKS
	T PRISMARINE
	U PURPUR
	V PRISMARINE_BRICKS
	W DARK_PRISMARINE
	X QUARTZ
	Y SMOOTH_QUARTZ
	Z SANDSTONE
	aa CUT_SANDSTONE
	ab SMOOTH_SANDSTONE
	ac RED_SANDSTONE
	ad CUT_RED_SANDSTONE
	ae SMOOTH_RED_SANDSTONE
	af STONE
	ag STONE_BRICK
	ah DEEPSLATE
	ai COBBLED_DEEPSLATE
	aj POLISHED_DEEPSLATE
	ak DEEPSLATE_BRICKS
	al DEEPSLATE_TILES
	<init> ()V <init>
	a (Lcpn;)Ljf$a; familyBuilder
	a ()Ljava/util/stream/Stream; getAllFamilies
	<clinit> ()V <clinit>
jf net/minecraft/data/BlockFamily
	a baseBlock
	b variants
	c requiredFeatures
	d generateModel
	e generateRecipe
	f recipeGroupPrefix
	g recipeUnlockedBy
	<init> (Lcpn;)V <init>
	a ()Lcpn; getBaseBlock
	b ()Ljava/util/Map; getVariants
	a (Ljf$b;)Lcpn; get
	c ()Z shouldGenerateModel
	a (Lcaw;)Z shouldGenerateRecipe
	d ()Ljava/util/Optional; getRecipeGroupPrefix
	e ()Ljava/util/Optional; getRecipeUnlockedBy
jf$a net/minecraft/data/BlockFamily$Builder
	a family
	<init> (Lcpn;)V <init>
	a ()Ljf; getFamily
	a (Lcpn;)Ljf$a; button
	b (Lcpn;)Ljf$a; chiseled
	c (Lcpn;)Ljf$a; mosaic
	d (Lcpn;)Ljf$a; cracked
	e (Lcpn;)Ljf$a; cut
	f (Lcpn;)Ljf$a; door
	g (Lcpn;)Ljf$a; customFence
	h (Lcpn;)Ljf$a; fence
	i (Lcpn;)Ljf$a; customFenceGate
	j (Lcpn;)Ljf$a; fenceGate
	a (Lcpn;Lcpn;)Ljf$a; sign
	k (Lcpn;)Ljf$a; slab
	l (Lcpn;)Ljf$a; stairs
	m (Lcpn;)Ljf$a; pressurePlate
	n (Lcpn;)Ljf$a; polished
	o (Lcpn;)Ljf$a; trapdoor
	p (Lcpn;)Ljf$a; wall
	b ()Ljf$a; dontGenerateModel
	c ()Ljf$a; dontGenerateRecipe
	a ([Lcau;)Ljf$a; featureLockedBehind
	a (Ljava/lang/String;)Ljf$a; recipeGroupPrefix
	b (Ljava/lang/String;)Ljf$a; recipeUnlockedBy
jf$b net/minecraft/data/BlockFamily$Variant
	a BUTTON
	b CHISELED
	c CRACKED
	d CUT
	e DOOR
	f CUSTOM_FENCE
	g FENCE
	h CUSTOM_FENCE_GATE
	i FENCE_GATE
	j MOSAIC
	k SIGN
	l SLAB
	m STAIRS
	n PRESSURE_PLATE
	o POLISHED
	p TRAPDOOR
	q WALL
	r WALL_SIGN
	s name
	t $VALUES
	values ()[Ljf$b; values
	valueOf (Ljava/lang/String;)Ljf$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	b ()[Ljf$b; $values
	<clinit> ()V <clinit>
jg net/minecraft/data/CachedOutput
	a NO_CACHE
	writeIfNeeded (Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V writeIfNeeded
	a (Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V lambda$static$0
	<clinit> ()V <clinit>
jh net/minecraft/data/DataGenerator
	a LOGGER
	b rootOutputFolder
	c vanillaPackOutput
	d allProviderIds
	e providersToRun
	f version
	g alwaysGenerate
	<init> (Ljava/nio/file/Path;Lad;Z)V <init>
	a ()V run
	a (Z)Ljh$a; getVanillaPack
	a (ZLjava/lang/String;)Ljh$a; getBuiltinDatapack
	a (Ljj;Lcom/google/common/base/Stopwatch;Ljava/lang/String;Lji;)V lambda$run$0
	<clinit> ()V <clinit>
jh$a net/minecraft/data/DataGenerator$PackGenerator
	b toRun
	c providerPrefix
	d output
	a this$0
	<init> (Ljh;ZLjava/lang/String;Ljk;)V <init>
	a (Lji$a;)Lji; addProvider
ji net/minecraft/data/DataProvider
	a FIXED_ORDER_FIELDS
	b KEY_COMPARATOR
	c LOGGER
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljg;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; saveStable
	a (Lcom/google/gson/JsonElement;Ljg;Ljava/nio/file/Path;)V lambda$saveStable$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ji$a net/minecraft/data/DataProvider$Factory
	create (Ljk;)Lji; create
jj net/minecraft/data/HashCache
	a LOGGER
	b HEADER_MARKER
	c rootDir
	d cacheDir
	e versionId
	f caches
	g cachesToWrite
	h cachePaths
	i initialCount
	j writes
	b (Ljava/lang/String;)Ljava/nio/file/Path; getProviderCachePath
	<init> (Ljava/nio/file/Path;Ljava/util/Collection;Lad;)V <init>
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b; readCache
	a (Ljava/lang/String;)Z shouldRunInThisVersion
	a (Ljava/lang/String;Ljj$d;)Ljava/util/concurrent/CompletableFuture; generateUpdate
	a (Ljj$e;)V applyUpdate
	a ()V purgeStaleAndWrite
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Set;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/nio/file/Path;)V lambda$purgeStaleAndWrite$2
	a (Ljava/util/Set;Ljava/lang/String;Ljj$b;)V lambda$purgeStaleAndWrite$1
	a (Ljj$a;Ljava/lang/Object;)Ljj$e; lambda$generateUpdate$0
	<clinit> ()V <clinit>
jj$a net/minecraft/data/HashCache$CacheUpdater
	c provider
	d oldCache
	e newCache
	f writes
	g closed
	b this$0
	<init> (Ljj;Ljava/lang/String;Ljava/lang/String;Ljj$b;)V <init>
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z shouldWrite
	writeIfNeeded (Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V writeIfNeeded
	a ()Ljj$e; close
jj$b net/minecraft/data/HashCache$ProviderCache
	a version
	b data
	<init> (Ljava/lang/String;Lcom/google/common/collect/ImmutableMap;)V <init>
	a (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; get
	a ()I count
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljj$b; load
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V save
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; version
	c ()Lcom/google/common/collect/ImmutableMap; data
	a (Lcom/google/common/collect/ImmutableMap$Builder;Ljava/nio/file/Path;Ljava/lang/String;)V lambda$load$0
jj$c net/minecraft/data/HashCache$ProviderCacheBuilder
	a version
	b data
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;)V <init>
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V put
	a ()Ljj$b; build
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; version
	c ()Ljava/util/concurrent/ConcurrentMap; data
jj$d net/minecraft/data/HashCache$UpdateFunction
	update (Ljg;)Ljava/util/concurrent/CompletableFuture; update
jj$e net/minecraft/data/HashCache$UpdateResult
	a providerId
	b cache
	c writes
	<init> (Ljava/lang/String;Ljj$b;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; providerId
	b ()Ljj$b; cache
	c ()I writes
net/minecraft/data/Main net/minecraft/data/Main
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lji$a; bindRegistries
	a (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLad;Z)Ljh; createStandardGenerator
	a (Ljk;)Lko; lambda$createStandardGenerator$5
	a (Ljava/util/Collection;Ljk;)Lmg; lambda$createStandardGenerator$4
	a (Ljava/util/concurrent/CompletableFuture;Lmy;Ljk;)Lna; lambda$createStandardGenerator$3
	b (Ljava/util/Collection;Ljk;)Lmh; lambda$createStandardGenerator$2
	a (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Ljk;)Lji; lambda$bindRegistries$1
	a (Ljava/lang/String;)Ljava/nio/file/Path; lambda$main$0
jk net/minecraft/data/PackOutput
	a outputFolder
	<init> (Ljava/nio/file/Path;)V <init>
	a ()Ljava/nio/file/Path; getOutputFolder
	a (Ljk$b;)Ljava/nio/file/Path; getOutputFolder
	a (Ljk$b;Ljava/lang/String;)Ljk$a; createPathProvider
jk$a net/minecraft/data/PackOutput$PathProvider
	a root
	b kind
	<init> (Ljk;Ljk$b;Ljava/lang/String;)V <init>
	a (Lacq;Ljava/lang/String;)Ljava/nio/file/Path; file
	a (Lacq;)Ljava/nio/file/Path; json
jk$b net/minecraft/data/PackOutput$Target
	a DATA_PACK
	b RESOURCE_PACK
	c REPORTS
	d directory
	e $VALUES
	values ()[Ljk$b; values
	valueOf (Ljava/lang/String;)Ljk$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()[Ljk$b; $values
	<clinit> ()V <clinit>
jl net/minecraft/data/advancements/AdvancementProvider
	d pathProvider
	e subProviders
	f registries
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage; lambda$run$2
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$1
	a (Ljava/util/Set;Ljava/util/List;Ljg;Lae;)V lambda$run$0
jm net/minecraft/data/advancements/AdvancementSubProvider
	a (Ljava/lang/String;)Lae; createPlaceholder
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
jn net/minecraft/data/advancements/package-info
jo net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	<init> ()V <init>
	a (Ljk;Ljava/util/concurrent/CompletableFuture;)Ljl; create
jp net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	a DISTANCE_FROM_BOTTOM_TO_TOP
	b Y_COORDINATE_AT_TOP
	c Y_COORDINATE_AT_BOTTOM
	d BEDROCK_THICKNESS
	e MOBS_TO_KILL
	<init> ()V <init>
	a (Lcj$d;Lbo;)Lcg$a; fireCountAndBystander
	a (Lbfn;Lcfu;)Ldh$a; lookAtThroughItem
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
	a (Lcpn;)Lam; placedBlockReadByComparator
	b (Lcpn;)Lam; placedComparatorReadingBlock
	a (Lae$a;)Lae$a; smithingWithStyle
	b (Lae$a;)Lae$a; craftingANewLook
	c (Lae$a;)Lae$a; respectingTheRemnantsCriterions
	a (Ljava/util/function/Consumer;Lae;Lcny$a;)V createAdventuringTime
	d (Lae$a;)Lae$a; addMobsToKill
	a (Lae$a;Ljava/util/List;)Lae$a; addBiomes
	a (I)[Ljava/lang/String; lambda$respectingTheRemnantsCriterions$5
	a (Ljava/util/Map;Lae$a;Lcfu;)V lambda$smithingWithStyle$4
	b (I)[Leck$a; lambda$placedComparatorReadingBlock$3
	a (Lcpn;Lha;)Leby$a; lambda$placedComparatorReadingBlock$2
	c (I)[Leck$a; lambda$placedBlockReadByComparator$1
	a (Lha;)Leck$a; lambda$placedBlockReadByComparator$0
	<clinit> ()V <clinit>
jq net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	a BREEDABLE_ANIMALS
	b INDIRECTLY_BREEDABLE_ANIMALS
	c FISH
	d FISH_BUCKETS
	e EDIBLE_ITEMS
	f WAX_SCRAPING_TOOLS
	<init> ()V <init>
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
	a (Lae;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lae; createBreedAllAnimalsAdvancement
	a (Lae$a;)Lae$a; addLeashedFrogVariants
	b (Lae$a;)Lae$a; addFood
	a (Lae$a;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lae$a; addBreedable
	c (Lae$a;)Lae$a; addFishBuckets
	d (Lae$a;)Lae$a; addFish
	e (Lae$a;)Lae$a; addCatVariants
	a (Lae$a;Ljava/util/Map$Entry;)V lambda$addCatVariants$3
	a (Lae$a;Lbfn;)V lambda$addBreedable$2
	b (Lae$a;Lbfn;)V lambda$addBreedable$1
	a (Lae$a;Lhe$c;)V lambda$addLeashedFrogVariants$0
	<clinit> ()V <clinit>
jr net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	a DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
	<init> ()V <init>
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
	<clinit> ()V <clinit>
js net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	<init> ()V <init>
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
jt net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	<init> ()V <init>
	a (Lhg$b;Ljava/util/function/Consumer;)V generate
ju net/minecraft/data/advancements/packs/package-info
jv net/minecraft/data/info/BiomeParametersDumpReport
	d LOGGER
	e topPath
	f registries
	g ENTRY_CODEC
	h CODEC
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Ljava/nio/file/Path;Ljg;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a (Lacq;)Ljava/nio/file/Path; createPath
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$dumpValue$3
	a (Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage; lambda$run$2
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$1
	a (Ljava/util/List;Ljg;Lcom/mojang/serialization/DynamicOps;Lcny$a;Lcnt$c;)V lambda$run$0
	<clinit> ()V <clinit>
jw net/minecraft/data/info/BlockListReport
	d output
	<init> (Ljk;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
jx net/minecraft/data/info/CommandsReport
	d output
	e registries
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljg;Ljava/nio/file/Path;Lhg$b;)Ljava/util/concurrent/CompletionStage; lambda$run$0
jy net/minecraft/data/info/RegistryDumpReport
	d output
	<init> (Ljk;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Lhr;)Lcom/google/gson/JsonElement; dumpRegistry
	a ()Ljava/lang/String; getName
	a (Lhr;Lcom/google/gson/JsonObject;Lhe$c;)V lambda$dumpRegistry$1
	a (Lcom/google/gson/JsonObject;Lhe$c;)V lambda$run$0
jz net/minecraft/data/info/package-info
ka net/minecraft/data/loot/BlockLootSubProvider
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	h HAS_SHEARS_OR_SILK_TOUCH
	i HAS_NO_SHEARS_OR_SILK_TOUCH
	d explosionResistant
	e enabledFeatures
	f map
	g NORMAL_LEAVES_SAPLING_CHANCES
	j NORMAL_LEAVES_STICK_CHANCES
	<init> (Ljava/util/Set;Lcaw;)V <init>
	<init> (Ljava/util/Set;Lcaw;Ljava/util/Map;)V <init>
	a (Lcml;Leaw;)Leaw; applyExplosionDecay
	a (Lcml;Lecd;)Lecd; applyExplosionCondition
	a (Lcml;)Ldzs$a; createSingleItemTable
	a (Lcpn;Leck$a;Leaf$a;)Ldzs$a; createSelfDropDispatchTable
	a (Lcpn;Leaf$a;)Ldzs$a; createSilkTouchDispatchTable
	b (Lcpn;Leaf$a;)Ldzs$a; createShearsDispatchTable
	c (Lcpn;Leaf$a;)Ldzs$a; createSilkTouchOrShearsDispatchTable
	a (Lcpn;Lcml;)Ldzs$a; createSingleItemTableWithSilkTouch
	a (Lcml;Ledf;)Ldzs$a; createSingleItemTable
	a (Lcpn;Lcml;Ledf;)Ldzs$a; createSingleItemTableWithSilkTouch
	c (Lcml;)Ldzs$a; createSilkTouchOnlyTable
	d (Lcml;)Ldzs$a; createPotFlowerItemTable
	a (Lcpn;)Ldzs$a; createSlabItemTable
	a (Lcpn;Ldde;Ljava/lang/Comparable;)Ldzs$a; createSinglePropConditionTable
	b (Lcpn;)Ldzs$a; createNameableBlockEntityTable
	c (Lcpn;)Ldzs$a; createShulkerBoxDrop
	d (Lcpn;)Ldzs$a; createCopperOreDrops
	e (Lcpn;)Ldzs$a; createLapisOreDrops
	f (Lcpn;)Ldzs$a; createRedstoneOreDrops
	g (Lcpn;)Ldzs$a; createBannerDrop
	h (Lcpn;)Ldzs$a; createBeeNestDrop
	i (Lcpn;)Ldzs$a; createBeeHiveDrop
	j (Lcpn;)Ldzs$a; createCaveVinesDrop
	a (Lcpn;Lcfu;)Ldzs$a; createOreDrop
	b (Lcpn;Lcml;)Ldzs$a; createMushroomBlockDrop
	k (Lcpn;)Ldzs$a; createGrassDrops
	b (Lcpn;Lcfu;)Ldzs$a; createStemDrops
	c (Lcpn;Lcfu;)Ldzs$a; createAttachedStemDrops
	b (Lcml;)Ldzs$a; createShearsOnlyDrop
	a (Lcpn;Leck$a;)Ldzs$a; createMultifaceBlockDrops
	a (Lcpn;Lcpn;[F)Ldzs$a; createLeavesDrops
	b (Lcpn;Lcpn;[F)Ldzs$a; createOakLeavesDrops
	l (Lcpn;)Ldzs$a; createMangroveLeavesDrops
	a (Lcpn;Lcfu;Lcfu;Leck$a;)Ldzs$a; createCropDrops
	m (Lcpn;)Ldzs$a; createDoublePlantShearsDrop
	a (Lcpn;Lcpn;)Ldzs$a; createDoublePlantWithSeedDrops
	n (Lcpn;)Ldzs$a; createCandleDrops
	o (Lcpn;)Ldzs$a; createPetalsDrops
	p (Lcpn;)Ldzs$a; createCandleCakeDrops
	a ()Ldzs$a; noDrop
	b ()V generate
	generate (Ljava/util/function/BiConsumer;)V generate
	b (Lcpn;Lcpn;)V addNetherVinesDropTable
	q (Lcpn;)Ldzs$a; createDoorTable
	r (Lcpn;)V dropPottedContents
	c (Lcpn;Lcpn;)V otherWhenSilkTouch
	c (Lcpn;Lcml;)V dropOther
	s (Lcpn;)V dropWhenSilkTouch
	t (Lcpn;)V dropSelf
	a (Lcpn;Ljava/util/function/Function;)V add
	a (Lcpn;Ldzs$a;)V add
	u (Lcpn;)Ldzs$a; lambda$dropPottedContents$4
	a (Lcpn;Ljava/lang/Integer;)Leaz$a; lambda$createPetalsDrops$3
	b (Lcpn;Ljava/lang/Integer;)Leaz$a; lambda$createCandleDrops$2
	a (Lcpn;Lha;)Leaz$a; lambda$createMultifaceBlockDrops$1
	c (Lcpn;Ljava/lang/Integer;)Leaz$a; lambda$createStemDrops$0
	<clinit> ()V <clinit>
kb net/minecraft/data/loot/EntityLootSubProvider
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c allowed
	d required
	e map
	<init> (Lcaw;)V <init>
	<init> (Lcaw;Lcaw;)V <init>
	a (Lcml;)Ldzs$a; createSheepTable
	a ()V generate
	generate (Ljava/util/function/BiConsumer;)V generate
	a (Lbfn;)Z canHaveLootTable
	b ()Leck$a; killedByFrog
	a (Lbrw;)Leck$a; killedByFrogVariant
	a (Lbfn;Ldzs$a;)V add
	a (Lbfn;Lacq;Ldzs$a;)V add
	b (Lbfn;)Ljava/util/Map; lambda$add$2
	a (Ljava/util/Set;Ljava/util/function/BiConsumer;Lhe$c;)V lambda$generate$1
	a (Ljava/util/Set;Lhe$c;Ljava/util/function/BiConsumer;Lacq;Ldzs$a;)V lambda$generate$0
	<clinit> ()V <clinit>
kc net/minecraft/data/loot/LootTableProvider
	d LOGGER
	e pathProvider
	f requiredTables
	g subProviders
	<init> (Ljk;Ljava/util/Set;Ljava/util/List;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$5
	a (Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture; lambda$run$4
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$run$3
	a (Ldzv;Lacq;Ldzs;)V lambda$run$2
	a (Ljava/util/Map;Ljava/util/Map;Lkc$a;)V lambda$run$1
	a (Ljava/util/Map;Ljava/util/Map;Lkc$a;Lacq;Ldzs$a;)V lambda$run$0
	<clinit> ()V <clinit>
kc$1 net/minecraft/data/loot/LootTableProvider$1
	a val$tables
	b this$0
	<init> (Lkc;Ljava/util/Map;)V <init>
	getElement (Ldzm;)Ljava/lang/Object; getElement
kc$a net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	a provider
	b paramSet
	<init> (Ljava/util/function/Supplier;Lebu;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/function/Supplier; provider
	b ()Lebu; paramSet
kd net/minecraft/data/loot/LootTableSubProvider
	generate (Ljava/util/function/BiConsumer;)V generate
ke net/minecraft/data/loot/package-info
kf net/minecraft/data/loot/packs/VanillaArchaeologyLoot
	<init> ()V <init>
	generate (Ljava/util/function/BiConsumer;)V generate
kg net/minecraft/data/loot/packs/VanillaBlockLoot
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i EXPLOSION_RESISTANT
	<init> ()V <init>
	b ()V generate
	u (Lcpn;)Ldzs$a; createDecoratedPotTable
	c ()Ldzs$a; createPitcherCropLoot
	a (Ljava/lang/Integer;)Leaf$a; lambda$createPitcherCropLoot$238
	v (Lcpn;)Ldzs$a; lambda$generate$237
	w (Lcpn;)Ldzs$a; lambda$generate$236
	x (Lcpn;)Ldzs$a; lambda$generate$235
	y (Lcpn;)Ldzs$a; lambda$generate$234
	z (Lcpn;)Ldzs$a; lambda$generate$233
	A (Lcpn;)Ldzs$a; lambda$generate$232
	a (Lcpn;Ljava/lang/Integer;)Leaf$a; lambda$generate$231
	b (Lcpn;Ljava/lang/Integer;)Leaf$a; lambda$generate$230
	B (Lcpn;)Ldzs$a; lambda$generate$229
	C (Lcpn;)Ldzs$a; lambda$generate$228
	a (Lkg;Lcpn;)Ldzs$a; lambda$generate$227
	b (Lkg;Lcpn;)Ldzs$a; lambda$generate$226
	D (Lcpn;)Ldzs$a; lambda$generate$225
	E (Lcpn;)Ldzs$a; lambda$generate$224
	c (Lkg;Lcpn;)Ldzs$a; lambda$generate$223
	d (Lkg;Lcpn;)Ldzs$a; lambda$generate$222
	F (Lcpn;)Ldzs$a; lambda$generate$221
	G (Lcpn;)Ldzs$a; lambda$generate$220
	H (Lcpn;)Ldzs$a; lambda$generate$219
	I (Lcpn;)Ldzs$a; lambda$generate$218
	J (Lcpn;)Ldzs$a; lambda$generate$217
	K (Lcpn;)Ldzs$a; lambda$generate$216
	L (Lcpn;)Ldzs$a; lambda$generate$215
	e (Lkg;Lcpn;)Ldzs$a; lambda$generate$214
	c (Lcml;)Ldzs$a; lambda$generate$213
	d (Lcml;)Ldzs$a; lambda$generate$212
	M (Lcpn;)Ldzs$a; lambda$generate$211
	e (Lcml;)Ldzs$a; lambda$generate$210
	f (Lcml;)Ldzs$a; lambda$generate$209
	g (Lcml;)Ldzs$a; lambda$generate$208
	N (Lcpn;)Ldzs$a; lambda$generate$207
	O (Lcpn;)Ldzs$a; lambda$generate$206
	f (Lkg;Lcpn;)Ldzs$a; lambda$generate$205
	g (Lkg;Lcpn;)Ldzs$a; lambda$generate$204
	P (Lcpn;)Ldzs$a; lambda$generate$203
	Q (Lcpn;)Ldzs$a; lambda$generate$202
	R (Lcpn;)Ldzs$a; lambda$generate$201
	S (Lcpn;)Ldzs$a; lambda$generate$200
	T (Lcpn;)Ldzs$a; lambda$generate$199
	h (Lkg;Lcpn;)Ldzs$a; lambda$generate$198
	i (Lkg;Lcpn;)Ldzs$a; lambda$generate$197
	U (Lcpn;)Ldzs$a; lambda$generate$196
	V (Lcpn;)Ldzs$a; lambda$generate$195
	W (Lcpn;)Ldzs$a; lambda$generate$194
	X (Lcpn;)Ldzs$a; lambda$generate$193
	Y (Lcpn;)Ldzs$a; lambda$generate$192
	Z (Lcpn;)Ldzs$a; lambda$generate$191
	aa (Lcpn;)Ldzs$a; lambda$generate$190
	ab (Lcpn;)Ldzs$a; lambda$generate$189
	ac (Lcpn;)Ldzs$a; lambda$generate$188
	ad (Lcpn;)Ldzs$a; lambda$generate$187
	ae (Lcpn;)Ldzs$a; lambda$generate$186
	af (Lcpn;)Ldzs$a; lambda$generate$185
	ag (Lcpn;)Ldzs$a; lambda$generate$184
	ah (Lcpn;)Ldzs$a; lambda$generate$183
	ai (Lcpn;)Ldzs$a; lambda$generate$182
	aj (Lcpn;)Ldzs$a; lambda$generate$181
	ak (Lcpn;)Ldzs$a; lambda$generate$180
	al (Lcpn;)Ldzs$a; lambda$generate$179
	am (Lcpn;)Ldzs$a; lambda$generate$178
	an (Lcpn;)Ldzs$a; lambda$generate$177
	ao (Lcpn;)Ldzs$a; lambda$generate$176
	ap (Lcpn;)Ldzs$a; lambda$generate$175
	aq (Lcpn;)Ldzs$a; lambda$generate$174
	j (Lkg;Lcpn;)Ldzs$a; lambda$generate$173
	k (Lkg;Lcpn;)Ldzs$a; lambda$generate$172
	l (Lkg;Lcpn;)Ldzs$a; lambda$generate$171
	m (Lkg;Lcpn;)Ldzs$a; lambda$generate$170
	n (Lkg;Lcpn;)Ldzs$a; lambda$generate$169
	o (Lkg;Lcpn;)Ldzs$a; lambda$generate$168
	p (Lkg;Lcpn;)Ldzs$a; lambda$generate$167
	q (Lkg;Lcpn;)Ldzs$a; lambda$generate$166
	r (Lkg;Lcpn;)Ldzs$a; lambda$generate$165
	s (Lkg;Lcpn;)Ldzs$a; lambda$generate$164
	t (Lkg;Lcpn;)Ldzs$a; lambda$generate$163
	u (Lkg;Lcpn;)Ldzs$a; lambda$generate$162
	v (Lkg;Lcpn;)Ldzs$a; lambda$generate$161
	w (Lkg;Lcpn;)Ldzs$a; lambda$generate$160
	x (Lkg;Lcpn;)Ldzs$a; lambda$generate$159
	y (Lkg;Lcpn;)Ldzs$a; lambda$generate$158
	z (Lkg;Lcpn;)Ldzs$a; lambda$generate$157
	A (Lkg;Lcpn;)Ldzs$a; lambda$generate$156
	B (Lkg;Lcpn;)Ldzs$a; lambda$generate$155
	C (Lkg;Lcpn;)Ldzs$a; lambda$generate$154
	D (Lkg;Lcpn;)Ldzs$a; lambda$generate$153
	E (Lkg;Lcpn;)Ldzs$a; lambda$generate$152
	F (Lkg;Lcpn;)Ldzs$a; lambda$generate$151
	G (Lkg;Lcpn;)Ldzs$a; lambda$generate$150
	H (Lkg;Lcpn;)Ldzs$a; lambda$generate$149
	I (Lkg;Lcpn;)Ldzs$a; lambda$generate$148
	J (Lkg;Lcpn;)Ldzs$a; lambda$generate$147
	K (Lkg;Lcpn;)Ldzs$a; lambda$generate$146
	L (Lkg;Lcpn;)Ldzs$a; lambda$generate$145
	M (Lkg;Lcpn;)Ldzs$a; lambda$generate$144
	N (Lkg;Lcpn;)Ldzs$a; lambda$generate$143
	O (Lkg;Lcpn;)Ldzs$a; lambda$generate$142
	P (Lkg;Lcpn;)Ldzs$a; lambda$generate$141
	Q (Lkg;Lcpn;)Ldzs$a; lambda$generate$140
	R (Lkg;Lcpn;)Ldzs$a; lambda$generate$139
	S (Lkg;Lcpn;)Ldzs$a; lambda$generate$138
	T (Lkg;Lcpn;)Ldzs$a; lambda$generate$137
	U (Lkg;Lcpn;)Ldzs$a; lambda$generate$136
	V (Lkg;Lcpn;)Ldzs$a; lambda$generate$135
	W (Lkg;Lcpn;)Ldzs$a; lambda$generate$134
	X (Lkg;Lcpn;)Ldzs$a; lambda$generate$133
	Y (Lkg;Lcpn;)Ldzs$a; lambda$generate$132
	Z (Lkg;Lcpn;)Ldzs$a; lambda$generate$131
	aa (Lkg;Lcpn;)Ldzs$a; lambda$generate$130
	ab (Lkg;Lcpn;)Ldzs$a; lambda$generate$129
	ac (Lkg;Lcpn;)Ldzs$a; lambda$generate$128
	ad (Lkg;Lcpn;)Ldzs$a; lambda$generate$127
	ae (Lkg;Lcpn;)Ldzs$a; lambda$generate$126
	af (Lkg;Lcpn;)Ldzs$a; lambda$generate$125
	ag (Lkg;Lcpn;)Ldzs$a; lambda$generate$124
	ah (Lkg;Lcpn;)Ldzs$a; lambda$generate$123
	ai (Lkg;Lcpn;)Ldzs$a; lambda$generate$122
	aj (Lkg;Lcpn;)Ldzs$a; lambda$generate$121
	ak (Lkg;Lcpn;)Ldzs$a; lambda$generate$120
	al (Lkg;Lcpn;)Ldzs$a; lambda$generate$119
	am (Lkg;Lcpn;)Ldzs$a; lambda$generate$118
	an (Lkg;Lcpn;)Ldzs$a; lambda$generate$117
	ao (Lkg;Lcpn;)Ldzs$a; lambda$generate$116
	ap (Lkg;Lcpn;)Ldzs$a; lambda$generate$115
	aq (Lkg;Lcpn;)Ldzs$a; lambda$generate$114
	ar (Lkg;Lcpn;)Ldzs$a; lambda$generate$113
	as (Lkg;Lcpn;)Ldzs$a; lambda$generate$112
	ar (Lcpn;)Ldzs$a; lambda$generate$111
	as (Lcpn;)Ldzs$a; lambda$generate$110
	at (Lcpn;)Ldzs$a; lambda$generate$109
	au (Lcpn;)Ldzs$a; lambda$generate$108
	c (Lcpn;Ljava/lang/Integer;)Leaz$a; lambda$generate$107
	av (Lcpn;)Ldzs$a; lambda$generate$106
	aw (Lcpn;)Ldzs$a; lambda$generate$105
	ax (Lcpn;)Ldzs$a; lambda$generate$104
	ay (Lcpn;)Ldzs$a; lambda$generate$103
	az (Lcpn;)Ldzs$a; lambda$generate$102
	aA (Lcpn;)Ldzs$a; lambda$generate$101
	aB (Lcpn;)Ldzs$a; lambda$generate$100
	aC (Lcpn;)Ldzs$a; lambda$generate$99
	aD (Lcpn;)Ldzs$a; lambda$generate$98
	aE (Lcpn;)Ldzs$a; lambda$generate$97
	aF (Lcpn;)Ldzs$a; lambda$generate$96
	aG (Lcpn;)Ldzs$a; lambda$generate$95
	aH (Lcpn;)Ldzs$a; lambda$generate$94
	aI (Lcpn;)Ldzs$a; lambda$generate$93
	aJ (Lcpn;)Ldzs$a; lambda$generate$92
	aK (Lcpn;)Ldzs$a; lambda$generate$91
	aL (Lcpn;)Ldzs$a; lambda$generate$90
	aM (Lcpn;)Ldzs$a; lambda$generate$89
	aN (Lcpn;)Ldzs$a; lambda$generate$88
	aO (Lcpn;)Ldzs$a; lambda$generate$87
	aP (Lcpn;)Ldzs$a; lambda$generate$86
	at (Lkg;Lcpn;)Ldzs$a; lambda$generate$85
	au (Lkg;Lcpn;)Ldzs$a; lambda$generate$84
	av (Lkg;Lcpn;)Ldzs$a; lambda$generate$83
	aw (Lkg;Lcpn;)Ldzs$a; lambda$generate$82
	ax (Lkg;Lcpn;)Ldzs$a; lambda$generate$81
	ay (Lkg;Lcpn;)Ldzs$a; lambda$generate$80
	az (Lkg;Lcpn;)Ldzs$a; lambda$generate$79
	aA (Lkg;Lcpn;)Ldzs$a; lambda$generate$78
	aB (Lkg;Lcpn;)Ldzs$a; lambda$generate$77
	aC (Lkg;Lcpn;)Ldzs$a; lambda$generate$76
	aD (Lkg;Lcpn;)Ldzs$a; lambda$generate$75
	aE (Lkg;Lcpn;)Ldzs$a; lambda$generate$74
	aF (Lkg;Lcpn;)Ldzs$a; lambda$generate$73
	aG (Lkg;Lcpn;)Ldzs$a; lambda$generate$72
	aH (Lkg;Lcpn;)Ldzs$a; lambda$generate$71
	aI (Lkg;Lcpn;)Ldzs$a; lambda$generate$70
	aJ (Lkg;Lcpn;)Ldzs$a; lambda$generate$69
	aK (Lkg;Lcpn;)Ldzs$a; lambda$generate$68
	aL (Lkg;Lcpn;)Ldzs$a; lambda$generate$67
	aM (Lkg;Lcpn;)Ldzs$a; lambda$generate$66
	aN (Lkg;Lcpn;)Ldzs$a; lambda$generate$65
	aO (Lkg;Lcpn;)Ldzs$a; lambda$generate$64
	aP (Lkg;Lcpn;)Ldzs$a; lambda$generate$63
	aQ (Lkg;Lcpn;)Ldzs$a; lambda$generate$62
	aR (Lkg;Lcpn;)Ldzs$a; lambda$generate$61
	aS (Lkg;Lcpn;)Ldzs$a; lambda$generate$60
	aT (Lkg;Lcpn;)Ldzs$a; lambda$generate$59
	aU (Lkg;Lcpn;)Ldzs$a; lambda$generate$58
	aV (Lkg;Lcpn;)Ldzs$a; lambda$generate$57
	aW (Lkg;Lcpn;)Ldzs$a; lambda$generate$56
	aX (Lkg;Lcpn;)Ldzs$a; lambda$generate$55
	aY (Lkg;Lcpn;)Ldzs$a; lambda$generate$54
	aZ (Lkg;Lcpn;)Ldzs$a; lambda$generate$53
	ba (Lkg;Lcpn;)Ldzs$a; lambda$generate$52
	bb (Lkg;Lcpn;)Ldzs$a; lambda$generate$51
	bc (Lkg;Lcpn;)Ldzs$a; lambda$generate$50
	bd (Lkg;Lcpn;)Ldzs$a; lambda$generate$49
	be (Lkg;Lcpn;)Ldzs$a; lambda$generate$48
	bf (Lkg;Lcpn;)Ldzs$a; lambda$generate$47
	bg (Lkg;Lcpn;)Ldzs$a; lambda$generate$46
	bh (Lkg;Lcpn;)Ldzs$a; lambda$generate$45
	bi (Lkg;Lcpn;)Ldzs$a; lambda$generate$44
	bj (Lkg;Lcpn;)Ldzs$a; lambda$generate$43
	bk (Lkg;Lcpn;)Ldzs$a; lambda$generate$42
	bl (Lkg;Lcpn;)Ldzs$a; lambda$generate$41
	bm (Lkg;Lcpn;)Ldzs$a; lambda$generate$40
	bn (Lkg;Lcpn;)Ldzs$a; lambda$generate$39
	bo (Lkg;Lcpn;)Ldzs$a; lambda$generate$38
	bp (Lkg;Lcpn;)Ldzs$a; lambda$generate$37
	bq (Lkg;Lcpn;)Ldzs$a; lambda$generate$36
	br (Lkg;Lcpn;)Ldzs$a; lambda$generate$35
	bs (Lkg;Lcpn;)Ldzs$a; lambda$generate$34
	bt (Lkg;Lcpn;)Ldzs$a; lambda$generate$33
	bu (Lkg;Lcpn;)Ldzs$a; lambda$generate$32
	bv (Lkg;Lcpn;)Ldzs$a; lambda$generate$31
	bw (Lkg;Lcpn;)Ldzs$a; lambda$generate$30
	bx (Lkg;Lcpn;)Ldzs$a; lambda$generate$29
	by (Lkg;Lcpn;)Ldzs$a; lambda$generate$28
	bz (Lkg;Lcpn;)Ldzs$a; lambda$generate$27
	bA (Lkg;Lcpn;)Ldzs$a; lambda$generate$26
	bB (Lkg;Lcpn;)Ldzs$a; lambda$generate$25
	bC (Lkg;Lcpn;)Ldzs$a; lambda$generate$24
	bD (Lkg;Lcpn;)Ldzs$a; lambda$generate$23
	bE (Lkg;Lcpn;)Ldzs$a; lambda$generate$22
	bF (Lkg;Lcpn;)Ldzs$a; lambda$generate$21
	bG (Lkg;Lcpn;)Ldzs$a; lambda$generate$20
	bH (Lkg;Lcpn;)Ldzs$a; lambda$generate$19
	bI (Lkg;Lcpn;)Ldzs$a; lambda$generate$18
	bJ (Lkg;Lcpn;)Ldzs$a; lambda$generate$17
	aQ (Lcpn;)Ldzs$a; lambda$generate$16
	aR (Lcpn;)Ldzs$a; lambda$generate$15
	aS (Lcpn;)Ldzs$a; lambda$generate$14
	aT (Lcpn;)Ldzs$a; lambda$generate$13
	aU (Lcpn;)Ldzs$a; lambda$generate$12
	aV (Lcpn;)Ldzs$a; lambda$generate$11
	aW (Lcpn;)Ldzs$a; lambda$generate$10
	aX (Lcpn;)Ldzs$a; lambda$generate$9
	aY (Lcpn;)Ldzs$a; lambda$generate$8
	aZ (Lcpn;)Ldzs$a; lambda$generate$7
	ba (Lcpn;)Ldzs$a; lambda$generate$6
	bb (Lcpn;)Ldzs$a; lambda$generate$5
	bc (Lcpn;)Ldzs$a; lambda$generate$4
	bd (Lcpn;)Ldzs$a; lambda$generate$3
	be (Lcpn;)Ldzs$a; lambda$generate$2
	bf (Lcpn;)Ldzs$a; lambda$generate$1
	bg (Lcpn;)Ldzs$a; lambda$generate$0
	<clinit> ()V <clinit>
kh net/minecraft/data/loot/packs/VanillaChestLoot
	<init> ()V <init>
	generate (Ljava/util/function/BiConsumer;)V generate
	a ()Ldzs$a; shipwreckSupplyLootTable
	b ()Ldzs$a; shipwreckMapLootTable
	c ()Ldzs$a; bastionHoglinStableLootTable
	d ()Ldzs$a; bastionBridgeLootTable
	e ()Ldzs$a; endCityTreasureLootTable
	f ()Ldzs$a; netherBridgeLootTable
	g ()Ldzs$a; bastionTreasureLootTable
	h ()Ldzs$a; bastionOtherLootTable
	i ()Ldzs$a; woodlandMansionLootTable
	j ()Ldzs$a; strongholdLibraryLootTable
	k ()Ldzs$a; strongholdCorridorLootTable
	l ()Ldzs$a; ancientCityLootTable
	m ()Ldzs$a; jungleTempleLootTable
	n ()Ldzs$a; shipwreckTreasureLootTable
	o ()Ldzs$a; pillagerOutpostLootTable
	p ()Ldzs$a; desertPyramidLootTable
ki net/minecraft/data/loot/packs/VanillaEntityLoot
	<init> ()V <init>
	a ()V generate
	c ()Ldzs$a; elderGuardianLootTable
kj net/minecraft/data/loot/packs/VanillaFishingLoot
	a IN_JUNGLE
	b IN_SPARSE_JUNGLE
	c IN_BAMBOO_JUNGLE
	<init> ()V <init>
	generate (Ljava/util/function/BiConsumer;)V generate
	a ()Ldzs$a; fishingFishLootTable
	<clinit> ()V <clinit>
kk net/minecraft/data/loot/packs/VanillaGiftLoot
	<init> ()V <init>
	generate (Ljava/util/function/BiConsumer;)V generate
kl net/minecraft/data/loot/packs/VanillaLootTableProvider
	<init> ()V <init>
	a (Ljk;)Lkc; create
km net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
	<init> ()V <init>
	generate (Ljava/util/function/BiConsumer;)V generate
kn net/minecraft/data/loot/packs/package-info
ko net/minecraft/data/metadata/PackMetadataGenerator
	d output
	e elements
	<init> (Ljk;)V <init>
	a (Lajy;Ljava/lang/Object;)Lko; add
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljk;Lsw;)Lko; forFeaturePack
	a (Ljk;Lsw;Lcaw;)Lko; forFeaturePack
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/util/function/Supplier;)V lambda$run$1
	b (Lajy;Ljava/lang/Object;)Lcom/google/gson/JsonElement; lambda$add$0
kp net/minecraft/data/metadata/package-info
kq net/minecraft/data/models/BlockModelGenerators
	b blockStateOutput
	c modelOutput
	d skippedAutoModelsOutput
	e nonOrientableTrapdoor
	f fullBlockModelCustomGenerators
	g texturedModels
	h SHAPE_CONSUMERS
	a MULTIFACE_GENERATOR
	i CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
	a (Lcpn;Lacq;Llh;Ljava/util/function/BiConsumer;)Lkt; createMirroredCubeGenerator
	b (Lcpn;Lacq;Llh;Ljava/util/function/BiConsumer;)Lkt; createNorthWestMirroredCubeGenerator
	c (Lcpn;Lacq;Llh;Ljava/util/function/BiConsumer;)Lkt; createMirroredColumnGenerator
	<init> (Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V <init>
	c (Lcpn;)V skipAutoItemBlock
	a (Lcpn;Lacq;)V delegateItemModel
	a (Lcfu;Lacq;)V delegateItemModel
	a (Lcfu;)V createSimpleFlatItemModel
	d (Lcpn;)V createSimpleFlatItemModel
	a (Lcpn;Ljava/lang/String;)V createSimpleFlatItemModel
	b ()Lkx; createHorizontalFacingDispatch
	c ()Lkx; createHorizontalFacingDispatchAlt
	d ()Lkx; createTorchHorizontalDispatch
	e ()Lkx; createFacingDispatch
	b (Lcpn;Lacq;)Lkw; createRotatedVariant
	a (Lacq;)[Lkz; createRotatedVariants
	a (Lcpn;Lacq;Lacq;)Lkw; createRotatedVariant
	a (Ldcs;Lacq;Lacq;)Lkx; createBooleanModelDispatch
	e (Lcpn;)V createRotatedMirroredVariantBlock
	f (Lcpn;)V createRotatedVariantBlock
	g (Lcpn;)V createBrushableBlock
	b (Lcpn;Lacq;Lacq;)Lkt; createButton
	a (Lkx$d;Ldcx;Lacq;Lacq;Lacq;Lacq;)Lkx$d; configureDoorHalf
	a (Lcpn;Lacq;Lacq;Lacq;Lacq;Lacq;Lacq;Lacq;Lacq;)Lkt; createDoor
	a (Lcpn;Lacq;Lacq;Lacq;Lacq;Lacq;)Lkt; createCustomFence
	c (Lcpn;Lacq;Lacq;)Lkt; createFence
	a (Lcpn;Lacq;Lacq;Lacq;)Lkt; createWall
	a (Lcpn;Lacq;Lacq;Lacq;Lacq;Z)Lkt; createFenceGate
	b (Lcpn;Lacq;Lacq;Lacq;)Lkt; createStairs
	c (Lcpn;Lacq;Lacq;Lacq;)Lkt; createOrientableTrapdoor
	d (Lcpn;Lacq;Lacq;Lacq;)Lkt; createTrapdoor
	c (Lcpn;Lacq;)Lkw; createSimpleBlock
	f ()Lkx; createRotatedPillar
	a (Lcpn;Llh;Ljava/util/function/BiConsumer;)Lkt; createPillarBlockUVLocked
	d (Lcpn;Lacq;)Lkt; createAxisAlignedPillarBlock
	e (Lcpn;Lacq;)V createAxisAlignedPillarBlockCustomModel
	a (Lcpn;Llj$a;)V createAxisAlignedPillarBlock
	c (Lcpn;Llj$a;)V createHorizontallyRotatedBlock
	d (Lcpn;Lacq;Lacq;)Lkt; createRotatedPillarWithHorizontalVariant
	a (Lcpn;Llj$a;Llj$a;)V createRotatedPillarWithHorizontalVariant
	a (Lcpn;Ljava/lang/String;Llf;Ljava/util/function/Function;)Lacq; createSuffixedVariant
	e (Lcpn;Lacq;Lacq;)Lkt; createPressurePlate
	e (Lcpn;Lacq;Lacq;Lacq;)Lkt; createSlab
	a (Lcpn;)V createTrivialCube
	b (Lcpn;Llj$a;)V createTrivialBlock
	a (Lcpn;Llh;Llf;)V createTrivialBlock
	h (Lcpn;)Lkq$b; family
	a (Lcpn;Lcpn;Lcpn;)V createHangingSign
	i (Lcpn;)V createDoor
	j (Lcpn;)V createOrientableTrapdoor
	k (Lcpn;)V createTrapdoor
	g ()V createBigDripLeafBlock
	l (Lcpn;)Lkq$f; woodProvider
	m (Lcpn;)V createNonTemplateModelBlock
	a (Lcpn;Lcpn;)V createNonTemplateModelBlock
	a (Lcpn;Lkq$e;)V createCrossBlockWithDefaultItem
	a (Lcpn;Lkq$e;Llh;)V createCrossBlockWithDefaultItem
	b (Lcpn;Lkq$e;)V createCrossBlock
	b (Lcpn;Lkq$e;Llh;)V createCrossBlock
	a (Lcpn;Lkq$e;Ldde;[I)V createCrossBlock
	a (Lcpn;Lcpn;Lkq$e;)V createPlant
	b (Lcpn;Lcpn;)V createCoralFans
	c (Lcpn;Lcpn;)V createStems
	h ()V createPitcherPlant
	i ()V createPitcherCrop
	a (Lcpn;Lcpn;Lcpn;Lcpn;Lcpn;Lcpn;Lcpn;Lcpn;)V createCoral
	c (Lcpn;Lkq$e;)V createDoublePlant
	j ()V createSunflower
	k ()V createTallSeagrass
	l ()V createSmallDripleaf
	f (Lcpn;Lacq;Lacq;)V createDoubleBlock
	n (Lcpn;)V createPassiveRail
	o (Lcpn;)V createActiveRail
	a (Lacq;Lcpn;)Lkq$a; blockEntityModels
	d (Lcpn;Lcpn;)Lkq$a; blockEntityModels
	a (Lcpn;Lcfu;)V createAirLikeBlock
	f (Lcpn;Lacq;)V createAirLikeBlock
	e (Lcpn;Lcpn;)V createFullAndCarpetBlocks
	p (Lcpn;)V createFlowerBed
	a (Llj$a;[Lcpn;)V createColoredBlockWithRandomRotations
	b (Llj$a;[Lcpn;)V createColoredBlockWithStateRotations
	f (Lcpn;Lcpn;)V createGlassBlocks
	q (Lcpn;)V createCommandBlock
	r (Lcpn;)V createAnvil
	a (I)Ljava/util/List; createBambooModels
	m ()V createBamboo
	n ()Lkx; createColumnWithFacing
	o ()V createBarrel
	a (Ldde;Ljava/lang/Comparable;Lacq;Lacq;)Lkx; createEmptyOrFullDispatch
	a (Lcpn;Ljava/util/function/Function;)V createBeeNest
	a (Lcpn;Ldde;[I)V createCropBlock
	p ()V createBell
	q ()V createGrindstone
	d (Lcpn;Llj$a;)V createFurnace
	a ([Lcpn;)V createCampfires
	s (Lcpn;)V createAzalea
	t (Lcpn;)V createPottedAzalea
	r ()V createBookshelf
	s ()V createRedstoneWire
	t ()V createComparator
	u ()V createSmoothStoneSlab
	v ()V createBrewingStand
	u (Lcpn;)V createMushroomBlock
	w ()V createCakeBlock
	x ()V createCartographyTable
	y ()V createSmithingTable
	a (Lcpn;Lcpn;Ljava/util/function/BiFunction;)V createCraftingTableLike
	b (Lcpn;)V createGenericCube
	z ()V createPumpkins
	a (Lcpn;Llh;)V createPumpkinVariant
	A ()V createCauldrons
	B ()V createChorusFlower
	v (Lcpn;)V createDispenserBlock
	C ()V createEndPortalFrame
	D ()V createChorusPlant
	E ()V createComposter
	w (Lcpn;)V createAmethystCluster
	F ()V createAmethystClusters
	G ()V createPointedDripstone
	a (Lha;Ldcy;)Lkz; createPointedDripstoneVariant
	x (Lcpn;)V createNyliumBlock
	H ()V createDaylightDetector
	y (Lcpn;)V createRotatableColumn
	I ()V createLightningRod
	J ()V createFarmland
	z (Lcpn;)Ljava/util/List; createFloorFireModels
	A (Lcpn;)Ljava/util/List; createSideFireModels
	B (Lcpn;)Ljava/util/List; createTopFireModels
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; wrapModels
	K ()V createFire
	L ()V createSoulFire
	C (Lcpn;)V createLantern
	M ()V createMuddyMangroveRoots
	N ()V createMangrovePropagule
	O ()V createFrostedIce
	P ()V createGrassBlocks
	a (Lcpn;Lacq;Lkz;)V createGrassLikeBlock
	Q ()V createCocoa
	R ()V createDirtPath
	g (Lcpn;Lcpn;)V createWeightedPressurePlate
	S ()V createHopper
	h (Lcpn;Lcpn;)V copyModel
	T ()V createIronBars
	D (Lcpn;)V createNonTemplateHorizontalBlock
	U ()V createLever
	V ()V createLilyPad
	W ()V createFrogspawnBlock
	X ()V createNetherPortalBlock
	Y ()V createNetherrack
	Z ()V createObserver
	aa ()V createPistons
	a (Lcpn;Lacq;Llh;)V createPistonVariant
	ab ()V createPistonHeads
	ac ()V createSculkSensor
	ad ()V createCalibratedSculkSensor
	ae ()V createSculkShrieker
	af ()V createScaffolding
	ag ()V createCaveVines
	ah ()V createRedstoneLamp
	i (Lcpn;Lcpn;)V createNormalTorch
	ai ()V createRedstoneTorch
	aj ()V createRepeater
	ak ()V createSeaPickle
	al ()V createSnowBlocks
	am ()V createStonecutter
	an ()V createStructureBlock
	ao ()V createSweetBerryBush
	ap ()V createTripwire
	aq ()V createTripwireHook
	a (ILjava/lang/String;Llh;)Lacq; createTurtleEggModel
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Lacq; createTurtleEggModel
	ar ()V createTurtleEgg
	as ()V createSnifferEgg
	E (Lcpn;)V createMultiface
	at ()V createSculkCatalyst
	au ()V createChiseledBookshelf
	a (Lkv;Lku$c;Lla$a;)V addSlotStateAndRotationVariants
	a (Lkv;Lku$c;Lla$a;Ldcs;Llf;Z)V addBookSlotModel
	av ()V createMagmaBlock
	F (Lcpn;)V createShulkerBox
	b (Lcpn;Lcpn;Lkq$e;)V createGrowingPlant
	j (Lcpn;Lcpn;)V createBedItem
	aw ()V createInfestedStone
	ax ()V createInfestedDeepslate
	k (Lcpn;Lcpn;)V createNetherRoots
	ay ()V createRespawnAnchor
	a (Lhc;Lkz;)Lkz; applyRotation
	az ()V createJigsaw
	aA ()V createPetrifiedOakSlab
	a ()V run
	aB ()V createLightBlock
	l (Lcpn;Lcpn;)V createCandleAndCandleCake
	a (Lche;)V lambda$run$57
	a (Ljf;)V lambda$run$56
	a (Lhc;)Lkz; lambda$createJigsaw$55
	a ([Lacq;Ljava/lang/Integer;)Lkz; lambda$createRespawnAnchor$54
	a (Llf;Ljava/lang/String;Llh;Lkq$d;)Lacq; lambda$addBookSlotModel$53
	a (Lkv;Lku$c;Lla$a;Ldcs;Llf;)V lambda$addSlotStateAndRotationVariants$52
	a (Lkv;Lacq;Lha;Lla$a;)V lambda$createChiseledBookshelf$51
	a (Lacq;Lacq;Ljava/lang/Boolean;)Lkz; lambda$createSculkCatalyst$50
	a (Lcpn;Lku$c;)V lambda$createMultiface$49
	a (Lcpn;Lku$c;Ldcs;)V lambda$createMultiface$48
	b (Lacq;)Lkz; lambda$static$47
	c (Lacq;)Lkz; lambda$static$46
	d (Lacq;)Lkz; lambda$static$45
	e (Lacq;)Lkz; lambda$static$44
	f (Lacq;)Lkz; lambda$static$43
	g (Lacq;)Lkz; lambda$static$42
	a (Ljava/util/function/Function;Ljava/lang/Integer;)Lkz; lambda$createSnifferEgg$41
	a (Ljava/lang/Integer;)Lacq; lambda$createSnifferEgg$40
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List; lambda$createTurtleEgg$39
	a (Ljava/lang/Boolean;Ljava/lang/Boolean;)Lkz; lambda$createTripwireHook$38
	b (Ljava/lang/Integer;)Lkz; lambda$createSweetBerryBush$37
	a (Lddl;)Lkz; lambda$createStructureBlock$36
	a (Lacq;Ljava/lang/Integer;)Lkz; lambda$createSnowBlocks$35
	a (Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lkz; lambda$createRepeater$34
	a (Lacq;Lacq;Lddi;)Lkz; lambda$createCalibratedSculkSensor$33
	b (Lacq;Lacq;Lddi;)Lkz; lambda$createSculkSensor$32
	a (Lacq;Llh;)V lambda$createGrassBlocks$31
	b (Lacq;Llh;)V lambda$createGrassBlocks$30
	a (Lkz;)Lkz; lambda$createSoulFire$29
	b (Lkz;)Lkz; lambda$createSoulFire$28
	c (Lkz;)Lkz; lambda$createSoulFire$27
	d (Lkz;)Lkz; lambda$createSoulFire$26
	e (Lkz;)Lkz; lambda$createSoulFire$25
	f (Lkz;)Lkz; lambda$createFire$24
	g (Lkz;)Lkz; lambda$createFire$23
	h (Lkz;)Lkz; lambda$createFire$22
	i (Lkz;)Lkz; lambda$createFire$21
	j (Lkz;)Lkz; lambda$createFire$20
	k (Lkz;)Lkz; lambda$createFire$19
	h (Lacq;)Lkz; lambda$wrapModels$18
	a (Llh;Lacq;)Llh; lambda$createChorusFlower$17
	c (Lacq;Llh;)V lambda$createFurnace$16
	a ([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcpn;Ljava/lang/Integer;)Lkz; lambda$createCropBlock$15
	a (Lcpn;II)Lacq; lambda$createCropBlock$14
	a (Ljava/lang/Comparable;Lkz;Lkz;Ljava/lang/Comparable;)Lkz; lambda$createEmptyOrFullDispatch$13
	d (Lacq;Llh;)V lambda$createBarrel$12
	a (Ljava/lang/String;I)Lkz; lambda$createBambooModels$11
	b (Llh;Lacq;)Llh; lambda$createCommandBlock$10
	a (Lacq;Lacq;Lacq;Lacq;Lacq;Lacq;Ljava/lang/Boolean;Lddf;)Lkz; lambda$createActiveRail$9
	a (Lcpn;Ljava/lang/Integer;Ldcx;)Lkz; lambda$createPitcherCrop$8
	a (Lcpn;Llh;Ljava/lang/Integer;)Lkz; lambda$createStems$7
	a ([ILcpn;Lkq$e;Ljava/lang/Integer;)Lkz; lambda$createCrossBlock$6
	a (Lcpn;Ljava/lang/Integer;)Lkz; lambda$createBrushableBlock$5
	a (Llh;)V lambda$new$4
	b (Llh;)V lambda$new$3
	c (Llh;)V lambda$new$2
	d (Llh;)V lambda$new$1
	e (Llh;)V lambda$new$0
	<clinit> ()V <clinit>
kq$1 net/minecraft/data/models/BlockModelGenerators$1
	a $SwitchMap$net$minecraft$core$FrontAndTop
	b $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	c $SwitchMap$net$minecraft$world$level$block$state$properties$DoubleBlockHalf
	<clinit> ()V <clinit>
kq$a net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	b baseModel
	a this$0
	<init> (Lkq;Lacq;Lcpn;)V <init>
	a ([Lcpn;)Lkq$a; create
	b ([Lcpn;)Lkq$a; createWithoutBlockItem
	a (Llf;[Lcpn;)Lkq$a; createWithCustomBlockItemModel
kq$b net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	b mapping
	c models
	d family
	e fullBlock
	a this$0
	<init> (Lkq;Llh;)V <init>
	a (Lcpn;Llf;)Lkq$b; fullBlock
	a ([Lcpn;)Lkq$b; fullBlockCopies
	a (Lcpn;)Lkq$b; button
	b (Lcpn;)Lkq$b; wall
	c (Lcpn;)Lkq$b; customFence
	d (Lcpn;)Lkq$b; fence
	e (Lcpn;)Lkq$b; customFenceGate
	f (Lcpn;)Lkq$b; fenceGate
	g (Lcpn;)Lkq$b; pressurePlate
	h (Lcpn;)Lkq$b; sign
	i (Lcpn;)Lkq$b; slab
	j (Lcpn;)Lkq$b; stairs
	k (Lcpn;)Lkq$b; fullBlockVariant
	l (Lcpn;)Lkq$b; door
	m (Lcpn;)V trapdoor
	a (Llf;Lcpn;)Lacq; getOrCreateModel
	a (Ljf;)Lkq$b; generateFor
	a (Ljf$b;Lcpn;)V lambda$generateFor$1
	b (Lcpn;Llf;)Lacq; lambda$getOrCreateModel$0
kq$c net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
	create (Lcpn;Lacq;Llh;Ljava/util/function/BiConsumer;)Lkt; create
kq$d net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey
	a template
	b modelSuffix
	<init> (Llf;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Llf; template
	b ()Ljava/lang/String; modelSuffix
kq$e net/minecraft/data/models/BlockModelGenerators$TintState
	a TINTED
	b NOT_TINTED
	c $VALUES
	values ()[Lkq$e; values
	valueOf (Ljava/lang/String;)Lkq$e; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Llf; getCross
	b ()Llf; getCrossPot
	c ()[Lkq$e; $values
	<clinit> ()V <clinit>
kq$f net/minecraft/data/models/BlockModelGenerators$WoodProvider
	b logMapping
	a this$0
	<init> (Lkq;Llh;)V <init>
	a (Lcpn;)Lkq$f; wood
	b (Lcpn;)Lkq$f; log
	c (Lcpn;)Lkq$f; logWithHorizontal
	d (Lcpn;)Lkq$f; logUVLocked
kr net/minecraft/data/models/ItemModelGenerators
	a TRIM_TYPE_PREDICATE_ID
	b GENERATED_TRIM_MODELS
	c output
	<init> (Ljava/util/function/BiConsumer;)V <init>
	a (Lcfu;Llf;)V generateFlatItem
	a (Lcfu;Ljava/lang/String;Llf;)V generateFlatItem
	a (Lcfu;Lcfu;Llf;)V generateFlatItem
	a (Lcfu;)V generateCompassItem
	b (Lcfu;)V generateClockItem
	a (Lacq;Lacq;Lacq;)V generateLayeredItem
	a (Lacq;Lacq;Lacq;Lacq;)V generateLayeredItem
	a (Lacq;Ljava/lang/String;)Lacq; getItemModelForTrimMaterial
	a (Lacq;Ljava/util/Map;Lcdk;)Lcom/google/gson/JsonObject; generateBaseArmorTrimTemplate
	a (Lcdj;)V generateArmorTrims
	a ()V run
	a (Lcdj;Lacq;Ljava/util/Map;)Lcom/google/gson/JsonObject; lambda$generateArmorTrims$1
	b (Lcdj;Lacq;Ljava/util/Map;)Lcom/google/gson/JsonObject; lambda$generateArmorTrims$0
	<clinit> ()V <clinit>
kr$a net/minecraft/data/models/ItemModelGenerators$TrimModelData
	a name
	b itemModelIndex
	c overrideArmorMaterials
	<init> (Ljava/lang/String;FLjava/util/Map;)V <init>
	a (Lcdk;)Ljava/lang/String; name
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	b ()F itemModelIndex
	c ()Ljava/util/Map; overrideArmorMaterials
ks net/minecraft/data/models/ModelProvider
	d blockStatePathProvider
	e modelPathProvider
	<init> (Ljk;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Ljg;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; saveCollection
	a ()Ljava/lang/String; getName
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$saveCollection$6
	a (Ljava/util/function/Function;Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture; lambda$saveCollection$5
	a (Lcpn;)Ljava/nio/file/Path; lambda$run$4
	a (Ljava/util/Set;Ljava/util/Map;Lcpn;)V lambda$run$3
	a (Ljava/util/Map;Lcpn;)Z lambda$run$2
	a (Ljava/util/Map;Lacq;Ljava/util/function/Supplier;)V lambda$run$1
	a (Ljava/util/Map;Lkt;)V lambda$run$0
kt net/minecraft/data/models/blockstates/BlockStateGenerator
	a ()Lcpn; getBlock
ku net/minecraft/data/models/blockstates/Condition
	a (Ldcc;)V validate
	a ()Lku$c; condition
	a ([Lku;)Lku; and
	b ([Lku;)Lku; or
ku$a net/minecraft/data/models/blockstates/Condition$CompositeCondition
	a operation
	b subconditions
	<init> (Lku$b;Ljava/util/List;)V <init>
	a (Ldcc;)V validate
	b ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
	a (Ldcc;Lku;)V lambda$validate$0
ku$b net/minecraft/data/models/blockstates/Condition$Operation
	a AND
	b OR
	c id
	d $VALUES
	values ()[Lku$b; values
	valueOf (Ljava/lang/String;)Lku$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()[Lku$b; $values
	<clinit> ()V <clinit>
ku$c net/minecraft/data/models/blockstates/Condition$TerminalCondition
	a terms
	<init> ()V <init>
	a (Ldde;Ljava/util/stream/Stream;)Ljava/lang/String; joinValues
	c (Ldde;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
	a (Ldde;Ljava/lang/String;)V putValue
	a (Ldde;Ljava/lang/Comparable;)Lku$c; term
	a (Ldde;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lku$c; term
	b (Ldde;Ljava/lang/Comparable;)Lku$c; negatedTerm
	b (Ldde;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lku$c; negatedTerm
	b ()Lcom/google/gson/JsonElement; get
	a (Ldcc;)V validate
	get ()Ljava/lang/Object; get
	a (Ldcc;Ldde;)Z lambda$validate$1
	a (Lcom/google/gson/JsonObject;Ldde;Ljava/lang/String;)V lambda$get$0
kv net/minecraft/data/models/blockstates/MultiPartGenerator
	a block
	b parts
	<init> (Lcpn;)V <init>
	a ()Lcpn; getBlock
	a (Lcpn;)Lkv; multiPart
	a (Ljava/util/List;)Lkv; with
	a (Lkz;)Lkv; with
	a (Lku;Ljava/util/List;)Lkv; with
	a (Lku;[Lkz;)Lkv; with
	a (Lku;Lkz;)Lkv; with
	b ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
	a (Ldcc;Lkv$b;)V lambda$get$0
kv$a net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	a condition
	<init> (Lku;Ljava/util/List;)V <init>
	a (Ldcc;)V validate
	a (Lcom/google/gson/JsonObject;)V decorate
kv$b net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	a variants
	<init> (Ljava/util/List;)V <init>
	a (Ldcc;)V validate
	a (Lcom/google/gson/JsonObject;)V decorate
	a ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
kw net/minecraft/data/models/blockstates/MultiVariantGenerator
	a block
	b baseVariants
	c seenProperties
	d declaredPropertySets
	<init> (Lcpn;Ljava/util/List;)V <init>
	a (Lkx;)Lkw; with
	b ()Lcom/google/gson/JsonElement; get
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; mergeVariants
	a ()Lcpn; getBlock
	a (Lcpn;)Lkw; multiVariant
	a (Lcpn;Lkz;)Lkw; multiVariant
	a (Lcpn;[Lkz;)Lkw; multiVariant
	get ()Ljava/lang/Object; get
	a (Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Lkz;)V lambda$mergeVariants$6
	a (Lcom/google/common/collect/ImmutableList$Builder;Lkz;Lkz;)V lambda$mergeVariants$5
	a (Ljava/util/Map;Lcom/google/gson/JsonObject;)V lambda$get$4
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$get$3
	b (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$get$2
	a (Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$get$1
	a (Ldde;)V lambda$with$0
kx net/minecraft/data/models/blockstates/PropertyDispatch
	a values
	<init> ()V <init>
	a (Lky;Ljava/util/List;)V putValue
	a ()Ljava/util/Map; getEntries
	c ()V verifyComplete
	b ()Ljava/util/List; getDefinedProperties
	a (Ldde;)Lkx$a; property
	a (Ldde;Ldde;)Lkx$b; properties
	a (Ldde;Ldde;Ldde;)Lkx$c; properties
	a (Ldde;Ldde;Ldde;Ldde;)Lkx$d; properties
	a (Ldde;Ldde;Ldde;Ldde;Ldde;)Lkx$e; properties
	a (Lky;)Z lambda$verifyComplete$1
	a (Ldde;Lky;)Ljava/util/stream/Stream; lambda$verifyComplete$0
kx$a net/minecraft/data/models/blockstates/PropertyDispatch$C1
	a property1
	<init> (Ldde;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/util/List;)Lkx$a; select
	a (Ljava/lang/Comparable;Lkz;)Lkx$a; select
	a (Ljava/util/function/Function;)Lkx; generate
	b (Ljava/util/function/Function;)Lkx; generateList
	a (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generateList$1
	b (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generate$0
kx$b net/minecraft/data/models/blockstates/PropertyDispatch$C2
	a property1
	b property2
	<init> (Ldde;Ldde;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkx$b; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz;)Lkx$b; select
	a (Ljava/util/function/BiFunction;)Lkx; generate
	b (Ljava/util/function/BiFunction;)Lkx; generateList
	a (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generateList$3
	a (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generateList$2
	b (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generate$1
	b (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generate$0
kx$c net/minecraft/data/models/blockstates/PropertyDispatch$C3
	a property1
	b property2
	c property3
	<init> (Ldde;Ldde;Ldde;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkx$c; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz;)Lkx$c; select
	a (Lkx$h;)Lkx; generate
	b (Lkx$h;)Lkx; generateList
	a (Lkx$h;Ljava/lang/Comparable;)V lambda$generateList$5
	a (Ljava/lang/Comparable;Lkx$h;Ljava/lang/Comparable;)V lambda$generateList$4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$h;Ljava/lang/Comparable;)V lambda$generateList$3
	b (Lkx$h;Ljava/lang/Comparable;)V lambda$generate$2
	b (Ljava/lang/Comparable;Lkx$h;Ljava/lang/Comparable;)V lambda$generate$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$h;Ljava/lang/Comparable;)V lambda$generate$0
kx$d net/minecraft/data/models/blockstates/PropertyDispatch$C4
	a property1
	b property2
	c property3
	d property4
	<init> (Ldde;Ldde;Ldde;Ldde;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkx$d; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz;)Lkx$d; select
	a (Lkx$g;)Lkx; generate
	b (Lkx$g;)Lkx; generateList
	a (Lkx$g;Ljava/lang/Comparable;)V lambda$generateList$7
	a (Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generateList$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generateList$5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generateList$4
	b (Lkx$g;Ljava/lang/Comparable;)V lambda$generate$3
	b (Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generate$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generate$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$g;Ljava/lang/Comparable;)V lambda$generate$0
kx$e net/minecraft/data/models/blockstates/PropertyDispatch$C5
	a property1
	b property2
	c property3
	d property4
	e property5
	<init> (Ldde;Ldde;Ldde;Ldde;Ldde;)V <init>
	b ()Ljava/util/List; getDefinedProperties
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lkx$e; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkz;)Lkx$e; select
	a (Lkx$f;)Lkx; generate
	b (Lkx$f;)Lkx; generateList
	a (Lkx$f;Ljava/lang/Comparable;)V lambda$generateList$9
	a (Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generateList$8
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generateList$7
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generateList$6
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generateList$5
	b (Lkx$f;Ljava/lang/Comparable;)V lambda$generate$4
	b (Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generate$3
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generate$2
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generate$1
	b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lkx$f;Ljava/lang/Comparable;)V lambda$generate$0
kx$f net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
kx$g net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
kx$h net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
ky net/minecraft/data/models/blockstates/Selector
	a EMPTY
	b COMPARE_BY_NAME
	c values
	a (Ldde$a;)Lky; extend
	a (Lky;)Lky; extend
	<init> (Ljava/util/List;)V <init>
	a ()Lky; empty
	a ([Ldde$a;)Lky; of
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()Ljava/lang/String; getKey
	toString ()Ljava/lang/String; toString
	b (Ldde$a;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
kz net/minecraft/data/models/blockstates/Variant
	a values
	<init> ()V <init>
	a (Llb;Ljava/lang/Object;)Lkz; with
	a ()Lkz; variant
	a (Lkz;Lkz;)Lkz; merge
	b ()Lcom/google/gson/JsonElement; get
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; convertList
	get ()Ljava/lang/Object; get
	a (Lcom/google/gson/JsonArray;Lkz;)V lambda$convertList$1
	a (Lcom/google/gson/JsonObject;Llb$a;)V lambda$get$0
la net/minecraft/data/models/blockstates/VariantProperties
	a X_ROT
	b Y_ROT
	c MODEL
	d UV_LOCK
	e WEIGHT
	<init> ()V <init>
	a (Lacq;)Lcom/google/gson/JsonElement; lambda$static$2
	a (Lla$a;)Lcom/google/gson/JsonElement; lambda$static$1
	b (Lla$a;)Lcom/google/gson/JsonElement; lambda$static$0
	<clinit> ()V <clinit>
la$a net/minecraft/data/models/blockstates/VariantProperties$Rotation
	a R0
	b R90
	c R180
	d R270
	e value
	f $VALUES
	values ()[Lla$a; values
	valueOf (Ljava/lang/String;)Lla$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()[Lla$a; $values
	<clinit> ()V <clinit>
lb net/minecraft/data/models/blockstates/VariantProperty
	a key
	b serializer
	<init> (Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)Llb$a; withValue
	toString ()Ljava/lang/String; toString
lb$a net/minecraft/data/models/blockstates/VariantProperty$Value
	b value
	a this$0
	<init> (Llb;Ljava/lang/Object;)V <init>
	a ()Llb; getKey
	a (Lcom/google/gson/JsonObject;)V addToVariant
	toString ()Ljava/lang/String; toString
lc net/minecraft/data/models/blockstates/package-info
ld net/minecraft/data/models/model/DelegatedModel
	a parent
	<init> (Lacq;)V <init>
	a ()Lcom/google/gson/JsonElement; get
	get ()Ljava/lang/Object; get
le net/minecraft/data/models/model/ModelLocationUtils
	<init> ()V <init>
	a (Ljava/lang/String;)Lacq; decorateBlockModelLocation
	b (Ljava/lang/String;)Lacq; decorateItemModelLocation
	a (Lcpn;Ljava/lang/String;)Lacq; getModelLocation
	a (Lcpn;)Lacq; getModelLocation
	a (Lcfu;)Lacq; getModelLocation
	a (Lcfu;Ljava/lang/String;)Lacq; getModelLocation
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$getModelLocation$1
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$getModelLocation$0
lf net/minecraft/data/models/model/ModelTemplate
	a model
	b requiredSlots
	c suffix
	<init> (Ljava/util/Optional;Ljava/util/Optional;[Lli;)V <init>
	a (Lcpn;Llh;Ljava/util/function/BiConsumer;)Lacq; create
	a (Lcpn;Ljava/lang/String;Llh;Ljava/util/function/BiConsumer;)Lacq; createWithSuffix
	b (Lcpn;Ljava/lang/String;Llh;Ljava/util/function/BiConsumer;)Lacq; createWithOverride
	a (Lacq;Llh;Ljava/util/function/BiConsumer;)Lacq; create
	a (Lacq;Llh;Ljava/util/function/BiConsumer;Llf$a;)Lacq; create
	a (Lacq;Ljava/util/Map;)Lcom/google/gson/JsonObject; createBaseTemplate
	a (Llh;)Ljava/util/Map; createMap
	a (Lcom/google/gson/JsonObject;Lli;Lacq;)V lambda$createBaseTemplate$2
	a (Lcom/google/gson/JsonObject;Lacq;)V lambda$createBaseTemplate$1
	a (Llf$a;Lacq;Ljava/util/Map;)Lcom/google/gson/JsonElement; lambda$create$0
lf$a net/minecraft/data/models/model/ModelTemplate$JsonFactory
	create (Lacq;Ljava/util/Map;)Lcom/google/gson/JsonObject; create
lg net/minecraft/data/models/model/ModelTemplates
	a CUBE
	b CUBE_DIRECTIONAL
	c CUBE_ALL
	d CUBE_MIRRORED_ALL
	e CUBE_NORTH_WEST_MIRRORED_ALL
	f CUBE_COLUMN_UV_LOCKED_X
	g CUBE_COLUMN_UV_LOCKED_Y
	h CUBE_COLUMN_UV_LOCKED_Z
	i CUBE_COLUMN
	j CUBE_COLUMN_HORIZONTAL
	k CUBE_COLUMN_MIRRORED
	l CUBE_TOP
	m CUBE_BOTTOM_TOP
	n CUBE_ORIENTABLE
	o CUBE_ORIENTABLE_TOP_BOTTOM
	p CUBE_ORIENTABLE_VERTICAL
	q BUTTON
	r BUTTON_PRESSED
	s BUTTON_INVENTORY
	t DOOR_BOTTOM_LEFT
	u DOOR_BOTTOM_LEFT_OPEN
	v DOOR_BOTTOM_RIGHT
	w DOOR_BOTTOM_RIGHT_OPEN
	x DOOR_TOP_LEFT
	y DOOR_TOP_LEFT_OPEN
	z DOOR_TOP_RIGHT
	A DOOR_TOP_RIGHT_OPEN
	B CUSTOM_FENCE_POST
	C CUSTOM_FENCE_SIDE_NORTH
	D CUSTOM_FENCE_SIDE_EAST
	E CUSTOM_FENCE_SIDE_SOUTH
	F CUSTOM_FENCE_SIDE_WEST
	G CUSTOM_FENCE_INVENTORY
	H FENCE_POST
	I FENCE_SIDE
	J FENCE_INVENTORY
	K WALL_POST
	L WALL_LOW_SIDE
	M WALL_TALL_SIDE
	N WALL_INVENTORY
	O CUSTOM_FENCE_GATE_CLOSED
	P CUSTOM_FENCE_GATE_OPEN
	Q CUSTOM_FENCE_GATE_WALL_CLOSED
	R CUSTOM_FENCE_GATE_WALL_OPEN
	S FENCE_GATE_CLOSED
	T FENCE_GATE_OPEN
	U FENCE_GATE_WALL_CLOSED
	V FENCE_GATE_WALL_OPEN
	W PRESSURE_PLATE_UP
	X PRESSURE_PLATE_DOWN
	Y PARTICLE_ONLY
	Z SLAB_BOTTOM
	aa SLAB_TOP
	ab LEAVES
	ac STAIRS_STRAIGHT
	ad STAIRS_INNER
	ae STAIRS_OUTER
	af TRAPDOOR_TOP
	ag TRAPDOOR_BOTTOM
	ah TRAPDOOR_OPEN
	ai ORIENTABLE_TRAPDOOR_TOP
	aj ORIENTABLE_TRAPDOOR_BOTTOM
	ak ORIENTABLE_TRAPDOOR_OPEN
	al POINTED_DRIPSTONE
	am CROSS
	an TINTED_CROSS
	ao FLOWER_POT_CROSS
	ap TINTED_FLOWER_POT_CROSS
	aq RAIL_FLAT
	ar RAIL_CURVED
	as RAIL_RAISED_NE
	at RAIL_RAISED_SW
	au CARPET
	av FLOWERBED_1
	aw FLOWERBED_2
	ax FLOWERBED_3
	ay FLOWERBED_4
	az CORAL_FAN
	aA CORAL_WALL_FAN
	aB GLAZED_TERRACOTTA
	aC CHORUS_FLOWER
	aD DAYLIGHT_DETECTOR
	aE STAINED_GLASS_PANE_NOSIDE
	aF STAINED_GLASS_PANE_NOSIDE_ALT
	aG STAINED_GLASS_PANE_POST
	aH STAINED_GLASS_PANE_SIDE
	aI STAINED_GLASS_PANE_SIDE_ALT
	aJ COMMAND_BLOCK
	aK CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	aL CHISELED_BOOKSHELF_SLOT_TOP_MID
	aM CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	aN CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	aO CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	aP CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	aQ ANVIL
	aR STEMS
	aS ATTACHED_STEM
	aT CROP
	aU FARMLAND
	aV FIRE_FLOOR
	aW FIRE_SIDE
	aX FIRE_SIDE_ALT
	aY FIRE_UP
	aZ FIRE_UP_ALT
	ba CAMPFIRE
	bb LANTERN
	bc HANGING_LANTERN
	bd TORCH
	be WALL_TORCH
	bf PISTON
	bg PISTON_HEAD
	bh PISTON_HEAD_SHORT
	bi SEAGRASS
	bj TURTLE_EGG
	bk TWO_TURTLE_EGGS
	bl THREE_TURTLE_EGGS
	bm FOUR_TURTLE_EGGS
	bn SINGLE_FACE
	bo CAULDRON_LEVEL1
	bp CAULDRON_LEVEL2
	bq CAULDRON_FULL
	br AZALEA
	bs POTTED_AZALEA
	bt POTTED_FLOWERING_AZALEA
	bu SNIFFER_EGG
	bv FLAT_ITEM
	bw MUSIC_DISC
	bx FLAT_HANDHELD_ITEM
	by FLAT_HANDHELD_ROD_ITEM
	bz TWO_LAYERED_ITEM
	bA THREE_LAYERED_ITEM
	bB SHULKER_BOX_INVENTORY
	bC BED_INVENTORY
	bD BANNER_INVENTORY
	bE SKULL_INVENTORY
	bF CANDLE
	bG TWO_CANDLES
	bH THREE_CANDLES
	bI FOUR_CANDLES
	bJ CANDLE_CAKE
	bK SCULK_SHRIEKER
	<init> ()V <init>
	a ([Lli;)Llf; create
	a (Ljava/lang/String;[Lli;)Llf; create
	b (Ljava/lang/String;[Lli;)Llf; createItem
	a (Ljava/lang/String;Ljava/lang/String;[Lli;)Llf; create
	a (I)[Llf; lambda$static$1
	b (I)Llf; lambda$static$0
	<clinit> ()V <clinit>
lh net/minecraft/data/models/model/TextureMapping
	a slots
	b forcedSlots
	<init> ()V <init>
	a (Lli;Lacq;)Llh; put
	b (Lli;Lacq;)Llh; putForced
	a ()Ljava/util/stream/Stream; getForced
	a (Lli;Lli;)Llh; copySlot
	b (Lli;Lli;)Llh; copyForced
	a (Lli;)Lacq; get
	c (Lli;Lacq;)Llh; copyAndUpdate
	a (Lcpn;)Llh; cube
	b (Lcpn;)Llh; defaultTexture
	a (Lacq;)Llh; defaultTexture
	b (Lacq;)Llh; cube
	c (Lcpn;)Llh; cross
	c (Lacq;)Llh; cross
	d (Lcpn;)Llh; plant
	d (Lacq;)Llh; plant
	e (Lcpn;)Llh; rail
	e (Lacq;)Llh; rail
	f (Lcpn;)Llh; wool
	g (Lcpn;)Llh; flowerbed
	f (Lacq;)Llh; wool
	h (Lcpn;)Llh; stem
	a (Lcpn;Lcpn;)Llh; attachedStem
	i (Lcpn;)Llh; pattern
	j (Lcpn;)Llh; fan
	g (Lacq;)Llh; crop
	b (Lcpn;Lcpn;)Llh; pane
	d (Lli;Lacq;)Llh; singleSlot
	k (Lcpn;)Llh; column
	l (Lcpn;)Llh; cubeTop
	m (Lcpn;)Llh; pottedAzalea
	n (Lcpn;)Llh; logColumn
	a (Lacq;Lacq;)Llh; column
	o (Lcpn;)Llh; fence
	p (Lcpn;)Llh; customParticle
	q (Lcpn;)Llh; cubeBottomTop
	r (Lcpn;)Llh; cubeBottomTopWithWall
	s (Lcpn;)Llh; columnWithWall
	b (Lacq;Lacq;)Llh; door
	t (Lcpn;)Llh; door
	u (Lcpn;)Llh; particle
	h (Lacq;)Llh; particle
	v (Lcpn;)Llh; fire0
	w (Lcpn;)Llh; fire1
	x (Lcpn;)Llh; lantern
	y (Lcpn;)Llh; torch
	i (Lacq;)Llh; torch
	a (Lcfu;)Llh; particleFromItem
	z (Lcpn;)Llh; commandBlock
	A (Lcpn;)Llh; orientableCube
	B (Lcpn;)Llh; orientableCubeOnlyTop
	C (Lcpn;)Llh; orientableCubeSameEnds
	D (Lcpn;)Llh; top
	c (Lcpn;Lcpn;)Llh; craftingTable
	d (Lcpn;Lcpn;)Llh; fletchingTable
	a (Ljava/lang/String;)Llh; snifferEgg
	E (Lcpn;)Llh; campfire
	a (Lcpn;Z)Llh; candleCake
	j (Lacq;)Llh; cauldron
	a (Z)Llh; sculkShrieker
	b (Lcfu;)Llh; layer0
	F (Lcpn;)Llh; layer0
	k (Lacq;)Llh; layer0
	c (Lacq;Lacq;)Llh; layered
	a (Lacq;Lacq;Lacq;)Llh; layered
	G (Lcpn;)Lacq; getBlockTexture
	a (Lcpn;Ljava/lang/String;)Lacq; getBlockTexture
	c (Lcfu;)Lacq; getItemTexture
	a (Lcfu;Ljava/lang/String;)Lacq; getItemTexture
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$getItemTexture$1
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$getBlockTexture$0
li net/minecraft/data/models/model/TextureSlot
	a ALL
	b TEXTURE
	c PARTICLE
	d END
	e BOTTOM
	f TOP
	g FRONT
	h BACK
	i SIDE
	j NORTH
	k SOUTH
	l EAST
	m WEST
	n UP
	o DOWN
	p CROSS
	q PLANT
	r WALL
	s RAIL
	t WOOL
	u PATTERN
	v PANE
	w EDGE
	x FAN
	y STEM
	z UPPER_STEM
	A CROP
	B DIRT
	C FIRE
	D LANTERN
	E PLATFORM
	F UNSTICKY
	G TORCH
	H LAYER0
	I LAYER1
	J LAYER2
	K LIT_LOG
	L CANDLE
	M INSIDE
	N CONTENT
	O INNER_TOP
	P FLOWERBED
	Q id
	R parent
	a (Ljava/lang/String;)Lli; create
	a (Ljava/lang/String;Lli;)Lli; create
	<init> (Ljava/lang/String;Lli;)V <init>
	a ()Ljava/lang/String; getId
	b ()Lli; getParent
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
lj net/minecraft/data/models/model/TexturedModel
	a CUBE
	b CUBE_MIRRORED
	c COLUMN
	d COLUMN_HORIZONTAL
	e CUBE_TOP_BOTTOM
	f CUBE_TOP
	g ORIENTABLE_ONLY_TOP
	h ORIENTABLE
	i CARPET
	j FLOWERBED_1
	k FLOWERBED_2
	l FLOWERBED_3
	m FLOWERBED_4
	n GLAZED_TERRACOTTA
	o CORAL_FAN
	p PARTICLE_ONLY
	q ANVIL
	r LEAVES
	s LANTERN
	t HANGING_LANTERN
	u SEAGRASS
	v COLUMN_ALT
	w COLUMN_HORIZONTAL_ALT
	x TOP_BOTTOM_WITH_WALL
	y COLUMN_WITH_WALL
	z mapping
	A template
	<init> (Llh;Llf;)V <init>
	a ()Llf; getTemplate
	b ()Llh; getMapping
	a (Ljava/util/function/Consumer;)Llj; updateTextures
	a (Lcpn;Ljava/util/function/BiConsumer;)Lacq; create
	a (Lcpn;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lacq; createWithSuffix
	a (Ljava/util/function/Function;Llf;)Llj$a; createDefault
	a (Lacq;)Llj; createAllSame
	a (Ljava/util/function/Function;Llf;Lcpn;)Llj; lambda$createDefault$0
	<clinit> ()V <clinit>
lj$a net/minecraft/data/models/model/TexturedModel$Provider
	get (Lcpn;)Llj; get
	create (Lcpn;Ljava/util/function/BiConsumer;)Lacq; create
	createWithSuffix (Lcpn;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lacq; createWithSuffix
	updateTexture (Ljava/util/function/Consumer;)Llj$a; updateTexture
	a (Ljava/util/function/Consumer;Lcpn;)Llj; lambda$updateTexture$0
lk net/minecraft/data/models/model/package-info
ll net/minecraft/data/models/package-info
lm net/minecraft/data/package-info
ln net/minecraft/data/recipes/CraftingRecipeBuilder
	<init> ()V <init>
	a (Llq;)Lcis; determineBookCategory
ln$1 net/minecraft/data/recipes/CraftingRecipeBuilder$1
	a $SwitchMap$net$minecraft$data$recipes$RecipeCategory
	<clinit> ()V <clinit>
ln$a net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult
	a category
	<init> (Lcis;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
lo net/minecraft/data/recipes/FinishedRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	b ()Lacq; getId
	c ()Lcje; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lp net/minecraft/data/recipes/RecipeBuilder
	a ROOT_RECIPE_ADVANCEMENT
	a (Ljava/lang/String;Lam;)Llp; unlockedBy
	a (Ljava/lang/String;)Llp; group
	a ()Lcfu; getResult
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Lcml;)Lacq; getDefaultRecipeId
	<clinit> ()V <clinit>
lq net/minecraft/data/recipes/RecipeCategory
	a BUILDING_BLOCKS
	b DECORATIONS
	c REDSTONE
	d TRANSPORTATION
	e TOOLS
	f COMBAT
	g FOOD
	h BREWING
	i MISC
	j recipeFolderName
	k $VALUES
	values ()[Llq; values
	valueOf (Ljava/lang/String;)Llq; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getFolderName
	b ()[Llq; $values
	<clinit> ()V <clinit>
lr net/minecraft/data/recipes/RecipeProvider
	d recipePathProvider
	e advancementPathProvider
	f SHAPE_BUILDERS
	<init> (Ljk;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Ljg;Lacq;Lae$a;)Ljava/util/concurrent/CompletableFuture; buildAdvancement
	a (Ljava/util/function/Consumer;)V buildRecipes
	a (Ljava/util/function/Consumer;Lcaw;)V generateForEnabledBlockFamilies
	a (Ljava/util/function/Consumer;Lcml;Lcml;Ljava/lang/String;)V oneToOneConversionRecipe
	a (Ljava/util/function/Consumer;Lcml;Lcml;Ljava/lang/String;I)V oneToOneConversionRecipe
	a (Ljava/util/function/Consumer;Ljava/util/List;Llq;Lcml;FILjava/lang/String;)V oreSmelting
	b (Ljava/util/function/Consumer;Ljava/util/List;Llq;Lcml;FILjava/lang/String;)V oreBlasting
	a (Ljava/util/function/Consumer;Lcje;Ljava/util/List;Llq;Lcml;FILjava/lang/String;Ljava/lang/String;)V oreCooking
	a (Ljava/util/function/Consumer;Lcfu;Llq;Lcfu;)V netheriteSmithing
	a (Ljava/util/function/Consumer;Lcfu;Lacq;)V trimSmithing
	a (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V twoByTwoPacker
	a (Ljava/util/function/Consumer;Llq;Lcml;Lcml;Ljava/lang/String;)V threeByThreePacker
	b (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V threeByThreePacker
	a (Ljava/util/function/Consumer;Lcml;Lanl;I)V planksFromLog
	b (Ljava/util/function/Consumer;Lcml;Lanl;I)V planksFromLogs
	a (Ljava/util/function/Consumer;Lcml;Lcml;)V woodFromLogs
	b (Ljava/util/function/Consumer;Lcml;Lcml;)V woodenBoat
	c (Ljava/util/function/Consumer;Lcml;Lcml;)V chestBoat
	c (Lcml;Lciz;)Llp; buttonBuilder
	a (Lcml;Lciz;)Llp; doorBuilder
	d (Lcml;Lciz;)Llp; fenceBuilder
	e (Lcml;Lciz;)Llp; fenceGateBuilder
	d (Ljava/util/function/Consumer;Lcml;Lcml;)V pressurePlate
	c (Llq;Lcml;Lciz;)Llp; pressurePlateBuilder
	c (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V slab
	a (Llq;Lcml;Lciz;)Llp; slabBuilder
	b (Lcml;Lciz;)Llp; stairBuilder
	f (Lcml;Lciz;)Llp; trapdoorBuilder
	g (Lcml;Lciz;)Llp; signBuilder
	e (Ljava/util/function/Consumer;Lcml;Lcml;)V hangingSign
	a (Ljava/util/function/Consumer;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V colorBlockWithDye
	f (Ljava/util/function/Consumer;Lcml;Lcml;)V carpet
	g (Ljava/util/function/Consumer;Lcml;Lcml;)V bedFromPlanksAndWool
	h (Ljava/util/function/Consumer;Lcml;Lcml;)V banner
	i (Ljava/util/function/Consumer;Lcml;Lcml;)V stainedGlassFromGlassAndDye
	j (Ljava/util/function/Consumer;Lcml;Lcml;)V stainedGlassPaneFromStainedGlass
	k (Ljava/util/function/Consumer;Lcml;Lcml;)V stainedGlassPaneFromGlassPaneAndDye
	l (Ljava/util/function/Consumer;Lcml;Lcml;)V coloredTerracottaFromTerracottaAndDye
	m (Ljava/util/function/Consumer;Lcml;Lcml;)V concretePowder
	n (Ljava/util/function/Consumer;Lcml;Lcml;)V candle
	d (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V wall
	d (Llq;Lcml;Lciz;)Llp; wallBuilder
	e (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V polished
	e (Llq;Lcml;Lciz;)Llp; polishedBuilder
	f (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V cut
	f (Llq;Lcml;Lciz;)Lls; cutBuilder
	g (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V chiseled
	h (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V mosaicBuilder
	b (Llq;Lcml;Lciz;)Lls; chiseledBuilder
	i (Ljava/util/function/Consumer;Llq;Lcml;Lcml;)V stonecutterResultFromBase
	a (Ljava/util/function/Consumer;Llq;Lcml;Lcml;I)V stonecutterResultFromBase
	p (Ljava/util/function/Consumer;Lcml;Lcml;)V smeltingResultFromBase
	a (Ljava/util/function/Consumer;Llq;Lcml;Llq;Lcml;)V nineBlockStorageRecipes
	a (Ljava/util/function/Consumer;Llq;Lcml;Llq;Lcml;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesWithCustomPacking
	b (Ljava/util/function/Consumer;Llq;Lcml;Llq;Lcml;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesRecipesWithCustomUnpacking
	a (Ljava/util/function/Consumer;Llq;Lcml;Llq;Lcml;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipes
	a (Ljava/util/function/Consumer;Lcml;Lanl;)V copySmithingTemplate
	o (Ljava/util/function/Consumer;Lcml;Lcml;)V copySmithingTemplate
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lcje;I)V cookRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lcje;ILcml;Lcml;F)V simpleCookingRecipe
	b (Ljava/util/function/Consumer;)V waxRecipes
	a (Ljava/util/function/Consumer;Ljf;)V generateRecipes
	a (Ljf;Ljf$b;)Lcpn; getBaseBlock
	a (Lcpn;)Lbk$a; insideOf
	a (Lcj$d;Lcml;)Lbx$a; has
	a (Lcml;)Lbx$a; has
	a (Lanl;)Lbx$a; has
	a ([Lbz;)Lbx$a; inventoryTrigger
	b (Lcml;)Ljava/lang/String; getHasName
	c (Lcml;)Ljava/lang/String; getItemName
	d (Lcml;)Ljava/lang/String; getSimpleRecipeName
	a (Lcml;Lcml;)Ljava/lang/String; getConversionRecipeName
	e (Lcml;)Ljava/lang/String; getSmeltingRecipeName
	f (Lcml;)Ljava/lang/String; getBlastingRecipeName
	a ()Ljava/lang/String; getName
	b (Lcml;Lcml;)Llp; lambda$static$23
	c (Lcml;Lcml;)Llp; lambda$static$22
	d (Lcml;Lcml;)Llp; lambda$static$21
	e (Lcml;Lcml;)Llp; lambda$static$20
	f (Lcml;Lcml;)Llp; lambda$static$19
	g (Lcml;Lcml;)Llp; lambda$static$18
	h (Lcml;Lcml;)Llp; lambda$static$17
	i (Lcml;Lcml;)Llp; lambda$static$16
	j (Lcml;Lcml;)Llp; lambda$static$15
	k (Lcml;Lcml;)Llp; lambda$static$14
	l (Lcml;Lcml;)Llp; lambda$static$13
	m (Lcml;Lcml;)Llp; lambda$static$12
	n (Lcml;Lcml;)Llp; lambda$static$11
	o (Lcml;Lcml;)Llp; lambda$static$10
	p (Lcml;Lcml;)Llp; lambda$static$9
	a (Ljf;Ljava/util/function/Consumer;Ljf$b;Lcpn;)V lambda$generateRecipes$8
	g (Lcml;)Ljava/lang/String; lambda$generateRecipes$7
	a (Llp;Ljf$b;Ljava/lang/String;)V lambda$generateRecipes$6
	a (Ljava/util/function/Consumer;Lcpn;Lcpn;)V lambda$waxRecipes$5
	a (Lcfu;Lcfu;)Z lambda$colorBlockWithDye$4
	b (Ljava/util/function/Consumer;Ljf;)V lambda$generateForEnabledBlockFamilies$3
	a (Lcaw;Ljf;)Z lambda$generateForEnabledBlockFamilies$2
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$1
	a (Ljava/util/Set;Ljava/util/List;Ljg;Llo;)V lambda$run$0
	<clinit> ()V <clinit>
ls net/minecraft/data/recipes/ShapedRecipeBuilder
	b category
	c result
	d count
	e rows
	f key
	g advancement
	h group
	i showNotification
	<init> (Llq;Lcml;I)V <init>
	a (Llq;Lcml;)Lls; shaped
	a (Llq;Lcml;I)Lls; shaped
	a (Ljava/lang/Character;Lanl;)Lls; define
	a (Ljava/lang/Character;Lcml;)Lls; define
	a (Ljava/lang/Character;Lciz;)Lls; define
	b (Ljava/lang/String;)Lls; pattern
	b (Ljava/lang/String;Lam;)Lls; unlockedBy
	c (Ljava/lang/String;)Lls; group
	a (Z)Lls; showNotification
	a ()Lcfu; getResult
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Lacq;)V ensureValid
	a (Ljava/lang/String;)Llp; group
	a (Ljava/lang/String;Lam;)Llp; unlockedBy
ls$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e pattern
	f key
	g advancement
	h advancementId
	i showNotification
	<init> (Lacq;Lcfu;ILjava/lang/String;Lcis;Ljava/util/List;Ljava/util/Map;Lae$a;Lacq;Z)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lcje; getType
	b ()Lacq; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lt net/minecraft/data/recipes/ShapelessRecipeBuilder
	b category
	c result
	d count
	e ingredients
	f advancement
	g group
	<init> (Llq;Lcml;I)V <init>
	a (Llq;Lcml;)Llt; shapeless
	a (Llq;Lcml;I)Llt; shapeless
	a (Lanl;)Llt; requires
	b (Lcml;)Llt; requires
	a (Lcml;I)Llt; requires
	a (Lciz;)Llt; requires
	a (Lciz;I)Llt; requires
	b (Ljava/lang/String;Lam;)Llt; unlockedBy
	b (Ljava/lang/String;)Llt; group
	a ()Lcfu; getResult
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Lacq;)V ensureValid
	a (Ljava/lang/String;)Llp; group
	a (Ljava/lang/String;Lam;)Llp; unlockedBy
lt$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	<init> (Lacq;Lcfu;ILjava/lang/String;Lcis;Ljava/util/List;Lae$a;Lacq;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lcje; getType
	b ()Lacq; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lu net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	b category
	c bookCategory
	d result
	e ingredient
	f experience
	g cookingTime
	h advancement
	i group
	j serializer
	<init> (Llq;Lcir;Lcml;Lciz;FILcje;)V <init>
	a (Lciz;Llq;Lcml;FILcje;)Llu; generic
	a (Lciz;Llq;Lcml;FI)Llu; campfireCooking
	b (Lciz;Llq;Lcml;FI)Llu; blasting
	c (Lciz;Llq;Lcml;FI)Llu; smelting
	d (Lciz;Llq;Lcml;FI)Llu; smoking
	b (Ljava/lang/String;Lam;)Llu; unlockedBy
	b (Ljava/lang/String;)Llu; group
	a ()Lcfu; getResult
	a (Ljava/util/function/Consumer;Lacq;)V save
	b (Lcml;)Lcir; determineSmeltingRecipeCategory
	c (Lcml;)Lcir; determineBlastingRecipeCategory
	a (Lcje;Lcml;)Lcir; determineRecipeCategory
	a (Lacq;)V ensureValid
	a (Ljava/lang/String;)Llp; group
	a (Ljava/lang/String;Lam;)Llp; unlockedBy
lu$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c category
	d ingredient
	e result
	f experience
	g cookingTime
	h advancement
	i advancementId
	j serializer
	<init> (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfu;FILae$a;Lacq;Lcje;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	c ()Lcje; getType
	b ()Lacq; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lv net/minecraft/data/recipes/SingleItemRecipeBuilder
	b category
	c result
	d ingredient
	e count
	f advancement
	g group
	h type
	<init> (Llq;Lcje;Lciz;Lcml;I)V <init>
	a (Lciz;Llq;Lcml;)Llv; stonecutting
	a (Lciz;Llq;Lcml;I)Llv; stonecutting
	b (Ljava/lang/String;Lam;)Llv; unlockedBy
	b (Ljava/lang/String;)Llv; group
	a ()Lcfu; getResult
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Lacq;)V ensureValid
	a (Ljava/lang/String;)Llp; group
	a (Ljava/lang/String;Lam;)Llp; unlockedBy
lv$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	<init> (Lacq;Lcje;Ljava/lang/String;Lciz;Lcfu;ILae$a;Lacq;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lacq; getId
	c ()Lcje; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lw net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	a template
	b base
	c addition
	d category
	e result
	f advancement
	g type
	<init> (Lcje;Lciz;Lciz;Lciz;Llq;Lcfu;)V <init>
	a (Lciz;Lciz;Lciz;Llq;Lcfu;)Llw; smithing
	a (Ljava/lang/String;Lam;)Llw; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Lacq;)V ensureValid
lw$a net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f result
	g advancement
	h advancementId
	<init> (Lacq;Lcje;Lciz;Lciz;Lciz;Lcfu;Lae$a;Lacq;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lacq; getId
	c ()Lcje; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Lacq; id
	g ()Lcje; type
	h ()Lciz; template
	i ()Lciz; base
	j ()Lciz; addition
	k ()Lcfu; result
	l ()Lae$a; advancement
	m ()Lacq; advancementId
lx net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	a category
	b template
	c base
	d addition
	e advancement
	f type
	<init> (Lcje;Llq;Lciz;Lciz;Lciz;)V <init>
	a (Lciz;Lciz;Lciz;Llq;)Llx; smithingTrim
	a (Ljava/lang/String;Lam;)Llx; unlocks
	a (Ljava/util/function/Consumer;Lacq;)V save
	a (Lacq;)V ensureValid
lx$a net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f advancement
	g advancementId
	<init> (Lacq;Lcje;Lciz;Lciz;Lciz;Lae$a;Lacq;)V <init>
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lacq; getId
	c ()Lcje; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Lacq; id
	g ()Lcje; type
	h ()Lciz; template
	i ()Lciz; base
	j ()Lciz; addition
	k ()Lae$a; advancement
	l ()Lacq; advancementId
ly net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	<init> (Lcje;)V <init>
	a (Lcje;)Lly; special
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
ly$1 net/minecraft/data/recipes/SpecialRecipeBuilder$1
	a val$id
	b this$0
	<init> (Lly;Lcis;Ljava/lang/String;)V <init>
	c ()Lcje; getType
	b ()Lacq; getId
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lacq; getAdvancementId
lz net/minecraft/data/recipes/package-info
ma net/minecraft/data/recipes/packs/BundleRecipeProvider
	<init> (Ljk;)V <init>
	a (Ljava/util/function/Consumer;)V buildRecipes
mb net/minecraft/data/recipes/packs/VanillaRecipeProvider
	d COAL_SMELTABLES
	e IRON_SMELTABLES
	f COPPER_SMELTABLES
	g GOLD_SMELTABLES
	h DIAMOND_SMELTABLES
	i LAPIS_SMELTABLES
	j REDSTONE_SMELTABLES
	k EMERALD_SMELTABLES
	<init> (Ljk;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Ljava/util/function/Consumer;)V buildRecipes
	b ()Ljava/util/Map; smithingTrims
	a (Lcfu;)Lacq; lambda$smithingTrims$1
	b (Ljava/util/function/Consumer;Lcfu;Lacq;)V lambda$buildRecipes$0
	<clinit> ()V <clinit>
mc net/minecraft/data/recipes/packs/package-info
md net/minecraft/data/registries/RegistriesDatapackGenerator
	d LOGGER
	e output
	f registries
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a (Ljg;Lhg$b;Lcom/mojang/serialization/DynamicOps;Lacl$b;)Ljava/util/Optional; dumpRegistryCap
	a (Ljava/nio/file/Path;Ljg;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$dumpValue$6
	a (Lacp;Ljg;Lcom/mojang/serialization/DynamicOps;Lacl$b;Lhg$c;)Ljava/util/concurrent/CompletableFuture; lambda$dumpRegistryCap$5
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$dumpRegistryCap$4
	a (Ljk$a;Ljg;Lcom/mojang/serialization/DynamicOps;Lacl$b;Lhe$c;)Ljava/util/concurrent/CompletableFuture; lambda$dumpRegistryCap$3
	a (Ljg;Lhg$b;)Ljava/util/concurrent/CompletionStage; lambda$run$2
	b (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$1
	b (Ljg;Lhg$b;Lcom/mojang/serialization/DynamicOps;Lacl$b;)Ljava/util/stream/Stream; lambda$run$0
	<clinit> ()V <clinit>
me net/minecraft/data/registries/VanillaRegistries
	a BUILDER
	<init> ()V <init>
	a (Lhg$b;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Lhf;Lhg;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Ldre;)Z validatePlacedFeature
	a ()Lhg$b; createLookup
	a (Lhf;Lhe$c;)V lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$3
	a (Lhf;Lacq;Lhe$c;Lhe;)V lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$2
	a (Lhe$c;Ldre;)V lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$1
	a (Lhf;Lacq;Lacp;)V lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$0
	<clinit> ()V <clinit>
mf net/minecraft/data/registries/package-info
mg net/minecraft/data/structures/NbtToSnbt
	d LOGGER
	e inputFolders
	f output
	<init> (Ljk;Ljava/util/Collection;)V <init>
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljg;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
	a (Ljg;Ljava/nio/file/Path;Ljava/lang/String;)V writeSnbt
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$6
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$run$5
	a (Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; lambda$run$4
	b (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$3
	a (Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; lambda$run$2
	b (Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$run$1
	a (Ljava/nio/file/Path;)Z lambda$run$0
	<clinit> ()V <clinit>
mh net/minecraft/data/structures/SnbtToNbt
	d DUMP_SNBT_TO
	e LOGGER
	f output
	g inputFolders
	h filters
	<init> (Ljk;Ljava/lang/Iterable;)V <init>
	a (Lmh$a;)Lmh; addFilter
	a (Ljava/lang/String;Lqr;)Lqr; applyFilters
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lmh$c; readStructure
	a (Ljg;Lmh$c;Ljava/nio/file/Path;)V storeStructureIfChanged
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$run$5
	a (Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; lambda$run$4
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$3
	a (Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; lambda$run$2
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljg;Ljava/nio/file/Path;)V lambda$run$1
	a (Ljava/nio/file/Path;)Z lambda$run$0
	<clinit> ()V <clinit>
mh$a net/minecraft/data/structures/SnbtToNbt$Filter
	apply (Ljava/lang/String;Lqr;)Lqr; apply
mh$b net/minecraft/data/structures/SnbtToNbt$StructureConversionException
	<init> (Ljava/nio/file/Path;Ljava/lang/Throwable;)V <init>
mh$c net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c snbtPayload
	d hash
	<init> (Ljava/lang/String;[BLjava/lang/String;Lcom/google/common/hash/HashCode;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	b ()[B payload
	c ()Ljava/lang/String; snbtPayload
	d ()Lcom/google/common/hash/HashCode; hash
mi net/minecraft/data/structures/StructureUpdater
	a LOGGER
	<init> ()V <init>
	apply (Ljava/lang/String;Lqr;)Lqr; apply
	a (Ljava/lang/String;Lqr;)Lqr; update
	<clinit> ()V <clinit>
mj net/minecraft/data/structures/package-info
mk net/minecraft/data/tags/BannerPatternTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
ml net/minecraft/data/tags/BiomeTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mm net/minecraft/data/tags/CatVariantTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mn net/minecraft/data/tags/DamageTypeTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mo net/minecraft/data/tags/EntityTypeTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
	a (Lbfn;)Lacp; lambda$new$0
mp net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mq net/minecraft/data/tags/FluidTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
	a (Ldxd;)Lacp; lambda$new$0
mr net/minecraft/data/tags/GameEventTagsProvider
	d VIBRATIONS_EXCEPT_FLAP
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
	a (Ldgl;)Lacp; lambda$new$0
	<clinit> ()V <clinit>
ms net/minecraft/data/tags/InstrumentTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mt net/minecraft/data/tags/IntrinsicHolderTagsProvider
	d keyExtractor
	<init> (Ljk;Lacp;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V <init>
	<init> (Ljk;Lacp;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V <init>
	a (Lanl;)Lmt$a; tag
	b (Lanl;)Lmy$b; tag
mt$a net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender
	a keyExtractor
	<init> (Lani;Ljava/util/function/Function;)V <init>
	a (Lanl;)Lmt$a; addTag
	a (Ljava/lang/Object;)Lmt$a; add
	a ([Ljava/lang/Object;)Lmt$a; add
	b (Lanl;)Lmy$b; addTag
mu net/minecraft/data/tags/ItemTagsProvider
	d blockTags
	g tagsToCopy
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V <init>
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lanl;Lanl;)V copy
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
	a (Lhg$b;Lmy$c;)Lhg$b; lambda$createContentsProvider$4
	a (Lmy$c;Lanl;Lanl;)V lambda$createContentsProvider$3
	d (Lanl;)Ljava/lang/IllegalStateException; lambda$createContentsProvider$2
	a (Lcfu;)Lacp; lambda$new$1
	b (Lcfu;)Lacp; lambda$new$0
mv net/minecraft/data/tags/PaintingVariantTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mw net/minecraft/data/tags/PoiTypeTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
mx net/minecraft/data/tags/StructureTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
my net/minecraft/data/tags/TagsProvider
	d LOGGER
	e pathProvider
	g lookupProvider
	h contentsDone
	i parentProvider
	f registryKey
	j builders
	<init> (Ljk;Lacp;Ljava/util/concurrent/CompletableFuture;)V <init>
	<init> (Ljk;Lacp;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V <init>
	a ()Ljava/lang/String; getName
	a (Lhg$b;)V addTags
	a (Ljg;)Ljava/util/concurrent/CompletableFuture; run
	b (Lanl;)Lmy$b; tag
	c (Lanl;)Lani; getOrCreateRawBuilder
	c ()Ljava/util/concurrent/CompletableFuture; contentsGetter
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
	b (Lhg$b;)Lhg$b; lambda$createContentsProvider$11
	a (Ljava/lang/Void;)Lmy$c; lambda$contentsGetter$10
	a (Lanl;)Ljava/util/Optional; lambda$contentsGetter$9
	a (Lacq;)Lani; lambda$getOrCreateRawBuilder$8
	a (Ljg;Lmy$a;)Ljava/util/concurrent/CompletionStage; lambda$run$7
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$run$6
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljg;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture; lambda$run$5
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lanj;)Z lambda$run$4
	a (Lmy$a;Lacq;)Z lambda$run$3
	a (Lhg$c;Lacq;)Z lambda$run$2
	a (Lhg$b;Lmy$c;)Lmy$a; lambda$run$1
	c (Lhg$b;)Lhg$b; lambda$run$0
	<clinit> ()V <clinit>
my$a net/minecraft/data/tags/TagsProvider$1CombinedData
	a contents
	b parent
	<init> (Lhg$b;Lmy$c;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhg$b; contents
	b ()Lmy$c; parent
my$b net/minecraft/data/tags/TagsProvider$TagAppender
	a builder
	<init> (Lani;)V <init>
	a (Lacp;)Lmy$b; add
	a ([Lacp;)Lmy$b; add
	a (Lacq;)Lmy$b; addOptional
	b (Lanl;)Lmy$b; addTag
	b (Lacq;)Lmy$b; addOptionalTag
my$c net/minecraft/data/tags/TagsProvider$TagLookup
	empty ()Lmy$c; empty
	contains (Lanl;)Z contains
	a (Lanl;)Ljava/util/Optional; lambda$empty$0
mz net/minecraft/data/tags/VanillaBlockTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
	a (Lcpn;)Z lambda$addTags$1
	b (Lcpn;)Lacp; lambda$new$0
na net/minecraft/data/tags/VanillaItemTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
nb net/minecraft/data/tags/WorldPresetTagsProvider
	<init> (Ljk;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Lhg$b;)V addTags
nc net/minecraft/data/tags/package-info
nd net/minecraft/data/worldgen/AncientCityStructurePieces
	a START
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ne net/minecraft/data/worldgen/AncientCityStructurePools
	<init> ()V <init>
	a (Lnm;)V bootstrap
nf net/minecraft/data/worldgen/BastionBridgePools
	<init> ()V <init>
	a (Lnm;)V bootstrap
ng net/minecraft/data/worldgen/BastionHoglinStablePools
	<init> ()V <init>
	a (Lnm;)V bootstrap
nh net/minecraft/data/worldgen/BastionHousingUnitsPools
	<init> ()V <init>
	a (Lnm;)V bootstrap
ni net/minecraft/data/worldgen/BastionPieces
	a START
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
nj net/minecraft/data/worldgen/BastionSharedPools
	<init> ()V <init>
	a (Lnm;)V bootstrap
nk net/minecraft/data/worldgen/BastionTreasureRoomPools
	<init> ()V <init>
	a (Lnm;)V bootstrap
nl net/minecraft/data/worldgen/BiomeDefaultFeatures
	<init> ()V <init>
	a (Lcnl$a;)V addDefaultCarversAndLakes
	b (Lcnl$a;)V addDefaultMonsterRoom
	c (Lcnl$a;)V addDefaultUndergroundVariety
	d (Lcnl$a;)V addDripstone
	e (Lcnl$a;)V addSculk
	f (Lcnl$a;)V addDefaultOres
	a (Lcnl$a;Z)V addDefaultOres
	g (Lcnl$a;)V addExtraGold
	h (Lcnl$a;)V addExtraEmeralds
	i (Lcnl$a;)V addInfestedStone
	j (Lcnl$a;)V addDefaultSoftDisks
	k (Lcnl$a;)V addSwampClayDisk
	l (Lcnl$a;)V addMangroveSwampDisks
	m (Lcnl$a;)V addMossyStoneBlock
	n (Lcnl$a;)V addFerns
	o (Lcnl$a;)V addRareBerryBushes
	p (Lcnl$a;)V addCommonBerryBushes
	q (Lcnl$a;)V addLightBambooVegetation
	r (Lcnl$a;)V addBambooVegetation
	s (Lcnl$a;)V addTaigaTrees
	t (Lcnl$a;)V addGroveTrees
	u (Lcnl$a;)V addWaterTrees
	v (Lcnl$a;)V addBirchTrees
	w (Lcnl$a;)V addOtherBirchTrees
	x (Lcnl$a;)V addTallBirchTrees
	y (Lcnl$a;)V addSavannaTrees
	z (Lcnl$a;)V addShatteredSavannaTrees
	A (Lcnl$a;)V addLushCavesVegetationFeatures
	B (Lcnl$a;)V addLushCavesSpecialOres
	C (Lcnl$a;)V addMountainTrees
	D (Lcnl$a;)V addMountainForestTrees
	E (Lcnl$a;)V addJungleTrees
	F (Lcnl$a;)V addSparseJungleTrees
	G (Lcnl$a;)V addBadlandsTrees
	H (Lcnl$a;)V addSnowyTrees
	I (Lcnl$a;)V addJungleGrass
	J (Lcnl$a;)V addSavannaGrass
	K (Lcnl$a;)V addShatteredSavannaGrass
	L (Lcnl$a;)V addSavannaExtraGrass
	M (Lcnl$a;)V addBadlandGrass
	N (Lcnl$a;)V addForestFlowers
	O (Lcnl$a;)V addForestGrass
	P (Lcnl$a;)V addSwampVegetation
	Q (Lcnl$a;)V addMangroveSwampVegetation
	R (Lcnl$a;)V addMushroomFieldVegetation
	S (Lcnl$a;)V addPlainVegetation
	T (Lcnl$a;)V addDesertVegetation
	U (Lcnl$a;)V addGiantTaigaVegetation
	V (Lcnl$a;)V addDefaultFlowers
	W (Lcnl$a;)V addCherryGroveVegetation
	X (Lcnl$a;)V addMeadowVegetation
	Y (Lcnl$a;)V addWarmFlowers
	Z (Lcnl$a;)V addDefaultGrass
	aa (Lcnl$a;)V addTaigaGrass
	ab (Lcnl$a;)V addPlainGrass
	ac (Lcnl$a;)V addDefaultMushrooms
	ad (Lcnl$a;)V addDefaultExtraVegetation
	ae (Lcnl$a;)V addBadlandExtraVegetation
	af (Lcnl$a;)V addJungleMelons
	ag (Lcnl$a;)V addSparseJungleMelons
	ah (Lcnl$a;)V addJungleVines
	ai (Lcnl$a;)V addDesertExtraVegetation
	aj (Lcnl$a;)V addSwampExtraVegetation
	ak (Lcnl$a;)V addDesertExtraDecoration
	al (Lcnl$a;)V addFossilDecoration
	am (Lcnl$a;)V addColdOceanExtraVegetation
	an (Lcnl$a;)V addDefaultSeagrass
	ao (Lcnl$a;)V addLukeWarmKelp
	ap (Lcnl$a;)V addDefaultSprings
	aq (Lcnl$a;)V addFrozenSprings
	ar (Lcnl$a;)V addIcebergs
	as (Lcnl$a;)V addBlueIce
	at (Lcnl$a;)V addSurfaceFreezing
	au (Lcnl$a;)V addNetherDefaultOres
	av (Lcnl$a;)V addAncientDebris
	aw (Lcnl$a;)V addDefaultCrystalFormations
	a (Lcnw$a;)V farmAnimals
	b (Lcnw$a;)V caveSpawns
	c (Lcnw$a;)V commonSpawns
	a (Lcnw$a;III)V oceanSpawns
	a (Lcnw$a;II)V warmOceanSpawns
	d (Lcnw$a;)V plainsSpawns
	e (Lcnw$a;)V snowySpawns
	f (Lcnw$a;)V desertSpawns
	g (Lcnw$a;)V dripstoneCavesSpawns
	a (Lcnw$a;IIIZ)V monsters
	h (Lcnw$a;)V mooshroomSpawns
	i (Lcnw$a;)V baseJungleSpawns
	j (Lcnw$a;)V endSpawns
nm net/minecraft/data/worldgen/BootstapContext
	a (Lacp;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhe$c; register
	a (Lacp;Ljava/lang/Object;)Lhe$c; register
	a (Lacp;)Lhf; lookup
nn net/minecraft/data/worldgen/Carvers
	a CAVE
	b CAVE_EXTRA_UNDERGROUND
	c CANYON
	d NETHER_CAVE
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
no net/minecraft/data/worldgen/DesertVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
np net/minecraft/data/worldgen/DimensionTypes
	<init> ()V <init>
	a (Lnm;)V bootstrap
nq net/minecraft/data/worldgen/NoiseData
	a DEFAULT_SHIFT
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Lnm;ILacp;Lacp;Lacp;Lacp;)V registerBiomeNoises
	a (Lnm;Lacp;ID[D)V register
	<clinit> ()V <clinit>
nr net/minecraft/data/worldgen/PillagerOutpostPools
	a START
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ns net/minecraft/data/worldgen/PlainVillagePools
	a START
	b TERMINATORS_KEY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
nt net/minecraft/data/worldgen/Pools
	a EMPTY
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;Ljava/lang/String;Ldtj;)V register
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
nu net/minecraft/data/worldgen/ProcessorLists
	M EMPTY
	a ZOMBIE_PLAINS
	b ZOMBIE_SAVANNA
	c ZOMBIE_SNOWY
	d ZOMBIE_TAIGA
	e ZOMBIE_DESERT
	f MOSSIFY_10_PERCENT
	g MOSSIFY_20_PERCENT
	h MOSSIFY_70_PERCENT
	i STREET_PLAINS
	j STREET_SAVANNA
	k STREET_SNOWY_OR_TAIGA
	l FARM_PLAINS
	m FARM_SAVANNA
	n FARM_SNOWY
	o FARM_TAIGA
	p FARM_DESERT
	q OUTPOST_ROT
	r BOTTOM_RAMPART
	s TREASURE_ROOMS
	t HOUSING
	u SIDE_WALL_DEGRADATION
	v STABLE_DEGRADATION
	w BASTION_GENERIC_DEGRADATION
	x RAMPART_DEGRADATION
	y ENTRANCE_REPLACEMENT
	z BRIDGE
	A ROOF
	B HIGH_WALL
	C HIGH_RAMPART
	D FOSSIL_ROT
	E FOSSIL_COAL
	F FOSSIL_DIAMONDS
	G ANCIENT_CITY_START_DEGRADATION
	H ANCIENT_CITY_GENERIC_DEGRADATION
	I ANCIENT_CITY_WALLS_DEGRADATION
	J TRAIL_RUINS_HOUSES_ARCHAEOLOGY
	K TRAIL_RUINS_ROADS_ARCHAEOLOGY
	L TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;Lacp;Ljava/util/List;)V register
	a (Lnm;)V bootstrap
	a (Lacq;I)Lduz; trailsArchyLootProcessor
	<clinit> ()V <clinit>
nv net/minecraft/data/worldgen/SavannaVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
nw net/minecraft/data/worldgen/SnowyVillagePools
	a START
	b TERMINATORS_KEY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
nx net/minecraft/data/worldgen/StructureSets
	a (Lnm;)V bootstrap
ny net/minecraft/data/worldgen/Structures
	<init> ()V <init>
	a (Lhi;Ljava/util/Map;Ldhg$b;Ldsl;)Ldsa$c; structure
	a (Lhi;Ldhg$b;Ldsl;)Ldsa$c; structure
	a (Lhi;Ldsl;)Ldsa$c; structure
	a (Lnm;)V bootstrap
	a (Lbgc;)Ldsh; lambda$bootstrap$1
	b (Lbgc;)Lbgc; lambda$bootstrap$0
nz net/minecraft/data/worldgen/SurfaceRuleData
	a AIR
	b BEDROCK
	c WHITE_TERRACOTTA
	d ORANGE_TERRACOTTA
	e TERRACOTTA
	f RED_SAND
	g RED_SANDSTONE
	h STONE
	i DEEPSLATE
	j DIRT
	k PODZOL
	l COARSE_DIRT
	m MYCELIUM
	n GRASS_BLOCK
	o CALCITE
	p GRAVEL
	q SAND
	r SANDSTONE
	s PACKED_ICE
	t SNOW_BLOCK
	u MUD
	v POWDER_SNOW
	w ICE
	x WATER
	y LAVA
	z NETHERRACK
	A SOUL_SAND
	B SOUL_SOIL
	C BASALT
	D BLACKSTONE
	E WARPED_WART_BLOCK
	F WARPED_NYLIUM
	G NETHER_WART_BLOCK
	H CRIMSON_NYLIUM
	I ENDSTONE
	<init> ()V <init>
	a (Lcpn;)Ldib$o; makeStateRule
	a ()Ldib$o; overworld
	a (ZZZ)Ldib$o; overworldLike
	b ()Ldib$o; nether
	c ()Ldib$o; end
	d ()Ldib$o; air
	a (D)Ldib$f; surfaceNoiseAbove
	a (I)[Ldib$o; lambda$overworldLike$0
	<clinit> ()V <clinit>
oa net/minecraft/data/worldgen/TaigaVillagePools
	a START
	b TERMINATORS_KEY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ob net/minecraft/data/worldgen/TerrainProvider
	a DEEP_OCEAN_CONTINENTALNESS
	b OCEAN_CONTINENTALNESS
	c PLAINS_CONTINENTALNESS
	d BEACH_CONTINENTALNESS
	e NO_TRANSFORM
	f AMPLIFIED_OFFSET
	g AMPLIFIED_FACTOR
	h AMPLIFIED_JAGGEDNESS
	<init> ()V <init>
	a (Lapx;Lapx;Lapx;Z)Laod; overworldOffset
	a (Lapx;Lapx;Lapx;Lapx;Z)Laod; overworldFactor
	b (Lapx;Lapx;Lapx;Lapx;Z)Laod; overworldJaggedness
	a (Lapx;Lapx;Lapx;FFFFLapx;)Laod; buildErosionJaggednessSpline
	a (Lapx;Lapx;FFLapx;)Laod; buildRidgeJaggednessSpline
	a (Lapx;FLapx;)Laod; buildWeirdnessJaggednessSpline
	a (Lapx;Lapx;Lapx;FZLapx;)Laod; getErosionFactor
	a (FFFF)F calculateSlope
	a (Lapx;FZLapx;)Laod; buildMountainRidgeSplineWithPoints
	a (FFF)F mountainContinentalness
	a (F)F calculateMountainRidgeZeroContinentalnessPoint
	a (Lapx;Lapx;FFFFFFZZLapx;)Laod; buildErosionOffsetSpline
	a (Lapx;FFFFFFLapx;)Laod; ridgeSpline
	b (F)F lambda$static$2
	c (F)F lambda$static$1
	d (F)F lambda$static$0
	<clinit> ()V <clinit>
oc net/minecraft/data/worldgen/TrailRuinsStructurePools
	a START
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
od net/minecraft/data/worldgen/VillagePools
	<init> ()V <init>
	a (Lnm;)V bootstrap
oe net/minecraft/data/worldgen/biome/BiomeData
	<init> ()V <init>
	a (Lnm;)V bootstrap
of net/minecraft/data/worldgen/biome/EndBiomes
	<init> ()V <init>
	a (Lcnl$a;)Lcnk; baseEndBiome
	a (Lhf;Lhf;)Lcnk; endBarrens
	b (Lhf;Lhf;)Lcnk; theEnd
	c (Lhf;Lhf;)Lcnk; endMidlands
	d (Lhf;Lhf;)Lcnk; endHighlands
	e (Lhf;Lhf;)Lcnk; smallEndIslands
og net/minecraft/data/worldgen/biome/NetherBiomes
	<init> ()V <init>
	a (Lhf;Lhf;)Lcnk; netherWastes
	b (Lhf;Lhf;)Lcnk; soulSandValley
	c (Lhf;Lhf;)Lcnk; basaltDeltas
	d (Lhf;Lhf;)Lcnk; crimsonForest
	e (Lhf;Lhf;)Lcnk; warpedForest
oh net/minecraft/data/worldgen/biome/OverworldBiomes
	a NORMAL_WATER_COLOR
	b NORMAL_WATER_FOG_COLOR
	c OVERWORLD_FOG_COLOR
	d NORMAL_MUSIC
	<init> ()V <init>
	a (F)I calculateSkyColor
	a (ZFFLcnw$a;Lcnl$a;Lame;)Lcnk; biome
	a (ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lcnw$a;Lcnl$a;Lame;)Lcnk; biome
	a (Lcnl$a;)V globalOverworldGeneration
	a (Lhf;Lhf;Z)Lcnk; oldGrowthTaiga
	a (Lhf;Lhf;)Lcnk; sparseJungle
	b (Lhf;Lhf;)Lcnk; jungle
	c (Lhf;Lhf;)Lcnk; bambooJungle
	a (Lhf;Lhf;FZZZLcnw$a;Lame;)Lcnk; baseJungle
	b (Lhf;Lhf;Z)Lcnk; windsweptHills
	d (Lhf;Lhf;)Lcnk; desert
	a (Lhf;Lhf;ZZZ)Lcnk; plains
	e (Lhf;Lhf;)Lcnk; mushroomFields
	a (Lhf;Lhf;ZZ)Lcnk; savanna
	c (Lhf;Lhf;Z)Lcnk; badlands
	a (Lcnw$a;IILcnl$a;)Lcnk; baseOcean
	s (Lhf;Lhf;)Lcnl$a; baseOceanGeneration
	d (Lhf;Lhf;Z)Lcnk; coldOcean
	e (Lhf;Lhf;Z)Lcnk; ocean
	f (Lhf;Lhf;Z)Lcnk; lukeWarmOcean
	f (Lhf;Lhf;)Lcnk; warmOcean
	g (Lhf;Lhf;Z)Lcnk; frozenOcean
	b (Lhf;Lhf;ZZZ)Lcnk; forest
	h (Lhf;Lhf;Z)Lcnk; taiga
	g (Lhf;Lhf;)Lcnk; darkForest
	h (Lhf;Lhf;)Lcnk; swamp
	i (Lhf;Lhf;)Lcnk; mangroveSwamp
	i (Lhf;Lhf;Z)Lcnk; river
	b (Lhf;Lhf;ZZ)Lcnk; beach
	j (Lhf;Lhf;)Lcnk; theVoid
	j (Lhf;Lhf;Z)Lcnk; meadowOrCherryGrove
	k (Lhf;Lhf;)Lcnk; frozenPeaks
	l (Lhf;Lhf;)Lcnk; jaggedPeaks
	m (Lhf;Lhf;)Lcnk; stonyPeaks
	n (Lhf;Lhf;)Lcnk; snowySlopes
	o (Lhf;Lhf;)Lcnk; grove
	p (Lhf;Lhf;)Lcnk; lushCaves
	q (Lhf;Lhf;)Lcnk; dripstoneCaves
	r (Lhf;Lhf;)Lcnk; deepDark
	<clinit> ()V <clinit>
oi net/minecraft/data/worldgen/biome/package-info
oj net/minecraft/data/worldgen/features/AquaticFeatures
	a SEAGRASS_SHORT
	b SEAGRASS_SLIGHTLY_LESS_SHORT
	c SEAGRASS_MID
	d SEAGRASS_TALL
	e SEA_PICKLE
	f SEAGRASS_SIMPLE
	g KELP
	h WARM_OCEAN_VEGETATION
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ok net/minecraft/data/worldgen/features/CaveFeatures
	a MONSTER_ROOM
	b FOSSIL_COAL
	c FOSSIL_DIAMONDS
	d DRIPSTONE_CLUSTER
	e LARGE_DRIPSTONE
	f POINTED_DRIPSTONE
	g UNDERWATER_MAGMA
	h GLOW_LICHEN
	i ROOTED_AZALEA_TREE
	j CAVE_VINE
	k CAVE_VINE_IN_MOSS
	l MOSS_VEGETATION
	m MOSS_PATCH
	n MOSS_PATCH_BONEMEAL
	o DRIPLEAF
	p CLAY_WITH_DRIPLEAVES
	q CLAY_POOL_WITH_DRIPLEAVES
	r LUSH_CAVES_CLAY
	s MOSS_PATCH_CEILING
	t SPORE_BLOSSOM
	u AMETHYST_GEODE
	v SCULK_PATCH_DEEP_DARK
	w SCULK_PATCH_ANCIENT_CITY
	x SCULK_VEIN
	<init> ()V <init>
	a (Lha;)Lhe; makeDripleaf
	a ()Lhe; makeSmallDripleaf
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ol net/minecraft/data/worldgen/features/EndFeatures
	a END_SPIKE
	b END_GATEWAY_RETURN
	c END_GATEWAY_DELAYED
	d CHORUS_PLANT
	e END_ISLAND
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
om net/minecraft/data/worldgen/features/FeatureUtils
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Ljava/util/List;)Ldir; simplePatchPredicate
	a (ILhe;)Ldnf; simpleRandomPatchConfiguration
	a (Ldko;Ldms;Ljava/util/List;I)Ldnf; simplePatchConfiguration
	a (Ldko;Ldms;Ljava/util/List;)Ldnf; simplePatchConfiguration
	a (Ldko;Ldms;)Ldnf; simplePatchConfiguration
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;Lacp;Ldko;)V register
	a (Lnm;Lacp;Ldko;Ldms;)V register
on net/minecraft/data/worldgen/features/MiscOverworldFeatures
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA
	h DISK_CLAY
	i DISK_GRAVEL
	j DISK_SAND
	k FREEZE_TOP_LAYER
	l DISK_GRASS
	m BONUS_CHEST
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA_OVERWORLD
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
oo net/minecraft/data/worldgen/features/NetherFeatures
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g CRIMSON_FOREST_VEGETATION
	h CRIMSON_FOREST_VEGETATION_BONEMEAL
	i WARPED_FOREST_VEGETION
	j WARPED_FOREST_VEGETATION_BONEMEAL
	k NETHER_SPROUTS
	l NETHER_SPROUTS_BONEMEAL
	m TWISTING_VINES
	n TWISTING_VINES_BONEMEAL
	o WEEPING_VINES
	p PATCH_CRIMSON_ROOTS
	q BASALT_PILLAR
	r SPRING_LAVA_NETHER
	s SPRING_NETHER_CLOSED
	t SPRING_NETHER_OPEN
	u PATCH_FIRE
	v PATCH_SOUL_FIRE
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
op net/minecraft/data/worldgen/features/OreFeatures
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_NETHER_GOLD
	d ORE_QUARTZ
	e ORE_GRAVEL_NETHER
	f ORE_BLACKSTONE
	g ORE_DIRT
	h ORE_GRAVEL
	i ORE_GRANITE
	j ORE_DIORITE
	k ORE_ANDESITE
	l ORE_TUFF
	m ORE_COAL
	n ORE_COAL_BURIED
	o ORE_IRON
	p ORE_IRON_SMALL
	q ORE_GOLD
	r ORE_GOLD_BURIED
	s ORE_REDSTONE
	t ORE_DIAMOND_SMALL
	u ORE_DIAMOND_LARGE
	v ORE_DIAMOND_BURIED
	w ORE_LAPIS
	x ORE_LAPIS_BURIED
	y ORE_INFESTED
	z ORE_EMERALD
	A ORE_ANCIENT_DEBRIS_LARGE
	B ORE_ANCIENT_DEBRIS_SMALL
	C ORE_COPPPER_SMALL
	D ORE_COPPER_LARGE
	E ORE_CLAY
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
oq net/minecraft/data/worldgen/features/PileFeatures
	a PILE_HAY
	b PILE_MELON
	c PILE_SNOW
	d PILE_ICE
	e PILE_PUMPKIN
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
or net/minecraft/data/worldgen/features/TreeFeatures
	a CRIMSON_FUNGUS
	b CRIMSON_FUNGUS_PLANTED
	c WARPED_FUNGUS
	d WARPED_FUNGUS_PLANTED
	e HUGE_BROWN_MUSHROOM
	f HUGE_RED_MUSHROOM
	g OAK
	h DARK_OAK
	i BIRCH
	j ACACIA
	k SPRUCE
	l PINE
	m JUNGLE_TREE
	n FANCY_OAK
	o JUNGLE_TREE_NO_VINE
	p MEGA_JUNGLE_TREE
	q MEGA_SPRUCE
	r MEGA_PINE
	s SUPER_BIRCH_BEES_0002
	t SUPER_BIRCH_BEES
	u SWAMP_OAK
	v JUNGLE_BUSH
	w AZALEA_TREE
	x MANGROVE
	y TALL_MANGROVE
	z CHERRY
	A OAK_BEES_0002
	B OAK_BEES_002
	C OAK_BEES_005
	D BIRCH_BEES_0002
	E BIRCH_BEES_002
	F BIRCH_BEES_005
	G FANCY_OAK_BEES_0002
	H FANCY_OAK_BEES_002
	I FANCY_OAK_BEES_005
	J FANCY_OAK_BEES
	K CHERRY_BEES_005
	<init> ()V <init>
	a (Lcpn;Lcpn;IIII)Ldno$a; createStraightBlobTree
	a ()Ldno$a; createOak
	b ()Ldno$a; createBirch
	c ()Ldno$a; createSuperBirch
	d ()Ldno$a; createJungleTree
	e ()Ldno$a; createFancyOak
	f ()Ldno$a; cherry
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
os net/minecraft/data/worldgen/features/VegetationFeatures
	a BAMBOO_NO_PODZOL
	b BAMBOO_SOME_PODZOL
	c VINES
	d PATCH_BROWN_MUSHROOM
	e PATCH_RED_MUSHROOM
	f PATCH_SUNFLOWER
	g PATCH_PUMPKIN
	h PATCH_BERRY_BUSH
	i PATCH_TAIGA_GRASS
	j PATCH_GRASS
	k PATCH_GRASS_JUNGLE
	l SINGLE_PIECE_OF_GRASS
	m PATCH_DEAD_BUSH
	n PATCH_MELON
	o PATCH_WATERLILY
	p PATCH_TALL_GRASS
	q PATCH_LARGE_FERN
	r PATCH_CACTUS
	s PATCH_SUGAR_CANE
	t FLOWER_DEFAULT
	u FLOWER_FLOWER_FOREST
	v FLOWER_SWAMP
	w FLOWER_PLAIN
	x FLOWER_MEADOW
	y FLOWER_CHERRY
	z FOREST_FLOWERS
	A DARK_FOREST_VEGETATION
	B TREES_FLOWER_FOREST
	C MEADOW_TREES
	D TREES_TAIGA
	E TREES_GROVE
	F TREES_SAVANNA
	G BIRCH_TALL
	H TREES_WINDSWEPT_HILLS
	I TREES_WATER
	J TREES_BIRCH_AND_OAK
	K TREES_PLAINS
	L TREES_SPARSE_JUNGLE
	M TREES_OLD_GROWTH_SPRUCE_TAIGA
	N TREES_OLD_GROWTH_PINE_TAIGA
	O TREES_JUNGLE
	P BAMBOO_VEGETATION
	Q MUSHROOM_ISLAND_VEGETATION
	R MANGROVE_VEGETATION
	<init> ()V <init>
	a (Ldot;I)Ldnf; grassPatch
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ot net/minecraft/data/worldgen/features/package-info
ou net/minecraft/data/worldgen/package-info
ov net/minecraft/data/worldgen/placement/AquaticPlacements
	a SEAGRASS_WARM
	b SEAGRASS_NORMAL
	c SEAGRASS_COLD
	d SEAGRASS_RIVER
	e SEAGRASS_SWAMP
	f SEAGRASS_DEEP_WARM
	g SEAGRASS_DEEP
	h SEAGRASS_DEEP_COLD
	i SEAGRASS_SIMPLE
	j SEA_PICKLE
	k KELP_COLD
	l KELP_WARM
	m WARM_OCEAN_VEGETATION
	<init> ()V <init>
	a (I)Ljava/util/List; seagrassPlacement
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ow net/minecraft/data/worldgen/placement/CavePlacements
	a MONSTER_ROOM
	b MONSTER_ROOM_DEEP
	c FOSSIL_UPPER
	d FOSSIL_LOWER
	e DRIPSTONE_CLUSTER
	f LARGE_DRIPSTONE
	g POINTED_DRIPSTONE
	h UNDERWATER_MAGMA
	i GLOW_LICHEN
	j ROOTED_AZALEA_TREE
	k CAVE_VINES
	l LUSH_CAVES_VEGETATION
	m LUSH_CAVES_CLAY
	n LUSH_CAVES_CEILING_VEGETATION
	o SPORE_BLOSSOM
	p CLASSIC_VINES
	q AMETHYST_GEODE
	r SCULK_PATCH_DEEP_DARK
	s SCULK_PATCH_ANCIENT_CITY
	t SCULK_VEIN
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ox net/minecraft/data/worldgen/placement/EndPlacements
	a END_SPIKE
	b END_GATEWAY_RETURN
	c CHORUS_PLANT
	d END_ISLAND_DECORATED
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
oy net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA_UNDERGROUND
	h LAKE_LAVA_SURFACE
	i DISK_CLAY
	j DISK_GRAVEL
	k DISK_SAND
	l DISK_GRASS
	m FREEZE_TOP_LAYER
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
oz net/minecraft/data/worldgen/placement/NetherPlacements
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g GLOWSTONE
	h CRIMSON_FOREST_VEGETATION
	i WARPED_FOREST_VEGETATION
	j NETHER_SPROUTS
	k TWISTING_VINES
	l WEEPING_VINES
	m PATCH_CRIMSON_ROOTS
	n BASALT_PILLAR
	o SPRING_DELTA
	p SPRING_CLOSED
	q SPRING_CLOSED_DOUBLE
	r SPRING_OPEN
	s PATCH_SOUL_FIRE
	t PATCH_FIRE
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
pa net/minecraft/data/worldgen/placement/OrePlacements
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_GOLD_DELTAS
	d ORE_QUARTZ_DELTAS
	e ORE_GOLD_NETHER
	f ORE_QUARTZ_NETHER
	g ORE_GRAVEL_NETHER
	h ORE_BLACKSTONE
	i ORE_DIRT
	j ORE_GRAVEL
	k ORE_GRANITE_UPPER
	l ORE_GRANITE_LOWER
	m ORE_DIORITE_UPPER
	n ORE_DIORITE_LOWER
	o ORE_ANDESITE_UPPER
	p ORE_ANDESITE_LOWER
	q ORE_TUFF
	r ORE_COAL_UPPER
	s ORE_COAL_LOWER
	t ORE_IRON_UPPER
	u ORE_IRON_MIDDLE
	v ORE_IRON_SMALL
	w ORE_GOLD_EXTRA
	x ORE_GOLD
	y ORE_GOLD_LOWER
	z ORE_REDSTONE
	A ORE_REDSTONE_LOWER
	B ORE_DIAMOND
	C ORE_DIAMOND_LARGE
	D ORE_DIAMOND_BURIED
	E ORE_LAPIS
	F ORE_LAPIS_BURIED
	G ORE_INFESTED
	H ORE_EMERALD
	I ORE_ANCIENT_DEBRIS_LARGE
	J ORE_ANCIENT_DEBRIS_SMALL
	K ORE_COPPER
	L ORE_COPPER_LARGE
	M ORE_CLAY
	<init> ()V <init>
	a (Ldrh;Ldrh;)Ljava/util/List; orePlacement
	a (ILdrh;)Ljava/util/List; commonOrePlacement
	b (ILdrh;)Ljava/util/List; rareOrePlacement
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
pb net/minecraft/data/worldgen/placement/PlacementUtils
	a HEIGHTMAP
	b HEIGHTMAP_TOP_SOLID
	c HEIGHTMAP_WORLD_SURFACE
	d HEIGHTMAP_OCEAN_FLOOR
	e FULL_RANGE
	f RANGE_10_10
	g RANGE_8_8
	h RANGE_4_4
	i RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;Lacp;Lhe;Ljava/util/List;)V register
	a (Lnm;Lacp;Lhe;[Ldrh;)V register
	a (IFI)Ldrh; countExtra
	a ()Ldrg; isEmpty
	a (Lcpn;)Ldqt; filteredByBlockSurvival
	a (Lhe;[Ldrh;)Lhe; inlinePlaced
	a (Ldko;Ldms;[Ldrh;)Lhe; inlinePlaced
	a (Ldko;Ldms;)Lhe; onlyWhenEmpty
	a (Ldko;Ldms;Ldir;)Lhe; filtered
	<clinit> ()V <clinit>
pc net/minecraft/data/worldgen/placement/TreePlacements
	a CRIMSON_FUNGI
	b WARPED_FUNGI
	c OAK_CHECKED
	d DARK_OAK_CHECKED
	e BIRCH_CHECKED
	f ACACIA_CHECKED
	g SPRUCE_CHECKED
	h MANGROVE_CHECKED
	i CHERRY_CHECKED
	j PINE_ON_SNOW
	k SPRUCE_ON_SNOW
	l PINE_CHECKED
	m JUNGLE_TREE_CHECKED
	n FANCY_OAK_CHECKED
	o MEGA_JUNGLE_TREE_CHECKED
	p MEGA_SPRUCE_CHECKED
	q MEGA_PINE_CHECKED
	r TALL_MANGROVE_CHECKED
	s JUNGLE_BUSH
	t SUPER_BIRCH_BEES_0002
	u SUPER_BIRCH_BEES
	v OAK_BEES_0002
	w OAK_BEES_002
	x BIRCH_BEES_0002_PLACED
	y BIRCH_BEES_002
	z FANCY_OAK_BEES_0002
	A FANCY_OAK_BEES_002
	B FANCY_OAK_BEES
	C CHERRY_BEES_005
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
pd net/minecraft/data/worldgen/placement/VegetationPlacements
	a BAMBOO_LIGHT
	b BAMBOO
	c VINES
	d PATCH_SUNFLOWER
	e PATCH_PUMPKIN
	f PATCH_GRASS_PLAIN
	g PATCH_GRASS_FOREST
	h PATCH_GRASS_BADLANDS
	i PATCH_GRASS_SAVANNA
	j PATCH_GRASS_NORMAL
	k PATCH_GRASS_TAIGA_2
	l PATCH_GRASS_TAIGA
	m PATCH_GRASS_JUNGLE
	n GRASS_BONEMEAL
	o PATCH_DEAD_BUSH_2
	p PATCH_DEAD_BUSH
	q PATCH_DEAD_BUSH_BADLANDS
	r PATCH_MELON
	s PATCH_MELON_SPARSE
	t PATCH_BERRY_COMMON
	u PATCH_BERRY_RARE
	v PATCH_WATERLILY
	w PATCH_TALL_GRASS_2
	x PATCH_TALL_GRASS
	y PATCH_LARGE_FERN
	z PATCH_CACTUS_DESERT
	A PATCH_CACTUS_DECORATED
	B PATCH_SUGAR_CANE_SWAMP
	C PATCH_SUGAR_CANE_DESERT
	D PATCH_SUGAR_CANE_BADLANDS
	E PATCH_SUGAR_CANE
	F BROWN_MUSHROOM_NETHER
	G RED_MUSHROOM_NETHER
	H BROWN_MUSHROOM_NORMAL
	I RED_MUSHROOM_NORMAL
	J BROWN_MUSHROOM_TAIGA
	K RED_MUSHROOM_TAIGA
	L BROWN_MUSHROOM_OLD_GROWTH
	M RED_MUSHROOM_OLD_GROWTH
	N BROWN_MUSHROOM_SWAMP
	O RED_MUSHROOM_SWAMP
	P FLOWER_WARM
	Q FLOWER_DEFAULT
	R FLOWER_FLOWER_FOREST
	S FLOWER_SWAMP
	T FLOWER_PLAINS
	U FLOWER_MEADOW
	V FLOWER_CHERRY
	W TREES_PLAINS
	X DARK_FOREST_VEGETATION
	Y FLOWER_FOREST_FLOWERS
	Z FOREST_FLOWERS
	aa TREES_FLOWER_FOREST
	ab TREES_MEADOW
	ac TREES_CHERRY
	ad TREES_TAIGA
	ae TREES_GROVE
	af TREES_BADLANDS
	ag TREES_SNOWY
	ah TREES_SWAMP
	ai TREES_WINDSWEPT_SAVANNA
	aj TREES_SAVANNA
	ak BIRCH_TALL
	al TREES_BIRCH
	am TREES_WINDSWEPT_FOREST
	an TREES_WINDSWEPT_HILLS
	ao TREES_WATER
	ap TREES_BIRCH_AND_OAK
	aq TREES_SPARSE_JUNGLE
	ar TREES_OLD_GROWTH_SPRUCE_TAIGA
	as TREES_OLD_GROWTH_PINE_TAIGA
	at TREES_JUNGLE
	au BAMBOO_VEGETATION
	av MUSHROOM_ISLAND_VEGETATION
	aw TREES_MANGROVE
	ax TREE_THRESHOLD
	<init> ()V <init>
	a (I)Ljava/util/List; worldSurfaceSquaredWithCount
	a (ILdrh;)Ljava/util/List; getMushroomPlacement
	b (Ldrh;)Lcom/google/common/collect/ImmutableList$Builder; treePlacementBase
	a (Ldrh;)Ljava/util/List; treePlacement
	a (Ldrh;Lcpn;)Ljava/util/List; treePlacement
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
pe net/minecraft/data/worldgen/placement/VillagePlacements
	a PILE_HAY_VILLAGE
	b PILE_MELON_VILLAGE
	c PILE_SNOW_VILLAGE
	d PILE_ICE_VILLAGE
	e PILE_PUMPKIN_VILLAGE
	f OAK_VILLAGE
	g ACACIA_VILLAGE
	h SPRUCE_VILLAGE
	i PINE_VILLAGE
	j PATCH_CACTUS_VILLAGE
	k FLOWER_PLAIN_VILLAGE
	l PATCH_TAIGA_GRASS_VILLAGE
	m PATCH_BERRY_BUSH_VILLAGE
	<init> ()V <init>
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
pf net/minecraft/data/worldgen/placement/package-info
pg net/minecraft/gametest/framework/AfterBatch
	a ()Ljava/lang/String; batch
ph net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
pi net/minecraft/gametest/framework/ExhaustedAttemptsException
	<init> (IILpr;)V <init>
pj net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()I rotationSteps
	d ()Z required
	e ()Ljava/lang/String; template
	f ()J setupTicks
	g ()I attempts
	h ()I requiredSuccesses
pk net/minecraft/gametest/framework/GameTestAssertException
	<init> (Ljava/lang/String;)V <init>
pl net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	<init> (Ljava/lang/String;Lgu;Lgu;J)V <init>
	getMessage ()Ljava/lang/String; getMessage
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lgu; getRelativePos
	c ()Lgu; getAbsolutePos
pm net/minecraft/gametest/framework/GameTestBatch
	a DEFAULT_BATCH_NAME
	b name
	c testFunctions
	d beforeBatchFunction
	e afterBatchFunction
	<init> (Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V <init>
	a ()Ljava/lang/String; getName
	b ()Ljava/util/Collection; getTestFunctions
	a (Laif;)V runBeforeBatchFunction
	b (Laif;)V runAfterBatchFunction
pn net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b firstTestNorthWestCorner
	c level
	d testTicker
	e testsPerRow
	f allTestInfos
	g batches
	h nextTestNorthWestCorner
	<init> (Ljava/util/Collection;Lgu;Lcvz;Laif;Lpx;I)V <init>
	a ()Ljava/util/List; getTestInfos
	b ()V start
	a (I)V runBatch
	a (Ljava/util/Collection;)Ljava/util/Map; createStructuresForBatch
	a (Ljava/util/Map;Lpr;)V lambda$runBatch$3
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$new$2
	a (Lcvz;Laif;Lpm;)Lcom/mojang/datafixers/util/Pair; lambda$new$1
	a (Lcvz;Laif;Lqi;)Lpr; lambda$new$0
	<clinit> ()V <clinit>
pn$1 net/minecraft/gametest/framework/GameTestBatchRunner$1
	a val$currentBatchTracker
	b val$currentBatch
	c val$batchIndex
	d this$0
	<init> (Lpn;Lqc;Lpm;I)V <init>
	a ()V testCompleted
	a (Lpr;)V testStructureLoaded
	b (Lpr;)V testPassed
	c (Lpr;)V testFailed
po net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	<init> (Ljava/lang/Long;Ljava/lang/Runnable;)V <init>
	a (Ljava/lang/Runnable;)Lpo; create
	a (JLjava/lang/Runnable;)Lpo; create
pp net/minecraft/gametest/framework/GameTestGenerator
pq net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	<init> (Lpr;)V <init>
	a ()Laif; getLevel
	a (Lgu;)Ldcb; getBlockState
	b (Lgu;)Lczn; getBlockEntity
	b ()V killAllEntities
	a (Ljava/lang/Class;)V killAllEntitiesOfClass
	a (Lcfu;FFF)Lbvh; spawnItem
	a (Lcfu;Lgu;)Lbvh; spawnItem
	a (Lbfn;Lgu;)Lbfj; spawn
	a (Lbfn;Leei;)Lbfj; spawn
	a (Lbfn;III)Lbfj; spawn
	a (Lbfn;FFF)Lbfj; spawn
	b (Lbfn;Lgu;)Lbgb; spawnWithNoFreeWill
	b (Lbfn;III)Lbgb; spawnWithNoFreeWill
	b (Lbfn;Leei;)Lbgb; spawnWithNoFreeWill
	b (Lbfn;FFF)Lbgb; spawnWithNoFreeWill
	a (Lbgb;Lgu;F)Lpv; walkTo
	a (III)V pressButton
	c (Lgu;)V pressButton
	d (Lgu;)V useBlock
	a (Lgu;Lbyo;)V useBlock
	a (Lgu;Lbyo;Leee;)V useBlock
	a (Lbfz;)Lbfz; makeAboutToDrown
	c ()Lbyo; makeMockSurvivalPlayer
	b (Lbfz;)Lbfz; withLowHealth
	d ()Lbyo; makeMockPlayer
	e ()Laig; makeMockServerPlayerInLevel
	b (III)V pullLever
	e (Lgu;)V pullLever
	a (Lgu;J)V pulseRedstone
	f (Lgu;)V destroyBlock
	a (IIILcpn;)V setBlock
	a (IIILdcb;)V setBlock
	a (Lgu;Lcpn;)V setBlock
	a (Lgu;Ldcb;)V setBlock
	f ()V setNight
	a (I)V setDayTime
	a (Lcpn;III)V assertBlockPresent
	a (Lcpn;Lgu;)V assertBlockPresent
	b (Lcpn;III)V assertBlockNotPresent
	b (Lcpn;Lgu;)V assertBlockNotPresent
	c (Lcpn;III)V succeedWhenBlockPresent
	c (Lcpn;Lgu;)V succeedWhenBlockPresent
	a (Lgu;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lgu;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lgu;Ldde;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lgu;Ldde;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	b (Lgu;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	a (Lgu;Lha;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V assertRedstoneSignal
	a (Lbfn;)V assertEntityPresent
	c (Lbfn;III)V assertEntityPresent
	c (Lbfn;Lgu;)V assertEntityPresent
	a (Lbfn;Leei;Leei;)V assertEntityPresent
	a (Lbfn;Lgu;ID)V assertEntitiesPresent
	a (Lbfn;Lgu;D)V assertEntityPresent
	b (Lbfn;Lgu;D)Ljava/util/List; getEntities
	a (Lbfj;III)V assertEntityInstancePresent
	a (Lbfj;Lgu;)V assertEntityInstancePresent
	a (Lcfu;Lgu;DI)V assertItemEntityCountIs
	a (Lcfu;Lgu;D)V assertItemEntityPresent
	b (Lcfu;Lgu;D)V assertItemEntityNotPresent
	b (Lbfn;)V assertEntityNotPresent
	d (Lbfn;III)V assertEntityNotPresent
	d (Lbfn;Lgu;)V assertEntityNotPresent
	a (Lbfn;DDD)V assertEntityTouching
	b (Lbfn;DDD)V assertEntityNotTouching
	a (Lgu;Lbfn;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	a (Lgu;Lbfn;Lcfu;)V assertEntityIsHolding
	b (Lgu;Lbfn;Lcfu;)V assertEntityInventoryContains
	g (Lgu;)V assertContainerEmpty
	a (Lgu;Lcfu;)V assertContainerContains
	a (Ldrs;Lgu;)V assertSameBlockStates
	a (Lgu;Lgu;)V assertSameBlockState
	a (JLgu;Lcfu;)V assertAtTickTimeContainerContains
	a (JLgu;)V assertAtTickTimeContainerEmpty
	b (Lgu;Lbfn;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	a (Lbfj;Ljava/util/function/Predicate;Ljava/lang/String;)V assertEntityProperty
	a (Lbfj;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V assertEntityProperty
	e (Lbfn;III)V succeedWhenEntityPresent
	e (Lbfn;Lgu;)V succeedWhenEntityPresent
	f (Lbfn;III)V succeedWhenEntityNotPresent
	f (Lbfn;Lgu;)V succeedWhenEntityNotPresent
	g ()V succeed
	j ()V ensureSingleFinalCheck
	a (Ljava/lang/Runnable;)V succeedIf
	b (Ljava/lang/Runnable;)V succeedWhen
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	b (JLjava/lang/Runnable;)V runAfterDelay
	h (Lgu;)V randomTick
	a (Ldhk$a;II)I getHeight
	a (Ljava/lang/String;Lgu;)V fail
	a (Ljava/lang/String;Lbfj;)V fail
	a (Ljava/lang/String;)V fail
	c (Ljava/lang/Runnable;)V failIf
	d (Ljava/lang/Runnable;)V failIfEver
	h ()Lpv; startSequence
	i (Lgu;)Lgu; absolutePos
	j (Lgu;)Lgu; relativePos
	a (Leei;)Leei; absoluteVec
	b (Leei;)Leei; relativeVec
	a (ZLjava/lang/String;)V assertTrue
	b (ZLjava/lang/String;)V assertFalse
	i ()J getTick
	k ()Leed; getBounds
	l ()Leed; getRelativeBounds
	a (Ljava/util/function/Consumer;)V forEveryBlockInStructure
	e (Ljava/lang/Runnable;)V onEachTick
	a (Lbyo;Lcfz;Lgu;Lha;)V placeAt
	a (Ljava/lang/Runnable;J)V lambda$onEachTick$26
	b (Ljava/lang/Runnable;J)V lambda$failIfEver$25
	m ()Ljava/lang/Exception; lambda$failIf$24
	g (Lbfn;Lgu;)V lambda$succeedWhenEntityNotPresent$23
	h (Lbfn;Lgu;)V lambda$succeedWhenEntityPresent$22
	c (Lgu;Lbfn;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$succeedWhenEntityData$21
	k (Lgu;)V lambda$assertAtTickTimeContainerEmpty$20
	b (Lgu;Lcfu;)V lambda$assertAtTickTimeContainerContains$19
	a (Lgu;Ldrs;Lgu;)V lambda$assertSameBlockStates$18
	a (Lcfu;Lcfz;)Z lambda$assertEntityInventoryContains$17
	a (Ljava/lang/Object;)Z lambda$assertEntityInventoryContains$16
	a (Leei;Lbfj;)Z lambda$assertEntityNotTouching$15
	b (Leei;Lbfj;)Z lambda$assertEntityTouching$14
	a (Lbfj;Lgu;Lgu;)Lpl; lambda$assertEntityInstancePresent$13
	a (Lbfj;Lbfj;)Z lambda$assertEntityInstancePresent$12
	b (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlockProperty$11
	a (Ldde;Ljava/util/function/Predicate;Ldcb;)Z lambda$assertBlockProperty$10
	a (Ljava/util/function/Predicate;Ldcb;)Z lambda$assertBlock$9
	c (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlock$8
	d (Lcpn;Lgu;)V lambda$succeedWhenBlockPresent$7
	a (Lgu;Lcpn;Lcpn;)Z lambda$assertBlockNotPresent$6
	a (Ldcb;Lcpn;Lcpn;)Z lambda$assertBlockPresent$5
	l (Lgu;)V lambda$pulseRedstone$4
	n ()Ljava/lang/String; lambda$pressButton$3
	a (Ldcb;)Z lambda$pressButton$2
	b (Lbgb;Lgu;F)V lambda$walkTo$1
	a (Lbfj;)Z lambda$killAllEntitiesOfClass$0
pq$1 net/minecraft/gametest/framework/GameTestHelper$1
	b this$0
	<init> (Lpq;Lcmm;Lgu;FLcom/mojang/authlib/GameProfile;)V <init>
	G_ ()Z isSpectator
	f ()Z isCreative
pq$2 net/minecraft/gametest/framework/GameTestHelper$2
	b this$0
	<init> (Lpq;Lcmm;Lgu;FLcom/mojang/authlib/GameProfile;)V <init>
	G_ ()Z isSpectator
	f ()Z isCreative
	g ()Z isLocalPlayer
pq$3 net/minecraft/gametest/framework/GameTestHelper$3
	b this$0
	<init> (Lpq;Lnet/minecraft/server/MinecraftServer;Laif;Lcom/mojang/authlib/GameProfile;)V <init>
	G_ ()Z isSpectator
	f ()Z isCreative
pr net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b structureBlockPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m rotation
	n error
	o structureBlockEntity
	<init> (Lqi;Lcvz;Laif;)V <init>
	a (Lgu;)V setStructureBlockPos
	a ()V startExecution
	b ()V tick
	A ()V tickInternal
	B ()V startTest
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	c ()Ljava/lang/String; getTestName
	d ()Lgu; getStructureBlockPos
	e ()Lhz; getStructureSize
	f ()Leed; getStructureBounds
	C ()Ldba; getStructureBlockEntity
	g ()Laif; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	D ()V finish
	m ()V succeed
	a (Ljava/lang/Throwable;)V fail
	n ()Ljava/lang/Throwable; getError
	toString ()Ljava/lang/String; toString
	a (Lps;)V addListener
	a (Lgu;I)V spawnStructure
	o ()V clearStructure
	p ()J getTick
	q ()Lpv; createSequence
	r ()Z isRequired
	s ()Z isOptional
	t ()Ljava/lang/String; getStructureName
	u ()Lcvz; getRotation
	v ()Lqi; getTestFunction
	w ()I getTimeoutTicks
	x ()Z isFlaky
	y ()I maxAttempts
	z ()I requiredSuccesses
	b (Lps;)V lambda$spawnStructure$4
	a (Lpv;)V lambda$tickInternal$3
	b (Lpv;)V lambda$tickInternal$2
	c (Lps;)V lambda$tick$1
	d (Lps;)V lambda$tick$0
ps net/minecraft/gametest/framework/GameTestListener
	a (Lpr;)V testStructureLoaded
	b (Lpr;)V testPassed
	c (Lpr;)V testFailed
pt net/minecraft/gametest/framework/GameTestRegistry
	a TEST_FUNCTIONS
	b TEST_CLASS_NAMES
	c BEFORE_BATCH_FUNCTIONS
	d AFTER_BATCH_FUNCTIONS
	e LAST_FAILED_TESTS
	<init> ()V <init>
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/reflect/Method;)V register
	a (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V registerBatchFunction
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a ()Ljava/util/Collection; getAllTestFunctions
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	d (Ljava/lang/String;)Ljava/util/function/Consumer; getAfterBatchFunction
	e (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	f (Ljava/lang/String;)Lqi; getTestFunction
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c (Ljava/lang/reflect/Method;)Lqi; turnMethodIntoTestFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	a (Lqi;Ljava/lang/String;)Z isTestFunctionPartOfClass
	c ()Ljava/util/Collection; getLastFailedTests
	a (Lqi;)V rememberFailedTest
	d ()V forgetFailedTests
	a (Ljava/lang/reflect/Method;Ljava/lang/Object;)V lambda$turnMethodIntoConsumer$2
	a (Ljava/lang/String;Lqi;)Z lambda$findTestFunction$1
	b (Ljava/lang/String;Lqi;)Z lambda$getTestFunctionsForClassName$0
	<clinit> ()V <clinit>
pu net/minecraft/gametest/framework/GameTestRunner
	e MAX_TESTS_PER_BATCH
	a PADDING_AROUND_EACH_STRUCTURE
	b SPACE_BETWEEN_COLUMNS
	c SPACE_BETWEEN_ROWS
	d DEFAULT_TESTS_PER_ROW
	<init> ()V <init>
	a (Lpr;Lgu;Lpx;)V runTest
	a (Ljava/util/Collection;Lgu;Lcvz;Laif;Lpx;I)Ljava/util/Collection; runTestBatches
	b (Ljava/util/Collection;Lgu;Lcvz;Laif;Lpx;I)Ljava/util/Collection; runTests
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	a (Laif;Lgu;Lpx;I)V clearAllTests
	a (Laif;)V clearMarkers
	a (Laif;Lgu;)V lambda$clearAllTests$3
	b (Laif;Lgu;)Z lambda$clearAllTests$2
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$groupTestsIntoBatches$1
	a (Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/util/List;)Lpm; lambda$groupTestsIntoBatches$0
pv net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	<init> (Lpr;)V <init>
	a (Ljava/lang/Runnable;)Lpv; thenWaitUntil
	a (JLjava/lang/Runnable;)Lpv; thenWaitUntil
	a (I)Lpv; thenIdle
	b (Ljava/lang/Runnable;)Lpv; thenExecute
	a (ILjava/lang/Runnable;)Lpv; thenExecuteAfter
	b (ILjava/lang/Runnable;)Lpv; thenExecuteFor
	a ()V thenSucceed
	a (Ljava/util/function/Supplier;)V thenFail
	b ()Lpv$a; thenTrigger
	a (J)V tickAndContinue
	b (J)V tickAndFailIfNotComplete
	c (Ljava/lang/Runnable;)V executeWithoutFail
	c (J)V tick
	a (Lpv$a;)V lambda$thenTrigger$5
	b (Ljava/util/function/Supplier;)V lambda$thenFail$4
	c (ILjava/lang/Runnable;)V lambda$thenExecuteFor$3
	d (ILjava/lang/Runnable;)V lambda$thenExecuteAfter$2
	d (Ljava/lang/Runnable;)V lambda$thenExecute$1
	c ()V lambda$thenIdle$0
pv$a net/minecraft/gametest/framework/GameTestSequence$Condition
	b NOT_TRIGGERED
	c triggerTime
	a this$0
	<init> (Lpv;)V <init>
	a (J)V trigger
	a ()V assertTriggeredThisTick
pw net/minecraft/gametest/framework/GameTestServer
	n LOGGER
	o PROGRESS_REPORT_INTERVAL
	p NO_SERVICES
	q testBatches
	r spawnPos
	s TEST_GAME_RULES
	t WORLD_OPTIONS
	u testTracker
	a (Ljava/lang/Thread;Ldyy$c;Laki;Ljava/util/Collection;Lgu;)Lpw; create
	<init> (Ljava/lang/Thread;Ldyy$c;Laki;Ladk;Ljava/util/Collection;Lgu;)V <init>
	e ()Z initServer
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	p_ ()V waitUntilNextTick
	a (Lab;)Lab; fillServerSystemReport
	g ()V onServerExit
	a (Lo;)V onServerCrash
	b (Laif;)V startTests
	bf ()Z haveTestsStarted
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	N_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Lpr;)V lambda$tickServer$4
	b (Lpr;)V lambda$tickServer$3
	a (Ladj$c;Lcmq;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$create$2
	a (Lcmq;Ladj$a;)Ladj$b; lambda$create$1
	a (Lcmi;)V lambda$static$0
	<clinit> ()V <clinit>
pw$1 net/minecraft/gametest/framework/GameTestServer$1
	a this$0
	<init> (Lpw;Lnet/minecraft/server/MinecraftServer;Lhl;Ldzb;I)V <init>
px net/minecraft/gametest/framework/GameTestTicker
	a SINGLETON
	b testInfos
	<init> ()V <init>
	a (Lpr;)V add
	a ()V clear
	b ()V tick
	<clinit> ()V <clinit>
py net/minecraft/gametest/framework/GameTestTimeoutException
	<init> (Ljava/lang/String;)V <init>
pz net/minecraft/gametest/framework/GlobalTestReporter
	a DELEGATE
	<init> ()V <init>
	a (Lqk;)V replaceWith
	a (Lpr;)V onTestFailed
	b (Lpr;)V onTestSuccess
	a ()V finish
	<clinit> ()V <clinit>
qa net/minecraft/gametest/framework/JUnitLikeTestReporter
	a document
	b testSuite
	c stopwatch
	d destination
	<init> (Ljava/io/File;)V <init>
	a (Lpr;Ljava/lang/String;)Lorg/w3c/dom/Element; createTestCase
	a (Lpr;)V onTestFailed
	b (Lpr;)V onTestSuccess
	a ()V finish
	a (Ljava/io/File;)V save
qb net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	<init> ()V <init>
	a (Lpr;)V onTestFailed
	b (Lpr;)V onTestSuccess
	<clinit> ()V <clinit>
qc net/minecraft/gametest/framework/MultipleTestTracker
	a NOT_STARTED_TEST_CHAR
	b ONGOING_TEST_CHAR
	c SUCCESSFUL_TEST_CHAR
	d FAILED_OPTIONAL_TEST_CHAR
	e FAILED_REQUIRED_TEST_CHAR
	f tests
	g listeners
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	a (Lpr;)V addTestToTrack
	a (Lps;)V addListener
	a (Ljava/util/function/Consumer;)V addFailureListener
	a ()I getFailedRequiredCount
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/StringBuffer;Lpr;)V lambda$getProgressBar$1
	a (Lps;Lpr;)V lambda$addListener$0
qc$1 net/minecraft/gametest/framework/MultipleTestTracker$1
	a val$listener
	b this$0
	<init> (Lqc;Ljava/util/function/Consumer;)V <init>
	a (Lpr;)V testStructureLoaded
	b (Lpr;)V testPassed
	c (Lpr;)V testFailed
qd net/minecraft/gametest/framework/ReportGameListener
	c originalTestInfo
	d testTicker
	e structurePos
	a attempts
	b successes
	<init> (Lpr;Lpx;Lgu;)V <init>
	a (Lpr;)V testStructureLoaded
	b (Lpr;)V testPassed
	c (Lpr;)V testFailed
	a (Lpr;Ljava/lang/String;)V reportPassed
	b (Lpr;Ljava/lang/String;)V visualizePassedTest
	a (Lpr;Ljava/lang/Throwable;)V reportFailure
	b (Lpr;Ljava/lang/Throwable;)V visualizeFailedTest
	a ()V rerunTest
	a (Lpr;Lcpn;)V spawnBeacon
	c (Lpr;Ljava/lang/String;)V spawnLectern
	a (Ljava/lang/String;ZLjava/lang/String;)Lcfz; createBook
	a (Laif;Ln;Ljava/lang/String;)V say
	a (Laif;Lgu;Ljava/lang/String;)V showRedBox
	a (Ljava/lang/String;Ln;Laig;)V lambda$say$2
	a (Laig;)Z lambda$say$1
	a (Ljava/lang/StringBuffer;Ljava/lang/String;)V lambda$createBook$0
qe net/minecraft/gametest/framework/StructureUtils
	c LOGGER
	a DEFAULT_TEST_STRUCTURES_DIR
	b testStructuresDir
	d HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
	<init> ()V <init>
	a (I)Lcvz; getRotationForRotationSteps
	a (Lcvz;)I getRotationStepsForRotation
	a ([Ljava/lang/String;)V main
	a (Ldba;)Leed; getStructureBounds
	b (Ldba;)Ldrs; getStructureBoundingBox
	a (Lgu;Lgu;Lcvz;Laif;)V addCommandBlockAndButtonToStartTest
	a (Ljava/lang/String;Lgu;Lhz;Lcvz;Laif;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lgu;Lcvz;ILaif;Z)Ldba; spawnStructure
	a (Lgu;Laif;)V forceLoadChunks
	a (Ldrs;ILaif;)V clearSpaceForStructure
	a (Lgu;Lhz;Lcvz;)Ldrs; getStructureBoundingBox
	a (Lgu;ILaif;)Ljava/util/Optional; findStructureBlockContainingPos
	b (Lgu;ILaif;)Lgu; findNearestStructureBlock
	c (Lgu;ILaif;)Ljava/util/Collection; findStructureBlocks
	a (Ljava/lang/String;Laif;)Ldvt; getStructureTemplate
	a (Ljava/lang/String;Lgu;Lcvz;Laif;Z)Ldba; createStructureBlock
	a (Ljava/nio/file/Path;)Lqr; tryLoadStructure
	a (ILgu;Laif;)V clearBlock
	a (Lgu;Lgu;Laif;)Z doesStructureContain
	a (Lgu;Lgu;)I lambda$findNearestStructureBlock$5
	a (Lgu;Laif;Lgu;)Z lambda$findStructureBlockContainingPos$4
	a (Lbfj;)Z lambda$clearSpaceForStructure$3
	a (ILaif;Lgu;)V lambda$clearSpaceForStructure$2
	b (Ljava/nio/file/Path;)V lambda$main$1
	c (Ljava/nio/file/Path;)Z lambda$main$0
	<clinit> ()V <clinit>
qe$1 net/minecraft/gametest/framework/StructureUtils$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
qf net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	<init> ()V <init>
	a (Lpr;)V onTestFailed
	b (Lpr;)V onTestSuccess
	<clinit> ()V <clinit>
qg net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a ()Lqg; testClassName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
qh net/minecraft/gametest/framework/TestCommand
	a DEFAULT_CLEAR_RADIUS
	b MAX_CLEAR_RADIUS
	c STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	d STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	e TEST_POS_Z_OFFSET_FROM_PLAYER
	f SHOW_POS_DURATION_MS
	g DEFAULT_X_SIZE
	h DEFAULT_Y_SIZE
	i DEFAULT_Z_SIZE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/lang/String;III)I createNewStructure
	a (Lds;Ljava/lang/String;)I showPos
	a (Lds;)I runNearbyTest
	b (Lds;)I runAllNearbyTests
	a (Laif;Lgu;Lqc;)V runTest
	a (Laif;Lqc;)V showTestSummaryIfAllDone
	a (Lds;I)I clearAllTests
	a (Lds;Lqi;I)I runTest
	a (Lqi;Laif;)V runTestPreparation
	a (Lds;II)I runAllTests
	a (Lds;Ljava/lang/String;II)I runAllTestsInClass
	a (Lds;ZII)I runLastFailedTests
	a (Lds;Ljava/util/Collection;II)V runTests
	b (Lds;Ljava/lang/String;)V say
	c (Lds;)I exportNearestTestStructure
	c (Lds;Ljava/lang/String;)I exportTestStructure
	d (Lds;Ljava/lang/String;)I importTestStructure
	a (Laif;Ljava/lang/String;Ln;)V say
	a (Ln;Ljava/lang/String;Laig;)V lambda$say$29
	a (Laig;)Z lambda$say$28
	a (Ljava/lang/String;)Lsw; lambda$say$27
	a (Lpr;)V lambda$runTests$26
	a (Laif;Lqc;Lgu;)V lambda$runAllNearbyTests$25
	a (Ljava/lang/String;Lsw;)Lsw; lambda$showPos$24
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
qh$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	<init> (Laif;Lqc;)V <init>
	a (Lpr;)V testStructureLoaded
	b (Lpr;)V testPassed
	c (Lpr;)V testFailed
qi net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e maxAttempts
	f requiredSuccesses
	g function
	h maxTicks
	i setupTicks
	j rotation
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcvz;IJZLjava/util/function/Consumer;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcvz;IJZIILjava/util/function/Consumer;)V <init>
	a (Lpq;)V run
	a ()Ljava/lang/String; getTestName
	b ()Ljava/lang/String; getStructureName
	toString ()Ljava/lang/String; toString
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
	g ()Lcvz; getRotation
	h ()Z isFlaky
	i ()I getMaxAttempts
	j ()I getRequiredSuccesses
qj net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/StringReader;)Lqi; parse
	a ()Lqj; testFunctionArgument
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lqi; getTestFunction
	listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
	getExamples ()Ljava/util/Collection; getExamples
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
	<clinit> ()V <clinit>
qk net/minecraft/gametest/framework/TestReporter
	a (Lpr;)V onTestFailed
	b (Lpr;)V onTestSuccess
	a ()V finish
ql net/minecraft/gametest/framework/package-info
qm net/minecraft/locale/Language
	b LOGGER
	c GSON
	d UNSUPPORTED_FORMAT_PATTERN
	a DEFAULT
	e instance
	<init> ()V <init>
	c ()Lqm; loadDefault
	a (Ljava/util/function/BiConsumer;Ljava/lang/String;)V parseTranslations
	a (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V loadFromJson
	a ()Lqm; getInstance
	a (Lqm;)V inject
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lta;)Laom; getVisualOrder
	a (Ljava/util/List;)Ljava/util/List; getVisualOrder
	<clinit> ()V <clinit>
qm$1 net/minecraft/locale/Language$1
	b val$storage
	<init> (Ljava/util/Map;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	b (Ljava/lang/String;)Z has
	b ()Z isDefaultRightToLeft
	a (Lta;)Laom; getVisualOrder
	a (Lta;Laon;)Z lambda$getVisualOrder$1
	a (Laon;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$getVisualOrder$0
qn net/minecraft/locale/package-info
qo net/minecraft/nbt/ByteArrayTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> ([B)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[B toArray
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	d ()Lrk; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	e ()[B getAsByteArray
	size ()I size
	a (I)Lqp; get
	a (ILqp;)Lqp; set
	b (ILqp;)V add
	a (ILrk;)Z setTag
	b (ILrk;)Z addTag
	b (I)Lqp; remove
	f ()B getElementType
	clear ()V clear
	a (Lrh;)Lrh$b; accept
	c (I)Lrk; remove
	c (ILrk;)V add
	d (ILrk;)Lrk; set
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
qo$1 net/minecraft/nbt/ByteArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqo; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
qp net/minecraft/nbt/ByteTag
	w SELF_SIZE_IN_BYTES
	a TYPE
	b ZERO
	c ONE
	x data
	<init> (B)V <init>
	a (B)Lqp; valueOf
	a (Z)Lqp; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lqp; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qp$1 net/minecraft/nbt/ByteTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqp; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qp$a net/minecraft/nbt/ByteTag$Cache
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
qq net/minecraft/nbt/CollectionTag
	<init> ()V <init>
	d (ILrk;)Lrk; set
	c (ILrk;)V add
	c (I)Lrk; remove
	a (ILrk;)Z setTag
	b (ILrk;)Z addTag
	f ()B getElementType
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
qr net/minecraft/nbt/CompoundTag
	a CODEC
	c SELF_SIZE_IN_BYTES
	w MAP_ENTRY_SIZE_IN_BYTES
	b TYPE
	x tags
	<init> (Ljava/util/Map;)V <init>
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	e ()Ljava/util/Set; getAllKeys
	b ()B getId
	c ()Lrm; getType
	f ()I size
	a (Ljava/lang/String;Lrk;)Lrk; put
	a (Ljava/lang/String;B)V putByte
	a (Ljava/lang/String;S)V putShort
	a (Ljava/lang/String;I)V putInt
	a (Ljava/lang/String;J)V putLong
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	b (Ljava/lang/String;)Z hasUUID
	a (Ljava/lang/String;F)V putFloat
	a (Ljava/lang/String;D)V putDouble
	a (Ljava/lang/String;Ljava/lang/String;)V putString
	a (Ljava/lang/String;[B)V putByteArray
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;[I)V putIntArray
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	a (Ljava/lang/String;[J)V putLongArray
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	a (Ljava/lang/String;Z)V putBoolean
	c (Ljava/lang/String;)Lrk; get
	d (Ljava/lang/String;)B getTagType
	e (Ljava/lang/String;)Z contains
	b (Ljava/lang/String;I)Z contains
	f (Ljava/lang/String;)B getByte
	g (Ljava/lang/String;)S getShort
	h (Ljava/lang/String;)I getInt
	i (Ljava/lang/String;)J getLong
	j (Ljava/lang/String;)F getFloat
	k (Ljava/lang/String;)D getDouble
	l (Ljava/lang/String;)Ljava/lang/String; getString
	m (Ljava/lang/String;)[B getByteArray
	n (Ljava/lang/String;)[I getIntArray
	o (Ljava/lang/String;)[J getLongArray
	p (Ljava/lang/String;)Lqr; getCompound
	c (Ljava/lang/String;I)Lqx; getList
	q (Ljava/lang/String;)Z getBoolean
	r (Ljava/lang/String;)V remove
	toString ()Ljava/lang/String; toString
	g ()Z isEmpty
	a (Ljava/lang/String;Lrm;Ljava/lang/ClassCastException;)Lo; createReport
	h ()Lqr; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/String;Lrk;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/io/DataInput;Lra;)B readNamedTagType
	b (Ljava/io/DataInput;Lra;)Ljava/lang/String; readNamedTagName
	a (Lrm;Ljava/lang/String;Ljava/io/DataInput;ILra;)Lrk; readNamedTagData
	a (Lqr;)Lqr; merge
	a (Lro;)V accept
	i ()Ljava/util/Map; entries
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	s (Ljava/lang/String;)Ljava/lang/String; lambda$createReport$3
	b (Lqr;)Lcom/mojang/serialization/Dynamic; lambda$static$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a (Lrk;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
qr$1 net/minecraft/nbt/CompoundTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqr; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
qr$2 net/minecraft/nbt/CompoundTag$2
	a $SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	b $SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	<clinit> ()V <clinit>
qs net/minecraft/nbt/DoubleTag
	c SELF_SIZE_IN_BYTES
	a ZERO
	b TYPE
	w data
	<init> (D)V <init>
	a (D)Lqs; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lqs; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qs$1 net/minecraft/nbt/DoubleTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqs; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qt net/minecraft/nbt/EndTag
	c SELF_SIZE_IN_BYTES
	a TYPE
	b INSTANCE
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	e ()Lqt; copy
	a (Lro;)V accept
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qt$1 net/minecraft/nbt/EndTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqt; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;I)V skip
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qu net/minecraft/nbt/FloatTag
	c SELF_SIZE_IN_BYTES
	a ZERO
	b TYPE
	w data
	<init> (F)V <init>
	a (F)Lqu; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lqu; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qu$1 net/minecraft/nbt/FloatTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqu; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qv net/minecraft/nbt/IntArrayTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> ([I)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[I toArray
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	e ()Lqv; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	g ()[I getAsIntArray
	a (Lro;)V accept
	size ()I size
	a (I)Lqw; get
	a (ILqw;)Lqw; set
	b (ILqw;)V add
	a (ILrk;)Z setTag
	b (ILrk;)Z addTag
	b (I)Lqw; remove
	f ()B getElementType
	clear ()V clear
	a (Lrh;)Lrh$b; accept
	c (I)Lrk; remove
	c (ILrk;)V add
	d (ILrk;)Lrk; set
	d ()Lrk; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
qv$1 net/minecraft/nbt/IntArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqv; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
qw net/minecraft/nbt/IntTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> (I)V <init>
	a (I)Lqw; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lqw; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qw$1 net/minecraft/nbt/IntTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqw; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qw$a net/minecraft/nbt/IntTag$Cache
	b HIGH
	c LOW
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
qx net/minecraft/nbt/ListTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c list
	w type
	<init> (Ljava/util/List;B)V <init>
	<init> ()V <init>
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	g ()V updateTypeAfterRemove
	c (I)Lrk; remove
	isEmpty ()Z isEmpty
	a (I)Lqr; getCompound
	b (I)Lqx; getList
	d (I)S getShort
	e (I)I getInt
	f (I)[I getIntArray
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	j (I)Ljava/lang/String; getString
	size ()I size
	k (I)Lrk; get
	d (ILrk;)Lrk; set
	c (ILrk;)V add
	a (ILrk;)Z setTag
	b (ILrk;)Z addTag
	a (Lrk;)Z updateType
	e ()Lqx; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()B getElementType
	clear ()V clear
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
qx$1 net/minecraft/nbt/ListTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqx; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
qx$2 net/minecraft/nbt/ListTag$2
	a $SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	b $SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	<clinit> ()V <clinit>
qy net/minecraft/nbt/LongArrayTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> ([J)V <init>
	<init> (Lit/unimi/dsi/fastutil/longs/LongSet;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)[J toArray
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	e ()Lqy; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	g ()[J getAsLongArray
	size ()I size
	a (I)Lqz; get
	a (ILqz;)Lqz; set
	b (ILqz;)V add
	a (ILrk;)Z setTag
	b (ILrk;)Z addTag
	b (I)Lqz; remove
	f ()B getElementType
	clear ()V clear
	a (Lrh;)Lrh$b; accept
	c (I)Lrk; remove
	c (ILrk;)V add
	d (ILrk;)Lrk; set
	d ()Lrk; copy
	remove (I)Ljava/lang/Object; remove
	add (ILjava/lang/Object;)V add
	set (ILjava/lang/Object;)Ljava/lang/Object; set
	get (I)Ljava/lang/Object; get
	<clinit> ()V <clinit>
qy$1 net/minecraft/nbt/LongArrayTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqy; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
qz net/minecraft/nbt/LongTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> (J)V <init>
	a (J)Lqz; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lqz; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
qz$1 net/minecraft/nbt/LongTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lqz; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
qz$a net/minecraft/nbt/LongTag$Cache
	b HIGH
	c LOW
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
ra net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	<init> (J)V <init>
	a (J)V accountBytes
	a ()J getUsage
	<clinit> ()V <clinit>
ra$1 net/minecraft/nbt/NbtAccounter$1
	<init> (J)V <init>
	a (J)V accountBytes
rb net/minecraft/nbt/NbtIo
	<init> ()V <init>
	a (Ljava/io/File;)Lqr; readCompressed
	b (Ljava/io/InputStream;)Ljava/io/DataInputStream; createDecompressorStream
	a (Ljava/io/InputStream;)Lqr; readCompressed
	a (Ljava/io/File;Lrh;)V parseCompressed
	a (Ljava/io/InputStream;Lrh;)V parseCompressed
	a (Lqr;Ljava/io/File;)V writeCompressed
	a (Lqr;Ljava/io/OutputStream;)V writeCompressed
	b (Lqr;Ljava/io/File;)V write
	b (Ljava/io/File;)Lqr; read
	a (Ljava/io/DataInput;)Lqr; read
	a (Ljava/io/DataInput;Lra;)Lqr; read
	a (Lqr;Ljava/io/DataOutput;)V write
	a (Ljava/io/DataInput;Lrh;)V parse
	a (Lrk;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Ljava/io/DataInput;ILra;)Lrk; readUnnamedTag
rb$1 net/minecraft/nbt/NbtIo$1
	a $SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	<clinit> ()V <clinit>
rc net/minecraft/nbt/NbtOps
	a INSTANCE
	b WRAPPER_MARKER
	<init> ()V <init>
	a ()Lrk; empty
	a (Lcom/mojang/serialization/DynamicOps;Lrk;)Ljava/lang/Object; convertTo
	a (Lrk;)Lcom/mojang/serialization/DataResult; getNumberValue
	a (Ljava/lang/Number;)Lrk; createNumeric
	a (B)Lrk; createByte
	a (S)Lrk; createShort
	a (I)Lrk; createInt
	a (J)Lrk; createLong
	a (F)Lrk; createFloat
	a (D)Lrk; createDouble
	a (Z)Lrk; createBoolean
	b (Lrk;)Lcom/mojang/serialization/DataResult; getStringValue
	a (Ljava/lang/String;)Lrk; createString
	a (Lrk;Lrk;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lrk;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lrk;Lrk;Lrk;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lrk;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	c (Lrk;)Lcom/mojang/serialization/DataResult; getMapValues
	d (Lrk;)Lcom/mojang/serialization/DataResult; getMapEntries
	e (Lrk;)Lcom/mojang/serialization/DataResult; getMap
	a (Ljava/util/stream/Stream;)Lrk; createMap
	a (Lqr;)Lrk; tryUnwrap
	f (Lrk;)Lcom/mojang/serialization/DataResult; getStream
	g (Lrk;)Lcom/mojang/serialization/DataResult; getList
	h (Lrk;)Lcom/mojang/serialization/DataResult; getByteBuffer
	a (Ljava/nio/ByteBuffer;)Lrk; createByteList
	i (Lrk;)Lcom/mojang/serialization/DataResult; getIntStream
	a (Ljava/util/stream/IntStream;)Lrk; createIntList
	j (Lrk;)Lcom/mojang/serialization/DataResult; getLongStream
	a (Ljava/util/stream/LongStream;)Lrk; createLongList
	b (Ljava/util/stream/Stream;)Lrk; createList
	a (Lrk;Ljava/lang/String;)Lrk; remove
	toString ()Ljava/lang/String; toString
	mapBuilder ()Lcom/mojang/serialization/RecordBuilder; mapBuilder
	k (Lrk;)Ljava/util/Optional; createCollector
	remove (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; remove
	createLongList (Ljava/util/stream/LongStream;)Ljava/lang/Object; createLongList
	getLongStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getLongStream
	createIntList (Ljava/util/stream/IntStream;)Ljava/lang/Object; createIntList
	getIntStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getIntStream
	createByteList (Ljava/nio/ByteBuffer;)Ljava/lang/Object; createByteList
	getByteBuffer (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getByteBuffer
	createList (Ljava/util/stream/Stream;)Ljava/lang/Object; createList
	getList (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getList
	getStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStream
	getMap (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMap
	createMap (Ljava/util/stream/Stream;)Ljava/lang/Object; createMap
	getMapEntries (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapEntries
	getMapValues (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapValues
	mergeToMap (Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToMap (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToList (Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToList (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToList
	createString (Ljava/lang/String;)Ljava/lang/Object; createString
	getStringValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStringValue
	createBoolean (Z)Ljava/lang/Object; createBoolean
	createDouble (D)Ljava/lang/Object; createDouble
	createFloat (F)Ljava/lang/Object; createFloat
	createLong (J)Ljava/lang/Object; createLong
	createInt (I)Ljava/lang/Object; createInt
	createShort (S)Ljava/lang/Object; createShort
	createByte (B)Ljava/lang/Object; createByte
	createNumeric (Ljava/lang/Number;)Ljava/lang/Object; createNumeric
	getNumberValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getNumberValue
	convertTo (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; convertTo
	empty ()Ljava/lang/Object; empty
	a (Lqr;Lqr;Ljava/lang/String;)V lambda$remove$29
	a (Ljava/lang/String;Ljava/lang/String;)Z lambda$remove$28
	l (Lrk;)Ljava/lang/String; lambda$getList$27
	a (Lqx;Ljava/util/function/Consumer;)V lambda$getList$26
	a (Ljava/util/function/Consumer;Lrk;)V lambda$getList$25
	b ()Ljava/lang/String; lambda$getStream$24
	m (Lrk;)Lrk; lambda$getStream$23
	n (Lrk;)Lrk; lambda$getStream$22
	a (Lqr;Lcom/mojang/datafixers/util/Pair;)V lambda$createMap$21
	o (Lrk;)Ljava/lang/String; lambda$getMap$20
	p (Lrk;)Ljava/lang/String; lambda$getMapEntries$19
	a (Lqr;Ljava/util/function/BiConsumer;)V lambda$getMapEntries$18
	a (Ljava/util/function/BiConsumer;Lqr;Ljava/lang/String;)V lambda$getMapEntries$17
	q (Lrk;)Ljava/lang/String; lambda$getMapValues$16
	a (Lqr;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$getMapValues$15
	a (Ljava/util/List;)Ljava/lang/String; lambda$mergeToMap$14
	a (Ljava/util/List;Lqr;Lcom/mojang/datafixers/util/Pair;)V lambda$mergeToMap$13
	b (Lqr;Lqr;Ljava/lang/String;)V lambda$mergeToMap$12
	r (Lrk;)Ljava/lang/String; lambda$mergeToMap$11
	c (Lqr;Lqr;Ljava/lang/String;)V lambda$mergeToMap$10
	s (Lrk;)Ljava/lang/String; lambda$mergeToMap$9
	t (Lrk;)Ljava/lang/String; lambda$mergeToMap$8
	u (Lrk;)Lcom/mojang/serialization/DataResult; lambda$mergeToList$7
	v (Lrk;)Ljava/lang/String; lambda$mergeToList$6
	a (Ljava/util/List;Lrc$f;)Lcom/mojang/serialization/DataResult; lambda$mergeToList$5
	w (Lrk;)Lcom/mojang/serialization/DataResult; lambda$mergeToList$4
	x (Lrk;)Ljava/lang/String; lambda$mergeToList$3
	a (Lrk;Lrc$f;)Lcom/mojang/serialization/DataResult; lambda$mergeToList$2
	c ()Ljava/lang/String; lambda$getStringValue$1
	d ()Ljava/lang/String; lambda$getNumberValue$0
	<clinit> ()V <clinit>
rc$1 net/minecraft/nbt/NbtOps$1
	a val$tag
	b this$0
	<init> (Lrc;Lqr;)V <init>
	a (Lrk;)Lrk; get
	a (Ljava/lang/String;)Lrk; get
	entries ()Ljava/util/stream/Stream; entries
	toString ()Ljava/lang/String; toString
	get (Ljava/lang/String;)Ljava/lang/Object; get
	get (Ljava/lang/Object;)Ljava/lang/Object; get
	a (Lqr;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$entries$0
rc$a net/minecraft/nbt/NbtOps$ByteListCollector
	a values
	<init> (B)V <init>
	<init> ([B)V <init>
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
rc$b net/minecraft/nbt/NbtOps$HeterogenousListCollector
	a result
	<init> ()V <init>
	<init> (Ljava/util/Collection;)V <init>
	<init> (Lit/unimi/dsi/fastutil/ints/IntArrayList;)V <init>
	<init> (Lit/unimi/dsi/fastutil/bytes/ByteArrayList;)V <init>
	<init> (Lit/unimi/dsi/fastutil/longs/LongArrayList;)V <init>
	a (Lqr;)Z isWrapper
	b (Lrk;)Lrk; wrapIfNeeded
	c (Lrk;)Lqr; wrapElement
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
	a (J)V lambda$new$2
	a (B)V lambda$new$1
	a (I)V lambda$new$0
rc$c net/minecraft/nbt/NbtOps$HomogenousListCollector
	a result
	<init> (Lrk;)V <init>
	<init> (Lqx;)V <init>
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
rc$d net/minecraft/nbt/NbtOps$InitialListCollector
	a INSTANCE
	<init> ()V <init>
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
	<clinit> ()V <clinit>
rc$e net/minecraft/nbt/NbtOps$IntListCollector
	a values
	<init> (I)V <init>
	<init> ([I)V <init>
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
rc$f net/minecraft/nbt/NbtOps$ListCollector
	a (Lrk;)Lrc$f; accept
	a (Ljava/lang/Iterable;)Lrc$f; acceptAll
	a (Ljava/util/stream/Stream;)Lrc$f; acceptAll
	a ()Lrk; result
rc$g net/minecraft/nbt/NbtOps$LongListCollector
	a values
	<init> (J)V <init>
	<init> ([J)V <init>
	a (Lrk;)Lrc$f; accept
	a ()Lrk; result
rc$h net/minecraft/nbt/NbtOps$NbtRecordBuilder
	a this$0
	<init> (Lrc;)V <init>
	a ()Lqr; initBuilder
	a (Ljava/lang/String;Lrk;Lqr;)Lqr; append
	a (Lqr;Lrk;)Lcom/mojang/serialization/DataResult; build
	append (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; append
	build (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; build
	initBuilder ()Ljava/lang/Object; initBuilder
	a (Lrk;)Ljava/lang/String; lambda$build$0
rd net/minecraft/nbt/NbtUtils
	b YXZ_LISTTAG_INT_COMPARATOR
	c YXZ_LISTTAG_DOUBLE_COMPARATOR
	a SNBT_DATA_TAG
	d PROPERTIES_START
	e PROPERTIES_END
	f ELEMENT_SEPARATOR
	g KEY_VALUE_SEPARATOR
	h COMMA_SPLITTER
	i COLON_SPLITTER
	j LOGGER
	k INDENT
	l NOT_FOUND
	<init> ()V <init>
	a (Lqr;)Lcom/mojang/authlib/GameProfile; readGameProfile
	a (Lqr;Lcom/mojang/authlib/GameProfile;)Lqr; writeGameProfile
	a (Lrk;Lrk;Z)Z compareNbt
	a (Ljava/util/UUID;)Lqv; createUUID
	a (Lrk;)Ljava/util/UUID; loadUUID
	b (Lqr;)Lgu; readBlockPos
	a (Lgu;)Lqr; writeBlockPos
	a (Lhf;Lqr;)Ldcb; readBlockState
	a (Ldcd;Ldde;Ljava/lang/String;Lqr;Lqr;)Ldcd; setValueHelper
	a (Ldcb;)Lqr; writeBlockState
	a (Ldxe;)Lqr; writeFluidState
	a (Ldde;Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Lrk;)Ljava/lang/String; prettyPrint
	a (Lrk;Z)Ljava/lang/String; prettyPrint
	a (Ljava/lang/StringBuilder;Lrk;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	c (Lrk;)Lsw; toPrettyComponent
	c (Lqr;)Ljava/lang/String; structureToSnbt
	a (Ljava/lang/String;)Lqr; snbtToStructure
	d (Lqr;)Lqr; packStructureTemplate
	e (Lqr;)Lqr; unpackStructureTemplate
	f (Lqr;)Ljava/lang/String; packBlockState
	b (Ljava/lang/String;)Lqr; unpackBlockState
	g (Lqr;)Lqr; addCurrentDataVersion
	a (Lqr;I)Lqr; addDataVersion
	b (Lqr;I)I getDataVersion
	a (Lqr;Ljava/lang/String;Ljava/lang/String;)V lambda$unpackBlockState$12
	a (Lqr;Ljava/lang/String;)Ljava/lang/String; lambda$packBlockState$11
	a (Ljava/util/Map;Lqr;)Lqx; lambda$unpackStructureTemplate$10
	a (Lqx;Lqr;)V lambda$packStructureTemplate$9
	h (Lqr;)Lqx; lambda$packStructureTemplate$8
	i (Lqr;)Lqx; lambda$packStructureTemplate$7
	a (Lqx;Lqx;Lqx;)V lambda$packStructureTemplate$6
	a (Lqx;)D lambda$static$5
	b (Lqx;)D lambda$static$4
	c (Lqx;)D lambda$static$3
	d (Lqx;)I lambda$static$2
	e (Lqx;)I lambda$static$1
	f (Lqx;)I lambda$static$0
	<clinit> ()V <clinit>
re net/minecraft/nbt/NumericTag
	<init> ()V <init>
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	toString ()Ljava/lang/String; toString
rf net/minecraft/nbt/ShortTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c data
	<init> (S)V <init>
	a (S)Lrf; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	e ()Lrf; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lro;)V accept
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
rf$1 net/minecraft/nbt/ShortTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lrf; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	c ()I size
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
rf$a net/minecraft/nbt/ShortTag$Cache
	b HIGH
	c LOW
	a cache
	<init> ()V <init>
	<clinit> ()V <clinit>
rg net/minecraft/nbt/SnbtPrinterTagVisitor
	a KEY_ORDER
	b NO_INDENTATION
	c SIMPLE_VALUE
	d NAME_VALUE_SEPARATOR
	e ELEMENT_SEPARATOR
	f LIST_OPEN
	g LIST_CLOSE
	h LIST_TYPE_SEPARATOR
	i ELEMENT_SPACING
	j STRUCT_OPEN
	k STRUCT_CLOSE
	l NEWLINE
	m indentation
	n depth
	o path
	p result
	<init> ()V <init>
	<init> (Ljava/lang/String;ILjava/util/List;)V <init>
	a (Lrk;)Ljava/lang/String; visit
	a (Lri;)V visitString
	a (Lqp;)V visitByte
	a (Lrf;)V visitShort
	a (Lqw;)V visitInt
	a (Lqz;)V visitLong
	a (Lqu;)V visitFloat
	a (Lqs;)V visitDouble
	a (Lqo;)V visitByteArray
	a (Lqv;)V visitIntArray
	a (Lqy;)V visitLongArray
	a (Lqx;)V visitList
	a (Lqr;)V visitCompound
	b ()V popPath
	b (Ljava/lang/String;)V pushPath
	b (Lqr;)Ljava/util/List; getKeys
	a ()Ljava/lang/String; pathString
	a (Ljava/lang/String;)Ljava/lang/String; handleEscapePretty
	a (Lqt;)V visitEnd
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
rh net/minecraft/nbt/StreamTagVisitor
	a ()Lrh$b; visitEnd
	a (Ljava/lang/String;)Lrh$b; visit
	a (B)Lrh$b; visit
	a (S)Lrh$b; visit
	a (I)Lrh$b; visit
	a (J)Lrh$b; visit
	a (F)Lrh$b; visit
	a (D)Lrh$b; visit
	a ([B)Lrh$b; visit
	a ([I)Lrh$b; visit
	a ([J)Lrh$b; visit
	a (Lrm;I)Lrh$b; visitList
	a (Lrm;)Lrh$a; visitEntry
	a (Lrm;Ljava/lang/String;)Lrh$a; visitEntry
	b (Lrm;I)Lrh$a; visitElement
	b ()Lrh$b; visitContainerEnd
	b (Lrm;)Lrh$b; visitRootEntry
rh$a net/minecraft/nbt/StreamTagVisitor$EntryResult
	a ENTER
	b SKIP
	c BREAK
	d HALT
	e $VALUES
	values ()[Lrh$a; values
	valueOf (Ljava/lang/String;)Lrh$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lrh$a; $values
	<clinit> ()V <clinit>
rh$b net/minecraft/nbt/StreamTagVisitor$ValueResult
	a CONTINUE
	b BREAK
	c HALT
	d $VALUES
	values ()[Lrh$b; values
	valueOf (Ljava/lang/String;)Lrh$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lrh$b; $values
	<clinit> ()V <clinit>
ri net/minecraft/nbt/StringTag
	b SELF_SIZE_IN_BYTES
	a TYPE
	c EMPTY
	w DOUBLE_QUOTE
	x SINGLE_QUOTE
	y ESCAPE
	z NOT_SET
	A data
	a (Ljava/io/DataInput;)V skipString
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lri; valueOf
	a (Ljava/io/DataOutput;)V write
	a ()I sizeInBytes
	b ()B getId
	c ()Lrm; getType
	toString ()Ljava/lang/String; toString
	e ()Lri; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	m_ ()Ljava/lang/String; getAsString
	a (Lro;)V accept
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	a (Lrh;)Lrh$b; accept
	d ()Lrk; copy
	<clinit> ()V <clinit>
ri$1 net/minecraft/nbt/StringTag$1
	<init> ()V <init>
	a (Ljava/io/DataInput;ILra;)Lri; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	d ()Z isValue
	b (Ljava/io/DataInput;ILra;)Lrk; load
rj net/minecraft/nbt/StringTagVisitor
	a SIMPLE_VALUE
	b builder
	<init> ()V <init>
	a (Lrk;)Ljava/lang/String; visit
	a (Lri;)V visitString
	a (Lqp;)V visitByte
	a (Lrf;)V visitShort
	a (Lqw;)V visitInt
	a (Lqz;)V visitLong
	a (Lqu;)V visitFloat
	a (Lqs;)V visitDouble
	a (Lqo;)V visitByteArray
	a (Lqv;)V visitIntArray
	a (Lqy;)V visitLongArray
	a (Lqx;)V visitList
	a (Lqr;)V visitCompound
	a (Ljava/lang/String;)Ljava/lang/String; handleEscape
	a (Lqt;)V visitEnd
	<clinit> ()V <clinit>
rk net/minecraft/nbt/Tag
	d OBJECT_HEADER
	e ARRAY_HEADER
	f OBJECT_REFERENCE
	g STRING_SIZE
	h TAG_END
	i TAG_BYTE
	j TAG_SHORT
	k TAG_INT
	l TAG_LONG
	m TAG_FLOAT
	n TAG_DOUBLE
	o TAG_BYTE_ARRAY
	p TAG_STRING
	q TAG_LIST
	r TAG_COMPOUND
	s TAG_INT_ARRAY
	t TAG_LONG_ARRAY
	u TAG_ANY_NUMERIC
	v MAX_DEPTH
	a (Ljava/io/DataOutput;)V write
	toString ()Ljava/lang/String; toString
	b ()B getId
	c ()Lrm; getType
	d ()Lrk; copy
	a ()I sizeInBytes
	m_ ()Ljava/lang/String; getAsString
	a (Lro;)V accept
	a (Lrh;)Lrh$b; accept
	b (Lrh;)V acceptAsRoot
rl net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g ELEMENT_SEPARATOR
	h NAME_VALUE_SEPARATOR
	i LIST_OPEN
	j LIST_CLOSE
	k STRUCT_CLOSE
	l STRUCT_OPEN
	m DOUBLE_PATTERN_NOSUFFIX
	n DOUBLE_PATTERN
	o FLOAT_PATTERN
	p BYTE_PATTERN
	q LONG_PATTERN
	r SHORT_PATTERN
	s INT_PATTERN
	t reader
	a (Ljava/lang/String;)Lqr; parseTag
	a ()Lqr; readSingleStruct
	<init> (Lcom/mojang/brigadier/StringReader;)V <init>
	b ()Ljava/lang/String; readKey
	c ()Lrk; readTypedValue
	b (Ljava/lang/String;)Lrk; type
	d ()Lrk; readValue
	e ()Lrk; readList
	f ()Lqr; readStruct
	g ()Lrk; readListTag
	h ()Lrk; readArrayTag
	a (Lrm;Lrm;)Ljava/util/List; readArray
	i ()Z hasElementSeparator
	a (C)V expect
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
rm net/minecraft/nbt/TagType
	b (Ljava/io/DataInput;ILra;)Lrk; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	b (Ljava/io/DataInput;Lrh;)V parseRoot
	a (Ljava/io/DataInput;I)V skip
	a (Ljava/io/DataInput;)V skip
	d ()Z isValue
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	a (I)Lrm; createInvalid
rm$1 net/minecraft/nbt/TagType$1
	a val$id
	<init> (I)V <init>
	c ()Ljava/io/IOException; createException
	a (Ljava/io/DataInput;ILra;)Lqt; load
	a (Ljava/io/DataInput;Lrh;)Lrh$b; parse
	a (Ljava/io/DataInput;I)V skip
	a (Ljava/io/DataInput;)V skip
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILra;)Lrk; load
rm$2 net/minecraft/nbt/TagType$2
	a $SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	<clinit> ()V <clinit>
rm$a net/minecraft/nbt/TagType$StaticSize
	a (Ljava/io/DataInput;)V skip
	a (Ljava/io/DataInput;I)V skip
	c ()I size
rm$b net/minecraft/nbt/TagType$VariableSize
	a (Ljava/io/DataInput;I)V skip
rn net/minecraft/nbt/TagTypes
	a TYPES
	<init> ()V <init>
	a (I)Lrm; getType
	<clinit> ()V <clinit>
ro net/minecraft/nbt/TagVisitor
	a (Lri;)V visitString
	a (Lqp;)V visitByte
	a (Lrf;)V visitShort
	a (Lqw;)V visitInt
	a (Lqz;)V visitLong
	a (Lqu;)V visitFloat
	a (Lqs;)V visitDouble
	a (Lqo;)V visitByteArray
	a (Lqv;)V visitIntArray
	a (Lqy;)V visitLongArray
	a (Lqx;)V visitList
	a (Lqr;)V visitCompound
	a (Lqt;)V visitEnd
rp net/minecraft/nbt/TextComponentTagVisitor
	a LOGGER
	b INLINE_LIST_THRESHOLD
	c INLINE_ELEMENT_TYPES
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	h SIMPLE_VALUE
	i NAME_VALUE_SEPARATOR
	j ELEMENT_SEPARATOR
	k LIST_OPEN
	l LIST_CLOSE
	m LIST_TYPE_SEPARATOR
	n ELEMENT_SPACING
	o STRUCT_OPEN
	p STRUCT_CLOSE
	q NEWLINE
	r indentation
	s depth
	t result
	<init> (Ljava/lang/String;I)V <init>
	a (Lrk;)Lsw; visit
	a (Lri;)V visitString
	a (Lqp;)V visitByte
	a (Lrf;)V visitShort
	a (Lqw;)V visitInt
	a (Lqz;)V visitLong
	a (Lqu;)V visitFloat
	a (Lqs;)V visitDouble
	a (Lqo;)V visitByteArray
	a (Lqv;)V visitIntArray
	a (Lqy;)V visitLongArray
	a (Lqx;)V visitList
	a (Lqr;)V visitCompound
	a (Ljava/lang/String;)Lsw; handleEscapePretty
	a (Lqt;)V visitEnd
	<clinit> ()V <clinit>
rq net/minecraft/nbt/package-info
rr net/minecraft/nbt/visitors/CollectFields
	a fieldsToGetCount
	b wantedTypes
	c stack
	<init> ([Lrt;)V <init>
	b (Lrm;)Lrh$b; visitRootEntry
	a (Lrm;)Lrh$a; visitEntry
	a (Lrm;Ljava/lang/String;)Lrh$a; visitEntry
	b ()Lrh$b; visitContainerEnd
	c ()I getMissingFieldCount
rs net/minecraft/nbt/visitors/CollectToTag
	a lastId
	b rootTag
	c consumerStack
	<init> ()V <init>
	d ()Lrk; getResult
	e ()I depth
	a (Lrk;)V appendEntry
	a ()Lrh$b; visitEnd
	a (Ljava/lang/String;)Lrh$b; visit
	a (B)Lrh$b; visit
	a (S)Lrh$b; visit
	a (I)Lrh$b; visit
	a (J)Lrh$b; visit
	a (F)Lrh$b; visit
	a (D)Lrh$b; visit
	a ([B)Lrh$b; visit
	a ([I)Lrh$b; visit
	a ([J)Lrh$b; visit
	a (Lrm;I)Lrh$b; visitList
	b (Lrm;I)Lrh$a; visitElement
	a (Lrm;)Lrh$a; visitEntry
	a (Lrm;Ljava/lang/String;)Lrh$a; visitEntry
	c (Lrm;)V enterContainerIfNeeded
	b ()Lrh$b; visitContainerEnd
	b (Lrm;)Lrh$b; visitRootEntry
	b (Lrk;)V lambda$visitRootEntry$2
	a (Lqr;Lrk;)V lambda$visitRootEntry$1
	b (Lqr;Lrk;)V lambda$enterContainerIfNeeded$0
rt net/minecraft/nbt/visitors/FieldSelector
	a path
	b type
	c name
	<init> (Lrm;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lrm;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;Lrm;Ljava/lang/String;)V <init>
	<init> (Ljava/util/List;Lrm;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; path
	b ()Lrm; type
	c ()Ljava/lang/String; name
ru net/minecraft/nbt/visitors/FieldTree
	a depth
	b selectedFields
	c fieldsToRecurse
	<init> (I)V <init>
	<init> (ILjava/util/Map;Ljava/util/Map;)V <init>
	a ()Lru; createRoot
	a (Lrt;)V addEntry
	a (Lrm;Ljava/lang/String;)Z isSelected
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I depth
	c ()Ljava/util/Map; selectedFields
	d ()Ljava/util/Map; fieldsToRecurse
	a (Ljava/lang/String;)Lru; lambda$addEntry$0
rv net/minecraft/nbt/visitors/SkipAll
	a INSTANCE
	a ()Lrh$b; visitEnd
	a (Ljava/lang/String;)Lrh$b; visit
	a (B)Lrh$b; visit
	a (S)Lrh$b; visit
	a (I)Lrh$b; visit
	a (J)Lrh$b; visit
	a (F)Lrh$b; visit
	a (D)Lrh$b; visit
	a ([B)Lrh$b; visit
	a ([I)Lrh$b; visit
	a ([J)Lrh$b; visit
	a (Lrm;I)Lrh$b; visitList
	b (Lrm;I)Lrh$a; visitElement
	a (Lrm;)Lrh$a; visitEntry
	a (Lrm;Ljava/lang/String;)Lrh$a; visitEntry
	b ()Lrh$b; visitContainerEnd
	b (Lrm;)Lrh$b; visitRootEntry
	<clinit> ()V <clinit>
rv$1 net/minecraft/nbt/visitors/SkipAll$1
	<init> ()V <init>
rw net/minecraft/nbt/visitors/SkipFields
	a stack
	<init> ([Lrt;)V <init>
	a (Lrm;Ljava/lang/String;)Lrh$a; visitEntry
	b ()Lrh$b; visitContainerEnd
rx net/minecraft/nbt/visitors/package-info
ry net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
rz net/minecraft/network/CipherDecoder
	a cipher
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	decode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V decode
sa net/minecraft/network/CipherEncoder
	a cipher
	<init> (Ljavax/crypto/Cipher;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
sb net/minecraft/network/CompressionDecoder
	a MAXIMUM_COMPRESSED_LENGTH
	b MAXIMUM_UNCOMPRESSED_LENGTH
	c inflater
	d threshold
	e validateDecompressed
	<init> (IZ)V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	a (IZ)V setThreshold
sc net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	<init> (I)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	a ()I getThreshold
	a (I)V setThreshold
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
sd net/minecraft/network/Connection
	i AVERAGE_PACKETS_SMOOTHING
	j LOGGER
	a ROOT_MARKER
	b PACKET_MARKER
	c PACKET_RECEIVED_MARKER
	d PACKET_SENT_MARKER
	e ATTRIBUTE_PROTOCOL
	f NETWORK_WORKER_GROUP
	g NETWORK_EPOLL_WORKER_GROUP
	h LOCAL_WORKER_GROUP
	k receiving
	l queue
	m channel
	n address
	o packetListener
	p disconnectedReason
	q encrypted
	r disconnectionHandled
	s receivedPackets
	t sentPackets
	u averageReceivedPackets
	v averageSentPackets
	w tickCount
	x handlingFault
	<init> (Lup;)V <init>
	channelActive (Lio/netty/channel/ChannelHandlerContext;)V channelActive
	a (Lse;)V setProtocol
	channelInactive (Lio/netty/channel/ChannelHandlerContext;)V channelInactive
	exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V exceptionCaught
	a (Lio/netty/channel/ChannelHandlerContext;Luo;)V channelRead0
	a (Luo;Lsk;)V genericsFtw
	a (Lsk;)V setListener
	a (Luo;)V send
	a (Luo;Lsl;)V send
	b (Luo;Lsl;)V sendPacket
	a (Luo;Lsl;Lse;Lse;)V doSendPacket
	p ()Lse; getCurrentProtocol
	q ()V flushQueue
	a ()V tick
	b ()V tickSecond
	c ()Ljava/net/SocketAddress; getRemoteAddress
	a (Lsw;)V disconnect
	d ()Z isMemoryConnection
	e ()Lup; getReceiving
	f ()Lup; getSending
	a (Ljava/net/InetSocketAddress;Z)Lsd; connectToServer
	a (Lio/netty/channel/ChannelPipeline;Lup;)V configureSerialization
	a (Ljava/net/SocketAddress;)Lsd; connectToLocalServer
	a (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V setEncryptionKey
	g ()Z isEncrypted
	h ()Z isConnected
	i ()Z isConnecting
	j ()Lsk; getPacketListener
	k ()Lsw; getDisconnectedReason
	l ()V setReadOnly
	a (IZ)V setupCompression
	m ()V handleDisconnection
	n ()F getAverageReceivedPackets
	o ()F getAverageSentPackets
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead0
	a (Lsl;Lio/netty/util/concurrent/Future;)V lambda$doSendPacket$8
	b (Luo;Lsl;Lse;Lse;)V lambda$sendPacket$7
	b (Lsw;)V lambda$exceptionCaught$6
	r ()Lio/netty/channel/DefaultEventLoopGroup; lambda$static$5
	s ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$4
	t ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$3
	a (Lorg/slf4j/Marker;)V lambda$static$2
	b (Lorg/slf4j/Marker;)V lambda$static$1
	c (Lorg/slf4j/Marker;)V lambda$static$0
	<clinit> ()V <clinit>
sd$1 net/minecraft/network/Connection$1
	a val$connection
	<init> (Lsd;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
sd$2 net/minecraft/network/Connection$2
	a val$connection
	<init> (Lsd;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
sd$a net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
	<init> (Luo;Lsl;)V <init>
se net/minecraft/network/ConnectionProtocol
	a HANDSHAKING
	b PLAY
	c STATUS
	d LOGIN
	e NOT_REGISTERED
	f MIN_PROTOCOL_ID
	g MAX_PROTOCOL_ID
	h LOOKUP
	i PROTOCOL_BY_PACKET
	j id
	k flows
	l $VALUES
	values ()[Lse; values
	valueOf (Ljava/lang/String;)Lse; valueOf
	b ()Lse$b; protocol
	<init> (Ljava/lang/String;IILse$b;)V <init>
	a (Lup;Luo;)I getPacketId
	a (Lup;)Lun; getBundlerInfo
	b (Lup;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getPacketsByIds
	a (Lup;ILsf;)Luo; createPacket
	a ()I getId
	a (I)Lse; getById
	a (Luo;)Lse; getProtocolForPacket
	a (Lse;Lup;Lse$a;)V lambda$static$2
	a (Lse;Ljava/lang/Class;)V lambda$static$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ljava/lang/Class;Ljava/lang/Integer;)V lambda$getPacketsByIds$0
	c ()[Lse; $values
	<clinit> ()V <clinit>
se$a net/minecraft/network/ConnectionProtocol$PacketSet
	a LOGGER
	b classToId
	c idToDeserializer
	d bundlerInfo
	e extraClasses
	<init> ()V <init>
	a (Ljava/lang/Class;Ljava/util/function/Function;)Lse$a; addPacket
	b (Ljava/lang/Class;Ljava/util/function/Function;)Lse$a; withBundlePacket
	a (Ljava/lang/Class;)I getId
	a (ILsf;)Luo; createPacket
	a (Ljava/util/function/Consumer;)V listAllPackets
	a ()Lun; bundlerInfo
	b (Ljava/lang/Class;)Z lambda$listAllPackets$2
	a (Lul;Lsf;)Lul; lambda$withBundlePacket$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$new$0
	<clinit> ()V <clinit>
se$b net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	<init> ()V <init>
	a (Lup;Lse$a;)Lse$b; addFlow
sf net/minecraft/network/FriendlyByteBuf
	d MAX_VARINT_SIZE
	e MAX_VARLONG_SIZE
	a DEFAULT_NBT_QUOTA
	f source
	b MAX_STRING_LENGTH
	c MAX_COMPONENT_STRING_LENGTH
	g PUBLIC_KEY_SIZE
	h MAX_PUBLIC_KEY_HEADER_SIZE
	i MAX_PUBLIC_KEY_LENGTH
	j GSON
	<init> (Lio/netty/buffer/ByteBuf;)V <init>
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readWithCodec
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeWithCodec
	a (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readJsonWithCodec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeJsonWithCodec
	a (Lhj;Ljava/lang/Object;)V writeId
	a (Lhj;Lhe;Lsf$b;)V writeId
	a (Lhj;)Ljava/lang/Object; readById
	a (Lhj;Lsf$a;)Lhe; readById
	a (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; limitValue
	a (Ljava/util/function/IntFunction;Lsf$a;)Ljava/util/Collection; readCollection
	a (Ljava/util/Collection;Lsf$b;)V writeCollection
	a (Lsf$a;)Ljava/util/List; readList
	a ()Lit/unimi/dsi/fastutil/ints/IntList; readIntIdList
	a (Lit/unimi/dsi/fastutil/ints/IntList;)V writeIntIdList
	a (Ljava/util/function/IntFunction;Lsf$a;Lsf$a;)Ljava/util/Map; readMap
	a (Lsf$a;Lsf$a;)Ljava/util/Map; readMap
	a (Ljava/util/Map;Lsf$b;Lsf$b;)V writeMap
	a (Ljava/util/function/Consumer;)V readWithCount
	a (Ljava/util/EnumSet;Ljava/lang/Class;)V writeEnumSet
	a (Ljava/lang/Class;)Ljava/util/EnumSet; readEnumSet
	a (Ljava/util/Optional;Lsf$b;)V writeOptional
	b (Lsf$a;)Ljava/util/Optional; readOptional
	c (Lsf$a;)Ljava/lang/Object; readNullable
	a (Ljava/lang/Object;Lsf$b;)V writeNullable
	a (Lcom/mojang/datafixers/util/Either;Lsf$b;Lsf$b;)V writeEither
	b (Lsf$a;Lsf$a;)Lcom/mojang/datafixers/util/Either; readEither
	b ()[B readByteArray
	a ([B)Lsf; writeByteArray
	b (I)[B readByteArray
	a ([I)Lsf; writeVarIntArray
	c ()[I readVarIntArray
	c (I)[I readVarIntArray
	a ([J)Lsf; writeLongArray
	d ()[J readLongArray
	b ([J)[J readLongArray
	a ([JI)[J readLongArray
	e ()[B accessByteBufWithCorrectSize
	f ()Lgu; readBlockPos
	a (Lgu;)Lsf; writeBlockPos
	g ()Lclt; readChunkPos
	a (Lclt;)Lsf; writeChunkPos
	h ()Lhx; readSectionPos
	a (Lhx;)Lsf; writeSectionPos
	i ()Lhd; readGlobalPos
	a (Lhd;)V writeGlobalPos
	j ()Lorg/joml/Vector3f; readVector3f
	a (Lorg/joml/Vector3f;)V writeVector3f
	k ()Lorg/joml/Quaternionf; readQuaternion
	a (Lorg/joml/Quaternionf;)V writeQuaternion
	l ()Lsw; readComponent
	a (Lsw;)Lsf; writeComponent
	b (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	a (Ljava/lang/Enum;)Lsf; writeEnum
	m ()I readVarInt
	n ()J readVarLong
	a (Ljava/util/UUID;)Lsf; writeUUID
	o ()Ljava/util/UUID; readUUID
	d (I)Lsf; writeVarInt
	b (J)Lsf; writeVarLong
	a (Lqr;)Lsf; writeNbt
	p ()Lqr; readNbt
	q ()Lqr; readAnySizeNbt
	a (Lra;)Lqr; readNbt
	a (Lcfz;)Lsf; writeItem
	r ()Lcfz; readItem
	s ()Ljava/lang/String; readUtf
	e (I)Ljava/lang/String; readUtf
	a (Ljava/lang/String;)Lsf; writeUtf
	a (Ljava/lang/String;I)Lsf; writeUtf
	g (I)I getMaxEncodedUtfLength
	t ()Lacq; readResourceLocation
	a (Lacq;)Lsf; writeResourceLocation
	a (Lacp;)Lacp; readResourceKey
	b (Lacp;)V writeResourceKey
	u ()Ljava/util/Date; readDate
	a (Ljava/util/Date;)Lsf; writeDate
	v ()Ljava/time/Instant; readInstant
	a (Ljava/time/Instant;)V writeInstant
	w ()Ljava/security/PublicKey; readPublicKey
	a (Ljava/security/PublicKey;)Lsf; writePublicKey
	x ()Leee; readBlockHitResult
	a (Leee;)V writeBlockHitResult
	y ()Ljava/util/BitSet; readBitSet
	a (Ljava/util/BitSet;)V writeBitSet
	f (I)Ljava/util/BitSet; readFixedBitSet
	a (Ljava/util/BitSet;I)V writeFixedBitSet
	z ()Lcom/mojang/authlib/GameProfile; readGameProfile
	a (Lcom/mojang/authlib/GameProfile;)V writeGameProfile
	A ()Lcom/mojang/authlib/properties/PropertyMap; readGameProfileProperties
	a (Lcom/mojang/authlib/properties/PropertyMap;)V writeGameProfileProperties
	B ()Lcom/mojang/authlib/properties/Property; readProperty
	a (Lcom/mojang/authlib/properties/Property;)V writeProperty
	capacity ()I capacity
	capacity (I)Lio/netty/buffer/ByteBuf; capacity
	maxCapacity ()I maxCapacity
	alloc ()Lio/netty/buffer/ByteBufAllocator; alloc
	order ()Ljava/nio/ByteOrder; order
	order (Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf; order
	unwrap ()Lio/netty/buffer/ByteBuf; unwrap
	isDirect ()Z isDirect
	isReadOnly ()Z isReadOnly
	asReadOnly ()Lio/netty/buffer/ByteBuf; asReadOnly
	readerIndex ()I readerIndex
	readerIndex (I)Lio/netty/buffer/ByteBuf; readerIndex
	writerIndex ()I writerIndex
	writerIndex (I)Lio/netty/buffer/ByteBuf; writerIndex
	setIndex (II)Lio/netty/buffer/ByteBuf; setIndex
	readableBytes ()I readableBytes
	writableBytes ()I writableBytes
	maxWritableBytes ()I maxWritableBytes
	isReadable ()Z isReadable
	isReadable (I)Z isReadable
	isWritable ()Z isWritable
	isWritable (I)Z isWritable
	clear ()Lio/netty/buffer/ByteBuf; clear
	markReaderIndex ()Lio/netty/buffer/ByteBuf; markReaderIndex
	resetReaderIndex ()Lio/netty/buffer/ByteBuf; resetReaderIndex
	markWriterIndex ()Lio/netty/buffer/ByteBuf; markWriterIndex
	resetWriterIndex ()Lio/netty/buffer/ByteBuf; resetWriterIndex
	discardReadBytes ()Lio/netty/buffer/ByteBuf; discardReadBytes
	discardSomeReadBytes ()Lio/netty/buffer/ByteBuf; discardSomeReadBytes
	ensureWritable (I)Lio/netty/buffer/ByteBuf; ensureWritable
	ensureWritable (IZ)I ensureWritable
	getBoolean (I)Z getBoolean
	getByte (I)B getByte
	getUnsignedByte (I)S getUnsignedByte
	getShort (I)S getShort
	getShortLE (I)S getShortLE
	getUnsignedShort (I)I getUnsignedShort
	getUnsignedShortLE (I)I getUnsignedShortLE
	getMedium (I)I getMedium
	getMediumLE (I)I getMediumLE
	getUnsignedMedium (I)I getUnsignedMedium
	getUnsignedMediumLE (I)I getUnsignedMediumLE
	getInt (I)I getInt
	getIntLE (I)I getIntLE
	getUnsignedInt (I)J getUnsignedInt
	getUnsignedIntLE (I)J getUnsignedIntLE
	getLong (I)J getLong
	getLongLE (I)J getLongLE
	getChar (I)C getChar
	getFloat (I)F getFloat
	getDouble (I)D getDouble
	getBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (I[B)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (I[BII)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; getBytes
	getBytes (ILjava/nio/channels/GatheringByteChannel;I)I getBytes
	getBytes (ILjava/nio/channels/FileChannel;JI)I getBytes
	getCharSequence (IILjava/nio/charset/Charset;)Ljava/lang/CharSequence; getCharSequence
	setBoolean (IZ)Lio/netty/buffer/ByteBuf; setBoolean
	setByte (II)Lio/netty/buffer/ByteBuf; setByte
	setShort (II)Lio/netty/buffer/ByteBuf; setShort
	setShortLE (II)Lio/netty/buffer/ByteBuf; setShortLE
	setMedium (II)Lio/netty/buffer/ByteBuf; setMedium
	setMediumLE (II)Lio/netty/buffer/ByteBuf; setMediumLE
	setInt (II)Lio/netty/buffer/ByteBuf; setInt
	setIntLE (II)Lio/netty/buffer/ByteBuf; setIntLE
	setLong (IJ)Lio/netty/buffer/ByteBuf; setLong
	setLongLE (IJ)Lio/netty/buffer/ByteBuf; setLongLE
	setChar (II)Lio/netty/buffer/ByteBuf; setChar
	setFloat (IF)Lio/netty/buffer/ByteBuf; setFloat
	setDouble (ID)Lio/netty/buffer/ByteBuf; setDouble
	setBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (I[B)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (I[BII)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; setBytes
	setBytes (ILjava/io/InputStream;I)I setBytes
	setBytes (ILjava/nio/channels/ScatteringByteChannel;I)I setBytes
	setBytes (ILjava/nio/channels/FileChannel;JI)I setBytes
	setZero (II)Lio/netty/buffer/ByteBuf; setZero
	setCharSequence (ILjava/lang/CharSequence;Ljava/nio/charset/Charset;)I setCharSequence
	readBoolean ()Z readBoolean
	readByte ()B readByte
	readUnsignedByte ()S readUnsignedByte
	readShort ()S readShort
	readShortLE ()S readShortLE
	readUnsignedShort ()I readUnsignedShort
	readUnsignedShortLE ()I readUnsignedShortLE
	readMedium ()I readMedium
	readMediumLE ()I readMediumLE
	readUnsignedMedium ()I readUnsignedMedium
	readUnsignedMediumLE ()I readUnsignedMediumLE
	readInt ()I readInt
	readIntLE ()I readIntLE
	readUnsignedInt ()J readUnsignedInt
	readUnsignedIntLE ()J readUnsignedIntLE
	readLong ()J readLong
	readLongLE ()J readLongLE
	readChar ()C readChar
	readFloat ()F readFloat
	readDouble ()D readDouble
	readBytes (I)Lio/netty/buffer/ByteBuf; readBytes
	readSlice (I)Lio/netty/buffer/ByteBuf; readSlice
	readRetainedSlice (I)Lio/netty/buffer/ByteBuf; readRetainedSlice
	readBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; readBytes
	readBytes ([B)Lio/netty/buffer/ByteBuf; readBytes
	readBytes ([BII)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; readBytes
	readBytes (Ljava/nio/channels/GatheringByteChannel;I)I readBytes
	readCharSequence (ILjava/nio/charset/Charset;)Ljava/lang/CharSequence; readCharSequence
	readBytes (Ljava/nio/channels/FileChannel;JI)I readBytes
	skipBytes (I)Lio/netty/buffer/ByteBuf; skipBytes
	writeBoolean (Z)Lio/netty/buffer/ByteBuf; writeBoolean
	writeByte (I)Lio/netty/buffer/ByteBuf; writeByte
	writeShort (I)Lio/netty/buffer/ByteBuf; writeShort
	writeShortLE (I)Lio/netty/buffer/ByteBuf; writeShortLE
	writeMedium (I)Lio/netty/buffer/ByteBuf; writeMedium
	writeMediumLE (I)Lio/netty/buffer/ByteBuf; writeMediumLE
	writeInt (I)Lio/netty/buffer/ByteBuf; writeInt
	writeIntLE (I)Lio/netty/buffer/ByteBuf; writeIntLE
	writeLong (J)Lio/netty/buffer/ByteBuf; writeLong
	writeLongLE (J)Lio/netty/buffer/ByteBuf; writeLongLE
	writeChar (I)Lio/netty/buffer/ByteBuf; writeChar
	writeFloat (F)Lio/netty/buffer/ByteBuf; writeFloat
	writeDouble (D)Lio/netty/buffer/ByteBuf; writeDouble
	writeBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes ([B)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes ([BII)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; writeBytes
	writeBytes (Ljava/io/InputStream;I)I writeBytes
	writeBytes (Ljava/nio/channels/ScatteringByteChannel;I)I writeBytes
	writeBytes (Ljava/nio/channels/FileChannel;JI)I writeBytes
	writeZero (I)Lio/netty/buffer/ByteBuf; writeZero
	writeCharSequence (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I writeCharSequence
	indexOf (IIB)I indexOf
	bytesBefore (B)I bytesBefore
	bytesBefore (IB)I bytesBefore
	bytesBefore (IIB)I bytesBefore
	forEachByte (Lio/netty/util/ByteProcessor;)I forEachByte
	forEachByte (IILio/netty/util/ByteProcessor;)I forEachByte
	forEachByteDesc (Lio/netty/util/ByteProcessor;)I forEachByteDesc
	forEachByteDesc (IILio/netty/util/ByteProcessor;)I forEachByteDesc
	copy ()Lio/netty/buffer/ByteBuf; copy
	copy (II)Lio/netty/buffer/ByteBuf; copy
	slice ()Lio/netty/buffer/ByteBuf; slice
	retainedSlice ()Lio/netty/buffer/ByteBuf; retainedSlice
	slice (II)Lio/netty/buffer/ByteBuf; slice
	retainedSlice (II)Lio/netty/buffer/ByteBuf; retainedSlice
	duplicate ()Lio/netty/buffer/ByteBuf; duplicate
	retainedDuplicate ()Lio/netty/buffer/ByteBuf; retainedDuplicate
	nioBufferCount ()I nioBufferCount
	nioBuffer ()Ljava/nio/ByteBuffer; nioBuffer
	nioBuffer (II)Ljava/nio/ByteBuffer; nioBuffer
	internalNioBuffer (II)Ljava/nio/ByteBuffer; internalNioBuffer
	nioBuffers ()[Ljava/nio/ByteBuffer; nioBuffers
	nioBuffers (II)[Ljava/nio/ByteBuffer; nioBuffers
	hasArray ()Z hasArray
	array ()[B array
	arrayOffset ()I arrayOffset
	hasMemoryAddress ()Z hasMemoryAddress
	memoryAddress ()J memoryAddress
	toString (Ljava/nio/charset/Charset;)Ljava/lang/String; toString
	toString (IILjava/nio/charset/Charset;)Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	compareTo (Lio/netty/buffer/ByteBuf;)I compareTo
	toString ()Ljava/lang/String; toString
	retain (I)Lio/netty/buffer/ByteBuf; retain
	retain ()Lio/netty/buffer/ByteBuf; retain
	touch ()Lio/netty/buffer/ByteBuf; touch
	touch (Ljava/lang/Object;)Lio/netty/buffer/ByteBuf; touch
	refCnt ()I refCnt
	release ()Z release
	release (I)Z release
	touch (Ljava/lang/Object;)Lio/netty/util/ReferenceCounted; touch
	touch ()Lio/netty/util/ReferenceCounted; touch
	retain (I)Lio/netty/util/ReferenceCounted; retain
	retain ()Lio/netty/util/ReferenceCounted; retain
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lcom/mojang/authlib/properties/PropertyMap;Lsf;)V lambda$readGameProfileProperties$8
	a (Lsf$b;Ljava/lang/Object;)V lambda$writeEither$7
	b (Lsf$b;Ljava/lang/Object;)V lambda$writeEither$6
	a (Lsf$b;Lsf$b;Ljava/lang/Object;Ljava/lang/Object;)V lambda$writeMap$5
	a (ILjava/util/function/IntFunction;I)Ljava/lang/Object; lambda$limitValue$4
	a (Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException; lambda$writeJsonWithCodec$3
	b (Ljava/lang/String;)Lio/netty/handler/codec/DecoderException; lambda$readJsonWithCodec$2
	b (Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException; lambda$writeWithCodec$1
	a (Lqr;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException; lambda$readWithCodec$0
	<clinit> ()V <clinit>
sf$1 net/minecraft/network/FriendlyByteBuf$1
	a $SwitchMap$net$minecraft$core$Holder$Kind
	<clinit> ()V <clinit>
sf$a net/minecraft/network/FriendlyByteBuf$Reader
	asOptional ()Lsf$a; asOptional
	a (Lsf;)Ljava/util/Optional; lambda$asOptional$0
sf$b net/minecraft/network/FriendlyByteBuf$Writer
	asOptional ()Lsf$b; asOptional
	a (Lsf;Ljava/util/Optional;)V lambda$asOptional$0
sg net/minecraft/network/PacketBundlePacker
	a currentBundler
	b infoForCurrentBundler
	c flow
	<init> (Lup;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Luo;Ljava/util/List;)V decode
	decode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V decode
sh net/minecraft/network/PacketBundleUnpacker
	a flow
	<init> (Lup;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Luo;Ljava/util/List;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V encode
si net/minecraft/network/PacketDecoder
	a LOGGER
	b flow
	<init> (Lup;)V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
	<clinit> ()V <clinit>
sj net/minecraft/network/PacketEncoder
	a LOGGER
	b flow
	<init> (Lup;)V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Luo;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
	<clinit> ()V <clinit>
sk net/minecraft/network/PacketListener
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
	b ()Z shouldPropagateHandlingExceptions
sl net/minecraft/network/PacketSendListener
	a (Ljava/lang/Runnable;)Lsl; thenRun
	a (Ljava/util/function/Supplier;)Lsl; exceptionallySend
	a ()V onSuccess
	b ()Luo; onFailure
sl$1 net/minecraft/network/PacketSendListener$1
	a val$runnable
	<init> (Ljava/lang/Runnable;)V <init>
	a ()V onSuccess
	b ()Luo; onFailure
sl$2 net/minecraft/network/PacketSendListener$2
	a val$handler
	<init> (Ljava/util/function/Supplier;)V <init>
	b ()Luo; onFailure
sm net/minecraft/network/RateKickingConnection
	i LOGGER
	j EXCEED_REASON
	k rateLimitPacketsPerSecond
	<init> (I)V <init>
	b ()V tickSecond
	p ()V lambda$tickSecond$0
	<clinit> ()V <clinit>
sn net/minecraft/network/SkipPacketException
	<init> (Ljava/lang/Throwable;)V <init>
so net/minecraft/network/TickablePacketListener
	c ()V tick
sp net/minecraft/network/Varint21FrameDecoder
	<init> ()V <init>
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
sq net/minecraft/network/Varint21LengthFieldPrepender
	a MAX_BYTES
	<init> ()V <init>
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
	encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
sr net/minecraft/network/chat/ChatDecorator
	a PLAIN
	decorate (Laig;Lsw;)Ljava/util/concurrent/CompletableFuture; decorate
	a (Laig;Lsw;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
ss net/minecraft/network/chat/ChatType
	j chat
	k narration
	a CODEC
	b DEFAULT_CHAT_DECORATION
	c CHAT
	d SAY_COMMAND
	e MSG_COMMAND_INCOMING
	f MSG_COMMAND_OUTGOING
	g TEAM_MSG_COMMAND_INCOMING
	h TEAM_MSG_COMMAND_OUTGOING
	i EMOTE_COMMAND
	<init> (Lst;Lst;)V <init>
	a (Ljava/lang/String;)Lacp; create
	a (Lnm;)V bootstrap
	a (Lacp;Lbfj;)Lss$a; bind
	a (Lacp;Lds;)Lss$a; bind
	a (Lacp;Lhs;Lsw;)Lss$a; bind
	a (Lsw;)Lss$a; bind
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lst; chat
	b ()Lst; narration
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
ss$a net/minecraft/network/chat/ChatType$Bound
	a chatType
	b name
	c targetName
	<init> (Lss;Lsw;)V <init>
	<init> (Lss;Lsw;Lsw;)V <init>
	a (Lsw;)Lsw; decorate
	b (Lsw;)Lsw; decorateNarration
	c (Lsw;)Lss$a; withTargetName
	a (Lhs;)Lss$b; toNetwork
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lss; chatType
	b ()Lsw; name
	c ()Lsw; targetName
ss$b net/minecraft/network/chat/ChatType$BoundNetwork
	a chatType
	b name
	c targetName
	<init> (Lsf;)V <init>
	<init> (ILsw;Lsw;)V <init>
	a (Lsf;)V write
	a (Lhs;)Ljava/util/Optional; resolve
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I chatType
	b ()Lsw; name
	c ()Lsw; targetName
	a (Lss;)Lss$a; lambda$resolve$0
st net/minecraft/network/chat/ChatTypeDecoration
	b translationKey
	c parameters
	d style
	a CODEC
	<init> (Ljava/lang/String;Ljava/util/List;Lts;)V <init>
	a (Ljava/lang/String;)Lst; withSender
	b (Ljava/lang/String;)Lst; incomingDirectMessage
	c (Ljava/lang/String;)Lst; outgoingDirectMessage
	d (Ljava/lang/String;)Lst; teamMessage
	a (Lsw;Lss$a;)Lsw; decorate
	b (Lsw;Lss$a;)[Lsw; resolveParameters
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; translationKey
	b ()Ljava/util/List; parameters
	c ()Lts; style
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
st$a net/minecraft/network/chat/ChatTypeDecoration$Parameter
	a SENDER
	b TARGET
	c CONTENT
	d CODEC
	e name
	f selector
	g $VALUES
	values ()[Lst$a; values
	valueOf (Ljava/lang/String;)Lst$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lst$a$a;)V <init>
	a (Lsw;Lss$a;)Lsw; select
	c ()Ljava/lang/String; getSerializedName
	b (Lsw;Lss$a;)Lsw; lambda$static$2
	c (Lsw;Lss$a;)Lsw; lambda$static$1
	d (Lsw;Lss$a;)Lsw; lambda$static$0
	a ()[Lst$a; $values
	<clinit> ()V <clinit>
st$a$a net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
	select (Lsw;Lss$a;)Lsw; select
su net/minecraft/network/chat/ClickEvent
	a action
	b value
	<init> (Lsu$a;Ljava/lang/String;)V <init>
	a ()Lsu$a; getAction
	b ()Ljava/lang/String; getValue
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
su$a net/minecraft/network/chat/ClickEvent$Action
	a OPEN_URL
	b OPEN_FILE
	c RUN_COMMAND
	d SUGGEST_COMMAND
	e CHANGE_PAGE
	f COPY_TO_CLIPBOARD
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	values ()[Lsu$a; values
	valueOf (Ljava/lang/String;)Lsu$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Z)V <init>
	a ()Z isAllowedFromServer
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lsu$a; getByName
	a (Lsu$a;)Lsu$a; lambda$static$0
	c ()[Lsu$a; $values
	<clinit> ()V <clinit>
sv net/minecraft/network/chat/CommonComponents
	a EMPTY
	b OPTION_ON
	c OPTION_OFF
	d GUI_DONE
	e GUI_CANCEL
	f GUI_YES
	g GUI_NO
	h GUI_OK
	i GUI_PROCEED
	j GUI_CONTINUE
	k GUI_BACK
	l GUI_TO_TITLE
	m GUI_ACKNOWLEDGE
	n GUI_OPEN_IN_BROWSER
	o GUI_COPY_LINK_TO_CLIPBOARD
	p CONNECT_FAILED
	q NEW_LINE
	r NARRATION_SEPARATOR
	s ELLIPSIS
	t SPACE
	<init> ()V <init>
	a ()Ltj; space
	a (J)Ltj; days
	b (J)Ltj; hours
	c (J)Ltj; minutes
	a (Z)Lsw; optionStatus
	a (Lsw;Z)Ltj; optionStatus
	a (Lsw;Lsw;)Ltj; optionNameValue
	a ([Lsw;)Ltj; joinForNarration
	b ([Lsw;)Lsw; joinLines
	a (Ljava/util/Collection;)Lsw; joinLines
	<clinit> ()V <clinit>
sw net/minecraft/network/chat/Component
	a ()Lts; getStyle
	b ()Lsx; getContents
	getString ()Ljava/lang/String; getString
	a (I)Ljava/lang/String; getString
	c ()Ljava/util/List; getSiblings
	d ()Ltj; plainCopy
	e ()Ltj; copy
	f ()Laom; getVisualOrderText
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	a (Lta$a;)Ljava/util/Optional; visit
	g ()Ljava/util/List; toFlatList
	a (Lts;)Ljava/util/List; toFlatList
	a (Lsw;)Z contains
	a (Ljava/lang/String;)Lsw; nullToEmpty
	b (Ljava/lang/String;)Ltj; literal
	c (Ljava/lang/String;)Ltj; translatable
	a (Ljava/lang/String;[Ljava/lang/Object;)Ltj; translatable
	a (Ljava/lang/String;Ljava/lang/String;)Ltj; translatableWithFallback
	a (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ltj; translatableWithFallback
	h ()Ltj; empty
	d (Ljava/lang/String;)Ltj; keybind
	a (Ljava/lang/String;ZLjava/util/Optional;Ltx;)Ltj; nbt
	b (Ljava/lang/String;Ljava/lang/String;)Ltj; score
	a (Ljava/lang/String;Ljava/util/Optional;)Ltj; selector
	a (Ljava/util/List;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$toFlatList$1
	a (ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
sw$a net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltj; deserialize
	a (Ljava/lang/Object;)Ljava/lang/Object; unwrapTextArgument
	a (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; parseSeparator
	a (Lts;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lsw;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V serializeSeparator
	a (Lsw;)Ljava/lang/String; toJson
	b (Lsw;)Ljava/lang/String; toStableJson
	c (Lsw;)Lcom/google/gson/JsonElement; toJsonTree
	a (Ljava/lang/String;)Ltj; fromJson
	a (Lcom/google/gson/JsonElement;)Ltj; fromJson
	b (Ljava/lang/String;)Ltj; fromJsonLenient
	a (Lcom/mojang/brigadier/StringReader;)Ltj; fromJson
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lsw;)V lambda$serializeSeparator$3
	a ()Ljava/lang/reflect/Field; lambda$static$2
	b ()Ljava/lang/reflect/Field; lambda$static$1
	c ()Lcom/google/gson/Gson; lambda$static$0
	<clinit> ()V <clinit>
sx net/minecraft/network/chat/ComponentContents
	a EMPTY
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lds;Lbfj;I)Ltj; resolve
	<clinit> ()V <clinit>
sx$1 net/minecraft/network/chat/ComponentContents$1
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
sy net/minecraft/network/chat/ComponentUtils
	a DEFAULT_SEPARATOR_TEXT
	b DEFAULT_SEPARATOR
	c DEFAULT_NO_STYLE_SEPARATOR
	<init> ()V <init>
	a (Ltj;Lts;)Ltj; mergeStyles
	a (Lds;Ljava/util/Optional;Lbfj;I)Ljava/util/Optional; updateForEntity
	a (Lds;Lsw;Lbfj;I)Ltj; updateForEntity
	a (Lds;Lts;Lbfj;I)Lts; resolveStyle
	a (Lcom/mojang/authlib/GameProfile;)Lsw; getDisplayName
	a (Ljava/util/Collection;)Lsw; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lsw; formatAndSortList
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lsw; formatList
	a (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Ltj; formatList
	a (Ljava/util/Collection;Lsw;)Lsw; formatList
	a (Ljava/util/Collection;Lsw;Ljava/util/function/Function;)Ltj; formatList
	a (Lsw;)Ltj; wrapInSquareBrackets
	a (Lcom/mojang/brigadier/Message;)Lsw; fromMessage
	b (Lsw;)Z isTranslationResolvable
	a (Ljava/lang/String;)Ltj; copyOnClickText
	a (Ljava/lang/String;Lts;)Lts; lambda$copyOnClickText$1
	b (Ljava/lang/String;)Lsw; lambda$formatList$0
	<clinit> ()V <clinit>
sz net/minecraft/network/chat/FilterMask
	a CODEC
	b FULLY_FILTERED
	c PASS_THROUGH
	d FILTERED_STYLE
	e PASS_THROUGH_CODEC
	f FULLY_FILTERED_CODEC
	g PARTIALLY_FILTERED_CODEC
	h HASH
	i mask
	j type
	<init> (Ljava/util/BitSet;Lsz$a;)V <init>
	<init> (Ljava/util/BitSet;)V <init>
	<init> (I)V <init>
	c ()Lsz$a; type
	d ()Ljava/util/BitSet; mask
	a (Lsf;)Lsz; read
	a (Lsf;Lsz;)V write
	a (I)V setFiltered
	a (Ljava/lang/String;)Ljava/lang/String; apply
	b (Ljava/lang/String;)Lsw; applyWithFormatting
	a ()Z isEmpty
	b ()Z isFullyFiltered
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<clinit> ()V <clinit>
sz$1 net/minecraft/network/chat/FilterMask$1
	a $SwitchMap$net$minecraft$network$chat$FilterMask$Type
	<clinit> ()V <clinit>
sz$a net/minecraft/network/chat/FilterMask$Type
	a PASS_THROUGH
	b FULLY_FILTERED
	c PARTIALLY_FILTERED
	d serializedName
	e codec
	f $VALUES
	values ()[Lsz$a; values
	valueOf (Ljava/lang/String;)Lsz$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Lcom/mojang/serialization/Codec; codec
	b ()Lcom/mojang/serialization/Codec; lambda$static$2
	d ()Lcom/mojang/serialization/Codec; lambda$static$1
	e ()Lcom/mojang/serialization/Codec; lambda$static$0
	f ()[Lsz$a; $values
	<clinit> ()V <clinit>
ta net/minecraft/network/chat/FormattedText
	a STOP_ITERATION
	b EMPTY
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	e (Ljava/lang/String;)Lta; of
	a (Ljava/lang/String;Lts;)Lta; of
	a ([Lta;)Lta; composite
	a (Ljava/util/List;)Lta; composite
	getString ()Ljava/lang/String; getString
	a (Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional; lambda$getString$0
	<clinit> ()V <clinit>
ta$1 net/minecraft/network/chat/FormattedText$1
	<init> ()V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
ta$2 net/minecraft/network/chat/FormattedText$2
	c val$text
	<init> (Ljava/lang/String;)V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
ta$3 net/minecraft/network/chat/FormattedText$3
	c val$text
	d val$style
	<init> (Ljava/lang/String;Lts;)V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
ta$4 net/minecraft/network/chat/FormattedText$4
	c val$parts
	<init> (Ljava/util/List;)V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
ta$a net/minecraft/network/chat/FormattedText$ContentConsumer
	accept (Ljava/lang/String;)Ljava/util/Optional; accept
ta$b net/minecraft/network/chat/FormattedText$StyledContentConsumer
	accept (Lts;Ljava/lang/String;)Ljava/util/Optional; accept
tb net/minecraft/network/chat/HoverEvent
	a LOGGER
	b action
	c value
	<init> (Ltb$a;Ljava/lang/Object;)V <init>
	a ()Ltb$a; getAction
	a (Ltb$a;)Ljava/lang/Object; getValue
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	a (Lcom/google/gson/JsonObject;)Ltb; deserialize
	b ()Lcom/google/gson/JsonObject; serialize
	<clinit> ()V <clinit>
tb$a net/minecraft/network/chat/HoverEvent$Action
	a SHOW_TEXT
	b SHOW_ITEM
	c SHOW_ENTITY
	d LOOKUP
	e name
	f allowFromServer
	g argDeserializer
	h argSerializer
	i legacyArgDeserializer
	<init> (Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	a ()Z isAllowedFromServer
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ltb$a; getByName
	b (Ljava/lang/Object;)Ljava/lang/Object; cast
	a (Lcom/google/gson/JsonElement;)Ltb; deserialize
	a (Lsw;)Ltb; deserializeFromLegacy
	a (Ljava/lang/Object;)Lcom/google/gson/JsonElement; serializeArg
	toString ()Ljava/lang/String; toString
	a (Ltb$a;)Ltb$a; lambda$static$0
	<clinit> ()V <clinit>
tb$b net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	a type
	b id
	c name
	d linesCache
	<init> (Lbfn;Ljava/util/UUID;Lsw;)V <init>
	a (Lcom/google/gson/JsonElement;)Ltb$b; create
	a (Lsw;)Ltb$b; create
	a ()Lcom/google/gson/JsonElement; serialize
	b ()Ljava/util/List; getTooltipLines
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
tb$c net/minecraft/network/chat/HoverEvent$ItemStackInfo
	a item
	b count
	c tag
	d itemStack
	<init> (Lcfu;ILqr;)V <init>
	<init> (Lcfz;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Lcfz; getItemStack
	a (Lcom/google/gson/JsonElement;)Ltb$c; create
	a (Lsw;)Ltb$c; create
	b ()Lcom/google/gson/JsonElement; serialize
tc net/minecraft/network/chat/LastSeenMessages
	d entries
	a CODEC
	b EMPTY
	c LAST_SEEN_MESSAGES_MAX_LENGTH
	<init> (Ljava/util/List;)V <init>
	a (Lapi$a;)V updateSignature
	a (Lti;)Ltc$a; pack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; entries
	a (Lti;Lth;)Lth$a; lambda$pack$0
	<clinit> ()V <clinit>
tc$a net/minecraft/network/chat/LastSeenMessages$Packed
	b entries
	a EMPTY
	<init> (Lsf;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Lsf;)V write
	a (Lti;)Ljava/util/Optional; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; entries
	<clinit> ()V <clinit>
tc$b net/minecraft/network/chat/LastSeenMessages$Update
	a offset
	b acknowledged
	<init> (Lsf;)V <init>
	<init> (ILjava/util/BitSet;)V <init>
	a (Lsf;)V write
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I offset
	b ()Ljava/util/BitSet; acknowledged
td net/minecraft/network/chat/LastSeenMessagesTracker
	a trackedMessages
	b tail
	c offset
	d lastTrackedMessage
	<init> (I)V <init>
	a (Lth;Z)Z addPending
	a (Ltf;)V addEntry
	a (Lth;)V ignorePending
	a ()I getAndClearOffset
	b ()Ltd$a; generateAndApplyUpdate
	c ()I offset
td$a net/minecraft/network/chat/LastSeenMessagesTracker$Update
	a lastSeen
	b update
	<init> (Ltc;Ltc$b;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ltc; lastSeen
	b ()Ltc$b; update
te net/minecraft/network/chat/LastSeenMessagesValidator
	a lastSeenCount
	b trackedMessages
	c lastPendingMessage
	<init> (I)V <init>
	a (Lth;)V addPending
	a ()I trackedMessagesCount
	a (I)Z applyOffset
	a (Ltc$b;)Ljava/util/Optional; applyUpdate
tf net/minecraft/network/chat/LastSeenTrackedEntry
	a signature
	b pending
	<init> (Lth;Z)V <init>
	a ()Ltf; acknowledge
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lth; signature
	c ()Z pending
tg net/minecraft/network/chat/LocalChatSession
	a sessionId
	b keyPair
	<init> (Ljava/util/UUID;Lbyq;)V <init>
	a (Lbyq;)Ltg; create
	a (Ljava/util/UUID;)Ltp$c; createMessageEncoder
	a ()Ltm; asRemote
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/UUID; sessionId
	c ()Lbyq; keyPair
th net/minecraft/network/chat/MessageSignature
	c bytes
	a CODEC
	b BYTES
	<init> ([B)V <init>
	a (Lsf;)Lth; read
	a (Lsf;Lth;)V write
	a (Lapj;Lapi;)Z verify
	a ()Ljava/nio/ByteBuffer; asByteBuffer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lti;)Lth$a; pack
	b ()[B bytes
	<clinit> ()V <clinit>
th$a net/minecraft/network/chat/MessageSignature$Packed
	b id
	c fullSignature
	a FULL_SIGNATURE
	<init> (Lth;)V <init>
	<init> (I)V <init>
	<init> (ILth;)V <init>
	a (Lsf;)Lth$a; read
	a (Lsf;Lth$a;)V write
	a (Lti;)Ljava/util/Optional; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I id
	b ()Lth; fullSignature
ti net/minecraft/network/chat/MessageSignatureCache
	a NOT_FOUND
	b DEFAULT_CAPACITY
	c entries
	<init> (I)V <init>
	a ()Lti; createDefault
	a (Lth;)I pack
	a (I)Lth; unpack
	a (Ltl;)V push
	a (Ljava/util/List;)V push
	a (Ljava/util/ArrayDeque;)V push
tj net/minecraft/network/chat/MutableComponent
	c contents
	d siblings
	e style
	f visualOrderText
	g decomposedWith
	<init> (Lsx;Ljava/util/List;Lts;)V <init>
	a (Lsx;)Ltj; create
	b ()Lsx; getContents
	c ()Ljava/util/List; getSiblings
	b (Lts;)Ltj; setStyle
	a ()Lts; getStyle
	f (Ljava/lang/String;)Ltj; append
	b (Lsw;)Ltj; append
	a (Ljava/util/function/UnaryOperator;)Ltj; withStyle
	c (Lts;)Ltj; withStyle
	a ([Ln;)Ltj; withStyle
	a (Ln;)Ltj; withStyle
	f ()Laom; getVisualOrderText
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
tk net/minecraft/network/chat/OutgoingChatMessage
	a ()Lsw; content
	a (Laig;ZLss$a;)V sendToPlayer
	a (Ltl;)Ltk; create
tk$a net/minecraft/network/chat/OutgoingChatMessage$Disguised
	a content
	<init> (Lsw;)V <init>
	a ()Lsw; content
	a (Laig;ZLss$a;)V sendToPlayer
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
tk$b net/minecraft/network/chat/OutgoingChatMessage$Player
	a message
	<init> (Ltl;)V <init>
	a ()Lsw; content
	a (Laig;ZLss$a;)V sendToPlayer
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ltl; message
tl net/minecraft/network/chat/PlayerChatMessage
	d link
	e signature
	f signedBody
	g unsignedContent
	h filterMask
	a MAP_CODEC
	i SYSTEM_SENDER
	b MESSAGE_EXPIRES_AFTER_SERVER
	c MESSAGE_EXPIRES_AFTER_CLIENT
	<init> (Ltq;Lth;Lto;Lsw;Lsz;)V <init>
	a (Ljava/lang/String;)Ltl; system
	a (Ljava/util/UUID;Ljava/lang/String;)Ltl; unsigned
	a (Lsw;)Ltl; withUnsignedContent
	a ()Ltl; removeUnsignedContent
	a (Lsz;)Ltl; filter
	a (Z)Ltl; filter
	a (Lapi$a;Ltq;Lto;)V updateSignature
	a (Lapj;)Z verify
	b ()Ljava/lang/String; signedContent
	c ()Lsw; decoratedContent
	d ()Ljava/time/Instant; timeStamp
	e ()J salt
	a (Ljava/time/Instant;)Z hasExpiredServer
	b (Ljava/time/Instant;)Z hasExpiredClient
	f ()Ljava/util/UUID; sender
	g ()Z isSystem
	h ()Z hasSignature
	a (Ljava/util/UUID;)Z hasSignatureFrom
	i ()Z isFullyFiltered
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ltq; link
	k ()Lth; signature
	l ()Lto; signedBody
	m ()Lsw; unsignedContent
	n ()Lsz; filterMask
	o ()Lsw; lambda$decoratedContent$5
	a (Lapi$a;)V lambda$verify$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ltq;Ljava/util/Optional;Lto;Ljava/util/Optional;Lsz;)Ltl; lambda$static$2
	a (Ltl;)Ljava/util/Optional; lambda$static$1
	b (Ltl;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
tm net/minecraft/network/chat/RemoteChatSession
	a sessionId
	b profilePublicKey
	<init> (Ljava/util/UUID;Lbyr;)V <init>
	a ()Ltr; createMessageValidator
	a (Ljava/util/UUID;)Ltp$b; createMessageDecoder
	b ()Ltm$a; asData
	c ()Z hasExpired
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Ljava/util/UUID; sessionId
	e ()Lbyr; profilePublicKey
tm$a net/minecraft/network/chat/RemoteChatSession$Data
	a sessionId
	b profilePublicKey
	<init> (Ljava/util/UUID;Lbyr$a;)V <init>
	a (Lsf;)Ltm$a; read
	a (Lsf;Ltm$a;)V write
	a (Lcom/mojang/authlib/GameProfile;Lapj;Ljava/time/Duration;)Ltm; validate
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; sessionId
	b ()Lbyr$a; profilePublicKey
tn net/minecraft/network/chat/SignableCommand
	a arguments
	<init> (Ljava/util/List;)V <init>
	a (Lcom/mojang/brigadier/ParseResults;)Ltn; of
	a (Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; collectArguments
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; arguments
tn$a net/minecraft/network/chat/SignableCommand$Argument
	a node
	b value
	<init> (Lcom/mojang/brigadier/tree/ArgumentCommandNode;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; name
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; node
	c ()Ljava/lang/String; value
to net/minecraft/network/chat/SignedMessageBody
	b content
	c timeStamp
	d salt
	e lastSeen
	a MAP_CODEC
	<init> (Ljava/lang/String;Ljava/time/Instant;JLtc;)V <init>
	a (Ljava/lang/String;)Lto; unsigned
	a (Lapi$a;)V updateSignature
	a (Lti;)Lto$a; pack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; content
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Ltc; lastSeen
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
to$a net/minecraft/network/chat/SignedMessageBody$Packed
	a content
	b timeStamp
	c salt
	d lastSeen
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;Ljava/time/Instant;JLtc$a;)V <init>
	a (Lsf;)V write
	a (Lti;)Ljava/util/Optional; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; content
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Ltc$a; lastSeen
	a (Ltc;)Lto; lambda$unpack$0
tp net/minecraft/network/chat/SignedMessageChain
	a LOGGER
	b nextLink
	<init> (Ljava/util/UUID;Ljava/util/UUID;)V <init>
	a (Lapk;)Ltp$c; encoder
	a (Lbyr;)Ltp$b; decoder
	a ()Ltq; advanceLink
	a (Lbyr;Lapj;Lth;Lto;)Ltl; lambda$decoder$2
	a (Lapk;Lto;)Lth; lambda$encoder$1
	a (Ltq;Lto;Lapi$a;)V lambda$encoder$0
	<clinit> ()V <clinit>
tp$a net/minecraft/network/chat/SignedMessageChain$DecodeException
	a shouldDisconnect
	<init> (Lsw;Z)V <init>
	a ()Z shouldDisconnect
tp$b net/minecraft/network/chat/SignedMessageChain$Decoder
	a REJECT_ALL
	unsigned (Ljava/util/UUID;)Ltp$b; unsigned
	unpack (Lth;Lto;)Ltl; unpack
	a (Ljava/util/UUID;Lth;Lto;)Ltl; lambda$unsigned$1
	a (Lth;Lto;)Ltl; lambda$static$0
	<clinit> ()V <clinit>
tp$c net/minecraft/network/chat/SignedMessageChain$Encoder
	a UNSIGNED
	pack (Lto;)Lth; pack
	a (Lto;)Lth; lambda$static$0
	<clinit> ()V <clinit>
tq net/minecraft/network/chat/SignedMessageLink
	b index
	c sender
	d sessionId
	a CODEC
	<init> (ILjava/util/UUID;Ljava/util/UUID;)V <init>
	a (Ljava/util/UUID;)Ltq; unsigned
	a (Ljava/util/UUID;Ljava/util/UUID;)Ltq; root
	a (Lapi$a;)V updateSignature
	a (Ltq;)Z isDescendantOf
	a ()Ltq; advance
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I index
	c ()Ljava/util/UUID; sender
	d ()Ljava/util/UUID; sessionId
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
tr net/minecraft/network/chat/SignedMessageValidator
	a ACCEPT_UNSIGNED
	b REJECT_ALL
	updateAndValidate (Ltl;)Z updateAndValidate
	a (Ltl;)Z lambda$static$1
	b (Ltl;)Z lambda$static$0
	<clinit> ()V <clinit>
tr$a net/minecraft/network/chat/SignedMessageValidator$KeyBased
	c validator
	d lastMessage
	e isChainValid
	<init> (Lapj;)V <init>
	a (Ltl;)Z validateChain
	updateAndValidate (Ltl;)Z updateAndValidate
ts net/minecraft/network/chat/Style
	a EMPTY
	b FORMATTING_CODEC
	c DEFAULT_FONT
	d color
	e bold
	f italic
	g underlined
	h strikethrough
	i obfuscated
	j clickEvent
	k hoverEvent
	l insertion
	m font
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lts; create
	<init> (Ltu;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lsu;Ltb;Ljava/lang/String;Lacq;)V <init>
	a ()Ltu; getColor
	b ()Z isBold
	c ()Z isItalic
	d ()Z isStrikethrough
	e ()Z isUnderlined
	f ()Z isObfuscated
	g ()Z isEmpty
	h ()Lsu; getClickEvent
	i ()Ltb; getHoverEvent
	j ()Ljava/lang/String; getInsertion
	k ()Lacq; getFont
	a (Ltu;)Lts; withColor
	a (Ln;)Lts; withColor
	a (I)Lts; withColor
	a (Ljava/lang/Boolean;)Lts; withBold
	b (Ljava/lang/Boolean;)Lts; withItalic
	c (Ljava/lang/Boolean;)Lts; withUnderlined
	d (Ljava/lang/Boolean;)Lts; withStrikethrough
	e (Ljava/lang/Boolean;)Lts; withObfuscated
	a (Lsu;)Lts; withClickEvent
	a (Ltb;)Lts; withHoverEvent
	a (Ljava/lang/String;)Lts; withInsertion
	a (Lacq;)Lts; withFont
	b (Ln;)Lts; applyFormat
	c (Ln;)Lts; applyLegacyFormat
	a ([Ln;)Lts; applyFormats
	a (Lts;)Lts; applyTo
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$8
	b (Lts;)Ljava/util/Optional; lambda$static$7
	c (Lts;)Ljava/util/Optional; lambda$static$6
	d (Lts;)Ljava/util/Optional; lambda$static$5
	e (Lts;)Ljava/util/Optional; lambda$static$4
	f (Lts;)Ljava/util/Optional; lambda$static$3
	g (Lts;)Ljava/util/Optional; lambda$static$2
	h (Lts;)Ljava/util/Optional; lambda$static$1
	i (Lts;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
ts$1 net/minecraft/network/chat/Style$1
	a $SwitchMap$net$minecraft$ChatFormatting
	<clinit> ()V <clinit>
ts$a net/minecraft/network/chat/Style$1Collector
	c isNotFirst
	a val$result
	b this$0
	<init> (Lts;Ljava/lang/StringBuilder;)V <init>
	a ()V prependSeparator
	a (Ljava/lang/String;Ljava/lang/Boolean;)V addFlagString
	a (Ljava/lang/String;Ljava/lang/Object;)V addValueString
ts$b net/minecraft/network/chat/Style$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lts; deserialize
	a (Lcom/google/gson/JsonObject;)Lacq; getFont
	b (Lcom/google/gson/JsonObject;)Ltb; getHoverEvent
	c (Lcom/google/gson/JsonObject;)Lsu; getClickEvent
	d (Lcom/google/gson/JsonObject;)Ljava/lang/String; getInsertion
	e (Lcom/google/gson/JsonObject;)Ltu; getTextColor
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalFlag
	a (Lts;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
tt net/minecraft/network/chat/SubStringSource
	a plainText
	b charStyles
	c reverseCharModifier
	<init> (Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V <init>
	a ()Ljava/lang/String; getPlainText
	a (IIZ)Ljava/util/List; substring
	a (Lta;)Ltt; create
	a (Lta;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Ltt; create
	a (Ljava/lang/StringBuilder;Ljava/util/List;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$create$3
	a (Ljava/lang/StringBuilder;Ljava/util/List;ILts;I)Z lambda$create$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$create$1
	a (I)I lambda$create$0
tu net/minecraft/network/chat/TextColor
	b CUSTOM_COLOR_PREFIX
	a CODEC
	c LEGACY_FORMAT_TO_COLOR
	d NAMED_COLORS
	e value
	f name
	<init> (ILjava/lang/String;)V <init>
	<init> (I)V <init>
	a ()I getValue
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; formatValue
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Ln;)Ltu; fromLegacyFormat
	a (I)Ltu; fromRgb
	a (Ljava/lang/String;)Ltu; parseColor
	a (Ltu;)Ljava/lang/String; lambda$static$3
	b (Ln;)Ltu; lambda$static$2
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$1
	d ()Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
tv net/minecraft/network/chat/ThrowingComponent
	a component
	<init> (Lsw;)V <init>
	<init> (Lsw;Ljava/lang/Throwable;)V <init>
	b ()Lsw; getComponent
tw net/minecraft/network/chat/contents/BlockDataSource
	a posPattern
	b compiledPos
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lfk;)V <init>
	a (Ljava/lang/String;)Lfk; compilePos
	getData (Lds;)Ljava/util/stream/Stream; getData
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/lang/String; posPattern
	b ()Lfk; compiledPos
tx net/minecraft/network/chat/contents/DataSource
	getData (Lds;)Ljava/util/stream/Stream; getData
ty net/minecraft/network/chat/contents/EntityDataSource
	a selectorPattern
	b compiledSelector
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Lga;)V <init>
	a (Ljava/lang/String;)Lga; compileSelector
	getData (Lds;)Ljava/util/stream/Stream; getData
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/lang/String; selectorPattern
	b ()Lga; compiledSelector
tz net/minecraft/network/chat/contents/KeybindContents
	b name
	c nameResolver
	<init> (Ljava/lang/String;)V <init>
	b ()Lsw; getNestedComponent
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getName
ua net/minecraft/network/chat/contents/KeybindResolver
	a keyResolver
	<init> ()V <init>
	a (Ljava/util/function/Function;)V setKeyResolver
	a (Ljava/lang/String;)Ljava/util/function/Supplier; lambda$static$1
	b (Ljava/lang/String;)Lsw; lambda$static$0
	<clinit> ()V <clinit>
ub net/minecraft/network/chat/contents/LiteralContents
	b text
	<init> (Ljava/lang/String;)V <init>
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; text
uc net/minecraft/network/chat/contents/NbtContents
	c LOGGER
	d interpreting
	e separator
	f nbtPathPattern
	g dataSource
	b compiledNbtPath
	<init> (Ljava/lang/String;ZLjava/util/Optional;Ltx;)V <init>
	<init> (Ljava/lang/String;Leh$g;ZLjava/util/Optional;Ltx;)V <init>
	a (Ljava/lang/String;)Leh$g; compileNbtPath
	a ()Ljava/lang/String; getNbtPath
	b ()Z isInterpreting
	c ()Ljava/util/Optional; getSeparator
	d ()Ltx; getDataSource
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Lds;Lbfj;I)Ltj; resolve
	a (Ljava/util/stream/Stream;)Ltj; lambda$resolve$5
	a (Ljava/util/stream/Stream;Ltj;)Ltj; lambda$resolve$4
	a (Ltj;Ltj;Ltj;)Ltj; lambda$resolve$3
	a (Lsw;Ltj;Ltj;)Ltj; lambda$resolve$2
	a (Lds;Lbfj;ILjava/lang/String;)Ljava/util/stream/Stream; lambda$resolve$1
	a (Lqr;)Ljava/util/stream/Stream; lambda$resolve$0
	<clinit> ()V <clinit>
ud net/minecraft/network/chat/contents/ScoreContents
	b SCORER_PLACEHOLDER
	c name
	d selector
	e objective
	a (Ljava/lang/String;)Lga; parseSelector
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	b ()Lga; getSelector
	c ()Ljava/lang/String; getObjective
	a (Lds;)Ljava/lang/String; findTargetName
	a (Ljava/lang/String;Lds;)Ljava/lang/String; getScore
	a (Lds;Lbfj;I)Ltj; resolve
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
ue net/minecraft/network/chat/contents/SelectorContents
	c LOGGER
	d pattern
	e selector
	b separator
	<init> (Ljava/lang/String;Ljava/util/Optional;)V <init>
	a (Ljava/lang/String;)Lga; parseSelector
	a ()Ljava/lang/String; getPattern
	b ()Lga; getSelector
	c ()Ljava/util/Optional; getSeparator
	a (Lds;Lbfj;I)Ltj; resolve
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	a (Lta$a;)Ljava/util/Optional; visit
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
uf net/minecraft/network/chat/contents/StorageDataSource
	a id
	<init> (Lacq;)V <init>
	getData (Lds;)Ljava/util/stream/Stream; getData
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; id
ug net/minecraft/network/chat/contents/TranslatableContents
	b NO_ARGS
	c TEXT_PERCENT
	d TEXT_NULL
	e key
	f fallback
	g args
	h decomposedWith
	i decomposedParts
	j FORMAT_PATTERN
	<init> (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V <init>
	d ()V decompose
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V decomposeTemplate
	a (I)Lta; getArgument
	a (Lta$b;Lts;)Ljava/util/Optional; visit
	a (Lta$a;)Ljava/util/Optional; visit
	a (Lds;Lbfj;I)Ltj; resolve
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getFallback
	c ()[Ljava/lang/Object; getArgs
	<clinit> ()V <clinit>
uh net/minecraft/network/chat/contents/TranslatableFormatException
	<init> (Lug;Ljava/lang/String;)V <init>
	<init> (Lug;I)V <init>
	<init> (Lug;Ljava/lang/Throwable;)V <init>
ui net/minecraft/network/chat/contents/package-info
uj net/minecraft/network/chat/package-info
uk net/minecraft/network/package-info
ul net/minecraft/network/protocol/BundleDelimiterPacket
	<init> ()V <init>
	a (Lsf;)V write
	a (Lsk;)V handle
um net/minecraft/network/protocol/BundlePacket
	a packets
	<init> (Ljava/lang/Iterable;)V <init>
	a ()Ljava/lang/Iterable; subPackets
	a (Lsf;)V write
un net/minecraft/network/protocol/BundlerInfo
	a BUNDLER_PROVIDER
	b BUNDLE_SIZE_LIMIT
	c EMPTY
	a (Ljava/lang/Class;Ljava/util/function/Function;Lul;)Lun; createForPacket
	a (Luo;Ljava/util/function/Consumer;)V unbundlePacket
	a (Luo;)Lun$a; startPacketBundling
	<clinit> ()V <clinit>
un$1 net/minecraft/network/protocol/BundlerInfo$1
	<init> ()V <init>
	a (Luo;Ljava/util/function/Consumer;)V unbundlePacket
	a (Luo;)Lun$a; startPacketBundling
un$2 net/minecraft/network/protocol/BundlerInfo$2
	d val$bundlePacketCls
	e val$delimiterPacket
	f val$constructor
	<init> (Ljava/lang/Class;Lul;Ljava/util/function/Function;)V <init>
	a (Luo;Ljava/util/function/Consumer;)V unbundlePacket
	a (Luo;)Lun$a; startPacketBundling
un$2$1 net/minecraft/network/protocol/BundlerInfo$2$1
	b bundlePackets
	a this$0
	<init> (Lun$2;)V <init>
	a (Luo;)Luo; addPacket
un$a net/minecraft/network/protocol/BundlerInfo$Bundler
	a (Luo;)Luo; addPacket
un$b net/minecraft/network/protocol/BundlerInfo$Provider
	a (Lup;)Lun; getBundlerInfo
uo net/minecraft/network/protocol/Packet
	a (Lsf;)V write
	a (Lsk;)V handle
	b ()Z isSkippable
up net/minecraft/network/protocol/PacketFlow
	a SERVERBOUND
	b CLIENTBOUND
	c $VALUES
	values ()[Lup; values
	valueOf (Ljava/lang/String;)Lup; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lup; getOpposite
	b ()[Lup; $values
	<clinit> ()V <clinit>
uq net/minecraft/network/protocol/PacketUtils
	a LOGGER
	<init> ()V <init>
	a (Luo;Lsk;Laif;)V ensureRunningOnSameThread
	a (Luo;Lsk;Lbcn;)V ensureRunningOnSameThread
	a (Lsk;Luo;)V lambda$ensureRunningOnSameThread$0
	<clinit> ()V <clinit>
ur net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lus;)V handleAddEntity
	a (Lut;)V handleAddExperienceOrb
	a (Lyc;)V handleAddObjective
	a (Luu;)V handleAddPlayer
	a (Luv;)V handleAnimate
	a (Lvz;)V handleHurtAnimation
	a (Luw;)V handleAwardStats
	a (Lxb;)V handleAddOrRemoveRecipes
	a (Luy;)V handleBlockDestruction
	a (Lwp;)V handleOpenSignEditor
	a (Luz;)V handleBlockEntityData
	a (Lva;)V handleBlockEvent
	a (Lvb;)V handleBlockUpdate
	a (Lyo;)V handleSystemChat
	a (Lwt;)V handlePlayerChat
	a (Lvt;)V handleDisguisedChat
	a (Lvr;)V handleDeleteChat
	a (Lxh;)V handleChunkBlocksUpdate
	a (Lwj;)V handleMapItemData
	a (Lvj;)V handleContainerClose
	a (Lvk;)V handleContainerContent
	a (Lvy;)V handleHorseScreenOpen
	a (Lvl;)V handleContainerSetData
	a (Lvm;)V handleContainerSetSlot
	a (Lvp;)V handleCustomPayload
	a (Lvs;)V handleDisconnect
	a (Lvu;)V handleEntityEvent
	a (Lxx;)V handleEntityLinkPacket
	a (Lyd;)V handleSetEntityPassengersPacket
	a (Lvv;)V handleExplosion
	a (Lvx;)V handleGameEvent
	a (Lwb;)V handleKeepAlive
	a (Lwd;)V handleLevelChunkWithLight
	a (Lvf;)V handleChunksBiomes
	a (Lvw;)V handleForgetLevelChunk
	a (Lwe;)V handleLevelEvent
	a (Lwi;)V handleLogin
	a (Lwl;)V handleMoveEntity
	a (Lxa;)V handleMovePlayer
	a (Lwf;)V handleParticleEvent
	a (Lwq;)V handlePing
	a (Lws;)V handlePlayerAbilities
	a (Lwx;)V handlePlayerInfoRemove
	a (Lwy;)V handlePlayerInfoUpdate
	a (Lxc;)V handleRemoveEntities
	a (Lxd;)V handleRemoveMobEffect
	a (Lxf;)V handleRespawn
	a (Lxg;)V handleRotateMob
	a (Lxr;)V handleSetCarriedItem
	a (Lxv;)V handleSetDisplayObjective
	a (Lxw;)V handleSetEntityData
	a (Lxy;)V handleSetEntityMotion
	a (Lxz;)V handleSetEquipment
	a (Lya;)V handleSetExperience
	a (Lyb;)V handleSetHealth
	a (Lye;)V handleSetPlayerTeamPacket
	a (Lyf;)V handleSetScore
	a (Lxu;)V handleSetSpawn
	a (Lyi;)V handleSetTime
	a (Lym;)V handleSoundEvent
	a (Lyl;)V handleSoundEntityEvent
	a (Lyr;)V handleTakeItemEntity
	a (Lys;)V handleTeleportEntity
	a (Lyu;)V handleUpdateAttributes
	a (Lyw;)V handleUpdateMobEffect
	a (Lyy;)V handleUpdateTags
	a (Lwu;)V handlePlayerCombatEnd
	a (Lwv;)V handlePlayerCombatEnter
	a (Lww;)V handlePlayerCombatKill
	a (Lve;)V handleChangeDifficulty
	a (Lxq;)V handleSetCamera
	a (Lwa;)V handleInitializeBorder
	a (Lxm;)V handleSetBorderLerpSize
	a (Lxn;)V handleSetBorderSize
	a (Lxo;)V handleSetBorderWarningDelay
	a (Lxp;)V handleSetBorderWarningDistance
	a (Lxl;)V handleSetBorderCenter
	a (Lyp;)V handleTabListCustomisation
	a (Lxe;)V handleResourcePack
	a (Lvc;)V handleBossUpdate
	a (Lvn;)V handleItemCooldown
	a (Lwm;)V handleMoveVehicle
	a (Lyt;)V handleUpdateAdvancementsPacket
	a (Lxi;)V handleSelectAdvancementsTab
	a (Lwr;)V handlePlaceRecipe
	a (Lvi;)V handleCommands
	a (Lyn;)V handleStopSoundEvent
	a (Lvh;)V handleCommandSuggestions
	a (Lyx;)V handleUpdateRecipes
	a (Lwz;)V handleLookAt
	a (Lyq;)V handleTagQueryPacket
	a (Lwg;)V handleLightUpdatePacket
	a (Lwn;)V handleOpenBook
	a (Lwo;)V handleOpenScreen
	a (Lwk;)V handleMerchantOffers
	a (Lxt;)V handleSetChunkCacheRadius
	a (Lyg;)V handleSetSimulationDistance
	a (Lxs;)V handleSetChunkCacheCenter
	a (Lux;)V handleBlockChangedAck
	a (Lxk;)V setActionBarText
	a (Lyh;)V setSubtitleText
	a (Lyj;)V setTitleText
	a (Lyk;)V setTitlesAnimation
	a (Lvg;)V handleTitlesClear
	a (Lxj;)V handleServerData
	a (Lvo;)V handleCustomChatCompletions
	a (Lyv;)V handleEnabledFeatures
	a (Lvd;)V handleBundlePacket
	a (Lvq;)V handleDamageEvent
us net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a MAGICAL_QUANTIZATION
	b LIMIT
	c id
	d uuid
	e type
	f x
	g y
	h z
	i xa
	j ya
	k za
	l xRot
	m yRot
	n yHeadRot
	o data
	<init> (Lbfj;)V <init>
	<init> (Lbfj;I)V <init>
	<init> (Lbfj;ILgu;)V <init>
	<init> (ILjava/util/UUID;DDDFFLbfn;ILeei;D)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()Ljava/util/UUID; getUUID
	d ()Lbfn; getType
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()D getXa
	i ()D getYa
	j ()D getZa
	k ()F getXRot
	l ()F getYRot
	m ()F getYHeadRot
	n ()I getData
	a (Lsk;)V handle
ut net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	<init> (Lbfp;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
	a (Lsk;)V handle
uu net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	<init> (Lbyo;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getEntityId
	c ()Ljava/util/UUID; getPlayerId
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
	a (Lsk;)V handle
uv net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a SWING_MAIN_HAND
	b WAKE_UP
	c SWING_OFF_HAND
	d CRITICAL_HIT
	e MAGIC_CRITICAL_HIT
	f id
	g action
	<init> (Lbfj;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()I getAction
	a (Lsk;)V handle
uw net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	<init> (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;Lamq;)Lamo; readStatCap
	a (Lur;)V handle
	a (Lsf;)V write
	a (Lsf;Lamo;)V writeStatCap
	a ()Ljava/util/Map; getStats
	a (Lsk;)V handle
	a (Lsf;Lsf;)Lamo; lambda$new$0
ux net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	a sequence
	<init> (Lsf;)V <init>
	<init> (I)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I sequence
	a (Lsk;)V handle
uy net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	<init> (ILgu;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()Lgu; getPos
	d ()I getProgress
	a (Lsk;)V handle
uz net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a (Lczn;Ljava/util/function/Function;)Luz; create
	a (Lczn;)Luz; create
	<init> (Lgu;Lczp;Lqr;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lgu; getPos
	c ()Lczp; getType
	d ()Lqr; getTag
	a (Lsk;)V handle
va net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	<init> (Lgu;Lcpn;II)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lgu; getPos
	c ()I getB0
	d ()I getB1
	e ()Lcpn; getBlock
	a (Lsk;)V handle
vb net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	b blockState
	<init> (Lgu;Ldcb;)V <init>
	<init> (Lcls;Lgu;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ldcb; getBlockState
	c ()Lgu; getPos
	a (Lsk;)V handle
vc net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a FLAG_DARKEN
	b FLAG_MUSIC
	c FLAG_FOG
	d id
	e operation
	f REMOVE_OPERATION
	<init> (Ljava/util/UUID;Lvc$c;)V <init>
	<init> (Lsf;)V <init>
	a (Lbdn;)Lvc; createAddPacket
	a (Ljava/util/UUID;)Lvc; createRemovePacket
	b (Lbdn;)Lvc; createUpdateProgressPacket
	c (Lbdn;)Lvc; createUpdateNamePacket
	d (Lbdn;)Lvc; createUpdateStylePacket
	e (Lbdn;)Lvc; createUpdatePropertiesPacket
	a (Lsf;)V write
	a (ZZZ)I encodeProperties
	a (Lur;)V handle
	a (Lvc$b;)V dispatch
	a (Lsk;)V handle
	<clinit> ()V <clinit>
vc$1 net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	<init> ()V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$a net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playMusic
	g createWorldFog
	<init> (Lbdn;)V <init>
	<init> (Lsf;)V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$b net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	a (Ljava/util/UUID;Lsw;FLbdn$a;Lbdn$b;ZZZ)V add
	a (Ljava/util/UUID;)V remove
	a (Ljava/util/UUID;F)V updateProgress
	a (Ljava/util/UUID;Lsw;)V updateName
	a (Ljava/util/UUID;Lbdn$a;Lbdn$b;)V updateStyle
	a (Ljava/util/UUID;ZZZ)V updateProperties
vc$c net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$d net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	a ADD
	b REMOVE
	c UPDATE_PROGRESS
	d UPDATE_NAME
	e UPDATE_STYLE
	f UPDATE_PROPERTIES
	g reader
	h $VALUES
	values ()[Lvc$d; values
	valueOf (Ljava/lang/String;)Lvc$d; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Function;)V <init>
	a (Lsf;)Lvc$c; lambda$static$0
	a ()[Lvc$d; $values
	<clinit> ()V <clinit>
vc$e net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	a name
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$f net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	a progress
	<init> (F)V <init>
	<init> (Lsf;)V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$g net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	a darkenScreen
	b playMusic
	c createWorldFog
	<init> (ZZZ)V <init>
	<init> (Lsf;)V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vc$h net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	a color
	b overlay
	<init> (Lbdn$a;Lbdn$b;)V <init>
	<init> (Lsf;)V <init>
	a ()Lvc$d; getType
	a (Ljava/util/UUID;Lvc$b;)V dispatch
	a (Lsf;)V write
vd net/minecraft/network/protocol/game/ClientboundBundlePacket
	<init> (Ljava/lang/Iterable;)V <init>
	a (Lur;)V handle
	a (Lsk;)V handle
ve net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	<init> (Lbdu;Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Z isLocked
	c ()Lbdu; getDifficulty
	a (Lsk;)V handle
vf net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	a chunkBiomeData
	b TWO_MEGABYTES
	<init> (Lsf;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/List;)Lvf; forChunks
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; chunkBiomeData
	a (Lsk;)V handle
	a (Lsf;Lvf$a;)V lambda$write$0
vf$a net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	a pos
	b buffer
	<init> (Ldei;)V <init>
	<init> (Lsf;)V <init>
	<init> (Lclt;[B)V <init>
	a (Ldei;)I calculateChunkSize
	a ()Lsf; getReadBuffer
	d ()Lio/netty/buffer/ByteBuf; getWriteBuffer
	a (Lsf;Ldei;)V extractChunkData
	a (Lsf;)V write
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lclt; pos
	c ()[B buffer
vg net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	a resetTimes
	<init> (Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Z shouldResetTimes
	a (Lsk;)V handle
vh net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	<init> (ILcom/mojang/brigadier/suggestion/Suggestions;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
	a (Lsk;)V handle
	a (Lsf;Lcom/mojang/brigadier/suggestion/Suggestion;)V lambda$write$2
	a (Lsf;Lcom/mojang/brigadier/Message;)V lambda$write$1
	a (Lcom/mojang/brigadier/context/StringRange;Lsf;)Lcom/mojang/brigadier/suggestion/Suggestion; lambda$new$0
vi net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a MASK_TYPE
	b FLAG_EXECUTABLE
	c FLAG_REDIRECT
	d FLAG_CUSTOM_SUGGESTIONS
	e TYPE_ROOT
	f TYPE_LITERAL
	g TYPE_ARGUMENT
	h rootIndex
	i entries
	<init> (Lcom/mojang/brigadier/tree/RootCommandNode;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Ljava/util/List;Ljava/util/function/BiPredicate;)V validateEntries
	a (Ljava/util/List;)V validateEntries
	a (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; enumerateNodes
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; createEntries
	b (Lsf;)Lvi$b; readNode
	a (Lsf;B)Lvi$e; read
	a (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lvi$b; createEntry
	a (Lur;)V handle
	a (Ldm;)Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	a (Lsk;)V handle
	a (Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z lambda$validateEntries$1
	a (Lsf;Lvi$b;)V lambda$write$0
vi$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	a id
	b argumentType
	c suggestionId
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lacq; getSuggestionId
	<init> (Ljava/lang/String;Lgg$a;Lacq;)V <init>
	<init> (Lcom/mojang/brigadier/tree/ArgumentCommandNode;)V <init>
	a (Ldm;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lsf;)V write
	a (Lsf;Lgg$a;)V serializeCap
	a (Lsf;Lgg;Lgg$a;)V serializeCap
vi$b net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a stub
	b flags
	c redirect
	d children
	<init> (Lvi$e;II[I)V <init>
	a (Lsf;)V write
	a (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canBuild
	b (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canResolve
vi$c net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	a id
	<init> (Ljava/lang/String;)V <init>
	a (Ldm;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lsf;)V write
vi$d net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	a context
	b entries
	c nodes
	<init> (Ldm;Ljava/util/List;)V <init>
	a (I)Lcom/mojang/brigadier/tree/CommandNode; resolve
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$resolve$0
vi$e net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	a (Ldm;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lsf;)V write
vj net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	a (Lsk;)V handle
vk net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b stateId
	c items
	d carriedItem
	<init> (IILhn;Lcfz;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()Ljava/util/List; getItems
	d ()Lcfz; getCarriedItem
	e ()I getStateId
	a (Lsk;)V handle
vl net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	<init> (III)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()I getId
	d ()I getValue
	a (Lsk;)V handle
vm net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a CARRIED_ITEM
	b PLAYER_INVENTORY
	c containerId
	d stateId
	e slot
	f itemStack
	<init> (IIILcfz;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()I getSlot
	d ()Lcfz; getItem
	e ()I getStateId
	a (Lsk;)V handle
vn net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	<init> (Lcfu;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lcfu; getItem
	c ()I getDuration
	a (Lsk;)V handle
vo net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	a action
	b entries
	<init> (Lsf;)V <init>
	<init> (Lvo$a;Ljava/util/List;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lvo$a; action
	c ()Ljava/util/List; entries
	a (Lsk;)V handle
vo$a net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	a ADD
	b REMOVE
	c SET
	d $VALUES
	values ()[Lvo$a; values
	valueOf (Ljava/lang/String;)Lvo$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lvo$a; $values
	<clinit> ()V <clinit>
vp net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	s MAX_PAYLOAD_SIZE
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_STRUCTURES_PACKET
	e DEBUG_WORLDGENATTEMPT_PACKET
	f DEBUG_POI_TICKET_COUNT_PACKET
	g DEBUG_POI_ADDED_PACKET
	h DEBUG_POI_REMOVED_PACKET
	i DEBUG_VILLAGE_SECTIONS
	j DEBUG_GOAL_SELECTOR
	k DEBUG_BRAIN
	l DEBUG_BEE
	m DEBUG_HIVE
	n DEBUG_GAME_TEST_ADD_MARKER
	o DEBUG_GAME_TEST_CLEAR
	p DEBUG_RAIDS
	q DEBUG_GAME_EVENT
	r DEBUG_GAME_EVENT_LISTENER
	t identifier
	u data
	<init> (Lacq;Lsf;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lacq; getIdentifier
	c ()Lsf; getData
	a (Lsk;)V handle
	<clinit> ()V <clinit>
vq net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	a entityId
	b sourceTypeId
	c sourceCauseId
	d sourceDirectId
	e sourcePosition
	<init> (Lbfj;Lben;)V <init>
	<init> (Lsf;)V <init>
	<init> (IIIILjava/util/Optional;)V <init>
	a (Lsf;I)V writeOptionalEntityId
	b (Lsf;)I readOptionalEntityId
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lcmm;)Lben; getSource
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I entityId
	c ()I sourceTypeId
	d ()I sourceCauseId
	e ()I sourceDirectId
	f ()Ljava/util/Optional; sourcePosition
	a (Lsk;)V handle
	a (Lsf;Leei;)V lambda$write$1
	c (Lsf;)Leei; lambda$new$0
vr net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	a messageSignature
	<init> (Lsf;)V <init>
	<init> (Lth$a;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lth$a; messageSignature
	a (Lsk;)V handle
vs net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getReason
	a (Lsk;)V handle
vt net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	a message
	b chatType
	<init> (Lsf;)V <init>
	<init> (Lsw;Lss$b;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	b ()Z isSkippable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; message
	c ()Lss$b; chatType
	a (Lsk;)V handle
vu net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	<init> (Lbfj;B)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lcmm;)Lbfj; getEntity
	a ()B getEventId
	a (Lsk;)V handle
vv net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	<init> (DDDFLjava/util/List;Leei;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()F getKnockbackX
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
	a (Lsk;)V handle
	a (IIILsf;Lgu;)V lambda$write$1
	a (IIILsf;)Lgu; lambda$new$0
vw net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	<init> (II)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getX
	c ()I getZ
	a (Lsk;)V handle
vx net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a NO_RESPAWN_BLOCK_AVAILABLE
	b START_RAINING
	c STOP_RAINING
	d CHANGE_GAME_MODE
	e WIN_GAME
	f DEMO_EVENT
	g ARROW_HIT_PLAYER
	h RAIN_LEVEL_CHANGE
	i THUNDER_LEVEL_CHANGE
	j PUFFER_FISH_STING
	k GUARDIAN_ELDER_EFFECT
	l IMMEDIATE_RESPAWN
	m DEMO_PARAM_INTRO
	n DEMO_PARAM_HINT_1
	o DEMO_PARAM_HINT_2
	p DEMO_PARAM_HINT_3
	q DEMO_PARAM_HINT_4
	r event
	s param
	<init> (Lvx$a;F)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lvx$a; getEvent
	c ()F getParam
	a (Lsk;)V handle
	<clinit> ()V <clinit>
vx$a net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	a TYPES
	b id
	<init> (I)V <init>
	<clinit> ()V <clinit>
vy net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	<init> (III)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()I getSize
	d ()I getEntityId
	a (Lsk;)V handle
vz net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	a id
	b yaw
	<init> (Lbfz;)V <init>
	<init> (Lsf;)V <init>
	<init> (IF)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I id
	c ()F yaw
	a (Lsk;)V handle
wa net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	a newCenterX
	b newCenterZ
	c oldSize
	d newSize
	e lerpTime
	f newAbsoluteMaxSize
	g warningBlocks
	h warningTime
	<init> (Lsf;)V <init>
	<init> (Ldds;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getNewCenterX
	c ()D getNewCenterZ
	d ()D getNewSize
	e ()D getOldSize
	f ()J getLerpTime
	g ()I getNewAbsoluteMaxSize
	h ()I getWarningTime
	i ()I getWarningBlocks
	a (Lsk;)V handle
wb net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	<init> (J)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()J getId
	a (Lsk;)V handle
wc net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	a TWO_MEGABYTES
	b heightmaps
	c buffer
	d blockEntitiesData
	<init> (Ldei;)V <init>
	<init> (Lsf;II)V <init>
	a (Lsf;)V write
	a (Ldei;)I calculateChunkSize
	c ()Lio/netty/buffer/ByteBuf; getWriteBuffer
	a (Lsf;Ldei;)V extractChunkData
	a (II)Ljava/util/function/Consumer; getBlockEntitiesTagsConsumer
	a (Lwc$b;II)V getBlockEntitiesTags
	a ()Lsf; getReadBuffer
	b ()Lqr; getHeightmaps
	a (IILwc$b;)V lambda$getBlockEntitiesTagsConsumer$1
	a (Lsf;Lwc$a;)V lambda$write$0
wc$a net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	a packedXZ
	b y
	c type
	d tag
	<init> (IILczp;Lqr;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lczn;)Lwc$a; create
wc$b net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
	accept (Lgu;Lczp;Lqr;)V accept
wd net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	a x
	b z
	c chunkData
	d lightData
	<init> (Ldei;Ldwt;Ljava/util/BitSet;Ljava/util/BitSet;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getX
	c ()I getZ
	d ()Lwc; getChunkData
	e ()Lwh; getLightData
	a (Lsk;)V handle
we net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	<init> (ILgu;IZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Z isGlobalEvent
	c ()I getType
	d ()I getData
	e ()Lgu; getPos
	a (Lsk;)V handle
wf net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	<init> (Lit;ZDDDFFFFI)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;Liu;)Lit; readParticle
	a (Lsf;)V write
	a ()Z isOverrideLimiter
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lit; getParticle
	a (Lur;)V handle
	a (Lsk;)V handle
wg net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c lightData
	<init> (Lclt;Ldwt;Ljava/util/BitSet;Ljava/util/BitSet;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getX
	c ()I getZ
	d ()Lwh; getLightData
	a (Lsk;)V handle
wh net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	a skyYMask
	b blockYMask
	c emptySkyYMask
	d emptyBlockYMask
	e skyUpdates
	f blockUpdates
	<init> (Lclt;Ldwt;Ljava/util/BitSet;Ljava/util/BitSet;)V <init>
	<init> (Lsf;II)V <init>
	a (Lsf;)V write
	a (Lclt;Ldwt;Lcmv;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V prepareSectionData
	a ()Ljava/util/BitSet; getSkyYMask
	b ()Ljava/util/BitSet; getEmptySkyYMask
	c ()Ljava/util/List; getSkyUpdates
	d ()Ljava/util/BitSet; getBlockYMask
	e ()Ljava/util/BitSet; getEmptyBlockYMask
	f ()Ljava/util/List; getBlockUpdates
	b (Lsf;)[B lambda$new$1
	c (Lsf;)[B lambda$new$0
wi net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b hardcore
	c gameType
	d previousGameType
	e levels
	f registryHolder
	g dimensionType
	h dimension
	i seed
	j maxPlayers
	k chunkRadius
	l simulationDistance
	m reducedDebugInfo
	n showDeathScreen
	o isDebug
	p isFlat
	q lastDeathLocation
	r portalCooldown
	s BUILTIN_CONTEXT_OPS
	<init> (Lsf;)V <init>
	<init> (IZLcmj;Lcmj;Ljava/util/Set;Lhs$b;Lacp;Lacp;JIIIZZZZLjava/util/Optional;I)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I playerId
	c ()Z hardcore
	d ()Lcmj; gameType
	e ()Lcmj; previousGameType
	f ()Ljava/util/Set; levels
	g ()Lhs$b; registryHolder
	h ()Lacp; dimensionType
	i ()Lacp; dimension
	j ()J seed
	k ()I maxPlayers
	l ()I chunkRadius
	m ()I simulationDistance
	n ()Z reducedDebugInfo
	o ()Z showDeathScreen
	p ()Z isDebug
	q ()Z isFlat
	r ()Ljava/util/Optional; lastDeathLocation
	s ()I portalCooldown
	a (Lsk;)V handle
	b (Lsf;)Lacp; lambda$new$0
	<clinit> ()V <clinit>
wj net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c locked
	d decorations
	e colorPatch
	<init> (IBZLjava/util/Collection;Ldyo$b;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getMapId
	a (Ldyo;)V applyToMap
	c ()B getScale
	d ()Z isLocked
	a (Lsk;)V handle
	a (Lsf;Ljava/util/List;)V lambda$write$3
	a (Lsf;Ldyl;)V lambda$write$2
	b (Lsf;)Ljava/util/List; lambda$new$1
	c (Lsf;)Ldyl; lambda$new$0
wk net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	<init> (ILcll;IIZZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()Lcll; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
	a (Lsk;)V handle
wl net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	<init> (ISSSBBZZZ)V <init>
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	a (Lcmm;)Lbfj; getEntity
	a ()S getXa
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z hasPosition
	i ()Z isOnGround
	a (Lsk;)V handle
wl$a net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	<init> (ISSSZ)V <init>
	b (Lsf;)Lwl$a; read
	a (Lsf;)V write
	a (Lsk;)V handle
wl$b net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	<init> (ISSSBBZ)V <init>
	b (Lsf;)Lwl$b; read
	a (Lsf;)V write
	a (Lsk;)V handle
wl$c net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	<init> (IBBZ)V <init>
	b (Lsf;)Lwl$c; read
	a (Lsf;)V write
	a (Lsk;)V handle
wm net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	<init> (Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	a (Lsk;)V handle
wn net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	<init> (Lbdw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lbdw; getHand
	a (Lsk;)V handle
wo net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	<init> (ILcck;Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getContainerId
	c ()Lcck; getType
	d ()Lsw; getTitle
	a (Lsk;)V handle
wp net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	b isFrontText
	<init> (Lgu;Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lgu; getPos
	c ()Z isFrontText
	a (Lsk;)V handle
wq net/minecraft/network/protocol/game/ClientboundPingPacket
	a id
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	a (Lsk;)V handle
wr net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	<init> (ILcjc;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lacq; getRecipe
	c ()I getContainerId
	a (Lsk;)V handle
ws net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a FLAG_INVULNERABLE
	b FLAG_FLYING
	c FLAG_CAN_FLY
	d FLAG_INSTABUILD
	e invulnerable
	f isFlying
	g canFly
	h instabuild
	i flyingSpeed
	j walkingSpeed
	<init> (Lbyl;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Z isInvulnerable
	c ()Z isFlying
	d ()Z canFly
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
	a (Lsk;)V handle
wt net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	a sender
	b index
	c signature
	d body
	e unsignedContent
	f filterMask
	g chatType
	<init> (Lsf;)V <init>
	<init> (Ljava/util/UUID;ILth;Lto$a;Lsw;Lsz;Lss$b;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	b ()Z isSkippable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; sender
	c ()I index
	d ()Lth; signature
	e ()Lto$a; body
	f ()Lsw; unsignedContent
	g ()Lsz; filterMask
	h ()Lss$b; chatType
	a (Lsk;)V handle
wu net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	a duration
	<init> (Lbek;)V <init>
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lsk;)V handle
wv net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	<init> ()V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lsk;)V handle
ww net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	a playerId
	b message
	<init> (ILsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	b ()Z isSkippable
	a ()I getPlayerId
	c ()Lsw; getMessage
	a (Lsk;)V handle
wx net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	a profileIds
	<init> (Lsf;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; profileIds
	a (Lsk;)V handle
wy net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	a actions
	b entries
	<init> (Ljava/util/EnumSet;Ljava/util/Collection;)V <init>
	<init> (Lwy$a;Laig;)V <init>
	a (Ljava/util/Collection;)Lwy; createPlayerInitializing
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/util/EnumSet; actions
	c ()Ljava/util/List; entries
	d ()Ljava/util/List; newEntries
	toString ()Ljava/lang/String; toString
	a (Lsk;)V handle
	a (Lsf;Lwy$b;)V lambda$write$1
	b (Lsf;)Lwy$b; lambda$new$0
wy$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	a ADD_PLAYER
	b INITIALIZE_CHAT
	c UPDATE_GAME_MODE
	d UPDATE_LISTED
	e UPDATE_LATENCY
	f UPDATE_DISPLAY_NAME
	g reader
	h writer
	i $VALUES
	values ()[Lwy$a; values
	valueOf (Ljava/lang/String;)Lwy$a; valueOf
	<init> (Ljava/lang/String;ILwy$a$a;Lwy$a$b;)V <init>
	a (Lsf;Lwy$b;)V lambda$static$11
	a (Lwy$c;Lsf;)V lambda$static$10
	b (Lsf;Lwy$b;)V lambda$static$9
	b (Lwy$c;Lsf;)V lambda$static$8
	c (Lsf;Lwy$b;)V lambda$static$7
	c (Lwy$c;Lsf;)V lambda$static$6
	d (Lsf;Lwy$b;)V lambda$static$5
	d (Lwy$c;Lsf;)V lambda$static$4
	e (Lsf;Lwy$b;)V lambda$static$3
	e (Lwy$c;Lsf;)V lambda$static$2
	f (Lsf;Lwy$b;)V lambda$static$1
	f (Lwy$c;Lsf;)V lambda$static$0
	a ()[Lwy$a; $values
	<clinit> ()V <clinit>
wy$a$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
	read (Lwy$c;Lsf;)V read
wy$a$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
	write (Lsf;Lwy$b;)V write
wy$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	<init> (Laig;)V <init>
	<init> (Ljava/util/UUID;Lcom/mojang/authlib/GameProfile;ZILcmj;Lsw;Ltm$a;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; profileId
	b ()Lcom/mojang/authlib/GameProfile; profile
	c ()Z listed
	d ()I latency
	e ()Lcmj; gameMode
	f ()Lsw; displayName
	g ()Ltm$a; chatSession
wy$c net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	<init> (Ljava/util/UUID;)V <init>
	a ()Lwy$b; build
wz net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	<init> (Leb$a;DDD)V <init>
	<init> (Leb$a;Lbfj;Leb$a;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Leb$a; getFromAnchor
	a (Lcmm;)Leei; getPosition
	a (Lsk;)V handle
xa net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	<init> (DDDFFLjava/util/Set;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
	a (Lsk;)V handle
xb net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d bookSettings
	<init> (Lxb$a;Ljava/util/Collection;Ljava/util/Collection;Laml;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/util/List; getRecipes
	c ()Ljava/util/List; getHighlights
	d ()Laml; getBookSettings
	e ()Lxb$a; getState
	a (Lsk;)V handle
xb$a net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	a INIT
	b ADD
	c REMOVE
	d $VALUES
	values ()[Lxb$a; values
	valueOf (Ljava/lang/String;)Lxb$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lxb$a; $values
	<clinit> ()V <clinit>
xc net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	<init> (Lit/unimi/dsi/fastutil/ints/IntList;)V <init>
	<init> ([I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lit/unimi/dsi/fastutil/ints/IntList; getEntityIds
	a (Lsk;)V handle
xd net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	<init> (ILbey;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lcmm;)Lbfj; getEntity
	a ()Lbey; getEffect
	a (Lsk;)V handle
xe net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a MAX_HASH_LENGTH
	b url
	c hash
	d required
	e prompt
	<init> (Ljava/lang/String;Ljava/lang/String;ZLsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/lang/String; getUrl
	c ()Ljava/lang/String; getHash
	d ()Z isRequired
	e ()Lsw; getPrompt
	a (Lsk;)V handle
xf net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a KEEP_ATTRIBUTES
	b KEEP_ENTITY_DATA
	c KEEP_ALL_DATA
	d dimensionType
	e dimension
	f seed
	g playerGameType
	h previousPlayerGameType
	i isDebug
	j isFlat
	k dataToKeep
	l lastDeathLocation
	m portalCooldown
	<init> (Lacp;Lacp;JLcmj;Lcmj;ZZBLjava/util/Optional;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lacp; getDimensionType
	c ()Lacp; getDimension
	d ()J getSeed
	e ()Lcmj; getPlayerGameType
	f ()Lcmj; getPreviousPlayerGameType
	g ()Z isDebug
	h ()Z isFlat
	a (B)Z shouldKeep
	i ()Ljava/util/Optional; getLastDeathLocation
	j ()I getPortalCooldown
	a (Lsk;)V handle
xg net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	<init> (Lbfj;B)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lcmm;)Lbfj; getEntity
	a ()B getYHeadRot
	a (Lsk;)V handle
xh net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	a POS_IN_SECTION_BITS
	b sectionPos
	c positions
	d states
	<init> (Lhx;Lit/unimi/dsi/fastutil/shorts/ShortSet;Ldej;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Ljava/util/function/BiConsumer;)V runUpdates
	a (Lsk;)V handle
xi net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	<init> (Lacq;)V <init>
	a (Lur;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Lacq; getTab
	a (Lsk;)V handle
xj net/minecraft/network/protocol/game/ClientboundServerDataPacket
	a motd
	b iconBytes
	c enforcesSecureChat
	<init> (Lsw;Ljava/util/Optional;Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getMotd
	c ()Ljava/util/Optional; getIconBytes
	d ()Z enforcesSecureChat
	a (Lsk;)V handle
xk net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	a text
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getText
	a (Lsk;)V handle
xl net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	a newCenterX
	b newCenterZ
	<init> (Ldds;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getNewCenterZ
	c ()D getNewCenterX
	a (Lsk;)V handle
xm net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	a oldSize
	b newSize
	c lerpTime
	<init> (Ldds;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getOldSize
	c ()D getNewSize
	d ()J getLerpTime
	a (Lsk;)V handle
xn net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	a size
	<init> (Ldds;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()D getSize
	a (Lsk;)V handle
xo net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	a warningDelay
	<init> (Ldds;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getWarningDelay
	a (Lsk;)V handle
xp net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	a warningBlocks
	<init> (Ldds;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getWarningBlocks
	a (Lsk;)V handle
xq net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	<init> (Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a (Lcmm;)Lbfj; getEntity
	a (Lsk;)V handle
xr net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getSlot
	a (Lsk;)V handle
xs net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	<init> (II)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getX
	c ()I getZ
	a (Lsk;)V handle
xt net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getRadius
	a (Lsk;)V handle
xu net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	a pos
	b angle
	<init> (Lgu;F)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lgu; getPos
	c ()F getAngle
	a (Lsk;)V handle
xv net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	<init> (ILefd;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getSlot
	c ()Ljava/lang/String; getObjectiveName
	a (Lsk;)V handle
xw net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	b id
	c packedItems
	a EOF_MARKER
	<init> (Lsf;)V <init>
	<init> (ILjava/util/List;)V <init>
	a (Ljava/util/List;Lsf;)V pack
	b (Lsf;)Ljava/util/List; unpack
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I id
	c ()Ljava/util/List; packedItems
	a (Lsk;)V handle
xx net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	<init> (Lbfj;Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getSourceId
	c ()I getDestId
	a (Lsk;)V handle
xy net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	<init> (Lbfj;)V <init>
	<init> (ILeei;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()I getXa
	d ()I getYa
	e ()I getZa
	a (Lsk;)V handle
xz net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	a CONTINUE_MASK
	b entity
	c slots
	<init> (ILjava/util/List;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getEntity
	c ()Ljava/util/List; getSlots
	a (Lsk;)V handle
ya net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	<init> (FII)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()F getExperienceProgress
	c ()I getTotalExperience
	d ()I getExperienceLevel
	a (Lsk;)V handle
yb net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	<init> (FIF)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()F getHealth
	c ()I getFood
	d ()F getSaturation
	a (Lsk;)V handle
yc net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d objectiveName
	e displayName
	f renderType
	g method
	<init> (Lefd;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/lang/String; getObjectiveName
	c ()Lsw; getDisplayName
	d ()I getMethod
	e ()Lefj$a; getRenderType
	a (Lsk;)V handle
yd net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	<init> (Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()[I getPassengers
	c ()I getVehicle
	a (Lsk;)V handle
ye net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d METHOD_JOIN
	e METHOD_LEAVE
	f MAX_VISIBILITY_LENGTH
	g MAX_COLLISION_LENGTH
	h method
	i name
	j players
	k parameters
	<init> (Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V <init>
	a (Lefe;Z)Lye; createAddOrModifyPacket
	a (Lefe;)Lye; createRemovePacket
	a (Lefe;Ljava/lang/String;Lye$a;)Lye; createPlayerPacket
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (I)Z shouldHavePlayerList
	b (I)Z shouldHaveParameters
	a ()Lye$a; getPlayerAction
	c ()Lye$a; getTeamAction
	a (Lur;)V handle
	d ()Ljava/lang/String; getName
	e ()Ljava/util/Collection; getPlayers
	f ()Ljava/util/Optional; getParameters
	a (Lsk;)V handle
	g ()Ljava/lang/IllegalStateException; lambda$write$0
ye$a net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	a ADD
	b REMOVE
	c $VALUES
	values ()[Lye$a; values
	valueOf (Ljava/lang/String;)Lye$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lye$a; $values
	<clinit> ()V <clinit>
ye$b net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	a displayName
	b playerPrefix
	c playerSuffix
	d nametagVisibility
	e collisionRule
	f color
	g options
	<init> (Lefe;)V <init>
	<init> (Lsf;)V <init>
	a ()Lsw; getDisplayName
	b ()I getOptions
	c ()Ln; getColor
	d ()Ljava/lang/String; getNametagVisibility
	e ()Ljava/lang/String; getCollisionRule
	f ()Lsw; getPlayerPrefix
	g ()Lsw; getPlayerSuffix
	a (Lsf;)V write
yf net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	<init> (Ladg$a;Ljava/lang/String;Ljava/lang/String;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/lang/String; getOwner
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Ladg$a; getMethod
	a (Lsk;)V handle
yg net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	a simulationDistance
	<init> (Lsf;)V <init>
	<init> (I)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I simulationDistance
	a (Lsk;)V handle
yh net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	a text
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getText
	a (Lsk;)V handle
yi net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	<init> (JJZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()J getGameTime
	c ()J getDayTime
	a (Lsk;)V handle
yj net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	a text
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getText
	a (Lsk;)V handle
yk net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	a fadeIn
	b stay
	c fadeOut
	<init> (III)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getFadeIn
	c ()I getStay
	d ()I getFadeOut
	a (Lsk;)V handle
yl net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	f seed
	<init> (Lhe;Lami;Lbfj;FFJ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Lhe; getSound
	c ()Lami; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
	g ()J getSeed
	a (Lur;)V handle
	a (Lsk;)V handle
	a (Lsf;Lamg;)V lambda$write$0
ym net/minecraft/network/protocol/game/ClientboundSoundPacket
	a LOCATION_ACCURACY
	b sound
	c source
	d x
	e y
	f z
	g volume
	h pitch
	i seed
	<init> (Lhe;Lami;DDDFFJ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Lhe; getSound
	c ()Lami; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
	i ()J getSeed
	a (Lur;)V handle
	a (Lsk;)V handle
	a (Lsf;Lamg;)V lambda$write$0
yn net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a HAS_SOURCE
	b HAS_SOUND
	c name
	d source
	<init> (Lacq;Lami;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Lacq; getName
	c ()Lami; getSource
	a (Lur;)V handle
	a (Lsk;)V handle
yo net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	a content
	b overlay
	<init> (Lsf;)V <init>
	<init> (Lsw;Z)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	b ()Z isSkippable
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; content
	c ()Z overlay
	a (Lsk;)V handle
yp net/minecraft/network/protocol/game/ClientboundTabListPacket
	a header
	b footer
	<init> (Lsw;Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Lsw; getHeader
	c ()Lsw; getFooter
	a (Lsk;)V handle
yq net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	<init> (ILqr;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getTransactionId
	c ()Lqr; getTag
	b ()Z isSkippable
	a (Lsk;)V handle
yr net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	<init> (III)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getItemId
	c ()I getPlayerId
	d ()I getAmount
	a (Lsk;)V handle
ys net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	<init> (Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getId
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
	a (Lsk;)V handle
yt net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	<init> (ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/util/Map; getAdded
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
	a (Lsk;)V handle
	a (Lsf;Lag;)V lambda$write$1
	a (Lsf;Lae$a;)V lambda$write$0
yu net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	<init> (ILjava/util/Collection;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getEntityId
	c ()Ljava/util/List; getValues
	a (Lsk;)V handle
	a (Lsf;Lyu$a;)V lambda$write$3
	a (Lsf;Lbhe;)V lambda$write$2
	b (Lsf;)Lyu$a; lambda$new$1
	c (Lsf;)Lbhe; lambda$new$0
yu$a net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	a attribute
	b base
	c modifiers
	<init> (Lbhb;DLjava/util/Collection;)V <init>
	a ()Lbhb; getAttribute
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
yv net/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket
	a features
	<init> (Lsf;)V <init>
	<init> (Ljava/util/Set;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Set; features
	a (Lsk;)V handle
yw net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a FLAG_AMBIENT
	b FLAG_VISIBLE
	c FLAG_SHOW_ICON
	d entityId
	e effect
	f effectAmplifier
	g effectDurationTicks
	h flags
	i factorData
	<init> (ILbfa;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()I getEntityId
	c ()Lbey; getEffect
	d ()B getEffectAmplifier
	e ()I getEffectDurationTicks
	f ()Z isEffectVisible
	g ()Z isEffectAmbient
	h ()Z effectShowsIcon
	i ()Lbfa$a; getFactorData
	a (Lsk;)V handle
	a (Lsf;Lbfa$a;)V lambda$write$1
	b (Lsf;)Lbfa$a; lambda$new$0
yx net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	<init> (Ljava/util/Collection;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/util/List; getRecipes
	b (Lsf;)Lcjc; fromNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lsk;)V handle
	a (Lacq;)Ljava/lang/IllegalArgumentException; lambda$fromNetwork$0
yy net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	<init> (Ljava/util/Map;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lur;)V handle
	a ()Ljava/util/Map; getTags
	a (Lsk;)V handle
	a (Lsf;Lano$a;)V lambda$write$2
	a (Lsf;Lacp;)V lambda$write$1
	b (Lsf;)Lacp; lambda$new$0
yz net/minecraft/network/protocol/game/DebugEntityNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	<init> ()V <init>
	a (Lbfj;)Ljava/lang/String; getEntityName
	a (Ljava/util/UUID;)Ljava/lang/String; getEntityName
	a (Lapf;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	b (Ljava/util/UUID;)Lapf; getRandom
	<clinit> ()V <clinit>
za net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	<init> ()V <init>
	a (Laif;Lgu;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Laif;)V sendGameTestClearPacket
	a (Laif;Lclt;)V sendPoiPacketsForChunk
	a (Laif;Lgu;)V sendPoiAddedPacket
	b (Laif;Lgu;)V sendPoiRemovedPacket
	c (Laif;Lgu;)V sendPoiTicketCountPacket
	d (Laif;Lgu;)V sendVillageSectionsPacket
	a (Lcmm;Lbgb;Ldxt;F)V sendPathFindingPacket
	a (Lcmm;Lgu;)V sendNeighborsUpdatePacket
	a (Lcng;Ldsi;)V sendStructurePacket
	a (Lcmm;Lbgb;Lbmw;)V sendGoalSelector
	a (Laif;Ljava/util/Collection;)V sendRaids
	a (Lbfz;)V sendEntityBrain
	a (Lbrm;)V sendBeeInfo
	a (Lcmm;Ldgl;Leei;)V sendGameEventInfo
	a (Lcmm;Ldgn;)V sendGameEventListenerInfo
	a (Lcmm;Lgu;Ldcb;Lczk;)V sendHiveInfo
	a (Lbfz;Lsf;)V writeBrain
	a (Lbfz;J)Ljava/util/List; getMemoryDescriptions
	a (Laif;Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Laif;Lsf;Lacq;)V sendPacketToAllPlayers
	a (Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V lambda$writeBrain$10
	a (Ljava/util/List;Ljava/lang/String;Lboy;Ljava/lang/Integer;)V lambda$writeBrain$9
	a (Lsf;Ljava/lang/String;)V lambda$writeBrain$8
	a (Lsf;Lbzz;)V lambda$writeBrain$7
	a (Lsf;Ldxt;)V lambda$writeBrain$6
	b (Lsf;Ldxt;)V lambda$sendBeeInfo$5
	a (Lsf;Lbzv;)V lambda$sendRaids$4
	a (Lsf;Lboj;)V lambda$sendGoalSelector$3
	a (Lacp;)Ljava/lang/String; lambda$sendPoiAddedPacket$2
	a (Laif;Lbra;)V lambda$sendPoiPacketsForChunk$1
	a (Lhe;)Z lambda$sendPoiPacketsForChunk$0
	<clinit> ()V <clinit>
zb net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Laav;)V handleAnimate
	a (Lzi;)V handleChat
	a (Lzh;)V handleChatCommand
	a (Lzg;)V handleChatAck
	a (Lzk;)V handleClientCommand
	a (Lzl;)V handleClientInformation
	a (Lzn;)V handleContainerButtonClick
	a (Lzo;)V handleContainerClick
	a (Laab;)V handlePlaceRecipe
	a (Lzp;)V handleContainerClose
	a (Lzq;)V handleCustomPayload
	a (Lzt;)V handleInteract
	a (Lzv;)V handleKeepAlive
	a (Lzx;)V handleMovePlayer
	a (Laag;)V handlePong
	a (Laac;)V handlePlayerAbilities
	a (Laad;)V handlePlayerAction
	a (Laae;)V handlePlayerCommand
	a (Laaf;)V handlePlayerInput
	a (Laao;)V handleSetCarriedItem
	a (Laar;)V handleSetCreativeModeSlot
	a (Laau;)V handleSignUpdate
	a (Laax;)V handleUseItemOn
	a (Laay;)V handleUseItem
	a (Laaw;)V handleTeleportToEntityPacket
	a (Laak;)V handleResourcePackResponse
	a (Lzz;)V handlePaddleBoat
	a (Lzy;)V handleMoveVehicle
	a (Lzd;)V handleAcceptTeleportPacket
	a (Laai;)V handleRecipeBookSeenRecipePacket
	a (Laah;)V handleRecipeBookChangeSettingsPacket
	a (Laal;)V handleSeenAdvancements
	a (Lzm;)V handleCustomCommandSuggestions
	a (Laap;)V handleSetCommandBlock
	a (Laaq;)V handleSetCommandMinecart
	a (Laaa;)V handlePickItem
	a (Laaj;)V handleRenameItem
	a (Laan;)V handleSetBeaconPacket
	a (Laat;)V handleSetStructureBlock
	a (Laam;)V handleSelectTrade
	a (Lzr;)V handleEditBook
	a (Lzs;)V handleEntityTagQuery
	a (Lze;)V handleBlockEntityTagQuery
	a (Laas;)V handleSetJigsawBlock
	a (Lzu;)V handleJigsawGenerate
	a (Lzf;)V handleChangeDifficulty
	a (Lzw;)V handleLockDifficulty
	a (Lzj;)V handleChatSessionUpdate
zc net/minecraft/network/protocol/game/ServerPacketListener
	b ()Z shouldPropagateHandlingExceptions
zd net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getId
	a (Lsk;)V handle
ze net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	<init> (ILgu;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getTransactionId
	c ()Lgu; getPos
	a (Lsk;)V handle
zf net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	<init> (Lbdu;)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Lbdu; getDifficulty
	a (Lsk;)V handle
zg net/minecraft/network/protocol/game/ServerboundChatAckPacket
	a offset
	<init> (Lsf;)V <init>
	<init> (I)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I offset
	a (Lsk;)V handle
zh net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	a command
	b timeStamp
	c salt
	d argumentSignatures
	e lastSeenMessages
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;Ljava/time/Instant;JLdw;Ltc$b;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; command
	c ()Ljava/time/Instant; timeStamp
	d ()J salt
	e ()Ldw; argumentSignatures
	f ()Ltc$b; lastSeenMessages
	a (Lsk;)V handle
zi net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	b timeStamp
	c salt
	d signature
	e lastSeenMessages
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;Ljava/time/Instant;JLth;Ltc$b;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; message
	c ()Ljava/time/Instant; timeStamp
	d ()J salt
	e ()Lth; signature
	f ()Ltc$b; lastSeenMessages
	a (Lsk;)V handle
zj net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	a chatSession
	<init> (Lsf;)V <init>
	<init> (Ltm$a;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ltm$a; chatSession
	a (Lsk;)V handle
zk net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	<init> (Lzk$a;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lzk$a; getAction
	a (Lsk;)V handle
zk$a net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	a PERFORM_RESPAWN
	b REQUEST_STATS
	c $VALUES
	values ()[Lzk$a; values
	valueOf (Ljava/lang/String;)Lzk$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lzk$a; $values
	<clinit> ()V <clinit>
zl net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	b language
	c viewDistance
	d chatVisibility
	e chatColors
	f modelCustomisation
	g mainHand
	h textFilteringEnabled
	i allowsListing
	a MAX_LANGUAGE_LENGTH
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;ILbym;ZILbft;ZZ)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; language
	c ()I viewDistance
	d ()Lbym; chatVisibility
	e ()Z chatColors
	f ()I modelCustomisation
	g ()Lbft; mainHand
	h ()Z textFilteringEnabled
	i ()Z allowsListing
	a (Lsk;)V handle
zm net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	<init> (ILjava/lang/String;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getId
	c ()Ljava/lang/String; getCommand
	a (Lsk;)V handle
zn net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	<init> (II)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()I getContainerId
	c ()I getButtonId
	a (Lsk;)V handle
zo net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a MAX_SLOT_COUNT
	b containerId
	c stateId
	d slotNum
	e buttonNum
	f clickType
	g carriedItem
	h changedSlots
	<init> (IIIILcbo;Lcfz;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getContainerId
	c ()I getSlotNum
	d ()I getButtonNum
	e ()Lcfz; getCarriedItem
	f ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getChangedSlots
	g ()Lcbo; getClickType
	h ()I getStateId
	a (Lsk;)V handle
	b (Lsf;)Ljava/lang/Integer; lambda$new$0
zp net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	a containerId
	<init> (I)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()I getContainerId
	a (Lsk;)V handle
zq net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	b MAX_PAYLOAD_SIZE
	a BRAND
	c identifier
	d data
	<init> (Lacq;Lsf;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lacq; getIdentifier
	c ()Lsf; getData
	a (Lsk;)V handle
	<clinit> ()V <clinit>
zr net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a MAX_BYTES_PER_CHAR
	b TITLE_MAX_CHARS
	c PAGE_MAX_CHARS
	d MAX_PAGES_COUNT
	e slot
	f pages
	g title
	<init> (ILjava/util/List;Ljava/util/Optional;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Ljava/util/List; getPages
	c ()Ljava/util/Optional; getTitle
	d ()I getSlot
	a (Lsk;)V handle
	a (Lsf;Ljava/lang/String;)V lambda$write$3
	b (Lsf;Ljava/lang/String;)V lambda$write$2
	b (Lsf;)Ljava/lang/String; lambda$new$1
	c (Lsf;)Ljava/lang/String; lambda$new$0
zs net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	<init> (II)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getTransactionId
	c ()I getEntityId
	a (Lsk;)V handle
zt net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	b action
	c usingSecondaryAction
	d ATTACK_ACTION
	<init> (IZLzt$a;)V <init>
	a (Lbfj;Z)Lzt; createAttackPacket
	a (Lbfj;ZLbdw;)Lzt; createInteractionPacket
	a (Lbfj;ZLbdw;Leei;)Lzt; createInteractionPacket
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a (Laif;)Lbfj; getTarget
	a ()Z isUsingSecondaryAction
	a (Lzt$c;)V dispatch
	a (Lsk;)V handle
	<clinit> ()V <clinit>
zt$1 net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	<init> ()V <init>
	a ()Lzt$b; getType
	a (Lzt$c;)V dispatch
	a (Lsf;)V write
zt$a net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	a ()Lzt$b; getType
	a (Lzt$c;)V dispatch
	a (Lsf;)V write
zt$b net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	a INTERACT
	b ATTACK
	c INTERACT_AT
	d reader
	e $VALUES
	values ()[Lzt$b; values
	valueOf (Ljava/lang/String;)Lzt$b; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Function;)V <init>
	a (Lsf;)Lzt$a; lambda$static$0
	a ()[Lzt$b; $values
	<clinit> ()V <clinit>
zt$c net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	a (Lbdw;)V onInteraction
	a (Lbdw;Leei;)V onInteraction
	a ()V onAttack
zt$d net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	a hand
	<init> (Lbdw;)V <init>
	<init> (Lsf;)V <init>
	a ()Lzt$b; getType
	a (Lzt$c;)V dispatch
	a (Lsf;)V write
zt$e net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	a hand
	b location
	<init> (Lbdw;Leei;)V <init>
	<init> (Lsf;)V <init>
	a ()Lzt$b; getType
	a (Lzt$c;)V dispatch
	a (Lsf;)V write
zu net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	a pos
	b levels
	c keepJigsaws
	<init> (Lgu;IZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()I levels
	d ()Z keepJigsaws
	a (Lsk;)V handle
zv net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	<init> (J)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()J getId
	a (Lsk;)V handle
zw net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	<init> (Z)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()Z isLocked
	a (Lsk;)V handle
zx net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f onGround
	g hasPos
	h hasRot
	<init> (DDDFFZZZ)V <init>
	a (Lzb;)V handle
	a (D)D getX
	b (D)D getY
	c (D)D getZ
	a (F)F getYRot
	b (F)F getXRot
	a ()Z isOnGround
	c ()Z hasPosition
	d ()Z hasRotation
	a (Lsk;)V handle
zx$a net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	<init> (DDDZ)V <init>
	b (Lsf;)Lzx$a; read
	a (Lsf;)V write
	a (Lsk;)V handle
zx$b net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	<init> (DDDFFZ)V <init>
	b (Lsf;)Lzx$b; read
	a (Lsf;)V write
	a (Lsk;)V handle
zx$c net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	<init> (FFZ)V <init>
	b (Lsf;)Lzx$c; read
	a (Lsf;)V write
	a (Lsk;)V handle
zx$d net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	<init> (Z)V <init>
	b (Lsf;)Lzx$d; read
	a (Lsf;)V write
	a (Lsk;)V handle
zy net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	<init> (Lbfj;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()D getX
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	a (Lsk;)V handle
zz net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	<init> (ZZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Z getLeft
	c ()Z getRight
	a (Lsk;)V handle
aaa net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getSlot
	a (Lsk;)V handle
aab net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	<init> (ILcjc;Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getContainerId
	c ()Lacq; getRecipe
	d ()Z isShiftDown
	a (Lsk;)V handle
aac net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a FLAG_FLYING
	b isFlying
	<init> (Lbyl;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Z isFlying
	a (Lsk;)V handle
aad net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	d sequence
	<init> (Laad$a;Lgu;Lha;I)V <init>
	<init> (Laad$a;Lgu;Lha;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()Lha; getDirection
	d ()Laad$a; getAction
	e ()I getSequence
	a (Lsk;)V handle
aad$a net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	a START_DESTROY_BLOCK
	b ABORT_DESTROY_BLOCK
	c STOP_DESTROY_BLOCK
	d DROP_ALL_ITEMS
	e DROP_ITEM
	f RELEASE_USE_ITEM
	g SWAP_ITEM_WITH_OFFHAND
	h $VALUES
	values ()[Laad$a; values
	valueOf (Ljava/lang/String;)Laad$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laad$a; $values
	<clinit> ()V <clinit>
aae net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	b action
	c data
	<init> (Lbfj;Laae$a;)V <init>
	<init> (Lbfj;Laae$a;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getId
	c ()Laae$a; getAction
	d ()I getData
	a (Lsk;)V handle
aae$a net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	a PRESS_SHIFT_KEY
	b RELEASE_SHIFT_KEY
	c STOP_SLEEPING
	d START_SPRINTING
	e STOP_SPRINTING
	f START_RIDING_JUMP
	g STOP_RIDING_JUMP
	h OPEN_INVENTORY
	i START_FALL_FLYING
	j $VALUES
	values ()[Laae$a; values
	valueOf (Ljava/lang/String;)Laae$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laae$a; $values
	<clinit> ()V <clinit>
aaf net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a FLAG_JUMPING
	b FLAG_SHIFT_KEY_DOWN
	c xxa
	d zza
	e isJumping
	f isShiftKeyDown
	<init> (FFZZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()F getXxa
	c ()F getZza
	d ()Z isJumping
	e ()Z isShiftKeyDown
	a (Lsk;)V handle
aag net/minecraft/network/protocol/game/ServerboundPongPacket
	a id
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getId
	a (Lsk;)V handle
aah net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	a bookType
	b isOpen
	c isFiltering
	<init> (Lccq;ZZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lccq; getBookType
	c ()Z isOpen
	d ()Z isFiltering
	a (Lsk;)V handle
aai net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	a recipe
	<init> (Lcjc;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lacq; getRecipe
	a (Lsk;)V handle
aaj net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	<init> (Ljava/lang/String;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Ljava/lang/String; getName
	a (Lsk;)V handle
aak net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	a action
	<init> (Laak$a;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Laak$a; getAction
	a (Lsk;)V handle
aak$a net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	a SUCCESSFULLY_LOADED
	b DECLINED
	c FAILED_DOWNLOAD
	d ACCEPTED
	e $VALUES
	values ()[Laak$a; values
	valueOf (Ljava/lang/String;)Laak$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laak$a; $values
	<clinit> ()V <clinit>
aal net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	<init> (Laal$a;Lacq;)V <init>
	a (Lae;)Laal; openedTab
	a ()Laal; closedScreen
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	c ()Laal$a; getAction
	d ()Lacq; getTab
	a (Lsk;)V handle
aal$a net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	a OPENED_TAB
	b CLOSED_SCREEN
	c $VALUES
	values ()[Laal$a; values
	valueOf (Ljava/lang/String;)Laal$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laal$a; $values
	<clinit> ()V <clinit>
aam net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getItem
	a (Lsk;)V handle
aan net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	<init> (Ljava/util/Optional;Ljava/util/Optional;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Ljava/util/Optional; getPrimary
	c ()Ljava/util/Optional; getSecondary
	a (Lsk;)V handle
	a (Lsf;Lbey;)V lambda$write$3
	b (Lsf;Lbey;)V lambda$write$2
	b (Lsf;)Lbey; lambda$new$1
	c (Lsf;)Lbey; lambda$new$0
aao net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	a slot
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()I getSlot
	a (Lsk;)V handle
aap net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a FLAG_TRACK_OUTPUT
	b FLAG_CONDITIONAL
	c FLAG_AUTOMATIC
	d pos
	e command
	f trackOutput
	g conditional
	h automatic
	i mode
	<init> (Lgu;Ljava/lang/String;Lczx$a;ZZZ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lczx$a; getMode
	a (Lsk;)V handle
aaq net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	<init> (ILjava/lang/String;Z)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a (Lcmm;)Lcln; getCommandBlock
	a ()Ljava/lang/String; getCommand
	c ()Z isTrackOutput
	a (Lsk;)V handle
aar net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	a slotNum
	b itemStack
	<init> (ILcfz;)V <init>
	a (Lzb;)V handle
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a ()I getSlotNum
	c ()Lcfz; getItem
	a (Lsk;)V handle
aas net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b name
	c target
	d pool
	e finalState
	f joint
	<init> (Lgu;Lacq;Lacq;Lacq;Ljava/lang/String;Ldam$a;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()Lacq; getName
	d ()Lacq; getTarget
	e ()Lacq; getPool
	f ()Ljava/lang/String; getFinalState
	g ()Ldam$a; getJoint
	a (Lsk;)V handle
aat net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a FLAG_IGNORE_ENTITIES
	b FLAG_SHOW_AIR
	c FLAG_SHOW_BOUNDING_BOX
	d pos
	e updateType
	f mode
	g name
	h offset
	i size
	j mirror
	k rotation
	l data
	m ignoreEntities
	n showAir
	o showBoundingBox
	p integrity
	q seed
	<init> (Lgu;Ldba$a;Lddl;Ljava/lang/String;Lgu;Lhz;Lcui;Lcvz;Ljava/lang/String;ZZZFJ)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()Ldba$a; getUpdateType
	d ()Lddl; getMode
	e ()Ljava/lang/String; getName
	f ()Lgu; getOffset
	g ()Lhz; getSize
	h ()Lcui; getMirror
	i ()Lcvz; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
	a (Lsk;)V handle
aau net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a MAX_STRING_LENGTH
	b pos
	c lines
	d isFrontText
	<init> (Lgu;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lgu; getPos
	c ()Z isFrontText
	d ()[Ljava/lang/String; getLines
	a (Lsk;)V handle
aav net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	<init> (Lbdw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lbdw; getHand
	a (Lsk;)V handle
aaw net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	<init> (Ljava/util/UUID;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a (Laif;)Lbfj; getEntity
	a (Lsk;)V handle
aax net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	c sequence
	<init> (Lbdw;Leee;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lbdw; getHand
	c ()Leee; getHitResult
	d ()I getSequence
	a (Lsk;)V handle
aay net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	b sequence
	<init> (Lbdw;I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Lzb;)V handle
	a ()Lbdw; getHand
	c ()I getSequence
	a (Lsk;)V handle
aaz net/minecraft/network/protocol/game/VecDeltaCodec
	a TRUNCATION_STEPS
	b base
	<init> ()V <init>
	a (D)J encode
	a (J)D decode
	a (JJJ)Leei; decode
	a (Leei;)J encodeX
	b (Leei;)J encodeY
	c (Leei;)J encodeZ
	d (Leei;)Leei; delta
	e (Leei;)V setBase
aba net/minecraft/network/protocol/game/package-info
abb net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a MAX_HOST_LENGTH
	b protocolVersion
	c hostName
	d port
	e intention
	<init> (Ljava/lang/String;ILse;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labc;)V handle
	a ()Lse; getIntention
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
	a (Lsk;)V handle
abc net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Labb;)V handleIntention
abd net/minecraft/network/protocol/handshake/package-info
abe net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Labh;)V handleHello
	a (Labg;)V handleGameProfile
	a (Labj;)V handleDisconnect
	a (Labi;)V handleCompression
	a (Labf;)V handleCustomQuery
abf net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a MAX_PAYLOAD_SIZE
	b transactionId
	c identifier
	d data
	<init> (ILacq;Lsf;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labe;)V handle
	a ()I getTransactionId
	c ()Lacq; getIdentifier
	d ()Lsf; getData
	a (Lsk;)V handle
abg net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labe;)V handle
	a ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lsk;)V handle
abh net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c challenge
	<init> (Ljava/lang/String;[B[B)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labe;)V handle
	a ()Ljava/lang/String; getServerId
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getChallenge
	a (Lsk;)V handle
abi net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	<init> (I)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labe;)V handle
	a ()I getCompressionThreshold
	a (Lsk;)V handle
abj net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	<init> (Lsw;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labe;)V handle
	a ()Lsw; getReason
	a (Lsk;)V handle
abk net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Labm;)V handleHello
	a (Labn;)V handleKey
	a (Labl;)V handleCustomQueryPacket
abl net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a MAX_PAYLOAD_SIZE
	b transactionId
	c data
	<init> (ILsf;)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labk;)V handle
	a ()I getTransactionId
	c ()Lsf; getData
	a (Lsk;)V handle
	a (Lsf;Lsf;)V lambda$write$1
	b (Lsf;)Lsf; lambda$new$0
abm net/minecraft/network/protocol/login/ServerboundHelloPacket
	a name
	b profileId
	<init> (Lsf;)V <init>
	<init> (Ljava/lang/String;Ljava/util/Optional;)V <init>
	a (Lsf;)V write
	a (Labk;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	c ()Ljava/util/Optional; profileId
	a (Lsk;)V handle
abn net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b encryptedChallenge
	<init> (Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labk;)V handle
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a ([BLjava/security/PrivateKey;)Z isChallengeValid
	a (Lsk;)V handle
abo net/minecraft/network/protocol/login/package-info
abp net/minecraft/network/protocol/package-info
abq net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Labs;)V handleStatusResponse
	a (Labr;)V handlePongResponse
abr net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	<init> (J)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labq;)V handle
	a ()J getTime
	a (Lsk;)V handle
abs net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a status
	<init> (Lsf;)V <init>
	<init> (Labt;)V <init>
	a (Lsf;)V write
	a (Labq;)V handle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Labt; status
	a (Lsk;)V handle
abt net/minecraft/network/protocol/status/ServerStatus
	b description
	c players
	d version
	e favicon
	f enforcesSecureChat
	a CODEC
	<init> (Lsw;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Z)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; description
	b ()Ljava/util/Optional; players
	c ()Ljava/util/Optional; version
	d ()Ljava/util/Optional; favicon
	e ()Z enforcesSecureChat
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
abt$a net/minecraft/network/protocol/status/ServerStatus$Favicon
	b iconBytes
	c PREFIX
	a CODEC
	<init> ([B)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()[B iconBytes
	a (Labt$a;)Ljava/lang/String; lambda$static$3
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$2
	b ()Ljava/lang/String; lambda$static$1
	c ()Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
abt$b net/minecraft/network/protocol/status/ServerStatus$Players
	b max
	c online
	d sample
	e PROFILE_CODEC
	a CODEC
	<init> (IILjava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I max
	b ()I online
	c ()Ljava/util/List; sample
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
abt$c net/minecraft/network/protocol/status/ServerStatus$Version
	b name
	c protocol
	a CODEC
	<init> (Ljava/lang/String;I)V <init>
	a ()Labt$c; current
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; name
	c ()I protocol
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
abu net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Labv;)V handlePingRequest
	a (Labw;)V handleStatusRequest
abv net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	<init> (J)V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labu;)V handle
	a ()J getTime
	a (Lsk;)V handle
abw net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	<init> ()V <init>
	<init> (Lsf;)V <init>
	a (Lsf;)V write
	a (Labu;)V handle
	a (Lsk;)V handle
abx net/minecraft/network/protocol/status/package-info
aby net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	<init> (ILabz;)V <init>
	a ()I getId
	b ()Labz; getSerializer
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
abz net/minecraft/network/syncher/EntityDataSerializer
	a (Lsf;Ljava/lang/Object;)V write
	a (Lsf;)Ljava/lang/Object; read
	a (I)Laby; createAccessor
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lsf$b;Lsf$a;)Labz; simple
	b (Lsf$b;Lsf$a;)Labz; optional
	a (Ljava/lang/Class;)Labz; simpleEnum
	a (Lhj;)Labz; simpleId
	a (Lhj;Lsf;)Ljava/lang/Object; lambda$simpleId$2
	a (Lhj;Lsf;Ljava/lang/Object;)V lambda$simpleId$1
	a (Ljava/lang/Class;Lsf;)Ljava/lang/Enum; lambda$simpleEnum$0
abz$1 net/minecraft/network/syncher/EntityDataSerializer$1
	a val$writer
	b val$reader
	<init> (Lsf$b;Lsf$a;)V <init>
	a (Lsf;Ljava/lang/Object;)V write
	a (Lsf;)Ljava/lang/Object; read
abz$a net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
aca net/minecraft/network/syncher/EntityDataSerializers
	C SERIALIZERS
	a BYTE
	b INT
	c LONG
	d FLOAT
	e STRING
	f COMPONENT
	g OPTIONAL_COMPONENT
	h ITEM_STACK
	i BLOCK_STATE
	j OPTIONAL_BLOCK_STATE
	k BOOLEAN
	l PARTICLE
	m ROTATIONS
	n BLOCK_POS
	o OPTIONAL_BLOCK_POS
	p DIRECTION
	q OPTIONAL_UUID
	r OPTIONAL_GLOBAL_POS
	s COMPOUND_TAG
	t VILLAGER_DATA
	u OPTIONAL_UNSIGNED_INT
	v POSE
	w CAT_VARIANT
	x FROG_VARIANT
	y PAINTING_VARIANT
	z SNIFFER_STATE
	A VECTOR3
	B QUATERNION
	a (Labz;)V registerSerializer
	a (I)Labz; getSerializer
	b (Labz;)I getSerializedId
	<init> ()V <init>
	a (Lsf;Ljava/lang/Byte;)V lambda$static$0
	<clinit> ()V <clinit>
aca$1 net/minecraft/network/syncher/EntityDataSerializers$1
	<init> ()V <init>
	a (Lsf;Lcfz;)V write
	b (Lsf;)Lcfz; read
	a (Lcfz;)Lcfz; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$2 net/minecraft/network/syncher/EntityDataSerializers$2
	<init> ()V <init>
	a (Lsf;Ljava/util/Optional;)V write
	b (Lsf;)Ljava/util/Optional; read
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$3 net/minecraft/network/syncher/EntityDataSerializers$3
	<init> ()V <init>
	a (Lsf;Lit;)V write
	b (Lsf;)Lit; read
	a (Lsf;Liu;)Lit; readParticle
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$4 net/minecraft/network/syncher/EntityDataSerializers$4
	<init> ()V <init>
	a (Lsf;Lhw;)V write
	b (Lsf;)Lhw; read
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$5 net/minecraft/network/syncher/EntityDataSerializers$5
	<init> ()V <init>
	a (Lsf;Lqr;)V write
	b (Lsf;)Lqr; read
	a (Lqr;)Lqr; copy
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$6 net/minecraft/network/syncher/EntityDataSerializers$6
	<init> ()V <init>
	a (Lsf;Lbyc;)V write
	b (Lsf;)Lbyc; read
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
aca$7 net/minecraft/network/syncher/EntityDataSerializers$7
	<init> ()V <init>
	a (Lsf;Ljava/util/OptionalInt;)V write
	b (Lsf;)Ljava/util/OptionalInt; read
	a (Lsf;)Ljava/lang/Object; read
	a (Lsf;Ljava/lang/Object;)V write
acb net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	c MAX_ID_VALUE
	d entity
	e itemsById
	f lock
	g isDirty
	<init> (Lbfj;)V <init>
	a (Ljava/lang/Class;Labz;)Laby; defineId
	a (Laby;Ljava/lang/Object;)V define
	c (Laby;Ljava/lang/Object;)V createDataItem
	a (Laby;)Z hasItem
	c (Laby;)Lacb$a; getItem
	b (Laby;)Ljava/lang/Object; get
	b (Laby;Ljava/lang/Object;)V set
	a (Laby;Ljava/lang/Object;Z)V set
	a ()Z isDirty
	b ()Ljava/util/List; packDirty
	c ()Ljava/util/List; getNonDefaultValues
	a (Ljava/util/List;)V assignValues
	a (Lacb$a;Lacb$b;)V assignValue
	d ()Z isEmpty
	<clinit> ()V <clinit>
acb$a net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c initialValue
	d dirty
	<init> (Laby;Ljava/lang/Object;)V <init>
	a ()Laby; getAccessor
	a (Ljava/lang/Object;)V setValue
	b ()Ljava/lang/Object; getValue
	c ()Z isDirty
	a (Z)V setDirty
	d ()Z isSetToDefault
	e ()Lacb$b; value
acb$b net/minecraft/network/syncher/SynchedEntityData$DataValue
	a id
	b serializer
	c value
	<init> (ILabz;Ljava/lang/Object;)V <init>
	a (Laby;Ljava/lang/Object;)Lacb$b; create
	a (Lsf;)V write
	a (Lsf;I)Lacb$b; read
	a (Lsf;ILabz;)Lacb$b; read
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I id
	b ()Labz; serializer
	c ()Ljava/lang/Object; value
acc net/minecraft/network/syncher/package-info
net/minecraft/obfuscate/DontObfuscate net/minecraft/obfuscate/DontObfuscate
acd net/minecraft/obfuscate/package-info
ace net/minecraft/package-info
gaj net/minecraft/realms/DisconnectedRealmsScreen
	a reason
	b message
	c parent
	G textHeight
	<init> (Leuq;Lsw;Lsw;)V <init>
	b ()V init
	au_ ()Lsw; getNarrationMessage
	aw_ ()V onClose
	a (Leox;IIF)V render
	a (Lenn;Lepi;)V lambda$init$0
gak net/minecraft/realms/RealmsConnect
	a LOGGER
	b onlineScreen
	c aborted
	d connection
	<init> (Leuq;)V <init>
	a (Lejq;Lfga;)V connect
	a ()V abort
	b ()V tick
	<clinit> ()V <clinit>
gak$1 net/minecraft/realms/RealmsConnect$1
	a val$hostname
	b val$port
	c val$minecraft
	d val$server
	e this$0
	<init> (Lgak;Ljava/lang/String;Ljava/lang/String;ILenn;Lejq;)V <init>
	run ()V run
	a (Lenn;Lgaj;)V lambda$run$1
	a (Lsw;)V lambda$run$0
gal net/minecraft/realms/RealmsLabel
	a text
	b x
	c y
	d color
	<init> (Lsw;III)V <init>
	a (Leox;IIF)V render
	a ()Lsw; getText
gam net/minecraft/realms/RealmsObjectSelectionList
	<init> (IIIII)V <init>
	j (I)V setSelectedItem
	a (I)V selectItem
	a (IIDDII)V itemClicked
	a ()I getMaxPosition
	c ()I getScrollbarPosition
	b ()I getRowWidth
	a (Ljava/util/Collection;)V replaceEntries
	k ()I getItemCount
	g (I)I getRowTop
	o ()I getRowLeft
	a (Leqc$a;)I addEntry
	v ()V clear
	b (Lepc$a;)I addEntry
gan net/minecraft/realms/RealmsScreen
	k TITLE_HEIGHT
	l COMPONENT_HEIGHT
	m EXPIRATION_NOTIFICATION_DAYS
	n SIZE_LIMIT
	o COLOR_WHITE
	p COLOR_GRAY
	q COLOR_DARK_GRAY
	r COLOR_MEDIUM_GRAY
	s COLOR_GREEN
	t COLOR_DARK_GREEN
	u COLOR_RED
	v COLOR_RED_FADE
	w COLOR_BLACK
	x COLOR_YELLOW
	y COLOR_BRIGHT_YELLOW
	z COLOR_LINK
	A COLOR_LINK_HOVER
	C COLOR_INFO
	D COLOR_BUTTON_YELLOW
	E UPDATE_BREAKS_ADVENTURE_URL
	F SKIN_FACE_SIZE
	a labels
	<init> (Lsw;)V <init>
	h (I)I row
	a (Lgal;)Lgal; addLabel
	l ()Lsw; createLabelNarration
gao net/minecraft/realms/RepeatedNarrator
	a permitsPerSecond
	b params
	<init> (Ljava/time/Duration;)V <init>
	a (Lenf;Lsw;)V narrate
	a (Lsw;Lgao$a;)Lgao$a; lambda$narrate$0
gao$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
	<init> (Lsw;Lcom/google/common/util/concurrent/RateLimiter;)V <init>
gap net/minecraft/realms/package-info
acf net/minecraft/recipebook/PlaceRecipe
	a (IIILcjc;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
acg net/minecraft/recipebook/ServerPlaceRecipe
	d LOGGER
	a stackedContents
	b inventory
	c menu
	<init> (Lccp;)V <init>
	a (Laig;Lcjc;Z)V recipeClicked
	a ()V clearGrid
	a (Lcjc;Z)V handleRecipeClicked
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (ZIZ)I getStackSize
	a (Lccx;Lcfz;)V moveItemToGrid
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
	<clinit> ()V <clinit>
ach net/minecraft/recipebook/package-info
aci net/minecraft/resources/DelegatingOps
	a delegate
	<init> (Lcom/mojang/serialization/DynamicOps;)V <init>
	empty ()Ljava/lang/Object; empty
	convertTo (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; convertTo
	getNumberValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getNumberValue
	createNumeric (Ljava/lang/Number;)Ljava/lang/Object; createNumeric
	createByte (B)Ljava/lang/Object; createByte
	createShort (S)Ljava/lang/Object; createShort
	createInt (I)Ljava/lang/Object; createInt
	createLong (J)Ljava/lang/Object; createLong
	createFloat (F)Ljava/lang/Object; createFloat
	createDouble (D)Ljava/lang/Object; createDouble
	getBooleanValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getBooleanValue
	createBoolean (Z)Ljava/lang/Object; createBoolean
	getStringValue (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStringValue
	createString (Ljava/lang/String;)Ljava/lang/Object; createString
	mergeToList (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToList (Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	mergeToMap (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; mergeToMap
	mergeToMap (Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	getMapValues (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapValues
	getMapEntries (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMapEntries
	createMap (Ljava/util/stream/Stream;)Ljava/lang/Object; createMap
	getMap (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getMap
	getStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getStream
	getList (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getList
	createList (Ljava/util/stream/Stream;)Ljava/lang/Object; createList
	getByteBuffer (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getByteBuffer
	createByteList (Ljava/nio/ByteBuffer;)Ljava/lang/Object; createByteList
	getIntStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getIntStream
	createIntList (Ljava/util/stream/IntStream;)Ljava/lang/Object; createIntList
	getLongStream (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; getLongStream
	createLongList (Ljava/util/stream/LongStream;)Ljava/lang/Object; createLongList
	remove (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; remove
	compressMaps ()Z compressMaps
	listBuilder ()Lcom/mojang/serialization/ListBuilder; listBuilder
	mapBuilder ()Lcom/mojang/serialization/RecordBuilder; mapBuilder
acj net/minecraft/resources/FileToIdConverter
	a prefix
	b extension
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lacj; json
	a (Lacq;)Lacq; idToFile
	b (Lacq;)Lacq; fileToId
	a (Lakx;)Ljava/util/Map; listMatchingResources
	b (Lakx;)Ljava/util/Map; listMatchingResourceStacks
	c (Lacq;)Z lambda$listMatchingResourceStacks$1
	d (Lacq;)Z lambda$listMatchingResources$0
ack net/minecraft/resources/HolderSetCodec
	a registryKey
	b elementCodec
	c homogenousListCodec
	d registryAwareCodec
	a (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogenousList
	a (Lacp;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; create
	<init> (Lacp;Lcom/mojang/serialization/Codec;Z)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Lhi;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decodeWithoutRegistry
	b (Lhi;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeWithoutRegistry
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decodeWithoutRegistry$7
	a (Lhe;)Ljava/lang/String; lambda$decodeWithoutRegistry$6
	a (Lhi;)Ljava/lang/String; lambda$encode$5
	a (Lhf;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$4
	a (Lhf;Lcom/mojang/datafixers/util/Either;)Lhi; lambda$decode$3
	a (Ljava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$homogenousList$2
	a (Lcom/mojang/datafixers/util/Either;)Ljava/util/List; lambda$homogenousList$1
	b (Ljava/util/List;)Ljava/util/List; lambda$homogenousList$0
acl net/minecraft/resources/RegistryDataLoader
	c LOGGER
	a WORLDGEN_REGISTRIES
	b DIMENSION_REGISTRIES
	<init> ()V <init>
	a (Lakx;Lhs;Ljava/util/List;)Lhs$b; load
	a (Lhs;Ljava/util/List;)Laco$b; createContext
	a (Lia;)Laco$a; createInfoForNewRegistry
	a (Lhr;)Laco$a; createInfoForContextRegistry
	a (Ljava/util/Map;)V logErrors
	a (Lacq;)Ljava/lang/String; registryDirPath
	a (Laco$b;Lakx;Lacp;Lia;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V loadRegistryContents
	a (Ljava/lang/String;)V lambda$loadRegistryContents$9
	a (Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V lambda$logErrors$8
	b (Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V lambda$logErrors$7
	a (Ljava/util/Map$Entry;)Lacq; lambda$logErrors$6
	b (Ljava/util/Map$Entry;)Lacq; lambda$logErrors$5
	a (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$createContext$4
	a (Ljava/util/Map;Lhs$d;)V lambda$createContext$3
	b (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$load$2
	a (Lakx;Laco$b;Lcom/mojang/datafixers/util/Pair;)V lambda$load$1
	a (Ljava/util/Map;Lacl$b;)Lcom/mojang/datafixers/util/Pair; lambda$load$0
	<clinit> ()V <clinit>
acl$1 net/minecraft/resources/RegistryDataLoader$1
	a val$result
	<init> (Ljava/util/Map;)V <init>
	a (Lacp;)Ljava/util/Optional; lookup
acl$a net/minecraft/resources/RegistryDataLoader$Loader
	load (Lakx;Laco$b;)V load
acl$b net/minecraft/resources/RegistryDataLoader$RegistryData
	a key
	b elementCodec
	<init> (Lacp;Lcom/mojang/serialization/Codec;)V <init>
	a (Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair; create
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Lcom/mojang/serialization/Codec; elementCodec
	a (Lia;Ljava/util/Map;Lakx;Laco$b;)V lambda$create$0
acm net/minecraft/resources/RegistryFileCodec
	a registryKey
	b elementCodec
	c allowInline
	a (Lacp;Lcom/mojang/serialization/Codec;)Lacm; create
	a (Lacp;Lcom/mojang/serialization/Codec;Z)Lacm; create
	<init> (Lacp;Lcom/mojang/serialization/Codec;Z)V <init>
	a (Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$9
	a (Lcom/mojang/datafixers/util/Pair;Lhe$c;)Lcom/mojang/datafixers/util/Pair; lambda$decode$8
	a (Lacp;)Lcom/mojang/serialization/DataResult; lambda$decode$7
	b (Lacp;)Ljava/lang/String; lambda$decode$6
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$5
	a ()Ljava/lang/String; lambda$decode$4
	b ()Ljava/lang/String; lambda$decode$3
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$2
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lacp;)Lcom/mojang/serialization/DataResult; lambda$encode$1
	a (Lhe;)Ljava/lang/String; lambda$encode$0
acn net/minecraft/resources/RegistryFixedCodec
	a registryKey
	a (Lacp;)Lacn; create
	<init> (Lacp;)V <init>
	a (Lhe;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a ()Ljava/lang/String; lambda$decode$9
	a (Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$decode$8
	a (Lcom/mojang/datafixers/util/Pair;Lhe$c;)Lcom/mojang/datafixers/util/Pair; lambda$decode$7
	a (Lacq;)Lcom/mojang/serialization/DataResult; lambda$decode$6
	b (Lacq;)Ljava/lang/String; lambda$decode$5
	b ()Ljava/lang/String; lambda$encode$4
	a (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$3
	c ()Ljava/lang/String; lambda$encode$2
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lacp;)Lcom/mojang/serialization/DataResult; lambda$encode$1
	a (Lhe;)Ljava/lang/String; lambda$encode$0
aco net/minecraft/resources/RegistryOps
	b lookupProvider
	a (Laco$b;)Laco$b; memoizeLookup
	a (Lcom/mojang/serialization/DynamicOps;Lhg$b;)Laco; create
	a (Lcom/mojang/serialization/DynamicOps;Laco$b;)Laco; create
	<init> (Lcom/mojang/serialization/DynamicOps;Laco$b;)V <init>
	a (Lacp;)Ljava/util/Optional; owner
	b (Lacp;)Ljava/util/Optional; getter
	c (Lacp;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveGetter
	d (Lacp;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveElement
	a (Ljava/lang/Object;)Lhe$c; lambda$retrieveElement$11
	a (Lacp;Lacp;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; lambda$retrieveElement$10
	a ()Ljava/lang/String; lambda$retrieveElement$9
	e (Lacp;)Lcom/mojang/serialization/DataResult; lambda$retrieveElement$8
	f (Lacp;)Ljava/lang/String; lambda$retrieveElement$7
	a (Lacp;Laco$a;)Ljava/util/Optional; lambda$retrieveElement$6
	b (Ljava/lang/Object;)Lhf; lambda$retrieveGetter$5
	a (Lacp;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; lambda$retrieveGetter$4
	b ()Ljava/lang/String; lambda$retrieveGetter$3
	g (Lacp;)Lcom/mojang/serialization/DataResult; lambda$retrieveGetter$2
	h (Lacp;)Ljava/lang/String; lambda$retrieveGetter$1
	a (Laco$a;)Lcom/mojang/serialization/DataResult; lambda$retrieveGetter$0
aco$1 net/minecraft/resources/RegistryOps$1
	b lookups
	a val$original
	<init> (Laco$b;)V <init>
	a (Lacp;)Ljava/util/Optional; lookup
aco$2 net/minecraft/resources/RegistryOps$2
	a val$lookupProvider
	<init> (Lhg$b;)V <init>
	a (Lacp;)Ljava/util/Optional; lookup
	a (Lhg$c;)Laco$a; lambda$lookup$0
aco$a net/minecraft/resources/RegistryOps$RegistryInfo
	a owner
	b getter
	c elementsLifecycle
	<init> (Lhh;Lhf;Lcom/mojang/serialization/Lifecycle;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhh; owner
	b ()Lhf; getter
	c ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
aco$b net/minecraft/resources/RegistryOps$RegistryInfoLookup
	a (Lacp;)Ljava/util/Optional; lookup
acp net/minecraft/resources/ResourceKey
	a VALUES
	b registryName
	c location
	a (Lacp;)Lcom/mojang/serialization/Codec; codec
	a (Lacp;Lacq;)Lacp; create
	a (Lacq;)Lacp; createRegistryKey
	a (Lacq;Lacq;)Lacp; create
	<init> (Lacq;Lacq;)V <init>
	toString ()Ljava/lang/String; toString
	b (Lacp;)Z isFor
	c (Lacp;)Ljava/util/Optional; cast
	a ()Lacq; location
	b ()Lacq; registry
	a (Lacp$a;)Lacp; lambda$create$1
	b (Lacp;Lacq;)Lacp; lambda$codec$0
	<clinit> ()V <clinit>
acp$a net/minecraft/resources/ResourceKey$InternKey
	a registry
	b location
	<init> (Lacq;Lacq;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; registry
	b ()Lacq; location
acq net/minecraft/resources/ResourceLocation
	a CODEC
	e ERROR_INVALID
	b NAMESPACE_SEPARATOR
	c DEFAULT_NAMESPACE
	d REALMS_NAMESPACE
	f namespace
	g path
	<init> (Ljava/lang/String;Ljava/lang/String;Lacq$a;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/String;)V <init>
	<init> ([Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;C)Lacq; of
	a (Ljava/lang/String;)Lacq; tryParse
	a (Ljava/lang/String;Ljava/lang/String;)Lacq; tryBuild
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; read
	a ()Ljava/lang/String; getPath
	b ()Ljava/lang/String; getNamespace
	c (Ljava/lang/String;)Lacq; withPath
	a (Ljava/util/function/UnaryOperator;)Lacq; withPath
	d (Ljava/lang/String;)Lacq; withPrefix
	e (Ljava/lang/String;)Lacq; withSuffix
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lacq;)I compareTo
	c ()Ljava/lang/String; toDebugFileName
	d ()Ljava/lang/String; toLanguageKey
	e ()Ljava/lang/String; toShortLanguageKey
	f (Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	a (Lcom/mojang/brigadier/StringReader;)Lacq; read
	a (C)Z isAllowedInResourceLocation
	h (Ljava/lang/String;)Z isValidPath
	i (Ljava/lang/String;)Z isValidNamespace
	c (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidNamespace
	b (C)Z validPathChar
	c (C)Z validNamespaceChar
	g (Ljava/lang/String;)Z isValidResourceLocation
	d (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidPath
	compareTo (Ljava/lang/Object;)I compareTo
	a (Ljava/lang/String;Lz;)Ljava/lang/String; lambda$read$0
	<clinit> ()V <clinit>
acq$a net/minecraft/resources/ResourceLocation$Dummy
acq$b net/minecraft/resources/ResourceLocation$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lacq; deserialize
	a (Lacq;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
acr net/minecraft/resources/package-info
acs net/minecraft/server/Bootstrap
	a STDOUT
	c isBootstrapped
	d LOGGER
	b bootstrapDuration
	<init> ()V <init>
	a ()V bootStrap
	a (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Ljava/util/Set;)V checkGameruleTranslations
	b ()Ljava/util/Set; getMissingTranslations
	a (Ljava/util/function/Supplier;)V checkBootstrapCalled
	b (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; createBootstrapException
	c ()V validate
	d ()V wrapStreams
	a (Ljava/lang/String;)V realStdoutPrintln
	b (Ljava/lang/String;)V lambda$validate$3
	e ()Ljava/lang/String; lambda$validate$2
	a (Lacq;)Ljava/lang/String; lambda$getMissingTranslations$1
	a (Ljava/util/function/Function;Lqm;Ljava/util/Set;Ljava/lang/Object;)V lambda$checkTranslations$0
	<clinit> ()V <clinit>
acs$1 net/minecraft/server/Bootstrap$1
	a val$language
	b val$missing
	<init> (Lqm;Ljava/util/Set;)V <init>
	a (Lcmi$e;Lcmi$f;)V visit
act net/minecraft/server/ChainedJsonException
	a entries
	b message
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
	getMessage ()Ljava/lang/String; getMessage
	a (Ljava/lang/Exception;)Lact; forException
act$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	<init> ()V <init>
	a (Ljava/lang/String;)V addJsonKey
	a ()Ljava/lang/String; getFilename
	b ()Ljava/lang/String; getJsonKeys
	toString ()Ljava/lang/String; toString
acu net/minecraft/server/ConsoleInput
	a msg
	b source
	<init> (Ljava/lang/String;Lds;)V <init>
acv net/minecraft/server/DebugLoggedPrintStream
	b LOGGER
	<init> (Ljava/lang/String;Ljava/io/OutputStream;)V <init>
	a (Ljava/lang/String;)V logLine
	<clinit> ()V <clinit>
acw net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	<init> (Ljava/nio/file/Path;)V <init>
	b ()Z readFile
	a ()Z hasAgreedToEULA
	c ()V saveDefaults
	<clinit> ()V <clinit>
acx net/minecraft/server/LoggedPrintStream
	b LOGGER
	a name
	<init> (Ljava/lang/String;Ljava/io/OutputStream;)V <init>
	println (Ljava/lang/String;)V println
	println (Ljava/lang/Object;)V println
	a (Ljava/lang/String;)V logLine
	<clinit> ()V <clinit>
net/minecraft/server/Main net/minecraft/server/Main
	a LOGGER
	<init> ()V <init>
	main ([Ljava/lang/String;)V main
	a (Ljava/nio/file/Path;)V writePidFile
	a (Lahf;Ldyy$c;ZLaki;)Ladj$c; loadOrCreateConfig
	a (Ldyy$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lhr;)V forceUpgrade
	a (Ldyy$c;Laki;Ladk;Lahg;Ladh;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lahe; lambda$main$3
	a ()Z lambda$main$2
	a (Ladj$c;Ldyy$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lahg;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$main$1
	a (Ldyy$c;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lahg;Ljoptsimple/OptionSpec;Ladj$a;)Ladj$b; lambda$main$0
	<clinit> ()V <clinit>
net/minecraft/server/Main$1 net/minecraft/server/Main$1
	a val$dedicatedServer
	<init> (Ljava/lang/String;Lahe;)V <init>
	run ()V run
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	n LOGGER
	b VANILLA_BRAND
	o AVERAGE_TICK_TIME_SMOOTHING
	p TICK_STATS_SPAN
	c MS_PER_TICK
	q OVERLOADED_THRESHOLD
	r OVERLOADED_WARNING_INTERVAL
	s STATUS_EXPIRE_TIME_NS
	t MAX_STATUS_PLAYER_SAMPLE
	d START_CHUNK_RADIUS
	u START_TICKING_CHUNK_COUNT
	v AUTOSAVE_INTERVAL
	w MAX_TICK_LATENCY
	e ABSOLUTE_MAX_WORLD_SIZE
	f DEMO_SETTINGS
	x DELAYED_TASKS_TICK_EXTENSION
	g ANONYMOUS_PLAYER_PROFILE
	h storageSource
	i playerDataStorage
	y tickables
	z metricsRecorder
	A profiler
	B onMetricsRecordingStopped
	C onMetricsRecordingFinished
	D willStartRecordingMetrics
	E debugCommandProfiler
	F debugCommandProfilerDelayStart
	G connection
	H progressListenerFactory
	I status
	J statusIcon
	K random
	L fixerUpper
	M localIp
	N port
	O registries
	P levels
	Q playerList
	R running
	S stopped
	T tickCount
	j proxy
	U onlineMode
	V preventProxyConnections
	W pvp
	X allowFlight
	Y motd
	Z playerIdleTimeout
	k tickTimes
	aa keyPair
	ab singleplayerProfile
	ac isDemo
	ad isReady
	ae lastOverloadWarning
	l services
	af lastServerStatus
	ag serverThread
	ah nextTickTime
	ai delayedTasksMaxNextTickTime
	aj mayHaveDelayedTasks
	ak packRepository
	al scoreboard
	am commandStorage
	an customBossEvents
	ao functionManager
	ap frameTimer
	aq enforceWhitelist
	ar averageTickTime
	as executor
	at serverId
	au resources
	av structureTemplateManager
	m worldData
	aw isSaving
	a (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; spin
	<init> (Ljava/lang/Thread;Ldyy$c;Laki;Ladk;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Ladh;Laip;)V <init>
	a (Ldyu;)V readScoreboard
	e ()Z initServer
	n_ ()V loadLevel
	r ()V forceDifficulty
	a (Laio;)V createLevels
	a (Laif;Ldzd;ZZ)V setInitialSpawn
	a (Ldze;)V setupDebugLevel
	b (Laio;)V prepareLevels
	o_ ()Lcmj; getDefaultGameType
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	a (ZZZ)Z saveAllChunks
	b (ZZZ)Z saveEverything
	close ()V close
	t ()V stopServer
	u ()Ljava/lang/String; getLocalIp
	a_ (Ljava/lang/String;)V setLocalIp
	v ()Z isRunning
	a (Z)V halt
	w ()V runServer
	a (Ljava/lang/Throwable;)Lo; constructOrExtractCrashReport
	bf ()Z haveTime
	p_ ()V waitUntilNextTick
	a (Ljava/lang/Runnable;)Ladi; wrapRunnable
	a (Ladi;)Z shouldRun
	x ()Z pollTask
	bg ()Z pollTaskInternal
	b (Ladi;)V doRunTask
	bh ()Ljava/util/Optional; loadStatusIcon
	y ()Ljava/util/Optional; getWorldScreenshotFile
	z ()Ljava/io/File; getServerDirectory
	a (Lo;)V onServerCrash
	g ()V onServerExit
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	bi ()Labt; buildServerStatus
	bj ()Labt$b; buildPlayerStatus
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Laif;)V synchronizeTime
	A ()V forceTimeSynchronization
	B ()Z isNetherEnabled
	b (Ljava/lang/Runnable;)V addTickable
	b (Ljava/lang/String;)V setId
	C ()Z isShutdown
	c (Ljava/lang/String;)Ljava/io/File; getFile
	D ()Laif; overworld
	a (Lacp;)Laif; getLevel
	E ()Ljava/util/Set; levelKeys
	F ()Ljava/lang/Iterable; getAllLevels
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	J ()[Ljava/lang/String; getPlayerNames
	getServerModName ()Ljava/lang/String; getServerModName
	b (Lab;)Lab; fillSystemReport
	a (Lab;)Lab; fillServerSystemReport
	K ()Laoz; getModdedStatus
	a (Lsw;)V sendSystemMessage
	L ()Ljava/security/KeyPair; getKeyPair
	M ()I getPort
	a (I)V setPort
	N ()Lcom/mojang/authlib/GameProfile; getSingleplayerProfile
	b (Lcom/mojang/authlib/GameProfile;)V setSingleplayerProfile
	O ()Z isSingleplayer
	P ()V initializeKeyPair
	a (Lbdu;Z)V setDifficulty
	b (I)I getScaledTrackingDistance
	bs ()V updateMobSpawningFlags
	b (Z)V setDifficultyLocked
	c (Laig;)V sendDifficultyUpdate
	Q ()Z isSpawningMonsters
	R ()Z isDemo
	c (Z)V setDemo
	S ()Ljava/util/Optional; getServerResourcePack
	T ()Z isResourcePackRequired
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	U ()Z usesAuthentication
	d (Z)V setUsesAuthentication
	V ()Z getPreventProxyConnections
	e (Z)V setPreventProxyConnections
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	n ()Z isEpollEnabled
	Y ()Z isPvpAllowed
	f (Z)V setPvpAllowed
	Z ()Z isFlightAllowed
	g (Z)V setFlightAllowed
	o ()Z isCommandBlockEnabled
	aa ()Ljava/lang/String; getMotd
	d (Ljava/lang/String;)V setMotd
	ab ()Z isStopped
	ac ()Lalk; getPlayerList
	a (Lalk;)V setPlayerList
	p ()Z isPublished
	a (Lcmj;)V setDefaultGameType
	ad ()Laix; getConnection
	ae ()Z isReady
	af ()Z hasGui
	a (Lcmj;ZI)Z publishServer
	ag ()I getTickCount
	ah ()I getSpawnProtectionRadius
	a (Laif;Lgu;Lbyo;)Z isUnderSpawnProtection
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	ak ()Ljava/net/Proxy; getProxy
	al ()I getPlayerIdleTimeout
	c (I)V setPlayerIdleTimeout
	am ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getSessionService
	an ()Lapj; getProfileKeySignatureValidator
	ao ()Lcom/mojang/authlib/GameProfileRepository; getProfileRepository
	ap ()Lalg; getProfileCache
	aq ()Labt; getStatus
	ar ()V invalidateStatus
	as ()I getAbsoluteMaxWorldSize
	at ()Z scheduleExecutables
	c (Ljava/lang/Runnable;)V executeIfPossible
	au ()Ljava/lang/Thread; getRunningThread
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	ax ()J getNextTickTime
	ay ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	a (Laif;)I getSpawnRadius
	az ()Ladc; getAdvancements
	aA ()Lade; getFunctions
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; reloadResources
	a (Laki;Lcma;ZLcaw;)Lcnf; configurePackRepository
	a (Laki;)Lcma; getSelectedPacks
	a (Lds;)V kickUnlistedPlayers
	aB ()Laki; getPackRepository
	aC ()Ldt; getCommands
	aD ()Lds; createCommandSourceStack
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	aE ()Lcjd; getRecipeManager
	aF ()Ladg; getScoreboard
	aG ()Ldyr; getCommandStorage
	aH ()Ldzn; getLootData
	aI ()Lcmi; getGameRules
	aJ ()Lado; getCustomBossEvents
	aK ()Z isEnforceWhitelist
	h (Z)V setEnforceWhitelist
	aL ()F getAverageTickTime
	c (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
	aM ()Laoo; getFrameTimer
	aN ()Lban; getProfiler
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/nio/file/Path;)V dumpServerProperties
	b (Ljava/nio/file/Path;)V saveDebugReport
	c (Ljava/nio/file/Path;)V dumpMiscStats
	d (Ljava/nio/file/Path;)V dumpGameRules
	e (Ljava/nio/file/Path;)V dumpClasspath
	f (Ljava/nio/file/Path;)V dumpThreads
	g (Ljava/nio/file/Path;)V dumpNativeModules
	bt ()V startMetricsRecordingTick
	bu ()V endMetricsRecordingTick
	aO ()Z isRecordingMetrics
	a (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V startRecordingMetrics
	aP ()V stopRecordingMetrics
	aQ ()V finishRecordingMetrics
	aR ()V cancelRecordingMetrics
	a (Ldyw;)Ljava/nio/file/Path; getWorldPath
	aS ()Z forceSynchronousWrites
	aT ()Ldvu; getStructureManager
	aU ()Ldze; getWorldData
	aV ()Lhs$b; registryAccess
	aW ()Lhl; registries
	a (Laig;)Lajd; createTextFilterForPlayer
	b (Laig;)Laih; createGameModeForPlayer
	aX ()Lcmj; getForcedGameType
	aY ()Lakx; getResourceManager
	aZ ()Z isCurrentlySaving
	ba ()Z isTimeProfilerRunning
	bb ()V startTimeProfiler
	bc ()Lbam; stopTimeProfiler
	bd ()I getMaxChainedNeighborUpdates
	a (Lsw;Lss$a;Ljava/lang/String;)V logChatMessage
	be ()Lsr; getChatDecorator
	d (Ljava/lang/Runnable;)V doRunTask
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	a (Ljava/util/function/Consumer;Lbam;)V lambda$startRecordingMetrics$30
	h (Ljava/nio/file/Path;)V lambda$startMetricsRecordingTick$29
	i (Ljava/nio/file/Path;)V lambda$startMetricsRecordingTick$28
	a (Lapb$a;)Ljava/lang/String; lambda$dumpNativeModules$27
	a (Ljava/util/Collection;Ljava/lang/String;)Z lambda$getSelectedPacks$26
	a (Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V lambda$reloadResources$25
	a (Lhs$b;Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage; lambda$reloadResources$24
	a (Lakn;Lada;)Lnet/minecraft/server/MinecraftServer$a; lambda$reloadResources$23
	a (Lakn;Lada;Ljava/lang/Throwable;)V lambda$reloadResources$22
	b (Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList; lambda$reloadResources$21
	bv ()Ljava/lang/String; lambda$fillSystemReport$20
	bw ()Ljava/lang/String; lambda$fillSystemReport$19
	bx ()Ljava/lang/String; lambda$fillSystemReport$18
	by ()Ljava/lang/String; lambda$fillSystemReport$17
	a (Lakg;)Ljava/lang/String; lambda$fillSystemReport$16
	bz ()Ljava/lang/String; lambda$fillSystemReport$15
	bA ()Ljava/lang/String; lambda$fillSystemReport$14
	c (Laif;)Ljava/lang/String; lambda$tickChildren$13
	j (Ljava/nio/file/Path;)Ljava/util/Optional; lambda$loadStatusIcon$12
	bB ()Ljava/util/Optional; lambda$loadStatusIcon$11
	k (Ljava/nio/file/Path;)Z lambda$loadStatusIcon$10
	l (Ljava/nio/file/Path;)Z lambda$loadStatusIcon$9
	bC ()Z lambda$waitUntilNextTick$8
	bD ()Z lambda$stopServer$7
	d (Laif;)Z lambda$stopServer$6
	a (Laif;Laid;Ldzd;Lhe$c;)V lambda$setInitialSpawn$5
	a (Lhr;)Ljava/util/Optional; lambda$setInitialSpawn$4
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$spin$3
	a (Ljava/util/concurrent/atomic/AtomicReference;)V lambda$spin$2
	m (Ljava/nio/file/Path;)V lambda$new$1
	a (Lbam;)V lambda$new$0
	<clinit> ()V <clinit>
net/minecraft/server/MinecraftServer$1 net/minecraft/server/MinecraftServer$1
	a val$entries
	b val$gameRules
	c this$0
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/List;Lcmi;)V <init>
	a (Lcmi$e;Lcmi$f;)V visit
net/minecraft/server/MinecraftServer$a net/minecraft/server/MinecraftServer$ReloadableResources
	a resourceManager
	b managers
	<init> (Lakn;Lada;)V <init>
	close ()V close
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lakn; resourceManager
	b ()Lada; managers
net/minecraft/server/MinecraftServer$b net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	a url
	b hash
	c isRequired
	d prompt
	<init> (Ljava/lang/String;Ljava/lang/String;ZLsw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; url
	b ()Ljava/lang/String; hash
	c ()Z isRequired
	d ()Lsw; prompt
net/minecraft/server/MinecraftServer$c net/minecraft/server/MinecraftServer$TimeProfiler
	a startNanos
	b startTick
	<init> (JI)V <init>
	a (JI)Lbam; stop
net/minecraft/server/MinecraftServer$c$1 net/minecraft/server/MinecraftServer$TimeProfiler$1
	a val$stopNanos
	b val$stopTick
	c this$0
	<init> (Lnet/minecraft/server/MinecraftServer$c;JI)V <init>
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
acy net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d dataFixer
	e playerList
	f playerSavePath
	g progress
	h visible
	i progressChanged
	j rootsToUpdate
	k player
	l lastSelectedTab
	m isFirstPacket
	<init> (Lcom/mojang/datafixers/DataFixer;Lalk;Ladc;Ljava/nio/file/Path;Laig;)V <init>
	a (Laig;)V setPlayer
	a ()V stopListening
	a (Ladc;)V reload
	b (Ladc;)V registerListeners
	c (Ladc;)V checkForAutomaticTriggers
	d (Ladc;)V load
	b ()V save
	a (Lae;Ljava/lang/String;)Z award
	b (Lae;Ljava/lang/String;)Z revoke
	c (Lae;)V markForVisibilityUpdate
	d (Lae;)V registerListeners
	e (Lae;)V unregisterListeners
	b (Laig;)V flushDirty
	a (Lae;)V setSelectedTab
	b (Lae;)Lag; getOrStartProgress
	a (Lae;Lag;)V startProgress
	a (Lae;Ljava/util/Set;Ljava/util/Set;)V updateTreeVisibility
	a (Ljava/util/Set;Ljava/util/Set;Lae;Z)V lambda$updateTreeVisibility$2
	f (Lae;)Z lambda$updateTreeVisibility$1
	a (Ladc;Ljava/util/Map$Entry;)V lambda$load$0
	<clinit> ()V <clinit>
acy$1 net/minecraft/server/PlayerAdvancements$1
	<init> ()V <init>
acz net/minecraft/server/RegistryLayer
	a STATIC
	b WORLDGEN
	c DIMENSIONS
	d RELOADABLE
	e VALUES
	f STATIC_ACCESS
	g $VALUES
	values ()[Lacz; values
	valueOf (Ljava/lang/String;)Lacz; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Lhl; createRegistryAccess
	b ()[Lacz; $values
	<clinit> ()V <clinit>
ada net/minecraft/server/ReloadableServerResources
	a LOGGER
	b DATA_RELOAD_INITIAL_TASK
	c commandBuildContext
	d commands
	e recipes
	f tagManager
	g lootData
	h advancements
	i functionLibrary
	<init> (Lhs$b;Lcaw;Ldt$a;I)V <init>
	a ()Ladd; getFunctionLibrary
	b ()Ldzn; getLootData
	c ()Lcjd; getRecipeManager
	d ()Ldt; getCommands
	e ()Ladc; getAdvancements
	f ()Ljava/util/List; listeners
	a (Lakx;Lhs$b;Lcaw;Ldt$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadResources
	a (Lhs;)V updateRegistryTags
	a (Lhs;Lann$a;)V updateRegistryTags
	a (Ljava/util/Map$Entry;)Ljava/util/List; lambda$updateRegistryTags$4
	a (Lacp;Ljava/util/Map$Entry;)Lanl; lambda$updateRegistryTags$3
	b (Lhs;Lann$a;)V lambda$updateRegistryTags$2
	a (Lada;Ljava/lang/Object;)Lada; lambda$loadResources$1
	a (Lada;Ljava/lang/Object;Ljava/lang/Throwable;)V lambda$loadResources$0
	<clinit> ()V <clinit>
adb net/minecraft/server/RunningOnDifferentThreadException
	a RUNNING_ON_DIFFERENT_THREAD
	<init> ()V <init>
	fillInStackTrace ()Ljava/lang/Throwable; fillInStackTrace
	<clinit> ()V <clinit>
adc net/minecraft/server/ServerAdvancementManager
	a LOGGER
	b GSON
	c advancements
	d lootData
	<init> (Ldzn;)V <init>
	a (Ljava/util/Map;Lakx;Lban;)V apply
	a (Lacq;)Lae; getAdvancement
	a ()Ljava/util/Collection; getAllAdvancements
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	a (Ljava/util/Map;Lacq;Lcom/google/gson/JsonElement;)V lambda$apply$0
	<clinit> ()V <clinit>
add net/minecraft/server/ServerFunctionLibrary
	a LOGGER
	b LISTER
	c functions
	d tagsLoader
	e tags
	f functionCompilationLevel
	g dispatcher
	a (Lacq;)Ljava/util/Optional; getFunction
	a ()Ljava/util/Map; getFunctions
	b (Lacq;)Ljava/util/Collection; getTag
	b ()Ljava/lang/Iterable; getAvailableTags
	<init> (ILcom/mojang/brigadier/CommandDispatcher;)V <init>
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lakv;)Ljava/util/List; readLines
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$reload$7
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lacq;Ljava/util/concurrent/CompletableFuture;)V lambda$reload$6
	a (Lacq;Lcom/google/common/collect/ImmutableMap$Builder;Ldn;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$reload$5
	a (Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage; lambda$reload$4
	a (Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map; lambda$reload$3
	a (Ljava/util/Map$Entry;Lacq;Lds;)Ldn; lambda$reload$2
	a (Lakx;)Ljava/util/Map; lambda$reload$1
	b (Lakx;)Ljava/util/Map; lambda$reload$0
	<clinit> ()V <clinit>
ade net/minecraft/server/ServerFunctionManager
	a NO_RECURSIVE_TRACES
	b TICK_FUNCTION_TAG
	c LOAD_FUNCTION_TAG
	d server
	e context
	f ticking
	g postReload
	h library
	<init> (Lnet/minecraft/server/MinecraftServer;Ladd;)V <init>
	a ()I getCommandLimit
	b ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	c ()V tick
	a (Ljava/util/Collection;Lacq;)V executeTagFunctions
	a (Ldn;Lds;)I execute
	a (Ldn;Lds;Lade$c;)I execute
	a (Ladd;)V replaceLibrary
	b (Ladd;)V postReload
	d ()Lds; getGameLoopSender
	a (Lacq;)Ljava/util/Optional; get
	b (Lacq;)Ljava/util/Collection; getTag
	e ()Ljava/lang/Iterable; getFunctionNames
	f ()Ljava/lang/Iterable; getTagNames
	<clinit> ()V <clinit>
ade$a net/minecraft/server/ServerFunctionManager$ExecutionContext
	b depth
	c tracer
	d commandQueue
	e nestedCalls
	f abortCurrentDepth
	a this$0
	<init> (Lade;Lade$c;)V <init>
	a (Ldn;Lds;)V delayFunctionCall
	a (Lds;)Lds; wrapSender
	b (Ldn;Lds;)I runTopCommand
	a (Ljava/lang/String;)V reportError
ade$a$a net/minecraft/server/ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer
	b wrapped
	a this$1
	<init> (Lade$a;Ljava/util/function/IntConsumer;)V <init>
	accept (I)V accept
ade$b net/minecraft/server/ServerFunctionManager$QueuedCommand
	a sender
	b depth
	c entry
	<init> (Lds;ILdn$c;)V <init>
	a (Lade;Ljava/util/Deque;ILade$c;)V execute
	toString ()Ljava/lang/String; toString
ade$c net/minecraft/server/ServerFunctionManager$TraceCallbacks
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	b (ILjava/lang/String;)V onError
	a (ILacq;I)V onCall
adf net/minecraft/server/ServerInterface
	a ()Lahf; getProperties
	b ()Ljava/lang/String; getServerIp
	d ()I getServerPort
	f ()Ljava/lang/String; getServerName
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	J ()[Ljava/lang/String; getPlayerNames
	q ()Ljava/lang/String; getLevelIdName
	s ()Ljava/lang/String; getPluginNames
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
adg net/minecraft/server/ServerScoreboard
	g server
	h trackedObjectives
	i dirtyListeners
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a (Leff;)V onScoreChanged
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lefd;)V onPlayerScoreRemoved
	a (ILefd;)V setDisplayObjective
	a (Ljava/lang/String;Lefe;)Z addPlayerToTeam
	b (Ljava/lang/String;Lefe;)V removePlayerFromTeam
	a (Lefd;)V onObjectiveAdded
	b (Lefd;)V onObjectiveChanged
	c (Lefd;)V onObjectiveRemoved
	a (Lefe;)V onTeamAdded
	b (Lefe;)V onTeamChanged
	c (Lefe;)V onTeamRemoved
	a (Ljava/lang/Runnable;)V addDirtyListener
	a ()V setDirty
	d (Lefd;)Ljava/util/List; getStartTrackingPackets
	e (Lefd;)V startTrackingObjective
	f (Lefd;)Ljava/util/List; getStopTrackingPackets
	g (Lefd;)V stopTrackingObjective
	h (Lefd;)I getObjectiveDisplaySlotCount
	b ()Lefh; createData
	a (Lqr;)Lefh; createData
adg$a net/minecraft/server/ServerScoreboard$Method
	a CHANGE
	b REMOVE
	c $VALUES
	values ()[Ladg$a; values
	valueOf (Ljava/lang/String;)Ladg$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ladg$a; $values
	<clinit> ()V <clinit>
adh net/minecraft/server/Services
	a sessionService
	b servicesKeySet
	c profileRepository
	d profileCache
	e USERID_CACHE_FILE
	<init> (Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/GameProfileRepository;Lalg;)V <init>
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Ladh; create
	a ()Lapj; profileKeySignatureValidator
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; sessionService
	c ()Lcom/mojang/authlib/yggdrasil/ServicesKeySet; servicesKeySet
	d ()Lcom/mojang/authlib/GameProfileRepository; profileRepository
	e ()Lalg; profileCache
adi net/minecraft/server/TickTask
	a tick
	b runnable
	<init> (ILjava/lang/Runnable;)V <init>
	a ()I getTick
	run ()V run
adj net/minecraft/server/WorldLoader
	a LOGGER
	<init> ()V <init>
	a (Ladj$c;Ladj$f;Ladj$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; load
	a (Lakx;Lhl;Lacz;Ljava/util/List;)Lhs$b; loadLayer
	b (Lakx;Lhl;Lacz;Ljava/util/List;)Lhl; loadAndReplaceLayer
	a (Lhs$b;Ladj$e;Lakn;Lhl;Ladj$b;Lada;)Ljava/lang/Object; lambda$load$1
	a (Lakn;Lada;Ljava/lang/Throwable;)V lambda$load$0
	<clinit> ()V <clinit>
adj$a net/minecraft/server/WorldLoader$DataLoadContext
	a resources
	b dataConfiguration
	c datapackWorldgen
	d datapackDimensions
	<init> (Lakx;Lcnf;Lhs$b;Lhs$b;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lakx; resources
	b ()Lcnf; dataConfiguration
	c ()Lhs$b; datapackWorldgen
	d ()Lhs$b; datapackDimensions
adj$b net/minecraft/server/WorldLoader$DataLoadOutput
	a cookie
	b finalDimensions
	<init> (Ljava/lang/Object;Lhs$b;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; cookie
	b ()Lhs$b; finalDimensions
adj$c net/minecraft/server/WorldLoader$InitConfig
	a packConfig
	b commandSelection
	c functionCompilationLevel
	<init> (Ladj$d;Ldt$a;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ladj$d; packConfig
	b ()Ldt$a; commandSelection
	c ()I functionCompilationLevel
adj$d net/minecraft/server/WorldLoader$PackConfig
	a packRepository
	b initialDataConfig
	c safeMode
	d initMode
	<init> (Laki;Lcnf;ZZ)V <init>
	a ()Lcom/mojang/datafixers/util/Pair; createResourceManager
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Laki; packRepository
	c ()Lcnf; initialDataConfig
	d ()Z safeMode
	e ()Z initMode
adj$e net/minecraft/server/WorldLoader$ResultFactory
	create (Lakn;Lada;Lhl;Ljava/lang/Object;)Ljava/lang/Object; create
adj$f net/minecraft/server/WorldLoader$WorldDataSupplier
	get (Ladj$a;)Ladj$b; get
adk net/minecraft/server/WorldStem
	a resourceManager
	b dataPackResources
	c registries
	d worldData
	<init> (Lakn;Lada;Lhl;Ldze;)V <init>
	close ()V close
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lakn; resourceManager
	b ()Lada; dataPackResources
	c ()Lhl; registries
	d ()Ldze; worldData
adl net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	a VISIBILITY_DEPTH
	<init> ()V <init>
	a (Lae;Z)Ladl$b; evaluateVisibilityRule
	a (Lit/unimi/dsi/fastutil/Stack;)Z evaluateVisiblityForUnfinishedNode
	a (Lae;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Ladl$a;)Z evaluateVisibility
	a (Lae;Ljava/util/function/Predicate;Ladl$a;)V evaluateVisibility
adl$a net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
	accept (Lae;Z)V accept
adl$b net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	a SHOW
	b HIDE
	c NO_CHANGE
	d $VALUES
	values ()[Ladl$b; values
	valueOf (Ljava/lang/String;)Ladl$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ladl$b; $values
	<clinit> ()V <clinit>
adm net/minecraft/server/advancements/package-info
adn net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	<init> (Lacq;Lsw;)V <init>
	a ()Lacq; getTextId
	a (Laig;)V addPlayer
	a (Ljava/util/UUID;)V addOfflinePlayer
	b (Laig;)V removePlayer
	b ()V removeAllPlayers
	c ()I getValue
	d ()I getMax
	a (I)V setValue
	b (I)V setMax
	e ()Lsw; getDisplayName
	a (Ljava/util/Collection;)Z setPlayers
	f ()Lqr; save
	a (Lqr;Lacq;)Ladn; load
	c (Laig;)V onPlayerConnect
	d (Laig;)V onPlayerDisconnect
	a (Lts;)Lts; lambda$getDisplayName$0
ado net/minecraft/server/bossevents/CustomBossEvents
	a events
	<init> ()V <init>
	a (Lacq;)Ladn; get
	a (Lacq;Lsw;)Ladn; create
	a (Ladn;)V remove
	a ()Ljava/util/Collection; getIds
	b ()Ljava/util/Collection; getEvents
	c ()Lqr; save
	a (Lqr;)V load
	a (Laig;)V onPlayerConnect
	b (Laig;)V onPlayerDisconnect
adp net/minecraft/server/bossevents/package-info
adq net/minecraft/server/chase/ChaseClient
	a LOGGER
	b RECONNECT_INTERVAL_SECONDS
	c serverHost
	d serverPort
	e server
	f wantsToRun
	g socket
	h thread
	<init> (Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V <init>
	a ()V start
	b ()V stop
	c ()V run
	a (Ljava/lang/String;)V handleMessage
	a (Ljava/util/Scanner;)V handleTeleport
	b (Ljava/util/Scanner;)Ljava/util/Optional; parseTarget
	b (Ljava/lang/String;)V executeCommand
	c (Ljava/lang/String;)V lambda$executeCommand$1
	a (Ladq$a;)V lambda$handleTeleport$0
	<clinit> ()V <clinit>
adq$a net/minecraft/server/chase/ChaseClient$TeleportTarget
	a level
	b pos
	c rot
	<init> (Lacp;Leei;Leeh;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; level
	b ()Leei; pos
	c ()Leeh; rot
adr net/minecraft/server/chase/ChaseServer
	a LOGGER
	b serverBindAddress
	c serverPort
	d playerList
	e broadcastIntervalMs
	f wantsToRun
	g serverSocket
	h clientSockets
	<init> (Ljava/lang/String;ILalk;I)V <init>
	a ()V start
	c ()V runSender
	b ()V stop
	d ()V runAcceptor
	e ()Ladr$a; getPlayerPosition
	a (Ljava/net/Socket;[B)V lambda$runSender$0
	<clinit> ()V <clinit>
adr$a net/minecraft/server/chase/ChaseServer$PlayerPosition
	a dimensionName
	b x
	c y
	d z
	e yRot
	f xRot
	<init> (Ljava/lang/String;DDDFF)V <init>
	g ()Ljava/lang/String; format
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; dimensionName
	b ()D x
	c ()D y
	d ()D z
	e ()F yRot
	f ()F xRot
ads net/minecraft/server/chase/package-info
adt net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Ladt$a;Ljava/util/Collection;)I perform
	a (Lds;Ljava/util/Collection;Ladt$a;Lae;Ljava/lang/String;)I performCriterion
	a (Lae;Ladt$b;)Ljava/util/List; getAdvancements
	a (Lae;Ljava/util/List;)V addChildren
	a (Ladt$a;Ljava/lang/String;Lae;Ljava/util/Collection;)Lsw; lambda$performCriterion$21
	b (Ladt$a;Ljava/lang/String;Lae;Ljava/util/Collection;)Lsw; lambda$performCriterion$20
	a (Ladt$a;Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$perform$19
	b (Ladt$a;Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$perform$18
	c (Ladt$a;Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$perform$17
	d (Ladt$a;Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$perform$16
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$10
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
adt$a net/minecraft/server/commands/AdvancementCommands$Action
	a GRANT
	b REVOKE
	c key
	d $VALUES
	values ()[Ladt$a; values
	valueOf (Ljava/lang/String;)Ladt$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laig;Ljava/lang/Iterable;)I perform
	a (Laig;Lae;)Z perform
	a (Laig;Lae;Ljava/lang/String;)Z performCriterion
	a ()Ljava/lang/String; getKey
	b ()[Ladt$a; $values
	<clinit> ()V <clinit>
adt$a$1 net/minecraft/server/commands/AdvancementCommands$Action$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laig;Lae;)Z perform
	a (Laig;Lae;Ljava/lang/String;)Z performCriterion
adt$a$2 net/minecraft/server/commands/AdvancementCommands$Action$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Laig;Lae;)Z perform
	a (Laig;Lae;Ljava/lang/String;)Z performCriterion
adt$b net/minecraft/server/commands/AdvancementCommands$Mode
	a ONLY
	b THROUGH
	c FROM
	d UNTIL
	e EVERYTHING
	f parents
	g children
	h $VALUES
	values ()[Ladt$b; values
	valueOf (Ljava/lang/String;)Ladt$b; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()[Ladt$b; $values
	<clinit> ()V <clinit>
adu net/minecraft/server/commands/AttributeCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_SUCH_ATTRIBUTE
	c ERROR_NO_SUCH_MODIFIER
	d ERROR_MODIFIER_ALREADY_PRESENT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lbfj;Lhe;)Lbhc; getAttributeInstance
	a (Lbfj;)Lbfz; getLivingEntity
	b (Lbfj;Lhe;)Lbfz; getEntityWithAttribute
	a (Lds;Lbfj;Lhe;D)I getAttributeValue
	b (Lds;Lbfj;Lhe;D)I getAttributeBase
	a (Lds;Lbfj;Lhe;Ljava/util/UUID;D)I getAttributeModifier
	c (Lds;Lbfj;Lhe;D)I setAttributeBase
	a (Lds;Lbfj;Lhe;Ljava/util/UUID;Ljava/lang/String;DLbhe$a;)I addModifier
	a (Lds;Lbfj;Lhe;Ljava/util/UUID;)I removeModifier
	a (Lhe;)Lsw; getAttributeDescription
	a (Ljava/util/UUID;Lhe;Lbfj;)Lsw; lambda$removeModifier$21
	b (Ljava/util/UUID;Lhe;Lbfj;)Lsw; lambda$addModifier$20
	a (Lhe;Lbfj;D)Lsw; lambda$setAttributeBase$19
	a (Ljava/util/UUID;Lhe;Lbfj;D)Lsw; lambda$getAttributeModifier$18
	b (Lhe;Lbfj;D)Lsw; lambda$getAttributeBase$17
	c (Lhe;Lbfj;D)Lsw; lambda$getAttributeValue$16
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Lds;)Z lambda$register$4
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
adv net/minecraft/server/commands/BanIpCommands
	a ERROR_INVALID_IP
	b ERROR_ALREADY_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/lang/String;Lsw;)I banIpOrName
	b (Lds;Ljava/lang/String;Lsw;)I banIp
	a (Ljava/util/List;)Lsw; lambda$banIp$4
	a (Ljava/lang/String;Lali;)Lsw; lambda$banIp$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
adw net/minecraft/server/commands/BanListCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I showList
	a (Lalf;)Lsw; lambda$showList$6
	a (Ljava/util/Collection;)Lsw; lambda$showList$5
	a ()Lsw; lambda$showList$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
adx net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Lsw;)I banPlayers
	a (Lcom/mojang/authlib/GameProfile;Lalr;)Lsw; lambda$banPlayers$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
ady net/minecraft/server/commands/BossBarCommands
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a SUGGEST_BOSS_BAR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ladn;)I getValue
	b (Lds;Ladn;)I getMax
	c (Lds;Ladn;)I getVisible
	d (Lds;Ladn;)I getPlayers
	a (Lds;Ladn;Z)I setVisible
	a (Lds;Ladn;I)I setValue
	b (Lds;Ladn;I)I setMax
	a (Lds;Ladn;Lbdn$a;)I setColor
	a (Lds;Ladn;Lbdn$b;)I setStyle
	a (Lds;Ladn;Lsw;)I setName
	a (Lds;Ladn;Ljava/util/Collection;)I setPlayers
	a (Lds;)I listBars
	a (Lds;Lacq;Lsw;)I createBar
	e (Lds;Ladn;)I removeBar
	a (Lcom/mojang/brigadier/context/CommandContext;)Ladn; getBossBar
	a (Ladn;)Lsw; lambda$removeBar$47
	b (Ladn;)Lsw; lambda$createBar$46
	a (Ljava/util/Collection;)Lsw; lambda$listBars$45
	a ()Lsw; lambda$listBars$44
	a (Ladn;Ljava/util/Collection;)Lsw; lambda$setPlayers$43
	c (Ladn;)Lsw; lambda$setPlayers$42
	d (Ladn;)Lsw; lambda$setName$41
	e (Ladn;)Lsw; lambda$setStyle$40
	f (Ladn;)Lsw; lambda$setColor$39
	a (Ladn;I)Lsw; lambda$setMax$38
	b (Ladn;I)Lsw; lambda$setValue$37
	g (Ladn;)Lsw; lambda$setVisible$36
	h (Ladn;)Lsw; lambda$setVisible$35
	i (Ladn;)Lsw; lambda$getPlayers$34
	j (Ladn;)Lsw; lambda$getPlayers$33
	k (Ladn;)Lsw; lambda$getVisible$32
	l (Ladn;)Lsw; lambda$getVisible$31
	m (Ladn;)Lsw; lambda$getMax$30
	n (Ladn;)Lsw; lambda$getValue$29
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lds;)Z lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
adz net/minecraft/server/commands/ChaseCommand
	b DEFAULT_CONNECT_HOST
	c DEFAULT_BIND_ADDRESS
	d DEFAULT_PORT
	e BROADCAST_INTERVAL_MS
	a DIMENSION_NAMES
	f chaseServer
	g chaseClient
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I stop
	b (Lds;)Z alreadyRunning
	a (Lds;Ljava/lang/String;I)I lead
	b (Lds;Ljava/lang/String;I)I follow
	a (Ljava/lang/String;I)Lsw; lambda$follow$10
	a (I)Lsw; lambda$lead$9
	a ()Lsw; lambda$stop$8
	b ()Lsw; lambda$stop$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
	<clinit> ()V <clinit>
aea net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
	a (ILjava/util/Collection;)Lsw; lambda$clearInventory$12
	b (ILjava/util/Collection;)Lsw; lambda$clearInventory$11
	c (ILjava/util/Collection;)Lsw; lambda$clearInventory$10
	d (ILjava/util/Collection;)Lsw; lambda$clearInventory$9
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Lcfz;)Z lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcfz;)Z lambda$register$3
	a (Lds;)Z lambda$register$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aeb net/minecraft/server/commands/CloneCommands
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a FILTER_AIR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Ldm;Laeb$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; beginEndDestinationAndModeSuffix
	a (Lcom/mojang/brigadier/context/CommandContext;Laif;Ljava/lang/String;)Laeb$c; getLoadedDimensionAndPosition
	a (Ldm;Laeb$b;Laeb$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; destinationAndModeSuffix
	a (Laeb$b;Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapWithCloneMode
	a (Lds;Laeb$c;Laeb$c;Laeb$c;Ljava/util/function/Predicate;Laeb$d;)I clone
	a (I)Lsw; lambda$clone$23
	a (Laeb$b;Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$wrapWithCloneMode$22
	b (Laeb$b;Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$wrapWithCloneMode$21
	c (Laeb$b;Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$wrapWithCloneMode$20
	a (Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$destinationAndModeSuffix$19
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$destinationAndModeSuffix$18
	b (Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$destinationAndModeSuffix$17
	b (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$destinationAndModeSuffix$16
	c (Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$destinationAndModeSuffix$15
	a (Ldcf;)Z lambda$destinationAndModeSuffix$14
	c (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; lambda$destinationAndModeSuffix$13
	b (Ldcf;)Z lambda$destinationAndModeSuffix$12
	d (Laeb$b;Laeb$b;Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$destinationAndModeSuffix$11
	c (Ldcf;)Z lambda$destinationAndModeSuffix$10
	a (Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)Laeb$c; lambda$destinationAndModeSuffix$9
	b (Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)Laeb$c; lambda$destinationAndModeSuffix$8
	c (Laeb$b;Lcom/mojang/brigadier/context/CommandContext;)Laeb$c; lambda$destinationAndModeSuffix$7
	d (Lcom/mojang/brigadier/context/CommandContext;)Laif; lambda$beginEndDestinationAndModeSuffix$6
	e (Lcom/mojang/brigadier/context/CommandContext;)Laif; lambda$beginEndDestinationAndModeSuffix$5
	f (Lcom/mojang/brigadier/context/CommandContext;)Laif; lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)Laif; lambda$register$3
	a (Lds;)Z lambda$register$2
	d (Ldcf;)Z lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aeb$a net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
	<init> (Lgu;Ldcb;Lqr;)V <init>
aeb$b net/minecraft/server/commands/CloneCommands$CommandFunction
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
aeb$c net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	a dimension
	b position
	<init> (Laif;Lgu;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Laif; dimension
	b ()Lgu; position
aeb$d net/minecraft/server/commands/CloneCommands$Mode
	a FORCE
	b MOVE
	c NORMAL
	d canOverlap
	e $VALUES
	values ()[Laeb$d; values
	valueOf (Ljava/lang/String;)Laeb$d; valueOf
	<init> (Ljava/lang/String;IZ)V <init>
	a ()Z canOverlap
	b ()[Laeb$d; $values
	<clinit> ()V <clinit>
aec net/minecraft/server/commands/DamageCommand
	a ERROR_INVULNERABLE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lbfj;FLben;)I damage
	a (FLbfj;)Lsw; lambda$damage$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aed net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d ERROR_PACK_FEATURES_NOT_ENABLED
	e SELECTED_PACKS
	f UNSELECTED_PACKS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lakg;Laed$a;)I enablePack
	a (Lds;Lakg;)I disablePack
	a (Lds;)I listPacks
	b (Lds;)I listAvailablePacks
	c (Lds;)I listEnabledPacks
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lakg; getPack
	a (Ljava/util/Collection;)Lsw; lambda$listEnabledPacks$31
	a (Lakg;)Lsw; lambda$listEnabledPacks$30
	a ()Lsw; lambda$listEnabledPacks$29
	a (Ljava/util/List;)Lsw; lambda$listAvailablePacks$28
	b (Lakg;)Lsw; lambda$listAvailablePacks$27
	b ()Lsw; lambda$listAvailablePacks$26
	a (Ljava/util/Collection;Lcaw;Lakg;)Z lambda$listAvailablePacks$25
	c (Lakg;)Lsw; lambda$disablePack$24
	d (Lakg;)Lsw; lambda$enablePack$23
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	a (Ljava/util/List;Lakg;)V lambda$register$17
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lakg;)V lambda$register$14
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lakg;)V lambda$register$12
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	b (Ljava/util/List;Lakg;)V lambda$register$10
	e (Lakg;)Lakg; lambda$register$9
	d (Lds;)Z lambda$register$8
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$7
	a (Ljava/util/Collection;Ljava/lang/String;)Z lambda$static$6
	a (Lcaw;Lakg;)Z lambda$static$5
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aed$a net/minecraft/server/commands/DataPackCommand$Inserter
	apply (Ljava/util/List;Lakg;)V apply
aee net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I deopPlayers
	a (Ljava/util/Collection;)Lsw; lambda$deopPlayers$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aef net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I start
	b (Lds;)I stop
	a (Lds;Ljava/util/Collection;)I traceFunction
	a (ILjava/util/Collection;Ljava/lang/String;)Lsw; lambda$traceFunction$8
	b (ILjava/util/Collection;Ljava/lang/String;)Lsw; lambda$traceFunction$7
	a (DLbam;D)Lsw; lambda$stop$6
	a ()Lsw; lambda$start$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lds;)Z lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	d (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aef$a net/minecraft/server/commands/DebugCommand$Tracer
	b INDENT_OFFSET
	c output
	d lastIndent
	e waitingForResult
	<init> (Ljava/io/PrintWriter;)V <init>
	a (I)V indentAndSave
	b (I)V printIndent
	e ()V newLine
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	a (ILacq;I)V onCall
	b (ILjava/lang/String;)V onError
	a (Lsw;)V sendSystemMessage
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	f_ ()Z alwaysAccepts
aeg net/minecraft/server/commands/DebugMobSpawningCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbgc;Lgu;)I spawnMobs
	a (Lbgc;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
aeh net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lgu;)I fillBlocks
	a ()Lsw; lambda$fillBlocks$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aei net/minecraft/server/commands/DefaultGameModeCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lcmj;)I setMode
	a (Lcmj;)Lsw; lambda$setMode$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
aej net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbdu;)I setDifficulty
	a (Lbdu;)Lsw; lambda$setDifficulty$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lbdu;)Lsw; lambda$register$3
	a (Lds;)Z lambda$register$2
	a (Lbdu;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aek net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Ljava/util/Collection;Lhe;Ljava/lang/Integer;IZ)I giveEffect
	a (Lds;Ljava/util/Collection;)I clearEffects
	a (Lds;Ljava/util/Collection;Lhe;)I clearEffect
	a (Lbey;Ljava/util/Collection;)Lsw; lambda$clearEffect$16
	b (Lbey;Ljava/util/Collection;)Lsw; lambda$clearEffect$15
	a (Ljava/util/Collection;)Lsw; lambda$clearEffects$14
	b (Ljava/util/Collection;)Lsw; lambda$clearEffects$13
	a (Lbey;Ljava/util/Collection;I)Lsw; lambda$giveEffect$12
	b (Lbey;Ljava/util/Collection;I)Lsw; lambda$giveEffect$11
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
ael net/minecraft/server/commands/EmoteCommands
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ltl;)V lambda$register$0
aem net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Ljava/util/Collection;Lhe;I)I enchant
	a (Lckg;ILjava/util/Collection;)Lsw; lambda$enchant$8
	b (Lckg;ILjava/util/Collection;)Lsw; lambda$enchant$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Lds;)Z lambda$register$4
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aen net/minecraft/server/commands/ExecuteCommand
	a MAX_TEST_AREA
	b ERROR_AREA_TOO_LARGE
	c ERROR_CONDITIONAL_FAILED
	d ERROR_CONDITIONAL_FAILED_COUNT
	e CALLBACK_CHAINER
	f SUGGEST_PREDICATE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Lds;Ljava/util/Collection;Lefd;Z)Lds; storeValue
	a (Lds;Ladn;ZZ)Lds; storeValue
	a (Lds;Lagx;Leh$g;Ljava/util/function/IntFunction;Z)Lds; storeData
	a (Laif;Lgu;)Z isChunkLoaded
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLdm;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (ZLaen$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	a (Lagx;Leh$g;)I checkMatchingData
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lcj$d;)Z checkScore
	a (Lds;Leck;)Z checkCustomPredicate
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLaen$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
	a (Laif;Lgu;Lgu;Lgu;Z)Ljava/util/OptionalInt; checkRegions
	a (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToOneEntityRelation
	b (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToManyEntityRelation
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRelationOperations
	a (Lds;Lhe$c;)Lds; spawnEntityAndRedirect
	a (Lbfj;)Ljava/util/stream/Stream; lambda$createRelationOperations$83
	b (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$82
	c (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$81
	d (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$80
	e (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$79
	f (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$78
	g (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$77
	h (Lbfj;)Ljava/util/Optional; lambda$createRelationOperations$76
	a (Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$expandOneToManyEntityRelation$75
	i (Lbfj;)Z lambda$expandOneToManyEntityRelation$74
	b (Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$expandOneToOneEntityRelation$73
	a (Lds;Lbfj;)Ljava/util/List; lambda$expandOneToOneEntityRelation$72
	j (Lbfj;)Z lambda$expandOneToOneEntityRelation$71
	a ()Lsw; lambda$checkUnlessRegions$70
	a (Ljava/util/OptionalInt;)Lsw; lambda$checkIfRegions$69
	a (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$68
	b (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$67
	a (ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addIfBlocksConditional$66
	a (ZLaen$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditional$65
	b ()Lsw; lambda$addConditional$64
	b (ZLaen$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditional$63
	a (Laen$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$62
	c ()Lsw; lambda$createNumericConditionalHandler$61
	b (Laen$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$60
	a (I)Lsw; lambda$createNumericConditionalHandler$59
	a (Lcom/mojang/brigadier/tree/CommandNode;ZLagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$addConditionals$58
	a (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$57
	a (ZLagy$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$56
	a (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$55
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$54
	c (ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$53
	c (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$52
	d (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$51
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$addConditionals$50
	e (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$49
	b (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$addConditionals$48
	f (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$47
	c (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$addConditionals$46
	g (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$45
	d (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$addConditionals$44
	h (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$43
	i (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$42
	j (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$41
	k (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$40
	l (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$39
	a (Lagx;ZLeh$g;Ljava/util/function/IntFunction;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeData$38
	a (ZZLadn;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$37
	a (Ljava/util/Collection;Lefg;Lefd;ZLcom/mojang/brigadier/context/CommandContext;ZI)V lambda$storeValue$36
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lagy$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$wrapStores$35
	a (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$34
	a (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$33
	b (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$32
	b (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$31
	c (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$30
	c (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$29
	d (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$28
	d (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$27
	e (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$26
	e (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$25
	f (Lagy$c;ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$24
	f (Lcom/mojang/brigadier/context/CommandContext;I)Lrk; lambda$wrapStores$23
	d (ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$22
	e (ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$21
	f (ZLcom/mojang/brigadier/context/CommandContext;)Lds; lambda$wrapStores$20
	m (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$19
	n (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$18
	o (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$17
	p (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$16
	q (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$15
	r (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$14
	s (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$13
	t (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$12
	u (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$11
	v (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$10
	w (Lcom/mojang/brigadier/context/CommandContext;)Lds; lambda$register$9
	x (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$8
	y (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$7
	a (Lds;)Z lambda$register$6
	b (Lds;)Z lambda$register$5
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$4
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;)Lcom/mojang/brigadier/ResultConsumer; lambda$static$3
	a (Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/ResultConsumer;Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$static$2
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aen$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	test (Lcom/mojang/brigadier/context/CommandContext;)I test
aen$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	test (Lcom/mojang/brigadier/context/CommandContext;)Z test
aeo net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Laig;Laeo$a;)I queryExperience
	a (Lds;Ljava/util/Collection;ILaeo$a;)I addExperience
	b (Lds;Ljava/util/Collection;ILaeo$a;)I setExperience
	a (Laeo$a;ILjava/util/Collection;)Lsw; lambda$setExperience$14
	b (Laeo$a;ILjava/util/Collection;)Lsw; lambda$setExperience$13
	c (Laeo$a;ILjava/util/Collection;)Lsw; lambda$addExperience$12
	d (Laeo$a;ILjava/util/Collection;)Lsw; lambda$addExperience$11
	a (Laeo$a;Laig;I)Lsw; lambda$queryExperience$10
	a (Lds;)Z lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aeo$a net/minecraft/server/commands/ExperienceCommand$Type
	a POINTS
	b LEVELS
	c add
	d set
	e name
	f query
	g $VALUES
	values ()[Laeo$a; values
	valueOf (Ljava/lang/String;)Laeo$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V <init>
	a (Laig;)I lambda$static$3
	a (Laig;Ljava/lang/Integer;)Z lambda$static$2
	b (Laig;)I lambda$static$1
	b (Laig;Ljava/lang/Integer;)Z lambda$static$0
	a ()[Laeo$a; $values
	<clinit> ()V <clinit>
aep net/minecraft/server/commands/FillBiomeCommand
	a ERROR_NOT_LOADED
	b ERROR_VOLUME_TOO_LARGE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (I)I quantize
	a (Lgu;)Lgu; quantize
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lddx;Ldrs;Lhe;Ljava/util/function/Predicate;)Lcnn; makeResolver
	a (Lds;Lgu;Lgu;Lhe$c;Ljava/util/function/Predicate;)I fill
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ldrs;)Lsw; lambda$fill$6
	a (Lddx;Ldrs;Ljava/util/function/Predicate;Lorg/apache/commons/lang3/mutable/MutableInt;Lhe;IIILcnt$f;)Lhe; lambda$makeResolver$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lhe;)Z lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aeq net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Ldrs;Lfd;Laeq$a;Ljava/util/function/Predicate;)I fillBlocks
	a (I)Lsw; lambda$fillBlocks$10
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	a (Ldcf;)Z lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aeq$a net/minecraft/server/commands/FillCommand$Mode
	a REPLACE
	b OUTLINE
	c HOLLOW
	d DESTROY
	e filter
	f $VALUES
	values ()[Laeq$a; values
	valueOf (Ljava/lang/String;)Laeq$a; valueOf
	<init> (Ljava/lang/String;ILaga$a;)V <init>
	a (Ldrs;Lgu;Lfd;Laif;)Lfd; lambda$static$3
	b (Ldrs;Lgu;Lfd;Laif;)Lfd; lambda$static$2
	c (Ldrs;Lgu;Lfd;Laif;)Lfd; lambda$static$1
	d (Ldrs;Lgu;Lfd;Laif;)Lfd; lambda$static$0
	a ()[Laeq$a; $values
	<clinit> ()V <clinit>
aer net/minecraft/server/commands/ForceLoadCommand
	a MAX_CHUNK_LIMIT
	b ERROR_TOO_MANY_CHUNKS
	c ERROR_NOT_TICKING
	d ERROR_ALL_ADDED
	e ERROR_NONE_REMOVED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lahv;)I queryForceLoad
	a (Lds;)I listForceLoad
	b (Lds;)I removeAll
	a (Lds;Lahv;Lahv;Z)I changeForceLoad
	a (ZLclt;Lacp;Lclt;Lclt;)Lsw; lambda$changeForceLoad$16
	a (ZLclt;Lacp;)Lsw; lambda$changeForceLoad$15
	a (Lacp;)Lsw; lambda$removeAll$14
	a (Laif;J)V lambda$removeAll$13
	a (ILacp;Ljava/lang/String;)Lsw; lambda$listForceLoad$12
	a (Lacp;Ljava/lang/String;)Lsw; lambda$listForceLoad$11
	a (Lclt;Lacp;)Lsw; lambda$queryForceLoad$10
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lds;)Z lambda$register$2
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aes net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I runFunction
	a (ILjava/util/Collection;)Lsw; lambda$runFunction$7
	a (Ljava/util/Collection;)Lsw; lambda$runFunction$6
	b (ILjava/util/Collection;)Lsw; lambda$runFunction$5
	c (ILjava/util/Collection;)Lsw; lambda$runFunction$4
	a (Lorg/apache/commons/lang3/mutable/MutableObject;I)V lambda$runFunction$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
aet net/minecraft/server/commands/GameModeCommand
	a PERMISSION_LEVEL
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Laig;Lcmj;)V logGamemodeChange
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lcmj;)I setMode
	a (Laig;Lsw;)Lsw; lambda$logGamemodeChange$4
	a (Lsw;)Lsw; lambda$logGamemodeChange$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
aeu net/minecraft/server/commands/GameRuleCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lcmi$e;)I setRule
	a (Lds;Lcmi$e;)I queryRule
	a (Lcmi$e;Lcmi$g;)Lsw; lambda$queryRule$2
	b (Lcmi$e;Lcmi$g;)Lsw; lambda$setRule$1
	a (Lds;)Z lambda$register$0
aeu$1 net/minecraft/server/commands/GameRuleCommand$1
	a val$base
	<init> (Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)V <init>
	a (Lcmi$e;Lcmi$f;)V visit
	a (Lcmi$e;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$1
	b (Lcmi$e;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$0
aev net/minecraft/server/commands/GiveCommand
	a MAX_ALLOWED_ITEMSTACKS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lfv;Ljava/util/Collection;I)I giveItem
	a (ILcfz;Ljava/util/Collection;)Lsw; lambda$giveItem$4
	b (ILcfz;Ljava/util/Collection;)Lsw; lambda$giveItem$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
aew net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)Lsw; lambda$register$2
	b (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Ljava/lang/String;)Lsw; lambda$register$0
	<clinit> ()V <clinit>
aex net/minecraft/server/commands/ItemCommands
	a ERROR_TARGET_NOT_A_CONTAINER
	c ERROR_SOURCE_NOT_A_CONTAINER
	b ERROR_TARGET_INAPPLICABLE_SLOT
	d ERROR_SOURCE_INAPPLICABLE_SLOT
	e ERROR_TARGET_NO_CHANGES
	f ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	g SUGGEST_MODIFIER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lgu;ILeaz;)I modifyBlockItem
	a (Lds;Ljava/util/Collection;ILeaz;)I modifyEntityItem
	a (Lds;Lgu;ILcfz;)I setBlockItem
	a (Lds;Lgu;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lbdq; getContainer
	a (Lds;Ljava/util/Collection;ILcfz;)I setEntityItem
	a (Lds;Lgu;ILjava/util/Collection;I)I blockToEntities
	a (Lds;Lgu;ILjava/util/Collection;ILeaz;)I blockToEntities
	a (Lds;Lgu;ILgu;I)I blockToBlock
	a (Lds;Lgu;ILgu;ILeaz;)I blockToBlock
	a (Lds;Lbfj;ILgu;I)I entityToBlock
	a (Lds;Lbfj;ILgu;ILeaz;)I entityToBlock
	a (Lds;Lbfj;ILjava/util/Collection;I)I entityToEntities
	a (Lds;Lbfj;ILjava/util/Collection;ILeaz;)I entityToEntities
	a (Lds;Leaz;Lcfz;)Lcfz; applyModifier
	a (Lbfj;I)Lcfz; getEntityItem
	a (Lds;Lgu;I)Lcfz; getBlockItem
	a (Ljava/util/List;Lcfz;)Lsw; lambda$setEntityItem$27
	b (Ljava/util/List;Lcfz;)Lsw; lambda$setEntityItem$26
	a (Lgu;Lcfz;)Lsw; lambda$setBlockItem$25
	a (Ljava/util/Map;)Lsw; lambda$modifyEntityItem$24
	a (Ljava/util/Map$Entry;)Lsw; lambda$modifyEntityItem$23
	b (Lgu;Lcfz;)Lsw; lambda$modifyBlockItem$22
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lds;)Z lambda$register$7
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$6
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aey net/minecraft/server/commands/JfrCommand
	a START_FAILED
	b DUMP_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I startJfr
	b (Lds;)I stopJfr
	a (Lsw;)Lsw; lambda$stopJfr$6
	a (Ljava/nio/file/Path;Lts;)Lts; lambda$stopJfr$5
	a ()Lsw; lambda$startJfr$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aez net/minecraft/server/commands/KickCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Lsw;)I kickPlayers
	a (Laig;Lsw;)Lsw; lambda$kickPlayers$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
afa net/minecraft/server/commands/KillCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I kill
	a (Ljava/util/Collection;)Lsw; lambda$kill$4
	b (Ljava/util/Collection;)Lsw; lambda$kill$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
afb net/minecraft/server/commands/ListPlayersCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I listPlayers
	b (Lds;)I listPlayersWithUuids
	a (Lds;Ljava/util/function/Function;)I format
	a (Ljava/util/List;Lalk;Lsw;)Lsw; lambda$format$3
	a (Laig;)Lsw; lambda$listPlayersWithUuids$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
afc net/minecraft/server/commands/LocateCommand
	a LOGGER
	b ERROR_STRUCTURE_NOT_FOUND
	c ERROR_STRUCTURE_INVALID
	d ERROR_BIOME_NOT_FOUND
	e ERROR_POI_NOT_FOUND
	f MAX_STRUCTURE_SEARCH_RADIUS
	g MAX_BIOME_SEARCH_RADIUS
	h BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	i BIOME_SAMPLE_RESOLUTION_VERTICAL
	j POI_SEARCH_RADIUS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Les$c;Lhr;)Ljava/util/Optional; getHolders
	a (Lds;Les$c;)I locateStructure
	a (Lds;Ler$c;)I locateBiome
	b (Lds;Ler$c;)I locatePoi
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; getElementName
	a (Lds;Ler$c;Lgu;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lds;Les$c;Lgu;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lds;Lgu;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I showLocateResult
	a (IIII)F dist
	a (Ljava/lang/String;Ljava/lang/String;Lsw;I)Lsw; lambda$showLocateResult$17
	a (Lgu;Ljava/lang/String;Lts;)Lts; lambda$showLocateResult$16
	a (Lcom/mojang/datafixers/util/Pair;Lanl;)Ljava/lang/String; lambda$showLocateResult$15
	a (Lacp;)Ljava/lang/String; lambda$showLocateResult$14
	a (Ler$c;Lcom/mojang/datafixers/util/Pair;Lhi$c;)Ljava/lang/String; lambda$showLocateResult$13
	a (Ler$c;Lhe$c;)Ljava/lang/String; lambda$showLocateResult$12
	b (Lacp;)Ljava/lang/String; lambda$getElementName$11
	a (Les$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$locateStructure$10
	a (Lhr;Lacp;)Ljava/util/Optional; lambda$getHolders$9
	a (Lhe;)Lhi$a; lambda$getHolders$8
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	a (Lds;)Z lambda$register$4
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
afd net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafd$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lds;Lgu;)Lbdq; getContainer
	a (Lds;Lgu;Ljava/util/List;Lafd$a;)I blockDistribute
	a (Lbdq;Lcfz;)Z distributeToContainer
	a (Lds;Lgu;IILjava/util/List;Lafd$a;)I blockReplace
	a (Lcfz;Lcfz;)Z canMergeItems
	a (Ljava/util/Collection;Ljava/util/List;Lafd$a;)I playerGive
	a (Lbfj;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Ljava/util/Collection;IILjava/util/List;Lafd$a;)I entityReplace
	a (Lds;Leei;Ljava/util/List;Lafd$a;)I dropInWorld
	a (Lds;Ljava/util/List;)V callback
	a (Lds;Ljava/util/List;Lacq;)V callback
	a (Lds;Lbfo;)Lcfz; getSourceHandItem
	a (Lcom/mojang/brigadier/context/CommandContext;Lgu;Lcfz;Lafd$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lbfj;Lafd$b;)I dropKillLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lacq;Lafd$b;)I dropChestLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lacq;Lgu;Lcfz;Lafd$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lacq;Ldzq;Lafd$b;)I drop
	b (Lds;Ljava/util/List;)V lambda$drop$29
	a (Lds;Lacq;Ljava/util/List;)V lambda$dropKillLoot$28
	a (Lds;Ldcb;Ljava/util/List;)V lambda$dropBlockLoot$27
	a (Ljava/util/List;Lacq;)Lsw; lambda$callback$26
	a (Lcfz;Lacq;)Lsw; lambda$callback$25
	a (Ljava/util/List;)Lsw; lambda$callback$24
	a (Lcfz;)Lsw; lambda$callback$23
	a (Laif;Leei;Lcfz;)V lambda$dropInWorld$22
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$21
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$20
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$19
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$18
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$17
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$16
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I lambda$addTargets$15
	a (Ldm;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafd$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$14
	a (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	b (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	c (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	d (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	e (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	f (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	g (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	h (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	i (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	j (Lafd$b;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lds;)Z lambda$register$3
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
afd$a net/minecraft/server/commands/LootCommand$Callback
	accept (Ljava/util/List;)V accept
afd$b net/minecraft/server/commands/LootCommand$DropConsumer
	accept (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lafd$a;)I accept
afd$c net/minecraft/server/commands/LootCommand$TailProvider
	construct (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafd$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; construct
afe net/minecraft/server/commands/MsgCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Ltl;)V sendMessage
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Ltl;)V lambda$register$0
aff net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I opPlayers
	a (Ljava/util/Collection;)Lsw; lambda$opPlayers$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
	a (Laig;)Ljava/lang/String; lambda$register$2
	a (Lalk;Laig;)Z lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afg net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I pardonPlayers
	a (Lcom/mojang/authlib/GameProfile;)Lsw; lambda$pardonPlayers$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afh net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/lang/String;)I unban
	a (Ljava/lang/String;)Lsw; lambda$unban$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afi net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lit;Leei;Leei;FIZLjava/util/Collection;)I sendParticles
	a (Lit;)Lsw; lambda$sendParticles$8
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afj net/minecraft/server/commands/PerfCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I startProfilingDedicatedServer
	b (Lds;)I stopProfilingDedicatedServer
	a (Lds;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V saveResults
	a (Lds;Lbam;)V whenStopped
	a (DI)Lsw; lambda$whenStopped$7
	a (Ljava/lang/String;)Lsw; lambda$saveResults$6
	a ()Lsw; lambda$startProfilingDedicatedServer$5
	a (Lds;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V lambda$startProfilingDedicatedServer$4
	b (Lds;Lbam;)V lambda$startProfilingDedicatedServer$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	c (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afk net/minecraft/server/commands/PlaceCommand
	a ERROR_FEATURE_FAILED
	b ERROR_JIGSAW_FAILED
	c ERROR_STRUCTURE_FAILED
	d ERROR_TEMPLATE_INVALID
	e ERROR_TEMPLATE_FAILED
	f SUGGEST_TEMPLATES
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lhe$c;Lgu;)I placeFeature
	a (Lds;Lhe;Lacq;ILgu;)I placeJigsaw
	b (Lds;Lhe$c;Lgu;)I placeStructure
	a (Lds;Lacq;Lgu;Lcvz;Lcui;FI)I placeTemplate
	a (Laif;Lclt;Lclt;)V checkLoaded
	a (Laif;Lclt;)Z lambda$checkLoaded$21
	a (Lacq;Lgu;)Lsw; lambda$placeTemplate$20
	a (Ljava/lang/String;Lgu;)Lsw; lambda$placeStructure$19
	a (Ldsi;Laif;Lddy;Lclt;)V lambda$placeStructure$18
	a (Lhe;)Z lambda$placeStructure$17
	a (Lgu;)Lsw; lambda$placeJigsaw$16
	b (Ljava/lang/String;Lgu;)Lsw; lambda$placeFeature$15
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lds;)Z lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
afl net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lami;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
	a (Lds;Ljava/util/Collection;Lacq;Lami;Leei;FFF)I playSound
	a (Lacq;Ljava/util/Collection;)Lsw; lambda$playSound$7
	b (Lacq;Ljava/util/Collection;)Lsw; lambda$playSound$6
	a (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$5
	b (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$4
	c (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$3
	d (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$2
	e (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afm net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;IZLcmj;)I publish
	a (I)Ltj; getSuccessMessage
	b (I)Lsw; lambda$publish$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
afn net/minecraft/server/commands/RaidCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I glow
	a (Lds;I)I setBadOmenLevel
	b (Lds;)I spawnLeader
	a (Lds;Lsw;)I playSound
	b (Lds;I)I start
	c (Lds;)I stop
	d (Lds;)I check
	a (Laig;)Lbzv; getRaid
	a (Ljava/lang/StringBuilder;)Lsw; lambda$check$13
	b (Ljava/lang/StringBuilder;)Lsw; lambda$check$12
	a ()Lsw; lambda$stop$11
	b ()Lsw; lambda$start$10
	c ()Lsw; lambda$spawnLeader$9
	a (II)Lsw; lambda$setBadOmenLevel$8
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	e (Lds;)Z lambda$register$0
afo net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lds;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
	a (Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$takeRecipes$8
	b (Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$takeRecipes$7
	c (Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$giveRecipes$6
	d (Ljava/util/Collection;Ljava/util/Collection;)Lsw; lambda$giveRecipes$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afp net/minecraft/server/commands/ReloadCommand
	a LOGGER
	<init> ()V <init>
	a (Ljava/util/Collection;Lds;)V reloadPacks
	a (Laki;Ldze;Ljava/util/Collection;)Ljava/util/Collection; discoverNewPacks
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a ()Lsw; lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Lds;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$reloadPacks$0
	<clinit> ()V <clinit>
afq net/minecraft/server/commands/ResetChunksCommand
	a LOGGER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;IZ)I resetChunks
	a (IJ)Lsw; lambda$resetChunks$9
	a (Ldec;Lbcq;Laif;Laid;Ljava/util/List;Lcom/mojang/datafixers/util/Unit;)Ljava/util/concurrent/CompletionStage; lambda$resetChunks$8
	a (Ldec;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Unit; lambda$resetChunks$7
	a (Lddx;)V lambda$resetChunks$6
	b (Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$resetChunks$5
	a ()Lcom/mojang/datafixers/util/Unit; lambda$resetChunks$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afr net/minecraft/server/commands/ReturnCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;I)I setReturn
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
afs net/minecraft/server/commands/RideCommand
	a ERROR_NOT_RIDING
	b ERROR_ALREADY_RIDING
	c ERROR_MOUNT_FAILED
	d ERROR_MOUNTING_PLAYER
	e ERROR_MOUNTING_LOOP
	f ERROR_WRONG_DIMENSION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbfj;Lbfj;)I mount
	a (Lds;Lbfj;)I dismount
	a (Lbfj;Lbfj;)Lsw; lambda$dismount$8
	b (Lbfj;Lbfj;)Lsw; lambda$mount$7
	c (Lbfj;Lbfj;)Z lambda$mount$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lds;)Z lambda$register$3
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
aft net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Z)I saveAll
	a ()Lsw; lambda$saveAll$4
	b ()Lsw; lambda$saveAll$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afu net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a ()Lsw; lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afv net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a ()Lsw; lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
afw net/minecraft/server/commands/SayCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Ltl;)V lambda$register$1
	a (Lds;)Z lambda$register$0
afx net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lcom/mojang/datafixers/util/Pair;IZ)I schedule
	a (Lds;Ljava/lang/String;)I remove
	a (ILjava/lang/String;)Lsw; lambda$remove$11
	a (Lacq;ZLedv;JLds;ILjava/util/Collection;)V lambda$schedule$10
	a (Lacq;IJ)Lsw; lambda$schedule$9
	a (Lacq;ZLedv;JLds;ILdn;)V lambda$schedule$8
	b (Lacq;IJ)Lsw; lambda$schedule$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lds;)Z lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
afy net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lds;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lds;Ljava/lang/String;Lefd;)I getScore
	a (Lds;Ljava/util/Collection;Lefd;Lel$a;Ljava/util/Collection;Lefd;)I performOperation
	a (Lds;Ljava/util/Collection;Lefd;)I enableTrigger
	a (Lds;Ljava/util/Collection;)I resetScores
	b (Lds;Ljava/util/Collection;Lefd;)I resetScore
	a (Lds;Ljava/util/Collection;Lefd;I)I setScore
	b (Lds;Ljava/util/Collection;Lefd;I)I addScore
	c (Lds;Ljava/util/Collection;Lefd;I)I removeScore
	a (Lds;)I listTrackedPlayers
	a (Lds;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lds;I)I clearDisplaySlot
	a (Lds;ILefd;)I setDisplaySlot
	a (Lds;Lefd;Lsw;)I setDisplayName
	a (Lds;Lefd;Lefj$a;)I setRenderType
	a (Lds;Lefd;)I removeObjective
	a (Lds;Ljava/lang/String;Lefj;Lsw;)I addObjective
	b (Lds;)I listObjectives
	a (Ljava/util/Collection;)Lsw; lambda$listObjectives$48
	b ()Lsw; lambda$listObjectives$47
	a (Lefd;)Lsw; lambda$addObjective$46
	b (Lefd;)Lsw; lambda$removeObjective$45
	c (Lefd;)Lsw; lambda$setRenderType$44
	d (Lefd;)Lsw; lambda$setDisplayName$43
	a (ILefd;)Lsw; lambda$setDisplaySlot$42
	a (I)Lsw; lambda$clearDisplaySlot$41
	a (Ljava/util/Map$Entry;)Lsw; lambda$listTrackedPlayerScores$40
	a (Ljava/lang/String;Ljava/util/Map;)Lsw; lambda$listTrackedPlayerScores$39
	a (Ljava/lang/String;)Lsw; lambda$listTrackedPlayerScores$38
	b (Ljava/util/Collection;)Lsw; lambda$listTrackedPlayers$37
	c ()Lsw; lambda$listTrackedPlayers$36
	a (ILefd;Ljava/util/Collection;)Lsw; lambda$removeScore$35
	a (ILefd;Ljava/util/Collection;I)Lsw; lambda$removeScore$34
	b (ILefd;Ljava/util/Collection;)Lsw; lambda$addScore$33
	b (ILefd;Ljava/util/Collection;I)Lsw; lambda$addScore$32
	a (Lefd;Ljava/util/Collection;I)Lsw; lambda$setScore$31
	b (Lefd;Ljava/util/Collection;I)Lsw; lambda$setScore$30
	a (Lefd;Ljava/util/Collection;)Lsw; lambda$resetScore$29
	b (Lefd;Ljava/util/Collection;)Lsw; lambda$resetScore$28
	c (Ljava/util/Collection;)Lsw; lambda$resetScores$27
	d (Ljava/util/Collection;)Lsw; lambda$resetScores$26
	c (Lefd;Ljava/util/Collection;)Lsw; lambda$enableTrigger$25
	d (Lefd;Ljava/util/Collection;)Lsw; lambda$enableTrigger$24
	e (Lefd;Ljava/util/Collection;)Lsw; lambda$performOperation$23
	c (Lefd;Ljava/util/Collection;I)Lsw; lambda$performOperation$22
	a (Ljava/lang/String;Leff;Lefd;)Lsw; lambda$getScore$21
	a (Lefj$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createRenderTypeModify$20
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$17
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
afz net/minecraft/server/commands/SeedCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Z)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lsw;)Lsw; lambda$register$1
	a (ZLds;)Z lambda$register$0
aga net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lgu;Lfd;Laga$b;Ljava/util/function/Predicate;)I setBlock
	a (Lgu;)Lsw; lambda$setBlock$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Ldcf;)Z lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
aga$a net/minecraft/server/commands/SetBlockCommand$Filter
	filter (Ldrs;Lgu;Lfd;Laif;)Lfd; filter
aga$b net/minecraft/server/commands/SetBlockCommand$Mode
	a REPLACE
	b DESTROY
	c $VALUES
	values ()[Laga$b; values
	valueOf (Ljava/lang/String;)Laga$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laga$b; $values
	<clinit> ()V <clinit>
agb net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;I)I setIdleTimeout
	a (I)Lsw; lambda$setIdleTimeout$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agc net/minecraft/server/commands/SetSpawnCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Lgu;F)I setSpawn
	a (Lgu;FLjava/lang/String;Ljava/util/Collection;)Lsw; lambda$setSpawn$6
	b (Lgu;FLjava/lang/String;Ljava/util/Collection;)Lsw; lambda$setSpawn$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agd net/minecraft/server/commands/SetWorldSpawnCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lgu;F)I setSpawn
	a (Lgu;F)Lsw; lambda$setSpawn$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
age net/minecraft/server/commands/SpawnArmorTrimsCommand
	a MATERIAL_AND_SLOT_TO_ITEM
	b VANILLA_TRIM_PATTERNS
	c VANILLA_TRIM_MATERIALS
	d TRIM_PATTERN_ORDER
	e TRIM_MATERIAL_ORDER
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbyo;)I spawnArmorTrims
	a ()Lsw; lambda$spawnArmorTrims$7
	a (Lhr;Lhn;Lhr;Lcie;)V lambda$spawnArmorTrims$6
	a (Lhn;Lhr;Lhr;Lcie;Lcic;)V lambda$spawnArmorTrims$5
	a (Lhr;Lcic;)Ljava/lang/Integer; lambda$spawnArmorTrims$4
	a (Lhr;Lcie;)Ljava/lang/Integer; lambda$spawnArmorTrims$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
agf net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbfj;Laig;)I spectate
	a ()Lsw; lambda$spectate$6
	a (Lbfj;)Lsw; lambda$spectate$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lds;)Z lambda$register$1
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
agg net/minecraft/server/commands/SpreadPlayersCommand
	a MAX_ITERATION_COUNT
	b ERROR_FAILED_TO_SPREAD_TEAMS
	c ERROR_FAILED_TO_SPREAD_ENTITIES
	d ERROR_INVALID_MAX_HEIGHT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Leeh;FFIZLjava/util/Collection;)I spreadPlayers
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Leeh;DLaif;Lapf;DDDDI[Lagg$a;Z)V spreadPositions
	a (Ljava/util/Collection;Laif;[Lagg$a;IZ)D setPlayerPositions
	a (Lapf;IDDDD)[Lagg$a; createInitialPositions
	a (Z[Lagg$a;Leeh;D)Lsw; lambda$spreadPlayers$6
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	a (Lds;)Z lambda$register$3
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
agg$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	<init> ()V <init>
	a (Lagg$a;)D dist
	a ()V normalize
	b ()D getLength
	b (Lagg$a;)V moveAway
	a (DDDD)Z clamp
	a (Lcls;I)I getSpawnY
	b (Lcls;I)Z isSafe
	a (Lapf;DDDD)V randomize
agh net/minecraft/server/commands/StopCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a ()Lsw; lambda$register$1
	a (Lds;)Z lambda$register$0
agi net/minecraft/server/commands/StopSoundCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Lami;Lacq;)I stopSound
	a ()Lsw; lambda$stopSound$8
	a (Lacq;)Lsw; lambda$stopSound$7
	a (Lami;)Lsw; lambda$stopSound$6
	a (Lacq;Lami;)Lsw; lambda$stopSound$5
	a (Lds;)Z lambda$register$4
	a (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lami;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
agj net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	b ERROR_DUPLICATE_UUID
	c INVALID_POSITION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;Ldm;)V register
	a (Lds;Lhe$c;Leei;Lqr;Z)Lbfj; createEntity
	b (Lds;Lhe$c;Leei;Lqr;Z)I spawnEntity
	a (Lbfj;)Lsw; lambda$spawnEntity$5
	a (Leei;Lbfj;)Lbfj; lambda$createEntity$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agk net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lds;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lds;Ljava/util/Collection;Ljava/lang/String;)I removeTag
	a (Lds;Ljava/util/Collection;)I listTags
	a (Ljava/util/Collection;Ljava/util/Set;)Lsw; lambda$listTags$12
	b (Ljava/util/Collection;)Lsw; lambda$listTags$11
	a (Lbfj;Ljava/util/Set;)Lsw; lambda$listTags$10
	a (Lbfj;)Lsw; lambda$listTags$9
	a (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$removeTag$8
	b (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$removeTag$7
	c (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$addTag$6
	d (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$addTag$5
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agl net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_ALREADY_EMPTY
	c ERROR_TEAM_ALREADY_NAME
	d ERROR_TEAM_ALREADY_COLOR
	e ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	g ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	i ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	j ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	k ERROR_TEAM_COLLISION_UNCHANGED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I leaveTeam
	a (Lds;Lefe;Ljava/util/Collection;)I joinTeam
	a (Lds;Lefe;Lefi$b;)I setNametagVisibility
	b (Lds;Lefe;Lefi$b;)I setDeathMessageVisibility
	a (Lds;Lefe;Lefi$a;)I setCollision
	a (Lds;Lefe;Z)I setFriendlySight
	b (Lds;Lefe;Z)I setFriendlyFire
	a (Lds;Lefe;Lsw;)I setDisplayName
	a (Lds;Lefe;Ln;)I setColor
	a (Lds;Lefe;)I emptyTeam
	b (Lds;Lefe;)I deleteTeam
	a (Lds;Ljava/lang/String;)I createTeam
	a (Lds;Ljava/lang/String;Lsw;)I createTeam
	c (Lds;Lefe;)I listMembers
	a (Lds;)I listTeams
	b (Lds;Lefe;Lsw;)I setPrefix
	c (Lds;Lefe;Lsw;)I setSuffix
	a (Lsw;)Lsw; lambda$setSuffix$47
	b (Lsw;)Lsw; lambda$setPrefix$46
	a (Ljava/util/Collection;)Lsw; lambda$listTeams$45
	a ()Lsw; lambda$listTeams$44
	a (Lefe;Ljava/util/Collection;)Lsw; lambda$listMembers$43
	a (Lefe;)Lsw; lambda$listMembers$42
	b (Lefe;)Lsw; lambda$createTeam$41
	c (Lefe;)Lsw; lambda$deleteTeam$40
	a (Ljava/util/Collection;Lefe;)Lsw; lambda$emptyTeam$39
	a (Lefe;Ln;)Lsw; lambda$setColor$38
	d (Lefe;)Lsw; lambda$setDisplayName$37
	a (ZLefe;)Lsw; lambda$setFriendlyFire$36
	b (ZLefe;)Lsw; lambda$setFriendlySight$35
	a (Lefe;Lefi$a;)Lsw; lambda$setCollision$34
	a (Lefe;Lefi$b;)Lsw; lambda$setDeathMessageVisibility$33
	b (Lefe;Lefi$b;)Lsw; lambda$setNametagVisibility$32
	b (Ljava/util/Collection;Lefe;)Lsw; lambda$joinTeam$31
	c (Ljava/util/Collection;Lefe;)Lsw; lambda$joinTeam$30
	b (Ljava/util/Collection;)Lsw; lambda$leaveTeam$29
	c (Ljava/util/Collection;)Lsw; lambda$leaveTeam$28
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
	k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
	l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
	m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
	n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
	p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	A (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agm net/minecraft/server/commands/TeamMsgCommand
	a SUGGEST_STYLE
	b ERROR_NOT_ON_TEAM
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lbfj;Lefe;Ljava/util/List;Ltl;)V sendMessage
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lds;Lbfj;Lefe;Ljava/util/List;Ltl;)V lambda$register$1
	a (Lbfj;Lefe;Laig;)Z lambda$register$0
	<clinit> ()V <clinit>
agn net/minecraft/server/commands/TeleportCommand
	a INVALID_POSITION
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;Lbfj;)I teleportToEntity
	a (Lds;Ljava/util/Collection;Laif;Lfk;Lfk;Lagn$a;)I teleportToPos
	a (D)Ljava/lang/String; formatDouble
	a (Lds;Lbfj;Laif;DDDLjava/util/Set;FFLagn$a;)V performTeleport
	a (Ljava/util/Collection;Leei;)Lsw; lambda$teleportToPos$13
	b (Ljava/util/Collection;Leei;)Lsw; lambda$teleportToPos$12
	a (Ljava/util/Collection;Lbfj;)Lsw; lambda$teleportToEntity$11
	b (Ljava/util/Collection;Lbfj;)Lsw; lambda$teleportToEntity$10
	a (Lds;)Z lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agn$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	<init> (Lbfj;Leb$a;)V <init>
	<init> (Leei;)V <init>
	a (Lds;Lbfj;)V perform
ago net/minecraft/server/commands/TellRawCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agp net/minecraft/server/commands/TimeCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Laif;)I getDayTime
	c (Lds;I)I queryTime
	a (Lds;I)I setTime
	b (Lds;I)I addTime
	a (I)Lsw; lambda$addTime$12
	b (I)Lsw; lambda$setTime$11
	c (I)Lsw; lambda$queryTime$10
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agq net/minecraft/server/commands/TitleCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;)I clearTitle
	b (Lds;Ljava/util/Collection;)I resetTitle
	a (Lds;Ljava/util/Collection;Lsw;Ljava/lang/String;Ljava/util/function/Function;)I showTitle
	a (Lds;Ljava/util/Collection;III)I setTimes
	a (Ljava/util/Collection;)Lsw; lambda$setTimes$14
	b (Ljava/util/Collection;)Lsw; lambda$setTimes$13
	a (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$showTitle$12
	b (Ljava/lang/String;Ljava/util/Collection;)Lsw; lambda$showTitle$11
	c (Ljava/util/Collection;)Lsw; lambda$resetTitle$10
	d (Ljava/util/Collection;)Lsw; lambda$resetTitle$9
	e (Ljava/util/Collection;)Lsw; lambda$clearTitle$8
	f (Ljava/util/Collection;)Lsw; lambda$clearTitle$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agr net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lds;Leff;I)I addValue
	b (Lds;Leff;I)I setValue
	a (Lds;Leff;)I simpleTrigger
	a (Laig;Lefd;)Leff; getScore
	a (Leff;)Lsw; lambda$simpleTrigger$6
	a (Leff;I)Lsw; lambda$setValue$5
	b (Leff;I)Lsw; lambda$addValue$4
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$0
	<clinit> ()V <clinit>
ags net/minecraft/server/commands/WardenSpawnTrackerCommand
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;Ljava/util/Collection;I)I setWarningLevel
	a (Lds;Ljava/util/Collection;)I resetTracker
	a (Ljava/util/Collection;)Lsw; lambda$resetTracker$7
	b (Ljava/util/Collection;)Lsw; lambda$resetTracker$6
	c (Ljava/util/Collection;)Lsw; lambda$setWarningLevel$5
	d (Ljava/util/Collection;)Lsw; lambda$setWarningLevel$4
	a (ILbxu;)V lambda$setWarningLevel$3
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agt net/minecraft/server/commands/WeatherCommand
	a DEFAULT_TIME
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;ILbdc;)I getDuration
	a (Lds;I)I setClear
	b (Lds;I)I setRain
	c (Lds;I)I setThunder
	a ()Lsw; lambda$setThunder$9
	b ()Lsw; lambda$setRain$8
	c ()Lsw; lambda$setClear$7
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	a (Lds;)Z lambda$register$0
agu net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;)I reload
	a (Lds;Ljava/util/Collection;)I addPlayers
	b (Lds;Ljava/util/Collection;)I removePlayers
	b (Lds;)I enableWhitelist
	c (Lds;)I disableWhitelist
	d (Lds;)I showList
	a ([Ljava/lang/String;)Lsw; lambda$showList$17
	a ()Lsw; lambda$showList$16
	b ()Lsw; lambda$disableWhitelist$15
	c ()Lsw; lambda$enableWhitelist$14
	a (Lcom/mojang/authlib/GameProfile;)Lsw; lambda$removePlayers$13
	b (Lcom/mojang/authlib/GameProfile;)Lsw; lambda$addPlayers$12
	d ()Lsw; lambda$reload$11
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$8
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$6
	a (Laig;)Ljava/lang/String; lambda$register$5
	a (Lalk;Laig;)Z lambda$register$4
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	e (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agv net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_TOO_FAR_OUT
	f ERROR_SAME_WARNING_TIME
	g ERROR_SAME_WARNING_DISTANCE
	h ERROR_SAME_DAMAGE_BUFFER
	i ERROR_SAME_DAMAGE_AMOUNT
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lds;F)I setDamageBuffer
	b (Lds;F)I setDamageAmount
	a (Lds;I)I setWarningTime
	b (Lds;I)I setWarningDistance
	a (Lds;)I getSize
	a (Lds;Leeh;)I setCenter
	a (Lds;DJ)I setSize
	a (D)Lsw; lambda$setSize$19
	a (DJ)Lsw; lambda$setSize$18
	b (DJ)Lsw; lambda$setSize$17
	a (Leeh;)Lsw; lambda$setCenter$16
	b (D)Lsw; lambda$getSize$15
	a (I)Lsw; lambda$setWarningDistance$14
	b (I)Lsw; lambda$setWarningTime$13
	a (F)Lsw; lambda$setDamageAmount$12
	b (F)Lsw; lambda$setDamageBuffer$11
	a (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
	c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
	e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
	f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
	g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
	h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
	i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
	j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
	b (Lds;)Z lambda$register$0
	<clinit> ()V <clinit>
agw net/minecraft/server/commands/data/BlockDataAccessor
	b ERROR_NOT_A_BLOCK_ENTITY
	a PROVIDER
	c entity
	d pos
	<init> (Lczn;Lgu;)V <init>
	a (Lqr;)V setData
	a ()Lqr; getData
	b ()Lsw; getModifiedSuccess
	a (Lrk;)Lsw; getPrintSuccess
	a (Leh$g;DI)Lsw; getPrintSuccess
	a (Ljava/lang/String;)Lagy$c; lambda$static$0
	<clinit> ()V <clinit>
agw$1 net/minecraft/server/commands/data/BlockDataAccessor$1
	a val$argPrefix
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lagx; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
agx net/minecraft/server/commands/data/DataAccessor
	a (Lqr;)V setData
	a ()Lqr; getData
	b ()Lsw; getModifiedSuccess
	a (Lrk;)Lsw; getPrintSuccess
	a (Leh$g;DI)Lsw; getPrintSuccess
agy net/minecraft/server/commands/data/DataCommands
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_OBJECT
	i ERROR_EXPECTED_VALUE
	j ERROR_INVALID_SUBSTRING
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	<init> ()V <init>
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lrk;)Ljava/lang/String; getAsText
	a (Ljava/util/List;Lagy$d;)Ljava/util/List; stringifyTagList
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Ljava/lang/String;II)Ljava/lang/String; validatedSubstring
	b (Ljava/lang/String;II)Ljava/lang/String; substring
	a (Ljava/lang/String;I)Ljava/lang/String; substring
	a (II)I getOffset
	a (Lcom/mojang/brigadier/context/CommandContext;Lagy$c;)Ljava/util/List; getSingletonSource
	b (Lcom/mojang/brigadier/context/CommandContext;Lagy$c;)Ljava/util/List; resolveSourcePath
	a (Lcom/mojang/brigadier/context/CommandContext;Lagy$c;Lagy$a;Ljava/util/List;)I manipulateData
	a (Lds;Lagx;Leh$g;)I removeData
	a (Leh$g;Lagx;)Lrk; getSingleTag
	b (Lds;Lagx;Leh$g;)I getData
	a (Lds;Lagx;Leh$g;D)I getNumeric
	a (Lds;Lagx;)I getData
	a (Lds;Lagx;Lqr;)I mergeData
	a (Lagx;)Lsw; lambda$mergeData$44
	a (Lagx;Lqr;)Lsw; lambda$getData$43
	a (Lagx;Leh$g;DI)Lsw; lambda$getNumeric$42
	a (Lagx;Lrk;)Lsw; lambda$getData$41
	b (Lagx;)Lsw; lambda$removeData$40
	c (Lagx;)Lsw; lambda$manipulateData$39
	a (Ljava/util/function/BiConsumer;Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$38
	a (Lagy$c;Lagy$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$37
	a (Lagy$c;Lagy$a;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$36
	a (Lagy$c;Lagy$c;Lagy$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$35
	a (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$34
	a (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$33
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; lambda$decorateModification$32
	b (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$31
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; lambda$decorateModification$30
	c (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$29
	a (Ljava/lang/String;)Ljava/lang/String; lambda$decorateModification$28
	d (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$27
	b (Ljava/lang/String;)Ljava/lang/String; lambda$decorateModification$26
	b (Lagy$c;Lagy$c;Lagy$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$25
	b (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$decorateModification$24
	e (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$23
	f (Lagy$c;Lagy$a;Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$decorateModification$22
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lagy$b;)V lambda$register$21
	a (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I lambda$register$20
	b (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I lambda$register$19
	c (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I lambda$register$18
	d (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I lambda$register$17
	e (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I lambda$register$16
	a (Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$15
	a (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
	b (Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$13
	b (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
	c (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
	d (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
	c (Lagy$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$9
	e (Lagy$c;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
	a (Lds;)Z lambda$register$7
	a (Ljava/util/function/Function;)Lagy$c; lambda$static$6
	b (Ljava/util/function/Function;)Lagy$c; lambda$static$5
	a (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
	a (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
	b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
	c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
	d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
	<clinit> ()V <clinit>
agy$a net/minecraft/server/commands/data/DataCommands$DataManipulator
	modify (Lcom/mojang/brigadier/context/CommandContext;Lqr;Leh$g;Ljava/util/List;)I modify
agy$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	create (Lagy$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder; create
agy$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/context/CommandContext;)Lagx; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
agy$d net/minecraft/server/commands/data/DataCommands$StringProcessor
	process (Ljava/lang/String;)Ljava/lang/String; process
agz net/minecraft/server/commands/data/EntityDataAccessor
	b ERROR_NO_PLAYERS
	a PROVIDER
	c entity
	<init> (Lbfj;)V <init>
	a (Lqr;)V setData
	a ()Lqr; getData
	b ()Lsw; getModifiedSuccess
	a (Lrk;)Lsw; getPrintSuccess
	a (Leh$g;DI)Lsw; getPrintSuccess
	a (Ljava/lang/String;)Lagy$c; lambda$static$0
	<clinit> ()V <clinit>
agz$1 net/minecraft/server/commands/data/EntityDataAccessor$1
	a val$arg
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lagx; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
aha net/minecraft/server/commands/data/StorageDataAccessor
	b SUGGEST_STORAGE
	a PROVIDER
	c storage
	d id
	a (Lcom/mojang/brigadier/context/CommandContext;)Ldyr; getGlobalTags
	<init> (Ldyr;Lacq;)V <init>
	a (Lqr;)V setData
	a ()Lqr; getData
	b ()Lsw; getModifiedSuccess
	a (Lrk;)Lsw; getPrintSuccess
	a (Leh$g;DI)Lsw; getPrintSuccess
	a (Ljava/lang/String;)Lagy$c; lambda$static$1
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
aha$1 net/minecraft/server/commands/data/StorageDataAccessor$1
	a val$arg
	<init> (Ljava/lang/String;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;)Lagx; access
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
ahb net/minecraft/server/commands/data/package-info
ahc net/minecraft/server/commands/package-info
ahd net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	<init> (Lahe;Lhl;Ldzb;)V <init>
	a (Z)V setUsingWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	b (Lcom/mojang/authlib/GameProfile;)V deop
	a ()V reloadWhiteList
	w ()V saveIpBanList
	x ()V saveUserBanList
	y ()V loadIpBanList
	z ()V loadUserBanList
	A ()V loadOps
	B ()V saveOps
	C ()V loadWhiteList
	D ()V saveWhiteList
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	b ()Lahe; getServer
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	<clinit> ()V <clinit>
ahe net/minecraft/server/dedicated/DedicatedServer
	n LOGGER
	o CONVERSION_RETRY_DELAY_MS
	p CONVERSION_RETRIES
	q consoleInput
	r queryThreadGs4
	s rconConsoleSource
	t rconThread
	u settings
	v gui
	w textFilterClient
	<init> (Ljava/lang/Thread;Ldyy$c;Laki;Ladk;Lahg;Lcom/mojang/datafixers/DataFixer;Ladh;Laip;)V <init>
	e ()Z initServer
	W ()Z isSpawningAnimals
	Q ()Z isSpawningMonsters
	X ()Z areNpcsEnabled
	a ()Lahf; getProperties
	r ()V forceDifficulty
	h ()Z isHardcore
	a (Lab;)Lab; fillServerSystemReport
	a (Ljava/nio/file/Path;)V dumpServerProperties
	g ()V onServerExit
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	B ()Z isNetherEnabled
	a (Ljava/lang/String;Lds;)V handleConsoleInput
	bf ()V handleConsoleInputs
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	bg ()Lahd; getPlayerList
	p ()Z isPublished
	b ()Ljava/lang/String; getServerIp
	d ()I getServerPort
	f ()Ljava/lang/String; getServerName
	bh ()V showGui
	af ()Z hasGui
	o ()Z isCommandBlockEnabled
	ah ()I getSpawnProtectionRadius
	a (Laif;Lgu;Lbyo;)Z isUnderSpawnProtection
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	c (I)V setPlayerIdleTimeout
	k ()Z shouldRconBroadcast
	N_ ()Z shouldInformAdmins
	as ()I getAbsoluteMaxWorldSize
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	bi ()Z convertOldUsers
	bs ()V waitForRetry
	bj ()J getMaxTickLength
	bd ()I getMaxChainedNeighborUpdates
	s ()Ljava/lang/String; getPluginNames
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	i (Z)V storeUsingWhiteList
	t ()V stopServer
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	b (I)I getScaledTrackingDistance
	q ()Ljava/lang/String; getLevelIdName
	aS ()Z forceSynchronousWrites
	a (Laig;)Lajd; createTextFilterForPlayer
	aX ()Lcmj; getForcedGameType
	S ()Ljava/util/Optional; getServerResourcePack
	ac ()Lalk; getPlayerList
	a (ZLahf;)Lahf; lambda$storeUsingWhiteList$4
	e (Ljava/lang/String;)V lambda$runCommand$3
	a (ILahf;)Lahf; lambda$setPlayerIdleTimeout$2
	bt ()Ljava/lang/String; lambda$fillServerSystemReport$1
	bu ()Ljava/lang/String; lambda$fillServerSystemReport$0
	<clinit> ()V <clinit>
ahe$1 net/minecraft/server/dedicated/DedicatedServer$1
	a this$0
	<init> (Lahe;Ljava/lang/String;)V <init>
	run ()V run
ahf net/minecraft/server/dedicated/DedicatedServerProperties
	Z LOGGER
	aa SHA1
	ab COMMA_SPLITTER
	a onlineMode
	b preventProxyConnections
	c serverIp
	d spawnAnimals
	e spawnNpcs
	f pvp
	g allowFlight
	h motd
	i forceGameMode
	j enforceWhitelist
	k difficulty
	l gamemode
	m levelName
	n serverPort
	o announcePlayerAchievements
	p enableQuery
	q queryPort
	r enableRcon
	s rconPort
	t rconPassword
	u hardcore
	v allowNether
	w spawnMonsters
	x useNativeTransport
	y enableCommandBlock
	z spawnProtection
	A opPermissionLevel
	B functionPermissionLevel
	C maxTickTime
	D maxChainedNeighborUpdates
	E rateLimitPacketsPerSecond
	F viewDistance
	G simulationDistance
	H maxPlayers
	I networkCompressionThreshold
	J broadcastRconToOps
	K broadcastConsoleToOps
	L maxWorldSize
	M syncChunkWrites
	N enableJmxMonitoring
	O enableStatus
	P hideOnlinePlayers
	Q entityBroadcastRangePercentage
	R textFilteringConfig
	S serverResourcePackInfo
	T initialDataPackConfiguration
	U playerIdleTimeout
	V whiteList
	W enforceSecureProfile
	ac worldDimensionData
	X worldOptions
	<init> (Ljava/util/Properties;)V <init>
	a (Ljava/nio/file/Path;)Lahf; fromFile
	a (Lhs;Ljava/util/Properties;)Lahf; reload
	c (Ljava/lang/String;)Lsw; parseResourcePackPrompt
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; getServerPackInfo
	b (Ljava/lang/String;Ljava/lang/String;)Lcma; getDatapackConfig
	d (Ljava/lang/String;)Lcaw; getFeatures
	a (Lhs;)Ldif; createDimensions
	b (Lhs;Ljava/util/Properties;)Lahi; reload
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V lambda$getFeatures$4
	e (Ljava/lang/String;)Ljava/lang/String; lambda$new$3
	f (Ljava/lang/String;)Lcom/google/gson/JsonObject; lambda$new$2
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$1
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$0
	<clinit> ()V <clinit>
ahf$a net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	a generatorSettings
	b levelType
	c LEGACY_PRESET_NAMES
	<init> (Lcom/google/gson/JsonObject;Ljava/lang/String;)V <init>
	a (Lhs;)Ldif; create
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcom/google/gson/JsonObject; generatorSettings
	b ()Ljava/lang/String; levelType
	a (Lhe$c;)Lhe$c; lambda$create$4
	c ()Ljava/util/Optional; lambda$create$3
	a (Lacq;)Lacp; lambda$create$2
	d ()Ljava/lang/IllegalStateException; lambda$create$1
	a (Lhr;)Ljava/util/Optional; lambda$create$0
	<clinit> ()V <clinit>
ahg net/minecraft/server/dedicated/DedicatedServerSettings
	a source
	b properties
	<init> (Ljava/nio/file/Path;)V <init>
	a ()Lahf; getProperties
	b ()V forceSave
	a (Ljava/util/function/UnaryOperator;)Lahg; update
ahh net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b MAX_SHUTDOWN_TIME
	c SHUTDOWN_STATUS
	d server
	e maxTickTime
	<init> (Lahe;)V <init>
	run ()V run
	a ()V exit
	b ()Ljava/lang/String; lambda$run$2
	a (Laif;)Ljava/lang/String; lambda$run$1
	c ()Ljava/lang/String; lambda$run$0
	<clinit> ()V <clinit>
ahh$1 net/minecraft/server/dedicated/ServerWatchdog$1
	a this$0
	<init> (Lahh;)V <init>
	run ()V run
ahi net/minecraft/server/dedicated/Settings
	a LOGGER
	Y properties
	<init> (Ljava/util/Properties;)V <init>
	b (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	c (Ljava/nio/file/Path;)V store
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lahi$a; getMutable
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lahi$a; getMutable
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;I)I get
	b (Ljava/lang/String;I)Lahi$a; getMutable
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/lang/String;J)J get
	a (Ljava/lang/String;Z)Z get
	b (Ljava/lang/String;Z)Lahi$a; getMutable
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	a ()Ljava/util/Properties; cloneProperties
	b (Lhs;Ljava/util/Properties;)Lahi; reload
	a (Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object; lambda$get$2
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object; lambda$dispatchNumberOrString$1
	a (Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number; lambda$wrapNumberDeserializer$0
	<clinit> ()V <clinit>
ahi$a net/minecraft/server/dedicated/Settings$MutableValue
	b key
	c value
	d serializer
	a this$0
	<init> (Lahi;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V <init>
	get ()Ljava/lang/Object; get
	a (Lhs;Ljava/lang/Object;)Lahi; update
ahj net/minecraft/server/dedicated/package-info
ahk net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c TITLE
	d SHUTDOWN_TITLE
	e server
	f logAppenderThread
	g finalizers
	h isClosing
	a (Lahe;)Lahk; showFrameFor
	<init> (Lahe;)V <init>
	a (Ljava/lang/Runnable;)V addFinalizer
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	a ()V start
	b ()V close
	f ()V runFinalizers
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	b (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V lambda$print$2
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V lambda$buildChatPanel$1
	a (Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V lambda$buildChatPanel$0
	<clinit> ()V <clinit>
ahk$1 net/minecraft/server/gui/MinecraftServerGui$1
	a val$gui
	b val$frame
	c val$server
	<init> (Lahk;Ljavax/swing/JFrame;Lahe;)V <init>
	windowClosing (Ljava/awt/event/WindowEvent;)V windowClosing
ahk$2 net/minecraft/server/gui/MinecraftServerGui$2
	a this$0
	<init> (Lahk;)V <init>
	focusGained (Ljava/awt/event/FocusEvent;)V focusGained
ahl net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a ()V tick
ahm net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	b ()V tick
	a ([J)D getAverage
	paint (Ljava/awt/Graphics;)V paint
	a ()V close
	a (Ljava/awt/event/ActionEvent;)V lambda$new$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	<clinit> ()V <clinit>
ahn net/minecraft/server/gui/package-info
aho net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	<init> (ILgu;)V <init>
	a ()I getId
	b ()Lgu; getPos
	a (I)V setProgress
	c ()I getProgress
	b (I)V updateTick
	d ()I getUpdatedRenderTick
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Laho;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
ahp net/minecraft/server/level/ChunkHolder
	a UNLOADED_CHUNK
	b UNLOADED_CHUNK_FUTURE
	c UNLOADED_LEVEL_CHUNK
	d NOT_DONE_YET
	e UNLOADED_LEVEL_CHUNK_FUTURE
	f CHUNK_STATUSES
	g futures
	h levelHeightAccessor
	i fullChunkFuture
	j tickingChunkFuture
	k entityTickingChunkFuture
	l chunkToSave
	m chunkToSaveHistory
	n oldTicketLevel
	o ticketLevel
	p queueLevel
	q pos
	r hasChangedSections
	s changedBlocksPerSection
	t blockChangedLightSectionFilter
	u skyChangedLightSectionFilter
	v lightEngine
	w onLevelChange
	x playerProvider
	y wasAccessibleSinceLastSave
	z pendingFullStateConfirmation
	<init> (Lclt;ILcmo;Ldwt;Lahp$c;Lahp$d;)V <init>
	a (Ldec;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	b (Ldec;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d ()Ldei; getTickingChunk
	e ()Ldei; getFullChunk
	f ()Ldec; getLastAvailableStatus
	g ()Lddx; getLastAvailable
	h ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	a (Lgu;)V blockChanged
	a (Lcmv;I)V sectionLightChanged
	a (Ldei;)V broadcastChanges
	a (Ljava/util/List;Lcmm;Lgu;Ldcb;)V broadcastBlockEntityIfNeeded
	a (Ljava/util/List;Lcmm;Lgu;)V broadcastBlockEntity
	a (Ljava/util/List;Luo;)V broadcast
	a (Ldec;Lahr;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V addSaveDependency
	a (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V updateChunkToSave
	i ()Lahy; getFullStatus
	j ()Lclt; getPos
	k ()I getTicketLevel
	l ()I getQueueLevel
	b (I)V setQueueLevel
	a (I)V setTicketLevel
	a (Lahr;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lahy;)V scheduleFullChunkPromotion
	a (Lahr;Lahy;)V demoteFullChunk
	a (Lahr;Ljava/util/concurrent/Executor;)V updateFutures
	m ()Z wasAccessibleSinceLastSave
	n ()V refreshAccessibility
	a (Ldeh;)V replaceProtoChunk
	o ()Ljava/util/List; getAllFutures
	a (Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V lambda$scheduleFullChunkPromotion$8
	a (Ljava/util/concurrent/CompletableFuture;Ldei;)V lambda$scheduleFullChunkPromotion$7
	b (Lahr;Lahy;)V lambda$scheduleFullChunkPromotion$6
	a (Lddx;Lcom/mojang/datafixers/util/Either;)Lddx; lambda$updateChunkToSave$5
	a (Lddx;Lahp$a;)Lddx; lambda$updateChunkToSave$4
	a (Lddx;)Lddx; lambda$updateChunkToSave$3
	a (Lddx;Ljava/lang/Object;)Lddx; lambda$addSaveDependency$2
	a (Luo;Laig;)V lambda$broadcast$1
	b (Ljava/util/List;Lcmm;Lgu;Ldcb;)V lambda$broadcastChanges$0
	<clinit> ()V <clinit>
ahp$1 net/minecraft/server/level/ChunkHolder$1
	a this$0
	<init> (Lahp;)V <init>
	toString ()Ljava/lang/String; toString
ahp$a net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
	<clinit> ()V <clinit>
ahp$a$1 net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure$1
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
ahp$b net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	a thread
	b future
	c source
	<init> (Ljava/lang/Thread;Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V <init>
ahp$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
	onLevelChange (Lclt;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
ahp$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lclt;Z)Ljava/util/List; getPlayers
ahq net/minecraft/server/level/ChunkLevel
	b FULL_CHUNK_LEVEL
	c BLOCK_TICKING_LEVEL
	d ENTITY_TICKING_LEVEL
	a MAX_LEVEL
	<init> ()V <init>
	a (I)Ldec; generationStatus
	a (Ldec;)I byStatus
	b (I)Lahy; fullStatus
	a (Lahy;)I byStatus
	c (I)Z isEntityTicking
	d (I)Z isBlockTicking
	e (I)Z isLoaded
	<clinit> ()V <clinit>
ahq$1 net/minecraft/server/level/ChunkLevel$1
	a $SwitchMap$net$minecraft$server$level$FullChunkStatus
	<clinit> ()V <clinit>
ahr net/minecraft/server/level/ChunkMap
	e CHUNK_TYPE_REPLACEABLE
	f CHUNK_TYPE_UNKNOWN
	g CHUNK_TYPE_FULL
	h LOGGER
	i CHUNK_SAVED_PER_TICK
	j CHUNK_SAVED_EAGERLY_PER_TICK
	k EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	l MIN_VIEW_DISTANCE
	a MAX_VIEW_DISTANCE
	b FORCED_TICKET_LEVEL
	m updatingChunkMap
	n visibleChunkMap
	o pendingUnloads
	p entitiesInLevel
	q level
	r lightEngine
	s mainThreadExecutor
	t generator
	u randomState
	v chunkGeneratorState
	w overworldDataStorage
	x poiManager
	y toDrop
	z modified
	A queueSorter
	B worldgenMailbox
	C mainThreadMailbox
	D progressListener
	E chunkStatusListener
	F distanceManager
	G tickingGenerated
	H structureTemplateManager
	I storageName
	J playerMap
	K entityMap
	L chunkTypeCache
	M chunkSaveCooldowns
	N unloadQueue
	O viewDistance
	<init> (Laif;Ldyy$c;Lcom/mojang/datafixers/DataFixer;Ldvu;Ljava/util/concurrent/Executor;Lbcn;Ldel;Lddy;Laio;Ldfr;Ljava/util/function/Supplier;IZ)V <init>
	a ()Lddy; generator
	b ()Lddz; generatorState
	c ()Ldhy; randomState
	d ()V debugReloadGenerator
	a (Lclt;Lbfj;)D euclideanDistanceSquared
	a (IIIII)Z isChunkInRange
	b (IIIII)Z isChunkOnRangeBorder
	e ()Laii; getLightEngine
	a (J)Lahp; getUpdatingChunkIfPresent
	b (J)Lahp; getVisibleChunkIfPresent
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	a (Lclt;)Ljava/lang/String; getChunkDebugData
	a (Lahp;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Ljava/lang/IllegalStateException;Ljava/lang/String;)Ly; debugFuturesAndCreateReportedException
	a (Lahp;)Ljava/util/concurrent/CompletableFuture; prepareEntityTickingChunk
	a (JILahp;I)Lahp; updateChunkScheduling
	close ()V close
	a (Z)V saveAllChunks
	a (Ljava/util/function/BooleanSupplier;)V tick
	f ()Z hasWork
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	a (JLahp;)V scheduleUnload
	g ()Z promoteChunkMap
	a (Lahp;Ldec;)Ljava/util/concurrent/CompletableFuture; schedule
	f (Lclt;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	b (Lqr;)Z isChunkDataValid
	a (Ljava/lang/Throwable;Lclt;)Lcom/mojang/datafixers/util/Either; handleChunkLoadFailure
	g (Lclt;)Lddx; createEmptyChunk
	h (Lclt;)V markPositionReplaceable
	a (Lclt;Ldec$a;)B markPosition
	b (Lahp;Ldec;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	b (Lclt;)V releaseLightTicket
	a (Ldec;I)Ldec; getDependencyStatus
	a (Laif;Ljava/util/List;)V postLoadProtoChunk
	d (Lahp;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	b (Lahp;)Ljava/util/concurrent/CompletableFuture; prepareTickingChunk
	c (Lahp;)Ljava/util/concurrent/CompletableFuture; prepareAccessibleChunk
	h ()I getTickingGenerated
	e (Lahp;)Z saveChunkIfNeeded
	a (Lddx;)Z save
	i (Lclt;)Z isExistingChunkFull
	a (I)V setViewDistance
	a (Laig;Lclt;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V updateChunkTracking
	i ()I size
	j ()Lahx; getDistanceManager
	k ()Ljava/lang/Iterable; getChunks
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	j (Lclt;)Ljava/util/concurrent/CompletableFuture; readChunk
	c (Lqr;)Lqr; upgradeChunkTag
	c (Lclt;)Z anyPlayerCloseEnoughForSpawning
	d (Lclt;)Ljava/util/List; getPlayersCloseForSpawning
	a (Laig;Lclt;)Z playerIsCloseEnoughForSpawning
	b (Laig;)Z skipPlayer
	a (Laig;Z)V updatePlayerStatus
	c (Laig;)Lhx; updatePlayerPos
	a (Laig;)V move
	a (Lclt;Z)Ljava/util/List; getPlayers
	a (Lbfj;)V addEntity
	b (Lbfj;)V removeEntity
	l ()V tick
	a (Lbfj;Luo;)V broadcast
	b (Lbfj;Luo;)V broadcastAndSend
	a (Ljava/util/List;)V resendBiomesForChunks
	a (Laig;Lorg/apache/commons/lang3/mutable/MutableObject;Ldei;)V playerLoadedChunk
	m ()Lbqz; getPoiManager
	n ()Ljava/lang/String; getStorageName
	a (Lclt;Lahy;)V onFullChunkStatusChange
	a (Laig;Ljava/util/List;)V lambda$resendBiomesForChunks$60
	d (Laig;)Ljava/util/List; lambda$resendBiomesForChunks$59
	a (Ljava/util/Optional;)Ljava/util/Optional; lambda$readChunk$58
	a (Lahp$a;)Ljava/lang/String; lambda$printFuture$57
	a (Ldei;)Ljava/lang/String; lambda$printFuture$56
	b (Ldei;)Ljava/lang/Integer; lambda$dumpChunks$55
	c (Ldei;)Ljava/lang/Integer; lambda$dumpChunks$54
	d (Ldei;)Ljava/lang/Integer; lambda$dumpChunks$53
	b (Lddx;)Ljava/util/Optional; lambda$dumpChunks$52
	a (Lclt;ILorg/apache/commons/lang3/mutable/MutableObject;Laig;)V lambda$setViewDistance$51
	a (Lahp;Ljava/lang/Runnable;)V lambda$prepareAccessibleChunk$50
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$prepareAccessibleChunk$49
	b (Ljava/util/List;)Ldei; lambda$prepareAccessibleChunk$48
	b (Lahp;Ljava/lang/Runnable;)V lambda$prepareTickingChunk$47
	a (Lahp;Lcom/mojang/datafixers/util/Either;)V lambda$prepareTickingChunk$46
	a (Lahp;Ldei;)V lambda$prepareTickingChunk$45
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Ldei;Laig;)V lambda$prepareTickingChunk$44
	a (Lcom/mojang/datafixers/util/Either;Ljava/lang/Throwable;)Ljava/lang/Object; lambda$prepareTickingChunk$43
	b (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$prepareTickingChunk$42
	e (Ldei;)V lambda$prepareTickingChunk$41
	c (Lahp;Ljava/lang/Runnable;)V lambda$prepareTickingChunk$40
	c (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$prepareTickingChunk$39
	c (Ljava/util/List;)Ldei; lambda$prepareTickingChunk$38
	b (I)Ldec; lambda$prepareTickingChunk$37
	d (Lahp;Ljava/lang/Runnable;)V lambda$protoChunkToFullChunk$36
	b (Lahp;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$protoChunkToFullChunk$35
	a (Lahp;Lddx;)Lddx; lambda$protoChunkToFullChunk$34
	f (Lahp;)Lahy; lambda$protoChunkToFullChunk$33
	a (Ldes;Ldei;)V lambda$protoChunkToFullChunk$32
	k (Lclt;)Ljava/lang/String; lambda$releaseLightTicket$31
	l (Lclt;)V lambda$releaseLightTicket$30
	a (Lclt;Lahp;Ldec;Ljava/util/concurrent/Executor;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletionStage; lambda$scheduleChunkGeneration$29
	a (Lclt;Lahp$a;)Ljava/util/concurrent/CompletableFuture; lambda$scheduleChunkGeneration$28
	a (Lclt;Lahp;Ldec;Ljava/util/concurrent/Executor;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; lambda$scheduleChunkGeneration$27
	a (Lo;)V lambda$scheduleChunkGeneration$26
	b (Lahp;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$scheduleChunkGeneration$25
	c (Lahp;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$scheduleChunkGeneration$24
	e (Lahp;Ljava/lang/Runnable;)V lambda$scheduleChunkGeneration$23
	a (Ldec;)Ljava/lang/String; lambda$scheduleChunkGeneration$22
	b (Ldec;I)Ldec; lambda$scheduleChunkGeneration$21
	a (Lclt;Ljava/lang/Throwable;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$20
	a (Lclt;Ljava/util/Optional;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$19
	b (Lclt;Ljava/util/Optional;)Ljava/util/Optional; lambda$scheduleChunkLoad$18
	b (Lclt;Lqr;)Z lambda$scheduleChunkLoad$17
	d (Lahp;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$schedule$16
	a (Lahp;Ljava/lang/Void;Ljava/lang/Throwable;)V lambda$scheduleUnload$15
	a (Lahp;Ljava/util/concurrent/CompletableFuture;JLddx;)V lambda$scheduleUnload$14
	q ()Z lambda$saveAllChunks$13
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lddx;)V lambda$saveAllChunks$12
	c (Lddx;)Z lambda$saveAllChunks$11
	g (Lahp;)Lddx; lambda$saveAllChunks$10
	d (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$prepareEntityTickingChunk$9
	d (Ljava/util/List;)Ldei; lambda$prepareEntityTickingChunk$8
	c (I)Ldec; lambda$prepareEntityTickingChunk$7
	a (Ljava/lang/StringBuilder;Lahp;)V lambda$debugFuturesAndCreateReportedException$6
	a (Ljava/lang/StringBuilder;Lahp;Lcom/mojang/datafixers/util/Pair;)V lambda$debugFuturesAndCreateReportedException$5
	a (IIILjava/util/List;)Lcom/mojang/datafixers/util/Either; lambda$getChunkRangeFuture$4
	e (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$getChunkRangeFuture$3
	d (J)I lambda$getChunkQueueLevel$2
	a (Lddy;)V lambda$debugReloadGenerator$1
	a (Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$debugReloadGenerator$0
	<clinit> ()V <clinit>
ahr$1 net/minecraft/server/level/ChunkMap$1
	a val$k
	c this$0
	<init> (Lahr;Lclt;)V <init>
	toString ()Ljava/lang/String; toString
ahr$2 net/minecraft/server/level/ChunkMap$2
	a val$startX
	c val$finalI
	d val$range
	e val$startZ
	f val$either
	g this$0
	<init> (Lahr;IIIILcom/mojang/datafixers/util/Either;)V <init>
	toString ()Ljava/lang/String; toString
ahr$a net/minecraft/server/level/ChunkMap$DistanceManager
	a this$0
	<init> (Lahr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V <init>
	a (J)Z isChunkToRemove
	b (J)Lahp; getChunk
	a (JILahp;I)Lahp; updateChunkScheduling
ahr$b net/minecraft/server/level/ChunkMap$TrackedEntity
	b serverEntity
	c entity
	d range
	e lastSectionPos
	f seenBy
	a this$0
	<init> (Lahr;Lbfj;IIZ)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Luo;)V broadcast
	b (Luo;)V broadcastAndSend
	a ()V broadcastRemoved
	a (Laig;)V removePlayer
	b (Laig;)V updatePlayer
	a (I)I scaledRange
	b ()I getEffectiveRange
	a (Ljava/util/List;)V updatePlayers
ahs net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	<init> (Ljava/lang/String;I)V <init>
	a (ILclt;I)V resortChunkTasks
	a (Ljava/util/Optional;JI)V submit
	a (JZ)V release
	a (J)Ljava/lang/Runnable; acquire
	a ()Ljava/util/stream/Stream; pop
	b ()Z hasWork
	toString ()Ljava/lang/String; toString
	c ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
	a (JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either; lambda$pop$6
	b (J)Lcom/mojang/datafixers/util/Either; lambda$pop$5
	c (J)V lambda$acquire$4
	a (Ljava/util/Optional;)Z lambda$release$3
	d (J)Ljava/util/List; lambda$submit$2
	e (J)Ljava/util/List; lambda$resortChunkTasks$1
	a (I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap; lambda$new$0
	<clinit> ()V <clinit>
aht net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	<init> (Ljava/util/List;Ljava/util/concurrent/Executor;I)V <init>
	a ()Z hasWork
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Laht$a; message
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Laht$a; message
	a (Lahp;Ljava/lang/Runnable;)Laht$a; message
	a (Lahp;Ljava/util/function/Function;)Laht$a; message
	a (Ljava/lang/Runnable;JZ)Laht$b; release
	a (Lbcp;Z)Lbcp; getProcessor
	a (Lbcp;)Lbcp; getReleaseProcessor
	onLevelChange (Lclt;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
	a (Lbcp;JLjava/lang/Runnable;Z)V release
	a (Lbcp;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lahs;Lbcp;)V pollTask
	b (Lbcp;)Lahs; getQueue
	b ()Ljava/lang/String; getDebugStatus
	close ()V close
	a (Ljava/util/Map$Entry;)Ljava/lang/String; lambda$getDebugStatus$19
	a (Ljava/lang/Long;)Ljava/lang/String; lambda$getDebugStatus$18
	b (Lahs;Lbcp;)V lambda$pollTask$17
	a (Lahs;Lbcp;Ljava/lang/Void;)V lambda$pollTask$16
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$pollTask$15
	a (Lbcp;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture; lambda$pollTask$14
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; lambda$pollTask$13
	a (Lbcp;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V lambda$submit$12
	a (Lbcp;JZLjava/lang/Runnable;)V lambda$release$11
	a (Ljava/util/function/IntSupplier;Lclt;ILjava/util/function/IntConsumer;)V lambda$onLevelChange$10
	a (ILclt;ILahs;)V lambda$onLevelChange$9
	a (Lbcp;Lbcp;)Lbcs$b; lambda$getReleaseProcessor$8
	b (Lbcp;Lbcp;)V lambda$getReleaseProcessor$7
	a (Lbcp;Laht$b;)V lambda$getReleaseProcessor$6
	a (Lbcp;ZLbcp;)Lbcs$b; lambda$getProcessor$5
	a (Lbcp;Lbcp;Z)V lambda$getProcessor$4
	a (Lbcp;ZLaht$a;)V lambda$getProcessor$3
	a (Ljava/lang/Runnable;Lbcp;)Ljava/lang/Runnable; lambda$message$2
	b (Ljava/lang/Runnable;Lbcp;)V lambda$message$1
	a (ILbcp;)Lahs; lambda$new$0
	<clinit> ()V <clinit>
aht$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
	<init> (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V <init>
aht$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
	<init> (Ljava/lang/Runnable;JZ)V <init>
ahu net/minecraft/server/level/ChunkTracker
	<init> (III)V <init>
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (JJI)I computeLevelFromNeighbor
	b (J)I getLevelFromSource
	b (JIZ)V update
ahv net/minecraft/server/level/ColumnPos
	a x
	b z
	c COORD_BITS
	d COORD_MASK
	<init> (II)V <init>
	a ()Lclt; toChunkPos
	b ()J toLong
	a (II)J asLong
	a (J)I getX
	b (J)I getZ
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()I x
	d ()I z
ahw net/minecraft/server/level/DemoMode
	a DEMO_DAYS
	b TOTAL_PLAY_TICKS
	e displayedIntro
	f demoHasEnded
	g demoEndedReminder
	h gameModeTicks
	<init> (Laig;)V <init>
	a ()V tick
	f ()V outputDemoReminder
	a (Lgu;Laad$a;Lha;II)V handleBlockBreakAction
	a (Laig;Lcmm;Lcfz;Lbdw;)Lbdx; useItem
	a (Laig;Lcmm;Lcfz;Lbdw;Leee;)Lbdx; useItemOn
ahx net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c INITIAL_TICKET_LIST_CAPACITY
	d playersPerChunk
	e tickets
	f ticketTracker
	g naturalSpawnChunkCounter
	h tickingTicketsTracker
	i playerTicketManager
	j chunksToUpdateFutures
	k ticketThrottler
	l ticketThrottlerInput
	m ticketThrottlerReleaser
	n ticketsToRelease
	o mainThreadExecutor
	p ticketTickCounter
	q simulationDistance
	<init> (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V <init>
	a ()V purgeStaleTickets
	a (Lapo;)I getTicketLevelAt
	a (J)Z isChunkToRemove
	b (J)Lahp; getChunk
	a (JILahp;I)Lahp; updateChunkScheduling
	a (Lahr;)Z runAllUpdates
	a (JLaij;)V addTicket
	b (JLaij;)V removeTicket
	a (Laik;Lclt;ILjava/lang/Object;)V addTicket
	b (Laik;Lclt;ILjava/lang/Object;)V removeTicket
	c (Laik;Lclt;ILjava/lang/Object;)V addRegionTicket
	d (Laik;Lclt;ILjava/lang/Object;)V removeRegionTicket
	g (J)Lapo; getTickets
	a (Lclt;Z)V updateChunkForced
	a (Lhx;Laig;)V addPlayer
	b (Lhx;Laig;)V removePlayer
	g ()I getPlayerTicketLevel
	c (J)Z inEntityTickingRange
	d (J)Z inBlockTickingRange
	e (J)Ljava/lang/String; getTicketDebugString
	a (I)V updatePlayerTickets
	b (I)V updateSimulationDistance
	b ()I getNaturalSpawnChunkCount
	f (J)Z hasPlayersNearby
	c ()Ljava/lang/String; getDebugStatus
	a (Ljava/lang/String;)V dumpTickets
	d ()Lail; tickingTracker
	e ()V removeTicketsOnClosing
	f ()Z hasTickets
	h (J)Lit/unimi/dsi/fastutil/objects/ObjectSet; lambda$addPlayer$6
	i (J)Lapo; lambda$getTickets$5
	a (JLcom/mojang/datafixers/util/Either;)V lambda$runAllUpdates$4
	j (J)V lambda$runAllUpdates$3
	h ()V lambda$runAllUpdates$2
	a (Laij;)Z lambda$runAllUpdates$1
	a (Lahr;Lahp;)V lambda$runAllUpdates$0
	<clinit> ()V <clinit>
ahx$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	b MAX_LEVEL
	a this$0
	<init> (Lahx;)V <init>
	b (J)I getLevelFromSource
	c (J)I getLevel
	a (JI)V setLevel
	a (I)I runDistanceUpdates
	<clinit> ()V <clinit>
ahx$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	c this$0
	<init> (Lahx;I)V <init>
	c (J)I getLevel
	a (JI)V setLevel
	a (JII)V onLevelChange
	b (J)I getLevelFromSource
	d (J)Z havePlayer
	a ()V runAllUpdates
	a (Ljava/lang/String;)V dumpChunks
ahx$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	g viewDistance
	h queueLevels
	i toUpdate
	d this$0
	<init> (Lahx;I)V <init>
	a (JII)V onLevelChange
	a (I)V updateViewDistance
	a (JIZZ)V onLevelChange
	a ()V runAllUpdates
	c (I)Z haveTicketFor
	b (JI)V lambda$runAllUpdates$7
	d (J)I lambda$runAllUpdates$6
	a (JLaij;)V lambda$onLevelChange$5
	b (JLaij;)V lambda$onLevelChange$4
	d (I)I lambda$onLevelChange$3
	c (JLaij;)V lambda$onLevelChange$2
	d (JLaij;)V lambda$onLevelChange$1
	d ()V lambda$onLevelChange$0
ahy net/minecraft/server/level/FullChunkStatus
	a INACCESSIBLE
	b FULL
	c BLOCK_TICKING
	d ENTITY_TICKING
	e $VALUES
	values ()[Lahy; values
	valueOf (Ljava/lang/String;)Lahy; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lahy;)Z isOrAfter
	a ()[Lahy; $values
	<clinit> ()V <clinit>
ahz net/minecraft/server/level/PlayerMap
	a players
	<init> ()V <init>
	a (J)Ljava/util/Set; getPlayers
	a (JLaig;Z)V addPlayer
	a (JLaig;)V removePlayer
	a (Laig;)V ignorePlayer
	b (Laig;)V unIgnorePlayer
	c (Laig;)Z ignoredOrUnknown
	d (Laig;)Z ignored
	a (JJLaig;)V updatePlayer
aia net/minecraft/server/level/PlayerRespawnLogic
	<init> ()V <init>
	a (Laif;II)Lgu; getOverworldRespawnPos
	a (Laif;Lclt;)Lgu; getSpawnPosInChunk
aib net/minecraft/server/level/SectionTracker
	<init> (III)V <init>
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (JJI)I computeLevelFromNeighbor
	b (J)I getLevelFromSource
	b (JIZ)V update
aic net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	j visible
	<init> (Lsw;Lbdn$a;Lbdn$b;)V <init>
	a (F)V setProgress
	a (Lbdn$a;)V setColor
	a (Lbdn$b;)V setOverlay
	a (Z)Lbdn; setDarkenScreen
	b (Z)Lbdn; setPlayBossMusic
	c (Z)Lbdn; setCreateWorldFog
	a (Lsw;)V setName
	a (Ljava/util/function/Function;)V broadcast
	a (Laig;)V addPlayer
	b (Laig;)V removePlayer
	b ()V removeAllPlayers
	g ()Z isVisible
	d (Z)V setVisible
	h ()Ljava/util/Collection; getPlayers
aid net/minecraft/server/level/ServerChunkCache
	b CHUNK_STATUSES
	c distanceManager
	d level
	e mainThread
	f lightEngine
	g mainThreadProcessor
	a chunkMap
	h dataStorage
	i lastInhabitedUpdate
	j spawnEnemies
	k spawnFriendlies
	l CACHE_SIZE
	m lastChunkPos
	n lastChunkStatus
	o lastChunk
	p lastSpawnState
	<init> (Laif;Ldyy$c;Lcom/mojang/datafixers/DataFixer;Ldvu;Ljava/util/concurrent/Executor;Lddy;IIZLaio;Ldfr;Ljava/util/function/Supplier;)V <init>
	a ()Laii; getLightEngine
	b (J)Lahp; getVisibleChunkIfPresent
	b ()I getTickingGenerated
	a (JLddx;Ldec;)V storeInCache
	a (IILdec;Z)Lddx; getChunk
	a (II)Ldei; getChunkNow
	r ()V clearCache
	b (IILdec;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	c (IILdec;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
	a (Lahp;I)Z chunkAbsent
	b (II)Z hasChunk
	c (II)Ldek; getChunkForLighting
	c ()Lcmm; getLevel
	d ()Z pollTask
	s ()Z runDistanceManagerUpdates
	a (J)Z isPositionTicking
	a (Z)V save
	close ()V close
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	t ()V tickChunks
	a (JLjava/util/function/Consumer;)V getFullChunk
	e ()Ljava/lang/String; gatherStats
	f ()I getPendingTasksCount
	g ()Lddy; getGenerator
	h ()Lddz; getGeneratorState
	i ()Ldhy; randomState
	j ()I getLoadedChunksCount
	a (Lgu;)V blockChanged
	a (Lcmv;Lhx;)V onLightUpdate
	a (Laik;Lclt;ILjava/lang/Object;)V addRegionTicket
	b (Laik;Lclt;ILjava/lang/Object;)V removeRegionTicket
	a (Lclt;Z)V updateChunkForced
	a (Laig;)V move
	a (Lbfj;)V removeEntity
	b (Lbfj;)V addEntity
	a (Lbfj;Luo;)V broadcastAndSend
	b (Lbfj;Luo;)V broadcast
	a (I)V setViewDistance
	b (I)V setSimulationDistance
	a (ZZ)V setSpawnSettings
	a (Lclt;)Ljava/lang/String; getChunkDebugData
	k ()Ldyu; getDataStorage
	l ()Lbqz; getPoiManager
	m ()Ldex; chunkScanner
	n ()Lcmx$d; getLastSpawnState
	o ()V removeTicketsOnClosing
	p ()Ldwt; getLightEngine
	q ()Lcls; getLevel
	a (Lhx;Lcmv;)V lambda$onLightUpdate$6
	a (Laid$a;)V lambda$tickChunks$5
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage; lambda$getChunkFuture$4
	d (IILdec;Z)Ljava/util/concurrent/CompletableFuture; lambda$getChunkFuture$3
	a (ZLahp$a;)Lddx; lambda$getChunk$2
	a (Lddx;)Lddx; lambda$getChunk$1
	e (IILdec;Z)Lddx; lambda$getChunk$0
	<clinit> ()V <clinit>
aid$a net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	a chunk
	b holder
	<init> (Ldei;Lahp;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldei; chunk
	b ()Lahp; holder
aid$b net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	a this$0
	<init> (Laid;Lcmm;)V <init>
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	e (Ljava/lang/Runnable;)Z shouldRun
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	d (Ljava/lang/Runnable;)V doRunTask
	x ()Z pollTask
aie net/minecraft/server/level/ServerEntity
	a LOGGER
	b TOLERANCE_LEVEL_ROTATION
	c level
	d entity
	e updateInterval
	f trackDelta
	g broadcast
	h positionCodec
	i yRotp
	j xRotp
	k yHeadRotp
	l ap
	m tickCount
	n teleportDelay
	o lastPassengers
	p wasRiding
	q wasOnGround
	r trackedDataValues
	<init> (Laif;Lbfj;IZLjava/util/function/Consumer;)V <init>
	a ()V sendChanges
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream; removedPassengers
	a (Laig;)V removePairing
	b (Laig;)V addPairing
	a (Laig;Ljava/util/function/Consumer;)V sendPairingData
	b ()V sendDirtyEntityData
	a (Luo;)V broadcastAndSend
	a (Ljava/util/List;Lbfj;)Z lambda$removedPassengers$1
	a (Lbfj;)V lambda$sendChanges$0
	<clinit> ()V <clinit>
aif net/minecraft/server/level/ServerLevel
	a END_SPAWN_POINT
	b RAIN_DELAY
	c RAIN_DURATION
	D THUNDER_DELAY
	d THUNDER_DURATION
	E LOGGER
	F EMPTY_TIME_NO_TICK
	G MAX_SCHEDULED_TICKS_PER_TICK
	H players
	I chunkSource
	J server
	K serverLevelData
	L entityTickList
	M entityManager
	N gameEventDispatcher
	e noSave
	O sleepStatus
	P emptyTime
	Q portalForcer
	R blockTicks
	S fluidTicks
	T navigatingMobs
	U isUpdatingNavigations
	f raids
	V blockEvents
	W blockEventsToReschedule
	X handlingTick
	Y customSpawners
	Z dragonFight
	aa dragonParts
	ab structureManager
	ac structureCheck
	ad tickTime
	ae randomSequences
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Ldyy$c;Ldzd;Lacp;Ldfl;Laio;ZJLjava/util/List;ZLbed;)V <init>
	a (Ldfn;)V setDragonFight
	a (IIZZ)V setWeatherParameters
	a (III)Lhe; getUncachedNoiseBiome
	a ()Lcne; structureManager
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (J)Z shouldTickBlocksAt
	b ()V tickTime
	b (J)V setDayTime
	a (ZZ)V tickCustomSpawners
	i (Lbfj;)Z shouldDiscardEntity
	ap ()V wakeUpAllPlayers
	a (Ldei;I)V tickChunk
	D (Lgu;)Ljava/util/Optional; findLightningRod
	a (Lgu;)Lgu; findLightningTargetAround
	c ()Z isHandlingTick
	d ()Z canSleepThroughNights
	aq ()V announceSleepStatus
	e ()V updateSleepingPlayerList
	f ()Ladg; getScoreboard
	ar ()V advanceWeatherCycle
	as ()V resetWeatherCycle
	g ()V resetEmptyTime
	a (Lgu;Ldxd;)V tickFluid
	d (Lgu;Lcpn;)V tickBlock
	a (Lbfj;)V tickNonPassenger
	a (Lbfj;Lbfj;)V tickPassenger
	a (Lbyo;Lgu;)Z mayInteract
	a (Lape;ZZ)V save
	at ()V saveLevelData
	a (Ldfz;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ldfz;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Ldfz;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	h ()Ljava/util/List; getDragons
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Ljava/util/function/Predicate;I)Ljava/util/List; getPlayers
	i ()Laig; getRandomPlayer
	b (Lbfj;)Z addFreshEntity
	c (Lbfj;)Z addWithUUID
	d (Lbfj;)V addDuringTeleport
	a (Laig;)V addDuringCommandTeleport
	b (Laig;)V addDuringPortalTeleport
	c (Laig;)V addNewPlayer
	d (Laig;)V addRespawnedPlayer
	e (Laig;)V addPlayer
	j (Lbfj;)Z addEntity
	e (Lbfj;)Z tryAddFreshEntityWithPassengers
	a (Ldei;)V unload
	a (Laig;Lbfj$c;)V removePlayerImmediately
	a (ILgu;I)V destroyBlockProgress
	a (Lbyo;DDDLhe;Lami;FFJ)V playSeededSound
	a (Lbyo;Lbfj;Lhe;Lami;FFJ)V playSeededSound
	b (ILgu;I)V globalLevelEvent
	a (Lbyo;ILgu;I)V levelEvent
	j ()I getLogicalHeight
	a (Ldgl;Leei;Ldgl$a;)V gameEvent
	a (Lgu;Ldcb;Ldcb;I)V sendBlockUpdated
	a (Lgu;Lcpn;)V updateNeighborsAt
	a (Lgu;Lcpn;Lha;)V updateNeighborsAtExceptFromFacing
	a (Lgu;Lcpn;Lgu;)V neighborChanged
	a (Ldcb;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lbfj;B)V broadcastEntityEvent
	a (Lbfj;Lben;)V broadcastDamageEvent
	k ()Laid; getChunkSource
	a (Lbfj;Lben;Lcmf;DDDFZLcmm$a;)Lcme; explode
	a (Lgu;Lcpn;II)V blockEvent
	au ()V runBlockEvents
	a (Lclr;)Z doBlockEvent
	l ()Lefq; getBlockTicks
	m ()Lefq; getFluidTicks
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	o ()Ldya; getPortalForcer
	p ()Ldvu; getStructureManager
	a (Lit;DDDIDDDD)I sendParticles
	a (Laig;Lit;ZDDDIDDDD)Z sendParticles
	a (Laig;ZDDDLuo;)Z sendParticles
	a (I)Lbfj; getEntity
	b (I)Lbfj; getEntityOrPart
	a (Ljava/util/UUID;)Lbfj; getEntity
	a (Lanl;Lgu;IZ)Lgu; findNearestMapStructure
	a (Ljava/util/function/Predicate;Lgu;III)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	q ()Lcjd; getRecipeManager
	r ()Z noSave
	s ()Ldyu; getDataStorage
	a (Ljava/lang/String;)Ldyo; getMapData
	a (Ljava/lang/String;Ldyo;)V setMapData
	t ()I getFreeMapId
	a (Lgu;F)V setDefaultSpawnPos
	u ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	a (IIZ)Z setChunkForced
	v ()Ljava/util/List; players
	a (Lgu;Ldcb;Ldcb;)V onBlockStateChange
	w ()Lbqz; getPoiManager
	b (Lgu;)Z isVillage
	a (Lhx;)Z isVillage
	a (Lgu;I)Z isCloseToVillage
	b (Lhx;)I sectionsToVillage
	x ()Lbzx; getRaids
	c (Lgu;)Lbzv; getRaidAt
	d (Lgu;)Z isRaided
	a (Lbqw;Lbfj;Lbgo;)V onReputationEvent
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/io/Writer;)V dumpBlockEntityTickers
	a (Ldrs;)V clearBlockEvents
	b (Lgu;Lcpn;)V blockUpdated
	a (Lha;Z)F getShade
	y ()Ljava/lang/Iterable; getAllEntities
	toString ()Ljava/lang/String; toString
	z ()Z isFlat
	A ()J getSeed
	B ()Ldfn; getDragonFight
	C ()Laif; getLevel
	D ()Ljava/lang/String; getWatchdogStats
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; getTypeCount
	a (Laif;)V makeObsidianPlatform
	E ()Ldgb; getEntities
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	b (Ldei;)V startTickingChunk
	a (Lddx;)V onStructureStartsAvailable
	close ()V close
	F ()Ljava/lang/String; gatherChunkSourceStats
	c (J)Z areEntitiesLoaded
	d (J)Z isPositionTickingWithEntitiesLoaded
	e (Lgu;)Z isPositionEntityTicking
	f (Lgu;)Z isNaturalSpawningAllowed
	a (Lclt;)Z isNaturalSpawningAllowed
	G ()Lcaw; enabledFeatures
	a (Lacq;)Lapf; getRandomSequence
	H ()Lbed; getRandomSequences
	I ()Lefg; getScoreboard
	J ()Ldeb; getChunkSource
	K ()Lefp; getFluidTicks
	L ()Lefp; getBlockTicks
	b (Lddx;)V lambda$onStructureStartsAvailable$24
	a (Laif;Lgu;)V lambda$makeObsidianPlatform$23
	b (Laif;Lgu;)V lambda$makeObsidianPlatform$22
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String; lambda$getTypeCount$21
	k (Lbfj;)Ljava/lang/String; lambda$getWatchdogStats$20
	a (Ldrs;Lclr;)Z lambda$clearBlockEvents$19
	a (Lgu;Lhe;)V lambda$onBlockStateChange$18
	b (Lgu;Lhe;)V lambda$onBlockStateChange$17
	c (Lgu;Lhe;)V lambda$onBlockStateChange$16
	E (Lgu;)V lambda$onBlockStateChange$15
	a (Ljava/util/function/Predicate;Ljava/util/List;ILbfj;)Lanr$a; lambda$getEntities$14
	l (Lbfj;)Ljava/lang/String; lambda$tickPassenger$13
	m (Lbfj;)Ljava/lang/String; lambda$tickNonPassenger$12
	a (Lbfz;)Z lambda$findLightningTargetAround$11
	F (Lgu;)Lgu; lambda$findLightningRod$10
	G (Lgu;)Z lambda$findLightningRod$9
	a (Lhe;)Z lambda$findLightningRod$8
	f (Laig;)V lambda$wakeUpAllPlayers$7
	a (Lban;Lbfj;)V lambda$tick$6
	e (J)Lbed; lambda$new$5
	f (J)Lbed; lambda$new$4
	a (JLqr;)Lbed; lambda$new$3
	av ()Lbzx; lambda$new$2
	a (Lqr;)Lbzx; lambda$new$1
	a (Lnet/minecraft/server/MinecraftServer;)Ldyu; lambda$new$0
	<clinit> ()V <clinit>
aif$a net/minecraft/server/level/ServerLevel$EntityCallbacks
	a this$0
	<init> (Laif;)V <init>
	a (Lbfj;)V onCreated
	b (Lbfj;)V onDestroyed
	c (Lbfj;)V onTickingStart
	d (Lbfj;)V onTickingEnd
	e (Lbfj;)V onTrackingStart
	f (Lbfj;)V onTrackingEnd
	g (Lbfj;)V onSectionChange
	a (Ljava/lang/Object;)V onSectionChange
	b (Ljava/lang/Object;)V onTrackingEnd
	c (Ljava/lang/Object;)V onTrackingStart
	d (Ljava/lang/Object;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	f (Ljava/lang/Object;)V onDestroyed
	g (Ljava/lang/Object;)V onCreated
aig net/minecraft/server/level/ServerPlayer
	b LOGGER
	cl NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	cm NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	c connection
	d server
	e gameMode
	cn advancements
	co stats
	cp lastRecordedHealthAndAbsorption
	cq lastRecordedFoodLevel
	cr lastRecordedAirLevel
	cs lastRecordedArmor
	ct lastRecordedLevel
	cu lastRecordedExperience
	cv lastSentHealth
	cw lastSentFood
	cx lastFoodSaturationZero
	cy lastSentExp
	cz spawnInvulnerableTime
	cA chatVisibility
	cB canChatColor
	cC lastActionTime
	cD camera
	cE isChangingDimension
	cF seenCredits
	cG recipeBook
	cH levitationStartPos
	cI levitationStartTime
	cJ disconnected
	cK startingToFallPosition
	cL enteredNetherPosition
	cM enteredLavaOnVehiclePosition
	cN lastSectionPos
	cO respawnDimension
	cP respawnPosition
	cQ respawnForced
	cR respawnAngle
	cS textFilter
	cT textFilteringEnabled
	cU allowsListing
	cV wardenSpawnTracker
	cW containerSynchronizer
	cX containerListener
	cY chatSession
	cZ containerCounter
	f latency
	g wonGame
	<init> (Lnet/minecraft/server/MinecraftServer;Laif;Lcom/mojang/authlib/GameProfile;)V <init>
	d (Laif;)V fudgeSpawnLocation
	u (I)I getCoprime
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a (I)V setExperiencePoints
	b (I)V setExperienceLevels
	c (I)V giveExperienceLevels
	a (Lcfz;I)V onEnchantmentPerformed
	a (Lcbf;)V initMenu
	h ()V initInventoryMenu
	Q_ ()V onEnterCombat
	F_ ()V onLeaveCombat
	a (Ldcb;)V onInsideBlock
	k ()Lcfv; createItemCooldowns
	l ()V tick
	m ()V doTick
	n ()V resetFallDistance
	o ()V trackStartFallingPosition
	p ()V trackEnteredOrExitedLavaOnVehicle
	a (Lefj;I)V updateScoreForCriteria
	a (Lben;)V die
	gn ()V tellNeutralMobsThatIDied
	a (Lbfj;ILben;)V awardKillScore
	a (Ljava/lang/String;Ljava/lang/String;[Lefj;)V handleTeamKill
	a (Lben;F)Z hurt
	a (Lbyo;)Z canHarmPlayer
	go ()Z isPvpAllowed
	a (Laif;)Ldyb; findDimensionEntryPoint
	b (Laif;)Lbfj; changeDimension
	a (Laif;Lgu;)V createEndPlatform
	a (Laif;Lgu;ZLdds;)Ljava/util/Optional; getExitPortal
	e (Laif;)V triggerDimensionChangeTriggers
	a (Laig;)Z broadcastToPlayer
	a (Lbfj;I)V take
	a (Lgu;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	b (Lgu;)V startSleeping
	a (Lgu;Lha;)Z bedInRange
	i (Lgu;)Z isReachableBedBlock
	b (Lgu;Lha;)Z bedBlocked
	a (ZZ)V stopSleepInBed
	a (DDD)V dismountTo
	b (Lben;)Z isInvulnerableTo
	a (DZLdcb;Lgu;)V checkFallDamage
	c (Lgu;)V onChangedBlock
	a (DDDZ)V doCheckFallDamage
	a (Ldav;Z)V openTextEdit
	gp ()V nextContainerCounter
	a (Lbea;)Ljava/util/OptionalInt; openMenu
	a (ILcll;IIZZ)V sendMerchantOffers
	a (Lbtk;Lbdq;)V openHorseInventory
	a (Lcfz;Lbdw;)V openItemGui
	a (Lczx;)V openCommandBlock
	q ()V closeContainer
	r ()V doCloseContainer
	a (FFZZ)V setPlayerInput
	a (Lamo;I)V awardStat
	a (Lamo;)V resetStat
	a (Ljava/util/Collection;)I awardRecipes
	a (Lcjc;Ljava/util/List;)V triggerRecipeCrafted
	a ([Lacq;)V awardRecipesByKey
	b (Ljava/util/Collection;)I resetRecipes
	d (I)V giveExperiencePoints
	s ()V disconnect
	t ()Z hasDisconnected
	u ()V resetSentInfo
	a (Lsw;Z)V displayClientMessage
	Z_ ()V completeUsingItem
	a (Leb$a;Leei;)V lookAt
	a (Leb$a;Lbfj;Leb$a;)V lookAt
	a (Laig;Z)V restoreFrom
	a (Lbfa;Lbfj;)V onEffectAdded
	a (Lbfa;ZLbfj;)V onEffectUpdated
	a (Lbfa;)V onEffectRemoved
	b (DDD)V teleportTo
	c (DDD)V teleportRelative
	a (Laif;DDDLjava/util/Set;FF)Z teleportTo
	d (DDD)V moveTo
	a (Lbfj;)V crit
	b (Lbfj;)V magicCrit
	w ()V onUpdateAbilities
	x ()Laif; serverLevel
	a (Lcmj;)Z setGameMode
	G_ ()Z isSpectator
	f ()Z isCreative
	a (Lsw;)V sendSystemMessage
	b (Lsw;Z)V sendSystemMessage
	a (Ltk;ZLss$a;)V sendChatMessage
	y ()Ljava/lang/String; getIpAddress
	a (Lzl;)V updateOptions
	z ()Z canChatInColor
	A ()Lbym; getChatVisibility
	v (Z)Z acceptsSystemMessages
	gq ()Z acceptsChatMessages
	a (Ljava/lang/String;Ljava/lang/String;ZLsw;)V sendTexturePack
	a (Labt;)V sendServerStatus
	B ()I getPermissionLevel
	C ()V resetLastActionTime
	D ()Lamn; getStats
	E ()Lamm; getRecipeBook
	F ()V updateInvisibilityStatus
	G ()Lbfj; getCamera
	c (Lbfj;)V setCamera
	H ()V processPortalCooldown
	d (Lbfj;)V attack
	I ()J getLastActionTime
	J ()Lsw; getTabListDisplayName
	a (Lbdw;)V swing
	K ()Z isChangingDimension
	L ()V hasChangedDimension
	M ()Lacy; getAdvancements
	a (Laif;DDDFF)V teleportTo
	N ()Lgu; getRespawnPosition
	O ()F getRespawnAngle
	P ()Lacp; getRespawnDimension
	Q ()Z isRespawnForced
	a (Lacp;Lgu;FZZ)V setRespawnPosition
	a (Lclt;Luo;)V trackChunk
	a (Lclt;)V untrackChunk
	R ()Lhx; getLastSectionPos
	a (Lhx;)V setLastSectionPos
	a (Lamg;Lami;FF)V playNotifySound
	S ()Luo; getAddEntityPacket
	a (Lcfz;ZZ)Lbvh; drop
	T ()Lajd; getTextFilter
	c (Laif;)V setServerLevel
	a (Lqr;Ljava/lang/String;)Lcmj; readPlayerMode
	b (Lcmj;)Lcmj; calculateGameModeForNewPlayer
	c (Lqr;)V loadGameTypes
	k (Lqr;)V storeGameTypes
	U ()Z isTextFilteringEnabled
	b (Laig;)Z shouldFilterMessageTo
	a (Lcmm;Lgu;)Z mayInteract
	a (Lcfz;)V updateUsingItem
	a (Z)Z drop
	V ()Z allowsListing
	W ()Ljava/util/Optional; getWardenSpawnTracker
	a (Lbvh;)V onItemPickup
	a (Ltm;)V setChatSession
	X ()Ltm; getChatSession
	a (DD)V indicateDamage
	a (Lbfj;Z)Z startRiding
	Y ()V stopRiding
	a (Lbyn;I)V lambda$drop$12
	c (Lsw;)Luo; lambda$sendSystemMessage$11
	a (ILeff;)V lambda$awardStat$10
	a (Lapz;)V lambda$startSleepInBed$9
	a (Lbwc;)Z lambda$startSleepInBed$8
	a (Lbgb;)V lambda$tellNeutralMobsThatIDied$7
	b (Lbgb;)Z lambda$tellNeutralMobsThatIDied$6
	d (Lsw;)Luo; lambda$die$5
	a (Lsw;Lts;)Lts; lambda$die$4
	b (ILeff;)V lambda$updateScoreForCriteria$3
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$2
	b (Lqr;Lrk;)V lambda$addAdditionalSaveData$1
	a (Lbxu;)V lambda$readAdditionalSaveData$0
	<clinit> ()V <clinit>
aig$1 net/minecraft/server/level/ServerPlayer$1
	a this$0
	<init> (Laig;)V <init>
	a (Lcbf;Lhn;Lcfz;[I)V sendInitialData
	a (Lcbf;ILcfz;)V sendSlotChange
	a (Lcbf;Lcfz;)V sendCarriedChange
	a (Lcbf;II)V sendDataChange
	b (Lcbf;II)V broadcastDataValue
aig$2 net/minecraft/server/level/ServerPlayer$2
	a this$0
	<init> (Laig;)V <init>
	a (Lcbf;ILcfz;)V slotChanged
	a (Lcbf;II)V dataChanged
aih net/minecraft/server/level/ServerPlayerGameMode
	a LOGGER
	c level
	d player
	b gameModeForPlayer
	e previousGameModeForPlayer
	f isDestroyingBlock
	g destroyProgressStart
	h destroyPos
	i gameTicks
	j hasDelayedDestroy
	k delayedDestroyPos
	l delayedTickStart
	m lastSentState
	<init> (Laig;)V <init>
	a (Lcmj;)Z changeGameModeForPlayer
	a (Lcmj;Lcmj;)V setGameModeForPlayer
	b ()Lcmj; getGameModeForPlayer
	c ()Lcmj; getPreviousGameModeForPlayer
	d ()Z isSurvival
	e ()Z isCreative
	a ()V tick
	a (Ldcb;Lgu;I)F incrementDestroyProgress
	a (Lgu;ZILjava/lang/String;)V debugLogging
	a (Lgu;Laad$a;Lha;II)V handleBlockBreakAction
	a (Lgu;ILjava/lang/String;)V destroyAndAck
	a (Lgu;)Z destroyBlock
	a (Laig;Lcmm;Lcfz;Lbdw;)Lbdx; useItem
	a (Laig;Lcmm;Lcfz;Lbdw;Leee;)Lbdx; useItemOn
	a (Laif;)V setLevel
	<clinit> ()V <clinit>
aii net/minecraft/server/level/ThreadedLevelLightEngine
	a DEFAULT_BATCH_SIZE
	d LOGGER
	e taskMailbox
	f lightTasks
	g chunkMap
	h sorterMailbox
	i taskPerBatch
	j scheduled
	<init> (Ldel;Lahr;ZLbcq;Lbcp;)V <init>
	close ()V close
	a ()I runLightUpdates
	a (Lgu;)V checkBlock
	a (Lclt;)V updateChunkStatus
	a (Lhx;Z)V updateSectionStatus
	b (Lclt;)V propagateLightSources
	a (Lclt;Z)V setLightEnabled
	a (Lcmv;Lhx;Lded;)V queueSectionData
	a (IILaii$a;Ljava/lang/Runnable;)V addTask
	a (IILjava/util/function/IntSupplier;Laii$a;Ljava/lang/Runnable;)V addTask
	b (Lclt;Z)V retainData
	a (Lddx;Z)Ljava/util/concurrent/CompletableFuture; initializeLight
	b (Lddx;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	b ()V tryScheduleUpdate
	f ()V runUpdate
	g ()V lambda$tryScheduleUpdate$27
	a (Lclt;Ljava/lang/Runnable;)V lambda$lightChunk$26
	a (Lddx;Lclt;)Lddx; lambda$lightChunk$25
	c (Lclt;Z)Ljava/lang/String; lambda$lightChunk$24
	a (ZLclt;)V lambda$lightChunk$23
	b (Lclt;Ljava/lang/Runnable;)V lambda$initializeLight$22
	a (Lclt;ZLddx;)Lddx; lambda$initializeLight$21
	c (Lclt;)Ljava/lang/String; lambda$initializeLight$20
	b (Lddx;Lclt;)V lambda$initializeLight$19
	d (Lclt;)Ljava/lang/String; lambda$retainData$18
	d (Lclt;Z)V lambda$retainData$17
	h ()I lambda$retainData$16
	a (Laii$a;Ljava/lang/Runnable;)V lambda$addTask$15
	b (Lhx;)Ljava/lang/String; lambda$queueSectionData$14
	b (Lcmv;Lhx;Lded;)V lambda$queueSectionData$13
	i ()I lambda$queueSectionData$12
	e (Lclt;Z)Ljava/lang/String; lambda$setLightEnabled$11
	f (Lclt;Z)V lambda$setLightEnabled$10
	e (Lclt;)Ljava/lang/String; lambda$propagateLightSources$9
	f (Lclt;)V lambda$propagateLightSources$8
	b (Lhx;Z)Ljava/lang/String; lambda$updateSectionStatus$7
	c (Lhx;Z)V lambda$updateSectionStatus$6
	j ()I lambda$updateSectionStatus$5
	g (Lclt;)Ljava/lang/String; lambda$updateChunkStatus$4
	h (Lclt;)V lambda$updateChunkStatus$3
	k ()I lambda$updateChunkStatus$2
	b (Lgu;)Ljava/lang/String; lambda$checkBlock$1
	c (Lgu;)V lambda$checkBlock$0
	<clinit> ()V <clinit>
aii$a net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	a PRE_UPDATE
	b POST_UPDATE
	c $VALUES
	values ()[Laii$a; values
	valueOf (Ljava/lang/String;)Laii$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laii$a; $values
	<clinit> ()V <clinit>
aij net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	c key
	d createdTick
	<init> (Laik;ILjava/lang/Object;)V <init>
	a (Laij;)I compareTo
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a ()Laik; getType
	b ()I getTicketLevel
	a (J)V setCreatedTick
	b (J)Z timedOut
	compareTo (Ljava/lang/Object;)I compareTo
aik net/minecraft/server/level/TicketType
	i name
	j comparator
	k timeout
	a START
	b DRAGON
	c PLAYER
	d FORCED
	e LIGHT
	f PORTAL
	g POST_TELEPORT
	h UNKNOWN
	a (Ljava/lang/String;Ljava/util/Comparator;)Laik; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Laik; create
	<init> (Ljava/lang/String;Ljava/util/Comparator;J)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/util/Comparator; getComparator
	b ()J timeout
	a (Lapz;Lapz;)I lambda$static$1
	b (Lapz;Lapz;)I lambda$static$0
	<clinit> ()V <clinit>
ail net/minecraft/server/level/TickingTracker
	a MAX_LEVEL
	c INITIAL_TICKET_LIST_CAPACITY
	b chunks
	d tickets
	<init> ()V <init>
	g (J)Lapo; getTickets
	a (Lapo;)I getTicketLevelAt
	a (JLaij;)V addTicket
	b (JLaij;)V removeTicket
	a (Laik;Lclt;ILjava/lang/Object;)V addTicket
	b (Laik;Lclt;ILjava/lang/Object;)V removeTicket
	a (I)V replacePlayerTicketsLevel
	b (J)I getLevelFromSource
	a (Lclt;)I getLevel
	c (J)I getLevel
	a (JI)V setLevel
	a ()V runAllUpdates
	d (J)Ljava/lang/String; getTicketDebugString
	h (J)Lapo; lambda$getTickets$0
aim net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c center
	d size
	e level
	f seed
	g levelData
	h random
	i dimensionType
	j blockTicks
	k fluidTicks
	l biomeManager
	m firstPos
	n lastPos
	o structureManager
	p generatingStatus
	q writeRadiusCutoff
	r currentlyGenerating
	s subTickCount
	t WORLDGEN_REGION_RANDOM
	<init> (Laif;Ljava/util/List;Ldec;I)V <init>
	a (Lclt;I)Z isOldChunkAround
	a ()Lclt; getCenter
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
	a (II)Lddx; getChunk
	a (IILdec;Z)Lddx; getChunk
	b (II)Z hasChunk
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	a (DDDDLjava/util/function/Predicate;)Lbyo; getNearestPlayer
	v_ ()I getSkyDarken
	z_ ()Lcnm; getBiomeManager
	a (III)Lhe; getUncachedNoiseBiome
	a (Lha;Z)F getShade
	s_ ()Ldwt; getLightEngine
	a (Lgu;ZLbfj;I)Z destroyBlock
	c_ (Lgu;)Lczn; getBlockEntity
	f_ (Lgu;)Z ensureCanWrite
	a (Lgu;Ldcb;II)Z setBlock
	f (Lgu;)V markPosForPostprocessing
	b (Lbfj;)Z addFreshEntity
	a (Lgu;Z)Z removeBlock
	w_ ()Ldds; getWorldBorder
	r_ ()Z isClientSide
	C ()Laif; getLevel
	B_ ()Lhs; registryAccess
	G ()Lcaw; enabledFeatures
	u_ ()Ldyv; getLevelData
	d_ (Lgu;)Lbdv; getCurrentDifficultyAt
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	J ()Ldeb; getChunkSource
	A ()J getSeed
	L ()Lefp; getBlockTicks
	K ()Lefp; getFluidTicks
	t_ ()I getSeaLevel
	y_ ()Lapf; getRandom
	a (Ldhk$a;II)I getHeight
	a (Lbyo;Lgu;Lamg;Lami;FF)V playSound
	a (Lit;DDDDDD)V addParticle
	a (Lbyo;ILgu;I)V levelEvent
	a (Ldgl;Leei;Ldgl$a;)V gameEvent
	x_ ()Ldfk; dimensionType
	a (Lgu;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lgu;Ljava/util/function/Predicate;)Z isFluidAtPosition
	a (Ldfz;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lbfj;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	v ()Ljava/util/List; players
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
	A_ ()J nextSubTickCount
	j (Lgu;)Lefw; lambda$new$1
	k (Lgu;)Lefw; lambda$new$0
	<clinit> ()V <clinit>
ain net/minecraft/server/level/package-info
aio net/minecraft/server/level/progress/ChunkProgressListener
	a (Lclt;)V updateSpawnPos
	a (Lclt;Ldec;)V onStatusChange
	a ()V start
	b ()V stop
aip net/minecraft/server/level/progress/ChunkProgressListenerFactory
	create (I)Laio; create
aiq net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	<init> (I)V <init>
	a (Lclt;)V updateSpawnPos
	a (Lclt;Ldec;)V onStatusChange
	a ()V start
	b ()V stop
	c ()I getProgress
	<clinit> ()V <clinit>
air net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	<init> (Laio;Ljava/util/concurrent/Executor;)V <init>
	a (Laio;Ljava/util/concurrent/Executor;)Lair; createStarted
	a (Lclt;)V updateSpawnPos
	a (Lclt;Ldec;)V onStatusChange
	a ()V start
	b ()V stop
	b (Lclt;Ldec;)V lambda$onStatusChange$1
	b (Lclt;)V lambda$updateSpawnPos$0
ais net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	<init> (I)V <init>
	a (Lclt;)V updateSpawnPos
	a (Lclt;Ldec;)V onStatusChange
	a ()V start
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
	a (II)Ldec; getStatus
ait net/minecraft/server/level/progress/package-info
aiu net/minecraft/server/network/FilteredText
	b raw
	c mask
	a EMPTY
	<init> (Ljava/lang/String;Lsz;)V <init>
	a (Ljava/lang/String;)Laiu; passThrough
	b (Ljava/lang/String;)Laiu; fullyFiltered
	a ()Ljava/lang/String; filtered
	b ()Ljava/lang/String; filteredOrEmpty
	c ()Z isFiltered
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Ljava/lang/String; raw
	e ()Lsz; mask
	<clinit> ()V <clinit>
aiv net/minecraft/server/network/LegacyQueryHandler
	b LOGGER
	a FAKE_PROTOCOL_VERSION
	c serverConnectionListener
	<init> (Laix;)V <init>
	channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
	<clinit> ()V <clinit>
aiw net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	<init> (Lnet/minecraft/server/MinecraftServer;Lsd;)V <init>
	a (Labb;)V handleIntention
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
aix net/minecraft/server/network/ServerConnectionListener
	d LOGGER
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	e server
	c running
	f channels
	g connections
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	a ()Ljava/net/SocketAddress; startMemoryChannel
	b ()V stop
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	e ()Ljava/util/List; getConnections
	a (Lsd;Lsw;)V lambda$tick$2
	f ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
	g ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
	<clinit> ()V <clinit>
aix$1 net/minecraft/server/network/ServerConnectionListener$1
	a this$0
	<init> (Laix;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
aix$2 net/minecraft/server/network/ServerConnectionListener$2
	a this$0
	<init> (Laix;)V <init>
	initChannel (Lio/netty/channel/Channel;)V initChannel
aix$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	c jitter
	d queuedMessages
	<init> (II)V <init>
	channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/util/Timeout;)V onTimeout
	<clinit> ()V <clinit>
aix$a$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	a ctx
	b msg
	<init> (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V <init>
aiy net/minecraft/server/network/ServerGamePacketListenerImpl
	c LOGGER
	d LATENCY_CHECK_INTERVAL
	a MAX_INTERACTION_DISTANCE
	e NO_BLOCK_UPDATES_TO_ACK
	f TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	g CHAT_VALIDATION_FAILED
	h connection
	i server
	b player
	j tickCount
	k ackBlockChangesUpTo
	l keepAliveTime
	m keepAlivePending
	n keepAliveChallenge
	o chatSpamTickCount
	p dropSpamTickCount
	q firstGoodX
	r firstGoodY
	s firstGoodZ
	t lastGoodX
	u lastGoodY
	v lastGoodZ
	w lastVehicle
	x vehicleFirstGoodX
	y vehicleFirstGoodY
	z vehicleFirstGoodZ
	A vehicleLastGoodX
	B vehicleLastGoodY
	C vehicleLastGoodZ
	D awaitingPositionFromClient
	E awaitingTeleport
	F awaitingTeleportTime
	G clientIsFloating
	H aboveGroundTickCount
	I clientVehicleIsFloating
	J aboveGroundVehicleTickCount
	K receivedMovePacketCount
	L knownMovePacketCount
	M lastChatTimeStamp
	N chatSession
	O signedMessageDecoder
	P lastSeenMessages
	Q messageSignatureCache
	R chatMessageChain
	<init> (Lnet/minecraft/server/MinecraftServer;Lsd;Laig;)V <init>
	c ()V tick
	d ()V resetPosition
	a ()Z isAcceptingMessages
	g ()Z isSingleplayerOwner
	b (Lsw;)V disconnect
	a (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Laaf;)V handlePlayerInput
	b (DDDFF)Z containsInvalidValues
	a (D)D clampHorizontal
	b (D)D clampVertical
	a (Lzy;)V handleMoveVehicle
	a (Lbfj;)Z noBlocksAround
	a (Lzd;)V handleAcceptTeleportPacket
	a (Laai;)V handleRecipeBookSeenRecipePacket
	a (Laah;)V handleRecipeBookChangeSettingsPacket
	a (Laal;)V handleSeenAdvancements
	a (Lzm;)V handleCustomCommandSuggestions
	a (Laap;)V handleSetCommandBlock
	a (Laaq;)V handleSetCommandMinecart
	a (Laaa;)V handlePickItem
	a (Laaj;)V handleRenameItem
	a (Laan;)V handleSetBeaconPacket
	a (Laat;)V handleSetStructureBlock
	a (Laas;)V handleSetJigsawBlock
	a (Lzu;)V handleJigsawGenerate
	a (Laam;)V handleSelectTrade
	a (Lzr;)V handleEditBook
	a (Ljava/util/List;I)V updateBookContents
	a (Laiu;Ljava/util/List;I)V signBook
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;Lcfz;)V updateBookPages
	a (Lzs;)V handleEntityTagQuery
	a (Lze;)V handleBlockEntityTagQuery
	a (Lzx;)V handleMovePlayer
	a (Lcmp;Leed;DDD)Z isPlayerCollidingWithAnythingNew
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (Laad;)V handlePlayerAction
	a (Laig;Lcfz;)Z wasBlockPlacementAttempt
	a (Laax;)V handleUseItemOn
	a (Laay;)V handleUseItem
	a (Laaw;)V handleTeleportToEntityPacket
	a (Laak;)V handleResourcePackResponse
	a (Lzz;)V handlePaddleBoat
	a (Laag;)V handlePong
	a (Lsw;)V onDisconnect
	a (I)V ackBlockChangesUpTo
	a (Luo;)V send
	a (Luo;Lsl;)V send
	a (Laao;)V handleSetCarriedItem
	a (Lzi;)V handleChat
	a (Lzh;)V handleChatCommand
	a (Lzh;Ltc;)V performChatCommand
	a (Ltp$a;)V handleMessageDecodeFailure
	a (Lzh;Ltn;Ltc;)Ljava/util/Map; collectSignedArguments
	b (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	a (Ljava/lang/String;Ljava/time/Instant;Ltc$b;)Ljava/util/Optional; tryHandleChat
	a (Ltc$b;)Ljava/util/Optional; unpackAndApplyLastSeen
	a (Ljava/time/Instant;)Z updateChatOrder
	c (Ljava/lang/String;)Z isChatMessageIllegal
	a (Lzi;Ltc;)Ltl; getSignedMessage
	b (Ltl;)V broadcastChatMessage
	h ()V detectRateSpam
	a (Lzg;)V handleChatAck
	a (Laav;)V handleAnimate
	a (Laae;)V handlePlayerCommand
	a (Ltl;)V addPendingMessage
	a (Ltl;Lss$a;)V sendPlayerChatMessage
	a (Lsw;Lss$a;)V sendDisguisedChatMessage
	e ()Ljava/net/SocketAddress; getRemoteAddress
	a (Lzt;)V handleInteract
	a (Lzk;)V handleClientCommand
	a (Lzp;)V handleContainerClose
	a (Lzo;)V handleContainerClick
	a (Laab;)V handlePlaceRecipe
	a (Lzn;)V handleContainerButtonClick
	a (Laar;)V handleSetCreativeModeSlot
	a (Laau;)V handleSignUpdate
	a (Laau;Ljava/util/List;)V updateSignText
	a (Lzv;)V handleKeepAlive
	a (Laac;)V handlePlayerAbilities
	a (Lzl;)V handleClientInformation
	a (Lzq;)V handleCustomPayload
	a (Lzf;)V handleChangeDifficulty
	a (Lzw;)V handleLockDifficulty
	a (Lzj;)V handleChatSessionUpdate
	a (Ltm;)V resetPlayerChatState
	f ()Laig; getPlayer
	a (Ltm;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$resetPlayerChatState$15
	b (Laau;Ljava/util/List;)V lambda$handleSignUpdate$14
	a (Laab;Lcjc;)V lambda$handlePlaceRecipe$13
	a (Ldq;Lds;)Lds; lambda$performChatCommand$12
	a (Lzh;Ljava/util/Optional;)V lambda$handleChatCommand$11
	a (Lzi;Ljava/util/Optional;)V lambda$handleChat$10
	a (Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ltl;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$handleChat$9
	a (Ltl;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Void;)V lambda$handleChat$8
	b (Luo;)Ljava/lang/String; lambda$send$7
	a (Ljava/util/function/UnaryOperator;Laiu;)Lri; lambda$updateBookPages$6
	d (Ljava/lang/String;)Ljava/lang/String; lambda$signBook$5
	a (ILjava/util/List;)V lambda$handleEditBook$4
	b (ILjava/util/List;)V lambda$handleEditBook$3
	a (Lzm;Lcom/mojang/brigadier/suggestion/Suggestions;)V lambda$handleCustomCommandSuggestions$2
	a (Ljava/lang/Object;)Ljava/lang/Object; lambda$filterTextPacket$1
	c (Lsw;)V lambda$disconnect$0
	<clinit> ()V <clinit>
aiy$1 net/minecraft/server/network/ServerGamePacketListenerImpl$1
	a val$level
	b val$target
	c this$0
	<init> (Laiy;Laif;Lbfj;)V <init>
	a (Lbdw;Laiy$a;)V performInteraction
	a (Lbdw;)V onInteraction
	a (Lbdw;Leei;)V onInteraction
	a ()V onAttack
	a (Leei;Laig;Lbfj;Lbdw;)Lbdx; lambda$onInteraction$0
aiy$2 net/minecraft/server/network/ServerGamePacketListenerImpl$2
	a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	b $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	c $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	d $SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
	<clinit> ()V <clinit>
aiy$a net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
	run (Laig;Lbfj;Lbdw;)Lbdx; run
aiz net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a IGNORE_STATUS_REASON
	b server
	c connection
	<init> (Lnet/minecraft/server/MinecraftServer;Lsd;)V <init>
	a (Labb;)V handleIntention
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
	<clinit> ()V <clinit>
aiz$1 net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	a $SwitchMap$net$minecraft$network$ConnectionProtocol
	<clinit> ()V <clinit>
aja net/minecraft/server/network/ServerLoginPacketListenerImpl
	a UNIQUE_THREAD_ID
	b LOGGER
	c MAX_TICKS_BEFORE_LOGIN
	d RANDOM
	e challenge
	f server
	g connection
	h state
	i tick
	j gameProfile
	k serverId
	l delayedAcceptPlayer
	<init> (Lnet/minecraft/server/MinecraftServer;Lsd;)V <init>
	c ()V tick
	a ()Z isAcceptingMessages
	b (Lsw;)V disconnect
	d ()V handleAcceptedLogin
	a (Laig;)V placeNewPlayer
	a (Lsw;)V onDisconnect
	e ()Ljava/lang/String; getUserName
	a (Labm;)V handleHello
	a (Ljava/lang/String;)Z isValidUsername
	a (Labn;)V handleKey
	a (Labl;)V handleCustomQueryPacket
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (I)Z lambda$isValidUsername$1
	f ()V lambda$handleAcceptedLogin$0
	<clinit> ()V <clinit>
aja$1 net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	a val$digest
	b this$0
	<init> (Laja;Ljava/lang/String;Ljava/lang/String;)V <init>
	run ()V run
	a ()Ljava/net/InetAddress; getAddress
aja$a net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	a HELLO
	b KEY
	c AUTHENTICATING
	d NEGOTIATING
	e READY_TO_ACCEPT
	f DELAY_ACCEPT
	g ACCEPTED
	h $VALUES
	values ()[Laja$a; values
	valueOf (Ljava/lang/String;)Laja$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Laja$a; $values
	<clinit> ()V <clinit>
ajb net/minecraft/server/network/ServerPlayerConnection
	f ()Laig; getPlayer
	a (Luo;)V send
ajc net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	b status
	c connection
	d hasRequestedStatus
	<init> (Labt;Lsd;)V <init>
	a (Lsw;)V onDisconnect
	a ()Z isAcceptingMessages
	a (Labw;)V handleStatusRequest
	a (Labv;)V handlePingRequest
	<clinit> ()V <clinit>
ajd net/minecraft/server/network/TextFilter
	a DUMMY
	a ()V join
	b ()V leave
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	<clinit> ()V <clinit>
ajd$1 net/minecraft/server/network/TextFilter$1
	<init> ()V <init>
	a ()V join
	b ()V leave
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
aje net/minecraft/server/network/TextFilterClient
	a LOGGER
	b WORKER_COUNT
	c THREAD_FACTORY
	d DEFAULT_ENDPOINT
	e chatEndpoint
	f chatEncoder
	g joinEndpoint
	h joinEncoder
	i leaveEndpoint
	j leaveEncoder
	k authKey
	l chatIgnoreStrategy
	m workerPool
	<init> (Ljava/net/URL;Laje$c;Ljava/net/URL;Laje$b;Ljava/net/URL;Laje$b;Ljava/lang/String;Laje$a;I)V <init>
	a (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; getEndpoint
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getEndpointFromConfig
	a (Ljava/lang/String;)Laje; createFromConfig
	a (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Laje$b;Ljava/util/concurrent/Executor;)V processJoinOrLeave
	a (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Laje$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; requestMessageProcessing
	a (Ljava/lang/String;Lcom/google/gson/JsonArray;Laje$a;)Lsz; parseMask
	close ()V close
	a (Ljava/io/InputStream;)V drainStream
	a (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; processRequestResponse
	b (Lcom/google/gson/JsonObject;Ljava/net/URL;)V processRequest
	c (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; makeRequest
	a (Lcom/mojang/authlib/GameProfile;)Lajd; createContext
	a (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Laje$a;)Laiu; lambda$requestMessageProcessing$5
	a (Laje$b;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V lambda$processJoinOrLeave$4
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject; lambda$createFromConfig$3
	a (ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject; lambda$createFromConfig$2
	a (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject; lambda$createFromConfig$1
	a (Ljava/lang/Runnable;)Ljava/lang/Thread; lambda$static$0
	<clinit> ()V <clinit>
aje$a net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	a NEVER_IGNORE
	b IGNORE_FULLY_FILTERED
	ignoreOverThreshold (I)Laje$a; ignoreOverThreshold
	select (I)Laje$a; select
	shouldIgnore (Ljava/lang/String;I)Z shouldIgnore
	a (ILjava/lang/String;I)Z lambda$ignoreOverThreshold$2
	a (Ljava/lang/String;I)Z lambda$static$1
	b (Ljava/lang/String;I)Z lambda$static$0
	<clinit> ()V <clinit>
aje$b net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
	encode (Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject; encode
aje$c net/minecraft/server/network/TextFilterClient$MessageEncoder
	encode (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject; encode
aje$d net/minecraft/server/network/TextFilterClient$PlayerContext
	c profile
	d streamExecutor
	b this$0
	<init> (Laje;Lcom/mojang/authlib/GameProfile;)V <init>
	a ()V join
	b ()V leave
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/lang/Throwable;)Ljava/util/List; lambda$processMessageBundle$1
	b (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; lambda$processMessageBundle$0
aje$e net/minecraft/server/network/TextFilterClient$RequestFailedException
	<init> (Ljava/lang/String;)V <init>
ajf net/minecraft/server/network/package-info
ajg net/minecraft/server/package-info
ajh net/minecraft/server/packs/AbstractPackResources
	a LOGGER
	d name
	e isBuiltin
	<init> (Ljava/lang/String;Z)V <init>
	a (Lajx;)Ljava/lang/Object; getMetadataSection
	a (Lajx;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	a ()Ljava/lang/String; packId
	b ()Z isBuiltin
	<clinit> ()V <clinit>
aji net/minecraft/server/packs/BuiltInMetadata
	a EMPTY
	b values
	<init> (Ljava/util/Map;)V <init>
	a (Lajx;)Ljava/lang/Object; get
	a ()Laji; of
	a (Lajx;Ljava/lang/Object;)Laji; of
	a (Lajx;Ljava/lang/Object;Lajx;Ljava/lang/Object;)Laji; of
	<clinit> ()V <clinit>
ajj net/minecraft/server/packs/FeatureFlagsMetadataSection
	b flags
	c CODEC
	a TYPE
	<init> (Lcaw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcaw; flags
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
ajk net/minecraft/server/packs/FilePackResources
	d LOGGER
	a SPLITTER
	e file
	f zipFile
	g failedToLoad
	<init> (Ljava/lang/String;Ljava/io/File;Z)V <init>
	c ()Ljava/util/zip/ZipFile; getOrCreateZipFile
	b (Lajm;Lacq;)Ljava/lang/String; getPathFromLocation
	a ([Ljava/lang/String;)Lakp; getRootResource
	a (Lajm;Lacq;)Lakp; getResource
	a (Ljava/lang/String;)Lakp; getResource
	a (Lajm;)Ljava/util/Set; getNamespaces
	finalize ()V finalize
	close ()V close
	a (Lajm;Ljava/lang/String;Ljava/lang/String;Lajl$a;)V listResources
	<clinit> ()V <clinit>
ajl net/minecraft/server/packs/PackResources
	b METADATA_EXTENSION
	c PACK_META
	a ([Ljava/lang/String;)Lakp; getRootResource
	a (Lajm;Lacq;)Lakp; getResource
	a (Lajm;Ljava/lang/String;Ljava/lang/String;Lajl$a;)V listResources
	a (Lajm;)Ljava/util/Set; getNamespaces
	a (Lajx;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; packId
	b ()Z isBuiltin
	close ()V close
ajl$a net/minecraft/server/packs/PackResources$ResourceOutput
ajm net/minecraft/server/packs/PackType
	a CLIENT_RESOURCES
	b SERVER_DATA
	c directory
	d $VALUES
	values ()[Lajm; values
	valueOf (Ljava/lang/String;)Lajm; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getDirectory
	b ()[Lajm; $values
	<clinit> ()V <clinit>
ajn net/minecraft/server/packs/PathPackResources
	a LOGGER
	d PATH_JOINER
	e root
	<init> (Ljava/lang/String;Ljava/nio/file/Path;Z)V <init>
	a ([Ljava/lang/String;)Lakp; getRootResource
	a (Ljava/nio/file/Path;)Z validatePath
	a (Lajm;Lacq;)Lakp; getResource
	a (Lacq;Ljava/nio/file/Path;)Lakp; getResource
	b (Ljava/nio/file/Path;)Lakp; returnFileIfExists
	a (Lajm;Ljava/lang/String;Ljava/lang/String;Lajl$a;)V listResources
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lajl$a;)V listPath
	a (Lajm;)Ljava/util/Set; getNamespaces
	close ()V close
	a (Ljava/nio/file/Path;Ljava/lang/String;Lajl$a;Ljava/nio/file/Path;)V lambda$listPath$5
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z lambda$listPath$4
	a (Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$listResources$3
	a (Lajm;Ljava/lang/String;Lajl$a;Ljava/util/List;)V lambda$listResources$2
	a (Lacq;Lcom/mojang/serialization/DataResult$PartialResult;)Lakp; lambda$getResource$1
	a (Ljava/nio/file/Path;Ljava/util/List;)Lakp; lambda$getResource$0
	<clinit> ()V <clinit>
ajo net/minecraft/server/packs/VanillaPackResources
	a LOGGER
	d metadata
	e namespaces
	f rootPaths
	g pathsForType
	<init> (Laji;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V <init>
	a ([Ljava/lang/String;)Lakp; getRootResource
	a (Lajm;Lacq;Ljava/util/function/Consumer;)V listRawPaths
	a (Lajm;Ljava/lang/String;Ljava/lang/String;Lajl$a;)V listResources
	a (Lajl$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V getResources
	a (Lajm;Lacq;)Lakp; getResource
	a (Lajm;)Ljava/util/Set; getNamespaces
	a (Lajx;)Ljava/lang/Object; getMetadataSection
	a ()Ljava/lang/String; packId
	b ()Z isBuiltin
	close ()V close
	c ()Lala; asProvider
	a (Lacq;)Ljava/util/Optional; lambda$asProvider$7
	a (Lakp;)Lakv; lambda$asProvider$6
	a (Lacq;Lcom/mojang/serialization/DataResult$PartialResult;)Lakp; lambda$getResource$5
	a (Lacq;Lajm;Ljava/util/List;)Lakp; lambda$getResource$4
	a (Ljava/lang/String;Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$listResources$3
	a (Lajm;Lajl$a;Ljava/lang/String;Ljava/util/List;)V lambda$listResources$2
	b (Lacq;Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$listRawPaths$1
	a (Lacq;Lajm;Ljava/util/function/Consumer;Ljava/util/List;)V lambda$listRawPaths$0
	<clinit> ()V <clinit>
ajp net/minecraft/server/packs/VanillaPackResourcesBuilder
	b LOGGER
	a developmentConfig
	c ROOT_DIR_BY_TYPE
	d rootPaths
	e pathsForType
	f metadata
	g namespaces
	<init> ()V <init>
	a (Ljava/net/URI;)Ljava/nio/file/Path; safeGetPath
	b (Ljava/nio/file/Path;)Z validateDirPath
	c (Ljava/nio/file/Path;)V pushRootPath
	b (Lajm;Ljava/nio/file/Path;)V pushPathForType
	a ()Lajp; pushJarResources
	a (Lajm;Ljava/lang/Class;)Lajp; pushClasspathResources
	b ()Lajp; applyDevelopmentConfig
	a (Ljava/nio/file/Path;)Lajp; pushUniversalPath
	a (Lajm;Ljava/nio/file/Path;)Lajp; pushAssetPath
	a (Laji;)Lajp; setMetadata
	a ([Ljava/lang/String;)Lajp; exposeNamespace
	c ()Lajo; build
	a (Ljava/util/Collection;)Ljava/util/List; copyAndReverse
	c (Lajm;Ljava/nio/file/Path;)V lambda$pushJarResources$3
	a (Lajm;)Ljava/util/Set; lambda$pushPathForType$2
	d ()Lcom/google/common/collect/ImmutableMap; lambda$static$1
	a (Lajp;)V lambda$static$0
	<clinit> ()V <clinit>
ajq net/minecraft/server/packs/linkfs/DummyFileAttributes
	a EPOCH
	<init> ()V <init>
	lastModifiedTime ()Ljava/nio/file/attribute/FileTime; lastModifiedTime
	lastAccessTime ()Ljava/nio/file/attribute/FileTime; lastAccessTime
	creationTime ()Ljava/nio/file/attribute/FileTime; creationTime
	isSymbolicLink ()Z isSymbolicLink
	isOther ()Z isOther
	size ()J size
	fileKey ()Ljava/lang/Object; fileKey
	<clinit> ()V <clinit>
ajr net/minecraft/server/packs/linkfs/LinkFSFileStore
	a name
	<init> (Ljava/lang/String;)V <init>
	name ()Ljava/lang/String; name
	type ()Ljava/lang/String; type
	isReadOnly ()Z isReadOnly
	getTotalSpace ()J getTotalSpace
	getUsableSpace ()J getUsableSpace
	getUnallocatedSpace ()J getUnallocatedSpace
	supportsFileAttributeView (Ljava/lang/Class;)Z supportsFileAttributeView
	supportsFileAttributeView (Ljava/lang/String;)Z supportsFileAttributeView
	getFileStoreAttributeView (Ljava/lang/Class;)Ljava/nio/file/attribute/FileStoreAttributeView; getFileStoreAttributeView
	getAttribute (Ljava/lang/String;)Ljava/lang/Object; getAttribute
ajs net/minecraft/server/packs/linkfs/LinkFSPath
	a DIRECTORY_ATTRIBUTES
	b FILE_ATTRIBUTES
	c PATH_COMPARATOR
	d name
	e fileSystem
	f parent
	g pathToRoot
	h pathString
	i pathContents
	<init> (Laju;Ljava/lang/String;Lajs;Lajv;)V <init>
	a (Lajs;Ljava/lang/String;)Lajs; createRelativePath
	a ()Laju; getFileSystem
	isAbsolute ()Z isAbsolute
	toFile ()Ljava/io/File; toFile
	b ()Lajs; getRoot
	c ()Lajs; getFileName
	d ()Lajs; getParent
	getNameCount ()I getNameCount
	l ()Ljava/util/List; pathToRoot
	a (I)Lajs; getName
	a (II)Lajs; subpath
	startsWith (Ljava/nio/file/Path;)Z startsWith
	endsWith (Ljava/nio/file/Path;)Z endsWith
	e ()Lajs; normalize
	a (Ljava/nio/file/Path;)Lajs; resolve
	a (Ljava/util/List;)Lajs; resolve
	a (Ljava/lang/String;)Lajs; resolveName
	a (Lajv;)Z isRelativeOrMissing
	b (Ljava/nio/file/Path;)Lajs; relativize
	toUri ()Ljava/net/URI; toUri
	f ()Lajs; toAbsolutePath
	a ([Ljava/nio/file/LinkOption;)Lajs; toRealPath
	register (Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;[Ljava/nio/file/WatchEvent$Modifier;)Ljava/nio/file/WatchKey; register
	compareTo (Ljava/nio/file/Path;)I compareTo
	equals (Ljava/lang/Object;)Z equals
	m ()Z hasRealContents
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	n ()Ljava/lang/String; pathToString
	c (Ljava/nio/file/Path;)Lajs; toLinkPath
	g ()Z exists
	h ()Ljava/nio/file/Path; getTargetPath
	i ()Lajv$a; getDirectoryContents
	j ()Ljava/nio/file/attribute/BasicFileAttributeView; getBasicAttributeView
	k ()Ljava/nio/file/attribute/BasicFileAttributes; getBasicAttributes
	toRealPath ([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path; toRealPath
	toAbsolutePath ()Ljava/nio/file/Path; toAbsolutePath
	relativize (Ljava/nio/file/Path;)Ljava/nio/file/Path; relativize
	resolve (Ljava/nio/file/Path;)Ljava/nio/file/Path; resolve
	normalize ()Ljava/nio/file/Path; normalize
	subpath (II)Ljava/nio/file/Path; subpath
	getName (I)Ljava/nio/file/Path; getName
	getParent ()Ljava/nio/file/Path; getParent
	getFileName ()Ljava/nio/file/Path; getFileName
	getRoot ()Ljava/nio/file/Path; getRoot
	getFileSystem ()Ljava/nio/file/FileSystem; getFileSystem
	compareTo (Ljava/lang/Object;)I compareTo
	<clinit> ()V <clinit>
ajs$1 net/minecraft/server/packs/linkfs/LinkFSPath$1
	<init> ()V <init>
	isRegularFile ()Z isRegularFile
	isDirectory ()Z isDirectory
ajs$2 net/minecraft/server/packs/linkfs/LinkFSPath$2
	<init> ()V <init>
	isRegularFile ()Z isRegularFile
	isDirectory ()Z isDirectory
ajs$3 net/minecraft/server/packs/linkfs/LinkFSPath$3
	a this$0
	<init> (Lajs;)V <init>
	name ()Ljava/lang/String; name
	readAttributes ()Ljava/nio/file/attribute/BasicFileAttributes; readAttributes
	setTimes (Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;)V setTimes
ajt net/minecraft/server/packs/linkfs/LinkFSProvider
	a SCHEME
	<init> ()V <init>
	getScheme ()Ljava/lang/String; getScheme
	newFileSystem (Ljava/net/URI;Ljava/util/Map;)Ljava/nio/file/FileSystem; newFileSystem
	getFileSystem (Ljava/net/URI;)Ljava/nio/file/FileSystem; getFileSystem
	getPath (Ljava/net/URI;)Ljava/nio/file/Path; getPath
	newByteChannel (Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel; newByteChannel
	newDirectoryStream (Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream; newDirectoryStream
	createDirectory (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V createDirectory
	delete (Ljava/nio/file/Path;)V delete
	copy (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V copy
	move (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V move
	isSameFile (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z isSameFile
	isHidden (Ljava/nio/file/Path;)Z isHidden
	getFileStore (Ljava/nio/file/Path;)Ljava/nio/file/FileStore; getFileStore
	checkAccess (Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V checkAccess
	getFileAttributeView (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView; getFileAttributeView
	readAttributes (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes; readAttributes
	readAttributes (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/util/Map; readAttributes
	setAttribute (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)V setAttribute
	a (Ljava/nio/file/Path;)Lajs; toLinkPath
ajt$1 net/minecraft/server/packs/linkfs/LinkFSProvider$1
	a val$directoryContents
	b val$filter
	c this$0
	<init> (Lajt;Lajv$a;Ljava/nio/file/DirectoryStream$Filter;)V <init>
	iterator ()Ljava/util/Iterator; iterator
	close ()V close
	a (Lajs;)Ljava/nio/file/Path; lambda$iterator$1
	a (Ljava/nio/file/DirectoryStream$Filter;Lajs;)Z lambda$iterator$0
ajt$2 net/minecraft/server/packs/linkfs/LinkFSProvider$2
	a $SwitchMap$java$nio$file$AccessMode
	<clinit> ()V <clinit>
aju net/minecraft/server/packs/linkfs/LinkFileSystem
	b VIEWS
	a PATH_SEPARATOR
	c PATH_SPLITTER
	d store
	e provider
	f root
	<init> (Ljava/lang/String;Laju$b;)V <init>
	a (Laju$b;Laju;Ljava/lang/String;Lajs;)Lajs; buildPath
	provider ()Ljava/nio/file/spi/FileSystemProvider; provider
	close ()V close
	isOpen ()Z isOpen
	isReadOnly ()Z isReadOnly
	getSeparator ()Ljava/lang/String; getSeparator
	getRootDirectories ()Ljava/lang/Iterable; getRootDirectories
	getFileStores ()Ljava/lang/Iterable; getFileStores
	supportedFileAttributeViews ()Ljava/util/Set; supportedFileAttributeViews
	getPath (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; getPath
	getPathMatcher (Ljava/lang/String;)Ljava/nio/file/PathMatcher; getPathMatcher
	getUserPrincipalLookupService ()Ljava/nio/file/attribute/UserPrincipalLookupService; getUserPrincipalLookupService
	newWatchService ()Ljava/nio/file/WatchService; newWatchService
	a ()Ljava/nio/file/FileStore; store
	b ()Lajs; rootPath
	c ()Laju$a; builder
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Laju;Lajs;Ljava/lang/String;Laju$b;)V lambda$buildPath$1
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Laju;Lajs;Ljava/lang/String;Ljava/nio/file/Path;)V lambda$buildPath$0
	<clinit> ()V <clinit>
aju$a net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	a root
	<init> ()V <init>
	a (Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Laju$a; put
	a (Ljava/util/List;Ljava/nio/file/Path;)Laju$a; put
	a (Ljava/lang/String;)Ljava/nio/file/FileSystem; build
	b (Ljava/lang/String;)Laju$b; lambda$put$0
aju$b net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	a children
	b files
	<init> ()V <init>
	<init> (Ljava/util/Map;Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; children
	b ()Ljava/util/Map; files
ajv net/minecraft/server/packs/linkfs/PathContents
	a MISSING
	b RELATIVE
	<clinit> ()V <clinit>
ajv$1 net/minecraft/server/packs/linkfs/PathContents$1
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
ajv$2 net/minecraft/server/packs/linkfs/PathContents$2
	<init> ()V <init>
	toString ()Ljava/lang/String; toString
ajv$a net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	c children
	<init> (Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; children
ajv$b net/minecraft/server/packs/linkfs/PathContents$FileContents
	c contents
	<init> (Ljava/nio/file/Path;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/nio/file/Path; contents
ajw net/minecraft/server/packs/linkfs/package-info
ajx net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
ajy net/minecraft/server/packs/metadata/MetadataSectionType
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lajy; fromCodec
ajy$1 net/minecraft/server/packs/metadata/MetadataSectionType$1
	a val$name
	b val$codec
	<init> (Ljava/lang/String;Lcom/mojang/serialization/Codec;)V <init>
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Ljava/lang/String;)V lambda$toJson$1
	b (Ljava/lang/String;)V lambda$fromJson$0
ajz net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a TYPE
	b description
	c packFormat
	<init> (Lsw;I)V <init>
	a ()Lsw; getDescription
	b ()I getPackFormat
	<clinit> ()V <clinit>
aka net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;)Lajz; fromJson
	a (Lajz;)Lcom/google/gson/JsonObject; toJson
	a ()Ljava/lang/String; getMetadataSectionName
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
akb net/minecraft/server/packs/metadata/pack/package-info
akc net/minecraft/server/packs/metadata/package-info
akd net/minecraft/server/packs/package-info
ake net/minecraft/server/packs/repository/BuiltInPackSource
	b LOGGER
	a VANILLA_ID
	c packType
	d vanillaPack
	e packDir
	<init> (Lajm;Lajo;Lacq;)V <init>
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Lajl;)Lakg; createVanillaPack
	a (Ljava/lang/String;)Lsw; getPackTitle
	a ()Lajo; getVanillaPack
	b (Ljava/util/function/Consumer;)V listBundledPacks
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V discoverPacksInPath
	a (Ljava/nio/file/Path;)Ljava/lang/String; pathToId
	a (Ljava/lang/String;Lakg$c;Lsw;)Lakg; createBuiltinPack
	a (Ljava/util/function/BiConsumer;Ljava/nio/file/Path;Lakg$c;)V lambda$discoverPacksInPath$3
	a (Lakg$c;Ljava/lang/String;)Lakg; lambda$discoverPacksInPath$2
	a (Ljava/util/function/BiConsumer;Ljava/nio/file/Path;)V lambda$populatePackList$1
	a (Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;)V lambda$listBundledPacks$0
	<clinit> ()V <clinit>
akf net/minecraft/server/packs/repository/FolderRepositorySource
	a LOGGER
	b folder
	c packType
	d packSource
	<init> (Ljava/nio/file/Path;Lajm;Lakj;)V <init>
	a (Ljava/nio/file/Path;)Ljava/lang/String; nameFromPath
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Ljava/nio/file/Path;ZLjava/util/function/BiConsumer;)V discoverPacks
	a (Ljava/nio/file/Path;Z)Lakg$c; detectPackResources
	a (Ljava/io/File;ZLjava/lang/String;)Lajl; lambda$detectPackResources$2
	a (Ljava/nio/file/Path;ZLjava/lang/String;)Lajl; lambda$detectPackResources$1
	a (Ljava/util/function/Consumer;Ljava/nio/file/Path;Lakg$c;)V lambda$loadPacks$0
	<clinit> ()V <clinit>
akg net/minecraft/server/packs/repository/Pack
	a LOGGER
	b id
	c resources
	d title
	e description
	f compatibility
	g requestedFeatures
	h defaultPosition
	i required
	j fixedPosition
	k packSource
	a (Ljava/lang/String;Lsw;ZLakg$c;Lajm;Lakg$b;Lakj;)Lakg; readMetaAndCreate
	a (Ljava/lang/String;Lsw;ZLakg$c;Lakg$a;Lajm;Lakg$b;ZLakj;)Lakg; create
	<init> (Ljava/lang/String;ZLakg$c;Lsw;Lakg$a;Lakh;Lakg$b;ZLakj;)V <init>
	a (Ljava/lang/String;Lakg$c;)Lakg$a; readPackInfo
	a ()Lsw; getTitle
	b ()Lsw; getDescription
	a (Z)Lsw; getChatLink
	c ()Lakh; getCompatibility
	d ()Lcaw; getRequestedFeatures
	e ()Lajl; open
	f ()Ljava/lang/String; getId
	g ()Z isRequired
	h ()Z isFixedPosition
	i ()Lakg$b; getDefaultPosition
	j ()Lakj; getPackSource
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (ZLts;)Lts; lambda$getChatLink$0
	<clinit> ()V <clinit>
akg$a net/minecraft/server/packs/repository/Pack$Info
	a description
	b format
	c requestedFeatures
	<init> (Lsw;ILcaw;)V <init>
	a (Lajm;)Lakh; compatibility
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; description
	b ()I format
	c ()Lcaw; requestedFeatures
akg$b net/minecraft/server/packs/repository/Pack$Position
	a TOP
	b BOTTOM
	c $VALUES
	values ()[Lakg$b; values
	valueOf (Ljava/lang/String;)Lakg$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
	a ()Lakg$b; opposite
	b ()[Lakg$b; $values
	<clinit> ()V <clinit>
akg$c net/minecraft/server/packs/repository/Pack$ResourcesSupplier
	open (Ljava/lang/String;)Lajl; open
akh net/minecraft/server/packs/repository/PackCompatibility
	a TOO_OLD
	b TOO_NEW
	c COMPATIBLE
	d description
	e confirmation
	f $VALUES
	values ()[Lakh; values
	valueOf (Ljava/lang/String;)Lakh; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Z isCompatible
	a (ILajm;)Lakh; forFormat
	b ()Lsw; getDescription
	c ()Lsw; getConfirmation
	d ()[Lakh; $values
	<clinit> ()V <clinit>
aki net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	<init> ([Lakk;)V <init>
	a ()V reload
	h ()Ljava/util/Map; discoverAvailable
	a (Ljava/util/Collection;)V setSelected
	a (Ljava/lang/String;)Z addPack
	b (Ljava/lang/String;)Z removePack
	b (Ljava/util/Collection;)Ljava/util/List; rebuildSelected
	c (Ljava/util/Collection;)Ljava/util/stream/Stream; getAvailablePacks
	b ()Ljava/util/Collection; getAvailableIds
	c ()Ljava/util/Collection; getAvailablePacks
	d ()Ljava/util/Collection; getSelectedIds
	e ()Lcaw; getRequestedFeatureFlags
	f ()Ljava/util/Collection; getSelectedPacks
	c (Ljava/lang/String;)Lakg; getPack
	d (Ljava/lang/String;)Z isAvailable
	g ()Ljava/util/List; openAllSelected
	a (Ljava/util/Map;Lakg;)V lambda$discoverAvailable$0
akj net/minecraft/server/packs/repository/PackSource
	a NO_DECORATION
	b DEFAULT
	c BUILT_IN
	d FEATURE
	e WORLD
	f SERVER
	a (Lsw;)Lsw; decorate
	a ()Z shouldAddAutomatically
	a (Ljava/util/function/UnaryOperator;Z)Lakj; create
	a (Ljava/lang/String;)Ljava/util/function/UnaryOperator; decorateWithSource
	a (Lsw;Lsw;)Lsw; lambda$decorateWithSource$0
	<clinit> ()V <clinit>
akj$1 net/minecraft/server/packs/repository/PackSource$1
	g val$decorator
	h val$addAutomatically
	<init> (Ljava/util/function/UnaryOperator;Z)V <init>
	a (Lsw;)Lsw; decorate
	a ()Z shouldAddAutomatically
akk net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/function/Consumer;)V loadPacks
akl net/minecraft/server/packs/repository/ServerPacksSource
	b VERSION_METADATA_SECTION
	c FEATURE_FLAGS_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	f PACKS_DIR
	<init> ()V <init>
	b ()Lajo; createVanillaPackSource
	a (Ljava/lang/String;)Lsw; getPackTitle
	a (Lajl;)Lakg; createVanillaPack
	a (Ljava/lang/String;Lakg$c;Lsw;)Lakg; createBuiltinPack
	a (Ljava/nio/file/Path;)Laki; createPackRepository
	a (Ldyy$c;)Laki; createPackRepository
	a (Lajl;Ljava/lang/String;)Lajl; lambda$createVanillaPack$0
	<clinit> ()V <clinit>
akm net/minecraft/server/packs/repository/package-info
akn net/minecraft/server/packs/resources/CloseableResourceManager
	close ()V close
ako net/minecraft/server/packs/resources/FallbackResourceManager
	b LOGGER
	a fallbacks
	c type
	d namespace
	<init> (Lajm;Ljava/lang/String;)V <init>
	a (Lajl;)V push
	a (Lajl;Ljava/util/function/Predicate;)V push
	a (Ljava/lang/String;Ljava/util/function/Predicate;)V pushFilterOnly
	a (Ljava/lang/String;Lajl;Ljava/util/function/Predicate;)V pushInternal
	a ()Ljava/util/Set; getNamespaces
	getResource (Lacq;)Ljava/util/Optional; getResource
	a (Lajl;Lacq;Lakp;Lakp;)Lakv; createResource
	a (Lacq;Lajl;Lakp;)Lakp; wrapForDebug
	a (Lacq;)Ljava/util/List; getResourceStack
	b (Lacq;)Z isMetadata
	c (Lacq;)Lacq; getResourceLocationFromMetadata
	d (Lacq;)Lacq; getMetadataLocation
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	a (Lacq;I)Lakp; createStackMetadataFinder
	a (Lakp;)Lakp; convertToMetadata
	b (Lakp;)Lakz; parseMetadata
	a (Lako$d;Ljava/util/Map;)V applyPackFiltersToExistingResources
	a (Lako$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V listPackResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	b ()Ljava/util/stream/Stream; listPacks
	a (Lako$d;)Lajl; lambda$listPacks$7
	a (Ljava/util/function/Predicate;Ljava/util/Map;Lajl;Lacq;Lakp;)V lambda$listPackResources$6
	c (Lakp;)Lakz; lambda$convertToMetadata$5
	b (Lacq;I)Lakz; lambda$createStackMetadataFinder$4
	a (Ljava/util/Map;Ljava/util/Map;Lacq;Lako$a;)V lambda$listResources$3
	a (Ljava/util/function/Predicate;Ljava/util/Map;Lajl;ILjava/util/Map;Lacq;Lakp;)V lambda$listResources$2
	a (Lajl;Lacq;)Lakz; lambda$getResourceStack$1
	a (Lakp;Lacq;Lajl;)Ljava/io/InputStream; lambda$wrapForDebug$0
	<clinit> ()V <clinit>
ako$a net/minecraft/server/packs/resources/FallbackResourceManager$1ResourceWithSourceAndIndex
	a packResources
	b resource
	c packIndex
	<init> (Lajl;Lakp;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lajl; packResources
	b ()Lakp; resource
	c ()I packIndex
ako$b net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	a fileLocation
	b metadataLocation
	c fileSources
	d metaSources
	<init> (Lacq;)V <init>
	<init> (Lacq;Lacq;Ljava/util/List;Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; fileLocation
	b ()Lacq; metadataLocation
	c ()Ljava/util/List; fileSources
	d ()Ljava/util/Map; metaSources
ako$c net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
	<init> (Ljava/io/InputStream;Lacq;Ljava/lang/String;)V <init>
	close ()V close
	finalize ()V finalize
	a (Ljava/lang/Exception;Lacq;Ljava/lang/String;)Ljava/lang/String; lambda$new$0
ako$d net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	a name
	b resources
	c filter
	<init> (Ljava/lang/String;Lajl;Ljava/util/function/Predicate;)V <init>
	a (Ljava/util/Collection;)V filterAll
	a (Lacq;)Z isFiltered
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	b ()Lajl; resources
	c ()Ljava/util/function/Predicate; filter
ako$e net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	a source
	b resource
	<init> (Lajl;Lakp;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lajl; source
	b ()Lakp; resource
akp net/minecraft/server/packs/resources/IoSupplier
	create (Ljava/nio/file/Path;)Lakp; create
	create (Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Lakp; create
	get ()Ljava/lang/Object; get
	a (Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream; lambda$create$1
	a (Ljava/nio/file/Path;)Ljava/io/InputStream; lambda$create$0
akq net/minecraft/server/packs/resources/MultiPackResourceManager
	a LOGGER
	b namespacedManagers
	c packs
	<init> (Lajm;Ljava/util/List;)V <init>
	a (Lajl;)Lakw; getPackFilterSection
	a ()Ljava/util/Set; getNamespaces
	getResource (Lacq;)Ljava/util/Optional; getResource
	a (Lacq;)Ljava/util/List; getResourceStack
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	a (Ljava/lang/String;)V checkTrailingDirectoryPath
	b ()Ljava/util/stream/Stream; listPacks
	close ()V close
	a (Lakw;Lacq;)Z lambda$new$1
	a (Lajm;Lajl;)Ljava/util/stream/Stream; lambda$new$0
	<clinit> ()V <clinit>
akr net/minecraft/server/packs/resources/PreparableReloadListener
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	c ()Ljava/lang/String; getName
akr$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
aks net/minecraft/server/packs/resources/ProfiledReloadInstance
	c LOGGER
	d total
	<init> (Lakx;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljava/util/List;)Ljava/util/List; finish
	a (Ljava/util/concurrent/Executor;Lakr$a;Lakx;Lakr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$new$7
	a (Lakr;Lbag;Lbag;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Laks$a; lambda$new$6
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$new$5
	a (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$new$4
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$new$3
	b (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$new$2
	e ()I lambda$new$1
	f ()I lambda$new$0
	<clinit> ()V <clinit>
aks$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
	<init> (Ljava/lang/String;Lbam;Lbam;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V <init>
akt net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isDone
	d ()V checkExceptions
aku net/minecraft/server/packs/resources/ReloadableResourceManager
	a LOGGER
	b resources
	c listeners
	d type
	<init> (Lajm;)V <init>
	close ()V close
	a (Lakr;)V registerReloadListener
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lakt; createReload
	getResource (Lacq;)Ljava/util/Optional; getResource
	a ()Ljava/util/Set; getNamespaces
	a (Lacq;)Ljava/util/List; getResourceStack
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	b ()Ljava/util/stream/Stream; listPacks
	a (Ljava/util/List;)Ljava/lang/Object; lambda$createReload$0
	<clinit> ()V <clinit>
akv net/minecraft/server/packs/resources/Resource
	a source
	b streamSupplier
	c metadataSupplier
	d cachedMetadata
	<init> (Lajl;Lakp;Lakp;)V <init>
	<init> (Lajl;Lakp;)V <init>
	a ()Lajl; source
	b ()Ljava/lang/String; sourcePackId
	c ()Z isBuiltin
	d ()Ljava/io/InputStream; open
	e ()Ljava/io/BufferedReader; openAsReader
	f ()Lakz; metadata
akw net/minecraft/server/packs/resources/ResourceFilterSection
	b CODEC
	a TYPE
	c blockList
	<init> (Ljava/util/List;)V <init>
	a (Ljava/lang/String;)Z isNamespaceFiltered
	b (Ljava/lang/String;)Z isPathFiltered
	a (Ljava/lang/String;Lapg;)Z lambda$isPathFiltered$3
	b (Ljava/lang/String;Lapg;)Z lambda$isNamespaceFiltered$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lakw;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
akx net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Lacq;)Ljava/util/List; getResourceStack
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	b ()Ljava/util/stream/Stream; listPacks
akx$a net/minecraft/server/packs/resources/ResourceManager$Empty
	a INSTANCE
	b $VALUES
	values ()[Lakx$a; values
	valueOf (Ljava/lang/String;)Lakx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/util/Set; getNamespaces
	getResource (Lacq;)Ljava/util/Optional; getResource
	a (Lacq;)Ljava/util/List; getResourceStack
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	b ()Ljava/util/stream/Stream; listPacks
	c ()[Lakx$a; $values
	<clinit> ()V <clinit>
aky net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lakx;)V onResourceManagerReload
	a (Lban;Lakx;)V lambda$reload$0
akz net/minecraft/server/packs/resources/ResourceMetadata
	a EMPTY
	b EMPTY_SUPPLIER
	a (Ljava/io/InputStream;)Lakz; fromJsonStream
	a (Lajx;)Ljava/util/Optional; getSection
	a ()Lakz; lambda$static$0
	<clinit> ()V <clinit>
akz$1 net/minecraft/server/packs/resources/ResourceMetadata$1
	<init> ()V <init>
	a (Lajx;)Ljava/util/Optional; getSection
akz$2 net/minecraft/server/packs/resources/ResourceMetadata$2
	c val$metadata
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a (Lajx;)Ljava/util/Optional; getSection
ala net/minecraft/server/packs/resources/ResourceProvider
	getResource (Lacq;)Ljava/util/Optional; getResource
	getResourceOrThrow (Lacq;)Lakv; getResourceOrThrow
	open (Lacq;)Ljava/io/InputStream; open
	openAsReader (Lacq;)Ljava/io/BufferedReader; openAsReader
	fromMap (Ljava/util/Map;)Lala; fromMap
	a (Ljava/util/Map;Lacq;)Ljava/util/Optional; lambda$fromMap$1
	b (Lacq;)Ljava/io/FileNotFoundException; lambda$getResourceOrThrow$0
alb net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b gson
	c directory
	<init> (Lcom/google/gson/Gson;Ljava/lang/String;)V <init>
	a (Lakx;Lban;)Ljava/util/Map; prepare
	a (Lakx;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V scanDirectory
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	<clinit> ()V <clinit>
alc net/minecraft/server/packs/resources/SimplePreparableReloadListener
	<init> ()V <init>
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lakx;Lban;)Ljava/lang/Object; prepare
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	a (Lakx;Lban;Ljava/lang/Object;)V lambda$reload$1
	a (Lakx;Lban;)Ljava/lang/Object; lambda$reload$0
ald net/minecraft/server/packs/resources/SimpleReloadInstance
	c PREPARATION_PROGRESS_WEIGHT
	d EXTRA_RELOAD_PROGRESS_WEIGHT
	e LISTENER_PROGRESS_WEIGHT
	a allPreparations
	b allDone
	f preparingListeners
	g listenerCount
	h startedReloads
	i finishedReloads
	j startedTaskCounter
	k doneTaskCounter
	a (Lakx;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lald; of
	<init> (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lakx;Ljava/util/List;Lald$a;Ljava/util/concurrent/CompletableFuture;)V <init>
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	a (Lakx;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lakt; create
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$4
	a (Ljava/lang/Runnable;)V lambda$new$3
	b (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$2
	b (Ljava/lang/Runnable;)V lambda$new$1
	a (Ljava/util/concurrent/Executor;Lakr$a;Lakx;Lakr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; lambda$of$0
ald$1 net/minecraft/server/packs/resources/SimpleReloadInstance$1
	a val$mainThreadExecutor
	b val$listener
	c val$previousTask
	d this$0
	<init> (Lald;Ljava/util/concurrent/Executor;Lakr;Ljava/util/concurrent/CompletableFuture;)V <init>
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
	a (Ljava/lang/Object;Lapz;Ljava/lang/Object;)Ljava/lang/Object; lambda$wait$1
	a (Lakr;)V lambda$wait$0
ald$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	create (Lakr$a;Lakx;Lakr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; create
ale net/minecraft/server/packs/resources/package-info
alf net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b EXPIRES_NEVER
	c created
	d source
	e expires
	f reason
	<init> (Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	<init> (Ljava/lang/Object;Lcom/google/gson/JsonObject;)V <init>
	a ()Ljava/util/Date; getCreated
	b ()Ljava/lang/String; getSource
	c ()Ljava/util/Date; getExpires
	d ()Ljava/lang/String; getReason
	e ()Lsw; getDisplayName
	f ()Z hasExpired
	a (Lcom/google/gson/JsonObject;)V serialize
	<clinit> ()V <clinit>
alg net/minecraft/server/players/GameProfileCache
	a LOGGER
	b GAMEPROFILES_MRU_LIMIT
	c GAMEPROFILES_EXPIRATION_MONTHS
	d usesAuthentication
	e profilesByName
	f profilesByUUID
	g requests
	h profileRepository
	i gson
	j file
	k operationCount
	l executor
	<init> (Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V <init>
	a (Lalg$a;)V safeAdd
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; lookupGameProfile
	a (Z)V setUsesAuthentication
	d ()Z usesAuthentication
	a (Lcom/mojang/authlib/GameProfile;)V add
	e ()J getNextOperation
	a (Ljava/lang/String;)Ljava/util/Optional; get
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V getAsync
	a (Ljava/util/UUID;)Ljava/util/Optional; get
	a (Ljava/util/concurrent/Executor;)V setExecutor
	a ()V clearExecutor
	f ()Ljava/text/DateFormat; createDateFormat
	b ()Ljava/util/List; load
	c ()V save
	a (I)Ljava/util/stream/Stream; getTopMRUProfiles
	a (Lalg$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; writeGameProfile
	a (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; readGameProfile
	a (Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Lalg$a;)V lambda$save$5
	a (Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V lambda$load$4
	a (Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V lambda$getAsync$3
	a (Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V lambda$getAsync$2
	b (Ljava/lang/String;)Ljava/util/Optional; lambda$getAsync$1
	b (Ljava/util/function/Consumer;Ljava/util/Optional;Ljava/lang/Throwable;)V lambda$getAsync$0
	<clinit> ()V <clinit>
alg$1 net/minecraft/server/players/GameProfileCache$1
	a val$result
	<init> (Ljava/util/concurrent/atomic/AtomicReference;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
alg$a net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a profile
	b expirationDate
	c lastAccess
	<init> (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V <init>
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()Ljava/util/Date; getExpirationDate
	a (J)V setLastAccess
	c ()J getLastAccess
alh net/minecraft/server/players/IpBanList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lalo; createEntry
	a (Ljava/net/SocketAddress;)Z isBanned
	a (Ljava/lang/String;)Z isBanned
	b (Ljava/net/SocketAddress;)Lali; get
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
ali net/minecraft/server/players/IpBanListEntry
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	e ()Lsw; getDisplayName
	<init> (Lcom/google/gson/JsonObject;)V <init>
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	a (Lcom/google/gson/JsonObject;)V serialize
alj net/minecraft/server/players/OldUsersConverter
	e LOGGER
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	<init> ()V <init>
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; convertMobOwnerIfNecessary
	a (Lahe;)Z convertPlayers
	a (Ljava/io/File;)V ensureDirectoryExists
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	a ()Z areOldUserlistsRemoved
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
	b (Ljava/io/File;)V renameOldFile
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	a (I)[Ljava/lang/String; lambda$lookupPlayers$1
	a (Ljava/lang/String;)Z lambda$lookupPlayers$0
	<clinit> ()V <clinit>
alj$1 net/minecraft/server/players/OldUsersConverter$1
	a val$server
	b val$userMap
	c val$bans
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/Map;Lalq;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
alj$2 net/minecraft/server/players/OldUsersConverter$2
	a val$server
	b val$opsList
	<init> (Lnet/minecraft/server/MinecraftServer;Lall;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
alj$3 net/minecraft/server/players/OldUsersConverter$3
	a val$server
	b val$whitelist
	<init> (Lnet/minecraft/server/MinecraftServer;Lals;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
alj$4 net/minecraft/server/players/OldUsersConverter$4
	a val$server
	b val$profiles
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/util/List;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
alj$5 net/minecraft/server/players/OldUsersConverter$5
	a val$server
	b val$worldNewPlayerDirectory
	c val$unknownPlayerDirectory
	d val$worldPlayerDirectory
	e val$names
	<init> (Lahe;Ljava/io/File;Ljava/io/File;Ljava/io/File;[Ljava/lang/String;)V <init>
	onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
	onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
	a (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V movePlayerFile
	a (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getFileNameForProfile
alj$a net/minecraft/server/players/OldUsersConverter$ConversionError
	<init> (Ljava/lang/String;Ljava/lang/Throwable;)V <init>
	<init> (Ljava/lang/String;)V <init>
alk net/minecraft/server/players/PlayerList
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	f CHAT_FILTERED_FULL
	a LOGGER
	h SEND_PLAYER_INFO_INTERVAL
	i BAN_DATE_FORMAT
	j server
	k players
	l playersByUUID
	m bans
	n ipBans
	o ops
	p whitelist
	q stats
	r advancements
	s playerIo
	t doWhiteList
	u registries
	v synchronizedRegistries
	g maxPlayers
	w viewDistance
	x simulationDistance
	y allowCheatsForAllPlayers
	z ALLOW_LOGOUTIVATOR
	A sendAllPlayerInfoIn
	<init> (Lnet/minecraft/server/MinecraftServer;Lhl;Ldzb;I)V <init>
	a (Lsd;Laig;)V placeNewPlayer
	a (Ladg;Laig;)V updateEntireScoreboard
	a (Laif;)V addWorldborderListener
	a (Laig;)Lqr; load
	b (Laig;)V save
	c (Laig;)V remove
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lsw; canPlayerLogin
	e (Lcom/mojang/authlib/GameProfile;)Laig; getPlayerForLogin
	a (Laig;Z)Laig; respawn
	d (Laig;)V sendPlayerPermissionLevel
	d ()V tick
	a (Luo;)V broadcastAll
	a (Luo;Lacp;)V broadcastAll
	a (Lbyo;Lsw;)V broadcastSystemToTeam
	b (Lbyo;Lsw;)V broadcastSystemToAllExceptTeam
	e ()[Ljava/lang/String; getPlayerNamesArray
	f ()Lalq; getBans
	g ()Lalh; getIpBans
	a (Lcom/mojang/authlib/GameProfile;)V op
	b (Lcom/mojang/authlib/GameProfile;)V deop
	a (Laig;I)V sendPlayerPermissionLevel
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	f (Lcom/mojang/authlib/GameProfile;)Z isOp
	a (Ljava/lang/String;)Laig; getPlayerByName
	a (Lbyo;DDDDLacp;Luo;)V broadcast
	h ()V saveAll
	i ()Lals; getWhiteList
	j ()[Ljava/lang/String; getWhiteListNames
	k ()Lall; getOps
	l ()[Ljava/lang/String; getOpNames
	a ()V reloadWhiteList
	a (Laig;Laif;)V sendLevelInfo
	e (Laig;)V sendAllPlayerInfo
	m ()I getPlayerCount
	n ()I getMaxPlayers
	o ()Z isUsingWhitelist
	a (Z)V setUsingWhiteList
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	p ()I getViewDistance
	q ()I getSimulationDistance
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lqr; getSingleplayerData
	b (Z)V setAllowCheatsForAllPlayers
	s ()V removeAll
	a (Lsw;Z)V broadcastSystemMessage
	a (Lsw;Ljava/util/function/Function;Z)V broadcastSystemMessage
	a (Ltl;Lds;Lss$a;)V broadcastChatMessage
	a (Ltl;Laig;Lss$a;)V broadcastChatMessage
	a (Ltl;Ljava/util/function/Predicate;Laig;Lss$a;)V broadcastChatMessage
	a (Ltl;)Z verifyChatTrusted
	a (Lbyo;)Lamn; getPlayerStats
	f (Laig;)Lacy; getPlayerAdvancements
	a (I)V setViewDistance
	b (I)V setSimulationDistance
	t ()Ljava/util/List; getPlayers
	a (Ljava/util/UUID;)Laig; getPlayer
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	u ()V reloadResources
	v ()Z isAllowCheatsForAllPlayers
	a (Lsw;Laig;)Lsw; lambda$broadcastSystemMessage$3
	a (Lbfj;)V lambda$remove$2
	a (Laif;Lbfj;)Lbfj; lambda$placeNewPlayer$1
	a (Laig;Lnet/minecraft/server/MinecraftServer$b;)V lambda$placeNewPlayer$0
	<clinit> ()V <clinit>
alk$1 net/minecraft/server/players/PlayerList$1
	a this$0
	<init> (Lalk;)V <init>
	a (Ldds;D)V onBorderSizeSet
	a (Ldds;DDJ)V onBorderSizeLerping
	a (Ldds;DD)V onBorderCenterSet
	a (Ldds;I)V onBorderSetWarningTime
	b (Ldds;I)V onBorderSetWarningBlocks
	b (Ldds;D)V onBorderSetDamagePerBlock
	c (Ldds;D)V onBorderSetDamageSafeZOne
all net/minecraft/server/players/ServerOpList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lalo; createEntry
	a ()[Ljava/lang/String; getUserList
	a (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (I)[Ljava/lang/String; lambda$getUserList$0
alm net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	<init> (Lcom/mojang/authlib/GameProfile;IZ)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a ()I getLevel
	b ()Z getBypassesPlayerLimit
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
aln net/minecraft/server/players/SleepStatus
	a activePlayers
	b sleepingPlayers
	<init> ()V <init>
	a (I)Z areEnoughSleeping
	a (ILjava/util/List;)Z areEnoughDeepSleeping
	b (I)I sleepersNeeded
	a ()V removeAllSleepers
	b ()I amountSleeping
	a (Ljava/util/List;)Z update
alo net/minecraft/server/players/StoredUserEntry
	a user
	<init> (Ljava/lang/Object;)V <init>
	g ()Ljava/lang/Object; getUser
	f ()Z hasExpired
	a (Lcom/google/gson/JsonObject;)V serialize
alp net/minecraft/server/players/StoredUserList
	a LOGGER
	b GSON
	c file
	d map
	<init> (Ljava/io/File;)V <init>
	b ()Ljava/io/File; getFile
	a (Lalo;)V add
	b (Ljava/lang/Object;)Lalo; get
	c (Ljava/lang/Object;)V remove
	b (Lalo;)V remove
	a ()[Ljava/lang/String; getUserList
	c ()Z isEmpty
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	d (Ljava/lang/Object;)Z contains
	g ()V removeExpired
	a (Lcom/google/gson/JsonObject;)Lalo; createEntry
	d ()Ljava/util/Collection; getEntries
	e ()V save
	f ()V load
	c (Lalo;)Lcom/google/gson/JsonObject; lambda$save$0
	<clinit> ()V <clinit>
alq net/minecraft/server/players/UserBanList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lalo; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isBanned
	a ()[Ljava/lang/String; getUserList
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (I)[Ljava/lang/String; lambda$getUserList$0
alr net/minecraft/server/players/UserBanListEntry
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	<init> (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a (Lcom/google/gson/JsonObject;)V serialize
	e ()Lsw; getDisplayName
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
als net/minecraft/server/players/UserWhiteList
	<init> (Ljava/io/File;)V <init>
	a (Lcom/google/gson/JsonObject;)Lalo; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	a ()[Ljava/lang/String; getUserList
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (I)[Ljava/lang/String; lambda$getUserList$0
alt net/minecraft/server/players/UserWhiteListEntry
	<init> (Lcom/mojang/authlib/GameProfile;)V <init>
	<init> (Lcom/google/gson/JsonObject;)V <init>
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
alu net/minecraft/server/players/package-info
alv net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	<init> (I)V <init>
	a ([B)V writeBytes
	a (Ljava/lang/String;)V writeString
	a (I)V write
	a (S)V writeShort
	b (I)V writeInt
	a (F)V writeFloat
	a ()[B toByteArray
	b ()V reset
alw net/minecraft/server/rcon/PktUtils
	a MAX_PACKET_SIZE
	b HEX_CHAR
	<init> ()V <init>
	a ([BII)Ljava/lang/String; stringFromByteArray
	a ([BI)I intFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
	a (B)Ljava/lang/String; toHexString
	<clinit> ()V <clinit>
alx net/minecraft/server/rcon/RconConsoleSource
	b RCON
	c RCON_COMPONENT
	d buffer
	e server
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	e ()V prepareForCommand
	f ()Ljava/lang/String; getCommandResponse
	g ()Lds; createCommandSourceStack
	a (Lsw;)V sendSystemMessage
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	<clinit> ()V <clinit>
aly net/minecraft/server/rcon/package-info
alz net/minecraft/server/rcon/thread/GenericThread
	d LOGGER
	e UNIQUE_THREAD_ID
	f MAX_STOP_WAIT
	a running
	b name
	c thread
	<init> (Ljava/lang/String;)V <init>
	a ()Z start
	b ()V stop
	c ()Z isRunning
	<clinit> ()V <clinit>
ama net/minecraft/server/rcon/thread/QueryThreadGs4
	d LOGGER
	e GAME_TYPE
	f GAME_ID
	g CHALLENGE_CHECK_INTERVAL
	h RESPONSE_CACHE_TIME
	i lastChallengeCheck
	j port
	k serverPort
	l maxPlayers
	m serverName
	n worldName
	o socket
	p buffer
	q hostIp
	r serverIp
	s validChallenges
	t rulesResponse
	u lastRulesResponse
	v serverInterface
	<init> (Ladf;I)V <init>
	a (Ladf;)Lama; create
	a ([BLjava/net/DatagramPacket;)V sendTo
	a (Ljava/net/DatagramPacket;)Z processPacket
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d (Ljava/net/DatagramPacket;)V sendChallenge
	d ()V pruneChallenges
	run ()V run
	a ()Z start
	a (Ljava/lang/Exception;)V recoverSocketError
	e ()Z initSocket
	a (JLama$a;)Z lambda$pruneChallenges$0
	<clinit> ()V <clinit>
ama$a net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	a time
	b challenge
	c identBytes
	d challengeBytes
	e ident
	<init> (Ljava/net/DatagramPacket;)V <init>
	a (J)Ljava/lang/Boolean; before
	a ()I getChallenge
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
amb net/minecraft/server/rcon/thread/RconClient
	d LOGGER
	e SERVERDATA_AUTH
	f SERVERDATA_EXECCOMMAND
	g SERVERDATA_RESPONSE_VALUE
	h SERVERDATA_AUTH_RESPONSE
	i SERVERDATA_AUTH_FAILURE
	j authed
	k client
	l buf
	m rconPassword
	n serverInterface
	<init> (Ladf;Ljava/lang/String;Ljava/net/Socket;)V <init>
	run ()V run
	a (IILjava/lang/String;)V send
	d ()V sendAuthFailure
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	e ()V closeSocket
	<clinit> ()V <clinit>
amc net/minecraft/server/rcon/thread/RconThread
	d LOGGER
	e socket
	f rconPassword
	g clients
	h serverInterface
	<init> (Ladf;Ljava/net/ServerSocket;Ljava/lang/String;)V <init>
	d ()V clearClients
	run ()V run
	a (Ladf;)Lamc; create
	b ()V stop
	a (Ljava/net/ServerSocket;)V closeSocket
	a (Lamb;)Z lambda$clearClients$0
	<clinit> ()V <clinit>
amd net/minecraft/server/rcon/thread/package-info
ame net/minecraft/sounds/Music
	a CODEC
	b event
	c minDelay
	d maxDelay
	e replaceCurrentMusic
	<init> (Lhe;IIZ)V <init>
	a ()Lhe; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
	d ()Z replaceCurrentMusic
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lame;)Ljava/lang/Boolean; lambda$static$3
	b (Lame;)Ljava/lang/Integer; lambda$static$2
	c (Lame;)Ljava/lang/Integer; lambda$static$1
	d (Lame;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
amf net/minecraft/sounds/Musics
	h ONE_SECOND
	i THIRTY_SECONDS
	j TEN_MINUTES
	k TWENTY_MINUTES
	l FIVE_MINUTES
	a MENU
	b CREATIVE
	c CREDITS
	d END_BOSS
	e END
	f UNDER_WATER
	g GAME
	<init> ()V <init>
	a (Lhe;)Lame; createGameMusic
	<clinit> ()V <clinit>
amg net/minecraft/sounds/SoundEvent
	a DIRECT_CODEC
	b CODEC
	c DEFAULT_RANGE
	d location
	e range
	f newSystem
	a (Lacq;Ljava/util/Optional;)Lamg; create
	a (Lacq;)Lamg; createVariableRangeEvent
	a (Lacq;F)Lamg; createFixedRangeEvent
	<init> (Lacq;FZ)V <init>
	a ()Lacq; getLocation
	a (F)F getRange
	b ()Ljava/util/Optional; fixedRange
	a (Lsf;)V writeToNetwork
	b (Lsf;)Lamg; readFromNetwork
	b (Lacq;)Lamg; lambda$create$2
	a (Lacq;Ljava/lang/Float;)Lamg; lambda$create$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
amh net/minecraft/sounds/SoundEvents
	a ALLAY_AMBIENT_WITH_ITEM
	b ALLAY_AMBIENT_WITHOUT_ITEM
	c ALLAY_DEATH
	d ALLAY_HURT
	e ALLAY_ITEM_GIVEN
	f ALLAY_ITEM_TAKEN
	g ALLAY_THROW
	h AMBIENT_CAVE
	i AMBIENT_BASALT_DELTAS_ADDITIONS
	j AMBIENT_BASALT_DELTAS_LOOP
	k AMBIENT_BASALT_DELTAS_MOOD
	l AMBIENT_CRIMSON_FOREST_ADDITIONS
	m AMBIENT_CRIMSON_FOREST_LOOP
	n AMBIENT_CRIMSON_FOREST_MOOD
	o AMBIENT_NETHER_WASTES_ADDITIONS
	p AMBIENT_NETHER_WASTES_LOOP
	q AMBIENT_NETHER_WASTES_MOOD
	r AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	s AMBIENT_SOUL_SAND_VALLEY_LOOP
	t AMBIENT_SOUL_SAND_VALLEY_MOOD
	u AMBIENT_WARPED_FOREST_ADDITIONS
	v AMBIENT_WARPED_FOREST_LOOP
	w AMBIENT_WARPED_FOREST_MOOD
	x AMBIENT_UNDERWATER_ENTER
	y AMBIENT_UNDERWATER_EXIT
	z AMBIENT_UNDERWATER_LOOP
	A AMBIENT_UNDERWATER_LOOP_ADDITIONS
	B AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	C AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	D AMETHYST_BLOCK_BREAK
	E AMETHYST_BLOCK_CHIME
	F AMETHYST_BLOCK_FALL
	G AMETHYST_BLOCK_HIT
	H AMETHYST_BLOCK_PLACE
	I AMETHYST_BLOCK_RESONATE
	J AMETHYST_BLOCK_STEP
	K AMETHYST_CLUSTER_BREAK
	L AMETHYST_CLUSTER_FALL
	M AMETHYST_CLUSTER_HIT
	N AMETHYST_CLUSTER_PLACE
	O AMETHYST_CLUSTER_STEP
	P ANCIENT_DEBRIS_BREAK
	Q ANCIENT_DEBRIS_STEP
	R ANCIENT_DEBRIS_PLACE
	S ANCIENT_DEBRIS_HIT
	T ANCIENT_DEBRIS_FALL
	U ANVIL_BREAK
	V ANVIL_DESTROY
	W ANVIL_FALL
	X ANVIL_HIT
	Y ANVIL_LAND
	Z ANVIL_PLACE
	aa ANVIL_STEP
	ab ANVIL_USE
	ac ARMOR_EQUIP_CHAIN
	ad ARMOR_EQUIP_DIAMOND
	ae ARMOR_EQUIP_ELYTRA
	af ARMOR_EQUIP_GENERIC
	ag ARMOR_EQUIP_GOLD
	ah ARMOR_EQUIP_IRON
	ai ARMOR_EQUIP_LEATHER
	aj ARMOR_EQUIP_NETHERITE
	ak ARMOR_EQUIP_TURTLE
	al ARMOR_STAND_BREAK
	am ARMOR_STAND_FALL
	an ARMOR_STAND_HIT
	ao ARMOR_STAND_PLACE
	ap ARROW_HIT
	aq ARROW_HIT_PLAYER
	ar ARROW_SHOOT
	as AXE_STRIP
	at AXE_SCRAPE
	au AXE_WAX_OFF
	av AXOLOTL_ATTACK
	aw AXOLOTL_DEATH
	ax AXOLOTL_HURT
	ay AXOLOTL_IDLE_AIR
	az AXOLOTL_IDLE_WATER
	aA AXOLOTL_SPLASH
	aB AXOLOTL_SWIM
	aC AZALEA_BREAK
	aD AZALEA_FALL
	aE AZALEA_HIT
	aF AZALEA_PLACE
	aG AZALEA_STEP
	aH AZALEA_LEAVES_BREAK
	aI AZALEA_LEAVES_FALL
	aJ AZALEA_LEAVES_HIT
	aK AZALEA_LEAVES_PLACE
	aL AZALEA_LEAVES_STEP
	aM BAMBOO_BREAK
	aN BAMBOO_FALL
	aO BAMBOO_HIT
	aP BAMBOO_PLACE
	aQ BAMBOO_STEP
	aR BAMBOO_SAPLING_BREAK
	aS BAMBOO_SAPLING_HIT
	aT BAMBOO_SAPLING_PLACE
	aU BAMBOO_WOOD_BREAK
	aV BAMBOO_WOOD_FALL
	aW BAMBOO_WOOD_HIT
	aX BAMBOO_WOOD_PLACE
	aY BAMBOO_WOOD_STEP
	aZ BAMBOO_WOOD_DOOR_CLOSE
	ba BAMBOO_WOOD_DOOR_OPEN
	bb BAMBOO_WOOD_TRAPDOOR_CLOSE
	bc BAMBOO_WOOD_TRAPDOOR_OPEN
	bd BAMBOO_WOOD_BUTTON_CLICK_OFF
	be BAMBOO_WOOD_BUTTON_CLICK_ON
	bf BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	bg BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	bh BAMBOO_WOOD_FENCE_GATE_CLOSE
	bi BAMBOO_WOOD_FENCE_GATE_OPEN
	bj BARREL_CLOSE
	bk BARREL_OPEN
	bl BASALT_BREAK
	bm BASALT_STEP
	bn BASALT_PLACE
	bo BASALT_HIT
	bp BASALT_FALL
	bq BAT_AMBIENT
	br BAT_DEATH
	bs BAT_HURT
	bt BAT_LOOP
	bu BAT_TAKEOFF
	bv BEACON_ACTIVATE
	bw BEACON_AMBIENT
	bx BEACON_DEACTIVATE
	by BEACON_POWER_SELECT
	bz BEE_DEATH
	bA BEE_HURT
	bB BEE_LOOP_AGGRESSIVE
	bC BEE_LOOP
	bD BEE_STING
	bE BEE_POLLINATE
	bF BEEHIVE_DRIP
	bG BEEHIVE_ENTER
	bH BEEHIVE_EXIT
	bI BEEHIVE_SHEAR
	bJ BEEHIVE_WORK
	bK BELL_BLOCK
	bL BELL_RESONATE
	bM BIG_DRIPLEAF_BREAK
	bN BIG_DRIPLEAF_FALL
	bO BIG_DRIPLEAF_HIT
	bP BIG_DRIPLEAF_PLACE
	bQ BIG_DRIPLEAF_STEP
	bR BLAZE_AMBIENT
	bS BLAZE_BURN
	bT BLAZE_DEATH
	bU BLAZE_HURT
	bV BLAZE_SHOOT
	bW BOAT_PADDLE_LAND
	bX BOAT_PADDLE_WATER
	bY BONE_BLOCK_BREAK
	bZ BONE_BLOCK_FALL
	ca BONE_BLOCK_HIT
	cb BONE_BLOCK_PLACE
	cc BONE_BLOCK_STEP
	cd BONE_MEAL_USE
	ce BOOK_PAGE_TURN
	cf BOOK_PUT
	cg BLASTFURNACE_FIRE_CRACKLE
	ch BOTTLE_EMPTY
	ci BOTTLE_FILL
	cj BOTTLE_FILL_DRAGONBREATH
	ck BREWING_STAND_BREW
	cl BRUSH_GENERIC
	cm BRUSH_SAND
	cn BRUSH_GRAVEL
	co BRUSH_SAND_COMPLETED
	cp BRUSH_GRAVEL_COMPLETED
	cq BUBBLE_COLUMN_BUBBLE_POP
	cr BUBBLE_COLUMN_UPWARDS_AMBIENT
	cs BUBBLE_COLUMN_UPWARDS_INSIDE
	ct BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	cu BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	cv BUCKET_EMPTY
	cw BUCKET_EMPTY_AXOLOTL
	cx BUCKET_EMPTY_FISH
	cy BUCKET_EMPTY_LAVA
	cz BUCKET_EMPTY_POWDER_SNOW
	cA BUCKET_EMPTY_TADPOLE
	cB BUCKET_FILL
	cC BUCKET_FILL_AXOLOTL
	cD BUCKET_FILL_FISH
	cE BUCKET_FILL_LAVA
	cF BUCKET_FILL_POWDER_SNOW
	cG BUCKET_FILL_TADPOLE
	cH BUNDLE_DROP_CONTENTS
	cI BUNDLE_INSERT
	cJ BUNDLE_REMOVE_ONE
	cK CAKE_ADD_CANDLE
	cL CALCITE_BREAK
	cM CALCITE_STEP
	cN CALCITE_PLACE
	cO CALCITE_HIT
	cP CALCITE_FALL
	cQ CAMEL_AMBIENT
	cR CAMEL_DASH
	cS CAMEL_DASH_READY
	cT CAMEL_DEATH
	cU CAMEL_EAT
	cV CAMEL_HURT
	cW CAMEL_SADDLE
	cX CAMEL_SIT
	cY CAMEL_STAND
	cZ CAMEL_STEP
	da CAMEL_STEP_SAND
	db CAMPFIRE_CRACKLE
	dc CANDLE_AMBIENT
	dd CANDLE_BREAK
	de CANDLE_EXTINGUISH
	df CANDLE_FALL
	dg CANDLE_HIT
	dh CANDLE_PLACE
	di CANDLE_STEP
	dj CAT_AMBIENT
	dk CAT_STRAY_AMBIENT
	dl CAT_DEATH
	dm CAT_EAT
	dn CAT_HISS
	do CAT_BEG_FOR_FOOD
	dp CAT_HURT
	dq CAT_PURR
	dr CAT_PURREOW
	ds CAVE_VINES_BREAK
	dt CAVE_VINES_FALL
	du CAVE_VINES_HIT
	dv CAVE_VINES_PLACE
	dw CAVE_VINES_STEP
	dx CAVE_VINES_PICK_BERRIES
	dy CHAIN_BREAK
	dz CHAIN_FALL
	dA CHAIN_HIT
	dB CHAIN_PLACE
	dC CHAIN_STEP
	dD CHERRY_WOOD_BREAK
	dE CHERRY_WOOD_FALL
	dF CHERRY_WOOD_HIT
	dG CHERRY_WOOD_PLACE
	dH CHERRY_WOOD_STEP
	dI CHERRY_SAPLING_BREAK
	dJ CHERRY_SAPLING_FALL
	dK CHERRY_SAPLING_HIT
	dL CHERRY_SAPLING_PLACE
	dM CHERRY_SAPLING_STEP
	dN CHERRY_LEAVES_BREAK
	dO CHERRY_LEAVES_FALL
	dP CHERRY_LEAVES_HIT
	dQ CHERRY_LEAVES_PLACE
	dR CHERRY_LEAVES_STEP
	dS CHERRY_WOOD_HANGING_SIGN_STEP
	dT CHERRY_WOOD_HANGING_SIGN_BREAK
	dU CHERRY_WOOD_HANGING_SIGN_FALL
	dV CHERRY_WOOD_HANGING_SIGN_HIT
	dW CHERRY_WOOD_HANGING_SIGN_PLACE
	dX CHERRY_WOOD_DOOR_CLOSE
	dY CHERRY_WOOD_DOOR_OPEN
	dZ CHERRY_WOOD_TRAPDOOR_CLOSE
	ea CHERRY_WOOD_TRAPDOOR_OPEN
	eb CHERRY_WOOD_BUTTON_CLICK_OFF
	ec CHERRY_WOOD_BUTTON_CLICK_ON
	ed CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	ee CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	ef CHERRY_WOOD_FENCE_GATE_CLOSE
	eg CHERRY_WOOD_FENCE_GATE_OPEN
	eh CHEST_CLOSE
	ei CHEST_LOCKED
	ej CHEST_OPEN
	ek CHICKEN_AMBIENT
	el CHICKEN_DEATH
	em CHICKEN_EGG
	en CHICKEN_HURT
	eo CHICKEN_STEP
	ep CHISELED_BOOKSHELF_BREAK
	eq CHISELED_BOOKSHELF_FALL
	er CHISELED_BOOKSHELF_HIT
	es CHISELED_BOOKSHELF_INSERT
	et CHISELED_BOOKSHELF_INSERT_ENCHANTED
	eu CHISELED_BOOKSHELF_STEP
	ev CHISELED_BOOKSHELF_PICKUP
	ew CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	ex CHISELED_BOOKSHELF_PLACE
	ey CHORUS_FLOWER_DEATH
	ez CHORUS_FLOWER_GROW
	eA CHORUS_FRUIT_TELEPORT
	eB COD_AMBIENT
	eC COD_DEATH
	eD COD_FLOP
	eE COD_HURT
	eF COMPARATOR_CLICK
	eG COMPOSTER_EMPTY
	eH COMPOSTER_FILL
	eI COMPOSTER_FILL_SUCCESS
	eJ COMPOSTER_READY
	eK CONDUIT_ACTIVATE
	eL CONDUIT_AMBIENT
	eM CONDUIT_AMBIENT_SHORT
	eN CONDUIT_ATTACK_TARGET
	eO CONDUIT_DEACTIVATE
	eP COPPER_BREAK
	eQ COPPER_STEP
	eR COPPER_PLACE
	eS COPPER_HIT
	eT COPPER_FALL
	eU CORAL_BLOCK_BREAK
	eV CORAL_BLOCK_FALL
	eW CORAL_BLOCK_HIT
	eX CORAL_BLOCK_PLACE
	eY CORAL_BLOCK_STEP
	eZ COW_AMBIENT
	fa COW_DEATH
	fb COW_HURT
	fc COW_MILK
	fd COW_STEP
	fe CREEPER_DEATH
	ff CREEPER_HURT
	fg CREEPER_PRIMED
	fh CROP_BREAK
	fi CROP_PLANTED
	fj CROSSBOW_HIT
	fk CROSSBOW_LOADING_END
	fl CROSSBOW_LOADING_MIDDLE
	fm CROSSBOW_LOADING_START
	fn CROSSBOW_QUICK_CHARGE_1
	fo CROSSBOW_QUICK_CHARGE_2
	fp CROSSBOW_QUICK_CHARGE_3
	fq CROSSBOW_SHOOT
	fr DECORATED_POT_BREAK
	fs DECORATED_POT_FALL
	ft DECORATED_POT_HIT
	fu DECORATED_POT_STEP
	fv DECORATED_POT_PLACE
	fw DECORATED_POT_SHATTER
	fx DEEPSLATE_BRICKS_BREAK
	fy DEEPSLATE_BRICKS_FALL
	fz DEEPSLATE_BRICKS_HIT
	fA DEEPSLATE_BRICKS_PLACE
	fB DEEPSLATE_BRICKS_STEP
	fC DEEPSLATE_BREAK
	fD DEEPSLATE_FALL
	fE DEEPSLATE_HIT
	fF DEEPSLATE_PLACE
	fG DEEPSLATE_STEP
	fH DEEPSLATE_TILES_BREAK
	fI DEEPSLATE_TILES_FALL
	fJ DEEPSLATE_TILES_HIT
	fK DEEPSLATE_TILES_PLACE
	fL DEEPSLATE_TILES_STEP
	fM DISPENSER_DISPENSE
	fN DISPENSER_FAIL
	fO DISPENSER_LAUNCH
	fP DOLPHIN_AMBIENT
	fQ DOLPHIN_AMBIENT_WATER
	fR DOLPHIN_ATTACK
	fS DOLPHIN_DEATH
	fT DOLPHIN_EAT
	fU DOLPHIN_HURT
	fV DOLPHIN_JUMP
	fW DOLPHIN_PLAY
	fX DOLPHIN_SPLASH
	fY DOLPHIN_SWIM
	fZ DONKEY_AMBIENT
	ga DONKEY_ANGRY
	gb DONKEY_CHEST
	gc DONKEY_DEATH
	gd DONKEY_EAT
	ge DONKEY_HURT
	gf DRIPSTONE_BLOCK_BREAK
	gg DRIPSTONE_BLOCK_STEP
	gh DRIPSTONE_BLOCK_PLACE
	gi DRIPSTONE_BLOCK_HIT
	gj DRIPSTONE_BLOCK_FALL
	gk POINTED_DRIPSTONE_BREAK
	gl POINTED_DRIPSTONE_STEP
	gm POINTED_DRIPSTONE_PLACE
	gn POINTED_DRIPSTONE_HIT
	go POINTED_DRIPSTONE_FALL
	gp POINTED_DRIPSTONE_LAND
	gq POINTED_DRIPSTONE_DRIP_LAVA
	gr POINTED_DRIPSTONE_DRIP_WATER
	gs POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	gt POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	gu BIG_DRIPLEAF_TILT_DOWN
	gv BIG_DRIPLEAF_TILT_UP
	gw DROWNED_AMBIENT
	gx DROWNED_AMBIENT_WATER
	gy DROWNED_DEATH
	gz DROWNED_DEATH_WATER
	gA DROWNED_HURT
	gB DROWNED_HURT_WATER
	gC DROWNED_SHOOT
	gD DROWNED_STEP
	gE DROWNED_SWIM
	gF DYE_USE
	gG EGG_THROW
	gH ELDER_GUARDIAN_AMBIENT
	gI ELDER_GUARDIAN_AMBIENT_LAND
	gJ ELDER_GUARDIAN_CURSE
	gK ELDER_GUARDIAN_DEATH
	gL ELDER_GUARDIAN_DEATH_LAND
	gM ELDER_GUARDIAN_FLOP
	gN ELDER_GUARDIAN_HURT
	gO ELDER_GUARDIAN_HURT_LAND
	gP ELYTRA_FLYING
	gQ ENCHANTMENT_TABLE_USE
	gR ENDER_CHEST_CLOSE
	gS ENDER_CHEST_OPEN
	gT ENDER_DRAGON_AMBIENT
	gU ENDER_DRAGON_DEATH
	gV DRAGON_FIREBALL_EXPLODE
	gW ENDER_DRAGON_FLAP
	gX ENDER_DRAGON_GROWL
	gY ENDER_DRAGON_HURT
	gZ ENDER_DRAGON_SHOOT
	ha ENDER_EYE_DEATH
	hb ENDER_EYE_LAUNCH
	hc ENDERMAN_AMBIENT
	hd ENDERMAN_DEATH
	he ENDERMAN_HURT
	hf ENDERMAN_SCREAM
	hg ENDERMAN_STARE
	hh ENDERMAN_TELEPORT
	hi ENDERMITE_AMBIENT
	hj ENDERMITE_DEATH
	hk ENDERMITE_HURT
	hl ENDERMITE_STEP
	hm ENDER_PEARL_THROW
	hn END_GATEWAY_SPAWN
	ho END_PORTAL_FRAME_FILL
	hp END_PORTAL_SPAWN
	hq EVOKER_AMBIENT
	hr EVOKER_CAST_SPELL
	hs EVOKER_CELEBRATE
	ht EVOKER_DEATH
	hu EVOKER_FANGS_ATTACK
	hv EVOKER_HURT
	hw EVOKER_PREPARE_ATTACK
	hx EVOKER_PREPARE_SUMMON
	hy EVOKER_PREPARE_WOLOLO
	hz EXPERIENCE_BOTTLE_THROW
	hA EXPERIENCE_ORB_PICKUP
	hB FENCE_GATE_CLOSE
	hC FENCE_GATE_OPEN
	hD FIRECHARGE_USE
	hE FIREWORK_ROCKET_BLAST
	hF FIREWORK_ROCKET_BLAST_FAR
	hG FIREWORK_ROCKET_LARGE_BLAST
	hH FIREWORK_ROCKET_LARGE_BLAST_FAR
	hI FIREWORK_ROCKET_LAUNCH
	hJ FIREWORK_ROCKET_SHOOT
	hK FIREWORK_ROCKET_TWINKLE
	hL FIREWORK_ROCKET_TWINKLE_FAR
	hM FIRE_AMBIENT
	hN FIRE_EXTINGUISH
	hO FISH_SWIM
	hP FISHING_BOBBER_RETRIEVE
	hQ FISHING_BOBBER_SPLASH
	hR FISHING_BOBBER_THROW
	hS FLINTANDSTEEL_USE
	hT FLOWERING_AZALEA_BREAK
	hU FLOWERING_AZALEA_FALL
	hV FLOWERING_AZALEA_HIT
	hW FLOWERING_AZALEA_PLACE
	hX FLOWERING_AZALEA_STEP
	hY FOX_AGGRO
	hZ FOX_AMBIENT
	ia FOX_BITE
	ib FOX_DEATH
	ic FOX_EAT
	id FOX_HURT
	ie FOX_SCREECH
	if FOX_SLEEP
	ig FOX_SNIFF
	ih FOX_SPIT
	ii FOX_TELEPORT
	ij SUSPICIOUS_SAND_BREAK
	ik SUSPICIOUS_SAND_STEP
	il SUSPICIOUS_SAND_PLACE
	im SUSPICIOUS_SAND_HIT
	in SUSPICIOUS_SAND_FALL
	io SUSPICIOUS_GRAVEL_BREAK
	ip SUSPICIOUS_GRAVEL_STEP
	iq SUSPICIOUS_GRAVEL_PLACE
	ir SUSPICIOUS_GRAVEL_HIT
	is SUSPICIOUS_GRAVEL_FALL
	it FROGLIGHT_BREAK
	iu FROGLIGHT_FALL
	iv FROGLIGHT_HIT
	iw FROGLIGHT_PLACE
	ix FROGLIGHT_STEP
	iy FROGSPAWNSTEP
	iz FROGSPAWN_BREAK
	iA FROGSPAWN_FALL
	iB FROGSPAWN_HATCH
	iC FROGSPAWN_HIT
	iD FROGSPAWN_PLACE
	iE FROG_AMBIENT
	iF FROG_DEATH
	iG FROG_EAT
	iH FROG_HURT
	iI FROG_LAY_SPAWN
	iJ FROG_LONG_JUMP
	iK FROG_STEP
	iL FROG_TONGUE
	iM ROOTS_BREAK
	iN ROOTS_STEP
	iO ROOTS_PLACE
	iP ROOTS_HIT
	iQ ROOTS_FALL
	iR FURNACE_FIRE_CRACKLE
	iS GENERIC_BIG_FALL
	iT GENERIC_BURN
	iU GENERIC_DEATH
	iV GENERIC_DRINK
	iW GENERIC_EAT
	iX GENERIC_EXPLODE
	iY GENERIC_EXTINGUISH_FIRE
	iZ GENERIC_HURT
	ja GENERIC_SMALL_FALL
	jb GENERIC_SPLASH
	jc GENERIC_SWIM
	jd GHAST_AMBIENT
	je GHAST_DEATH
	jf GHAST_HURT
	jg GHAST_SCREAM
	jh GHAST_SHOOT
	ji GHAST_WARN
	jj GILDED_BLACKSTONE_BREAK
	jk GILDED_BLACKSTONE_FALL
	jl GILDED_BLACKSTONE_HIT
	jm GILDED_BLACKSTONE_PLACE
	jn GILDED_BLACKSTONE_STEP
	jo GLASS_BREAK
	jp GLASS_FALL
	jq GLASS_HIT
	jr GLASS_PLACE
	js GLASS_STEP
	jt GLOW_INK_SAC_USE
	ju GLOW_ITEM_FRAME_ADD_ITEM
	jv GLOW_ITEM_FRAME_BREAK
	jw GLOW_ITEM_FRAME_PLACE
	jx GLOW_ITEM_FRAME_REMOVE_ITEM
	jy GLOW_ITEM_FRAME_ROTATE_ITEM
	jz GLOW_SQUID_AMBIENT
	jA GLOW_SQUID_DEATH
	jB GLOW_SQUID_HURT
	jC GLOW_SQUID_SQUIRT
	jD GOAT_AMBIENT
	jE GOAT_DEATH
	jF GOAT_EAT
	jG GOAT_HURT
	jH GOAT_LONG_JUMP
	jI GOAT_MILK
	jJ GOAT_PREPARE_RAM
	jK GOAT_RAM_IMPACT
	jL GOAT_HORN_BREAK
	jM GOAT_HORN_PLAY
	jN GOAT_SCREAMING_AMBIENT
	jO GOAT_SCREAMING_DEATH
	jP GOAT_SCREAMING_EAT
	jQ GOAT_SCREAMING_HURT
	jR GOAT_SCREAMING_LONG_JUMP
	jS GOAT_SCREAMING_MILK
	jT GOAT_SCREAMING_PREPARE_RAM
	jU GOAT_SCREAMING_RAM_IMPACT
	jV GOAT_SCREAMING_HORN_BREAK
	jW GOAT_STEP
	jX GRASS_BREAK
	jY GRASS_FALL
	jZ GRASS_HIT
	ka GRASS_PLACE
	kb GRASS_STEP
	kc GRAVEL_BREAK
	kd GRAVEL_FALL
	ke GRAVEL_HIT
	kf GRAVEL_PLACE
	kg GRAVEL_STEP
	kh GRINDSTONE_USE
	ki GROWING_PLANT_CROP
	kj GUARDIAN_AMBIENT
	kk GUARDIAN_AMBIENT_LAND
	kl GUARDIAN_ATTACK
	km GUARDIAN_DEATH
	kn GUARDIAN_DEATH_LAND
	ko GUARDIAN_FLOP
	kp GUARDIAN_HURT
	kq GUARDIAN_HURT_LAND
	kr HANGING_ROOTS_BREAK
	ks HANGING_ROOTS_FALL
	kt HANGING_ROOTS_HIT
	ku HANGING_ROOTS_PLACE
	kv HANGING_ROOTS_STEP
	kw HANGING_SIGN_STEP
	kx HANGING_SIGN_BREAK
	ky HANGING_SIGN_FALL
	kz HANGING_SIGN_HIT
	kA HANGING_SIGN_PLACE
	kB NETHER_WOOD_HANGING_SIGN_STEP
	kC NETHER_WOOD_HANGING_SIGN_BREAK
	kD NETHER_WOOD_HANGING_SIGN_FALL
	kE NETHER_WOOD_HANGING_SIGN_HIT
	kF NETHER_WOOD_HANGING_SIGN_PLACE
	kG BAMBOO_WOOD_HANGING_SIGN_STEP
	kH BAMBOO_WOOD_HANGING_SIGN_BREAK
	kI BAMBOO_WOOD_HANGING_SIGN_FALL
	kJ BAMBOO_WOOD_HANGING_SIGN_HIT
	kK BAMBOO_WOOD_HANGING_SIGN_PLACE
	kL HOE_TILL
	kM HOGLIN_AMBIENT
	kN HOGLIN_ANGRY
	kO HOGLIN_ATTACK
	kP HOGLIN_CONVERTED_TO_ZOMBIFIED
	kQ HOGLIN_DEATH
	kR HOGLIN_HURT
	kS HOGLIN_RETREAT
	kT HOGLIN_STEP
	kU HONEY_BLOCK_BREAK
	kV HONEY_BLOCK_FALL
	kW HONEY_BLOCK_HIT
	kX HONEY_BLOCK_PLACE
	kY HONEY_BLOCK_SLIDE
	kZ HONEY_BLOCK_STEP
	la HONEYCOMB_WAX_ON
	lb HONEY_DRINK
	lc GOAT_HORN_VARIANT_COUNT
	ld GOAT_HORN_SOUND_VARIANTS
	le HORSE_AMBIENT
	lf HORSE_ANGRY
	lg HORSE_ARMOR
	lh HORSE_BREATHE
	li HORSE_DEATH
	lj HORSE_EAT
	lk HORSE_GALLOP
	ll HORSE_HURT
	lm HORSE_JUMP
	ln HORSE_LAND
	lo HORSE_SADDLE
	lp HORSE_STEP
	lq HORSE_STEP_WOOD
	lr HOSTILE_BIG_FALL
	ls HOSTILE_DEATH
	lt HOSTILE_HURT
	lu HOSTILE_SMALL_FALL
	lv HOSTILE_SPLASH
	lw HOSTILE_SWIM
	lx HUSK_AMBIENT
	ly HUSK_CONVERTED_TO_ZOMBIE
	lz HUSK_DEATH
	lA HUSK_HURT
	lB HUSK_STEP
	lC ILLUSIONER_AMBIENT
	lD ILLUSIONER_CAST_SPELL
	lE ILLUSIONER_DEATH
	lF ILLUSIONER_HURT
	lG ILLUSIONER_MIRROR_MOVE
	lH ILLUSIONER_PREPARE_BLINDNESS
	lI ILLUSIONER_PREPARE_MIRROR
	lJ INK_SAC_USE
	lK IRON_DOOR_CLOSE
	lL IRON_DOOR_OPEN
	lM IRON_GOLEM_ATTACK
	lN IRON_GOLEM_DAMAGE
	lO IRON_GOLEM_DEATH
	lP IRON_GOLEM_HURT
	lQ IRON_GOLEM_REPAIR
	lR IRON_GOLEM_STEP
	lS IRON_TRAPDOOR_CLOSE
	lT IRON_TRAPDOOR_OPEN
	lU ITEM_FRAME_ADD_ITEM
	lV ITEM_FRAME_BREAK
	lW ITEM_FRAME_PLACE
	lX ITEM_FRAME_REMOVE_ITEM
	lY ITEM_FRAME_ROTATE_ITEM
	lZ ITEM_BREAK
	ma ITEM_PICKUP
	mb LADDER_BREAK
	mc LADDER_FALL
	md LADDER_HIT
	me LADDER_PLACE
	mf LADDER_STEP
	mg LANTERN_BREAK
	mh LANTERN_FALL
	mi LANTERN_HIT
	mj LANTERN_PLACE
	mk LANTERN_STEP
	ml LARGE_AMETHYST_BUD_BREAK
	mm LARGE_AMETHYST_BUD_PLACE
	mn LAVA_AMBIENT
	mo LAVA_EXTINGUISH
	mp LAVA_POP
	mq LEASH_KNOT_BREAK
	mr LEASH_KNOT_PLACE
	ms LEVER_CLICK
	mt LIGHTNING_BOLT_IMPACT
	mu LIGHTNING_BOLT_THUNDER
	mv LINGERING_POTION_THROW
	mw LLAMA_AMBIENT
	mx LLAMA_ANGRY
	my LLAMA_CHEST
	mz LLAMA_DEATH
	mA LLAMA_EAT
	mB LLAMA_HURT
	mC LLAMA_SPIT
	mD LLAMA_STEP
	mE LLAMA_SWAG
	mF MAGMA_CUBE_DEATH_SMALL
	mG LODESTONE_BREAK
	mH LODESTONE_STEP
	mI LODESTONE_PLACE
	mJ LODESTONE_HIT
	mK LODESTONE_FALL
	mL LODESTONE_COMPASS_LOCK
	mM MAGMA_CUBE_DEATH
	mN MAGMA_CUBE_HURT
	mO MAGMA_CUBE_HURT_SMALL
	mP MAGMA_CUBE_JUMP
	mQ MAGMA_CUBE_SQUISH
	mR MAGMA_CUBE_SQUISH_SMALL
	mS MANGROVE_ROOTS_BREAK
	mT MANGROVE_ROOTS_FALL
	mU MANGROVE_ROOTS_HIT
	mV MANGROVE_ROOTS_PLACE
	mW MANGROVE_ROOTS_STEP
	mX MEDIUM_AMETHYST_BUD_BREAK
	mY MEDIUM_AMETHYST_BUD_PLACE
	mZ METAL_BREAK
	na METAL_FALL
	nb METAL_HIT
	nc METAL_PLACE
	nd METAL_PRESSURE_PLATE_CLICK_OFF
	ne METAL_PRESSURE_PLATE_CLICK_ON
	nf METAL_STEP
	ng MINECART_INSIDE_UNDERWATER
	nh MINECART_INSIDE
	ni MINECART_RIDING
	nj MOOSHROOM_CONVERT
	nk MOOSHROOM_EAT
	nl MOOSHROOM_MILK
	nm MOOSHROOM_MILK_SUSPICIOUSLY
	nn MOOSHROOM_SHEAR
	no MOSS_CARPET_BREAK
	np MOSS_CARPET_FALL
	nq MOSS_CARPET_HIT
	nr MOSS_CARPET_PLACE
	ns MOSS_CARPET_STEP
	nt PINK_PETALS_BREAK
	nu PINK_PETALS_FALL
	nv PINK_PETALS_HIT
	nw PINK_PETALS_PLACE
	nx PINK_PETALS_STEP
	ny MOSS_BREAK
	nz MOSS_FALL
	nA MOSS_HIT
	nB MOSS_PLACE
	nC MOSS_STEP
	nD MUD_BREAK
	nE MUD_FALL
	nF MUD_HIT
	nG MUD_PLACE
	nH MUD_STEP
	nI MUD_BRICKS_BREAK
	nJ MUD_BRICKS_FALL
	nK MUD_BRICKS_HIT
	nL MUD_BRICKS_PLACE
	nM MUD_BRICKS_STEP
	nN MUDDY_MANGROVE_ROOTS_BREAK
	nO MUDDY_MANGROVE_ROOTS_FALL
	nP MUDDY_MANGROVE_ROOTS_HIT
	nQ MUDDY_MANGROVE_ROOTS_PLACE
	nR MUDDY_MANGROVE_ROOTS_STEP
	nS MULE_AMBIENT
	nT MULE_ANGRY
	nU MULE_CHEST
	nV MULE_DEATH
	nW MULE_EAT
	nX MULE_HURT
	nY MUSIC_CREATIVE
	nZ MUSIC_CREDITS
	oa MUSIC_DISC_5
	ob MUSIC_DISC_11
	oc MUSIC_DISC_13
	od MUSIC_DISC_BLOCKS
	oe MUSIC_DISC_CAT
	of MUSIC_DISC_CHIRP
	og MUSIC_DISC_FAR
	oh MUSIC_DISC_MALL
	oi MUSIC_DISC_MELLOHI
	oj MUSIC_DISC_PIGSTEP
	ok MUSIC_DISC_STAL
	ol MUSIC_DISC_STRAD
	om MUSIC_DISC_WAIT
	on MUSIC_DISC_WARD
	oo MUSIC_DISC_OTHERSIDE
	op MUSIC_DISC_RELIC
	oq MUSIC_DRAGON
	or MUSIC_END
	os MUSIC_GAME
	ot MUSIC_MENU
	ou MUSIC_BIOME_BASALT_DELTAS
	ov MUSIC_BIOME_CRIMSON_FOREST
	ow MUSIC_BIOME_DEEP_DARK
	ox MUSIC_BIOME_DRIPSTONE_CAVES
	oy MUSIC_BIOME_GROVE
	oz MUSIC_BIOME_JAGGED_PEAKS
	oA MUSIC_BIOME_LUSH_CAVES
	oB MUSIC_BIOME_SWAMP
	oC MUSIC_BIOME_FOREST
	oD MUSIC_BIOME_OLD_GROWTH_TAIGA
	oE MUSIC_BIOME_MEADOW
	oF MUSIC_BIOME_CHERRY_GROVE
	oG MUSIC_BIOME_NETHER_WASTES
	oH MUSIC_BIOME_FROZEN_PEAKS
	oI MUSIC_BIOME_SNOWY_SLOPES
	oJ MUSIC_BIOME_SOUL_SAND_VALLEY
	oK MUSIC_BIOME_STONY_PEAKS
	oL MUSIC_BIOME_WARPED_FOREST
	oM MUSIC_BIOME_FLOWER_FOREST
	oN MUSIC_BIOME_DESERT
	oO MUSIC_BIOME_BADLANDS
	oP MUSIC_BIOME_JUNGLE
	oQ MUSIC_BIOME_SPARSE_JUNGLE
	oR MUSIC_BIOME_BAMBOO_JUNGLE
	oS MUSIC_UNDER_WATER
	oT NETHER_BRICKS_BREAK
	oU NETHER_BRICKS_STEP
	oV NETHER_BRICKS_PLACE
	oW NETHER_BRICKS_HIT
	oX NETHER_BRICKS_FALL
	oY NETHER_WART_BREAK
	oZ NETHER_WART_PLANTED
	pa NETHER_WOOD_BREAK
	pb NETHER_WOOD_FALL
	pc NETHER_WOOD_HIT
	pd NETHER_WOOD_PLACE
	pe NETHER_WOOD_STEP
	pf NETHER_WOOD_DOOR_CLOSE
	pg NETHER_WOOD_DOOR_OPEN
	ph NETHER_WOOD_TRAPDOOR_CLOSE
	pi NETHER_WOOD_TRAPDOOR_OPEN
	pj NETHER_WOOD_BUTTON_CLICK_OFF
	pk NETHER_WOOD_BUTTON_CLICK_ON
	pl NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	pm NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	pn NETHER_WOOD_FENCE_GATE_CLOSE
	po NETHER_WOOD_FENCE_GATE_OPEN
	pp EMPTY
	pq PACKED_MUD_BREAK
	pr PACKED_MUD_FALL
	ps PACKED_MUD_HIT
	pt PACKED_MUD_PLACE
	pu PACKED_MUD_STEP
	pv STEM_BREAK
	pw STEM_STEP
	px STEM_PLACE
	py STEM_HIT
	pz STEM_FALL
	pA NYLIUM_BREAK
	pB NYLIUM_STEP
	pC NYLIUM_PLACE
	pD NYLIUM_HIT
	pE NYLIUM_FALL
	pF NETHER_SPROUTS_BREAK
	pG NETHER_SPROUTS_STEP
	pH NETHER_SPROUTS_PLACE
	pI NETHER_SPROUTS_HIT
	pJ NETHER_SPROUTS_FALL
	pK FUNGUS_BREAK
	pL FUNGUS_STEP
	pM FUNGUS_PLACE
	pN FUNGUS_HIT
	pO FUNGUS_FALL
	pP WEEPING_VINES_BREAK
	pQ WEEPING_VINES_STEP
	pR WEEPING_VINES_PLACE
	pS WEEPING_VINES_HIT
	pT WEEPING_VINES_FALL
	pU WART_BLOCK_BREAK
	pV WART_BLOCK_STEP
	pW WART_BLOCK_PLACE
	pX WART_BLOCK_HIT
	pY WART_BLOCK_FALL
	pZ NETHERITE_BLOCK_BREAK
	qa NETHERITE_BLOCK_STEP
	qb NETHERITE_BLOCK_PLACE
	qc NETHERITE_BLOCK_HIT
	qd NETHERITE_BLOCK_FALL
	qe NETHERRACK_BREAK
	qf NETHERRACK_STEP
	qg NETHERRACK_PLACE
	qh NETHERRACK_HIT
	qi NETHERRACK_FALL
	qj NOTE_BLOCK_BASEDRUM
	qk NOTE_BLOCK_BASS
	ql NOTE_BLOCK_BELL
	qm NOTE_BLOCK_CHIME
	qn NOTE_BLOCK_FLUTE
	qo NOTE_BLOCK_GUITAR
	qp NOTE_BLOCK_HARP
	qq NOTE_BLOCK_HAT
	qr NOTE_BLOCK_PLING
	qs NOTE_BLOCK_SNARE
	qt NOTE_BLOCK_XYLOPHONE
	qu NOTE_BLOCK_IRON_XYLOPHONE
	qv NOTE_BLOCK_COW_BELL
	qw NOTE_BLOCK_DIDGERIDOO
	qx NOTE_BLOCK_BIT
	qy NOTE_BLOCK_BANJO
	qz NOTE_BLOCK_IMITATE_ZOMBIE
	qA NOTE_BLOCK_IMITATE_SKELETON
	qB NOTE_BLOCK_IMITATE_CREEPER
	qC NOTE_BLOCK_IMITATE_ENDER_DRAGON
	qD NOTE_BLOCK_IMITATE_WITHER_SKELETON
	qE NOTE_BLOCK_IMITATE_PIGLIN
	qF OCELOT_HURT
	qG OCELOT_AMBIENT
	qH OCELOT_DEATH
	qI PAINTING_BREAK
	qJ PAINTING_PLACE
	qK PANDA_PRE_SNEEZE
	qL PANDA_SNEEZE
	qM PANDA_AMBIENT
	qN PANDA_DEATH
	qO PANDA_EAT
	qP PANDA_STEP
	qQ PANDA_CANT_BREED
	qR PANDA_AGGRESSIVE_AMBIENT
	qS PANDA_WORRIED_AMBIENT
	qT PANDA_HURT
	qU PANDA_BITE
	qV PARROT_AMBIENT
	qW PARROT_DEATH
	qX PARROT_EAT
	qY PARROT_FLY
	qZ PARROT_HURT
	ra PARROT_IMITATE_BLAZE
	rb PARROT_IMITATE_CREEPER
	rc PARROT_IMITATE_DROWNED
	rd PARROT_IMITATE_ELDER_GUARDIAN
	re PARROT_IMITATE_ENDER_DRAGON
	rf PARROT_IMITATE_ENDERMITE
	rg PARROT_IMITATE_EVOKER
	rh PARROT_IMITATE_GHAST
	ri PARROT_IMITATE_GUARDIAN
	rj PARROT_IMITATE_HOGLIN
	rk PARROT_IMITATE_HUSK
	rl PARROT_IMITATE_ILLUSIONER
	rm PARROT_IMITATE_MAGMA_CUBE
	rn PARROT_IMITATE_PHANTOM
	ro PARROT_IMITATE_PIGLIN
	rp PARROT_IMITATE_PIGLIN_BRUTE
	rq PARROT_IMITATE_PILLAGER
	rr PARROT_IMITATE_RAVAGER
	rs PARROT_IMITATE_SHULKER
	rt PARROT_IMITATE_SILVERFISH
	ru PARROT_IMITATE_SKELETON
	rv PARROT_IMITATE_SLIME
	rw PARROT_IMITATE_SPIDER
	rx PARROT_IMITATE_STRAY
	ry PARROT_IMITATE_VEX
	rz PARROT_IMITATE_VINDICATOR
	rA PARROT_IMITATE_WARDEN
	rB PARROT_IMITATE_WITCH
	rC PARROT_IMITATE_WITHER
	rD PARROT_IMITATE_WITHER_SKELETON
	rE PARROT_IMITATE_ZOGLIN
	rF PARROT_IMITATE_ZOMBIE
	rG PARROT_IMITATE_ZOMBIE_VILLAGER
	rH PARROT_STEP
	rI PHANTOM_AMBIENT
	rJ PHANTOM_BITE
	rK PHANTOM_DEATH
	rL PHANTOM_FLAP
	rM PHANTOM_HURT
	rN PHANTOM_SWOOP
	rO PIG_AMBIENT
	rP PIG_DEATH
	rQ PIG_HURT
	rR PIG_SADDLE
	rS PIG_STEP
	rT PIGLIN_ADMIRING_ITEM
	rU PIGLIN_AMBIENT
	rV PIGLIN_ANGRY
	rW PIGLIN_CELEBRATE
	rX PIGLIN_DEATH
	rY PIGLIN_JEALOUS
	rZ PIGLIN_HURT
	sa PIGLIN_RETREAT
	sb PIGLIN_STEP
	sc PIGLIN_CONVERTED_TO_ZOMBIFIED
	sd PIGLIN_BRUTE_AMBIENT
	se PIGLIN_BRUTE_ANGRY
	sf PIGLIN_BRUTE_DEATH
	sg PIGLIN_BRUTE_HURT
	sh PIGLIN_BRUTE_STEP
	si PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	sj PILLAGER_AMBIENT
	sk PILLAGER_CELEBRATE
	sl PILLAGER_DEATH
	sm PILLAGER_HURT
	sn PISTON_CONTRACT
	so PISTON_EXTEND
	sp PLAYER_ATTACK_CRIT
	sq PLAYER_ATTACK_KNOCKBACK
	sr PLAYER_ATTACK_NODAMAGE
	ss PLAYER_ATTACK_STRONG
	st PLAYER_ATTACK_SWEEP
	su PLAYER_ATTACK_WEAK
	sv PLAYER_BIG_FALL
	sw PLAYER_BREATH
	sx PLAYER_BURP
	sy PLAYER_DEATH
	sz PLAYER_HURT
	sA PLAYER_HURT_DROWN
	sB PLAYER_HURT_FREEZE
	sC PLAYER_HURT_ON_FIRE
	sD PLAYER_HURT_SWEET_BERRY_BUSH
	sE PLAYER_LEVELUP
	sF PLAYER_SMALL_FALL
	sG PLAYER_SPLASH
	sH PLAYER_SPLASH_HIGH_SPEED
	sI PLAYER_SWIM
	sJ POLAR_BEAR_AMBIENT
	sK POLAR_BEAR_AMBIENT_BABY
	sL POLAR_BEAR_DEATH
	sM POLAR_BEAR_HURT
	sN POLAR_BEAR_STEP
	sO POLAR_BEAR_WARNING
	sP POLISHED_DEEPSLATE_BREAK
	sQ POLISHED_DEEPSLATE_FALL
	sR POLISHED_DEEPSLATE_HIT
	sS POLISHED_DEEPSLATE_PLACE
	sT POLISHED_DEEPSLATE_STEP
	sU PORTAL_AMBIENT
	sV PORTAL_TRAVEL
	sW PORTAL_TRIGGER
	sX POWDER_SNOW_BREAK
	sY POWDER_SNOW_FALL
	sZ POWDER_SNOW_HIT
	ta POWDER_SNOW_PLACE
	tb POWDER_SNOW_STEP
	tc PUFFER_FISH_AMBIENT
	td PUFFER_FISH_BLOW_OUT
	te PUFFER_FISH_BLOW_UP
	tf PUFFER_FISH_DEATH
	tg PUFFER_FISH_FLOP
	th PUFFER_FISH_HURT
	ti PUFFER_FISH_STING
	tj PUMPKIN_CARVE
	tk RABBIT_AMBIENT
	tl RABBIT_ATTACK
	tm RABBIT_DEATH
	tn RABBIT_HURT
	to RABBIT_JUMP
	tp RAID_HORN
	tq RAVAGER_AMBIENT
	tr RAVAGER_ATTACK
	ts RAVAGER_CELEBRATE
	tt RAVAGER_DEATH
	tu RAVAGER_HURT
	tv RAVAGER_STEP
	tw RAVAGER_STUNNED
	tx RAVAGER_ROAR
	ty NETHER_GOLD_ORE_BREAK
	tz NETHER_GOLD_ORE_FALL
	tA NETHER_GOLD_ORE_HIT
	tB NETHER_GOLD_ORE_PLACE
	tC NETHER_GOLD_ORE_STEP
	tD NETHER_ORE_BREAK
	tE NETHER_ORE_FALL
	tF NETHER_ORE_HIT
	tG NETHER_ORE_PLACE
	tH NETHER_ORE_STEP
	tI REDSTONE_TORCH_BURNOUT
	tJ RESPAWN_ANCHOR_AMBIENT
	tK RESPAWN_ANCHOR_CHARGE
	tL RESPAWN_ANCHOR_DEPLETE
	tM RESPAWN_ANCHOR_SET_SPAWN
	tN ROOTED_DIRT_BREAK
	tO ROOTED_DIRT_FALL
	tP ROOTED_DIRT_HIT
	tQ ROOTED_DIRT_PLACE
	tR ROOTED_DIRT_STEP
	tS SALMON_AMBIENT
	tT SALMON_DEATH
	tU SALMON_FLOP
	tV SALMON_HURT
	tW SAND_BREAK
	tX SAND_FALL
	tY SAND_HIT
	tZ SAND_PLACE
	ua SAND_STEP
	ub SCAFFOLDING_BREAK
	uc SCAFFOLDING_FALL
	ud SCAFFOLDING_HIT
	ue SCAFFOLDING_PLACE
	uf SCAFFOLDING_STEP
	ug SCULK_BLOCK_SPREAD
	uh SCULK_BLOCK_CHARGE
	ui SCULK_BLOCK_BREAK
	uj SCULK_BLOCK_FALL
	uk SCULK_BLOCK_HIT
	ul SCULK_BLOCK_PLACE
	um SCULK_BLOCK_STEP
	un SCULK_CATALYST_BLOOM
	uo SCULK_CATALYST_BREAK
	up SCULK_CATALYST_FALL
	uq SCULK_CATALYST_HIT
	ur SCULK_CATALYST_PLACE
	us SCULK_CATALYST_STEP
	ut SCULK_CLICKING
	uu SCULK_CLICKING_STOP
	uv SCULK_SENSOR_BREAK
	uw SCULK_SENSOR_FALL
	ux SCULK_SENSOR_HIT
	uy SCULK_SENSOR_PLACE
	uz SCULK_SENSOR_STEP
	uA SCULK_SHRIEKER_BREAK
	uB SCULK_SHRIEKER_FALL
	uC SCULK_SHRIEKER_HIT
	uD SCULK_SHRIEKER_PLACE
	uE SCULK_SHRIEKER_SHRIEK
	uF SCULK_SHRIEKER_STEP
	uG SCULK_VEIN_BREAK
	uH SCULK_VEIN_FALL
	uI SCULK_VEIN_HIT
	uJ SCULK_VEIN_PLACE
	uK SCULK_VEIN_STEP
	uL SHEEP_AMBIENT
	uM SHEEP_DEATH
	uN SHEEP_HURT
	uO SHEEP_SHEAR
	uP SHEEP_STEP
	uQ SHIELD_BLOCK
	uR SHIELD_BREAK
	uS SHROOMLIGHT_BREAK
	uT SHROOMLIGHT_STEP
	uU SHROOMLIGHT_PLACE
	uV SHROOMLIGHT_HIT
	uW SHROOMLIGHT_FALL
	uX SHOVEL_FLATTEN
	uY SHULKER_AMBIENT
	uZ SHULKER_BOX_CLOSE
	va SHULKER_BOX_OPEN
	vb SHULKER_BULLET_HIT
	vc SHULKER_BULLET_HURT
	vd SHULKER_CLOSE
	ve SHULKER_DEATH
	vf SHULKER_HURT
	vg SHULKER_HURT_CLOSED
	vh SHULKER_OPEN
	vi SHULKER_SHOOT
	vj SHULKER_TELEPORT
	vk SILVERFISH_AMBIENT
	vl SILVERFISH_DEATH
	vm SILVERFISH_HURT
	vn SILVERFISH_STEP
	vo SKELETON_AMBIENT
	vp SKELETON_CONVERTED_TO_STRAY
	vq SKELETON_DEATH
	vr SKELETON_HORSE_AMBIENT
	vs SKELETON_HORSE_DEATH
	vt SKELETON_HORSE_HURT
	vu SKELETON_HORSE_SWIM
	vv SKELETON_HORSE_AMBIENT_WATER
	vw SKELETON_HORSE_GALLOP_WATER
	vx SKELETON_HORSE_JUMP_WATER
	vy SKELETON_HORSE_STEP_WATER
	vz SKELETON_HURT
	vA SKELETON_SHOOT
	vB SKELETON_STEP
	vC SLIME_ATTACK
	vD SLIME_DEATH
	vE SLIME_HURT
	vF SLIME_JUMP
	vG SLIME_SQUISH
	vH SLIME_BLOCK_BREAK
	vI SLIME_BLOCK_FALL
	vJ SLIME_BLOCK_HIT
	vK SLIME_BLOCK_PLACE
	vL SLIME_BLOCK_STEP
	vM SMALL_AMETHYST_BUD_BREAK
	vN SMALL_AMETHYST_BUD_PLACE
	vO SMALL_DRIPLEAF_BREAK
	vP SMALL_DRIPLEAF_FALL
	vQ SMALL_DRIPLEAF_HIT
	vR SMALL_DRIPLEAF_PLACE
	vS SMALL_DRIPLEAF_STEP
	vT SOUL_SAND_BREAK
	vU SOUL_SAND_STEP
	vV SOUL_SAND_PLACE
	vW SOUL_SAND_HIT
	vX SOUL_SAND_FALL
	vY SOUL_SOIL_BREAK
	vZ SOUL_SOIL_STEP
	wa SOUL_SOIL_PLACE
	wb SOUL_SOIL_HIT
	wc SOUL_SOIL_FALL
	wd SOUL_ESCAPE
	we SPORE_BLOSSOM_BREAK
	wf SPORE_BLOSSOM_FALL
	wg SPORE_BLOSSOM_HIT
	wh SPORE_BLOSSOM_PLACE
	wi SPORE_BLOSSOM_STEP
	wj STRIDER_AMBIENT
	wk STRIDER_HAPPY
	wl STRIDER_RETREAT
	wm STRIDER_DEATH
	wn STRIDER_HURT
	wo STRIDER_STEP
	wp STRIDER_STEP_LAVA
	wq STRIDER_EAT
	wr STRIDER_SADDLE
	ws SLIME_DEATH_SMALL
	wt SLIME_HURT_SMALL
	wu SLIME_JUMP_SMALL
	wv SLIME_SQUISH_SMALL
	ww SMITHING_TABLE_USE
	wx SMOKER_SMOKE
	wy SNIFFER_STEP
	wz SNIFFER_EAT
	wA SNIFFER_IDLE
	wB SNIFFER_HURT
	wC SNIFFER_DEATH
	wD SNIFFER_DROP_SEED
	wE SNIFFER_SCENTING
	wF SNIFFER_SNIFFING
	wG SNIFFER_SEARCHING
	wH SNIFFER_DIGGING
	wI SNIFFER_DIGGING_STOP
	wJ SNIFFER_HAPPY
	wK SNIFFER_EGG_PLOP
	wL SNIFFER_EGG_CRACK
	wM SNIFFER_EGG_HATCH
	wN SNOWBALL_THROW
	wO SNOW_BREAK
	wP SNOW_FALL
	wQ SNOW_GOLEM_AMBIENT
	wR SNOW_GOLEM_DEATH
	wS SNOW_GOLEM_HURT
	wT SNOW_GOLEM_SHOOT
	wU SNOW_GOLEM_SHEAR
	wV SNOW_HIT
	wW SNOW_PLACE
	wX SNOW_STEP
	wY SPIDER_AMBIENT
	wZ SPIDER_DEATH
	xa SPIDER_HURT
	xb SPIDER_STEP
	xc SPLASH_POTION_BREAK
	xd SPLASH_POTION_THROW
	xe SPYGLASS_USE
	xf SPYGLASS_STOP_USING
	xg SQUID_AMBIENT
	xh SQUID_DEATH
	xi SQUID_HURT
	xj SQUID_SQUIRT
	xk STONE_BREAK
	xl STONE_BUTTON_CLICK_OFF
	xm STONE_BUTTON_CLICK_ON
	xn STONE_FALL
	xo STONE_HIT
	xp STONE_PLACE
	xq STONE_PRESSURE_PLATE_CLICK_OFF
	xr STONE_PRESSURE_PLATE_CLICK_ON
	xs STONE_STEP
	xt STRAY_AMBIENT
	xu STRAY_DEATH
	xv STRAY_HURT
	xw STRAY_STEP
	xx SWEET_BERRY_BUSH_BREAK
	xy SWEET_BERRY_BUSH_PLACE
	xz SWEET_BERRY_BUSH_PICK_BERRIES
	xA TADPOLE_DEATH
	xB TADPOLE_FLOP
	xC TADPOLE_GROW_UP
	xD TADPOLE_HURT
	xE THORNS_HIT
	xF TNT_PRIMED
	xG TOTEM_USE
	xH TRIDENT_HIT
	xI TRIDENT_HIT_GROUND
	xJ TRIDENT_RETURN
	xK TRIDENT_RIPTIDE_1
	xL TRIDENT_RIPTIDE_2
	xM TRIDENT_RIPTIDE_3
	xN TRIDENT_THROW
	xO TRIDENT_THUNDER
	xP TRIPWIRE_ATTACH
	xQ TRIPWIRE_CLICK_OFF
	xR TRIPWIRE_CLICK_ON
	xS TRIPWIRE_DETACH
	xT TROPICAL_FISH_AMBIENT
	xU TROPICAL_FISH_DEATH
	xV TROPICAL_FISH_FLOP
	xW TROPICAL_FISH_HURT
	xX TUFF_BREAK
	xY TUFF_STEP
	xZ TUFF_PLACE
	ya TUFF_HIT
	yb TUFF_FALL
	yc TURTLE_AMBIENT_LAND
	yd TURTLE_DEATH
	ye TURTLE_DEATH_BABY
	yf TURTLE_EGG_BREAK
	yg TURTLE_EGG_CRACK
	yh TURTLE_EGG_HATCH
	yi TURTLE_HURT
	yj TURTLE_HURT_BABY
	yk TURTLE_LAY_EGG
	yl TURTLE_SHAMBLE
	ym TURTLE_SHAMBLE_BABY
	yn TURTLE_SWIM
	yo UI_BUTTON_CLICK
	yp UI_LOOM_SELECT_PATTERN
	yq UI_LOOM_TAKE_RESULT
	yr UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	ys UI_STONECUTTER_TAKE_RESULT
	yt UI_STONECUTTER_SELECT_RECIPE
	yu UI_TOAST_CHALLENGE_COMPLETE
	yv UI_TOAST_IN
	yw UI_TOAST_OUT
	yx VEX_AMBIENT
	yy VEX_CHARGE
	yz VEX_DEATH
	yA VEX_HURT
	yB VILLAGER_AMBIENT
	yC VILLAGER_CELEBRATE
	yD VILLAGER_DEATH
	yE VILLAGER_HURT
	yF VILLAGER_NO
	yG VILLAGER_TRADE
	yH VILLAGER_YES
	yI VILLAGER_WORK_ARMORER
	yJ VILLAGER_WORK_BUTCHER
	yK VILLAGER_WORK_CARTOGRAPHER
	yL VILLAGER_WORK_CLERIC
	yM VILLAGER_WORK_FARMER
	yN VILLAGER_WORK_FISHERMAN
	yO VILLAGER_WORK_FLETCHER
	yP VILLAGER_WORK_LEATHERWORKER
	yQ VILLAGER_WORK_LIBRARIAN
	yR VILLAGER_WORK_MASON
	yS VILLAGER_WORK_SHEPHERD
	yT VILLAGER_WORK_TOOLSMITH
	yU VILLAGER_WORK_WEAPONSMITH
	yV VINDICATOR_AMBIENT
	yW VINDICATOR_CELEBRATE
	yX VINDICATOR_DEATH
	yY VINDICATOR_HURT
	yZ VINE_BREAK
	za VINE_FALL
	zb VINE_HIT
	zc VINE_PLACE
	zd VINE_STEP
	ze LILY_PAD_PLACE
	zf WANDERING_TRADER_AMBIENT
	zg WANDERING_TRADER_DEATH
	zh WANDERING_TRADER_DISAPPEARED
	zi WANDERING_TRADER_DRINK_MILK
	zj WANDERING_TRADER_DRINK_POTION
	zk WANDERING_TRADER_HURT
	zl WANDERING_TRADER_NO
	zm WANDERING_TRADER_REAPPEARED
	zn WANDERING_TRADER_TRADE
	zo WANDERING_TRADER_YES
	zp WARDEN_AGITATED
	zq WARDEN_AMBIENT
	zr WARDEN_ANGRY
	zs WARDEN_ATTACK_IMPACT
	zt WARDEN_DEATH
	zu WARDEN_DIG
	zv WARDEN_EMERGE
	zw WARDEN_HEARTBEAT
	zx WARDEN_HURT
	zy WARDEN_LISTENING
	zz WARDEN_LISTENING_ANGRY
	zA WARDEN_NEARBY_CLOSE
	zB WARDEN_NEARBY_CLOSER
	zC WARDEN_NEARBY_CLOSEST
	zD WARDEN_ROAR
	zE WARDEN_SNIFF
	zF WARDEN_SONIC_BOOM
	zG WARDEN_SONIC_CHARGE
	zH WARDEN_STEP
	zI WARDEN_TENDRIL_CLICKS
	zJ WAXED_SIGN_INTERACT_FAIL
	zK WATER_AMBIENT
	zL WEATHER_RAIN
	zM WEATHER_RAIN_ABOVE
	zN WET_GRASS_BREAK
	zO WET_GRASS_FALL
	zP WET_GRASS_HIT
	zQ WET_GRASS_PLACE
	zR WET_GRASS_STEP
	zS WITCH_AMBIENT
	zT WITCH_CELEBRATE
	zU WITCH_DEATH
	zV WITCH_DRINK
	zW WITCH_HURT
	zX WITCH_THROW
	zY WITHER_AMBIENT
	zZ WITHER_BREAK_BLOCK
	Aa WITHER_DEATH
	Ab WITHER_HURT
	Ac WITHER_SHOOT
	Ad WITHER_SKELETON_AMBIENT
	Ae WITHER_SKELETON_DEATH
	Af WITHER_SKELETON_HURT
	Ag WITHER_SKELETON_STEP
	Ah WITHER_SPAWN
	Ai WOLF_AMBIENT
	Aj WOLF_DEATH
	Ak WOLF_GROWL
	Al WOLF_HOWL
	Am WOLF_HURT
	An WOLF_PANT
	Ao WOLF_SHAKE
	Ap WOLF_STEP
	Aq WOLF_WHINE
	Ar WOODEN_DOOR_CLOSE
	As WOODEN_DOOR_OPEN
	At WOODEN_TRAPDOOR_CLOSE
	Au WOODEN_TRAPDOOR_OPEN
	Av WOODEN_BUTTON_CLICK_OFF
	Aw WOODEN_BUTTON_CLICK_ON
	Ax WOODEN_PRESSURE_PLATE_CLICK_OFF
	Ay WOODEN_PRESSURE_PLATE_CLICK_ON
	Az WOOD_BREAK
	AA WOOD_FALL
	AB WOOD_HIT
	AC WOOD_PLACE
	AD WOOD_STEP
	AE WOOL_BREAK
	AF WOOL_FALL
	AG WOOL_HIT
	AH WOOL_PLACE
	AI WOOL_STEP
	AJ ZOGLIN_AMBIENT
	AK ZOGLIN_ANGRY
	AL ZOGLIN_ATTACK
	AM ZOGLIN_DEATH
	AN ZOGLIN_HURT
	AO ZOGLIN_STEP
	AP ZOMBIE_AMBIENT
	AQ ZOMBIE_ATTACK_WOODEN_DOOR
	AR ZOMBIE_ATTACK_IRON_DOOR
	AS ZOMBIE_BREAK_WOODEN_DOOR
	AT ZOMBIE_CONVERTED_TO_DROWNED
	AU ZOMBIE_DEATH
	AV ZOMBIE_DESTROY_EGG
	AW ZOMBIE_HORSE_AMBIENT
	AX ZOMBIE_HORSE_DEATH
	AY ZOMBIE_HORSE_HURT
	AZ ZOMBIE_HURT
	Ba ZOMBIE_INFECT
	Bb ZOMBIFIED_PIGLIN_AMBIENT
	Bc ZOMBIFIED_PIGLIN_ANGRY
	Bd ZOMBIFIED_PIGLIN_DEATH
	Be ZOMBIFIED_PIGLIN_HURT
	Bf ZOMBIE_STEP
	Bg ZOMBIE_VILLAGER_AMBIENT
	Bh ZOMBIE_VILLAGER_CONVERTED
	Bi ZOMBIE_VILLAGER_CURE
	Bj ZOMBIE_VILLAGER_DEATH
	Bk ZOMBIE_VILLAGER_HURT
	Bl ZOMBIE_VILLAGER_STEP
	<init> ()V <init>
	a (Lacq;Lacq;F)Lhe; register
	a (Ljava/lang/String;)Lamg; register
	a (Lacq;)Lamg; register
	b (Ljava/lang/String;)Lhe$c; registerForHolder
	b (Lacq;)Lhe$c; registerForHolder
	a (Lacq;Lacq;)Lamg; register
	b (Lacq;Lacq;)Lhe$c; registerForHolder
	a ()Lcom/google/common/collect/ImmutableList; registerGoatHornSoundVariants
	a (I)Lhe$c; lambda$registerGoatHornSoundVariants$0
	<clinit> ()V <clinit>
ami net/minecraft/sounds/SoundSource
	a MASTER
	b MUSIC
	c RECORDS
	d WEATHER
	e BLOCKS
	f HOSTILE
	g NEUTRAL
	h PLAYERS
	i AMBIENT
	j VOICE
	k name
	l $VALUES
	values ()[Lami; values
	valueOf (Ljava/lang/String;)Lami; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	b ()[Lami; $values
	<clinit> ()V <clinit>
amj net/minecraft/sounds/package-info
amk net/minecraft/stats/RecipeBook
	a known
	b highlight
	c bookSettings
	<init> ()V <init>
	a (Lamk;)V copyOverData
	a (Lcjc;)V add
	a (Lacq;)V add
	b (Lcjc;)Z contains
	b (Lacq;)Z contains
	c (Lcjc;)V remove
	c (Lacq;)V remove
	d (Lcjc;)Z willHighlight
	e (Lcjc;)V removeHighlight
	f (Lcjc;)V addHighlight
	d (Lacq;)V addHighlight
	a (Lccq;)Z isOpen
	a (Lccq;Z)V setOpen
	a (Lccp;)Z isFiltering
	b (Lccq;)Z isFiltering
	b (Lccq;Z)V setFiltering
	a (Laml;)V setBookSettings
	a ()Laml; getBookSettings
	a (Lccq;ZZ)V setBookSetting
aml net/minecraft/stats/RecipeBookSettings
	a TAG_FIELDS
	b states
	<init> (Ljava/util/Map;)V <init>
	<init> ()V <init>
	a (Lccq;)Z isOpen
	a (Lccq;Z)V setOpen
	b (Lccq;)Z isFiltering
	b (Lccq;Z)V setFiltering
	a (Lsf;)Laml; read
	b (Lsf;)V write
	a (Lqr;)Laml; read
	b (Lqr;)V write
	a ()Laml; copy
	a (Laml;)V replaceFrom
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lqr;Lccq;Lcom/mojang/datafixers/util/Pair;)V lambda$write$2
	a (Lqr;Ljava/util/Map;Lccq;Lcom/mojang/datafixers/util/Pair;)V lambda$read$1
	a (Ljava/util/EnumMap;)V lambda$new$0
	<clinit> ()V <clinit>
aml$a net/minecraft/stats/RecipeBookSettings$TypeSettings
	a open
	b filtering
	<init> (ZZ)V <init>
	a ()Laml$a; copy
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
amm net/minecraft/stats/ServerRecipeBook
	c RECIPE_BOOK_TAG
	d LOGGER
	<init> ()V <init>
	a (Ljava/util/Collection;Laig;)I addRecipes
	b (Ljava/util/Collection;Laig;)I removeRecipes
	a (Lxb$a;Laig;Ljava/util/List;)V sendRecipes
	b ()Lqr; toNbt
	a (Lqr;Lcjd;)V fromNbt
	a (Lqx;Ljava/util/function/Consumer;Lcjd;)V loadRecipes
	a (Laig;)V sendInitialRecipeBook
	<clinit> ()V <clinit>
amn net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	<init> (Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V <init>
	a ()V save
	a (Lbyo;Lamo;I)V setValue
	d ()Ljava/util/Set; getDirty
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Lamq;Ljava/lang/String;)Ljava/util/Optional; getStat
	a (Lcom/google/gson/JsonObject;)Lqr; fromJson
	b ()Ljava/lang/String; toJson
	b (Lamo;)Lacq; getKey
	c ()V markAllDirty
	a (Laig;)V sendStats
	a (Lamq;)Lcom/google/gson/JsonObject; lambda$toJson$4
	a (Ljava/lang/String;)V lambda$parseLocal$3
	a (Lqr;Ljava/lang/String;Lamq;)V lambda$parseLocal$2
	b (Ljava/lang/String;)V lambda$parseLocal$1
	a (Lqr;Ljava/lang/String;Lamo;)V lambda$parseLocal$0
	<clinit> ()V <clinit>
amo net/minecraft/stats/Stat
	n formatter
	o value
	p type
	<init> (Lamq;Ljava/lang/Object;Lamp;)V <init>
	a (Lamq;Ljava/lang/Object;)Ljava/lang/String; buildName
	a (Lacq;)Ljava/lang/String; locationToKey
	a ()Lamq; getType
	b ()Ljava/lang/Object; getValue
	a (I)Ljava/lang/String; format
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
amp net/minecraft/stats/StatFormatter
	a DECIMAL_FORMAT
	b DEFAULT
	c DIVIDE_BY_TEN
	d DISTANCE
	e TIME
	format (I)Ljava/lang/String; format
	a (I)Ljava/lang/String; lambda$static$3
	b (I)Ljava/lang/String; lambda$static$2
	c (I)Ljava/lang/String; lambda$static$1
	a (Ljava/text/DecimalFormat;)V lambda$static$0
	<clinit> ()V <clinit>
amq net/minecraft/stats/StatType
	a registry
	b map
	c displayName
	<init> (Lhr;)V <init>
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lamp;)Lamo; get
	a ()Lhr; getRegistry
	iterator ()Ljava/util/Iterator; iterator
	b (Ljava/lang/Object;)Lamo; get
	b ()Ljava/lang/String; getTranslationKey
	c ()Lsw; getDisplayName
	a (Lamp;Ljava/lang/Object;)Lamo; lambda$get$0
amr net/minecraft/stats/Stats
	a BLOCK_MINED
	b ITEM_CRAFTED
	c ITEM_USED
	d ITEM_BROKEN
	e ITEM_PICKED_UP
	f ITEM_DROPPED
	g ENTITY_KILLED
	h ENTITY_KILLED_BY
	i CUSTOM
	j LEAVE_GAME
	k PLAY_TIME
	l TOTAL_WORLD_TIME
	m TIME_SINCE_DEATH
	n TIME_SINCE_REST
	o CROUCH_TIME
	p WALK_ONE_CM
	q CROUCH_ONE_CM
	r SPRINT_ONE_CM
	s WALK_ON_WATER_ONE_CM
	t FALL_ONE_CM
	u CLIMB_ONE_CM
	v FLY_ONE_CM
	w WALK_UNDER_WATER_ONE_CM
	x MINECART_ONE_CM
	y BOAT_ONE_CM
	z PIG_ONE_CM
	A HORSE_ONE_CM
	B AVIATE_ONE_CM
	C SWIM_ONE_CM
	D STRIDER_ONE_CM
	E JUMP
	F DROP
	G DAMAGE_DEALT
	H DAMAGE_DEALT_ABSORBED
	I DAMAGE_DEALT_RESISTED
	J DAMAGE_TAKEN
	K DAMAGE_BLOCKED_BY_SHIELD
	L DAMAGE_ABSORBED
	M DAMAGE_RESISTED
	N DEATHS
	O MOB_KILLS
	P ANIMALS_BRED
	Q PLAYER_KILLS
	R FISH_CAUGHT
	S TALKED_TO_VILLAGER
	T TRADED_WITH_VILLAGER
	U EAT_CAKE_SLICE
	V FILL_CAULDRON
	W USE_CAULDRON
	X CLEAN_ARMOR
	Y CLEAN_BANNER
	Z CLEAN_SHULKER_BOX
	aa INTERACT_WITH_BREWINGSTAND
	ab INTERACT_WITH_BEACON
	ac INSPECT_DROPPER
	ad INSPECT_HOPPER
	ae INSPECT_DISPENSER
	af PLAY_NOTEBLOCK
	ag TUNE_NOTEBLOCK
	ah POT_FLOWER
	ai TRIGGER_TRAPPED_CHEST
	aj OPEN_ENDERCHEST
	ak ENCHANT_ITEM
	al PLAY_RECORD
	am INTERACT_WITH_FURNACE
	an INTERACT_WITH_CRAFTING_TABLE
	ao OPEN_CHEST
	ap SLEEP_IN_BED
	aq OPEN_SHULKER_BOX
	ar OPEN_BARREL
	as INTERACT_WITH_BLAST_FURNACE
	at INTERACT_WITH_SMOKER
	au INTERACT_WITH_LECTERN
	av INTERACT_WITH_CAMPFIRE
	aw INTERACT_WITH_CARTOGRAPHY_TABLE
	ax INTERACT_WITH_LOOM
	ay INTERACT_WITH_STONECUTTER
	az BELL_RING
	aA RAID_TRIGGER
	aB RAID_WIN
	aC INTERACT_WITH_ANVIL
	aD INTERACT_WITH_GRINDSTONE
	aE TARGET_HIT
	aF INTERACT_WITH_SMITHING_TABLE
	<init> ()V <init>
	a (Ljava/lang/String;Lamp;)Lacq; makeCustomStat
	a (Ljava/lang/String;Lhr;)Lamq; makeRegistryStatType
	<clinit> ()V <clinit>
ams net/minecraft/stats/StatsCounter
	a stats
	<init> ()V <init>
	b (Lbyo;Lamo;I)V increment
	a (Lbyo;Lamo;I)V setValue
	a (Lamq;Ljava/lang/Object;)I getValue
	a (Lamo;)I getValue
amt net/minecraft/stats/package-info
amu net/minecraft/tags/BannerPatternTags
	a NO_ITEM_REQUIRED
	b PATTERN_ITEM_FLOWER
	c PATTERN_ITEM_CREEPER
	d PATTERN_ITEM_SKULL
	e PATTERN_ITEM_MOJANG
	f PATTERN_ITEM_GLOBE
	g PATTERN_ITEM_PIGLIN
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
amv net/minecraft/tags/BiomeTags
	a IS_DEEP_OCEAN
	b IS_OCEAN
	c IS_BEACH
	d IS_RIVER
	e IS_MOUNTAIN
	f IS_BADLANDS
	g IS_HILL
	h IS_TAIGA
	i IS_JUNGLE
	j IS_FOREST
	k IS_SAVANNA
	l IS_OVERWORLD
	m IS_NETHER
	n IS_END
	o STRONGHOLD_BIASED_TO
	p HAS_BURIED_TREASURE
	q HAS_DESERT_PYRAMID
	r HAS_IGLOO
	s HAS_JUNGLE_TEMPLE
	t HAS_MINESHAFT
	u HAS_MINESHAFT_MESA
	v HAS_OCEAN_MONUMENT
	w HAS_OCEAN_RUIN_COLD
	x HAS_OCEAN_RUIN_WARM
	y HAS_PILLAGER_OUTPOST
	z HAS_RUINED_PORTAL_DESERT
	A HAS_RUINED_PORTAL_JUNGLE
	B HAS_RUINED_PORTAL_OCEAN
	C HAS_RUINED_PORTAL_SWAMP
	D HAS_RUINED_PORTAL_MOUNTAIN
	E HAS_RUINED_PORTAL_STANDARD
	F HAS_SHIPWRECK_BEACHED
	G HAS_SHIPWRECK
	H HAS_STRONGHOLD
	I HAS_SWAMP_HUT
	J HAS_VILLAGE_DESERT
	K HAS_VILLAGE_PLAINS
	L HAS_VILLAGE_SAVANNA
	M HAS_VILLAGE_SNOWY
	N HAS_VILLAGE_TAIGA
	O HAS_TRAIL_RUINS
	P HAS_WOODLAND_MANSION
	Q HAS_NETHER_FORTRESS
	R HAS_NETHER_FOSSIL
	S HAS_BASTION_REMNANT
	T HAS_ANCIENT_CITY
	U HAS_RUINED_PORTAL_NETHER
	V HAS_END_CITY
	W REQUIRED_OCEAN_MONUMENT_SURROUNDING
	X MINESHAFT_BLOCKING
	Y PLAYS_UNDERWATER_MUSIC
	Z HAS_CLOSER_WATER_FOG
	aa WATER_ON_MAP_OUTLINES
	ab PRODUCES_CORALS_FROM_BONEMEAL
	ac INCREASED_FIRE_BURNOUT
	ad SNOW_GOLEM_MELTS
	ae WITHOUT_ZOMBIE_SIEGES
	af WITHOUT_PATROL_SPAWNS
	ag WITHOUT_WANDERING_TRADER_SPAWNS
	ah SPAWNS_COLD_VARIANT_FROGS
	ai SPAWNS_WARM_VARIANT_FROGS
	aj SPAWNS_GOLD_RABBITS
	ak SPAWNS_WHITE_RABBITS
	al REDUCED_WATER_AMBIENT_SPAWNS
	am ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	an POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	ao MORE_FREQUENT_DROWNED_SPAWNS
	ap ALLOWS_SURFACE_SLIME_SPAWNS
	aq SPAWNS_SNOW_FOXES
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
amw net/minecraft/tags/BlockTags
	a WOOL
	b PLANKS
	c STONE_BRICKS
	d WOODEN_BUTTONS
	e STONE_BUTTONS
	f BUTTONS
	g WOOL_CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l PRESSURE_PLATES
	m WOODEN_PRESSURE_PLATES
	n STONE_PRESSURE_PLATES
	o WOODEN_TRAPDOORS
	p DOORS
	q SAPLINGS
	r LOGS_THAT_BURN
	s OVERWORLD_NATURAL_LOGS
	t LOGS
	u DARK_OAK_LOGS
	v OAK_LOGS
	w BIRCH_LOGS
	x ACACIA_LOGS
	y CHERRY_LOGS
	z JUNGLE_LOGS
	A SPRUCE_LOGS
	B MANGROVE_LOGS
	C CRIMSON_STEMS
	D WARPED_STEMS
	E BAMBOO_BLOCKS
	F WART_BLOCKS
	G BANNERS
	H SAND
	I SMELTS_TO_GLASS
	J STAIRS
	K SLABS
	L WALLS
	M ANVIL
	N RAILS
	O LEAVES
	P TRAPDOORS
	Q SMALL_FLOWERS
	R BEDS
	S FENCES
	T TALL_FLOWERS
	U FLOWERS
	V PIGLIN_REPELLENTS
	W GOLD_ORES
	X IRON_ORES
	Y DIAMOND_ORES
	Z REDSTONE_ORES
	aa LAPIS_ORES
	ab COAL_ORES
	ac EMERALD_ORES
	ad COPPER_ORES
	ae CANDLES
	af DIRT
	ag TERRACOTTA
	ah COMPLETES_FIND_TREE_TUTORIAL
	ai FLOWER_POTS
	aj ENDERMAN_HOLDABLE
	ak ICE
	al VALID_SPAWN
	am IMPERMEABLE
	an UNDERWATER_BONEMEALS
	ao CORAL_BLOCKS
	ap WALL_CORALS
	aq CORAL_PLANTS
	ar CORALS
	as BAMBOO_PLANTABLE_ON
	at STANDING_SIGNS
	au WALL_SIGNS
	av SIGNS
	aw CEILING_HANGING_SIGNS
	ax WALL_HANGING_SIGNS
	ay ALL_HANGING_SIGNS
	az ALL_SIGNS
	aA DRAGON_IMMUNE
	aB DRAGON_TRANSPARENT
	aC WITHER_IMMUNE
	aD WITHER_SUMMON_BASE_BLOCKS
	aE BEEHIVES
	aF CROPS
	aG BEE_GROWABLES
	aH PORTALS
	aI FIRE
	aJ NYLIUM
	aK BEACON_BASE_BLOCKS
	aL SOUL_SPEED_BLOCKS
	aM WALL_POST_OVERRIDE
	aN CLIMBABLE
	aO FALL_DAMAGE_RESETTING
	aP SHULKER_BOXES
	aQ HOGLIN_REPELLENTS
	aR SOUL_FIRE_BASE_BLOCKS
	aS STRIDER_WARM_BLOCKS
	aT CAMPFIRES
	aU GUARDED_BY_PIGLINS
	aV PREVENT_MOB_SPAWNING_INSIDE
	aW FENCE_GATES
	aX UNSTABLE_BOTTOM_CENTER
	aY MUSHROOM_GROW_BLOCK
	aZ INFINIBURN_OVERWORLD
	ba INFINIBURN_NETHER
	bb INFINIBURN_END
	bc BASE_STONE_OVERWORLD
	bd STONE_ORE_REPLACEABLES
	be DEEPSLATE_ORE_REPLACEABLES
	bf BASE_STONE_NETHER
	bg OVERWORLD_CARVER_REPLACEABLES
	bh NETHER_CARVER_REPLACEABLES
	bi CANDLE_CAKES
	bj CAULDRONS
	bk CRYSTAL_SOUND_BLOCKS
	bl INSIDE_STEP_SOUND_BLOCKS
	bm COMBINATION_STEP_SOUND_BLOCKS
	bn OCCLUDES_VIBRATION_SIGNALS
	bo DAMPENS_VIBRATIONS
	bp DRIPSTONE_REPLACEABLE
	bq CAVE_VINES
	br MOSS_REPLACEABLE
	bs LUSH_GROUND_REPLACEABLE
	bt AZALEA_ROOT_REPLACEABLE
	bu SMALL_DRIPLEAF_PLACEABLE
	bv BIG_DRIPLEAF_PLACEABLE
	bw SNOW
	bx MINEABLE_WITH_AXE
	by MINEABLE_WITH_HOE
	bz MINEABLE_WITH_PICKAXE
	bA MINEABLE_WITH_SHOVEL
	bB SWORD_EFFICIENT
	bC NEEDS_DIAMOND_TOOL
	bD NEEDS_IRON_TOOL
	bE NEEDS_STONE_TOOL
	bF FEATURES_CANNOT_REPLACE
	bG LAVA_POOL_STONE_CANNOT_REPLACE
	bH GEODE_INVALID_BLOCKS
	bI FROG_PREFER_JUMP_TO
	bJ SCULK_REPLACEABLE
	bK SCULK_REPLACEABLE_WORLD_GEN
	bL ANCIENT_CITY_REPLACEABLE
	bM VIBRATION_RESONATORS
	bN ANIMALS_SPAWNABLE_ON
	bO AXOLOTLS_SPAWNABLE_ON
	bP GOATS_SPAWNABLE_ON
	bQ MOOSHROOMS_SPAWNABLE_ON
	bR PARROTS_SPAWNABLE_ON
	bS POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	bT RABBITS_SPAWNABLE_ON
	bU FOXES_SPAWNABLE_ON
	bV WOLVES_SPAWNABLE_ON
	bW FROGS_SPAWNABLE_ON
	bX AZALEA_GROWS_ON
	bY CONVERTABLE_TO_MUD
	bZ MANGROVE_LOGS_CAN_GROW_THROUGH
	ca MANGROVE_ROOTS_CAN_GROW_THROUGH
	cb DEAD_BUSH_MAY_PLACE_ON
	cc SNAPS_GOAT_HORN
	cd REPLACEABLE_BY_TREES
	ce SNOW_LAYER_CANNOT_SURVIVE_ON
	cf SNOW_LAYER_CAN_SURVIVE_ON
	cg INVALID_SPAWN_INSIDE
	ch SNIFFER_DIGGABLE_BLOCK
	ci SNIFFER_EGG_HATCH_BOOST
	cj TRAIL_RUINS_REPLACEABLE
	ck REPLACEABLE
	cl ENCHANTMENT_POWER_PROVIDER
	cm ENCHANTMENT_POWER_TRANSMITTER
	cn MAINTAINS_FARMLAND
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
amx net/minecraft/tags/CatVariantTags
	a DEFAULT_SPAWNS
	b FULL_MOON_SPAWNS
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
amy net/minecraft/tags/DamageTypeTags
	a DAMAGES_HELMET
	b BYPASSES_ARMOR
	c BYPASSES_SHIELD
	d BYPASSES_INVULNERABILITY
	e BYPASSES_COOLDOWN
	f BYPASSES_EFFECTS
	g BYPASSES_RESISTANCE
	h BYPASSES_ENCHANTMENTS
	i IS_FIRE
	j IS_PROJECTILE
	k WITCH_RESISTANT_TO
	l IS_EXPLOSION
	m IS_FALL
	n IS_DROWNING
	o IS_FREEZING
	p IS_LIGHTNING
	q NO_ANGER
	r NO_IMPACT
	s ALWAYS_MOST_SIGNIFICANT_FALL
	t WITHER_IMMUNE_TO
	u IGNITES_ARMOR_STANDS
	v BURNS_ARMOR_STANDS
	w AVOIDS_GUARDIAN_THORNS
	x ALWAYS_TRIGGERS_SILVERFISH
	y ALWAYS_HURTS_ENDER_DRAGONS
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
amz net/minecraft/tags/EntityTypeTags
	a SKELETONS
	b RAIDERS
	c BEEHIVE_INHABITORS
	d ARROWS
	e IMPACT_PROJECTILES
	f POWDER_SNOW_WALKABLE_MOBS
	g AXOLOTL_ALWAYS_HOSTILES
	h AXOLOTL_HUNT_TARGETS
	i FREEZE_IMMUNE_ENTITY_TYPES
	j FREEZE_HURTS_EXTRA_TYPES
	k FROG_FOOD
	l FALL_DAMAGE_IMMUNE
	m DISMOUNTS_UNDERWATER
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
ana net/minecraft/tags/FlatLevelGeneratorPresetTags
	a VISIBLE
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
anb net/minecraft/tags/FluidTags
	a WATER
	b LAVA
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
anc net/minecraft/tags/GameEventTags
	a VIBRATIONS
	b WARDEN_CAN_LISTEN
	c SHRIEKER_CAN_LISTEN
	d IGNORE_VIBRATIONS_SNEAKING
	e ALLAY_CAN_LISTEN
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
and net/minecraft/tags/InstrumentTags
	a REGULAR_GOAT_HORNS
	b SCREAMING_GOAT_HORNS
	c GOAT_HORNS
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
ane net/minecraft/tags/ItemTags
	a WOOL
	b PLANKS
	c STONE_BRICKS
	d WOODEN_BUTTONS
	e STONE_BUTTONS
	f BUTTONS
	g WOOL_CARPETS
	h WOODEN_DOORS
	i WOODEN_STAIRS
	j WOODEN_SLABS
	k WOODEN_FENCES
	l FENCE_GATES
	m WOODEN_PRESSURE_PLATES
	n WOODEN_TRAPDOORS
	o DOORS
	p SAPLINGS
	q LOGS_THAT_BURN
	r LOGS
	s DARK_OAK_LOGS
	t OAK_LOGS
	u BIRCH_LOGS
	v ACACIA_LOGS
	w CHERRY_LOGS
	x JUNGLE_LOGS
	y SPRUCE_LOGS
	z MANGROVE_LOGS
	A CRIMSON_STEMS
	B WARPED_STEMS
	C BAMBOO_BLOCKS
	D WART_BLOCKS
	E BANNERS
	F SAND
	G SMELTS_TO_GLASS
	H STAIRS
	I SLABS
	J WALLS
	K ANVIL
	L RAILS
	M LEAVES
	N TRAPDOORS
	O SMALL_FLOWERS
	P BEDS
	Q FENCES
	R TALL_FLOWERS
	S FLOWERS
	T PIGLIN_REPELLENTS
	U PIGLIN_LOVED
	V IGNORED_BY_PIGLIN_BABIES
	W PIGLIN_FOOD
	X FOX_FOOD
	Y GOLD_ORES
	Z IRON_ORES
	aa DIAMOND_ORES
	ab REDSTONE_ORES
	ac LAPIS_ORES
	ad COAL_ORES
	ae EMERALD_ORES
	af COPPER_ORES
	ag NON_FLAMMABLE_WOOD
	ah SOUL_FIRE_BASE_BLOCKS
	ai CANDLES
	aj DIRT
	ak TERRACOTTA
	al COMPLETES_FIND_TREE_TUTORIAL
	am BOATS
	an CHEST_BOATS
	ao FISHES
	ap SIGNS
	aq MUSIC_DISCS
	ar CREEPER_DROP_MUSIC_DISCS
	as COALS
	at ARROWS
	au LECTERN_BOOKS
	av BOOKSHELF_BOOKS
	aw BEACON_PAYMENT_ITEMS
	ax STONE_TOOL_MATERIALS
	ay STONE_CRAFTING_MATERIALS
	az FREEZE_IMMUNE_WEARABLES
	aA AXOLOTL_TEMPT_ITEMS
	aB DAMPENS_VIBRATIONS
	aC CLUSTER_MAX_HARVESTABLES
	aD COMPASSES
	aE HANGING_SIGNS
	aF CREEPER_IGNITERS
	aG NOTE_BLOCK_TOP_INSTRUMENTS
	aH TRIMMABLE_ARMOR
	aI TRIM_MATERIALS
	aJ TRIM_TEMPLATES
	aK SNIFFER_FOOD
	aL DECORATED_POT_SHERDS
	aM DECORATED_POT_INGREDIENTS
	aN SWORDS
	aO AXES
	aP HOES
	aQ PICKAXES
	aR SHOVELS
	aS TOOLS
	aT BREAKS_DECORATED_POTS
	aU VILLAGER_PLANTABLE_SEEDS
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; bind
	<clinit> ()V <clinit>
anf net/minecraft/tags/PaintingVariantTags
	a PLACEABLE
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
ang net/minecraft/tags/PoiTypeTags
	a ACQUIRABLE_JOB_SITE
	b VILLAGE
	c BEE_HOME
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
anh net/minecraft/tags/StructureTags
	a EYE_OF_ENDER_LOCATED
	b DOLPHIN_LOCATED
	c ON_WOODLAND_EXPLORER_MAPS
	d ON_OCEAN_EXPLORER_MAPS
	e ON_TREASURE_MAPS
	f CATS_SPAWN_IN
	g CATS_SPAWN_AS_BLACK
	h VILLAGE
	i MINESHAFT
	j SHIPWRECK
	k RUINED_PORTAL
	l OCEAN_RUIN
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
ani net/minecraft/tags/TagBuilder
	a entries
	<init> ()V <init>
	a ()Lani; create
	b ()Ljava/util/List; build
	a (Lanj;)Lani; add
	a (Lacq;)Lani; addElement
	b (Lacq;)Lani; addOptionalElement
	c (Lacq;)Lani; addTag
	d (Lacq;)Lani; addOptionalTag
anj net/minecraft/tags/TagEntry
	b FULL_CODEC
	a CODEC
	c id
	d tag
	e required
	<init> (Lacq;ZZ)V <init>
	<init> (Laoi$d;Z)V <init>
	a ()Laoi$d; elementOrTag
	a (Lacq;)Lanj; element
	b (Lacq;)Lanj; optionalElement
	c (Lacq;)Lanj; tag
	d (Lacq;)Lanj; optionalTag
	a (Lanj$a;Ljava/util/function/Consumer;)Z build
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z verifyIfPresent
	toString ()Ljava/lang/String; toString
	a (Lanj;)Lcom/mojang/datafixers/util/Either; lambda$static$5
	a (Lcom/mojang/datafixers/util/Either;)Lanj; lambda$static$4
	b (Lanj;)Lanj; lambda$static$3
	a (Laoi$d;)Lanj; lambda$static$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	c (Lanj;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
anj$a net/minecraft/tags/TagEntry$Lookup
	a (Lacq;)Ljava/lang/Object; element
	b (Lacq;)Ljava/util/Collection; tag
ank net/minecraft/tags/TagFile
	b entries
	c replace
	a CODEC
	<init> (Ljava/util/List;Z)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; entries
	b ()Z replace
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
anl net/minecraft/tags/TagKey
	a registry
	b location
	c VALUES
	<init> (Lacp;Lacq;)V <init>
	a (Lacp;)Lcom/mojang/serialization/Codec; codec
	b (Lacp;)Lcom/mojang/serialization/Codec; hashedCodec
	a (Lacp;Lacq;)Lanl; create
	c (Lacp;)Z isFor
	d (Lacp;)Ljava/util/Optional; cast
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; registry
	b ()Lacq; location
	a (Lanl;)Ljava/lang/String; lambda$hashedCodec$4
	a (Lacp;Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$hashedCodec$3
	c ()Ljava/lang/String; lambda$hashedCodec$2
	b (Lacp;Lacq;)Lanl; lambda$hashedCodec$1
	c (Lacp;Lacq;)Lanl; lambda$codec$0
	<clinit> ()V <clinit>
anm net/minecraft/tags/TagLoader
	a LOGGER
	b idToValue
	c directory
	<init> (Ljava/util/function/Function;Ljava/lang/String;)V <init>
	a (Lakx;)Ljava/util/Map; load
	a (Lanj$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; build
	a (Ljava/util/Map;)Ljava/util/Map; build
	b (Lakx;)Ljava/util/Map; loadAndBuild
	a (Lanj$a;Ljava/util/Map;Lacq;Lanm$b;)V lambda$build$5
	a (Ljava/util/Map;Lacq;Ljava/util/Collection;)V lambda$build$4
	a (Lacq;Ljava/util/Collection;)V lambda$build$3
	a (Laof;Lacq;Ljava/util/List;)V lambda$build$2
	a (Ljava/util/List;Ljava/lang/String;Lanj;)V lambda$load$1
	a (Lacq;)Ljava/util/List; lambda$load$0
	<clinit> ()V <clinit>
anm$1 net/minecraft/tags/TagLoader$1
	a val$newTags
	b this$0
	<init> (Lanm;Ljava/util/Map;)V <init>
	a (Lacq;)Ljava/lang/Object; element
	b (Lacq;)Ljava/util/Collection; tag
anm$a net/minecraft/tags/TagLoader$EntryWithSource
	a entry
	b source
	<init> (Lanj;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lanj; entry
	b ()Ljava/lang/String; source
anm$b net/minecraft/tags/TagLoader$SortingEntry
	a entries
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; entries
	a (Ljava/util/function/Consumer;Lanm$a;)V lambda$visitOptionalDependencies$1
	b (Ljava/util/function/Consumer;Lanm$a;)V lambda$visitRequiredDependencies$0
ann net/minecraft/tags/TagManager
	a CUSTOM_REGISTRY_DIRECTORIES
	b registryAccess
	c results
	<init> (Lhs;)V <init>
	a ()Ljava/util/List; getResult
	a (Lacp;)Ljava/lang/String; getTagDir
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lakx;Ljava/util/concurrent/Executor;Lhs$d;)Ljava/util/concurrent/CompletableFuture; createLoader
	a (Lacp;Lanm;Lakx;)Lann$a; lambda$createLoader$4
	a (Lhr;Lacp;Lacq;)Ljava/util/Optional; lambda$createLoader$3
	a (Ljava/util/List;Ljava/lang/Void;)V lambda$reload$2
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	b (Lakx;Ljava/util/concurrent/Executor;Lhs$d;)Ljava/util/concurrent/CompletableFuture; lambda$reload$0
	<clinit> ()V <clinit>
ann$a net/minecraft/tags/TagManager$LoadResult
	a key
	b tags
	<init> (Lacp;Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Ljava/util/Map; tags
ano net/minecraft/tags/TagNetworkSerialization
	<init> ()V <init>
	a (Lhl;)Ljava/util/Map; serializeTagsToNetwork
	a (Lhr;)Lano$a; serializeToNetwork
	a (Lacp;Lhr;Lano$a;Lano$b;)V deserializeTagsFromNetwork
	a (Lacp;Lhr;Lano$b;Lacq;Lit/unimi/dsi/fastutil/ints/IntList;)V lambda$deserializeTagsFromNetwork$3
	a (Lhr;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V lambda$serializeToNetwork$2
	a (Lcom/mojang/datafixers/util/Pair;)Z lambda$serializeTagsToNetwork$1
	a (Lhs$d;)Lcom/mojang/datafixers/util/Pair; lambda$serializeTagsToNetwork$0
ano$a net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	a tags
	<init> (Ljava/util/Map;)V <init>
	a (Lsf;)V write
	b (Lsf;)Lano$a; read
	a ()Z isEmpty
ano$b net/minecraft/tags/TagNetworkSerialization$TagOutput
	accept (Lanl;Ljava/util/List;)V accept
anp net/minecraft/tags/WorldPresetTags
	a NORMAL
	b EXTENDED
	<init> ()V <init>
	a (Ljava/lang/String;)Lanl; create
	<clinit> ()V <clinit>
anq net/minecraft/tags/package-info
anr net/minecraft/util/AbortableIterationConsumer
	accept (Ljava/lang/Object;)Lanr$a; accept
	forConsumer (Ljava/util/function/Consumer;)Lanr; forConsumer
	a (Ljava/util/function/Consumer;Ljava/lang/Object;)Lanr$a; lambda$forConsumer$0
anr$a net/minecraft/util/AbortableIterationConsumer$Continuation
	a CONTINUE
	b ABORT
	c $VALUES
	values ()[Lanr$a; values
	valueOf (Ljava/lang/String;)Lanr$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z shouldAbort
	b ()[Lanr$a; $values
	<clinit> ()V <clinit>
ans net/minecraft/util/BitStorage
	a (II)I getAndSet
	b (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getSize
	c ()I getBits
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	d ()Lans; copy
ant net/minecraft/util/Brightness
	d block
	e sky
	a LIGHT_VALUE_CODEC
	b CODEC
	c FULL_BRIGHT
	<init> (II)V <init>
	a ()I pack
	a (I)Lant; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I block
	c ()I sky
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
anu net/minecraft/util/ByIdMap
	<init> ()V <init>
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction; createMap
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction; sparse
	b (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object; createSortedArray
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Lanu$a;)Ljava/util/function/IntFunction; continuous
	a ([Ljava/lang/Object;II)Ljava/lang/Object; lambda$continuous$3
	b ([Ljava/lang/Object;II)Ljava/lang/Object; lambda$continuous$2
	a (I[Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object; lambda$continuous$1
	a (Ljava/util/function/IntFunction;Ljava/lang/Object;I)Ljava/lang/Object; lambda$sparse$0
anu$1 net/minecraft/util/ByIdMap$1
	a $SwitchMap$net$minecraft$util$ByIdMap$OutOfBoundsStrategy
	<clinit> ()V <clinit>
anu$a net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	a ZERO
	b WRAP
	c CLAMP
	d $VALUES
	values ()[Lanu$a; values
	valueOf (Ljava/lang/String;)Lanu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lanu$a; $values
	<clinit> ()V <clinit>
anv net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	<init> (Ljava/lang/Class;)V <init>
	add (Ljava/lang/Object;)Z add
	remove (Ljava/lang/Object;)Z remove
	contains (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Class;)Ljava/util/Collection; find
	iterator ()Ljava/util/Iterator; iterator
	a ()Ljava/util/List; getAllInstances
	size ()I size
	b (Ljava/lang/Class;)Ljava/util/List; lambda$find$0
anw net/minecraft/util/CommonColors
	a WHITE
	b BLACK
	c GRAY
	d RED
	<init> ()V <init>
anx net/minecraft/util/CommonLinks
	a GDPR
	b EULA
	c ATTRIBUTION
	d LICENSES
	e BUY_MINECRAFT_JAVA
	f ACCOUNT_SETTINGS
	g SNAPSHOT_FEEDBACK
	h RELEASE_FEEDBACK
	i SNAPSHOT_BUGS_FEEDBACK
	j ACCESSIBILITY_HELP
	k REPORTING_HELP
	l SUSPENSION_HELP
	m BLOCKING_HELP
	n SYMLINK_HELP
	o START_REALMS_TRIAL
	p BUY_REALMS
	q REALMS_TERMS
	r REALMS_CONTENT_CREATION
	s REALMS_UPDATE_MOJANG_ACCOUNT
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; extendRealms
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; extendRealms
any net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	b NOT_FOUND
	c EMPTY_SLOT
	d LOADFACTOR
	e keys
	f values
	g byId
	h nextId
	i size
	<init> (I)V <init>
	<init> ([Ljava/lang/Object;[I[Ljava/lang/Object;II)V <init>
	c (I)Lany; create
	a (Ljava/lang/Object;)I getId
	a (I)Ljava/lang/Object; byId
	e (I)I getValue
	b (Ljava/lang/Object;)Z contains
	d (I)Z contains
	c (Ljava/lang/Object;)I add
	d ()I nextId
	f (I)V grow
	a (Ljava/lang/Object;I)V addMapping
	d (Ljava/lang/Object;)I hash
	b (Ljava/lang/Object;I)I indexOf
	g (I)I findEmpty
	iterator ()Ljava/util/Iterator; iterator
	a ()V clear
	b ()I size
	c ()Lany; copy
	<clinit> ()V <clinit>
anz net/minecraft/util/Crypt
	h SYMMETRIC_ALGORITHM
	i SYMMETRIC_BITS
	j ASYMMETRIC_ALGORITHM
	k ASYMMETRIC_BITS
	l BYTE_ENCODING
	m HASH_ALGORITHM
	a SIGNING_ALGORITHM
	b SIGNATURE_BYTES
	n PEM_RSA_PRIVATE_KEY_HEADER
	o PEM_RSA_PRIVATE_KEY_FOOTER
	c RSA_PUBLIC_KEY_HEADER
	p RSA_PUBLIC_KEY_FOOTER
	d MIME_LINE_SEPARATOR
	e MIME_ENCODER
	f PUBLIC_KEY_CODEC
	g PRIVATE_KEY_CODEC
	<init> ()V <init>
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	b ()Ljava/security/KeyPair; generateKeyPair
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a ([[B)[B digestData
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lanz$a;)Ljava/security/Key; rsaStringToKey
	a (Ljava/lang/String;)Ljava/security/PrivateKey; stringToPemRsaPrivateKey
	b (Ljava/lang/String;)Ljava/security/PublicKey; stringToRsaPublicKey
	a (Ljava/security/PublicKey;)Ljava/lang/String; rsaPublicKeyToString
	a (Ljava/security/PrivateKey;)Ljava/lang/String; pemRsaPrivateKeyToString
	b ([B)Ljava/security/PrivateKey; byteToPrivateKey
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a (Ljava/security/Key;[B)[B encryptUsingKey
	b (Ljava/security/Key;[B)[B decryptUsingKey
	a (ILjava/security/Key;[B)[B cipherData
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$1
	d (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$0
	<clinit> ()V <clinit>
anz$a net/minecraft/util/Crypt$ByteArrayToKeyFunction
	apply ([B)Ljava/security/Key; apply
anz$b net/minecraft/util/Crypt$SaltSignaturePair
	b salt
	c signature
	a EMPTY
	<init> (Lsf;)V <init>
	<init> (J[B)V <init>
	a ()Z isValid
	a (Lsf;Lanz$b;)V write
	b ()[B saltAsBytes
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()J salt
	d ()[B signature
	<clinit> ()V <clinit>
anz$c net/minecraft/util/Crypt$SaltSupplier
	a secureRandom
	<init> ()V <init>
	a ()J getLong
	<clinit> ()V <clinit>
aoa net/minecraft/util/CryptException
	<init> (Ljava/lang/Throwable;)V <init>
aob net/minecraft/util/CsvOutput
	a LINE_SEPARATOR
	b FIELD_SEPARATOR
	c output
	d columnCount
	<init> (Ljava/io/Writer;Ljava/util/List;)V <init>
	a ()Laob$a; builder
	a ([Ljava/lang/Object;)V writeRow
	a (Ljava/util/stream/Stream;)V writeLine
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
aob$a net/minecraft/util/CsvOutput$Builder
	a headers
	<init> ()V <init>
	a (Ljava/lang/String;)Laob$a; addColumn
	a (Ljava/io/Writer;)Laob; build
aoc net/minecraft/util/CubicSampler
	a GAUSSIAN_SAMPLE_RADIUS
	b GAUSSIAN_SAMPLE_BREADTH
	c GAUSSIAN_SAMPLE_KERNEL
	<init> ()V <init>
	a (Leei;Laoc$a;)Leei; gaussianSampleVec3
	<clinit> ()V <clinit>
aoc$a net/minecraft/util/CubicSampler$Vec3Fetcher
	fetch (III)Leei; fetch
aod net/minecraft/util/CubicSpline
	a ()Ljava/lang/String; parityString
	a (Laod$d;)Laod; mapAll
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (F)Laod; constant
	a (Lapx;)Laod$b; builder
	a (Lapx;Lapx;)Laod$b; builder
	a (Laod;)Lcom/mojang/datafixers/util/Either; lambda$codec$8
	a (Lcom/mojang/datafixers/util/Either;)Laod; lambda$codec$7
	a (Laod$e;)Ljava/lang/Record; lambda$codec$6
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$5
	a (Lapx;Ljava/util/List;)Laod$e; lambda$codec$4
	b (Laod$e;)Ljava/util/List; lambda$codec$3
	a (Laod$e;I)Laod$a; lambda$codec$2
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$1
	a (FLaod;F)Laod$a; lambda$codec$0
aod$a net/minecraft/util/CubicSpline$1Point
	a location
	b value
	c derivative
	<init> (FLaod;F)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()F location
	b ()Laod; value
	c ()F derivative
aod$b net/minecraft/util/CubicSpline$Builder
	a coordinate
	b valueTransformer
	c locations
	d values
	e derivatives
	<init> (Lapx;)V <init>
	<init> (Lapx;Lapx;)V <init>
	a (FF)Laod$b; addPoint
	a (FFF)Laod$b; addPoint
	a (FLaod;)Laod$b; addPoint
	a (FLaod;F)Laod$b; addPoint
	a ()Laod; build
aod$c net/minecraft/util/CubicSpline$Constant
	b value
	<init> (F)V <init>
	a (Ljava/lang/Object;)F apply
	a ()Ljava/lang/String; parityString
	b ()F minValue
	c ()F maxValue
	a (Laod$d;)Laod; mapAll
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()F value
aod$d net/minecraft/util/CubicSpline$CoordinateVisitor
	visit (Ljava/lang/Object;)Ljava/lang/Object; visit
aod$e net/minecraft/util/CubicSpline$Multipoint
	b coordinate
	c locations
	d values
	e derivatives
	f minValue
	g maxValue
	<init> (Lapx;[FLjava/util/List;[FFF)V <init>
	a (Lapx;[FLjava/util/List;[F)Laod$e; create
	a (F[FF[FI)F linearExtend
	a ([FLjava/util/List;[F)V validateSizes
	a (Ljava/lang/Object;)F apply
	a ([FF)I findIntervalStart
	a ()Ljava/lang/String; parityString
	a ([F)Ljava/lang/String; toString
	a (Laod$d;)Laod; mapAll
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Lapx; coordinate
	e ()[F locations
	f ()Ljava/util/List; values
	g ()[F derivatives
	b ()F minValue
	c ()F maxValue
	a (Laod$d;Laod;)Laod; lambda$mapAll$3
	a (D)Ljava/lang/String; lambda$toString$2
	a ([FI)D lambda$toString$1
	a (F[FI)Z lambda$findIntervalStart$0
aoe net/minecraft/util/DebugBuffer
	a data
	b index
	<init> (I)V <init>
	a (Ljava/lang/Object;)V push
	a ()Ljava/util/List; dump
aof net/minecraft/util/DependencySorter
	a contents
	<init> ()V <init>
	a (Ljava/lang/Object;Laof$a;)Laof; addEntry
	a (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V visitDependenciesAndElement
	a (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z isCyclic
	b (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V addDependencyIfNotCyclic
	a (Ljava/util/function/BiConsumer;)V orderByDependencies
	a (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V lambda$orderByDependencies$6
	a (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Laof$a;)V lambda$orderByDependencies$5
	c (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V lambda$orderByDependencies$4
	b (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Laof$a;)V lambda$orderByDependencies$3
	d (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V lambda$orderByDependencies$2
	e (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z lambda$isCyclic$1
	b (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V lambda$visitDependenciesAndElement$0
aof$a net/minecraft/util/DependencySorter$Entry
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
aog net/minecraft/util/DirectoryLock
	a LOCK_FILE
	b lockFile
	c lock
	d DUMMY
	a (Ljava/nio/file/Path;)Laog; create
	<init> (Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V <init>
	close ()V close
	a ()Z isValid
	b (Ljava/nio/file/Path;)Z isLocked
	<clinit> ()V <clinit>
aog$a net/minecraft/util/DirectoryLock$LockException
	<init> (Ljava/nio/file/Path;Ljava/lang/String;)V <init>
	a (Ljava/nio/file/Path;)Laog$a; alreadyLocked
aoh net/minecraft/util/ExceptionCollector
	a result
	<init> ()V <init>
	a (Ljava/lang/Throwable;)V add
	a ()V throwIfPresent
aoi net/minecraft/util/ExtraCodecs
	a JSON
	b COMPONENT
	c FLAT_COMPONENT
	d VECTOR3F
	e QUATERNIONF_COMPONENTS
	f AXISANGLE4F
	g QUATERNIONF
	h MATRIX4F
	i NON_NEGATIVE_INT
	j POSITIVE_INT
	k POSITIVE_FLOAT
	l PATTERN
	m INSTANT_ISO8601
	n BASE64_STRING
	o TAG_OR_ELEMENT_ID
	p toOptionalLong
	q fromOptionalLong
	r BIT_SET
	w PROPERTY
	s PROPERTY_MAP
	t GAME_PROFILE
	u NON_EMPTY_STRING
	v CODEPOINT
	<init> ()V <init>
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; xor
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; intervalCodec
	a (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; orElsePartial
	a (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; idResolverCodec
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; stringResolverCodec
	b (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; orCompressed
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; overrideLifecycle
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; validate
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; validate
	a (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; intRangeWithMessage
	a (II)Lcom/mojang/serialization/Codec; intRange
	a (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; floatRangeMinExclusiveWithMessage
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyList
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyHolderSet
	a (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; lazyInitializedCodec
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; retrieveContext
	b (Ljava/util/function/Function;)Ljava/util/function/Function; ensureHomogenous
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; catchDecoderException
	a (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; instantCodec
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; asOptionalLong
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; mapIdNameToGameProfile
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/serialization/DataResult; mapGameProfileToIdName
	b (II)Lcom/mojang/serialization/Codec; sizeLimitedString
	a (IILjava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$sizeLimitedString$90
	a (Ljava/lang/String;III)Ljava/lang/String; lambda$sizeLimitedString$89
	b (Ljava/lang/String;III)Ljava/lang/String; lambda$sizeLimitedString$88
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$87
	b (Ljava/lang/String;)Ljava/lang/String; lambda$static$86
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$85
	a ()Ljava/lang/String; lambda$static$84
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$83
	a (Lcom/mojang/authlib/GameProfile;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile; lambda$static$82
	a (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lcom/mojang/authlib/properties/Property;)V lambda$static$81
	a (Ljava/util/Optional;)Ljava/lang/String; lambda$static$80
	b (Ljava/util/Optional;)Ljava/util/UUID; lambda$static$79
	a (Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/datafixers/util/Either; lambda$static$78
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/authlib/properties/PropertyMap; lambda$static$77
	a (Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/List;)V lambda$static$76
	a (Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/Map;)V lambda$static$75
	a (Lcom/mojang/authlib/properties/PropertyMap;Ljava/lang/String;Ljava/util/List;)V lambda$static$74
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$73
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/authlib/properties/Property; lambda$static$72
	a (Lcom/mojang/authlib/properties/Property;)Ljava/util/Optional; lambda$static$71
	a (Ljava/util/BitSet;)Ljava/util/stream/LongStream; lambda$static$70
	a (Ljava/util/stream/LongStream;)Ljava/util/BitSet; lambda$static$69
	a (Ljava/util/OptionalLong;)Ljava/util/Optional; lambda$static$68
	c (Ljava/util/Optional;)Ljava/util/OptionalLong; lambda$static$67
	d (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$66
	a (Lacq;)Laoi$d; lambda$static$65
	b (Lacq;)Laoi$d; lambda$static$64
	a ([B)Ljava/lang/String; lambda$static$63
	e (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$62
	b ()Ljava/lang/String; lambda$static$61
	a (Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$instantCodec$60
	f (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$59
	a (Ljava/lang/String;Ljava/util/regex/PatternSyntaxException;)Ljava/lang/String; lambda$static$58
	a (Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult; lambda$ensureHomogenous$57
	a (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String; lambda$ensureHomogenous$56
	a (Lhi;)Lcom/mojang/serialization/DataResult; lambda$nonEmptyHolderSet$55
	c ()Ljava/lang/String; lambda$nonEmptyHolderSet$54
	a (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$nonEmptyList$53
	d ()Ljava/lang/String; lambda$nonEmptyList$52
	a (Ljava/lang/Float;)Ljava/lang/String; lambda$static$51
	a (FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult; lambda$floatRangeMinExclusiveWithMessage$50
	a (Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String; lambda$floatRangeMinExclusiveWithMessage$49
	a (IILjava/lang/Integer;)Ljava/lang/String; lambda$intRange$48
	a (Ljava/lang/Integer;)Ljava/lang/String; lambda$static$47
	b (Ljava/lang/Integer;)Ljava/lang/String; lambda$static$46
	a (IILjava/util/function/Function;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult; lambda$intRangeWithMessage$45
	a (Ljava/util/function/Function;Ljava/lang/Integer;)Ljava/lang/String; lambda$intRangeWithMessage$44
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$stringResolverCodec$43
	b (Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$stringResolverCodec$42
	c (Ljava/lang/Object;)Ljava/lang/String; lambda$stringResolverCodec$41
	a (Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$stringResolverCodec$40
	g (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$stringResolverCodec$39
	h (Ljava/lang/String;)Ljava/lang/String; lambda$stringResolverCodec$38
	a (Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$idResolverCodec$37
	d (Ljava/lang/Object;)Ljava/lang/String; lambda$idResolverCodec$36
	a (Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult; lambda$idResolverCodec$35
	c (Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult; lambda$idResolverCodec$34
	d (Ljava/lang/Integer;)Ljava/lang/String; lambda$idResolverCodec$33
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either; lambda$intervalCodec$32
	a (Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult; lambda$intervalCodec$31
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$intervalCodec$30
	b (Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object; lambda$intervalCodec$29
	e (Ljava/lang/Object;)Ljava/lang/Object; lambda$intervalCodec$28
	f (Ljava/lang/Object;)Ljava/lang/Object; lambda$intervalCodec$27
	b (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$intervalCodec$26
	a (Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$intervalCodec$25
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$intervalCodec$24
	c (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List; lambda$intervalCodec$23
	a (Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$intervalCodec$22
	b (Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$intervalCodec$21
	a (Lorg/joml/Matrix4f;)Ljava/util/List; lambda$static$20
	b (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$19
	c (Ljava/util/List;)Lorg/joml/Matrix4f; lambda$static$18
	c (Lcom/mojang/datafixers/util/Either;)Lorg/joml/Quaternionf; lambda$static$17
	a (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; lambda$static$16
	b (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; lambda$static$15
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$14
	a (Lorg/joml/AxisAngle4f;)Lorg/joml/Vector3f; lambda$static$13
	b (Lorg/joml/AxisAngle4f;)Ljava/lang/Float; lambda$static$12
	c (Lorg/joml/Quaternionf;)Ljava/util/List; lambda$static$11
	d (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$10
	e (Ljava/util/List;)Lorg/joml/Quaternionf; lambda$static$9
	a (Lorg/joml/Vector3f;)Ljava/util/List; lambda$static$8
	f (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$7
	g (Ljava/util/List;)Lorg/joml/Vector3f; lambda$static$6
	a (Lsw;)Lcom/mojang/serialization/DataResult; lambda$static$5
	i (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$static$4
	b (Lsw;)Lcom/mojang/serialization/DataResult; lambda$static$3
	a (Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult; lambda$static$2
	b (Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/Dynamic; lambda$static$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/google/gson/JsonElement; lambda$static$0
	<clinit> ()V <clinit>
aoi$1 net/minecraft/util/ExtraCodecs$1
	a val$value
	<init> (Ljava/lang/Object;)V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult; apply
	coApply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult; coApply
	toString ()Ljava/lang/String; toString
	a (Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/String; lambda$apply$0
aoi$a net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	a val$getter
	<init> (Ljava/util/function/Function;)V <init>
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
aoi$2 net/minecraft/util/ExtraCodecs$2
	a val$compressed
	b val$normal
	<init> (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V <init>
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	toString ()Ljava/lang/String; toString
aoi$3 net/minecraft/util/ExtraCodecs$3
	a val$decodeLifecycle
	b val$encodeLifecycle
	<init> (Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult; apply
	coApply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult; coApply
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; lambda$apply$0
aoi$4 net/minecraft/util/ExtraCodecs$4
	a val$codec
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Ljava/lang/Object;Ljava/lang/Exception;)Ljava/lang/String; lambda$decode$0
aoi$b net/minecraft/util/ExtraCodecs$EitherCodec
	a first
	b second
	<init> (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$4
	b (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$3
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$0
aoi$c net/minecraft/util/ExtraCodecs$LazyInitializedCodec
	a delegate
	<init> (Ljava/util/function/Supplier;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/function/Supplier; delegate
aoi$d net/minecraft/util/ExtraCodecs$TagOrElementLocation
	a id
	b tag
	<init> (Lacq;Z)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; decoratedId
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; id
	b ()Z tag
aoi$e net/minecraft/util/ExtraCodecs$XorCodec
	a first
	b second
	<init> (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$4
	b (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; lambda$encode$3
	a (Ljava/util/Optional;Ljava/util/Optional;)Ljava/lang/String; lambda$decode$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$decode$0
aoj net/minecraft/util/FastBufferedInputStream
	a DEFAULT_BUFFER_SIZE
	b in
	c buffer
	d limit
	e position
	<init> (Ljava/io/InputStream;)V <init>
	<init> (Ljava/io/InputStream;I)V <init>
	read ()I read
	read ([BII)I read
	skip (J)J skip
	available ()I available
	close ()V close
	a ()I bytesInBuffer
	b ()V fill
aok net/minecraft/util/FastColor
	<init> ()V <init>
aok$a net/minecraft/util/FastColor$ABGR32
	<init> ()V <init>
	a (I)I alpha
	b (I)I red
	c (I)I green
	d (I)I blue
	e (I)I transparent
	f (I)I opaque
	a (IIII)I color
	a (II)I color
aok$b net/minecraft/util/FastColor$ARGB32
	<init> ()V <init>
	a (I)I alpha
	b (I)I red
	c (I)I green
	d (I)I blue
	a (IIII)I color
	a (II)I multiply
	a (FII)I lerp
aol net/minecraft/util/FileZipper
	a LOGGER
	b outputFile
	c tempFile
	d fs
	<init> (Ljava/nio/file/Path;)V <init>
	a (Ljava/nio/file/Path;Ljava/lang/String;)V add
	a (Ljava/nio/file/Path;Ljava/io/File;)V add
	a (Ljava/nio/file/Path;)V add
	close ()V close
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z lambda$add$0
	<clinit> ()V <clinit>
aom net/minecraft/util/FormattedCharSequence
	a EMPTY
	accept (Laon;)Z accept
	codepoint (ILts;)Laom; codepoint
	forward (Ljava/lang/String;Lts;)Laom; forward
	forward (Ljava/lang/String;Lts;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laom; forward
	backward (Ljava/lang/String;Lts;)Laom; backward
	backward (Ljava/lang/String;Lts;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laom; backward
	decorateOutput (Laon;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laon; decorateOutput
	composite ()Laom; composite
	composite (Laom;)Laom; composite
	composite (Laom;Laom;)Laom; composite
	composite ([Laom;)Laom; composite
	composite (Ljava/util/List;)Laom; composite
	fromPair (Laom;Laom;)Laom; fromPair
	fromList (Ljava/util/List;)Laom; fromList
	a (Ljava/util/List;Laon;)Z lambda$fromList$8
	a (Laom;Laom;Laon;)Z lambda$fromPair$7
	a (Laon;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILts;I)Z lambda$decorateOutput$6
	a (Ljava/lang/String;Lts;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laon;)Z lambda$backward$5
	a (Ljava/lang/String;Lts;Laon;)Z lambda$backward$4
	b (Ljava/lang/String;Lts;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Laon;)Z lambda$forward$3
	b (Ljava/lang/String;Lts;Laon;)Z lambda$forward$2
	a (Lts;ILaon;)Z lambda$codepoint$1
	a (Laon;)Z lambda$static$0
	<clinit> ()V <clinit>
aon net/minecraft/util/FormattedCharSink
	accept (ILts;I)Z accept
aoo net/minecraft/util/FrameTimer
	a LOGGING_LENGTH
	b loggedTimes
	c logStart
	d logLength
	e logEnd
	<init> ()V <init>
	a (J)V logFrameDuration
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (JII)I scaleSampleTo
	a ()I getLogStart
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
aop net/minecraft/util/FutureChain
	b LOGGER
	c head
	d checkedExecutor
	e closed
	<init> (Ljava/util/concurrent/Executor;)V <init>
	append (Lapt$a;)V append
	close ()V close
	a (Ljava/lang/Throwable;)Ljava/lang/Object; lambda$append$2
	a (Lapt$a;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage; lambda$append$1
	a (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$0
	<clinit> ()V <clinit>
aoq net/minecraft/util/Graph
	<init> ()V <init>
	a (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z depthFirstSearch
aor net/minecraft/util/GsonHelper
	a GSON
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement; getNonNull
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcfu; convertToItem
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcfu; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcfu;)Lcfu; getAsItem
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	v (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	b (Ljava/lang/String;)Lcom/google/gson/JsonArray; parseArray
	b (Ljava/io/Reader;)Lcom/google/gson/JsonArray; parseArray
	e (Lcom/google/gson/JsonElement;)Ljava/lang/String; toStableString
	a (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V writeValue
	a (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; sortByKeyIfNeeded
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$convertToItem$0
	<clinit> ()V <clinit>
aos net/minecraft/util/HttpUtil
	b LOGGER
	a DOWNLOAD_EXECUTOR
	<init> ()V <init>
	a (Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILape;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
	a ()I getAvailablePort
	a (I)Z isPortAvailable
	a (Lape;Ljava/net/URL;Ljava/net/Proxy;Ljava/util/Map;Ljava/io/File;I)Ljava/lang/Object; lambda$downloadTo$0
	<clinit> ()V <clinit>
aot net/minecraft/util/InclusiveRange
	b minInclusive
	c maxInclusive
	a INT
	<init> (Ljava/lang/Comparable;Ljava/lang/Comparable;)V <init>
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; create
	a (Ljava/lang/Comparable;)Z isValueInRange
	a (Laot;)Z contains
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Comparable; minInclusive
	b ()Ljava/lang/Comparable; maxInclusive
	c ()Ljava/lang/String; lambda$create$3
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Laot;)Lcom/mojang/serialization/DataResult; lambda$codec$2
	a (Ljava/lang/Comparable;Laot;)Ljava/lang/String; lambda$codec$1
	b (Ljava/lang/Comparable;Laot;)Ljava/lang/String; lambda$codec$0
	<clinit> ()V <clinit>
aou net/minecraft/util/KeyDispatchDataCodec
	a codec
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcom/mojang/serialization/Codec;)Laou; of
	a (Lcom/mojang/serialization/MapCodec;)Laou; of
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcom/mojang/serialization/Codec; codec
aov net/minecraft/util/LazyLoadedValue
	a factory
	<init> (Ljava/util/function/Supplier;)V <init>
	a ()Ljava/lang/Object; get
aow net/minecraft/util/LinearCongruentialGenerator
	a MULTIPLIER
	b INCREMENT
	<init> ()V <init>
	a (JJ)J next
aox net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	<init> ()V <init>
	create (Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter; create
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
aox$1 net/minecraft/util/LowerCaseEnumTypeAdapterFactory$1
	a val$lowercaseToConstant
	b this$0
	<init> (Laox;Ljava/util/Map;)V <init>
	write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
	read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
aoy net/minecraft/util/MemoryReserve
	a reserve
	<init> ()V <init>
	a ()V allocate
	b ()V release
	<clinit> ()V <clinit>
aoz net/minecraft/util/ModCheck
	a confidence
	b description
	<init> (Laoz$a;Ljava/lang/String;)V <init>
	a (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Laoz; identify
	a ()Z shouldReportAsModified
	a (Laoz;)Laoz; merge
	b ()Ljava/lang/String; fullDescription
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Laoz$a; confidence
	d ()Ljava/lang/String; description
aoz$a net/minecraft/util/ModCheck$Confidence
	a PROBABLY_NOT
	b VERY_LIKELY
	c DEFINITELY
	d description
	e shouldReportAsModified
	f $VALUES
	values ()[Laoz$a; values
	valueOf (Ljava/lang/String;)Laoz$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Z)V <init>
	a ()[Laoz$a; $values
	<clinit> ()V <clinit>
apa net/minecraft/util/Mth
	h UUID_VERSION
	i UUID_VERSION_TYPE_4
	j UUID_VARIANT
	k UUID_VARIANT_2
	a PI
	b HALF_PI
	c TWO_PI
	d DEG_TO_RAD
	e RAD_TO_DEG
	f EPSILON
	g SQRT_OF_TWO
	l SIN_SCALE
	m SIN
	n RANDOM
	o MULTIPLY_DE_BRUIJN_BIT_POSITION
	p ONE_SIXTH
	q FRAC_EXP
	r LUT_SIZE
	s FRAC_BIAS
	t ASIN_TAB
	u COS_TAB
	<init> ()V <init>
	a (F)F sin
	b (F)F cos
	c (F)F sqrt
	d (F)I floor
	a (D)I floor
	b (D)J lfloor
	e (F)F abs
	a (I)I abs
	f (F)I ceil
	c (D)I ceil
	a (III)I clamp
	a (FFF)F clamp
	a (DDD)D clamp
	b (DDD)D clampedLerp
	b (FFF)F clampedLerp
	a (DD)D absMax
	a (II)I floorDiv
	a (Lapf;II)I nextInt
	a (Lapf;FF)F nextFloat
	a (Lapf;DD)D nextDouble
	a (FF)Z equal
	b (DD)Z equal
	b (II)I positiveModulo
	b (FF)F positiveModulo
	c (DD)D positiveModulo
	c (II)Z isMultipleOf
	b (I)I wrapDegrees
	g (F)F wrapDegrees
	d (D)D wrapDegrees
	c (FF)F degreesDifference
	d (FF)F degreesDifferenceAbs
	c (FFF)F rotateIfNecessary
	d (FFF)F approach
	e (FFF)F approachDegrees
	a (Ljava/lang/String;I)I getInt
	c (I)I smallestEncompassingPowerOfTwo
	d (I)Z isPowerOfTwo
	e (I)I ceillog2
	f (I)I log2
	f (FFF)I color
	h (F)F frac
	e (D)D frac
	a (Lhz;)J getSeed
	b (III)J getSeed
	a (Lapf;)Ljava/util/UUID; createInsecureUUID
	a ()Ljava/util/UUID; createInsecureUUID
	c (DDD)D inverseLerp
	g (FFF)F inverseLerp
	a (Leei;Leei;Leed;)Z rayIntersectsAABB
	d (DD)D atan2
	i (F)F invSqrt
	f (D)D invSqrt
	g (D)D fastInvSqrt
	j (F)F fastInvCubeRoot
	h (FFF)I hsvToRgb
	g (I)I murmurHash3Mixer
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (FII)I lerpInt
	i (FFF)F lerp
	d (DDD)D lerp
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (FFFFF)F catmullrom
	h (D)D smoothstep
	i (D)D smoothstepDerivative
	j (D)I sign
	j (FFF)F rotLerp
	e (FF)F triangleWave
	k (F)F square
	k (D)D square
	h (I)I square
	a (J)J square
	a (DDDDD)D clampedMap
	b (FFFFF)F clampedMap
	b (DDDDD)D map
	c (FFFFF)F map
	l (D)D wobble
	d (II)I roundToward
	e (II)I positiveCeilDiv
	b (Lapf;II)I randomBetweenInclusive
	b (Lapf;FF)F randomBetween
	c (Lapf;FF)F normal
	e (DD)D lengthSquared
	f (DD)D length
	e (DDD)D lengthSquared
	f (DDD)D length
	a (DI)I quantize
	c (III)Ljava/util/stream/IntStream; outFromOrigin
	a (IIII)Ljava/util/stream/IntStream; outFromOrigin
	a (IIIII)I lambda$outFromOrigin$2
	b (IIII)Z lambda$outFromOrigin$1
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
apb net/minecraft/util/NativeModuleLister
	a LOGGER
	b LANG_MASK
	c DEFAULT_LANG
	d CODEPAGE_MASK
	e DEFAULT_CODEPAGE
	<init> ()V <init>
	a ()Ljava/util/List; listModules
	a (Ljava/lang/String;)Ljava/util/Optional; tryGetVersion
	a (Ljava/lang/String;II)Ljava/lang/String; langTableKey
	a ([I)Ljava/util/OptionalInt; findLangAndCodepage
	a (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; queryVersionValue
	b (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; queryVersionString
	a (Lp;)V addCrashSection
	b ()Ljava/lang/String; lambda$addCrashSection$2
	a (Lapb$a;)Ljava/lang/String; lambda$addCrashSection$1
	b (Lapb$a;)Ljava/lang/String; lambda$addCrashSection$0
	<clinit> ()V <clinit>
apb$a net/minecraft/util/NativeModuleLister$NativeModuleInfo
	a name
	b version
	<init> (Ljava/lang/String;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	a (Lapb$b;)Ljava/lang/String; lambda$toString$0
apb$b net/minecraft/util/NativeModuleLister$NativeModuleVersion
	a description
	b version
	c company
	<init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
apc net/minecraft/util/OptionEnum
	a ()I getId
	b ()Ljava/lang/String; getKey
	c ()Lsw; getCaption
apd net/minecraft/util/ParticleUtils
	<init> ()V <init>
	a (Lcmm;Lgu;Lit;Lbdc;)V spawnParticlesOnBlockFaces
	a (Lcmm;Lgu;Lit;Lbdc;Lha;Ljava/util/function/Supplier;D)V spawnParticlesOnBlockFace
	a (Lapf;)Leei; getRandomSpeedRanges
	a (Lha$a;Lcmm;Lgu;DLit;Lbdi;)V spawnParticlesAlongAxis
	a (Lcmm;Lgu;Lha;Lit;Leei;D)V spawnParticleOnFace
	a (Lcmm;Lgu;Lapf;Lit;)V spawnParticleBelow
	a (Lcmm;)Leei; lambda$spawnParticlesOnBlockFaces$0
ape net/minecraft/util/ProgressListener
	a (Lsw;)V progressStartNoAbort
	b (Lsw;)V progressStart
	c (Lsw;)V progressStage
	a (I)V progressStagePercentage
	a ()V stop
apf net/minecraft/util/RandomSource
	a GAUSSIAN_SPREAD_FACTOR
	a ()Lapf; create
	b ()Lapf; createThreadSafe
	a (J)Lapf; create
	c ()Lapf; createNewThreadLocalInstance
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	f ()I nextInt
	a (I)I nextInt
	a (II)I nextIntBetweenInclusive
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
	a (DD)D triangle
	b (I)V consumeCount
	b (II)I nextInt
apg net/minecraft/util/ResourceLocationPattern
	a CODEC
	b namespacePattern
	c namespacePredicate
	d pathPattern
	e pathPredicate
	f locationPredicate
	<init> (Ljava/util/Optional;Ljava/util/Optional;)V <init>
	a ()Ljava/util/function/Predicate; namespacePredicate
	b ()Ljava/util/function/Predicate; pathPredicate
	c ()Ljava/util/function/Predicate; locationPredicate
	a (Lacq;)Z lambda$new$5
	a (Ljava/lang/String;)Z lambda$new$4
	b (Ljava/lang/String;)Z lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lapg;)Ljava/util/Optional; lambda$static$1
	b (Lapg;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
aph net/minecraft/util/SegmentedAnglePrecision
	a mask
	b precision
	c degreeToAngle
	d angleToDegree
	<init> (I)V <init>
	a (II)Z isSameAxis
	a (Lha;)I fromDirection
	a (F)I fromDegreesWithTurns
	b (F)I fromDegrees
	a (I)F toDegreesWithTurns
	b (I)F toDegrees
	c (I)I normalize
	a ()I getMask
api net/minecraft/util/SignatureUpdater
	update (Lapi$a;)V update
api$a net/minecraft/util/SignatureUpdater$Output
	update ([B)V update
apj net/minecraft/util/SignatureValidator
	a NO_VALIDATION
	b LOGGER
	validate (Lapi;[B)Z validate
	a ([B[B)Z validate
	a (Lapi;[BLjava/security/Signature;)Z verifySignature
	a (Ljava/security/PublicKey;Ljava/lang/String;)Lapj; from
	a (Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lapj; from
	a (Ljava/util/Collection;Lapi;[B)Z lambda$from$4
	a (Lapi;[BLcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Z lambda$from$3
	a (Ljava/lang/String;Ljava/security/PublicKey;Lapi;[B)Z lambda$from$2
	a ([BLapi$a;)V lambda$validate$1
	a (Lapi;[B)Z lambda$static$0
	<clinit> ()V <clinit>
apk net/minecraft/util/Signer
	a LOGGER
	sign (Lapi;)[B sign
	a ([B)[B sign
	a (Ljava/security/PrivateKey;Ljava/lang/String;)Lapk; from
	a (Ljava/lang/String;Ljava/security/PrivateKey;Lapi;)[B lambda$from$1
	a ([BLapi$a;)V lambda$sign$0
	<clinit> ()V <clinit>
apl net/minecraft/util/SimpleBitStorage
	a MAGIC
	b data
	c bits
	d mask
	e size
	f valuesPerLong
	g divideMul
	h divideAdd
	i divideShift
	<init> (II[I)V <init>
	<init> (II)V <init>
	<init> (II[J)V <init>
	b (I)I cellIndex
	a (II)I getAndSet
	b (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getSize
	c ()I getBits
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	d ()Lans; copy
	<clinit> ()V <clinit>
apl$a net/minecraft/util/SimpleBitStorage$InitializationException
	<init> (Ljava/lang/String;)V <init>
apm net/minecraft/util/SingleKeyCache
	a computeValue
	b cacheKey
	c cachedValue
	<init> (Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)Ljava/lang/Object; getValue
apn net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	<init> ()V <init>
	a (DD)D getNewDeltaValue
	a ()V reset
apo net/minecraft/util/SortedArraySet
	a DEFAULT_INITIAL_CAPACITY
	b comparator
	c contents
	d size
	<init> (ILjava/util/Comparator;)V <init>
	a ()Lapo; create
	a (I)Lapo; create
	a (Ljava/util/Comparator;)Lapo; create
	a (Ljava/util/Comparator;I)Lapo; create
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	c (Ljava/lang/Object;)I findIndex
	b (I)I getInsertionPosition
	add (Ljava/lang/Object;)Z add
	c (I)V grow
	a (Ljava/lang/Object;I)V addInternal
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	remove (Ljava/lang/Object;)Z remove
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	b ()Ljava/lang/Object; first
	c ()Ljava/lang/Object; last
	contains (Ljava/lang/Object;)Z contains
	iterator ()Ljava/util/Iterator; iterator
	size ()I size
	toArray ()[Ljava/lang/Object; toArray
	toArray ([Ljava/lang/Object;)[Ljava/lang/Object; toArray
	clear ()V clear
	equals (Ljava/lang/Object;)Z equals
apo$a net/minecraft/util/SortedArraySet$ArrayIterator
	b index
	c last
	a this$0
	<init> (Lapo;)V <init>
	hasNext ()Z hasNext
	next ()Ljava/lang/Object; next
	remove ()V remove
app net/minecraft/util/SpawnUtil
	<init> ()V <init>
	a (Lbfn;Lbgd;Laif;Lgu;IIILapp$a;)Ljava/util/Optional; trySpawnMob
	a (Laif;ILgu$a;Lapp$a;)Z moveToPossibleSpawnPosition
app$a net/minecraft/util/SpawnUtil$Strategy
	a LEGACY_IRON_GOLEM
	b ON_TOP_OF_COLLIDER
	canSpawnOn (Laif;Lgu;Ldcb;Lgu;Ldcb;)Z canSpawnOn
	a (Laif;Lgu;Ldcb;Lgu;Ldcb;)Z lambda$static$1
	b (Laif;Lgu;Ldcb;Lgu;Ldcb;)Z lambda$static$0
	<clinit> ()V <clinit>
apq net/minecraft/util/StringDecomposer
	a REPLACEMENT_CHAR
	b STOP_ITERATION
	<init> ()V <init>
	a (Lts;Laon;IC)Z feedChar
	a (Ljava/lang/String;Lts;Laon;)Z iterate
	b (Ljava/lang/String;Lts;Laon;)Z iterateBackwards
	c (Ljava/lang/String;Lts;Laon;)Z iterateFormatted
	a (Ljava/lang/String;ILts;Laon;)Z iterateFormatted
	a (Ljava/lang/String;ILts;Lts;Laon;)Z iterateFormatted
	a (Lta;Lts;Laon;)Z iterateFormatted
	a (Ljava/lang/String;)Ljava/lang/String; filterBrokenSurrogates
	a (Lta;)Ljava/lang/String; getPlainText
	a (Ljava/lang/StringBuilder;ILts;I)Z lambda$getPlainText$2
	b (Ljava/lang/StringBuilder;ILts;I)Z lambda$filterBrokenSurrogates$1
	a (Laon;Lts;Ljava/lang/String;)Ljava/util/Optional; lambda$iterateFormatted$0
	<clinit> ()V <clinit>
apr net/minecraft/util/StringRepresentable
	W PRE_BUILT_MAP_THRESHOLD
	c ()Ljava/lang/String; getSerializedName
	a (Ljava/util/function/Supplier;)Lapr$a; fromEnum
	a (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lapr$a; fromEnumWithMapping
	a ([Lapr;)Lcom/mojang/serialization/Keyable; keys
	a ([Ljava/lang/Enum;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Enum; lambda$fromEnumWithMapping$4
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Enum; lambda$fromEnumWithMapping$3
	a (Ljava/lang/Enum;)Ljava/lang/Enum; lambda$fromEnumWithMapping$2
	a (Ljava/util/function/Function;Ljava/lang/Enum;)Ljava/lang/String; lambda$fromEnumWithMapping$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fromEnum$0
apr$1 net/minecraft/util/StringRepresentable$1
	a val$values
	<init> ([Lapr;)V <init>
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
apr$a net/minecraft/util/StringRepresentable$EnumCodec
	a codec
	b resolver
	<init> ([Ljava/lang/Enum;Ljava/util/function/Function;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Ljava/lang/String;)Ljava/lang/Enum; byName
	a (Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum; byName
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a ([Ljava/lang/Enum;I)Ljava/lang/Enum; lambda$new$2
	a (Ljava/lang/Object;)I lambda$new$1
	b (Ljava/lang/Object;)Ljava/lang/String; lambda$new$0
aps net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	b LINE_PATTERN
	c LINE_END_PATTERN
	<init> ()V <init>
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	b (Ljava/lang/String;)Z isNullOrEmpty
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	c (Ljava/lang/String;)I lineCount
	d (Ljava/lang/String;)Z endsWithNewLine
	e (Ljava/lang/String;)Ljava/lang/String; trimChatMessage
	<clinit> ()V <clinit>
apt net/minecraft/util/TaskChainer
	a LOGGER
	immediate (Ljava/util/concurrent/Executor;)Lapt; immediate
	append (Lapt$a;)V append
	a (Ljava/util/concurrent/Executor;Lapt$a;)V lambda$immediate$1
	a (Ljava/lang/Throwable;)Ljava/lang/Object; lambda$immediate$0
	<clinit> ()V <clinit>
apt$a net/minecraft/util/TaskChainer$DelayedTask
	submit (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; submit
apu net/minecraft/util/ThreadingDetector
	a LOGGER
	b name
	c lock
	d stackTraceLock
	e threadThatFailedToAcquire
	f fullException
	<init> (Ljava/lang/String;)V <init>
	a ()V checkAndLock
	b ()V checkAndUnlock
	a (Ljava/lang/String;Ljava/lang/Thread;)Ly; makeThreadingException
	a (Ljava/lang/Thread;)Ljava/lang/String; stackTrace
	<clinit> ()V <clinit>
apv net/minecraft/util/TimeSource
	get (Ljava/util/concurrent/TimeUnit;)J get
apv$a net/minecraft/util/TimeSource$NanoTimeSource
	get (Ljava/util/concurrent/TimeUnit;)J get
apw net/minecraft/util/TimeUtil
	a NANOSECONDS_PER_SECOND
	b NANOSECONDS_PER_MILLISECOND
	<init> ()V <init>
	a (II)Lbdi; rangeOfSeconds
	<clinit> ()V <clinit>
apx net/minecraft/util/ToFloatFunction
	a IDENTITY
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lapx; createUnlimited
	a (Ljava/util/function/Function;)Lapx; comap
	a (F)F lambda$static$0
	<clinit> ()V <clinit>
apx$1 net/minecraft/util/ToFloatFunction$1
	b val$function
	<init> (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V <init>
	a (Ljava/lang/Float;)F apply
	b ()F minValue
	c ()F maxValue
	a (Ljava/lang/Object;)F apply
apx$2 net/minecraft/util/ToFloatFunction$2
	b val$outer
	c val$function
	d this$0
	<init> (Lapx;Lapx;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
apy net/minecraft/util/Tuple
	a a
	b b
	<init> (Ljava/lang/Object;Ljava/lang/Object;)V <init>
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
apz net/minecraft/util/Unit
	a INSTANCE
	b $VALUES
	values ()[Lapz; values
	valueOf (Ljava/lang/String;)Lapz; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lapz; $values
	<clinit> ()V <clinit>
aqa net/minecraft/util/VisibleForDebug
aqb net/minecraft/util/ZeroBitStorage
	a RAW
	b size
	<init> (I)V <init>
	a (II)I getAndSet
	b (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getSize
	c ()I getBits
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	d ()Lans; copy
	<clinit> ()V <clinit>
aqc net/minecraft/util/datafix/DataFixTypes
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k WORLD_GEN_SETTINGS
	l ENTITY_CHUNK
	m TYPES_FOR_LEVEL_LIST
	n type
	o $VALUES
	values ()[Laqc; values
	valueOf (Ljava/lang/String;)Laqc; valueOf
	<init> (Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V <init>
	a ()I currentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; update
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; updateToCurrentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lqr;II)Lqr; update
	a (Lcom/mojang/datafixers/DataFixer;Lqr;I)Lqr; updateToCurrentVersion
	b ()[Laqc; $values
	<clinit> ()V <clinit>
aqd net/minecraft/util/datafix/DataFixers
	b SAME
	c SAME_NAMESPACED
	d dataFixer
	a BLENDING_VERSION
	<init> ()V <init>
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer; createFixerUpper
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/util/Map;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$9
	a (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String; lambda$createRenamer$8
	a (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$7
	b (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$6
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$addFixers$5
	a (Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$4
	b (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$addFixers$3
	b (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$2
	c (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$1
	d (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$0
	<clinit> ()V <clinit>
aqd$1 net/minecraft/util/datafix/DataFixers$1
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aqd$2 net/minecraft/util/datafix/DataFixers$2
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aqe net/minecraft/util/datafix/PackedBitStorage
	a BIT_TO_LONG_SHIFT
	b data
	c bits
	d mask
	e size
	<init> (II)V <init>
	<init> (II[J)V <init>
	a (II)V set
	a (I)I get
	a ()[J getRaw
	b ()I getBits
aqf net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePickup
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateEntity$0
aqg net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSection
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSectionRecords
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic; lambda$processSectionRecords$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
aqh net/minecraft/util/datafix/fixes/AbstractUUIDFix
	a typeReference
	<init> (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDString
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromString
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; createUUIDFromML
	d (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
	a (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; createUUIDTag
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$createUUIDFromString$4
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDLeastMost$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDMLTag$2
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$replaceUUIDString$1
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateNamedChoice$0
aqi net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	a name
	b flagValue
	c flagKey
	d typeReference
	<init> (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aqj net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$0
aqk net/minecraft/util/datafix/fixes/AdvancementsFix
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
aql net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	a name
	b renamer
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aqm net/minecraft/util/datafix/fixes/AttributesRename
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixName
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixItemStackTag
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixEntity
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEntity$9
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEntity$8
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixEntity$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEntity$6
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixItemStackTag$5
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixItemStackTag$4
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixItemStackTag$3
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixItemStackTag$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fixName$1
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
aqn net/minecraft/util/datafix/fixes/BedItemColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aqo net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
	<init> ()V <init>
	<clinit> ()V <clinit>
aqp net/minecraft/util/datafix/fixes/BitStorageAlignFix
	a BIT_TO_LONG_SHIFT
	b SECTION_WIDTH
	c SECTION_HEIGHT
	d SECTION_SIZE
	e HEIGHTMAP_BITS
	f HEIGHTMAP_SIZE
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateHeightmaps
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateSections
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBitStorage
	a (II[J)[J addPadding
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateSections$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateSections$9
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSections$8
	a (Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSections$7
	a (Ljava/util/List;)Ljava/lang/Integer; lambda$updateSections$6
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$5
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$4
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateHeightmaps$3
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aqq net/minecraft/util/datafix/fixes/BlendingDataFix
	a name
	b STATUSES_TO_SKIP_BLENDING
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBlendingData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
aqr net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aqs net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$4
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$1
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
aqt net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$1
	b ()Ljava/lang/IllegalStateException; lambda$fix$0
aqu net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aqv net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aqw net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
aqx net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aqy net/minecraft/util/datafix/fixes/BlockEntityRenameFix
	a name
	b nameChangeLookup
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
aqz net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
ara net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; getTextList
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; getEmptyTextList
	a ()Ljava/lang/String; getEmptyComponent
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
arb net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateLine
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	<clinit> ()V <clinit>
arb$1 net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix$1
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ltj; deserialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
arc net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkull
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateConduit
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkull$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ard net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/String; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
are net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
are$1 net/minecraft/util/datafix/fixes/BlockRenameFix$1
	a val$fixBlock
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
arf net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/DSL$TypeReference;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	b (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
arf$1 net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw$1
	a val$fixBlock
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
arg net/minecraft/util/datafix/fixes/BlockStateData
	b LOGGER
	c MAP
	d BLOCK_DEFAULTS
	e ID_BY_OLD
	f ID_BY_OLD_NAME
	a FILTER_ME
	<init> ()V <init>
	a (ILjava/lang/String;[Ljava/lang/String;)V register
	q ()V finalizeMaps
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	a (I)Ljava/lang/String; upgradeBlock
	b (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; parse
	b (I)Lcom/mojang/serialization/Dynamic; getTag
	a ()V bootstrap0
	b ()V bootstrap1
	c ()V bootstrap2
	d ()V bootstrap3
	e ()V bootstrap4
	f ()V bootstrap5
	g ()V bootstrap6
	h ()V bootstrap7
	i ()V bootstrap8
	j ()V bootstrap9
	k ()V bootstrap10
	l ()V bootstrap11
	m ()V bootstrap12
	n ()V bootstrap13
	o ()V bootstrap14
	p ()V bootstrap15
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$1
	b (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
arh net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ari net/minecraft/util/datafix/fixes/CatTypeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
arj net/minecraft/util/datafix/fixes/CauldronRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ark net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	a RENAMES
	<init> ()V <init>
	<clinit> ()V <clinit>
arl net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$5
	a (Ljava/util/List;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)V lambda$cap$4
	a ()Ljava/lang/IllegalStateException; lambda$cap$3
	a (Lcom/mojang/serialization/Dynamic;IIIIJ)Ljava/util/Map; lambda$cap$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$0
arm net/minecraft/util/datafix/fixes/ChunkBiomeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
arn net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aro net/minecraft/util/datafix/fixes/ChunkDeleteLightFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
arp net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	a DATAFIXER_CONTEXT_TAG
	d NAME
	e OLD_SECTION_COUNT
	f NEW_SECTION_COUNT
	g NEW_MIN_SECTION_Y
	b BLOCKS_PER_SECTION
	h LONGS_PER_SECTION
	i HEIGHTMAP_BITS
	j HEIGHTMAP_MASK
	k HEIGHTMAP_OFFSET
	l HEIGHTMAP_TYPES
	m STATUS_IS_OR_AFTER_SURFACE
	n STATUS_IS_OR_AFTER_NOISE
	o BLOCKS_BEFORE_FEATURE_STATUS
	p BIOME_CONTAINER_LAYER_SIZE
	q BIOME_CONTAINER_SIZE
	r BIOME_CONTAINER_TOP_LAYER_OFFSET
	c DEFAULT_BIOME
	s BIOMES_BY_ID
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; predictChunkStatusBeforeSurface
	a (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; getBiomeContainers
	a ([II)I getOldBiome
	a (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; updateChunkTag
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; shiftUpgradeData
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateCarvingMasks
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; addPaddingEntries
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHeightmaps
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; getFixedHeightmap
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; makeBiomeContainer
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makeOptimizedPalettedContainer
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; padPaletteEntries
	a (I)I ceillog2
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic; lambda$makeBiomeContainer$24
	a (J)J lambda$getFixedHeightmap$23
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateHeightmaps$22
	a (IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateCarvingMasks$21
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$shiftUpgradeData$20
	a (Ljava/util/Map;Ljava/util/Map;)V lambda$shiftUpgradeData$19
	a (Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$shiftUpgradeData$18
	a (Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V lambda$shiftUpgradeData$17
	b ([II)I lambda$getBiomeContainers$16
	c ([II)I lambda$getBiomeContainers$15
	a ([III)I lambda$getBiomeContainers$14
	b ([III)I lambda$getBiomeContainers$13
	a (Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$predictChunkStatusBeforeSurface$12
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$11
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$10
	a (ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$9
	a (Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$8
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$7
	a (Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$6
	g (Lcom/mojang/serialization/Dynamic;)Lars$a; lambda$makeRule$5
	a (Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$makeRule$4
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$3
	h (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; lambda$makeRule$2
	b ()Ljava/lang/IllegalStateException; lambda$makeRule$1
	c ()Lars$a; lambda$makeRule$0
	<clinit> ()V <clinit>
arq net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
arr net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i LOGGER
	j VIRTUAL
	k FIX
	l PUMPKIN
	m SNOWY_PODZOL
	n SNOWY_GRASS
	o SNOWY_MYCELIUM
	p UPPER_SUNFLOWER
	q UPPER_LILAC
	r UPPER_TALL_GRASS
	s UPPER_LARGE_FERN
	t UPPER_ROSE_BUSH
	u UPPER_PEONY
	v FLOWER_POT_MAP
	w SKULL_MAP
	x DOOR_MAP
	y NOTE_BLOCK_MAP
	z DYE_COLOR_MAP
	A BED_BLOCK_MAP
	B BANNER_BLOCK_MAP
	C AIR
	D SIZE
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Lany;Lcom/mojang/serialization/Dynamic;)I idFor
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (ZZZZ)I getSideMask
	a (Ljava/util/HashMap;)V lambda$static$6
	b (Ljava/util/HashMap;)V lambda$static$5
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$4
	c (Ljava/util/HashMap;)V lambda$static$3
	d (Ljava/util/HashMap;)V lambda$static$2
	e (Ljava/util/HashMap;)V lambda$static$1
	f (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
arr$1 net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$1
	a $SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
	<clinit> ()V <clinit>
arr$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a SIZE
	b NIBBLE_SIZE
	c data
	<init> ()V <init>
	<init> ([B)V <init>
	a (III)I get
	a (I)Z isFirst
	b (I)I getPosition
arr$b net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g axis
	h axisDirection
	i $VALUES
	values ()[Larr$b; values
	valueOf (Ljava/lang/String;)Larr$b; valueOf
	<init> (Ljava/lang/String;ILarr$b$b;Larr$b$a;)V <init>
	a ()Larr$b$b; getAxisDirection
	b ()Larr$b$a; getAxis
	c ()[Larr$b; $values
	<clinit> ()V <clinit>
arr$b$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	a X
	b Y
	c Z
	d $VALUES
	values ()[Larr$b$a; values
	valueOf (Ljava/lang/String;)Larr$b$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Larr$b$a; $values
	<clinit> ()V <clinit>
arr$b$b net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d $VALUES
	values ()[Larr$b$b; values
	valueOf (Ljava/lang/String;)Larr$b$b; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getStep
	b ()[Larr$b$b; $values
	<clinit> ()V <clinit>
arr$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	a y
	h seen
	i buffer
	<init> (Lcom/mojang/serialization/Dynamic;)V <init>
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	b (I)I upgrade
	a (II)V addFix
	a ()Lcom/mojang/serialization/Dynamic; write
	a (Ljava/nio/ByteBuffer;)Larr$a; lambda$upgrade$1
	b (Ljava/nio/ByteBuffer;)Larr$a; lambda$upgrade$0
arr$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	<init> (Lcom/mojang/serialization/Dynamic;)V <init>
	b (I)Lcom/mojang/serialization/Dynamic; getBlockEntity
	c (I)Lcom/mojang/serialization/Dynamic; removeBlockEntity
	a (ILarr$b;)I relative
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	d (I)Larr$c; getSection
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a ()Lcom/mojang/serialization/Dynamic; write
	a (Ljava/util/stream/Stream;)V lambda$new$3
	a (Lcom/mojang/serialization/Dynamic;)V lambda$new$2
	b (Ljava/util/stream/Stream;)V lambda$new$1
	b (Lcom/mojang/serialization/Dynamic;)V lambda$new$0
ars net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	a SECTION_WIDTH
	b ALWAYS_WATERLOGGED
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; makeTickList
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getBlock
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getLiquid
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; createTick
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic; lambda$makeTickList$15
	a (I)Z lambda$makeTickList$14
	c (Lcom/mojang/serialization/Dynamic;)I lambda$makeTickList$13
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$12
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$11
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$10
	a (BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$9
	b (BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$8
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V lambda$makeRule$6
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V lambda$makeRule$5
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lars$a; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Ljava/util/List; lambda$makeRule$3
	d (Lcom/mojang/serialization/Dynamic;)Ljava/util/List; lambda$makeRule$2
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
ars$a net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	a SIZE_BITS
	b palette
	c data
	d bits
	e mask
	f valuesPerLong
	<init> (Ljava/util/List;[J)V <init>
	a (III)Lcom/mojang/serialization/Dynamic; get
	b (III)I getIndex
	a ()Ljava/util/List; palette
	b ()[J data
art net/minecraft/util/datafix/fixes/ChunkRenamesFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; renameField
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; renameFieldHelper
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; appendChunkName
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; mergeRemainders
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic; lambda$mergeRemainders$5
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; lambda$mergeRemainders$4
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$renameField$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aru net/minecraft/util/datafix/fixes/ChunkStatusFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
arv net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
arw net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChildren
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixChildren$2
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixChildren$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
arx net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a NUM_SECTIONS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChunkData
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackBiomes
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackTicks
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic; lambda$repackTicks$7
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic; lambda$repackTicks$6
	a (Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; lambda$repackTicks$5
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V lambda$repackTicks$4
	a (I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList; lambda$repackTicks$3
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$repackBiomes$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic; lambda$repackBiomes$1
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
ary net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
arz net/minecraft/util/datafix/fixes/CriteriaRenameFix
	a name
	b advancementId
	c conversions
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixAdvancements
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixAdvancements$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixAdvancements$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$fixAdvancements$3
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixAdvancements$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$fixAdvancements$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
asa net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix
	a DECORATED_POT_ID
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
asb net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
asc net/minecraft/util/datafix/fixes/EffectDurationFix
	a ITEM_TYPES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixEffect
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntity
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixEffect$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
asd net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
ase net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)I getBlockId
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateBlockToBlockState$12
	a (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$updateBlockToBlockState$11
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$updateFallingBlock$10
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer; lambda$updateFallingBlock$9
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer; lambda$updateFallingBlock$8
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer; lambda$updateFallingBlock$7
	b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$updateFallingBlock$6
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	c (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	d (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
asf net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$renameField$0
asg net/minecraft/util/datafix/fixes/EntityCatSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
ash net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
asi net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTagCustomName
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
asj net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
ask net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$1
	a ()Ljava/lang/IllegalStateException; lambda$cap$0
asl net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
asm net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
asn net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
aso net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a ()Ljava/lang/IllegalStateException; lambda$fix$0
asp net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
asq net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (B)B direction2dTo3d
asr net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$3
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$2
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$makeRule$0
	<clinit> ()V <clinit>
ass net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$renameField$0
ast net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; doFix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$3
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
asu net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
asv net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerArrow
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerLlamaSpit
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItemPotion
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerThrowable
	a (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; setUUID
	a (JJ)[I createUUIDArray
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$updateEntity$0
asw net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
asx net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
asy net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a FLOAT_LIST_CODEC
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/OptionalDynamic;I)Z isZeroList
	a (ILjava/util/List;)Ljava/lang/Boolean; lambda$isZeroList$3
	a (Ljava/lang/Float;)Z lambda$isZeroList$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
asz net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
ata net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$cap$6
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$5
	a ()Ljava/lang/IllegalStateException; lambda$cap$4
	b ()Ljava/lang/IllegalStateException; lambda$cap$3
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either; lambda$cap$2
	c ()Ljava/lang/IllegalStateException; lambda$cap$1
	d ()Ljava/lang/IllegalStateException; lambda$cap$0
atb net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
atc net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double; lambda$fixTag$0
atd net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
ate net/minecraft/util/datafix/fixes/EntityStringUuidFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
atf net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	d MINECRAFT_BRED
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
atg net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
ath net/minecraft/util/datafix/fixes/EntityUUIDFix
	b LOGGER
	c ABSTRACT_HORSES
	d TAMEABLE_ANIMALS
	e ANIMALS
	f MOBS
	g LIVING_ENTITIES
	h PROJECTILES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePiglin
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEvokerFangs
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateZombieVillager
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAreaEffectCloud
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateShulkerBullet
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItem
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateFox
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHurtBy
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimalOwner
	m (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimal
	n (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMob
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntity
	o (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateProjectile
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntityUUID
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateProjectile$14
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$13
	p (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$12
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$11
	q (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateLivingEntity$10
	r (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateMob$9
	d (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$8
	e (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$7
	s (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$6
	t (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateFox$5
	u (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$4
	v (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$3
	w (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$2
	x (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updatePiglin$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
ati net/minecraft/util/datafix/fixes/EntityVariantFix
	a fieldName
	b idConversions
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V <init>
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; updateAndRename
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$5
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$4
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; lambda$updateAndRename$2
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; lambda$updateAndRename$1
	a (Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; lambda$updateAndRename$0
atj net/minecraft/util/datafix/fixes/EntityWolfColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
atk net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
atl net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a PROFESSION_MAX
	b RANDOM
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	<clinit> ()V <clinit>
atm net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	a RENAMED_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; rename
	<clinit> ()V <clinit>
atn net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix
	a name
	b flagsToRemove
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Set;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$3
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$2
	b (Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z lambda$fixTag$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ato net/minecraft/util/datafix/fixes/FilteredBooksFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
	a (Ljava/lang/String;)Z lambda$new$0
atp net/minecraft/util/datafix/fixes/FilteredSignsFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
atq net/minecraft/util/datafix/fixes/ForcePoiRebuild
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$2
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
atr net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFurnaceContents
	a (Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V lambda$updateFurnaceContents$5
	a (Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V lambda$updateFurnaceContents$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$3
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$2
	c (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$1
	d (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$0
ats net/minecraft/util/datafix/fixes/GoatHornIdFix
	a INSTRUMENTS
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
	a (Ljava/lang/String;)Z lambda$new$0
	<clinit> ()V <clinit>
att net/minecraft/util/datafix/fixes/GossipUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$2
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fix$1
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
atu net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
atv net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; removeIglooPieces
	c (Lcom/mojang/serialization/Dynamic;)Z isIglooPiece
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$removeIglooPieces$3
	d (Lcom/mojang/serialization/Dynamic;)Z lambda$removeIglooPieces$2
	b (Ljava/util/stream/Stream;)Ljava/lang/Boolean; lambda$fixTag$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
atw net/minecraft/util/datafix/fixes/ItemBannerColorFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
atx net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aty net/minecraft/util/datafix/fixes/ItemIdFix
	a ITEM_NAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (I)Ljava/lang/String; getItem
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$2
	a (Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
atz net/minecraft/util/datafix/fixes/ItemLoreFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixLoreList$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aua net/minecraft/util/datafix/fixes/ItemPotionFix
	b SPLASH
	c POTIONS
	a DEFAULT
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a ([Ljava/lang/String;)V lambda$static$0
	<clinit> ()V <clinit>
aub net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	a items
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/util/Set;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
auc net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
auc$1 net/minecraft/util/datafix/fixes/ItemRenameFix$1
	a val$fixItem
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
aud net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
aue net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	a ID_TO_ENTITY
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$6
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$5
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$makeRule$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$makeRule$3
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$makeRule$2
	c (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$makeRule$1
	a ([Ljava/lang/String;)V lambda$static$0
	<clinit> ()V <clinit>
auf net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$7
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$6
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$5
	b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aug net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
auh net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a itemType
	b MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aui net/minecraft/util/datafix/fixes/ItemStackTagFix
	a name
	b idFilter
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
auj net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$static$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
auk net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAttributeModifiers
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkullOwner
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateSkullOwner$6
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateAttributeModifiers$5
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateAttributeModifiers$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean; lambda$makeRule$0
aul net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
aum net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$2
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixTag$0
aun net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
auo net/minecraft/util/datafix/fixes/JigsawRotationFix
	a RENAMES
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	<clinit> ()V <clinit>
aup net/minecraft/util/datafix/fixes/LeavesFix
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i DIRECTIONS
	j DECAY_DISTANCE
	k SIZE_BITS
	l SIZE
	m LEAVES
	n LOGS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (III)I getIndex
	a (I)I getX
	b (I)I getY
	c (I)I getZ
	a (ZZZZ)I getSideMask
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$6
	a ([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Laup$a;)Laup$a; lambda$makeRule$2
	a (Lcom/mojang/datafixers/Typed;)Laup$a; lambda$makeRule$1
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aup$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	h PERSISTENT
	i DECAYABLE
	j DISTANCE
	k leaveIds
	l logIds
	m stateToIdMap
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a ()Z skippable
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; makeLeafTag
	a (I)Z isLog
	b (I)Z isLeaf
	d (I)I getDistance
	a (III)V setDistance
aup$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a BLOCK_STATES_TAG
	b NAME_TAG
	c PROPERTIES_TAG
	h blockStateType
	d paletteFinder
	e palette
	f index
	g storage
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)V readStorage
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	b ()Z isSkippable
	c (I)I getBlock
	a (Ljava/lang/String;ZI)I getStateId
	c ()I getIndex
	a ()Z skippable
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$write$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$write$1
	a (Ljava/util/List;)Ljava/util/List; lambda$new$0
auq net/minecraft/util/datafix/fixes/LegacyDragonFightFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
aur net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	b GENERATOR_OPTIONS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; convert
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$convert$6
	b (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$convert$5
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object; lambda$convert$4
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$2
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$makeRule$1
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
aus net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	b GENERATOR_OPTIONS
	a DEFAULT
	c SPLITTER
	d LAYER_SPLITTER
	e OLD_AMOUNT_SPLITTER
	f AMOUNT_SPLITTER
	g BLOCK_SPLITTER
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
	a (Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String; lambda$fixString$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
aut net/minecraft/util/datafix/fixes/LevelUUIDFix
	b LOGGER
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateWanderingTrader
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDragonFight
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateCustomBossEvents
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$12
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateCustomBossEvents$11
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$10
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$9
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$8
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateCustomBossEvents$7
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateDragonFight$6
	b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateDragonFight$5
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateDragonFight$4
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateDragonFight$3
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
auu net/minecraft/util/datafix/fixes/MapIdFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
auv net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateBrain
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMemories
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; updateMemoryEntry
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; wrapMemoryValue
auw net/minecraft/util/datafix/fixes/MissingDimensionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; fields
	b (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; flatType
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; recreateSettings
	a (Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
auy net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
auz net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
ava net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix
	a name
	b type
	c renamer
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/function/UnaryOperator;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
avb net/minecraft/util/datafix/fixes/NewVillageFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$13
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$12
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$11
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$10
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$9
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$8
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$7
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$6
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$cap$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$cap$4
	a (Ljava/util/List;)Ljava/util/List; lambda$cap$3
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$cap$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$cap$1
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$cap$0
avc net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
avd net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; getRenderType
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
ave net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
avf net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
	a (Ljava/lang/String;)Z lambda$new$0
avg net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avh net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)D calculateBackground
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avi net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; updateValue
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avj net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avk net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a KEY_UNKNOWN
	b MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
avl net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
avm net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avn net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixList
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$fixList$2
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avo net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	a fixName
	b fieldFrom
	c fieldTo
	<init> (Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avp net/minecraft/util/datafix/fixes/OverreachingTickFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; extractOverreachingTicks
	a (IILcom/mojang/serialization/Dynamic;)Z lambda$extractOverreachingTicks$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	a (Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avq net/minecraft/util/datafix/fixes/PlayerUUIDFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avr net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	a typesToKeep
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V <init>
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
	a (Lcom/mojang/serialization/Dynamic;)Z shouldKeepRecord
avs net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	a renamer
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$processRecords$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$processRecords$0
avt net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
	<init> ()V <init>
	<clinit> ()V <clinit>
avu net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
	<init> ()V <init>
	<clinit> ()V <clinit>
avv net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateRedstoneConnections
	a (Ljava/lang/String;)Z isConnected
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$5
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$4
	b (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$3
	c (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$2
	d (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateRedstoneConnections$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
avw net/minecraft/util/datafix/fixes/References
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k ENTITY_CHUNK
	l BLOCK_ENTITY
	m ITEM_STACK
	n BLOCK_STATE
	o ENTITY_NAME
	p ENTITY_TREE
	q ENTITY
	r BLOCK_NAME
	s ITEM_NAME
	t GAME_EVENT_NAME
	u UNTAGGED_SPAWNER
	v STRUCTURE_FEATURE
	w OBJECTIVE
	x TEAM
	y RECIPE
	z BIOME
	A MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	B WORLD_GEN_SETTINGS
	<init> ()V <init>
	a ()Ljava/lang/String; lambda$static$27
	b ()Ljava/lang/String; lambda$static$26
	c ()Ljava/lang/String; lambda$static$25
	d ()Ljava/lang/String; lambda$static$24
	e ()Ljava/lang/String; lambda$static$23
	f ()Ljava/lang/String; lambda$static$22
	g ()Ljava/lang/String; lambda$static$21
	h ()Ljava/lang/String; lambda$static$20
	i ()Ljava/lang/String; lambda$static$19
	j ()Ljava/lang/String; lambda$static$18
	k ()Ljava/lang/String; lambda$static$17
	l ()Ljava/lang/String; lambda$static$16
	m ()Ljava/lang/String; lambda$static$15
	n ()Ljava/lang/String; lambda$static$14
	o ()Ljava/lang/String; lambda$static$13
	p ()Ljava/lang/String; lambda$static$12
	q ()Ljava/lang/String; lambda$static$11
	r ()Ljava/lang/String; lambda$static$10
	s ()Ljava/lang/String; lambda$static$9
	t ()Ljava/lang/String; lambda$static$8
	u ()Ljava/lang/String; lambda$static$7
	v ()Ljava/lang/String; lambda$static$6
	w ()Ljava/lang/String; lambda$static$5
	x ()Ljava/lang/String; lambda$static$4
	y ()Ljava/lang/String; lambda$static$3
	z ()Ljava/lang/String; lambda$static$2
	A ()Ljava/lang/String; lambda$static$1
	B ()Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
avx net/minecraft/util/datafix/fixes/RemapChunkStatusFix
	a name
	b mapper
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixStatus
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
avy net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Z lambda$fixValue$0
avz net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
awa net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
	<init> ()V <init>
	<clinit> ()V <clinit>
awb net/minecraft/util/datafix/fixes/ReorganizePoi
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$0
awc net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	a INDEX_PATTERN
	b PIECE_TYPE
	c FEATURES
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateChildren
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	a (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; get
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixFeature
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; getReplacement
	a (I)Ljava/lang/String; lambda$get$2
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateChildren$1
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateChildren$0
	<clinit> ()V <clinit>
awd net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	b LOGGER
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$7
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$6
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$3
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
awe net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
awf net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	<init> (Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; rename
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$3
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$2
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$1
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
awg net/minecraft/util/datafix/fixes/SpawnerDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapEntityToSpawnData
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapSpawnPotentialsToWeightedEntries
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair; lambda$wrapSpawnPotentialsToWeightedEntries$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	c (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	d (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
awh net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c BLOCK_KEY
	d NEW_BLOCK_KEY
	e ITEM_KEYS
	f ENTITY_KEYS
	g ENTITIES
	h NEW_CUSTOM_KEY
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
	<clinit> ()V <clinit>
awi net/minecraft/util/datafix/fixes/StatsRenameFix
	a name
	b renames
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a ()Lcom/mojang/datafixers/TypeRewriteRule; createCriteriaRule
	b ()Lcom/mojang/datafixers/TypeRewriteRule; createStatRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createStatRule$8
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createStatRule$7
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createStatRule$6
	a (Ljava/lang/String;)Ljava/lang/String; lambda$createStatRule$5
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createCriteriaRule$4
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createCriteriaRule$3
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$createCriteriaRule$2
	b (Ljava/lang/String;)Ljava/lang/String; lambda$createCriteriaRule$1
	c ()Ljava/lang/IllegalStateException; lambda$createCriteriaRule$0
awj net/minecraft/util/datafix/fixes/StriderGravityFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
awk net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; setCountToAtLeastOne
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$setCountToAtLeastOne$2
	a (Ljava/lang/Integer;)Z lambda$setCountToAtLeastOne$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
awl net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; fixDimension
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixStructures
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixStructures$6
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$fixStructures$5
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixStructures$4
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixDimension$3
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixDimension$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
awm net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	a CONVERSION_MAP
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateStarts
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateStart
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateReferences
	b (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateReference
	c (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; findUpdatedStructureType
	a (Lcom/mojang/serialization/Dynamic;Lawm$a;)Ljava/util/Optional; guessConfiguration
	a (Lawm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V lambda$guessConfiguration$9
	b (Lawm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V lambda$guessConfiguration$8
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$updateReference$7
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateReferences$6
	a (Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$updateReferences$5
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateStarts$4
	b (Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$updateStarts$3
	c (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$2
	d (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$1
	e (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
	<clinit> ()V <clinit>
awm$a net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	a biomeMapping
	b fallback
	<init> (Ljava/util/Map;Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lawm$a; trivial
	a (Ljava/util/Map;Ljava/lang/String;)Lawm$a; biomeMapped
	a (Ljava/util/Map;)Ljava/util/Map; unpack
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; biomeMapping
	b ()Ljava/lang/String; fallback
	a (Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V lambda$unpack$0
awn net/minecraft/util/datafix/fixes/TeamDisplayNameFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function; lambda$makeRule$4
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
awo net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	b SIZE
	c SIZE_BITS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$5
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$makeRule$1
	a (Ljava/lang/String;)Ljava/lang/String; lambda$makeRule$0
	<clinit> ()V <clinit>
awo$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	h chestIds
	<init> (Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a ()Z skippable
	a (I)Z isTrappedChest
awp net/minecraft/util/datafix/fixes/VariantRenameFix
	a renames
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$2
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
awq net/minecraft/util/datafix/fixes/VillagerDataFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (II)Ljava/lang/String; upgradeData
awr net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	a ORIGINAL_VALUE
	b NEW_BASE_VALUE
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$1
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixValue$0
aws net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a TRADES_PER_LEVEL
	b LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
	a (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addXpFromLevel$6
	b (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addLevel$5
	c (ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addLevel$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer; lambda$makeRule$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$makeRule$0
	<clinit> ()V <clinit>
awt net/minecraft/util/datafix/fixes/VillagerTradeFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$updateItemStack$5
	a (Ljava/lang/String;)Ljava/lang/String; lambda$updateItemStack$4
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$3
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$2
	a (Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$1
	b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$0
awu net/minecraft/util/datafix/fixes/WallPropertyFix
	a WALL_BLOCKS
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Ljava/lang/String;)Ljava/lang/String; mapProperty
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; fixWallProperty
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$upgradeBlockStateTag$2
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fixWallProperty$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
awv net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
aww net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$4
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$3
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; lambda$makeRule$2
	a (Ljava/util/Map;)Ljava/util/Map; lambda$makeRule$1
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$makeRule$0
awx net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	a VILLAGE
	b DESERT_PYRAMID
	c IGLOO
	d JUNGLE_TEMPLE
	e SWAMP_HUT
	f PILLAGER_OUTPOST
	g END_CITY
	h WOODLAND_MANSION
	i OCEAN_MONUMENT
	j DEFAULTS
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; noise
	a (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; vanillaBiomeSource
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; defaultOverworld
	a (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; vanillaLevels
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; fixFlatStructures
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V setSpacing
	a (Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$12
	a (Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic; lambda$fixFlatStructures$11
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$fixFlatStructures$10
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$fixFlatStructures$9
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V lambda$fixFlatStructures$8
	a (Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V lambda$fixFlatStructures$7
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V lambda$fix$6
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$5
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$4
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$3
	a (Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$fix$2
	a (Ljava/lang/String;)Ljava/lang/String; lambda$fix$1
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$0
	<clinit> ()V <clinit>
awx$a net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	<init> (III)V <init>
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lawx$a;)Ljava/lang/Integer; lambda$static$2
	b (Lawx$a;)Ljava/lang/Integer; lambda$static$1
	c (Lawx$a;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
awy net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	b NAME
	a WAS_PREVIOUSLY_INCREASED_KEY
	<init> (Lcom/mojang/datafixers/schemas/Schema;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLayers
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$9
	a (ZZLcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$8
	a ()Ljava/lang/IllegalStateException; lambda$makeRule$7
	a (ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$6
	b (ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$5
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$4
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$3
	a (ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$2
	b ()Ljava/lang/IllegalStateException; lambda$makeRule$1
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$makeRule$0
awz net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
	<init> (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V <init>
	makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
axa net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	<init> (Lcom/mojang/datafixers/schemas/Schema;Z)V <init>
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$fix$0
axb net/minecraft/util/datafix/fixes/package-info
axc net/minecraft/util/datafix/package-info
axd net/minecraft/util/datafix/schemas/NamespacedSchema
	a NAMESPACED_STRING_CODEC
	b NAMESPACED_STRING
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
	a ()Lcom/mojang/datafixers/types/Type; namespacedString
	getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
	<clinit> ()V <clinit>
axd$1 net/minecraft/util/datafix/schemas/NamespacedSchema$1
	<init> ()V <init>
	read (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; read
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object; write
	toString ()Ljava/lang/String; toString
	write (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; write
axe net/minecraft/util/datafix/schemas/V100
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
axf net/minecraft/util/datafix/schemas/V102
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axg net/minecraft/util/datafix/schemas/V1022
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axh net/minecraft/util/datafix/schemas/V106
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axi net/minecraft/util/datafix/schemas/V107
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
axj net/minecraft/util/datafix/schemas/V1125
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axk net/minecraft/util/datafix/schemas/V135
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axl net/minecraft/util/datafix/schemas/V143
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
axm net/minecraft/util/datafix/schemas/V1451
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
axn net/minecraft/util/datafix/schemas/V1451_1
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axo net/minecraft/util/datafix/schemas/V1451_2
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
axp net/minecraft/util/datafix/schemas/V1451_3
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
axq net/minecraft/util/datafix/schemas/V1451_4
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axr net/minecraft/util/datafix/schemas/V1451_5
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
axs net/minecraft/util/datafix/schemas/V1451_6
	b SPECIAL_OBJECTIVE_MARKER
	c UNPACK_OBJECTIVE_ID
	d REPACK_OBJECTIVE_ID
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; createCriterionTypes
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$createCriterionTypes$7
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$createCriterionTypes$6
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$createCriterionTypes$5
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$createCriterionTypes$4
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$createCriterionTypes$3
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
	<clinit> ()V <clinit>
axs$1 net/minecraft/util/datafix/schemas/V1451_6$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic; lambda$apply$1
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; lambda$apply$0
axs$2 net/minecraft/util/datafix/schemas/V1451_6$2
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/lang/String; packWithDot
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$apply$1
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$apply$0
axt net/minecraft/util/datafix/schemas/V1460
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$46
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$45
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$44
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$43
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$42
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$41
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$40
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$39
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$38
	d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$37
	e ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$36
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$35
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$34
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$33
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$32
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	c (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	f ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$26
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$25
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$24
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	w (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	x (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	y (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
axu net/minecraft/util/datafix/schemas/V1466
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
axv net/minecraft/util/datafix/schemas/V1470
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
axw net/minecraft/util/datafix/schemas/V1481
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
axx net/minecraft/util/datafix/schemas/V1483
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
axy net/minecraft/util/datafix/schemas/V1486
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
axz net/minecraft/util/datafix/schemas/V1510
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
aya net/minecraft/util/datafix/schemas/V1800
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayb net/minecraft/util/datafix/schemas/V1801
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayc net/minecraft/util/datafix/schemas/V1904
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayd net/minecraft/util/datafix/schemas/V1906
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
aye net/minecraft/util/datafix/schemas/V1909
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
ayf net/minecraft/util/datafix/schemas/V1920
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
ayg net/minecraft/util/datafix/schemas/V1928
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ayh net/minecraft/util/datafix/schemas/V1929
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayi net/minecraft/util/datafix/schemas/V1931
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayj net/minecraft/util/datafix/schemas/V2100
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
ayk net/minecraft/util/datafix/schemas/V2501
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerFurnace
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerFurnace$0
ayl net/minecraft/util/datafix/schemas/V2502
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
aym net/minecraft/util/datafix/schemas/V2505
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayn net/minecraft/util/datafix/schemas/V2509
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayo net/minecraft/util/datafix/schemas/V2519
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayp net/minecraft/util/datafix/schemas/V2522
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayq net/minecraft/util/datafix/schemas/V2551
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$3
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ayr net/minecraft/util/datafix/schemas/V2568
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ays net/minecraft/util/datafix/schemas/V2571
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayt net/minecraft/util/datafix/schemas/V2684
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ayu net/minecraft/util/datafix/schemas/V2686
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayv net/minecraft/util/datafix/schemas/V2688
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayw net/minecraft/util/datafix/schemas/V2704
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
ayx net/minecraft/util/datafix/schemas/V2707
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
ayy net/minecraft/util/datafix/schemas/V2831
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
ayz net/minecraft/util/datafix/schemas/V2832
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$7
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$6
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$3
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$2
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
aza net/minecraft/util/datafix/schemas/V2842
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
azb net/minecraft/util/datafix/schemas/V3076
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
azc net/minecraft/util/datafix/schemas/V3078
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
azd net/minecraft/util/datafix/schemas/V3081
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
aze net/minecraft/util/datafix/schemas/V3082
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azf net/minecraft/util/datafix/schemas/V3083
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
azg net/minecraft/util/datafix/schemas/V3202
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
azh net/minecraft/util/datafix/schemas/V3203
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azi net/minecraft/util/datafix/schemas/V3204
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
azj net/minecraft/util/datafix/schemas/V3325
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azk net/minecraft/util/datafix/schemas/V3326
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azl net/minecraft/util/datafix/schemas/V3327
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
azm net/minecraft/util/datafix/schemas/V3328
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
azn net/minecraft/util/datafix/schemas/V3438
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
azo net/minecraft/util/datafix/schemas/V3448
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$0
azp net/minecraft/util/datafix/schemas/V501
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azq net/minecraft/util/datafix/schemas/V700
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azr net/minecraft/util/datafix/schemas/V701
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
azs net/minecraft/util/datafix/schemas/V702
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
azt net/minecraft/util/datafix/schemas/V703
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
azu net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a ()Lcom/google/common/collect/ImmutableMap; lambda$static$6
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$5
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$3
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$2
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
	<clinit> ()V <clinit>
azu$1 net/minecraft/util/datafix/schemas/V704$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
azv net/minecraft/util/datafix/schemas/V705
	b ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
	v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	<clinit> ()V <clinit>
azv$1 net/minecraft/util/datafix/schemas/V705$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
azw net/minecraft/util/datafix/schemas/V808
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
azx net/minecraft/util/datafix/schemas/V99
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a ADD_NAMES
	<init> (ILcom/mojang/datafixers/schemas/Schema;)V <init>
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
	registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
	registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
	registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addNames$36
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addNames$35
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; lambda$addNames$34
	a (Ljava/util/HashMap;)V lambda$static$33
	b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$32
	c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
	a ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
	b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
	d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
	a (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
	c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$26
	e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
	b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
	f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$23
	g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$22
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$21
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$20
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$19
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
	e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
	f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
	g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
	h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
	h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
	i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
	i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
	j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
	k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
	l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
	m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
	n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
	o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
	p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
	j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$3
	k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMinecart$2
	l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
	m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
	<clinit> ()V <clinit>
azx$1 net/minecraft/util/datafix/schemas/V99$1
	<init> ()V <init>
	apply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
azy net/minecraft/util/datafix/schemas/package-info
azz net/minecraft/util/eventlog/EventLogDirectory
	a LOGGER
	b COMPRESS_BUFFER_SIZE
	c COMPRESSED_EXTENSION
	d root
	e extension
	<init> (Ljava/nio/file/Path;Ljava/lang/String;)V <init>
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lazz; open
	a ()Lazz$d; listFiles
	a (Ljava/nio/file/Path;)Lazz$b; parseFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V tryCompress
	a (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V writeCompressed
	a (Ljava/time/LocalDate;)Lazz$e; createNewFile
	b (Ljava/nio/file/Path;)Z lambda$listFiles$0
	<clinit> ()V <clinit>
azz$a net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	a path
	b id
	<init> (Ljava/nio/file/Path;Lazz$c;)V <init>
	a ()Ljava/io/Reader; openReader
	b ()Lazz$a; compress
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ljava/nio/file/Path; path
	d ()Lazz$c; id
azz$b net/minecraft/util/eventlog/EventLogDirectory$File
	c ()Ljava/nio/file/Path; path
	d ()Lazz$c; id
	a ()Ljava/io/Reader; openReader
	b ()Lazz$a; compress
azz$c net/minecraft/util/eventlog/EventLogDirectory$FileId
	a date
	b index
	c DATE_FORMATTER
	<init> (Ljava/time/LocalDate;I)V <init>
	a (Ljava/lang/String;)Lazz$c; parse
	toString ()Ljava/lang/String; toString
	b (Ljava/lang/String;)Ljava/lang/String; toFileName
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/LocalDate; date
	b ()I index
	<clinit> ()V <clinit>
azz$d net/minecraft/util/eventlog/EventLogDirectory$FileList
	a files
	<init> (Ljava/util/List;)V <init>
	a (Ljava/time/LocalDate;I)Lazz$d; prune
	a ()Lazz$d; compressAll
	iterator ()Ljava/util/Iterator; iterator
	b ()Ljava/util/stream/Stream; stream
	c ()Ljava/util/Set; ids
	a (ILjava/time/LocalDate;Lazz$b;)Z lambda$prune$0
azz$e net/minecraft/util/eventlog/EventLogDirectory$RawFile
	a path
	b id
	<init> (Ljava/nio/file/Path;Lazz$c;)V <init>
	e ()Ljava/nio/channels/FileChannel; openChannel
	a ()Ljava/io/Reader; openReader
	b ()Lazz$a; compress
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ljava/nio/file/Path; path
	d ()Lazz$c; id
baa net/minecraft/util/eventlog/JsonEventLog
	a GSON
	b codec
	c channel
	d referenceCount
	<init> (Lcom/mojang/serialization/Codec;Ljava/nio/channels/FileChannel;)V <init>
	a (Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbaa; open
	a (Ljava/lang/Object;)V write
	a ()Lbab; openReader
	close ()V close
	b ()V releaseReference
	<clinit> ()V <clinit>
baa$1 net/minecraft/util/eventlog/JsonEventLog$1
	c position
	a val$reader
	b this$0
	<init> (Lbaa;Lbab;)V <init>
	a ()Ljava/lang/Object; next
	close ()V close
bab net/minecraft/util/eventlog/JsonEventLogReader
	a (Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbab; create
	a ()Ljava/lang/Object; next
bab$1 net/minecraft/util/eventlog/JsonEventLogReader$1
	a val$jsonReader
	b val$codec
	<init> (Lcom/google/gson/stream/JsonReader;Lcom/mojang/serialization/Codec;)V <init>
	a ()Ljava/lang/Object; next
	close ()V close
bac net/minecraft/util/eventlog/package-info
bad net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	a LOGGER
	b server
	c mBeanInfo
	d attributeDescriptionByName
	<init> (Lnet/minecraft/server/MinecraftServer;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;)V registerJmxMonitoring
	a ()F getAverageTickTime
	b ()[J getTickTimes
	getAttribute (Ljava/lang/String;)Ljava/lang/Object; getAttribute
	setAttribute (Ljavax/management/Attribute;)V setAttribute
	getAttributes ([Ljava/lang/String;)Ljavax/management/AttributeList; getAttributes
	setAttributes (Ljavax/management/AttributeList;)Ljavax/management/AttributeList; setAttributes
	invoke (Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object; invoke
	getMBeanInfo ()Ljavax/management/MBeanInfo; getMBeanInfo
	a (Lbad$a;)Ljavax/management/Attribute; lambda$getAttributes$2
	a (I)[Ljavax/management/MBeanAttributeInfo; lambda$new$1
	b (Lbad$a;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
bad$a net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	a name
	b getter
	c description
	d type
	<init> (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V <init>
	a ()Ljavax/management/MBeanAttributeInfo; asMBeanAttributeInfo
bae net/minecraft/util/monitoring/jmx/package-info
baf net/minecraft/util/package-info
bag net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	c LOGGER
	d paths
	e startTimes
	f entries
	g getTickTime
	h getRealTime
	i startTimeNano
	j startTimeTicks
	k path
	l started
	m currentEntry
	n warn
	o chartedPaths
	<init> (Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	a (Lbbr;)V markForCharting
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	f ()Lbag$a; getCurrentEntry
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;I)V incrementCounter
	d ()Lbam; getResults
	c (Ljava/lang/String;)Lbag$a; getEntry
	e ()Ljava/util/Set; getChartedPaths
	e (Ljava/lang/String;)Lbag$a; lambda$getCurrentEntry$3
	a (J)Ljava/lang/Object; lambda$pop$2
	g ()Ljava/lang/Object; lambda$pop$1
	h ()Ljava/lang/Object; lambda$endTick$0
	<clinit> ()V <clinit>
bag$a net/minecraft/util/profiling/ActiveProfiler$PathEntry
	a maxDuration
	b minDuration
	c accumulatedDuration
	d count
	e counters
	<init> ()V <init>
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
bah net/minecraft/util/profiling/ContinuousProfiler
	a realTime
	b tickCount
	c profiler
	<init> (Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V <init>
	a ()Z isEnabled
	b ()V disable
	c ()V enable
	d ()Lban; getFiller
	e ()Lbam; getResults
bai net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	<init> ()V <init>
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	<clinit> ()V <clinit>
baj net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b EMPTY
	c SPLITTER
	e COUNTER_ENTRY_COMPARATOR
	f entries
	g startTimeNano
	h startTimeTicks
	i endTimeNano
	j endTimeTicks
	k tickDuration
	<init> (Ljava/util/Map;JIJI)V <init>
	c (Ljava/lang/String;)Lbao; getEntry
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/lang/String;Ljava/lang/String;)Z isDirectChild
	h ()Ljava/util/Map; getCounterValues
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	a (Ljava/nio/file/Path;)Z saveResults
	a (JI)Ljava/lang/String; getProfilerResults
	e ()Ljava/lang/String; getProfilerResults
	a (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; indentLine
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (ILjava/lang/String;Lbaj$a;ILjava/lang/StringBuilder;)V appendCounterResults
	a (Ljava/util/Map;Ljava/lang/StringBuilder;I)V appendCounters
	i ()Ljava/lang/String; getComment
	f ()I getTickDuration
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Lbaj$a;)V lambda$appendCounters$6
	a (IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V lambda$appendCounterResults$5
	a (Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V lambda$appendProfilerResults$4
	a (Ljava/util/Map;Ljava/lang/String;Lbao;)V lambda$getCounterValues$3
	a (Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V lambda$getCounterValues$2
	d (Ljava/lang/String;)Lbaj$a; lambda$getCounterValues$1
	a (Lbaj$a;)J lambda$static$0
	<clinit> ()V <clinit>
baj$1 net/minecraft/util/profiling/FilledProfileResults$1
	<init> ()V <init>
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
baj$a net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	a selfValue
	b totalValue
	c children
	<init> ()V <init>
	a (Ljava/util/Iterator;J)V addValue
	a (Ljava/lang/String;)Lbaj$a; lambda$addValue$0
bak net/minecraft/util/profiling/InactiveProfiler
	a INSTANCE
	<init> ()V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	a (Lbbr;)V markForCharting
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;I)V incrementCounter
	d ()Lbam; getResults
	c (Ljava/lang/String;)Lbag$a; getEntry
	e ()Ljava/util/Set; getChartedPaths
	<clinit> ()V <clinit>
bal net/minecraft/util/profiling/ProfileCollector
	d ()Lbam; getResults
	c (Ljava/lang/String;)Lbag$a; getEntry
	e ()Ljava/util/Set; getChartedPaths
bam net/minecraft/util/profiling/ProfileResults
	d PATH_SEPARATOR
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	a ()J getStartTimeNano
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	g ()J getNanoDuration
	f ()I getTickDuration
	e ()Ljava/lang/String; getProfilerResults
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
ban net/minecraft/util/profiling/ProfilerFiller
	b ROOT
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	a (Lbbr;)V markForCharting
	d (Ljava/lang/String;)V incrementCounter
	a (Ljava/lang/String;I)V incrementCounter
	c (Ljava/util/function/Supplier;)V incrementCounter
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lban;Lban;)Lban; tee
ban$1 net/minecraft/util/profiling/ProfilerFiller$1
	a val$first
	c val$second
	<init> (Lban;Lban;)V <init>
	a ()V startTick
	b ()V endTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	a (Lbbr;)V markForCharting
	c ()V pop
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;I)V incrementCounter
bao net/minecraft/util/profiling/ProfilerPathEntry
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
bap net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	<init> (Ljava/lang/String;DDJ)V <init>
	a (Lbap;)I compareTo
	a ()I getColor
	compareTo (Ljava/lang/Object;)I compareTo
baq net/minecraft/util/profiling/SingleTickProfiler
	a LOGGER
	b realTime
	c saveThreshold
	d tick
	e location
	f profiler
	<init> (Ljava/util/function/LongSupplier;Ljava/lang/String;J)V <init>
	a ()Lban; startTick
	b ()V endTick
	a (Ljava/lang/String;)Lbaq; createTickProfiler
	a (Lban;Lbaq;)Lban; decorateFiller
	c ()I lambda$startTick$0
	<clinit> ()V <clinit>
bar net/minecraft/util/profiling/jfr/Environment
	a CLIENT
	b SERVER
	c description
	d $VALUES
	values ()[Lbar; values
	valueOf (Ljava/lang/String;)Lbar; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;)Lbar; from
	a ()Ljava/lang/String; getDescription
	b ()[Lbar; $values
	<clinit> ()V <clinit>
bas net/minecraft/util/profiling/jfr/JfrProfiler
	f LOGGER
	a ROOT_CATEGORY
	b WORLD_GEN_CATEGORY
	c TICK_CATEGORY
	d NETWORK_CATEGORY
	g CUSTOM_EVENTS
	h FLIGHT_RECORDER_CONFIG
	i DATE_TIME_FORMATTER
	j INSTANCE
	k recording
	l currentAverageTickTime
	m networkTrafficByAddress
	<init> ()V <init>
	a ()Lbas; getInstance
	a (Lbar;)Z start
	b ()Ljava/nio/file/Path; stop
	c ()Z isRunning
	d ()Z isAvailable
	a (Ljava/io/Reader;Lbar;)Z start
	f ()V setupSummaryListener
	a (F)V onServerTick
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	b (IILjava/net/SocketAddress;I)V onPacketSent
	a (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b; networkStatFor
	e ()Lbaw; onWorldLoadedStarted
	a (Lclt;Lacp;Ljava/lang/String;)Lbaw; onChunkGenerate
	a (Lbar;Ljava/lang/String;Ljdk/jfr/Recording;)V lambda$start$2
	g ()V lambda$new$1
	h ()V lambda$new$0
	<clinit> ()V <clinit>
bas$1 net/minecraft/util/profiling/jfr/JfrProfiler$1
	a summaryReporter
	b this$0
	<init> (Lbas;)V <init>
	recordingStateChanged (Ljdk/jfr/Recording;)V recordingStateChanged
	a ()V lambda$$0
bat net/minecraft/util/profiling/jfr/JvmProfiler
	e INSTANCE
	a (Lbar;)Z start
	b ()Ljava/nio/file/Path; stop
	c ()Z isRunning
	d ()Z isAvailable
	a (F)V onServerTick
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	b (IILjava/net/SocketAddress;I)V onPacketSent
	e ()Lbaw; onWorldLoadedStarted
	a (Lclt;Lacp;Ljava/lang/String;)Lbaw; onChunkGenerate
	<clinit> ()V <clinit>
bat$a net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	b LOGGER
	a noOpCommit
	<init> ()V <init>
	a (Lbar;)Z start
	b ()Ljava/nio/file/Path; stop
	c ()Z isRunning
	d ()Z isAvailable
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	b (IILjava/net/SocketAddress;I)V onPacketSent
	a (F)V onServerTick
	e ()Lbaw; onWorldLoadedStarted
	a (Lclt;Lacp;Ljava/lang/String;)Lbaw; onChunkGenerate
	a ()V lambda$static$0
	<clinit> ()V <clinit>
bau net/minecraft/util/profiling/jfr/Percentiles
	a DEFAULT_INDEXES
	<init> ()V <init>
	a ([J)Ljava/util/Map; evaluate
	a ([D)Ljava/util/Map; evaluate
	a (Ljava/util/Map;)Ljava/util/Map; sorted
	a (Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V lambda$sorted$0
	<clinit> ()V <clinit>
bav net/minecraft/util/profiling/jfr/SummaryReporter
	a LOGGER
	b onDeregistration
	<init> (Ljava/lang/Runnable;)V <init>
	a (Ljava/nio/file/Path;)V recordingStopped
	a (Ljava/util/function/Supplier;)V infoWithFallback
	a (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V warnWithFallback
	a ()Ljava/lang/String; lambda$recordingStopped$3
	b (Ljava/nio/file/Path;)Ljava/lang/String; lambda$recordingStopped$2
	b ()Ljava/lang/String; lambda$recordingStopped$1
	c (Ljava/nio/file/Path;)Ljava/lang/String; lambda$recordingStopped$0
	<clinit> ()V <clinit>
baw net/minecraft/util/profiling/jfr/callback/ProfiledDuration
	finish ()V finish
bax net/minecraft/util/profiling/jfr/callback/package-info
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	EVENT_NAME EVENT_NAME
	TYPE TYPE
	worldPosX worldPosX
	worldPosZ worldPosZ
	chunkPosX chunkPosX
	chunkPosZ chunkPosZ
	targetStatus targetStatus
	level level
	<init> (Lclt;Lacp;Ljava/lang/String;)V <init>
	<clinit> ()V <clinit>
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	a WORLD_POS_X
	b WORLD_POS_Z
	c CHUNK_POS_X
	d CHUNK_POS_Z
	e STATUS
	f LEVEL
	<init> ()V <init>
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	EVENT_NAME EVENT_NAME
	TYPE TYPE
	remoteAddress remoteAddress
	sentBytes sentBytes
	sentPackets sentPackets
	receivedBytes receivedBytes
	receivedPackets receivedPackets
	<init> (Ljava/lang/String;)V <init>
	<clinit> ()V <clinit>
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	a REMOTE_ADDRESS
	b SENT_BYTES
	d SENT_PACKETS
	c RECEIVED_BYTES
	e RECEIVED_PACKETS
	<init> ()V <init>
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	a sentBytes
	b sentPackets
	c receivedBytes
	d receivedPackets
	e event
	<init> (Ljava/lang/String;)V <init>
	a (I)V trackSentPacket
	b (I)V trackReceivedPacket
	a ()V commitEvent
bay net/minecraft/util/profiling/jfr/event/PacketEvent
	protocolId protocolId
	packetId packetId
	remoteAddress remoteAddress
	bytes bytes
	<init> (IILjava/net/SocketAddress;I)V <init>
bay$a net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	a REMOTE_ADDRESS
	b PROTOCOL_ID
	c PACKET_ID
	d BYTES
	<init> ()V <init>
net/minecraft/util/profiling/jfr/event/PacketReceivedEvent net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	NAME NAME
	TYPE TYPE
	<init> (IILjava/net/SocketAddress;I)V <init>
	<clinit> ()V <clinit>
net/minecraft/util/profiling/jfr/event/PacketSentEvent net/minecraft/util/profiling/jfr/event/PacketSentEvent
	NAME NAME
	TYPE TYPE
	<init> (IILjava/net/SocketAddress;I)V <init>
	<clinit> ()V <clinit>
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	EVENT_NAME EVENT_NAME
	TYPE TYPE
	averageTickDurationNanos averageTickDurationNanos
	<init> (F)V <init>
	<clinit> ()V <clinit>
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	a AVERAGE_TICK_DURATION
	<init> ()V <init>
net/minecraft/util/profiling/jfr/event/WorldLoadFinishedEvent net/minecraft/util/profiling/jfr/event/WorldLoadFinishedEvent
	EVENT_NAME EVENT_NAME
	TYPE TYPE
	<init> ()V <init>
	<clinit> ()V <clinit>
baz net/minecraft/util/profiling/jfr/event/package-info
bba net/minecraft/util/profiling/jfr/package-info
bbb net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	a recordingStarted
	b recordingEnded
	c chunkGenStats
	d cpuLoadStat
	e receivedPackets
	f sentPackets
	g fileWrites
	h fileReads
	i garbageCollections
	j gcTotalDuration
	k gcHeapStats
	l threadAllocationStats
	m tickTimes
	n worldCreationDuration
	<init> (Ljava/util/stream/Stream;)V <init>
	a (Ljava/nio/file/Path;)Lbbc; parse
	a ()Lbbc; results
	a (Ljava/util/stream/Stream;)V capture
	a (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V incrementPacket
	a (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V appendFileIO
	a (Ljava/time/Duration;Ljava/util/Map;)Lbbk; collectPacketStats
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$collectPacketStats$2
	a (Lbbk$b;)Lbbb$a; lambda$incrementPacket$1
	a (Ljdk/jfr/consumer/RecordedEvent;)V lambda$capture$0
bbb$1 net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	a val$recordingFile
	<init> (Ljdk/jfr/consumer/RecordingFile;)V <init>
	hasNext ()Z hasNext
	a ()Ljdk/jfr/consumer/RecordedEvent; next
	next ()Ljava/lang/Object; next
bbb$a net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	a count
	b totalSize
	<init> ()V <init>
	a (I)V increment
	a ()Lbbk$a; toCountAndSize
bbc net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	a recordingStarted
	b recordingEnded
	c recordingDuration
	d worldCreationDuration
	e tickTimes
	f cpuLoadStats
	g heapSummary
	h threadAllocationSummary
	i receivedPacketsSummary
	j sentPacketsSummary
	k fileWrites
	l fileReads
	m chunkGenStats
	<init> (Ljava/time/Instant;Ljava/time/Instant;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/List;Ljava/util/List;Lbbj$a;Lbbl$a;Lbbk;Lbbk;Lbbi$a;Lbbi$a;Ljava/util/List;)V <init>
	a ()Ljava/util/List; chunkGenSummary
	b ()Ljava/lang/String; asJson
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ljava/time/Instant; recordingStarted
	d ()Ljava/time/Instant; recordingEnded
	e ()Ljava/time/Duration; recordingDuration
	f ()Ljava/time/Duration; worldCreationDuration
	g ()Ljava/util/List; tickTimes
	h ()Ljava/util/List; cpuLoadStats
	i ()Lbbj$a; heapSummary
	j ()Lbbl$a; threadAllocationSummary
	k ()Lbbk; receivedPacketsSummary
	l ()Lbbk; sentPacketsSummary
	m ()Lbbi$a; fileWrites
	n ()Lbbi$a; fileReads
	o ()Ljava/util/List; chunkGenStats
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration; lambda$chunkGenSummary$1
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$chunkGenSummary$0
bbd net/minecraft/util/profiling/jfr/parse/package-info
bbe net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	b BYTES_PER_SECOND
	c COUNT
	d DURATION_NANOS_TOTAL
	e TOTAL_BYTES
	f COUNT_PER_SECOND
	a gson
	<init> ()V <init>
	a (Lbbc;)Ljava/lang/String; format
	a (Lbbj$a;)Lcom/google/gson/JsonElement; heap
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; chunkGen
	a (Lbbl$a;)Lcom/google/gson/JsonElement; threadAllocations
	b (Ljava/util/List;)Lcom/google/gson/JsonElement; serverTicks
	b (Lbbc;)Lcom/google/gson/JsonElement; fileIO
	a (Lbbi$a;)Lcom/google/gson/JsonElement; fileIoSummary
	c (Lbbc;)Lcom/google/gson/JsonElement; network
	a (Lbbk;)Lcom/google/gson/JsonElement; packets
	c (Ljava/util/List;)Lcom/google/gson/JsonElement; cpu
	a (Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject; lambda$cpu$11
	a (Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V lambda$packets$10
	b (Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V lambda$fileIoSummary$9
	a (Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V lambda$serverTicks$8
	a (Lbbm;)D lambda$serverTicks$7
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V lambda$threadAllocations$6
	a (Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V lambda$threadAllocations$5
	a (Lbbg;)Lcom/google/gson/JsonElement; lambda$chunkGen$4
	b (Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V lambda$chunkGen$3
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V lambda$chunkGen$2
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V lambda$chunkGen$1
	a (Lcom/mojang/datafixers/util/Pair;)D lambda$chunkGen$0
bbf net/minecraft/util/profiling/jfr/serialize/package-info
bbg net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	a duration
	b chunkPos
	c worldPos
	d status
	e level
	<init> (Ljava/time/Duration;Lclt;Lahv;Ldec;Ljava/lang/String;)V <init>
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbg; from
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/Duration; duration
	b ()Lclt; chunkPos
	c ()Lahv; worldPos
	d ()Ldec; status
	e ()Ljava/lang/String; level
bbh net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	a jvm
	b userJvm
	c system
	<init> (DDD)V <init>
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbh; from
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()D jvm
	b ()D userJvm
	c ()D system
bbi net/minecraft/util/profiling/jfr/stats/FileIOStat
	a duration
	b path
	c bytes
	<init> (Ljava/time/Duration;Ljava/lang/String;J)V <init>
	a (Ljava/time/Duration;Ljava/util/List;)Lbbi$a; summary
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/Duration; duration
	b ()Ljava/lang/String; path
	c ()J bytes
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$summary$4
	a (Lbbi;)J lambda$summary$3
	b (Lbbi;)Ljava/lang/String; lambda$summary$2
	c (Lbbi;)Z lambda$summary$1
	d (Lbbi;)J lambda$summary$0
bbi$a net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	a totalBytes
	b bytesPerSecond
	c counts
	d countsPerSecond
	e timeSpentInIO
	f topTenContributorsByTotalBytes
	<init> (JDJDLjava/time/Duration;Ljava/util/List;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()J totalBytes
	b ()D bytesPerSecond
	c ()J counts
	d ()D countsPerSecond
	e ()Ljava/time/Duration; timeSpentInIO
	f ()Ljava/util/List; topTenContributorsByTotalBytes
bbj net/minecraft/util/profiling/jfr/stats/GcHeapStat
	a timestamp
	b heapUsed
	c timing
	<init> (Ljava/time/Instant;JLbbj$b;)V <init>
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbj; from
	a (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbbj$a; summary
	a (Ljava/util/List;)D calculateAllocationRatePerSecond
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/Instant; timestamp
	b ()J heapUsed
	c ()Lbbj$b; timing
	a (Lbbj;)Lbbj$b; lambda$calculateAllocationRatePerSecond$0
bbj$a net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	a duration
	b gcTotalDuration
	c totalGCs
	d allocationRateBytesPerSecond
	<init> (Ljava/time/Duration;Ljava/time/Duration;ID)V <init>
	a ()F gcOverHead
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/time/Duration; duration
	c ()Ljava/time/Duration; gcTotalDuration
	d ()I totalGCs
	e ()D allocationRateBytesPerSecond
bbj$b net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	a BEFORE_GC
	b AFTER_GC
	c $VALUES
	values ()[Lbbj$b; values
	valueOf (Ljava/lang/String;)Lbbj$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbbj$b; $values
	<clinit> ()V <clinit>
bbk net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	a totalPacketCountAndSize
	b largestSizeContributors
	c recordingDuration
	<init> (Ljava/time/Duration;Ljava/util/List;)V <init>
	a ()D getCountsPerSecond
	b ()D getSizePerSecond
	c ()J getTotalCount
	d ()J getTotalSize
	e ()Ljava/util/List; largestSizeContributors
	f ()Lbbk$a; lambda$new$0
bbk$a net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	a totalCount
	b totalSize
	c SIZE_THEN_COUNT
	<init> (JJ)V <init>
	a (Lbbk$a;)Lbbk$a; add
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()J totalCount
	b ()J totalSize
	<clinit> ()V <clinit>
bbk$b net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	a direction
	b protocolId
	c packetId
	d PACKET_NAME_BY_ID
	<init> (Lup;II)V <init>
	a ()Ljava/lang/String; packetName
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbk$b; from
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lup; direction
	c ()I protocolId
	d ()I packetId
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lup;Lse;Ljava/lang/Integer;Ljava/lang/Class;)V lambda$static$0
	<clinit> ()V <clinit>
bbl net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	a timestamp
	b threadName
	c totalBytes
	d UNKNOWN_THREAD
	<init> (Ljava/time/Instant;Ljava/lang/String;J)V <init>
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbl; from
	a (Ljava/util/List;)Lbbl$a; summary
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/Instant; timestamp
	b ()Ljava/lang/String; threadName
	c ()J totalBytes
	a (Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V lambda$summary$1
	a (Lbbl;)Ljava/lang/String; lambda$summary$0
bbl$a net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	a allocationsPerSecondByThread
	<init> (Ljava/util/Map;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Map; allocationsPerSecondByThread
bbm net/minecraft/util/profiling/jfr/stats/TickTimeStat
	a timestamp
	b currentAverage
	<init> (Ljava/time/Instant;Ljava/time/Duration;)V <init>
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbm; from
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/time/Instant; timestamp
	b ()Ljava/time/Duration; currentAverage
bbn net/minecraft/util/profiling/jfr/stats/TimeStamped
	a ()Ljava/time/Instant; getTimestamp
bbo net/minecraft/util/profiling/jfr/stats/TimedStat
	a ()Ljava/time/Duration; duration
bbp net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	a fastest
	b slowest
	c secondSlowest
	d count
	e percentilesNanos
	f totalDuration
	<init> (Lbbo;Lbbo;Lbbo;ILjava/util/Map;Ljava/time/Duration;)V <init>
	a (Ljava/util/List;)Lbbp; summary
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbbo; fastest
	b ()Lbbo; slowest
	c ()Lbbo; secondSlowest
	d ()I count
	e ()Ljava/util/Map; percentilesNanos
	f ()Ljava/time/Duration; totalDuration
	a (Lbbo;)J lambda$summary$0
bbq net/minecraft/util/profiling/jfr/stats/package-info
bbr net/minecraft/util/profiling/metrics/MetricCategory
	a PATH_FINDING
	b EVENT_LOOPS
	c MAIL_BOXES
	d TICK_LOOP
	e JVM
	f CHUNK_RENDERING
	g CHUNK_RENDERING_DISPATCHING
	h CPU
	i GPU
	j description
	k $VALUES
	values ()[Lbbr; values
	valueOf (Ljava/lang/String;)Lbbr; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getDescription
	b ()[Lbbr; $values
	<clinit> ()V <clinit>
bbs net/minecraft/util/profiling/metrics/MetricSampler
	b name
	c category
	d sampler
	e ticks
	f values
	g isRunning
	h beforeTick
	a thresholdTest
	i currentValue
	<init> (Ljava/lang/String;Lbbr;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Lbbs$c;)V <init>
	a (Ljava/lang/String;Lbbr;Ljava/util/function/DoubleSupplier;)Lbbs; create
	a (Ljava/lang/String;Lbbr;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lbbs; create
	a (Ljava/lang/String;Lbbr;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbbs$a; builder
	a ()V onStartTick
	a (I)V onEndTick
	b ()V onFinished
	h ()V verifyRunning
	c ()Ljava/util/function/DoubleSupplier; getSampler
	d ()Ljava/lang/String; getName
	e ()Lbbr; getCategory
	f ()Lbbs$b; result
	g ()Z triggersThreshold
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
bbs$a net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	a name
	b category
	c sampler
	d context
	e beforeTick
	f thresholdTest
	<init> (Ljava/lang/String;Lbbr;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V <init>
	a (Ljava/util/function/Consumer;)Lbbs$a; withBeforeTick
	a (Lbbs$c;)Lbbs$a; withThresholdAlert
	a ()Lbbs; build
	b (Ljava/util/function/Consumer;)V lambda$withBeforeTick$1
	a (Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D lambda$new$0
bbs$b net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	a recording
	b firstTick
	c lastTick
	<init> (IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V <init>
	a (I)D valueAtTick
	a ()I getFirstTick
	b ()I getLastTick
bbs$c net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
	test (D)Z test
bbs$d net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	a percentageIncreaseThreshold
	b previousValue
	<init> (F)V <init>
	test (D)Z test
bbt net/minecraft/util/profiling/metrics/MetricsRegistry
	a INSTANCE
	b measuredInstances
	<init> ()V <init>
	a (Lbbv;)V add
	a ()Ljava/util/List; getRegisteredSamplers
	a (Ljava/util/Map;)Ljava/util/List; aggregateDuplicates
	a (Ljava/util/Map$Entry;)Lbbs; lambda$aggregateDuplicates$1
	b (Lbbv;)Ljava/util/stream/Stream; lambda$getRegisteredSamplers$0
	<clinit> ()V <clinit>
bbt$a net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	b delegates
	<init> (Ljava/lang/String;Ljava/util/List;)V <init>
	a (Ljava/util/List;)Lbbs$c; thresholdTest
	b (Ljava/util/List;)V beforeTick
	c (Ljava/util/List;)D averageValueFromDelegates
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/util/List;D)Z lambda$thresholdTest$3
	a (DLbbs;)Z lambda$thresholdTest$2
	d (Ljava/util/List;)V lambda$new$1
	e (Ljava/util/List;)D lambda$new$0
bbu net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
bbv net/minecraft/util/profiling/metrics/ProfilerMeasured
	bk ()Ljava/util/List; profiledMetrics
bbw net/minecraft/util/profiling/metrics/package-info
bbx net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	a PROFILING_MAX_DURATION_SECONDS
	b globalOnReportFinished
	c deviationsBySampler
	d taskProfiler
	e ioExecutor
	f metricsPersister
	g onProfilingEnd
	h onReportFinished
	i metricsSamplerProvider
	j wallTimeSource
	k deadlineNano
	l currentTick
	m singleTickProfiler
	n killSwitch
	o thisTickSamplers
	<init> (Lbbu;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbcd;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V <init>
	a (Lbbu;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbcd;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbbx; createStarted
	a ()V end
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lban; getProfiler
	g ()V verifyStarted
	a (Lbam;)V scheduleSaveResults
	a (Ljava/util/Collection;)V cleanup
	a (Ljava/util/function/Consumer;)V registerGlobalCompletionCallback
	a (Ljava/util/HashSet;Lbam;)V lambda$scheduleSaveResults$5
	h ()I lambda$endTick$4
	a (Lbbs;)Ljava/util/List; lambda$endTick$3
	i ()Lbal; lambda$startTick$2
	j ()I lambda$new$1
	k ()I lambda$new$0
	<clinit> ()V <clinit>
bby net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	a INSTANCE
	<init> ()V <init>
	a ()V end
	b ()V cancel
	c ()V startTick
	e ()Z isRecording
	f ()Lban; getProfiler
	d ()V endTick
	<clinit> ()V <clinit>
bbz net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	a ()V end
	b ()V cancel
	c ()V startTick
	e ()Z isRecording
	f ()Lban; getProfiler
	d ()V endTick
bca net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	a previouslyFoundSamplerNames
	<init> ()V <init>
	a (Ljava/util/function/Supplier;)Ljava/util/Set; newSamplersFoundInProfiler
	a (Ljava/util/function/Supplier;Ljava/lang/String;Lbbr;)Lbbs; samplerForProfilingPath
	a (Ljava/util/function/Supplier;Ljava/lang/String;)D lambda$samplerForProfilingPath$2
	a (Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Lbbs; lambda$newSamplersFoundInProfiler$1
	a (Lorg/apache/commons/lang3/tuple/Pair;)Z lambda$newSamplersFoundInProfiler$0
bcb net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	a LOGGER
	b samplers
	c samplerFactory
	<init> (Ljava/util/function/LongSupplier;Z)V <init>
	a ()Ljava/util/Set; runtimeIndependentSamplers
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
	a (Ljava/util/function/LongSupplier;)Lbbs; tickTimeSampler
	a (Lcom/google/common/base/Stopwatch;)D lambda$tickTimeSampler$3
	b ()D lambda$runtimeIndependentSamplers$2
	a (Lbcb$a;I)Lbbs; lambda$runtimeIndependentSamplers$1
	b (Lbcb$a;I)D lambda$runtimeIndependentSamplers$0
	<clinit> ()V <clinit>
bcb$1 net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	a val$timeSource
	<init> (Ljava/util/function/LongSupplier;)V <init>
	read ()J read
bcb$a net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	b systemInfo
	c processor
	a nrOfCpus
	d previousCpuLoadTick
	e currentLoad
	f lastPollMs
	<init> ()V <init>
	a (I)D loadForCpu
bcc net/minecraft/util/profiling/metrics/profiling/package-info
bcd net/minecraft/util/profiling/metrics/storage/MetricsPersister
	a PROFILING_RESULTS_DIR
	b METRICS_DIR_NAME
	c DEVIATIONS_DIR_NAME
	d PROFILING_RESULT_FILENAME
	e LOGGER
	f rootFolderName
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/util/Set;Ljava/util/Map;Lbam;)Ljava/nio/file/Path; saveReports
	a (Ljava/util/Set;Ljava/nio/file/Path;)V saveMetrics
	a (Lbbr;Ljava/util/List;Ljava/nio/file/Path;)V saveCategory
	a (Ljava/util/Map;Ljava/nio/file/Path;)V saveDeviations
	a (Lbam;Ljava/nio/file/Path;)V saveProfilingTaskExecutionResult
	a (Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbbs;Ljava/util/List;)V lambda$saveDeviations$4
	a (Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbbs;Lbce;)V lambda$saveDeviations$3
	a (I)[Ljava/lang/String; lambda$saveCategory$2
	a (ILbbs$b;)Ljava/lang/String; lambda$saveCategory$1
	a (Ljava/nio/file/Path;Lbbr;Ljava/util/List;)V lambda$saveMetrics$0
	<clinit> ()V <clinit>
bce net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	a timestamp
	b tick
	c profilerResultAtTick
	<init> (Ljava/time/Instant;ILbam;)V <init>
bcf net/minecraft/util/profiling/metrics/storage/package-info
bcg net/minecraft/util/profiling/package-info
bch net/minecraft/util/random/SimpleWeightedRandomList
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodecAllowingEmpty
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodec
	<init> (Ljava/util/List;)V <init>
	a ()Lbch$a; builder
	b ()Lbch; empty
	a (Ljava/lang/Object;)Lbch; single
	a (Lapf;)Ljava/util/Optional; getRandomValue
bch$a net/minecraft/util/random/SimpleWeightedRandomList$Builder
	a result
	<init> ()V <init>
	a (Ljava/lang/Object;I)Lbch$a; add
	a ()Lbch; build
bci net/minecraft/util/random/Weight
	a CODEC
	b ONE
	c LOGGER
	d value
	<init> (I)V <init>
	a (I)Lbci; of
	a ()I asInt
	b (I)V validateWeight
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	<clinit> ()V <clinit>
bcj net/minecraft/util/random/WeightedEntry
	a ()Lbci; getWeight
	a (Ljava/lang/Object;I)Lbcj$b; wrap
bcj$a net/minecraft/util/random/WeightedEntry$IntrusiveBase
	a weight
	<init> (I)V <init>
	<init> (Lbci;)V <init>
	a ()Lbci; getWeight
bcj$b net/minecraft/util/random/WeightedEntry$Wrapper
	a data
	b weight
	<init> (Ljava/lang/Object;Lbci;)V <init>
	b ()Ljava/lang/Object; getData
	a ()Lbci; getWeight
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$0
bck net/minecraft/util/random/WeightedRandom
	<init> ()V <init>
	a (Ljava/util/List;)I getTotalWeight
	a (Lapf;Ljava/util/List;I)Ljava/util/Optional; getRandomItem
	a (Ljava/util/List;I)Ljava/util/Optional; getWeightedItem
	a (Lapf;Ljava/util/List;)Ljava/util/Optional; getRandomItem
bcl net/minecraft/util/random/WeightedRandomList
	a totalWeight
	b items
	<init> (Ljava/util/List;)V <init>
	c ()Lbcl; create
	a ([Lbcj;)Lbcl; create
	a (Ljava/util/List;)Lbcl; create
	d ()Z isEmpty
	b (Lapf;)Ljava/util/Optional; getRandom
	e ()Ljava/util/List; unwrap
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
bcm net/minecraft/util/random/package-info
bcn net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	<init> (Ljava/lang/String;)V <init>
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	e (Ljava/lang/Runnable;)Z shouldRun
	bl ()Z isSameThread
	au ()Ljava/lang/Thread; getRunningThread
	at ()Z scheduleExecutables
	bm ()I getPendingTasksCount
	bn ()Ljava/lang/String; name
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	g (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	h (Ljava/lang/Runnable;)V executeBlocking
	i (Ljava/lang/Runnable;)V tell
	execute (Ljava/lang/Runnable;)V execute
	c (Ljava/lang/Runnable;)V executeIfPossible
	bo ()V dropAllTasks
	bp ()V runAllTasks
	x ()Z pollTask
	c (Ljava/util/function/BooleanSupplier;)V managedBlock
	bq ()V waitForTasks
	d (Ljava/lang/Runnable;)V doRunTask
	bk ()Ljava/util/List; profiledMetrics
	a (Ljava/lang/Object;)V tell
	b (Ljava/lang/Runnable;)Ljava/lang/Void; lambda$submitAsync$0
	<clinit> ()V <clinit>
bco net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
	<init> (Ljava/lang/String;)V <init>
	newThread (Ljava/lang/Runnable;)Ljava/lang/Thread; newThread
	a (Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$newThread$0
	<clinit> ()V <clinit>
bcp net/minecraft/util/thread/ProcessorHandle
	bn ()Ljava/lang/String; name
	a (Ljava/lang/Object;)V tell
	close ()V close
	b (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; askEither
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lbcp; of
	a (Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V lambda$askEither$0
bcp$1 net/minecraft/util/thread/ProcessorHandle$1
	a val$name
	b val$tell
	<init> (Ljava/lang/String;Ljava/util/function/Consumer;)V <init>
	bn ()Ljava/lang/String; name
	a (Ljava/lang/Object;)V tell
	toString ()Ljava/lang/String; toString
bcq net/minecraft/util/thread/ProcessorMailbox
	a LOGGER
	b CLOSED_BIT
	c SCHEDULED_BIT
	d status
	e queue
	f dispatcher
	g name
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lbcq; create
	<init> (Lbcs;Ljava/util/concurrent/Executor;Ljava/lang/String;)V <init>
	d ()Z setAsScheduled
	e ()V setAsIdle
	f ()Z canBeScheduled
	close ()V close
	g ()Z shouldProcess
	h ()Z pollTask
	run ()V run
	a ()V runAll
	a (Ljava/lang/Object;)V tell
	i ()V registerForExecution
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	b ()I size
	c ()Z hasWork
	toString ()Ljava/lang/String; toString
	bn ()Ljava/lang/String; name
	bk ()Ljava/util/List; profiledMetrics
	a (I)Z lambda$runAll$1
	b (I)Z lambda$run$0
	<clinit> ()V <clinit>
bcr net/minecraft/util/thread/ReentrantBlockableEventLoop
	b reentrantCount
	<init> (Ljava/lang/String;)V <init>
	at ()Z scheduleExecutables
	br ()Z runningTask
	d (Ljava/lang/Runnable;)V doRunTask
bcs net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
bcs$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queues
	b size
	<init> (I)V <init>
	d ()Ljava/lang/Runnable; pop
	a (Lbcs$b;)Z push
	b ()Z isEmpty
	c ()I size
	a (Ljava/lang/Object;)Z push
	a ()Ljava/lang/Object; pop
bcs$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	<init> (ILjava/lang/Runnable;)V <init>
	run ()V run
	a ()I getPriority
bcs$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	<init> (Ljava/util/Queue;)V <init>
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
bct net/minecraft/util/thread/package-info
bcu net/minecraft/util/valueproviders/BiasedToBottomInt
	a CODEC
	b minInclusive
	f maxInclusive
	<init> (II)V <init>
	a (II)Lbcu; of
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	toString ()Ljava/lang/String; toString
	a (Lbcu;)Lcom/mojang/serialization/DataResult; lambda$static$4
	b (Lbcu;)Ljava/lang/String; lambda$static$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	c (Lbcu;)Ljava/lang/Integer; lambda$static$1
	d (Lbcu;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
bcv net/minecraft/util/valueproviders/ClampedInt
	a CODEC
	b source
	f minInclusive
	g maxInclusive
	a (Lbdc;II)Lbcv; of
	<init> (Lbdc;II)V <init>
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	a (Lbcv;)Lcom/mojang/serialization/DataResult; lambda$static$5
	b (Lbcv;)Ljava/lang/String; lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	c (Lbcv;)Ljava/lang/Integer; lambda$static$2
	d (Lbcv;)Ljava/lang/Integer; lambda$static$1
	e (Lbcv;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
bcw net/minecraft/util/valueproviders/ClampedNormalFloat
	a CODEC
	b mean
	d deviation
	e min
	f max
	a (FFFF)Lbcw; of
	<init> (FFFF)V <init>
	a (Lapf;)F sample
	a (Lapf;FFFF)F sample
	a ()F getMinValue
	b ()F getMaxValue
	c ()Lbdb; getType
	toString ()Ljava/lang/String; toString
	a (Lbcw;)Lcom/mojang/serialization/DataResult; lambda$static$6
	b (Lbcw;)Ljava/lang/String; lambda$static$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	c (Lbcw;)Ljava/lang/Float; lambda$static$3
	d (Lbcw;)Ljava/lang/Float; lambda$static$2
	e (Lbcw;)Ljava/lang/Float; lambda$static$1
	f (Lbcw;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
bcx net/minecraft/util/valueproviders/ClampedNormalInt
	a CODEC
	b mean
	f deviation
	g min_inclusive
	h max_inclusive
	a (FFII)Lbcx; of
	<init> (FFII)V <init>
	a (Lapf;)I sample
	a (Lapf;FFFF)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	toString ()Ljava/lang/String; toString
	a (Lbcx;)Lcom/mojang/serialization/DataResult; lambda$static$6
	b (Lbcx;)Ljava/lang/String; lambda$static$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	c (Lbcx;)Ljava/lang/Integer; lambda$static$3
	d (Lbcx;)Ljava/lang/Integer; lambda$static$2
	e (Lbcx;)Ljava/lang/Float; lambda$static$1
	f (Lbcx;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
bcy net/minecraft/util/valueproviders/ConstantFloat
	a ZERO
	b CODEC
	d value
	a (F)Lbcy; of
	<init> (F)V <init>
	d ()F getValue
	a (Lapf;)F sample
	a ()F getMinValue
	b ()F getMaxValue
	c ()Lbdb; getType
	toString ()Ljava/lang/String; toString
	a (Lbcy;)Lcom/mojang/datafixers/util/Either; lambda$static$4
	a (Lcom/mojang/datafixers/util/Either;)Lbcy; lambda$static$3
	b (Lbcy;)Lbcy; lambda$static$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	c (Lbcy;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
bcz net/minecraft/util/valueproviders/ConstantInt
	a ZERO
	b CODEC
	f value
	a (I)Lbcz; of
	<init> (I)V <init>
	d ()I getValue
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	toString ()Ljava/lang/String; toString
	a (Lbcz;)Lcom/mojang/datafixers/util/Either; lambda$static$4
	a (Lcom/mojang/datafixers/util/Either;)Lbcz; lambda$static$3
	b (Lbcz;)Lbcz; lambda$static$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	c (Lbcz;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
bda net/minecraft/util/valueproviders/FloatProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	<init> ()V <init>
	a (FF)Lcom/mojang/serialization/Codec; codec
	a ()F getMinValue
	b ()F getMaxValue
	c ()Lbdb; getType
	a (FFLbda;)Lcom/mojang/serialization/DataResult; lambda$codec$5
	a (FLbda;)Ljava/lang/String; lambda$codec$4
	b (FLbda;)Ljava/lang/String; lambda$codec$3
	a (Lbda;)Lcom/mojang/datafixers/util/Either; lambda$static$2
	a (Lcom/mojang/datafixers/util/Either;)Lbda; lambda$static$1
	b (Lbda;)Lbda; lambda$static$0
	<clinit> ()V <clinit>
bdb net/minecraft/util/valueproviders/FloatProviderType
	a CONSTANT
	b UNIFORM
	c CLAMPED_NORMAL
	d TRAPEZOID
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbdb; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
bdc net/minecraft/util/valueproviders/IntProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	d NON_NEGATIVE_CODEC
	e POSITIVE_CODEC
	<init> ()V <init>
	b (II)Lcom/mojang/serialization/Codec; codec
	a (IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	a (IILbdc;)Lcom/mojang/serialization/DataResult; lambda$codec$5
	a (ILbdc;)Ljava/lang/String; lambda$codec$4
	b (ILbdc;)Ljava/lang/String; lambda$codec$3
	a (Lbdc;)Lcom/mojang/datafixers/util/Either; lambda$static$2
	a (Lcom/mojang/datafixers/util/Either;)Lbdc; lambda$static$1
	b (Lbdc;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
bdd net/minecraft/util/valueproviders/IntProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d CLAMPED
	e WEIGHTED_LIST
	f CLAMPED_NORMAL
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbdd; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
bde net/minecraft/util/valueproviders/MultipliedFloats
	a values
	<init> ([Lbdf;)V <init>
	a (Lapf;)F sample
	toString ()Ljava/lang/String; toString
bdf net/minecraft/util/valueproviders/SampledFloat
	a (Lapf;)F sample
bdg net/minecraft/util/valueproviders/TrapezoidFloat
	a CODEC
	b min
	d max
	e plateau
	a (FFF)Lbdg; of
	<init> (FFF)V <init>
	a (Lapf;)F sample
	a ()F getMinValue
	b ()F getMaxValue
	c ()Lbdb; getType
	toString ()Ljava/lang/String; toString
	a (Lbdg;)Lcom/mojang/serialization/DataResult; lambda$static$6
	b (Lbdg;)Ljava/lang/String; lambda$static$5
	c (Lbdg;)Ljava/lang/String; lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	d (Lbdg;)Ljava/lang/Float; lambda$static$2
	e (Lbdg;)Ljava/lang/Float; lambda$static$1
	f (Lbdg;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
bdh net/minecraft/util/valueproviders/UniformFloat
	a CODEC
	b minInclusive
	d maxExclusive
	<init> (FF)V <init>
	b (FF)Lbdh; of
	a (Lapf;)F sample
	a ()F getMinValue
	b ()F getMaxValue
	c ()Lbdb; getType
	toString ()Ljava/lang/String; toString
	a (Lbdh;)Lcom/mojang/serialization/DataResult; lambda$static$4
	b (Lbdh;)Ljava/lang/String; lambda$static$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	c (Lbdh;)Ljava/lang/Float; lambda$static$1
	d (Lbdh;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
bdi net/minecraft/util/valueproviders/UniformInt
	a CODEC
	b minInclusive
	f maxInclusive
	<init> (II)V <init>
	a (II)Lbdi; of
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	toString ()Ljava/lang/String; toString
	a (Lbdi;)Lcom/mojang/serialization/DataResult; lambda$static$4
	b (Lbdi;)Ljava/lang/String; lambda$static$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	c (Lbdi;)Ljava/lang/Integer; lambda$static$1
	d (Lbdi;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
bdj net/minecraft/util/valueproviders/WeightedListInt
	a CODEC
	b distribution
	f minValue
	g maxValue
	<init> (Lbch;)V <init>
	a (Lapf;)I sample
	a ()I getMinValue
	b ()I getMaxValue
	c ()Lbdd; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lbdj;)Lbch; lambda$static$0
	<clinit> ()V <clinit>
bdk net/minecraft/util/valueproviders/package-info
bdl net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c dimensions
	d levels
	e eraseCache
	f levelStorage
	g thread
	h dataFixer
	i running
	j finished
	k progress
	l totalChunks
	m converted
	n skipped
	o progressMap
	p status
	q REGEX
	r overworldDataStorage
	<init> (Ldyy$c;Lcom/mojang/datafixers/DataFixer;Lhr;Z)V <init>
	a ()V cancel
	i ()V work
	b (Lacp;)Ljava/util/List; getAllChunkPos
	b ()Z isFinished
	c ()Ljava/util/Set; levels
	a (Lacp;)F dimensionProgress
	d ()F getProgress
	e ()I getTotalChunks
	f ()I getConverted
	g ()I getSkipped
	h ()Lsw; getStatus
	a (Ljava/io/File;Ljava/lang/String;)Z lambda$getAllChunkPos$2
	j ()Ldyu; lambda$work$1
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V lambda$new$0
	<clinit> ()V <clinit>
bdm net/minecraft/util/worldupdate/package-info
bdn net/minecraft/world/BossEvent
	h id
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playBossMusic
	g createWorldFog
	<init> (Ljava/util/UUID;Lsw;Lbdn$a;Lbdn$b;)V <init>
	i ()Ljava/util/UUID; getId
	j ()Lsw; getName
	a (Lsw;)V setName
	k ()F getProgress
	a (F)V setProgress
	l ()Lbdn$a; getColor
	a (Lbdn$a;)V setColor
	m ()Lbdn$b; getOverlay
	a (Lbdn$b;)V setOverlay
	n ()Z shouldDarkenScreen
	a (Z)Lbdn; setDarkenScreen
	o ()Z shouldPlayBossMusic
	b (Z)Lbdn; setPlayBossMusic
	c (Z)Lbdn; setCreateWorldFog
	p ()Z shouldCreateWorldFog
bdn$a net/minecraft/world/BossEvent$BossBarColor
	a PINK
	b BLUE
	c RED
	d GREEN
	e YELLOW
	f PURPLE
	g WHITE
	h name
	i formatting
	j $VALUES
	values ()[Lbdn$a; values
	valueOf (Ljava/lang/String;)Lbdn$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ln;)V <init>
	a ()Ln; getFormatting
	b ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbdn$a; byName
	c ()[Lbdn$a; $values
	<clinit> ()V <clinit>
bdn$b net/minecraft/world/BossEvent$BossBarOverlay
	a PROGRESS
	b NOTCHED_6
	c NOTCHED_10
	d NOTCHED_12
	e NOTCHED_20
	f name
	g $VALUES
	values ()[Lbdn$b; values
	valueOf (Ljava/lang/String;)Lbdn$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbdn$b; byName
	b ()[Lbdn$b; $values
	<clinit> ()V <clinit>
bdo net/minecraft/world/Clearable
	a ()V clearContent
	a_ (Ljava/lang/Object;)V tryClear
bdp net/minecraft/world/CompoundContainer
	c container1
	d container2
	<init> (Lbdq;Lbdq;)V <init>
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (Lbdq;)Z contains
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	ac_ ()I getMaxStackSize
	e ()V setChanged
	a (Lbyo;)Z stillValid
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
	b (ILcfz;)Z canPlaceItem
	a ()V clearContent
bdq net/minecraft/world/Container
	m_ LARGE_MAX_STACK_SIZE
	n_ DEFAULT_DISTANCE_LIMIT
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	ac_ ()I getMaxStackSize
	e ()V setChanged
	a (Lbyo;)Z stillValid
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
	b (ILcfz;)Z canPlaceItem
	a (Lbdq;ILcfz;)Z canTakeItem
	a_ (Lcfu;)I countItem
	a (Ljava/util/Set;)Z hasAnyOf
	a_ (Ljava/util/function/Predicate;)Z hasAnyMatching
	a (Lczn;Lbyo;)Z stillValidBlockEntity
	a (Lczn;Lbyo;I)Z stillValidBlockEntity
	a (Ljava/util/Set;Lcfz;)Z lambda$hasAnyOf$0
bdr net/minecraft/world/ContainerHelper
	<init> ()V <init>
	a (Ljava/util/List;II)Lcfz; removeItem
	a (Ljava/util/List;I)Lcfz; takeItem
	a (Lqr;Lhn;)Lqr; saveAllItems
	a (Lqr;Lhn;Z)Lqr; saveAllItems
	b (Lqr;Lhn;)V loadAllItems
	a (Lbdq;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lcfz;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
bds net/minecraft/world/ContainerListener
	a (Lbdq;)V containerChanged
bdt net/minecraft/world/Containers
	<init> ()V <init>
	a (Lcmm;Lgu;Lbdq;)V dropContents
	a (Lcmm;Lbfj;Lbdq;)V dropContents
	a (Lcmm;DDDLbdq;)V dropContents
	a (Lcmm;Lgu;Lhn;)V dropContents
	a (Lcmm;DDDLcfz;)V dropItemStack
	a (Lcmm;Lgu;Lcfz;)V lambda$dropContents$0
bdu net/minecraft/world/Difficulty
	a PEACEFUL
	b EASY
	c NORMAL
	d HARD
	e CODEC
	f BY_ID
	g id
	h key
	i $VALUES
	values ()[Lbdu; values
	valueOf (Ljava/lang/String;)Lbdu; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Lsw; getDisplayName
	d ()Lsw; getInfo
	a (I)Lbdu; byId
	a (Ljava/lang/String;)Lbdu; byName
	e ()Ljava/lang/String; getKey
	c ()Ljava/lang/String; getSerializedName
	f ()[Lbdu; $values
	<clinit> ()V <clinit>
bdv net/minecraft/world/DifficultyInstance
	a DIFFICULTY_TIME_GLOBAL_OFFSET
	b MAX_DIFFICULTY_TIME_GLOBAL
	c MAX_DIFFICULTY_TIME_LOCAL
	d base
	e effectiveDifficulty
	<init> (Lbdu;JJF)V <init>
	a ()Lbdu; getDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	a (F)Z isHarderThan
	d ()F getSpecialMultiplier
	a (Lbdu;JJF)F calculateDifficulty
bdw net/minecraft/world/InteractionHand
	a MAIN_HAND
	b OFF_HAND
	c $VALUES
	values ()[Lbdw; values
	valueOf (Ljava/lang/String;)Lbdw; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbdw; $values
	<clinit> ()V <clinit>
bdx net/minecraft/world/InteractionResult
	a SUCCESS
	b CONSUME
	c CONSUME_PARTIAL
	d PASS
	e FAIL
	f $VALUES
	values ()[Lbdx; values
	valueOf (Ljava/lang/String;)Lbdx; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Z consumesAction
	b ()Z shouldSwing
	c ()Z shouldAwardStats
	a (Z)Lbdx; sidedSuccess
	d ()[Lbdx; $values
	<clinit> ()V <clinit>
bdy net/minecraft/world/InteractionResultHolder
	a result
	b object
	<init> (Lbdx;Ljava/lang/Object;)V <init>
	a ()Lbdx; getResult
	b ()Ljava/lang/Object; getObject
	a (Ljava/lang/Object;)Lbdy; success
	b (Ljava/lang/Object;)Lbdy; consume
	c (Ljava/lang/Object;)Lbdy; pass
	d (Ljava/lang/Object;)Lbdy; fail
	a (Ljava/lang/Object;Z)Lbdy; sidedSuccess
bdz net/minecraft/world/LockCode
	a NO_LOCK
	b TAG_LOCK
	c key
	<init> (Ljava/lang/String;)V <init>
	a (Lcfz;)Z unlocksWith
	a (Lqr;)V addToTag
	b (Lqr;)Lbdz; fromTag
	<clinit> ()V <clinit>
bea net/minecraft/world/MenuProvider
	H_ ()Lsw; getDisplayName
beb net/minecraft/world/Nameable
	Z ()Lsw; getName
	aa ()Z hasCustomName
	H_ ()Lsw; getDisplayName
	ab ()Lsw; getCustomName
bec net/minecraft/world/RandomSequence
	a CODEC
	b source
	<init> (Ldil;)V <init>
	<init> (JLacq;)V <init>
	a (JLacq;)Ldil; createSequence
	a (Lacq;)Ldhz$a; seedForKey
	a ()Lapf; random
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lbec;)Ldil; lambda$static$0
	<clinit> ()V <clinit>
bed net/minecraft/world/RandomSequences
	a LOGGER
	b seed
	c sequences
	<init> (J)V <init>
	a (Lacq;)Lapf; get
	a (Lqr;)Lqr; save
	a (JLqr;)Lbed; load
	a (Lqr;Lacq;Lbec;)V lambda$save$1
	b (Lacq;)Lbec; lambda$get$0
	<clinit> ()V <clinit>
bed$1 net/minecraft/world/RandomSequences$1
	b val$random
	c this$0
	<init> (Lbed;Lapf;)V <init>
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	f ()I nextInt
	a (I)I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
bee net/minecraft/world/SimpleContainer
	c size
	d items
	e listeners
	<init> (I)V <init>
	<init> ([Lcfz;)V <init>
	a (Lbds;)V addListener
	b (Lbds;)V removeListener
	a (I)Lcfz; getItem
	f ()Ljava/util/List; removeAllItems
	a (II)Lcfz; removeItem
	a (Lcfu;I)Lcfz; removeItemType
	a (Lcfz;)Lcfz; addItem
	b (Lcfz;)Z canAddItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	b ()I getContainerSize
	ab_ ()Z isEmpty
	e ()V setChanged
	a (Lbyo;)Z stillValid
	a ()V clearContent
	a (Lbys;)V fillStackedContents
	toString ()Ljava/lang/String; toString
	c (Lcfz;)V moveItemToEmptySlots
	d (Lcfz;)V moveItemToOccupiedSlotsWithSameType
	a (Lcfz;Lcfz;)V moveItemsBetweenStacks
	a (Lqx;)V fromTag
	g ()Lqx; createTag
	e (Lcfz;)Z lambda$toString$1
	f (Lcfz;)Z lambda$removeAllItems$0
bef net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	<init> (Lccj;Lsw;)V <init>
	H_ ()Lsw; getDisplayName
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
beg net/minecraft/world/WorldlyContainer
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
beh net/minecraft/world/WorldlyContainerHolder
	a (Ldcb;Lcmn;Lgu;)Lbeg; getContainer
bei net/minecraft/world/damagesource/CombatEntry
	a source
	b damage
	c fallLocation
	d fallDistance
	<init> (Lben;FLbes;F)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lben; source
	b ()F damage
	c ()Lbes; fallLocation
	d ()F fallDistance
bej net/minecraft/world/damagesource/CombatRules
	a MAX_ARMOR
	b ARMOR_PROTECTION_DIVIDER
	c BASE_ARMOR_TOUGHNESS
	d MIN_ARMOR_RATIO
	e NUM_ARMOR_ITEMS
	<init> ()V <init>
	a (FFF)F getDamageAfterAbsorb
	a (FF)F getDamageAfterMagicAbsorb
bek net/minecraft/world/damagesource/CombatTracker
	a RESET_DAMAGE_STATUS_TIME
	b RESET_COMBAT_STATUS_TIME
	c INTENTIONAL_GAME_DESIGN_STYLE
	d entries
	e mob
	f lastDamageTime
	g combatStartTime
	h combatEndTime
	i inCombat
	j takingDamage
	<init> (Lbfz;)V <init>
	a (Lben;F)V recordDamage
	a (Lben;)Z shouldEnterCombat
	a (Lbfj;Lsw;Ljava/lang/String;Ljava/lang/String;)Lsw; getMessageForAssistedFall
	a (Lbei;Lbfj;)Lsw; getFallMessage
	a (Lbfj;)Lsw; getDisplayName
	a ()Lsw; getDeathMessage
	d ()Lbei; getMostSignificantFall
	b ()I getCombatDuration
	c ()V recheckStatus
	<clinit> ()V <clinit>
bel net/minecraft/world/damagesource/DamageEffects
	a HURT
	b THORNS
	c DROWNING
	d BURNING
	e POKING
	f FREEZING
	g CODEC
	h id
	i sound
	j $VALUES
	values ()[Lbel; values
	valueOf (Ljava/lang/String;)Lbel; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lamg;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Lamg; sound
	b ()[Lbel; $values
	<clinit> ()V <clinit>
bem net/minecraft/world/damagesource/DamageScaling
	a NEVER
	b WHEN_CAUSED_BY_LIVING_NON_PLAYER
	c ALWAYS
	d CODEC
	e id
	f $VALUES
	values ()[Lbem; values
	valueOf (Ljava/lang/String;)Lbem; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lbem; $values
	<clinit> ()V <clinit>
ben net/minecraft/world/damagesource/DamageSource
	a type
	b causingEntity
	c directEntity
	d damageSourcePosition
	toString ()Ljava/lang/String; toString
	a ()F getFoodExhaustion
	b ()Z isIndirect
	<init> (Lhe;Lbfj;Lbfj;Leei;)V <init>
	<init> (Lhe;Lbfj;Lbfj;)V <init>
	<init> (Lhe;Leei;)V <init>
	<init> (Lhe;Lbfj;)V <init>
	<init> (Lhe;)V <init>
	c ()Lbfj; getDirectEntity
	d ()Lbfj; getEntity
	a (Lbfz;)Lsw; getLocalizedDeathMessage
	e ()Ljava/lang/String; getMsgId
	f ()Z scalesWithDifficulty
	g ()Z isCreativePlayer
	h ()Leei; getSourcePosition
	i ()Leei; sourcePositionRaw
	a (Lanl;)Z is
	a (Lacp;)Z is
	j ()Lbep; type
	k ()Lhe; typeHolder
ben$1 net/minecraft/world/damagesource/DamageSource$1
	a $SwitchMap$net$minecraft$world$damagesource$DamageScaling
	<clinit> ()V <clinit>
beo net/minecraft/world/damagesource/DamageSources
	a damageTypes
	b inFire
	c lightningBolt
	d onFire
	e lava
	f hotFloor
	g inWall
	h cramming
	i drown
	j starve
	k cactus
	l fall
	m flyIntoWall
	n fellOutOfWorld
	o generic
	p magic
	q wither
	r dragonBreath
	s dryOut
	t sweetBerryBush
	u freeze
	v stalagmite
	w outsideBorder
	x genericKill
	<init> (Lhs;)V <init>
	a (Lacp;)Lben; source
	a (Lacp;Lbfj;)Lben; source
	a (Lacp;Lbfj;Lbfj;)Lben; source
	a ()Lben; inFire
	b ()Lben; lightningBolt
	c ()Lben; onFire
	d ()Lben; lava
	e ()Lben; hotFloor
	f ()Lben; inWall
	g ()Lben; cramming
	h ()Lben; drown
	i ()Lben; starve
	j ()Lben; cactus
	k ()Lben; fall
	l ()Lben; flyIntoWall
	m ()Lben; fellOutOfWorld
	n ()Lben; generic
	o ()Lben; magic
	p ()Lben; wither
	q ()Lben; dragonBreath
	r ()Lben; dryOut
	s ()Lben; sweetBerryBush
	t ()Lben; freeze
	u ()Lben; stalagmite
	a (Lbfj;)Lben; fallingBlock
	b (Lbfj;)Lben; anvil
	c (Lbfj;)Lben; fallingStalactite
	a (Lbfz;)Lben; sting
	b (Lbfz;)Lben; mobAttack
	c (Lbfz;)Lben; noAggroMobAttack
	a (Lbyo;)Lben; playerAttack
	a (Lbyu;Lbfj;)Lben; arrow
	a (Lbfj;Lbfj;)Lben; trident
	a (Lbfj;Lbfz;)Lben; mobProjectile
	a (Lbzb;Lbfj;)Lben; fireworks
	a (Lbza;Lbfj;)Lben; fireball
	a (Lbzt;Lbfj;)Lben; witherSkull
	b (Lbfj;Lbfj;)Lben; thrown
	c (Lbfj;Lbfj;)Lben; indirectMagic
	d (Lbfj;)Lben; thorns
	a (Lcme;)Lben; explosion
	d (Lbfj;Lbfj;)Lben; explosion
	e (Lbfj;)Lben; sonicBoom
	a (Leei;)Lben; badRespawnPointExplosion
	v ()Lben; outOfBorder
	w ()Lben; genericKill
bep net/minecraft/world/damagesource/DamageType
	b msgId
	c scaling
	d exhaustion
	e effects
	f deathMessageType
	a CODEC
	<init> (Ljava/lang/String;Lbem;F)V <init>
	<init> (Ljava/lang/String;Lbem;FLbel;)V <init>
	<init> (Ljava/lang/String;FLbel;)V <init>
	<init> (Ljava/lang/String;F)V <init>
	<init> (Ljava/lang/String;Lbem;FLbel;Lber;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; msgId
	b ()Lbem; scaling
	c ()F exhaustion
	d ()Lbel; effects
	e ()Lber; deathMessageType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
beq net/minecraft/world/damagesource/DamageTypes
	a IN_FIRE
	b LIGHTNING_BOLT
	c ON_FIRE
	d LAVA
	e HOT_FLOOR
	f IN_WALL
	g CRAMMING
	h DROWN
	i STARVE
	j CACTUS
	k FALL
	l FLY_INTO_WALL
	m FELL_OUT_OF_WORLD
	n GENERIC
	o MAGIC
	p WITHER
	q DRAGON_BREATH
	r DRY_OUT
	s SWEET_BERRY_BUSH
	t FREEZE
	u STALAGMITE
	v FALLING_BLOCK
	w FALLING_ANVIL
	x FALLING_STALACTITE
	y STING
	z MOB_ATTACK
	A MOB_ATTACK_NO_AGGRO
	B PLAYER_ATTACK
	C ARROW
	D TRIDENT
	E MOB_PROJECTILE
	F FIREWORKS
	G FIREBALL
	H UNATTRIBUTED_FIREBALL
	I WITHER_SKULL
	J THROWN
	K INDIRECT_MAGIC
	L THORNS
	M EXPLOSION
	N PLAYER_EXPLOSION
	O SONIC_BOOM
	P BAD_RESPAWN_POINT
	Q OUTSIDE_BORDER
	R GENERIC_KILL
	a (Lnm;)V bootstrap
	<clinit> ()V <clinit>
ber net/minecraft/world/damagesource/DeathMessageType
	a DEFAULT
	b FALL_VARIANTS
	c INTENTIONAL_GAME_DESIGN
	d CODEC
	e id
	f $VALUES
	values ()[Lber; values
	valueOf (Ljava/lang/String;)Lber; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lber; $values
	<clinit> ()V <clinit>
bes net/minecraft/world/damagesource/FallLocation
	i id
	a GENERIC
	b LADDER
	c VINES
	d WEEPING_VINES
	e TWISTING_VINES
	f SCAFFOLDING
	g OTHER_CLIMBABLE
	h WATER
	<init> (Ljava/lang/String;)V <init>
	a (Ldcb;)Lbes; blockToFallLocation
	a (Lbfz;)Lbes; getCurrentFallLocation
	a ()Ljava/lang/String; languageKey
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; id
	<clinit> ()V <clinit>
bet net/minecraft/world/damagesource/package-info
beu net/minecraft/world/effect/AbsoptionMobEffect
	<init> (Lbez;I)V <init>
	a (Lbfz;Lbhd;I)V removeAttributeModifiers
	b (Lbfz;Lbhd;I)V addAttributeModifiers
bev net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	<init> (Lbez;ID)V <init>
	a (ILbhe;)D getAttributeModifierValue
bew net/minecraft/world/effect/HealthBoostMobEffect
	<init> (Lbez;I)V <init>
	a (Lbfz;Lbhd;I)V removeAttributeModifiers
bex net/minecraft/world/effect/InstantenousMobEffect
	<init> (Lbez;I)V <init>
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
bey net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	e factorDataFactory
	a (I)Lbey; byId
	a (Lbey;)I getId
	b (Lbey;)I getIdFromNullable
	<init> (Lbez;I)V <init>
	b ()Ljava/util/Optional; createFactorData
	a (Lbfz;I)V applyEffectTick
	a (Lbfj;Lbfj;Lbfz;ID)V applyInstantenousEffect
	a (II)Z isDurationEffectTick
	a ()Z isInstantenous
	c ()Ljava/lang/String; getOrCreateDescriptionId
	d ()Ljava/lang/String; getDescriptionId
	e ()Lsw; getDisplayName
	f ()Lbez; getCategory
	g ()I getColor
	a (Lbhb;Ljava/lang/String;DLbhe$a;)Lbey; addAttributeModifier
	a (Ljava/util/function/Supplier;)Lbey; setFactorDataFactory
	h ()Ljava/util/Map; getAttributeModifiers
	a (Lbfz;Lbhd;I)V removeAttributeModifiers
	b (Lbfz;Lbhd;I)V addAttributeModifiers
	a (ILbhe;)D getAttributeModifierValue
	i ()Z isBeneficial
	j ()Lbfa$a; lambda$new$0
bez net/minecraft/world/effect/MobEffectCategory
	a BENEFICIAL
	b HARMFUL
	c NEUTRAL
	d tooltipFormatting
	e $VALUES
	values ()[Lbez; values
	valueOf (Ljava/lang/String;)Lbez; valueOf
	<init> (Ljava/lang/String;ILn;)V <init>
	a ()Ln; getTooltipFormatting
	b ()[Lbez; $values
	<clinit> ()V <clinit>
bfa net/minecraft/world/effect/MobEffectInstance
	b LOGGER
	a INFINITE_DURATION
	c effect
	d duration
	e amplifier
	f ambient
	g visible
	h showIcon
	i hiddenEffect
	j factorData
	<init> (Lbey;)V <init>
	<init> (Lbey;I)V <init>
	<init> (Lbey;II)V <init>
	<init> (Lbey;IIZZ)V <init>
	<init> (Lbey;IIZZZ)V <init>
	<init> (Lbey;IIZZZLbfa;Ljava/util/Optional;)V <init>
	<init> (Lbfa;)V <init>
	a ()Ljava/util/Optional; getFactorData
	a (Lbfa;)V setDetailsFrom
	b (Lbfa;)Z update
	d (Lbfa;)Z isShorterDurationThan
	b ()Z isInfiniteDuration
	a (I)Z endsWithin
	a (Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I mapDuration
	c ()Lbey; getEffect
	d ()I getDuration
	e ()I getAmplifier
	f ()Z isAmbient
	g ()Z isVisible
	h ()Z showIcon
	a (Lbfz;Ljava/lang/Runnable;)Z tick
	j ()Z hasRemainingDuration
	k ()I tickDownDuration
	a (Lbfz;)V applyEffect
	i ()Ljava/lang/String; getDescriptionId
	toString ()Ljava/lang/String; toString
	l ()Ljava/lang/String; describeDuration
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lqr;)Lqr; save
	c (Lqr;)V writeDetailsTo
	b (Lqr;)Lbfa; load
	a (Lbey;Lqr;)Lbfa; loadSpecifiedEffect
	c (Lbfa;)I compareTo
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lqr;Lbfa$a;)V lambda$writeDetailsTo$3
	a (Lqr;Lrk;)V lambda$writeDetailsTo$2
	b (I)I lambda$tickDownDuration$1
	a (Lbfa$a;)V lambda$tick$0
	<clinit> ()V <clinit>
bfa$a net/minecraft/world/effect/MobEffectInstance$FactorData
	a CODEC
	b paddingDuration
	c factorStart
	d factorTarget
	e factorCurrent
	f ticksActive
	g factorPreviousFrame
	h hadEffectLastTick
	<init> (IFFFIFZ)V <init>
	<init> (I)V <init>
	a (Lbfa;)V tick
	a (Lbfz;F)F getFactor
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	a (Lbfa$a;)Ljava/lang/Boolean; lambda$static$6
	b (Lbfa$a;)Ljava/lang/Float; lambda$static$5
	c (Lbfa$a;)Ljava/lang/Integer; lambda$static$4
	d (Lbfa$a;)Ljava/lang/Float; lambda$static$3
	e (Lbfa$a;)Ljava/lang/Float; lambda$static$2
	f (Lbfa$a;)Ljava/lang/Float; lambda$static$1
	g (Lbfa$a;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
bfb net/minecraft/world/effect/MobEffectUtil
	<init> ()V <init>
	a (Lbfa;F)Lsw; formatDuration
	a (Lbfz;)Z hasDigSpeed
	b (Lbfz;)I getDigSpeedAmplification
	c (Lbfz;)Z hasWaterBreathing
	a (Laif;Lbfj;Leei;DLbfa;I)Ljava/util/List; addEffectToPlayersAround
	a (Lbfa;Lbfj;Laig;)V lambda$addEffectToPlayersAround$1
	a (Lbfj;Leei;DLbey;Lbfa;ILaig;)Z lambda$addEffectToPlayersAround$0
bfc net/minecraft/world/effect/MobEffects
	H DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	a MOVEMENT_SPEED
	b MOVEMENT_SLOWDOWN
	c DIG_SPEED
	d DIG_SLOWDOWN
	e DAMAGE_BOOST
	f HEAL
	g HARM
	h JUMP
	i CONFUSION
	j REGENERATION
	k DAMAGE_RESISTANCE
	l FIRE_RESISTANCE
	m WATER_BREATHING
	n INVISIBILITY
	o BLINDNESS
	p NIGHT_VISION
	q HUNGER
	r WEAKNESS
	s POISON
	t WITHER
	u HEALTH_BOOST
	v ABSORPTION
	w SATURATION
	x GLOWING
	y LEVITATION
	z LUCK
	A UNLUCK
	B SLOW_FALLING
	C CONDUIT_POWER
	D DOLPHINS_GRACE
	E BAD_OMEN
	F HERO_OF_THE_VILLAGE
	G DARKNESS
	<init> ()V <init>
	a (ILjava/lang/String;Lbey;)Lbey; register
	a ()Lbfa$a; lambda$static$0
	<clinit> ()V <clinit>
bfc$1 net/minecraft/world/effect/MobEffects$1
	<init> (Lbez;I)V <init>
	a (II)Z isDurationEffectTick
	a (Lbfz;I)V applyEffectTick
bfd net/minecraft/world/effect/package-info
bfe net/minecraft/world/entity/AgeableMob
	bT DATA_BABY_ID
	b BABY_START_AGE
	bU FORCED_AGE_PARTICLE_TICKS
	c age
	d forcedAge
	e forcedAgeTimer
	<init> (Lbfn;Lcmm;)V <init>
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	a_ ()V defineSynchedData
	P_ ()Z canBreed
	h ()I getAge
	a (IZ)V ageUp
	b_ (I)V ageUp
	c_ (I)V setAge
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Laby;)V onSyncedDataUpdated
	b_ ()V aiStep
	m ()V ageBoundaryReached
	h_ ()Z isBaby
	a (Z)V setBaby
	d_ (I)I getSpeedUpSecondsWhenFeeding
	<clinit> ()V <clinit>
bfe$a net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	<init> (ZF)V <init>
	<init> (Z)V <init>
	<init> (F)V <init>
	a ()I getGroupSize
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
bff net/minecraft/world/entity/AnimationState
	a STOPPED
	b lastTime
	c accumulatedTime
	<init> ()V <init>
	a (I)V start
	b (I)V startIfStopped
	a (ZI)V animateWhen
	a ()V stop
	a (Ljava/util/function/Consumer;)V ifStarted
	a (FF)V updateTime
	b ()J getAccumulatedTime
	c ()Z isStarted
bfg net/minecraft/world/entity/AreaEffectCloud
	d LOGGER
	e TIME_BETWEEN_APPLICATIONS
	f DATA_RADIUS
	g DATA_COLOR
	h DATA_WAITING
	i DATA_PARTICLE
	j MAX_RADIUS
	k MINIMAL_RADIUS
	l DEFAULT_RADIUS
	b DEFAULT_WIDTH
	c HEIGHT
	m potion
	n effects
	o victims
	p duration
	q waitTime
	r reapplicationDelay
	s fixedColor
	t durationOnUse
	u radiusOnUse
	aD radiusPerTick
	aE owner
	aF ownerUUID
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	a_ ()V defineSynchedData
	a (F)V setRadius
	d_ ()V refreshDimensions
	h ()F getRadius
	a (Lchw;)V setPotion
	w ()V updateColor
	a (Lbfa;)V addEffect
	i ()I getColor
	a (I)V setFixedColor
	j ()Lit; getParticle
	a (Lit;)V setParticle
	a (Z)V setWaiting
	k ()Z isWaiting
	m ()I getDuration
	b (I)V setDuration
	l ()V tick
	o ()F getRadiusOnUse
	b (F)V setRadiusOnUse
	p ()F getRadiusPerTick
	c (F)V setRadiusPerTick
	q ()I getDurationOnUse
	c (I)V setDurationOnUse
	r ()I getWaitTime
	d (I)V setWaitTime
	a (Lbfz;)V setOwner
	s ()Lbfz; getOwner
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a (Laby;)V onSyncedDataUpdated
	t ()Lchw; getPotion
	l_ ()Ldxj; getPistonPushReaction
	a (Lbgl;)Lbfk; getDimensions
	v ()Lbfj; getOwner
	m (I)I lambda$tick$1
	a (Ljava/util/Map$Entry;)Z lambda$tick$0
	<clinit> ()V <clinit>
bfh net/minecraft/world/entity/Attackable
	M_ ()Lbfz; getLastAttacker
bfi net/minecraft/world/entity/Display
	o LOGGER
	b NO_BRIGHTNESS_OVERRIDE
	p DATA_INTERPOLATION_START_DELTA_TICKS_ID
	q DATA_INTERPOLATION_DURATION_ID
	r DATA_TRANSLATION_ID
	s DATA_SCALE_ID
	t DATA_LEFT_ROTATION_ID
	u DATA_RIGHT_ROTATION_ID
	aD DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	aE DATA_BRIGHTNESS_OVERRIDE_ID
	aF DATA_VIEW_RANGE_ID
	aG DATA_SHADOW_RADIUS_ID
	aH DATA_SHADOW_STRENGTH_ID
	aI DATA_WIDTH_ID
	aJ DATA_HEIGHT_ID
	aK DATA_GLOW_COLOR_OVERRIDE_ID
	aL RENDER_STATE_IDS
	aM INITIAL_SHADOW_RADIUS
	aN INITIAL_SHADOW_STRENGTH
	aO NO_GLOW_COLOR_OVERRIDE
	c TAG_INTERPOLATION_DURATION
	d TAG_START_INTERPOLATION
	e TAG_TRANSFORMATION
	f TAG_BILLBOARD
	g TAG_BRIGHTNESS
	h TAG_VIEW_RANGE
	i TAG_SHADOW_RADIUS
	j TAG_SHADOW_STRENGTH
	k TAG_WIDTH
	l TAG_HEIGHT
	m TAG_GLOW_COLOR_OVERRIDE
	aP orientation
	aQ interpolationStartClientTick
	aR interpolationDuration
	aS lastProgress
	aT cullingBoundingBox
	n updateRenderState
	aU updateStartTick
	aV updateInterpolationDuration
	aW renderState
	<init> (Lbfn;Lcmm;)V <init>
	a (Laby;)V onSyncedDataUpdated
	a (Lacb;)Lj; createTransformation
	l ()V tick
	a (ZF)V updateRenderSubState
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	a (Lj;)V setTransformation
	b (Lqr;)V addAdditionalSaveData
	S ()Luo; getAddEntityPacket
	j_ ()Leed; getBoundingBoxForCulling
	l_ ()Ldxj; getPistonPushReaction
	c_ ()Z isIgnoringBlockTriggers
	j ()Lorg/joml/Quaternionf; orientation
	k ()Lbfi$j; renderState
	b (I)V setInterpolationDuration
	o ()I getInterpolationDuration
	c (I)V setInterpolationDelay
	p ()I getInterpolationDelay
	a (Lbfi$a;)V setBillboardConstraints
	q ()Lbfi$a; getBillboardConstraints
	a (Lant;)V setBrightnessOverride
	r ()Lant; getBrightnessOverride
	s ()I getPackedBrightnessOverride
	s (F)V setViewRange
	t ()F getViewRange
	t (F)V setShadowRadius
	v ()F getShadowRadius
	u (F)V setShadowStrength
	w ()F getShadowStrength
	v (F)V setWidth
	x ()F getWidth
	w (F)V setHeight
	y ()I getGlowColorOverride
	d (I)V setGlowColorOverride
	a (F)F calculateInterpolationProgress
	z ()F getHeight
	e (DDD)V setPos
	A ()V updateCulling
	b_ (F)V setXRot
	a_ (F)V setYRot
	C ()V updateOrientation
	a (D)Z shouldRenderAtSqrDistance
	k_ ()I getTeamColor
	D ()Lbfi$j; createFreshRenderState
	a (Lbfi$j;F)Lbfi$j; createInterpolatedRenderState
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$5
	b (Lqr;Lrk;)V lambda$addAdditionalSaveData$4
	c (Lqr;Lrk;)V lambda$addAdditionalSaveData$3
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$2
	b (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$1
	c (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$0
	<clinit> ()V <clinit>
bfi$1 net/minecraft/world/entity/Display$1
	a $SwitchMap$net$minecraft$world$entity$Display$TextDisplay$Align
	<clinit> ()V <clinit>
bfi$a net/minecraft/world/entity/Display$BillboardConstraints
	a FIXED
	b VERTICAL
	c HORIZONTAL
	d CENTER
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	values ()[Lbfi$a; values
	valueOf (Ljava/lang/String;)Lbfi$a; valueOf
	<init> (Ljava/lang/String;IBLjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()B getId
	b ()[Lbfi$a; $values
	<clinit> ()V <clinit>
bfi$b net/minecraft/world/entity/Display$BlockDisplay
	o TAG_BLOCK_STATE
	p DATA_BLOCK_STATE_ID
	q blockRenderState
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	p ()Ldcb; getBlockState
	c (Ldcb;)V setBlockState
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	o ()Lbfi$b$a; blockRenderState
	a (ZF)V updateRenderSubState
	<clinit> ()V <clinit>
bfi$b$a net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState
	a blockState
	<init> (Ldcb;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldcb; blockState
bfi$c net/minecraft/world/entity/Display$ColorInterpolator
	a previous
	b current
	<init> (II)V <init>
	get (F)I get
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I previous
	b ()I current
bfi$d net/minecraft/world/entity/Display$FloatInterpolator
	constant (F)Lbfi$d; constant
	get (F)F get
	a (FF)F lambda$constant$0
bfi$e net/minecraft/world/entity/Display$GenericInterpolator
	constant (Ljava/lang/Object;)Lbfi$e; constant
	get (F)Ljava/lang/Object; get
	a (Ljava/lang/Object;F)Ljava/lang/Object; lambda$constant$0
bfi$f net/minecraft/world/entity/Display$IntInterpolator
	constant (I)Lbfi$f; constant
	get (F)I get
	a (IF)I lambda$constant$0
bfi$g net/minecraft/world/entity/Display$ItemDisplay
	o TAG_ITEM
	p TAG_ITEM_DISPLAY
	q DATA_ITEM_STACK_ID
	r DATA_ITEM_DISPLAY_ID
	s slot
	t itemRenderState
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	p ()Lcfz; getItemStack
	a (Lcfz;)V setItemStack
	a (Lcfw;)V setItemTransform
	q ()Lcfw; getItemTransform
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a_ (I)Lbgs; getSlot
	o ()Lbfi$g$a; itemRenderState
	a (ZF)V updateRenderSubState
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$1
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$0
	<clinit> ()V <clinit>
bfi$g$1 net/minecraft/world/entity/Display$ItemDisplay$1
	a this$0
	<init> (Lbfi$g;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
bfi$g$a net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState
	a itemStack
	b itemTransform
	<init> (Lcfz;Lcfw;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcfz; itemStack
	b ()Lcfw; itemTransform
bfi$h net/minecraft/world/entity/Display$LinearFloatInterpolator
	a previous
	b current
	<init> (FF)V <init>
	get (F)F get
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()F previous
	b ()F current
bfi$i net/minecraft/world/entity/Display$LinearIntInterpolator
	a previous
	b current
	<init> (II)V <init>
	get (F)I get
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I previous
	b ()I current
bfi$j net/minecraft/world/entity/Display$RenderState
	a transformation
	b billboardConstraints
	c brightnessOverride
	d shadowRadius
	e shadowStrength
	f glowColorOverride
	<init> (Lbfi$e;Lbfi$a;ILbfi$d;Lbfi$d;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbfi$e; transformation
	b ()Lbfi$a; billboardConstraints
	c ()I brightnessOverride
	d ()Lbfi$d; shadowRadius
	e ()Lbfi$d; shadowStrength
	f ()I glowColorOverride
bfi$k net/minecraft/world/entity/Display$TextDisplay
	o TAG_TEXT
	aD TAG_LINE_WIDTH
	aE TAG_TEXT_OPACITY
	aF TAG_BACKGROUND_COLOR
	aG TAG_SHADOW
	aH TAG_SEE_THROUGH
	aI TAG_USE_DEFAULT_BACKGROUND
	aJ TAG_ALIGNMENT
	p FLAG_SHADOW
	q FLAG_SEE_THROUGH
	r FLAG_USE_DEFAULT_BACKGROUND
	s FLAG_ALIGN_LEFT
	t FLAG_ALIGN_RIGHT
	aK INITIAL_TEXT_OPACITY
	u INITIAL_BACKGROUND
	aL DATA_TEXT_ID
	aM DATA_LINE_WIDTH_ID
	aN DATA_BACKGROUND_COLOR_ID
	aO DATA_TEXT_OPACITY_ID
	aP DATA_STYLE_FLAGS_ID
	aQ TEXT_RENDER_STATE_IDS
	aR clientDisplayCache
	aS textRenderState
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	p ()Lsw; getText
	c (Lsw;)V setText
	q ()I getLineWidth
	b (I)V setLineWidth
	r ()B getTextOpacity
	c (B)V setTextOpacity
	s ()I getBackgroundColor
	c (I)V setBackgroundColor
	t ()B getFlags
	d (B)V setFlags
	a (BLqr;Ljava/lang/String;B)B loadFlag
	a (Lqr;)V readAdditionalSaveData
	b (BLqr;Ljava/lang/String;B)V storeFlag
	b (Lqr;)V addAdditionalSaveData
	a (ZF)V updateRenderSubState
	o ()Lbfi$k$e; textRenderState
	v ()Lbfi$k$e; createFreshTextRenderState
	a (Lbfi$k$e;F)Lbfi$k$e; createInterpolatedTextRenderState
	a (Lbfi$k$d;)Lbfi$k$b; cacheDisplay
	a (B)Lbfi$k$a; getAlign
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$0
	<clinit> ()V <clinit>
bfi$k$a net/minecraft/world/entity/Display$TextDisplay$Align
	a CENTER
	b LEFT
	c RIGHT
	d CODEC
	e name
	f $VALUES
	values ()[Lbfi$k$a; values
	valueOf (Ljava/lang/String;)Lbfi$k$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lbfi$k$a; $values
	<clinit> ()V <clinit>
bfi$k$b net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	a lines
	b width
	<init> (Ljava/util/List;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; lines
	b ()I width
bfi$k$c net/minecraft/world/entity/Display$TextDisplay$CachedLine
	a contents
	b width
	<init> (Laom;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Laom; contents
	b ()I width
bfi$k$d net/minecraft/world/entity/Display$TextDisplay$LineSplitter
	split (Lsw;I)Lbfi$k$b; split
bfi$k$e net/minecraft/world/entity/Display$TextDisplay$TextRenderState
	a text
	b lineWidth
	c textOpacity
	d backgroundColor
	e flags
	<init> (Lsw;ILbfi$f;Lbfi$f;B)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lsw; text
	b ()I lineWidth
	c ()Lbfi$f; textOpacity
	d ()Lbfi$f; backgroundColor
	e ()B flags
bfi$l net/minecraft/world/entity/Display$TransformationInterpolator
	a previous
	b current
	<init> (Lj;Lj;)V <init>
	a (F)Lj; get
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lj; previous
	b ()Lj; current
	get (F)Ljava/lang/Object; get
bfj net/minecraft/world/entity/Entity
	c LOGGER
	v ID_TAG
	w PASSENGERS_TAG
	d ENTITY_COUNTER
	e EMPTY_LIST
	x BOARDING_COOLDOWN
	y TOTAL_AIR_SUPPLY
	z MAX_ENTITY_TAG_COUNT
	A DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2
	B DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5
	C DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0
	D BREATHING_DISTANCE_BELOW_EYES
	E BASE_TICKS_REQUIRED_TO_FREEZE
	F FREEZE_HURT_FREQUENCY
	k INITIAL_AABB
	l WATER_FLOW_SCALE
	m LAVA_FAST_FLOW_SCALE
	n LAVA_SLOW_FLOW_SCALE
	G UUID_TAG
	o viewScale
	p type
	q id
	H blocksBuilding
	r passengers
	I boardingCooldown
	s vehicle
	t level
	J xo
	K yo
	L zo
	u position
	aD blockPosition
	aE chunkPosition
	aF deltaMovement
	aG yRot
	aH xRot
	M yRotO
	N xRotO
	aI bb
	aJ onGround
	O horizontalCollision
	P verticalCollision
	Q verticalCollisionBelow
	R minorHorizontalCollision
	S hurtMarked
	T stuckSpeedMultiplier
	aK removalReason
	U DEFAULT_BB_WIDTH
	V DEFAULT_BB_HEIGHT
	W walkDistO
	X walkDist
	Y moveDist
	Z flyDist
	aa fallDistance
	aL nextStep
	ab xOld
	ac yOld
	ad zOld
	aM maxUpStep
	ae noPhysics
	af random
	ag tickCount
	aN remainingFireTicks
	ah wasTouchingWater
	ai fluidHeight
	aj wasEyeInWater
	aO fluidOnEyes
	ak invulnerableTime
	al firstTick
	am entityData
	an DATA_SHARED_FLAGS_ID
	ao FLAG_ONFIRE
	aP FLAG_SHIFT_KEY_DOWN
	aQ FLAG_SPRINTING
	aR FLAG_SWIMMING
	aS FLAG_INVISIBLE
	ap FLAG_GLOWING
	aq FLAG_FALL_FLYING
	aT DATA_AIR_SUPPLY_ID
	aU DATA_CUSTOM_NAME
	aV DATA_CUSTOM_NAME_VISIBLE
	aW DATA_SILENT
	aX DATA_NO_GRAVITY
	ar DATA_POSE
	aY DATA_TICKS_FROZEN
	aZ levelCallback
	ba packetPositionCodec
	as noCulling
	at hasImpulse
	bb portalCooldown
	au isInsidePortal
	av portalTime
	aw portalEntrancePos
	bc invulnerable
	ax uuid
	ay stringUUID
	bd hasGlowingTag
	be tags
	bf pistonDeltas
	bg pistonDeltasGameTime
	bh dimensions
	bi eyeHeight
	az isInPowderSnow
	aA wasInPowderSnow
	aB wasOnFire
	aC mainSupportingBlockPos
	bj onGroundNoBlocks
	bk crystalSoundIntensity
	bl lastCrystalSoundPlayTick
	bm hasVisualFire
	bn feetBlockState
	<init> (Lbfn;Lcmm;)V <init>
	a (Lgu;Ldcb;)Z isColliding
	k_ ()I getTeamColor
	G_ ()Z isSpectator
	ac ()V unRide
	f (DDD)V syncPacketPositionCodec
	ad ()Laaz; getPositionCodec
	ae ()Lbfn; getType
	af ()I getId
	e (I)V setId
	ag ()Ljava/util/Set; getTags
	a (Ljava/lang/String;)Z addTag
	b (Ljava/lang/String;)Z removeTag
	ah ()V kill
	ai ()V discard
	a_ ()V defineSynchedData
	aj ()Lacb; getEntityData
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Lbfj$c;)V remove
	ak ()V onClientRemoval
	b (Lbgl;)V setPose
	al ()Lbgl; getPose
	c (Lbgl;)Z hasPose
	a (Lbfj;D)Z closerThan
	a (Lbfj;DD)Z closerThan
	a (FF)V setRot
	a (Leei;)V setPos
	e (DDD)V setPos
	am ()Leed; makeBoundingBox
	an ()V reapplyPosition
	b (DD)V turn
	l ()V tick
	ao ()V baseTick
	a_ (Z)V setSharedFlagOnFire
	ap ()V checkBelowWorld
	aq ()V setPortalCooldown
	f (I)V setPortalCooldown
	ar ()I getPortalCooldown
	as ()Z isOnPortalCooldown
	H ()V processPortalCooldown
	at ()I getPortalWaitTime
	au ()V lavaHurt
	g (I)V setSecondsOnFire
	h (I)V setRemainingFireTicks
	av ()I getRemainingFireTicks
	aw ()V clearFire
	ax ()V onBelowWorld
	g (DDD)Z isFree
	b (Leed;)Z isFree
	c (Z)V setOnGround
	a (ZLeei;)V setOnGroundWithKnownMovement
	d (Lgu;)Z isSupportedBy
	b (ZLeei;)V checkSupportingBlock
	ay ()Z onGround
	a (Lbgf;Leei;)V move
	c (Ldcb;)Z isStateClimbable
	a (Lgu;Ldcb;ZZLeei;)Z vibrationAndSoundEffectsFromBlock
	b (Leei;)Z isHorizontalCollisionMinor
	az ()V tryCheckInsideBlocks
	aA ()V playEntityOnFireExtinguishedSound
	aB ()V extinguishFire
	aC ()V processFlappingMovement
	aD ()Lgu; getOnPosLegacy
	aE ()Lgu; getBlockPosBelowThatAffectsMyMovement
	aF ()Lgu; getOnPos
	d (F)Lgu; getOnPos
	aG ()F getBlockJumpFactor
	aH ()F getBlockSpeedFactor
	a (Leei;Lbgf;)Leei; maybeBackOffFromEdge
	c (Leei;)Leei; limitPistonMovement
	a (Lha$a;D)D applyPistonMovementRestriction
	h (Leei;)Leei; collide
	a (Lbfj;Leei;Leed;Lcmm;Ljava/util/List;)Leei; collideBoundingBox
	a (Leei;Leed;Ljava/util/List;)Leei; collideWithShapes
	aI ()F nextStep
	aJ ()Lamg; getSwimSound
	aK ()Lamg; getSwimSplashSound
	aL ()Lamg; getSwimHighSpeedSplashSound
	aM ()V checkInsideBlocks
	a (Ldcb;)V onInsideBlock
	a (Ldgl;Lbfj;)V gameEvent
	a (Ldgl;)V gameEvent
	c (Lgu;Ldcb;)V walkingStepSound
	aN ()V waterSwimSound
	e (Lgu;)Lgu; getPrimaryStepSoundBlockPos
	a (Ldcb;Ldcb;)V playCombinationStepSounds
	b (Ldcb;)V playMuffledStepSound
	b (Lgu;Ldcb;)V playStepSound
	d (Ldcb;)Z shouldPlayAmethystStepSound
	k ()V playAmethystStepSound
	e (F)V playSwimSound
	aO ()V onFlap
	aP ()Z isFlapping
	a (Lamg;FF)V playSound
	a (Lamg;)V playSound
	aQ ()Z isSilent
	d (Z)V setSilent
	aR ()Z isNoGravity
	e (Z)V setNoGravity
	aS ()Lbfj$b; getMovementEmission
	aT ()Z dampensVibrations
	a (DZLdcb;Lgu;)V checkFallDamage
	aU ()Z fireImmune
	a (FFLben;)Z causeFallDamage
	aV ()Z isInWater
	o ()Z isInRain
	p ()Z isInBubbleColumn
	aW ()Z isInWaterOrRain
	aX ()Z isInWaterRainOrBubble
	aY ()Z isInWaterOrBubble
	aZ ()Z isUnderWater
	ba ()V updateSwimming
	bb ()Z updateInWaterStateAndDoFluidPushing
	bc ()V updateInWaterStateAndDoWaterCurrentPushing
	q ()V updateFluidOnEyes
	bd ()V doWaterSplashEffect
	be ()Ldcb; getBlockStateOnLegacy
	bf ()Ldcb; getBlockStateOn
	bg ()Z canSpawnSprintParticle
	bh ()V spawnSprintParticle
	a (Lanl;)Z isEyeInFluid
	bi ()Z isInLava
	a (FLeei;)V moveRelative
	a (Leei;FF)Leei; getInputVector
	bj ()F getLightLevelDependentMagicValue
	a (DDDFF)V absMoveTo
	h (DDD)V absMoveTo
	d (Leei;)V moveTo
	d (DDD)V moveTo
	a (Lgu;FF)V moveTo
	b (DDDFF)V moveTo
	bk ()V setOldPosAndRot
	e (Lbfj;)F distanceTo
	i (DDD)D distanceToSqr
	f (Lbfj;)D distanceToSqr
	e (Leei;)D distanceToSqr
	b_ (Lbyo;)V playerTouch
	g (Lbfj;)V push
	j (DDD)V push
	bl ()V markHurt
	a (Lben;F)Z hurt
	f (F)Leei; getViewVector
	g (F)F getViewXRot
	h (F)F getViewYRot
	b (FF)Leei; calculateViewVector
	i (F)Leei; getUpVector
	c (FF)Leei; calculateUpVector
	bm ()Leei; getEyePosition
	j (F)Leei; getEyePosition
	k (F)Leei; getLightProbePosition
	l (F)Leei; getPosition
	a (DFZ)Leeg; pick
	bn ()Z canBeHitByProjectile
	bo ()Z isPickable
	bp ()Z isPushable
	a (Lbfj;ILben;)V awardKillScore
	k (DDD)Z shouldRender
	a (D)Z shouldRenderAtSqrDistance
	d (Lqr;)Z saveAsPassenger
	e (Lqr;)Z save
	f (Lqr;)Lqr; saveWithoutId
	g (Lqr;)V load
	bq ()Z repositionEntityAfterLoad
	br ()Ljava/lang/String; getEncodeId
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a ([D)Lqx; newDoubleList
	a ([F)Lqx; newFloatList
	a (Lcml;)Lbvh; spawnAtLocation
	a (Lcml;I)Lbvh; spawnAtLocation
	b (Lcfz;)Lbvh; spawnAtLocation
	a (Lcfz;F)Lbvh; spawnAtLocation
	bs ()Z isAlive
	bt ()Z isInWall
	a (Lbyo;Lbdw;)Lbdx; interact
	h (Lbfj;)Z canCollideWith
	bu ()Z canBeCollidedWith
	bv ()V rideTick
	i (Lbfj;)V positionRider
	a (Lbfj;Lbfj$a;)V positionRider
	j (Lbfj;)V onPassengerTurned
	bw ()D getMyRidingOffset
	bx ()D getPassengersRidingOffset
	k (Lbfj;)Z startRiding
	by ()Z showVehicleHealth
	a (Lbfj;Z)Z startRiding
	l (Lbfj;)Z canRide
	d (Lbgl;)Z canEnterPose
	bz ()V ejectPassengers
	bA ()V removeVehicle
	Y ()V stopRiding
	m (Lbfj;)V addPassenger
	n (Lbfj;)V removePassenger
	o (Lbfj;)Z canAddPassenger
	bB ()Z couldAcceptPassenger
	a (DDDFFIZ)V lerpTo
	a (FI)V lerpHeadTo
	bC ()F getPickRadius
	bD ()Leei; getLookAngle
	a (Lcfu;)Leei; getHandHoldingItemAngle
	bE ()Leeh; getRotationVector
	bF ()Leei; getForward
	f (Lgu;)V handleInsidePortal
	bG ()V handleNetherPortal
	bH ()I getDimensionChangingDelay
	l (DDD)V lerpMotion
	c (Lben;)V handleDamageEvent
	b (B)V handleEntityEvent
	m (F)V animateHurt
	bI ()Ljava/lang/Iterable; getHandSlots
	bJ ()Ljava/lang/Iterable; getArmorSlots
	bK ()Ljava/lang/Iterable; getAllSlots
	a (Lbfo;Lcfz;)V setItemSlot
	bL ()Z isOnFire
	bM ()Z isPassenger
	bN ()Z isVehicle
	bO ()Z dismountsUnderwater
	f (Z)V setShiftKeyDown
	bP ()Z isShiftKeyDown
	bQ ()Z isSteppingCarefully
	bR ()Z isSuppressingBounce
	bS ()Z isDiscrete
	bT ()Z isDescending
	bU ()Z isCrouching
	bV ()Z isSprinting
	g (Z)V setSprinting
	bW ()Z isSwimming
	bX ()Z isVisuallySwimming
	bY ()Z isVisuallyCrawling
	h (Z)V setSwimming
	bZ ()Z hasGlowingTag
	i (Z)V setGlowingTag
	ca ()Z isCurrentlyGlowing
	cb ()Z isInvisible
	d (Lbyo;)Z isInvisibleTo
	cc ()Z isOnRails
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	cd ()Lefi; getTeam
	p (Lbfj;)Z isAlliedTo
	a (Lefi;)Z isAlliedTo
	j (Z)V setInvisible
	i (I)Z getSharedFlag
	b (IZ)V setSharedFlag
	ce ()I getMaxAirSupply
	cf ()I getAirSupply
	j (I)V setAirSupply
	cg ()I getTicksFrozen
	k (I)V setTicksFrozen
	ch ()F getPercentFrozen
	ci ()Z isFullyFrozen
	cj ()I getTicksRequiredToFreeze
	a (Laif;Lbfy;)V thunderHit
	k (Z)V onAboveBubbleCol
	l (Z)V onInsideBubbleColumn
	a (Laif;Lbfz;)Z killedEntity
	ck ()V checkSlowFallDistance
	n ()V resetFallDistance
	m (DDD)V moveTowardsClosestSpace
	a (Ldcb;Leei;)V makeStuckInBlock
	c (Lsw;)Lsw; removeAction
	Z ()Lsw; getName
	cl ()Lsw; getTypeName
	q (Lbfj;)Z is
	cm ()F getYHeadRot
	n (F)V setYHeadRot
	o (F)V setYBodyRot
	cn ()Z isAttackable
	r (Lbfj;)Z skipAttackInteraction
	toString ()Ljava/lang/String; toString
	b (Lben;)Z isInvulnerableTo
	co ()Z isInvulnerable
	m (Z)V setInvulnerable
	s (Lbfj;)V copyPosition
	t (Lbfj;)V restoreFrom
	b (Laif;)Lbfj; changeDimension
	cp ()V removeAfterChangingDimensions
	a (Laif;)Ldyb; findDimensionEntryPoint
	a (Lha$a;Ll$a;)Leei; getRelativePortalPosition
	a (Laif;Lgu;ZLdds;)Ljava/util/Optional; getExitPortal
	cq ()Z canChangeDimensions
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;F)F getBlockExplosionResistance
	a (Lcme;Lcls;Lgu;Ldcb;F)Z shouldBlockExplode
	cr ()I getMaxFallDistance
	c_ ()Z isIgnoringBlockTriggers
	a (Lp;)V fillCrashReportCategory
	cs ()Z displayFireAnimation
	a_ (Ljava/util/UUID;)V setUUID
	ct ()Ljava/util/UUID; getUUID
	cu ()Ljava/lang/String; getStringUUID
	cv ()Ljava/lang/String; getScoreboardName
	cw ()Z isPushedByFluid
	cx ()D getViewScale
	b (D)V setViewScale
	H_ ()Lsw; getDisplayName
	b (Lsw;)V setCustomName
	ab ()Lsw; getCustomName
	aa ()Z hasCustomName
	n (Z)V setCustomNameVisible
	cy ()Z isCustomNameVisible
	n (DDD)V teleportToWithTicket
	a (Laif;DDDLjava/util/Set;FF)Z teleportTo
	a (DDD)V dismountTo
	b (DDD)V teleportTo
	s ()V teleportPassengers
	c (DDD)V teleportRelative
	cz ()Z shouldShowName
	a (Ljava/util/List;)V onSyncedDataUpdated
	a (Laby;)V onSyncedDataUpdated
	cA ()V fixupDimensions
	d_ ()V refreshDimensions
	cB ()Lha; getDirection
	cC ()Lha; getMotionDirection
	cD ()Ltb; createHoverEvent
	a (Laig;)Z broadcastToPlayer
	cE ()Leed; getBoundingBox
	j_ ()Leed; getBoundingBoxForCulling
	e (Lbgl;)Leed; getBoundingBoxForPose
	a (Leed;)V setBoundingBox
	a (Lbgl;Lbfk;)F getEyeHeight
	f (Lbgl;)F getEyeHeight
	cF ()F getEyeHeight
	p (F)Leei; getLeashOffset
	cG ()Leei; getLeashOffset
	a_ (I)Lbgs; getSlot
	a (Lsw;)V sendSystemMessage
	cH ()Lcmm; getCommandSenderWorld
	cI ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Lbyo;Leei;Lbdw;)Lbdx; interactAt
	cJ ()Z ignoreExplosion
	a (Lbfz;Lbfj;)V doEnchantDamageEffects
	c (Laig;)V startSeenByPlayer
	d (Laig;)V stopSeenByPlayer
	a (Lcvz;)F rotate
	a (Lcui;)F mirror
	cK ()Z onlyOpCanSetNbt
	cL ()Lbfz; getControllingPassenger
	cM ()Z hasControllingPassenger
	cN ()Ljava/util/List; getPassengers
	cO ()Lbfj; getFirstPassenger
	u (Lbfj;)Z hasPassenger
	a (Ljava/util/function/Predicate;)Z hasPassenger
	t ()Ljava/util/stream/Stream; getIndirectPassengersStream
	cP ()Ljava/util/stream/Stream; getSelfAndPassengers
	cQ ()Ljava/util/stream/Stream; getPassengersAndSelf
	cR ()Ljava/lang/Iterable; getIndirectPassengers
	cS ()Z hasExactlyOnePlayerPassenger
	cT ()Lbfj; getRootVehicle
	v (Lbfj;)Z isPassengerOfSameVehicle
	w (Lbfj;)Z hasIndirectPassenger
	cU ()Z isControlledByLocalInstance
	cV ()Z isEffectiveAi
	a (DDF)Leei; getCollisionHorizontalEscapeVector
	b (Lbfz;)Leei; getDismountLocationForPassenger
	cW ()Lbfj; getVehicle
	cX ()Lbfj; getControlledVehicle
	l_ ()Ldxj; getPistonPushReaction
	cY ()Lami; getSoundSource
	cZ ()I getFireImmuneTicks
	da ()Lds; createCommandSourceStack
	B ()I getPermissionLevel
	l (I)Z hasPermissions
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	a (Leb$a;Leei;)V lookAt
	a (Lanl;D)Z updateFluidHeightAndDoFluidPushing
	db ()Z touchingUnloadedChunk
	b (Lanl;)D getFluidHeight
	dc ()D getFluidJumpThreshold
	dd ()F getBbWidth
	de ()F getBbHeight
	df ()F getNameTagOffsetY
	S ()Luo; getAddEntityPacket
	a (Lbgl;)Lbfk; getDimensions
	dg ()Leei; position
	dh ()Leei; trackingPosition
	di ()Lgu; blockPosition
	dj ()Ldcb; getFeetBlockState
	dk ()Lclt; chunkPosition
	dl ()Leei; getDeltaMovement
	f (Leei;)V setDeltaMovement
	g (Leei;)V addDeltaMovement
	o (DDD)V setDeltaMovement
	dm ()I getBlockX
	dn ()D getX
	c (D)D getX
	d (D)D getRandomX
	do ()I getBlockY
	dp ()D getY
	e (D)D getY
	dq ()D getRandomY
	dr ()D getEyeY
	ds ()I getBlockZ
	dt ()D getZ
	f (D)D getZ
	g (D)D getRandomZ
	p (DDD)V setPosRaw
	du ()V checkDespawn
	q (F)Leei; getRopeHoldPosition
	a (Lus;)V recreateFromPacket
	dv ()Lcfz; getPickResult
	o (Z)V setIsInPowderSnow
	dw ()Z canFreeze
	dx ()Z isFreezing
	dy ()F getYRot
	dz ()F getVisualRotationYInDegrees
	a_ (F)V setYRot
	dA ()F getXRot
	b_ (F)V setXRot
	dB ()Z canSprint
	dC ()F maxUpStep
	r (F)V setMaxUpStep
	dD ()Z isRemoved
	dE ()Lbfj$c; getRemovalReason
	b (Lbfj$c;)V setRemoved
	dF ()V unsetRemoved
	a (Ldft;)V setLevelCallback
	dG ()Z shouldBeSaved
	dH ()Z isAlwaysTicking
	a (Lcmm;Lgu;)Z mayInteract
	dI ()Lcmm; level
	a (Lcmm;)V setLevel
	dJ ()Lbeo; damageSources
	a (Lbfj;)Z lambda$hasExactlyOnePlayerPassenger$16
	x ()Ljava/util/Iterator; lambda$getIndirectPassengers$15
	a (Lbfk;Leei;)V lambda$refreshDimensions$14
	b (Lbfj;)V lambda$teleportPassengers$13
	a (Lts;)Lts; lambda$getDisplayName$12
	y ()Ljava/lang/String; lambda$fillCrashReportCategory$11
	z ()Ljava/lang/String; lambda$fillCrashReportCategory$10
	F ()Ljava/lang/String; lambda$fillCrashReportCategory$9
	G ()Ljava/lang/String; lambda$fillCrashReportCategory$8
	a (Laif;Ll$a;)Ldyb; lambda$findDimensionEntryPoint$7
	a (Ldcb;Lgu;)Z lambda$findDimensionEntryPoint$6
	a (Lbfj;Lbfj;)Z lambda$removePassenger$5
	c (Lbfj;)V lambda$startRiding$4
	d (Lbfj;)Z lambda$startRiding$3
	a (Leed;Lgu;)Z lambda$isInWall$2
	a (Lgu;)Ldcb; lambda$checkFallDamage$1
	e (Ldcb;)Z lambda$move$0
	<clinit> ()V <clinit>
bfj$1 net/minecraft/world/entity/Entity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
bfj$a net/minecraft/world/entity/Entity$MoveFunction
	accept (Lbfj;DDD)V accept
bfj$b net/minecraft/world/entity/Entity$MovementEmission
	a NONE
	b SOUNDS
	c EVENTS
	d ALL
	e sounds
	f events
	g $VALUES
	values ()[Lbfj$b; values
	valueOf (Ljava/lang/String;)Lbfj$b; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()Z emitsAnything
	b ()Z emitsEvents
	c ()Z emitsSounds
	d ()[Lbfj$b; $values
	<clinit> ()V <clinit>
bfj$c net/minecraft/world/entity/Entity$RemovalReason
	a KILLED
	b DISCARDED
	c UNLOADED_TO_CHUNK
	d UNLOADED_WITH_PLAYER
	e CHANGED_DIMENSION
	f destroy
	g save
	h $VALUES
	values ()[Lbfj$c; values
	valueOf (Ljava/lang/String;)Lbfj$c; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()Z shouldDestroy
	b ()Z shouldSave
	c ()[Lbfj$c; $values
	<clinit> ()V <clinit>
bfk net/minecraft/world/entity/EntityDimensions
	a width
	b height
	c fixed
	<init> (FFZ)V <init>
	a (Leei;)Leed; makeBoundingBox
	a (DDD)Leed; makeBoundingBox
	a (F)Lbfk; scale
	a (FF)Lbfk; scale
	b (FF)Lbfk; scalable
	c (FF)Lbfk; fixed
	toString ()Ljava/lang/String; toString
bfl net/minecraft/world/entity/EntityEvent
	a JUMP
	b DEATH
	c START_ATTACKING
	d STOP_ATTACKING
	e TAMING_FAILED
	f TAMING_SUCCEEDED
	g SHAKE_WETNESS
	h USE_ITEM_COMPLETE
	i EAT_GRASS
	j OFFER_FLOWER
	k LOVE_HEARTS
	l VILLAGER_ANGRY
	m VILLAGER_HAPPY
	n WITCH_HAT_MAGIC
	o ZOMBIE_CONVERTING
	p FIREWORKS_EXPLODE
	q IN_LOVE_HEARTS
	r SQUID_ANIM_SYNCH
	s SILVERFISH_MERGE_ANIM
	t GUARDIAN_ATTACK_SOUND
	u REDUCED_DEBUG_INFO
	v FULL_DEBUG_INFO
	w PERMISSION_LEVEL_ALL
	x PERMISSION_LEVEL_MODERATORS
	y PERMISSION_LEVEL_GAMEMASTERS
	z PERMISSION_LEVEL_ADMINS
	A PERMISSION_LEVEL_OWNERS
	B ATTACK_BLOCKED
	C SHIELD_DISABLED
	D FISHING_ROD_REEL_IN
	E ARMORSTAND_WOBBLE
	F STOP_OFFER_FLOWER
	G TALISMAN_ACTIVATE
	H DOLPHIN_LOOKING_FOR_TREASURE
	I RAVAGER_STUNNED
	J TRUSTING_FAILED
	K TRUSTING_SUCCEEDED
	L VILLAGER_SWEAT
	M BAD_OMEN_TRIGGERED
	N FOX_EAT
	O TELEPORT
	P MAINHAND_BREAK
	Q OFFHAND_BREAK
	R HEAD_BREAK
	S CHEST_BREAK
	T LEGS_BREAK
	U FEET_BREAK
	V HONEY_SLIDE
	W HONEY_JUMP
	X SWAP_HANDS
	Y CANCEL_SHAKE_WETNESS
	Z START_RAM
	aa END_RAM
	ab POOF
	ac TENDRILS_SHIVER
	ad SONIC_CHARGE
	ae SNIFFER_DIGGING_SOUND
	<init> ()V <init>
bfm net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f NO_SPECTATORS
	g CAN_BE_COLLIDED_WITH
	<init> ()V <init>
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (Lbfj;)Ljava/util/function/Predicate; pushableBy
	b (Lbfj;)Ljava/util/function/Predicate; notRiding
	a (Lbfj;Lbfj;)Z lambda$notRiding$7
	a (Lbfj;Lefi;Lefi$a;Lbfj;)Z lambda$pushableBy$6
	a (DDDDLbfj;)Z lambda$withinDistance$5
	c (Lbfj;)Z lambda$static$4
	d (Lbfj;)Z lambda$static$3
	e (Lbfj;)Z lambda$static$2
	f (Lbfj;)Z lambda$static$1
	g (Lbfj;)Z lambda$static$0
	<clinit> ()V <clinit>
bfm$a net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	a itemStack
	<init> (Lcfz;)V <init>
	a (Lbfj;)Z test
	test (Ljava/lang/Object;)Z test
bfn net/minecraft/world/entity/EntityType
	bw LOGGER
	a ENTITY_TAG
	bx builtInRegistryHolder
	by MAGIC_HORSE_WIDTH
	bz DISPLAY_TRACKING_RANGE
	b ALLAY
	c AREA_EFFECT_CLOUD
	d ARMOR_STAND
	e ARROW
	f AXOLOTL
	g BAT
	h BEE
	i BLAZE
	j BLOCK_DISPLAY
	k BOAT
	l CAMEL
	m CAT
	n CAVE_SPIDER
	o CHEST_BOAT
	p CHEST_MINECART
	q CHICKEN
	r COD
	s COMMAND_BLOCK_MINECART
	t COW
	u CREEPER
	v DOLPHIN
	w DONKEY
	x DRAGON_FIREBALL
	y DROWNED
	z EGG
	A ELDER_GUARDIAN
	B END_CRYSTAL
	C ENDER_DRAGON
	D ENDER_PEARL
	E ENDERMAN
	F ENDERMITE
	G EVOKER
	H EVOKER_FANGS
	I EXPERIENCE_BOTTLE
	J EXPERIENCE_ORB
	K EYE_OF_ENDER
	L FALLING_BLOCK
	M FIREWORK_ROCKET
	N FOX
	O FROG
	P FURNACE_MINECART
	Q GHAST
	R GIANT
	S GLOW_ITEM_FRAME
	T GLOW_SQUID
	U GOAT
	V GUARDIAN
	W HOGLIN
	X HOPPER_MINECART
	Y HORSE
	Z HUSK
	aa ILLUSIONER
	ab INTERACTION
	ac IRON_GOLEM
	ad ITEM
	ae ITEM_DISPLAY
	af ITEM_FRAME
	ag FIREBALL
	ah LEASH_KNOT
	ai LIGHTNING_BOLT
	aj LLAMA
	ak LLAMA_SPIT
	al MAGMA_CUBE
	am MARKER
	an MINECART
	ao MOOSHROOM
	ap MULE
	aq OCELOT
	ar PAINTING
	as PANDA
	at PARROT
	au PHANTOM
	av PIG
	aw PIGLIN
	ax PIGLIN_BRUTE
	ay PILLAGER
	az POLAR_BEAR
	aA POTION
	aB PUFFERFISH
	aC RABBIT
	aD RAVAGER
	aE SALMON
	aF SHEEP
	aG SHULKER
	aH SHULKER_BULLET
	aI SILVERFISH
	aJ SKELETON
	aK SKELETON_HORSE
	aL SLIME
	aM SMALL_FIREBALL
	aN SNIFFER
	aO SNOW_GOLEM
	aP SNOWBALL
	aQ SPAWNER_MINECART
	aR SPECTRAL_ARROW
	aS SPIDER
	aT SQUID
	aU STRAY
	aV STRIDER
	aW TADPOLE
	aX TEXT_DISPLAY
	aY TNT
	aZ TNT_MINECART
	ba TRADER_LLAMA
	bb TRIDENT
	bc TROPICAL_FISH
	bd TURTLE
	be VEX
	bf VILLAGER
	bg VINDICATOR
	bh WANDERING_TRADER
	bi WARDEN
	bj WITCH
	bk WITHER
	bl WITHER_SKELETON
	bm WITHER_SKULL
	bn WOLF
	bo ZOGLIN
	bp ZOMBIE
	bq ZOMBIE_HORSE
	br ZOMBIE_VILLAGER
	bs ZOMBIFIED_PIGLIN
	bt PLAYER
	bu FISHING_BOBBER
	bA factory
	bB category
	bC immuneTo
	bD serialize
	bE summon
	bF fireImmune
	bG canSpawnFarFromPlayer
	bH clientTrackingRange
	bI updateInterval
	bJ descriptionId
	bK description
	bL lootTable
	bM dimensions
	bN requiredFeatures
	a (Ljava/lang/String;Lbfn$a;)Lbfn; register
	a (Lbfn;)Lacq; getKey
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	<init> (Lbfn$b;Lbgc;ZZZZLcom/google/common/collect/ImmutableSet;Lbfk;IILcaw;)V <init>
	a (Laif;Lcfz;Lbyo;Lgu;Lbgd;ZZ)Lbfj; spawn
	a (Laif;Lcfz;Lbyo;)Ljava/util/function/Consumer; createDefaultStackConfig
	a (Ljava/util/function/Consumer;Laif;Lcfz;Lbyo;)Ljava/util/function/Consumer; appendDefaultStackConfig
	a (Ljava/util/function/Consumer;Lcfz;)Ljava/util/function/Consumer; appendCustomNameConfig
	b (Ljava/util/function/Consumer;Laif;Lcfz;Lbyo;)Ljava/util/function/Consumer; appendCustomEntityStackConfig
	a (Laif;Lgu;Lbgd;)Lbfj; spawn
	a (Laif;Lqr;Ljava/util/function/Consumer;Lgu;Lbgd;ZZ)Lbfj; spawn
	b (Laif;Lqr;Ljava/util/function/Consumer;Lgu;Lbgd;ZZ)Lbfj; create
	a (Lcmp;Lgu;ZLeed;)D getYOffset
	a (Lcmm;Lbyo;Lbfj;Lqr;)V updateCustomEntityTag
	b ()Z canSerialize
	c ()Z canSummon
	d ()Z fireImmune
	e ()Z canSpawnFarFromPlayer
	f ()Lbgc; getCategory
	g ()Ljava/lang/String; getDescriptionId
	h ()Lsw; getDescription
	toString ()Ljava/lang/String; toString
	i ()Ljava/lang/String; toShortString
	j ()Lacq; getDefaultLootTable
	k ()F getWidth
	l ()F getHeight
	m ()Lcaw; requiredFeatures
	a (Lcmm;)Lbfj; create
	a (Lqr;Lcmm;)Ljava/util/Optional; create
	a (DDD)Leed; getAABB
	a (Ldcb;)Z isBlockDangerous
	n ()Lbfk; getDimensions
	a (Lqr;)Ljava/util/Optional; by
	a (Lqr;Lcmm;Ljava/util/function/Function;)Lbfj; loadEntityRecursive
	a (Ljava/util/List;Lcmm;)Ljava/util/stream/Stream; loadEntitiesRecursive
	b (Lqr;Lcmm;)Ljava/util/Optional; loadStaticEntity
	o ()I clientTrackingRange
	p ()I updateInterval
	q ()Z trackDeltas
	a (Lanl;)Z is
	a (Lbfj;)Lbfj; tryCast
	a ()Ljava/lang/Class; getBaseClass
	r ()Lhe$c; builtInRegistryHolder
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
	a (Lqr;Lcmm;Ljava/util/function/Function;Lbfj;)Lbfj; lambda$loadEntityRecursive$7
	b (Lqr;)V lambda$create$6
	a (Lqr;Lbfj;)V lambda$create$5
	a (Lcmm;Lbfn;)Lbfj; lambda$create$4
	a (Laif;Lbyo;Lqr;Lbfj;)V lambda$appendCustomEntityStackConfig$3
	a (Lcfz;Lbfj;)V lambda$appendCustomNameConfig$2
	b (Lbfj;)V lambda$createDefaultStackConfig$1
	c (Lbfj;)V lambda$spawn$0
	<clinit> ()V <clinit>
bfn$1 net/minecraft/world/entity/EntityType$1
	a val$tagSpliterator
	b val$level
	c val$entities
	<init> (Ljava/util/Spliterator;Lcmm;Ljava/util/List;)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
	trySplit ()Ljava/util/Spliterator; trySplit
	estimateSize ()J estimateSize
	characteristics ()I characteristics
	a (Lcmm;Ljava/util/function/Consumer;Lrk;)V lambda$tryAdvance$1
	a (Ljava/util/function/Consumer;Lbfj;)Lbfj; lambda$tryAdvance$0
bfn$a net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c immuneTo
	d serialize
	e summon
	f fireImmune
	g canSpawnFarFromPlayer
	h clientTrackingRange
	i updateInterval
	j dimensions
	k requiredFeatures
	<init> (Lbfn$b;Lbgc;)V <init>
	a (Lbfn$b;Lbgc;)Lbfn$a; of
	a (Lbgc;)Lbfn$a; createNothing
	a (FF)Lbfn$a; sized
	a ()Lbfn$a; noSummon
	b ()Lbfn$a; noSave
	c ()Lbfn$a; fireImmune
	a ([Lcpn;)Lbfn$a; immuneTo
	d ()Lbfn$a; canSpawnFarFromPlayer
	a (I)Lbfn$a; clientTrackingRange
	b (I)Lbfn$a; updateInterval
	a ([Lcau;)Lbfn$a; requiredFeatures
	a (Ljava/lang/String;)Lbfn; build
	a (Lbfn;Lcmm;)Lbfj; lambda$createNothing$0
bfn$b net/minecraft/world/entity/EntityType$EntityFactory
	create (Lbfn;Lcmm;)Lbfj; create
bfo net/minecraft/world/entity/EquipmentSlot
	a MAINHAND
	b OFFHAND
	c FEET
	d LEGS
	e CHEST
	f HEAD
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	values ()[Lbfo; values
	valueOf (Ljava/lang/String;)Lbfo; valueOf
	<init> (Ljava/lang/String;ILbfo$a;IILjava/lang/String;)V <init>
	a ()Lbfo$a; getType
	b ()I getIndex
	a (I)I getIndex
	c ()I getFilterFlag
	d ()Ljava/lang/String; getName
	e ()Z isArmor
	a (Ljava/lang/String;)Lbfo; byName
	a (Lbfo$a;I)Lbfo; byTypeAndIndex
	f ()[Lbfo; $values
	<clinit> ()V <clinit>
bfo$a net/minecraft/world/entity/EquipmentSlot$Type
	a HAND
	b ARMOR
	c $VALUES
	values ()[Lbfo$a; values
	valueOf (Ljava/lang/String;)Lbfo$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbfo$a; $values
	<clinit> ()V <clinit>
bfp net/minecraft/world/entity/ExperienceOrb
	b LIFETIME
	c ENTITY_SCAN_PERIOD
	d MAX_FOLLOW_DIST
	e ORB_GROUPS_PER_AREA
	f ORB_MERGE_DISTANCE
	g age
	h health
	i value
	j count
	k followingPlayer
	<init> (Lcmm;DDDI)V <init>
	<init> (Lbfn;Lcmm;)V <init>
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	l ()V tick
	aE ()Lgu; getBlockPosBelowThatAffectsMyMovement
	o ()V scanForEntities
	a (Laif;Leei;I)V award
	b (Laif;Leei;I)Z tryMergeToExisting
	a (Lbfp;)Z canMerge
	a (Lbfp;II)Z canMerge
	b (Lbfp;)V merge
	p ()V setUnderwaterMovement
	bd ()V doWaterSplashEffect
	a (Lben;F)Z hurt
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b_ (Lbyo;)V playerTouch
	a (Lbyo;I)I repairPlayerItems
	c (I)I durabilityToXp
	d (I)I xpToDurability
	j ()I getValue
	k ()I getIcon
	b (I)I getExperienceValue
	cn ()Z isAttackable
	S ()Luo; getAddEntityPacket
	cY ()Lami; getSoundSource
	a (IILbfp;)Z lambda$tryMergeToExisting$0
bfq net/minecraft/world/entity/FlyingMob
	<init> (Lbfn;Lcmm;)V <init>
	a (DZLdcb;Lgu;)V checkFallDamage
	h (Leei;)V travel
	i_ ()Z onClimbable
bfr net/minecraft/world/entity/GlowSquid
	bX DATA_DARK_TICKS_REMAINING
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lit; getInkParticle
	a_ ()V defineSynchedData
	r ()Lamg; getSquirtSound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b_ ()V aiStep
	a (Lben;F)Z hurt
	c (I)V setDarkTicks
	w ()I getDarkTicksRemaining
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkGlowSquideSpawnRules
	<clinit> ()V <clinit>
bfs net/minecraft/world/entity/HasCustomInventoryScreen
	b (Lbyo;)V openCustomInventoryScreen
bft net/minecraft/world/entity/HumanoidArm
	a LEFT
	b RIGHT
	c id
	d name
	e $VALUES
	values ()[Lbft; values
	valueOf (Ljava/lang/String;)Lbft; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	d ()Lbft; getOpposite
	a ()I getId
	b ()Ljava/lang/String; getKey
	e ()[Lbft; $values
	<clinit> ()V <clinit>
bfu net/minecraft/world/entity/Interaction
	b LOGGER
	c DATA_WIDTH_ID
	d DATA_HEIGHT_ID
	e DATA_RESPONSE_ID
	f TAG_WIDTH
	g TAG_HEIGHT
	h TAG_ATTACK
	i TAG_INTERACTION
	j TAG_RESPONSE
	k attack
	l interaction
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a (Laby;)V onSyncedDataUpdated
	bn ()Z canBeHitByProjectile
	bo ()Z isPickable
	l_ ()Ldxj; getPistonPushReaction
	c_ ()Z isIgnoringBlockTriggers
	r (Lbfj;)Z skipAttackInteraction
	a (Lbyo;Lbdw;)Lbdx; interact
	l ()V tick
	M_ ()Lbfz; getLastAttacker
	j ()Lbfz; getTarget
	a (F)V setWidth
	k ()F getWidth
	s (F)V setHeight
	o ()F getHeight
	a (Z)V setResponse
	p ()Z getResponse
	q ()Lbfk; getDimensions
	a (Lbgl;)Lbfk; getDimensions
	am ()Leed; makeBoundingBox
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$3
	b (Lqr;Lrk;)V lambda$addAdditionalSaveData$2
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$1
	b (Lcom/mojang/datafixers/util/Pair;)V lambda$readAdditionalSaveData$0
	<clinit> ()V <clinit>
bfu$a net/minecraft/world/entity/Interaction$PlayerAction
	b player
	c timestamp
	a CODEC
	<init> (Ljava/util/UUID;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/UUID; player
	b ()J timestamp
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
bfv net/minecraft/world/entity/ItemBasedSteering
	a MIN_BOOST_TIME
	b MAX_BOOST_TIME
	c entityData
	d boostTimeAccessor
	e hasSaddleAccessor
	f boosting
	g boostTime
	<init> (Lacb;Laby;Laby;)V <init>
	a ()V onSynced
	a (Lapf;)Z boost
	b ()V tickBoost
	c ()F boostFactor
	e ()I boostTimeTotal
	a (Lqr;)V addAdditionalSaveData
	b (Lqr;)V readAdditionalSaveData
	a (Z)V setSaddle
	d ()Z hasSaddle
bfw net/minecraft/world/entity/ItemSteerable
	a ()Z boost
bfx net/minecraft/world/entity/LerpingModel
	a ()Ljava/util/Map; getModelRotationValues
bfy net/minecraft/world/entity/LightningBolt
	c START_LIFE
	d DAMAGE_RADIUS
	e DETECTION_RADIUS
	f life
	b seed
	g flashes
	h visualOnly
	i cause
	j hitEntities
	k blocksSetOnFire
	<init> (Lbfn;Lcmm;)V <init>
	a (Z)V setVisualOnly
	cY ()Lami; getSoundSource
	j ()Laig; getCause
	b (Laig;)V setCause
	p ()V powerLightningRod
	l ()V tick
	q ()Lgu; getStrikePosition
	b (I)V spawnFire
	b (Lcmm;Lgu;)V clearCopperOnLightningStrike
	a (Lcmm;Lgu;Lgu$a;I)V randomWalkCleaningCopper
	c (Lcmm;Lgu;)Ljava/util/Optional; randomStepCleaningCopper
	a (D)Z shouldRenderAtSqrDistance
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	k ()I getBlocksSetOnFire
	o ()Ljava/util/stream/Stream; getHitEntities
	a (Lcmm;Lgu;Ldcb;)V lambda$randomStepCleaningCopper$2
	e (Laig;)Z lambda$tick$1
	a (Lbfj;)Z lambda$tick$0
bfz net/minecraft/world/entity/LivingEntity
	b LOGGER
	c SPEED_MODIFIER_SPRINTING_UUID
	d SPEED_MODIFIER_SOUL_SPEED_UUID
	e SPEED_MODIFIER_POWDER_SNOW_UUID
	bB SPEED_MODIFIER_SPRINTING
	h HAND_SLOTS
	i ARMOR_SLOTS
	j EQUIPMENT_SLOT_OFFSET
	k ARMOR_SLOT_OFFSET
	l SWING_DURATION
	m PLAYER_HURT_EXPERIENCE_TIME
	bC DAMAGE_SOURCE_TIMEOUT
	n MIN_MOVEMENT_DISTANCE
	o DEFAULT_BASE_GRAVITY
	p DEATH_DURATION
	bD WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	bE TICKS_PER_ELYTRA_FREE_FALL_EVENT
	bF FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	q USE_ITEM_INTERVAL
	bG BASE_JUMP_POWER
	bH MAX_LINE_OF_SIGHT_TEST_RANGE
	r LIVING_ENTITY_FLAG_IS_USING
	s LIVING_ENTITY_FLAG_OFF_HAND
	t LIVING_ENTITY_FLAG_SPIN_ATTACK
	u DATA_LIVING_ENTITY_FLAGS
	bI DATA_HEALTH_ID
	bJ DATA_EFFECT_COLOR_ID
	bK DATA_EFFECT_AMBIENCE_ID
	bL DATA_ARROW_COUNT_ID
	bM DATA_STINGER_COUNT_ID
	bN SLEEPING_POS_ID
	aD DEFAULT_EYE_HEIGHT
	aE SLEEPING_DIMENSIONS
	aF EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	bO MAX_HEAD_ROTATION_RELATIVE_TO_BODY
	bP attributes
	bQ combatTracker
	bR activeEffects
	bS lastHandItemStacks
	bT lastArmorItemStacks
	aG swinging
	bU discardFriction
	aH swingingArm
	aI swingTime
	aJ removeArrowTime
	aK removeStingerTime
	aL hurtTime
	aM hurtDuration
	aN deathTime
	aO oAttackAnim
	aP attackAnim
	aQ attackStrengthTicker
	aR walkAnimation
	aS invulnerableDuration
	aT timeOffs
	aU rotA
	aV yBodyRot
	aW yBodyRotO
	aX yHeadRot
	aY yHeadRotO
	aZ lastHurtByPlayer
	ba lastHurtByPlayerTime
	bb dead
	bc noActionTime
	bd oRun
	be run
	bf animStep
	bg animStepO
	bh rotOffs
	bi deathScore
	bj lastHurt
	bk jumping
	bl xxa
	bm yya
	bn zza
	bo lerpSteps
	bp lerpX
	bq lerpY
	br lerpZ
	bs lerpYRot
	bt lerpXRot
	bu lyHeadRot
	bv lerpHeadSteps
	bV effectsDirty
	bW lastHurtByMob
	bX lastHurtByMobTimestamp
	bY lastHurtMob
	bZ lastHurtMobTimestamp
	ca speed
	cb noJumpDelay
	cc absorptionAmount
	bw useItem
	bx useItemRemaining
	by fallFlyTicks
	cd lastPos
	ce lastClimbablePos
	cf lastDamageSource
	cg lastDamageStamp
	bz autoSpinAttackTicks
	ch swimAmount
	ci swimAmountO
	bA brain
	cj skipDropExperience
	<init> (Lbfn;Lcmm;)V <init>
	dK ()Lbha; getBrain
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	ah ()V kill
	a (Lbfn;)Z canAttackType
	a_ ()V defineSynchedData
	dM ()Lbhf$a; createLivingAttributes
	a (DZLdcb;Lgu;)V checkFallDamage
	dN ()Z canBreatheUnderwater
	a (F)F getSwimAmount
	ao ()V baseTick
	dO ()Z canSpawnSoulSpeedParticle
	dP ()V spawnSoulSpeedParticle
	dQ ()Z onSoulSpeedBlock
	aH ()F getBlockSpeedFactor
	c (Ldcb;)Z shouldRemoveSoulSpeed
	dR ()V removeSoulSpeed
	dS ()V tryAddSoulSpeed
	dT ()V removeFrost
	dU ()V tryAddFrost
	c (Lgu;)V onChangedBlock
	h_ ()Z isBaby
	dV ()F getScale
	dW ()Z isAffectedByFluids
	dX ()V tickDeath
	dY ()Z shouldDropExperience
	dZ ()Z shouldDropLoot
	m (I)I decreaseAirSupply
	n (I)I increaseAirSupply
	ea ()I getExperienceReward
	eb ()Z isAlwaysExperienceDropper
	ec ()Lapf; getRandom
	ed ()Lbfz; getLastHurtByMob
	M_ ()Lbfz; getLastAttacker
	ee ()I getLastHurtByMobTimestamp
	c (Lbyo;)V setLastHurtByPlayer
	a (Lbfz;)V setLastHurtByMob
	ef ()Lbfz; getLastHurtMob
	eg ()I getLastHurtMobTimestamp
	x (Lbfj;)V setLastHurtMob
	eh ()I getNoActionTime
	o (I)V setNoActionTime
	ei ()Z shouldDiscardFriction
	p (Z)V setDiscardFriction
	a (Lbfo;)Z doesEmitEquipEvent
	a (Lbfo;Lcfz;Lcfz;)V onEquipItem
	a (Lbfj$c;)V remove
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	ej ()V tickEffects
	F ()V updateInvisibilityStatus
	q ()V updateGlowingStatus
	y (Lbfj;)D getVisibilityPercent
	c (Lbfz;)Z canAttack
	a (Lbfz;Lbqm;)Z canAttack
	ek ()Z canBeSeenAsEnemy
	el ()Z canBeSeenByAnyone
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	em ()V removeEffectParticles
	en ()Z removeAllEffects
	eo ()Ljava/util/Collection; getActiveEffects
	ep ()Ljava/util/Map; getActiveEffectsMap
	a (Lbey;)Z hasEffect
	b (Lbey;)Lbfa; getEffect
	b (Lbfa;)Z addEffect
	b (Lbfa;Lbfj;)Z addEffect
	c (Lbfa;)Z canBeAffected
	c (Lbfa;Lbfj;)V forceAddEffect
	eq ()Z isInvertedHealAndHarm
	c (Lbey;)Lbfa; removeEffectNoUpdate
	d (Lbey;)Z removeEffect
	a (Lbfa;Lbfj;)V onEffectAdded
	d (Lbfa;)V sendEffectToPassengers
	a (Lbfa;ZLbfj;)V onEffectUpdated
	a (Lbfa;)V onEffectRemoved
	s (F)V heal
	er ()F getHealth
	t (F)V setHealth
	es ()Z isDeadOrDying
	a (Lben;F)Z hurt
	d (Lbfz;)V blockUsingShield
	e (Lbfz;)V blockedByShield
	h (Lben;)Z checkTotemDeathProtection
	et ()Lben; getLastDamageSource
	e (Lben;)V playHurtSound
	f (Lben;)Z isDamageSourceBlocked
	i (Lcfz;)V breakItem
	a (Lben;)V die
	f (Lbfz;)V createWitherRose
	g (Lben;)V dropAllDeathLoot
	eu ()V dropEquipment
	ev ()V dropExperience
	a (Lben;IZ)V dropCustomDeathLoot
	ew ()Lacq; getLootTable
	ex ()J getLootTableSeed
	a (Lben;Z)V dropFromLootTable
	q (DDD)V knockback
	a (DD)V indicateDamage
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	d (I)Lamg; getFallDamageSound
	ey ()V skipDropExperience
	ez ()Z wasExperienceConsumed
	eA ()Leei; getMeleeAttackReferencePosition
	eB ()F getHurtDir
	eC ()Lbfz$a; getFallSounds
	c (Lcfz;)Lamg; getDrinkingSound
	d (Lcfz;)Lamg; getEatingSound
	eD ()Ljava/util/Optional; getLastClimbablePos
	i_ ()Z onClimbable
	c (Lgu;Ldcb;)Z trapdoorUsableAsLadder
	bs ()Z isAlive
	a (FFLben;)Z causeFallDamage
	d (FF)I calculateFallDamage
	eE ()V playBlockFallSound
	m (F)V animateHurt
	eF ()I getArmorValue
	b (Lben;F)V hurtArmor
	c (Lben;F)V hurtHelmet
	u (F)V hurtCurrentlyUsedShield
	d (Lben;F)F getDamageAfterArmorAbsorb
	e (Lben;F)F getDamageAfterMagicAbsorb
	f (Lben;F)V actuallyHurt
	eG ()Lbek; getCombatTracker
	eH ()Lbfz; getKillCredit
	eI ()F getMaxHealth
	eJ ()I getArrowCount
	p (I)V setArrowCount
	eK ()I getStingerCount
	q (I)V setStingerCount
	s ()I getCurrentSwingDuration
	a (Lbdw;)V swing
	a (Lbdw;Z)V swing
	c (Lben;)V handleDamageEvent
	b (B)V handleEntityEvent
	x ()V makePoofParticles
	y ()V swapHandItems
	ax ()V onBelowWorld
	eL ()V updateSwingTime
	a (Lbhb;)Lbhc; getAttribute
	a (Lhe;)D getAttributeValue
	b (Lbhb;)D getAttributeValue
	b (Lhe;)D getAttributeBaseValue
	c (Lbhb;)D getAttributeBaseValue
	eM ()Lbhd; getAttributes
	eN ()Lbge; getMobType
	eO ()Lcfz; getMainHandItem
	eP ()Lcfz; getOffhandItem
	b (Lcfu;)Z isHolding
	b (Ljava/util/function/Predicate;)Z isHolding
	b (Lbdw;)Lcfz; getItemInHand
	a (Lbdw;Lcfz;)V setItemInHand
	b (Lbfo;)Z hasItemInSlot
	bJ ()Ljava/lang/Iterable; getArmorSlots
	c (Lbfo;)Lcfz; getItemBySlot
	a (Lbfo;Lcfz;)V setItemSlot
	e (Lcfz;)V verifyEquippedItem
	eQ ()F getArmorCoverPercentage
	g (Z)V setSprinting
	eR ()F getSoundVolume
	eS ()F getVoicePitch
	eT ()Z isImmobile
	g (Lbfj;)V push
	a (Lbfj;)V dismountVehicle
	cz ()Z shouldShowName
	eU ()F getJumpPower
	eV ()F getJumpBoostPower
	eW ()V jumpFromGround
	eX ()V goDownInWater
	c (Lanl;)V jumpInLiquid
	eY ()F getWaterSlowDown
	a (Ldxe;)Z canStandOnFluid
	h (Leei;)V travel
	c (Lbyo;Leei;)V travelRidden
	a (Lbyo;Leei;)V tickRidden
	b (Lbyo;Leei;)Leei; getRiddenInput
	e (Lbyo;)F getRiddenSpeed
	q (Z)V calculateEntityAnimation
	v (F)V updateWalkAnimation
	a (Leei;F)Leei; handleRelativeFrictionAndCalculateMovement
	a (DZLeei;)Leei; getFluidFallingAdjustedMovement
	j (Leei;)Leei; handleOnClimbable
	z (F)F getFrictionInfluencedSpeed
	eZ ()F getFlyingSpeed
	fa ()F getSpeed
	w (F)V setSpeed
	z (Lbfj;)Z doHurtTarget
	l ()V tick
	z ()V detectEquipmentUpdates
	A ()Ljava/util/Map; collectEquipmentChanges
	a (Lcfz;Lcfz;)Z equipmentHasChanged
	a (Ljava/util/Map;)V handleHandSwap
	b (Ljava/util/Map;)V handleEquipmentChanges
	e (Lbfo;)Lcfz; getLastArmorItem
	b (Lbfo;Lcfz;)V setLastArmorItem
	f (Lbfo;)Lcfz; getLastHandItem
	c (Lbfo;Lcfz;)V setLastHandItem
	e (FF)F tickHeadTurn
	b_ ()V aiStep
	fb ()Z isSensitiveToWater
	C ()V updateFallFlying
	fc ()V serverAiStep
	fd ()V pushEntities
	a (Leed;Leed;)V checkAutoSpinAttack
	A (Lbfj;)V doPush
	g (Lbfz;)V doAutoAttackOnTouch
	fe ()Z isAutoSpinAttack
	Y ()V stopRiding
	bv ()V rideTick
	a (DDDFFIZ)V lerpTo
	a (FI)V lerpHeadTo
	r (Z)V setJumping
	a (Lbvh;)V onItemPickup
	a (Lbfj;I)V take
	B (Lbfj;)Z hasLineOfSight
	h (F)F getViewYRot
	x (F)F getAttackAnim
	bo ()Z isPickable
	bp ()Z isPushable
	cm ()F getYHeadRot
	n (F)V setYHeadRot
	o (F)V setYBodyRot
	a (Lha$a;Ll$a;)Leei; getRelativePortalPosition
	i (Leei;)Leei; resetForwardDirectionOfRelativePortalPosition
	ff ()F getAbsorptionAmount
	y (F)V setAbsorptionAmount
	Q_ ()V onEnterCombat
	F_ ()V onLeaveCombat
	fg ()V updateEffectVisibility
	fh ()Lbft; getMainArm
	fi ()Z isUsingItem
	fj ()Lbdw; getUsedItemHand
	D ()V updatingUsingItem
	a (Lcfz;)V updateUsingItem
	E ()Z shouldTriggerItemUseEffects
	G ()V updateSwimAmount
	c (IZ)V setLivingEntityFlag
	c (Lbdw;)V startUsingItem
	a (Laby;)V onSyncedDataUpdated
	a (Leb$a;Leei;)V lookAt
	b (Lcfz;I)V triggerItemUseEffects
	a (Lcfz;I)V spawnItemParticles
	Z_ ()V completeUsingItem
	fk ()Lcfz; getUseItem
	fl ()I getUseItemRemainingTicks
	fm ()I getTicksUsingItem
	fn ()V releaseUsingItem
	fo ()V stopUsingItem
	fp ()Z isBlocking
	fq ()Z isSuppressingSlidingDownLadder
	fr ()Z isFallFlying
	bX ()Z isVisuallySwimming
	fs ()I getFallFlyingTicks
	b (DDDZ)Z randomTeleport
	ft ()Z isAffectedByPotions
	fu ()Z attackable
	a (Lgu;Z)V setRecordPlayingNearby
	f (Lcfz;)Z canTakeItem
	a (Lbgl;)Lbfk; getDimensions
	fv ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	g (Lbgl;)Leed; getLocalBoundsForPose
	cq ()Z canChangeDimensions
	fw ()Ljava/util/Optional; getSleepingPos
	g (Lgu;)V setSleepingPos
	fx ()V clearSleepingPos
	fy ()Z isSleeping
	b (Lgu;)V startSleeping
	a (Lgu;)V setPosToBed
	I ()Z checkBedExists
	fz ()V stopSleeping
	fA ()Lha; getBedOrientation
	bt ()Z isInWall
	a (Lbgl;Lbfk;)F getEyeHeight
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	g (Lcfz;)Lcfz; getProjectile
	a (Lcmm;Lcfz;)Lcfz; eat
	a (Lcfz;Lcmm;Lbfz;)V addEatEffect
	g (Lbfo;)B entityEventForEquipmentBreak
	d (Lbfo;)V broadcastBreakEvent
	d (Lbdw;)V broadcastBreakEvent
	j_ ()Leed; getBoundingBoxForCulling
	h (Lcfz;)Lbfo; getEquipmentSlotForItem
	a (Lbfz;Lbfo;)Lbgs; createEquipmentSlotAccess
	r (I)Lbfo; getEquipmentSlot
	a_ (I)Lbgs; getSlot
	dw ()Z canFreeze
	ca ()Z isCurrentlyGlowing
	dz ()F getVisualRotationYInDegrees
	a (Lus;)V recreateFromPacket
	fB ()Z canDisableShield
	dC ()F maxUpStep
	d (Lbfo;Lcfz;)Z lambda$createEquipmentSlotAccess$10
	h (Lgu;)V lambda$stopSleeping$9
	i (Lgu;)Leei; lambda$stopSleeping$8
	j (Lgu;)Ljava/lang/Boolean; lambda$checkBedExists$7
	h (Lbfz;)V lambda$updateFallFlying$6
	a (Ljava/util/List;Lbfo;Lcfz;)V lambda$handleEquipmentChanges$5
	a (Lcfu;Lcfz;)Z lambda$isHolding$4
	e (Lbfa;)V lambda$tickEffects$3
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$2
	a (Lqr;Lgu;)V lambda$addAdditionalSaveData$1
	i (Lbfz;)V lambda$tryAddSoulSpeed$0
	<clinit> ()V <clinit>
bfz$1 net/minecraft/world/entity/LivingEntity$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
bfz$a net/minecraft/world/entity/LivingEntity$Fallsounds
	a small
	b big
	<init> (Lamg;Lamg;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lamg; small
	b ()Lamg; big
bga net/minecraft/world/entity/Marker
	b DATA_TAG
	c data
	<init> (Lbfn;Lcmm;)V <init>
	l ()V tick
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	S ()Luo; getAddEntityPacket
	o (Lbfj;)Z canAddPassenger
	bB ()Z couldAcceptPassenger
	m (Lbfj;)V addPassenger
	l_ ()Ldxj; getPistonPushReaction
	c_ ()Z isIgnoringBlockTriggers
bgb net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	c MOB_FLAG_NO_AI
	d MOB_FLAG_LEFTHANDED
	e MOB_FLAG_AGGRESSIVE
	f PICKUP_REACH
	bS ITEM_PICKUP_REACH
	g MAX_WEARING_ARMOR_CHANCE
	bB MAX_PICKUP_LOOT_CHANCE
	bC MAX_ENCHANTED_ARMOR_CHANCE
	bD MAX_ENCHANTED_WEAPON_CHANCE
	bE LEASH_TAG
	bF DEFAULT_EQUIPMENT_DROP_CHANCE
	bG PRESERVE_ITEM_DROP_CHANCE
	bH UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	bI ambientSoundTime
	bJ xpReward
	bK lookControl
	bL moveControl
	bM jumpControl
	bT bodyRotationControl
	bN navigation
	bO goalSelector
	bP targetSelector
	bU target
	bV sensing
	bW handItems
	bQ handDropChances
	bX armorItems
	bR armorDropChances
	bY canPickUpLoot
	bZ persistenceRequired
	ca pathfindingMalus
	cb lootTable
	cc lootTableSeed
	cd leashHolder
	ce delayedLeashHolderId
	cf leashInfoTag
	cg restrictCenter
	ch restrictRadius
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	y ()Lbhf$a; createMobAttributes
	b (Lcmm;)Lbpj; createNavigation
	z ()Z shouldPassengersInheritMalus
	a (Ldxp;)F getPathfindingMalus
	a (Ldxp;F)V setPathfindingMalus
	A ()V onPathfindingStart
	C ()V onPathfindingDone
	D ()Lblt; createBodyControl
	E ()Lblx; getLookControl
	G ()Lbly; getMoveControl
	I ()Lblw; getJumpControl
	J ()Lbpj; getNavigation
	cL ()Lbfz; getControllingPassenger
	K ()Lbqe; getSensing
	j ()Lbfz; getTarget
	h (Lbfz;)V setTarget
	a (Lbfn;)Z canAttackType
	a (Lcgp;)Z canFireProjectileWeapon
	L ()V ate
	a_ ()V defineSynchedData
	M ()I getAmbientSoundInterval
	N ()V playAmbientSound
	ao ()V baseTick
	e (Lben;)V playHurtSound
	q ()V resetAmbientSoundTime
	ea ()I getExperienceReward
	O ()V spawnAnim
	b (B)V handleEntityEvent
	l ()V tick
	P ()V updateControlFlags
	e (FF)F tickHeadTurn
	s ()Lamg; getAmbientSound
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lben;Z)V dropFromLootTable
	ew ()Lacq; getLootTable
	Q ()Lacq; getDefaultLootTable
	ex ()J getLootTableSeed
	z (F)V setZza
	A (F)V setYya
	B (F)V setXxa
	w (F)V setSpeed
	b_ ()V aiStep
	R ()Lhz; getPickupReach
	b (Lbvh;)V pickUpItem
	i (Lcfz;)Lcfz; equipItemIfPossible
	b (Lbfo;Lcfz;)V setItemSlotAndDropWhenKilled
	e (Lbfo;)V setGuaranteedDrop
	b (Lcfz;Lcfz;)Z canReplaceCurrentItem
	c (Lcfz;Lcfz;)Z canReplaceEqualItem
	j (Lcfz;)Z canHoldItem
	k (Lcfz;)Z wantsToPickUp
	h (D)Z removeWhenFarAway
	T ()Z requiresCustomPersistence
	U ()Z shouldDespawnInPeaceful
	du ()V checkDespawn
	fc ()V serverAiStep
	V ()V sendDebugPackets
	W ()V customServerAiStep
	X ()I getMaxHeadXRot
	fC ()I getMaxHeadYRot
	fD ()I getHeadRotSpeed
	a (Lbfj;FF)V lookAt
	a (FFF)F rotlerp
	a (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkMobSpawnRules
	a (Lcmn;Lbgd;)Z checkSpawnRules
	a (Lcmp;)Z checkSpawnObstruction
	fE ()I getMaxSpawnClusterSize
	d (I)Z isMaxGroupSizeReached
	cr ()I getMaxFallDistance
	bI ()Ljava/lang/Iterable; getHandSlots
	bJ ()Ljava/lang/Iterable; getArmorSlots
	c (Lbfo;)Lcfz; getItemBySlot
	a (Lbfo;Lcfz;)V setItemSlot
	a (Lben;IZ)V dropCustomDeathLoot
	f (Lbfo;)F getEquipmentDropChance
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	a (Lbfo;I)Lcfu; getEquipmentForSlot
	b (Lapf;Lbdv;)V populateDefaultEquipmentEnchantments
	a (Lapf;F)V enchantSpawnedWeapon
	a (Lapf;FLbfo;)V enchantSpawnedArmor
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	fF ()V setPersistenceRequired
	a (Lbfo;F)V setDropChance
	fG ()Z canPickUpLoot
	s (Z)V setCanPickUpLoot
	f (Lcfz;)Z canTakeItem
	fH ()Z isPersistenceRequired
	a (Lbyo;Lbdw;)Lbdx; interact
	c (Lbyo;Lbdw;)Lbdx; checkAndHandleImportantInteractions
	a (Lbyo;Lbgb;)V onOffspringSpawnedFromEgg
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	fI ()Z isWithinRestriction
	a (Lgu;)Z isWithinRestriction
	a (Lgu;I)V restrictTo
	fJ ()Lgu; getRestrictCenter
	fK ()F getRestrictRadius
	fL ()V clearRestriction
	fM ()Z hasRestriction
	a (Lbfn;Z)Lbgb; convertTo
	fN ()V tickLeash
	a (ZZ)V dropLeash
	a (Lbyo;)Z canBeLeashed
	fO ()Z isLeashed
	fP ()Lbfj; getLeashHolder
	b (Lbfj;Z)V setLeashedTo
	r (I)V setDelayedLeashHolderId
	a (Lbfj;Z)Z startRiding
	fV ()V restoreLeashFromSave
	cV ()Z isEffectiveAi
	t (Z)V setNoAi
	u (Z)V setLeftHanded
	v (Z)V setAggressive
	fQ ()Z isNoAi
	fR ()Z isLeftHanded
	fS ()Z isAggressive
	a (Z)V setBaby
	fh ()Lbft; getMainArm
	i (Lbfz;)D getMeleeAttackRangeSqr
	j (Lbfz;)D getPerceivedTargetDistanceSquareForMeleeAttack
	k (Lbfz;)Z isWithinMeleeAttackRange
	z (Lbfj;)Z doHurtTarget
	a (Lbyo;Lcfz;Lcfz;)V maybeDisableShield
	fT ()Z isSunBurnTick
	c (Lanl;)V jumpInLiquid
	fU ()V removeFreeWill
	c (Ljava/util/function/Predicate;)V removeAllGoals
	cp ()V removeAfterChangingDimensions
	dv ()Lcfz; getPickResult
	m (Lcfz;)V lambda$removeAfterChangingDimensions$4
	a (Lbmv;)Z lambda$removeFreeWill$3
	b (Lbyo;Lbgb;)V lambda$checkAndHandleImportantInteractions$2
	c (Ljava/lang/String;)Z lambda$canReplaceEqualItem$1
	d (Ljava/lang/String;)Z lambda$canReplaceEqualItem$0
	<clinit> ()V <clinit>
bgb$1 net/minecraft/world/entity/Mob$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
	<clinit> ()V <clinit>
bgc net/minecraft/world/entity/MobCategory
	a MONSTER
	b CREATURE
	c AMBIENT
	d AXOLOTLS
	e UNDERGROUND_WATER_CREATURE
	f WATER_CREATURE
	g WATER_AMBIENT
	h MISC
	i CODEC
	j max
	k isFriendly
	l isPersistent
	m name
	n noDespawnDistance
	o despawnDistance
	p $VALUES
	values ()[Lbgc; values
	valueOf (Ljava/lang/String;)Lbgc; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;IZZI)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()I getMaxInstancesPerChunk
	d ()Z isFriendly
	e ()Z isPersistent
	f ()I getDespawnDistance
	g ()I getNoDespawnDistance
	h ()[Lbgc; $values
	<clinit> ()V <clinit>
bgd net/minecraft/world/entity/MobSpawnType
	a NATURAL
	b CHUNK_GENERATION
	c SPAWNER
	d STRUCTURE
	e BREEDING
	f MOB_SUMMONED
	g JOCKEY
	h EVENT
	i CONVERSION
	j REINFORCEMENT
	k TRIGGERED
	l BUCKET
	m SPAWN_EGG
	n COMMAND
	o DISPENSER
	p PATROL
	q $VALUES
	values ()[Lbgd; values
	valueOf (Ljava/lang/String;)Lbgd; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbgd; $values
	<clinit> ()V <clinit>
bge net/minecraft/world/entity/MobType
	a UNDEFINED
	b UNDEAD
	c ARTHROPOD
	d ILLAGER
	e WATER
	<init> ()V <init>
	<clinit> ()V <clinit>
bgf net/minecraft/world/entity/MoverType
	a SELF
	b PLAYER
	c PISTON
	d SHULKER_BOX
	e SHULKER
	f $VALUES
	values ()[Lbgf; values
	valueOf (Ljava/lang/String;)Lbgf; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbgf; $values
	<clinit> ()V <clinit>
bgg net/minecraft/world/entity/NeutralMob
	a_ TAG_ANGER_TIME
	b_ TAG_ANGRY_AT
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	b ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	c ()V startPersistentAngerTimer
	c (Lqr;)V addPersistentAngerSaveData
	a (Lcmm;Lqr;)V readPersistentAngerSaveData
	a (Laif;Z)V updatePersistentAnger
	a_ (Lbfz;)Z isAngryAt
	a_ (Lcmm;)Z isAngryAtAllPlayers
	S_ ()Z isAngry
	a_ (Lbyo;)V playerDied
	T_ ()V forgetCurrentTargetAndRefreshUniversalAnger
	O_ ()V stopBeingAngry
	ed ()Lbfz; getLastHurtByMob
	a (Lbfz;)V setLastHurtByMob
	c (Lbyo;)V setLastHurtByPlayer
	h (Lbfz;)V setTarget
	c (Lbfz;)Z canAttack
	j ()Lbfz; getTarget
bgh net/minecraft/world/entity/OwnableEntity
	U_ ()Ljava/util/UUID; getOwnerUUID
	e ()Lcmd; level
	I_ ()Lbfz; getOwner
bgi net/minecraft/world/entity/PathfinderMob
	bS DEFAULT_WALK_TARGET_VALUE
	<init> (Lbfn;Lcmm;)V <init>
	h (Lgu;)F getWalkTargetValue
	a (Lgu;Lcmp;)F getWalkTargetValue
	a (Lcmn;Lbgd;)Z checkSpawnRules
	fV ()Z isPathFinding
	fN ()V tickLeash
	fW ()Z shouldStayCloseToLeashHolder
	fX ()D followLeashSpeed
	C (F)V onLeashDistance
bgj net/minecraft/world/entity/PlayerRideable
bgk net/minecraft/world/entity/PlayerRideableJumping
	b (I)V onPlayerJump
	a ()Z canJump
	c (I)V handleStartJump
	b ()V handleStopJump
	W_ ()I getJumpCooldown
bgl net/minecraft/world/entity/Pose
	a STANDING
	b FALL_FLYING
	c SLEEPING
	d SWIMMING
	e SPIN_ATTACK
	f CROUCHING
	g LONG_JUMPING
	h DYING
	i CROAKING
	j USING_TONGUE
	k SITTING
	l ROARING
	m SNIFFING
	n EMERGING
	o DIGGING
	p $VALUES
	values ()[Lbgl; values
	valueOf (Ljava/lang/String;)Lbgl; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbgl; $values
	<clinit> ()V <clinit>
bgm net/minecraft/world/entity/PowerableMob
	a ()Z isPowered
bgn net/minecraft/world/entity/RelativeMovement
	a X
	b Y
	c Z
	d Y_ROT
	e X_ROT
	f ALL
	g ROTATION
	h bit
	i $VALUES
	values ()[Lbgn; values
	valueOf (Ljava/lang/String;)Lbgn; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getMask
	b (I)Z isSet
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b ()[Lbgn; $values
	<clinit> ()V <clinit>
bgo net/minecraft/world/entity/ReputationEventHandler
	a (Lbqw;Lbfj;)V onReputationEventFrom
bgp net/minecraft/world/entity/RiderShieldingMount
	d ()D getRiderShieldingHeight
bgq net/minecraft/world/entity/Saddleable
	g ()Z isSaddleable
	a (Lami;)V equipSaddle
	R_ ()Lamg; getSaddleSoundEvent
	i ()Z isSaddled
bgr net/minecraft/world/entity/Shearable
	a (Lami;)V shear
	a ()Z readyForShearing
bgs net/minecraft/world/entity/SlotAccess
	b NULL
	a (Lbdq;ILjava/util/function/Predicate;)Lbgs; forContainer
	a (Lbdq;I)Lbgs; forContainer
	a (Lbfz;Lbfo;Ljava/util/function/Predicate;)Lbgs; forEquipmentSlot
	a (Lbfz;Lbfo;)Lbgs; forEquipmentSlot
	a ()Lcfz; get
	a (Lcfz;)Z set
	b (Lcfz;)Z lambda$forEquipmentSlot$1
	c (Lcfz;)Z lambda$forContainer$0
	<clinit> ()V <clinit>
bgs$1 net/minecraft/world/entity/SlotAccess$1
	<init> ()V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
bgs$2 net/minecraft/world/entity/SlotAccess$2
	a val$inventory
	c val$id
	d val$validator
	<init> (Lbdq;ILjava/util/function/Predicate;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
bgs$3 net/minecraft/world/entity/SlotAccess$3
	a val$entity
	c val$slot
	d val$validator
	<init> (Lbfz;Lbfo;Ljava/util/function/Predicate;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
bgt net/minecraft/world/entity/SpawnGroupData
bgu net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	<init> ()V <init>
	a (Lbfn;Lbgu$c;Ldhk$a;Lbgu$b;)V register
	a (Lbfn;)Lbgu$c; getPlacementType
	b (Lbfn;)Ldhk$a; getHeightmapType
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkSpawnRules
	<clinit> ()V <clinit>
bgu$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
	<init> (Ldhk$a;Lbgu$c;Lbgu$b;)V <init>
bgu$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	test (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z test
bgu$c net/minecraft/world/entity/SpawnPlacements$Type
	a ON_GROUND
	b IN_WATER
	c NO_RESTRICTIONS
	d IN_LAVA
	e $VALUES
	values ()[Lbgu$c; values
	valueOf (Ljava/lang/String;)Lbgu$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbgu$c; $values
	<clinit> ()V <clinit>
bgv net/minecraft/world/entity/TamableAnimal
	bT DATA_FLAGS_ID
	bU DATA_OWNERUUID_ID
	bW orderedToSit
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbyo;)Z canBeLeashed
	w (Z)V spawnTamingParticles
	b (B)V handleEntityEvent
	q ()Z isTame
	x (Z)V setTame
	r ()V reassessTameGoals
	w ()Z isInSittingPose
	y (Z)V setInSittingPose
	U_ ()Ljava/util/UUID; getOwnerUUID
	b (Ljava/util/UUID;)V setOwnerUUID
	f (Lbyo;)V tame
	c (Lbfz;)Z canAttack
	l (Lbfz;)Z isOwnedBy
	a (Lbfz;Lbfz;)Z wantsToAttack
	cd ()Lefi; getTeam
	p (Lbfj;)Z isAlliedTo
	a (Lben;)V die
	fY ()Z isOrderedToSit
	z (Z)V setOrderedToSit
	e ()Lcmd; level
	<clinit> ()V <clinit>
bgw net/minecraft/world/entity/Targeting
	j ()Lbfz; getTarget
bgx net/minecraft/world/entity/TraceableEntity
	v ()Lbfj; getOwner
bgy net/minecraft/world/entity/VariantHolder
	a (Ljava/lang/Object;)V setVariant
	c ()Ljava/lang/Object; getVariant
bgz net/minecraft/world/entity/WalkAnimationState
	a speedOld
	b speed
	c position
	<init> ()V <init>
	a (F)V setSpeed
	a (FF)V update
	a ()F speed
	b (F)F speed
	b ()F position
	c (F)F position
	c ()Z isMoving
bha net/minecraft/world/entity/ai/Brain
	a LOGGER
	b codec
	c SCHEDULE_UPDATE_DELAY
	d memories
	e sensors
	f availableBehaviorsByPriority
	g schedule
	h activityRequirements
	i activityMemoriesToEraseWhenStopped
	j coreActivities
	k activeActivities
	l defaultActivity
	m lastScheduleUpdate
	a (Ljava/util/Collection;Ljava/util/Collection;)Lbha$b; provider
	b (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V <init>
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; serializeStart
	j ()Ljava/util/stream/Stream; memories
	a (Lbpb;)Z hasMemoryValue
	a ()V clearMemories
	b (Lbpb;)V eraseMemory
	a (Lbpb;Ljava/lang/Object;)V setMemory
	a (Lbpb;Ljava/lang/Object;J)V setMemoryWithExpiry
	a (Lbpb;Ljava/util/Optional;)V setMemory
	b (Lbpb;Ljava/util/Optional;)V setMemoryInternal
	c (Lbpb;)Ljava/util/Optional; getMemory
	d (Lbpb;)Ljava/util/Optional; getMemoryInternal
	e (Lbpb;)J getTimeUntilExpiry
	b ()Ljava/util/Map; getMemories
	b (Lbpb;Ljava/lang/Object;)Z isMemoryValue
	a (Lbpb;Lbpc;)Z checkMemory
	c ()Lcab; getSchedule
	a (Lcab;)V setSchedule
	a (Ljava/util/Set;)V setCoreActivities
	d ()Ljava/util/Set; getActiveActivities
	e ()Ljava/util/List; getRunningBehaviors
	f ()V useDefaultActivity
	g ()Ljava/util/Optional; getActiveNonCoreActivity
	a (Lbzz;)V setActiveActivityIfPossible
	d (Lbzz;)V setActiveActivity
	e (Lbzz;)V eraseMemoriesForOtherActivitesThan
	a (JJ)V updateActivityFromSchedule
	a (Ljava/util/List;)V setActiveActivityToFirstValid
	b (Lbzz;)V setDefaultActivity
	a (Lbzz;ILcom/google/common/collect/ImmutableList;)V addActivity
	a (Lbzz;ILcom/google/common/collect/ImmutableList;Lbpb;)V addActivityAndRemoveMemoryWhenStopped
	a (Lbzz;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lbzz;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivityWithConditions
	a (Lbzz;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V addActivityAndRemoveMemoriesWhenStopped
	h ()V removeAllBehaviors
	c (Lbzz;)Z isActive
	i ()Lbha; copyWithoutBehaviors
	a (Laif;Lbfz;)V tick
	c (Laif;Lbfz;)V tickSensors
	k ()V forgetOutdatedMemories
	b (Laif;Lbfz;)V stopAll
	d (Laif;Lbfz;)V startEachNonRunningBehavior
	e (Laif;Lbfz;)V tickEachRunningBehavior
	f (Lbzz;)Z activityRequirementsAreMet
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; createPriorityPairs
	g (Lbzz;)Ljava/util/Set; lambda$addActivityAndRemoveMemoriesWhenStopped$4
	a (Ljava/lang/Integer;)Ljava/util/Map; lambda$addActivityAndRemoveMemoriesWhenStopped$3
	a (Ljava/lang/Object;Ljava/lang/Object;)Z lambda$isMemoryValue$2
	f (Lbpb;)V lambda$clearMemories$1
	a (Ljava/util/Map$Entry;)Lbha$a; lambda$memories$0
	<clinit> ()V <clinit>
bha$1 net/minecraft/world/entity/ai/Brain$1
	a val$memoryTypes
	b val$sensorTypes
	c val$codecReference
	<init> (Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/commons/lang3/mutable/MutableObject;)V <init>
	keys (Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream; keys
	decode (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; decode
	a (Lbpb;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; captureRead
	a (Lbha;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; encode
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lbha$a;)V lambda$encode$9
	a (Lbpb;Lbpa;)Lbha$a; lambda$captureRead$8
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; lambda$captureRead$7
	a (Lbpb;)Lcom/mojang/serialization/DataResult; lambda$captureRead$6
	b (Lbpb;)Ljava/lang/String; lambda$captureRead$5
	a (Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V lambda$decode$4
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lbpb;)Lcom/mojang/serialization/DataResult; lambda$decode$3
	a (Lcom/mojang/serialization/DynamicOps;Lacq;)Ljava/lang/Object; lambda$keys$2
	c (Lbpb;)Ljava/util/stream/Stream; lambda$keys$1
	a (Lbpb;Lcom/mojang/serialization/Codec;)Lacq; lambda$keys$0
bha$a net/minecraft/world/entity/ai/Brain$MemoryValue
	a type
	b value
	a (Lbpb;Ljava/util/Optional;)Lbha$a; createUnchecked
	<init> (Lbpb;Ljava/util/Optional;)V <init>
	a (Lbha;)V setMemoryInternal
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V serialize
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V lambda$serialize$1
	a (Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lbpa;)V lambda$serialize$0
bha$b net/minecraft/world/entity/ai/Brain$Provider
	a memoryTypes
	b sensorTypes
	c codec
	<init> (Ljava/util/Collection;Ljava/util/Collection;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	a ()Lbha; lambda$makeBrain$1
	b ()Lcom/mojang/serialization/Codec; lambda$makeBrain$0
bhb net/minecraft/world/entity/ai/attributes/Attribute
	a MAX_NAME_LENGTH
	b defaultValue
	c syncable
	d descriptionId
	<init> (Ljava/lang/String;D)V <init>
	a ()D getDefaultValue
	b ()Z isClientSyncable
	a (Z)Lbhb; setSyncable
	a (D)D sanitizeValue
	c ()Ljava/lang/String; getDescriptionId
bhc net/minecraft/world/entity/ai/attributes/AttributeInstance
	a attribute
	b modifiersByOperation
	c modifierById
	d permanentModifiers
	e baseValue
	f dirty
	g cachedValue
	h onDirty
	<init> (Lbhb;Ljava/util/function/Consumer;)V <init>
	a ()Lbhb; getAttribute
	b ()D getBaseValue
	a (D)V setBaseValue
	a (Lbhe$a;)Ljava/util/Set; getModifiers
	c ()Ljava/util/Set; getModifiers
	a (Ljava/util/UUID;)Lbhe; getModifier
	a (Lbhe;)Z hasModifier
	e (Lbhe;)V addModifier
	b (Lbhe;)V addTransientModifier
	c (Lbhe;)V addPermanentModifier
	d ()V setDirty
	d (Lbhe;)V removeModifier
	b (Ljava/util/UUID;)V removeModifier
	c (Ljava/util/UUID;)Z removePermanentModifier
	e ()V removeModifiers
	f ()D getValue
	h ()D calculateValue
	b (Lbhe$a;)Ljava/util/Collection; getModifiersOrEmpty
	a (Lbhc;)V replaceFrom
	g ()Lqr; save
	a (Lqr;)V load
	a (Lbhe$a;Ljava/util/Set;)V lambda$replaceFrom$1
	c (Lbhe$a;)Ljava/util/Set; lambda$getModifiers$0
bhd net/minecraft/world/entity/ai/attributes/AttributeMap
	a LOGGER
	b attributes
	c dirtyAttributes
	d supplier
	<init> (Lbhf;)V <init>
	a (Lbhc;)V onAttributeModified
	a ()Ljava/util/Set; getDirtyAttributes
	b ()Ljava/util/Collection; getSyncableAttributes
	a (Lbhb;)Lbhc; getInstance
	a (Lhe;)Lbhc; getInstance
	b (Lbhb;)Z hasAttribute
	b (Lhe;)Z hasAttribute
	a (Lbhb;Ljava/util/UUID;)Z hasModifier
	a (Lhe;Ljava/util/UUID;)Z hasModifier
	c (Lbhb;)D getValue
	d (Lbhb;)D getBaseValue
	b (Lbhb;Ljava/util/UUID;)D getModifierValue
	b (Lhe;Ljava/util/UUID;)D getModifierValue
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	b (Lcom/google/common/collect/Multimap;)V addTransientAttributeModifiers
	a (Lbhd;)V assignValues
	c ()Lqx; save
	a (Lqx;)V load
	a (Ljava/lang/String;)V lambda$load$6
	a (Lqr;Lbhb;)V lambda$load$5
	b (Lbhc;)V lambda$assignValues$4
	a (Lbhb;Lbhe;)V lambda$addTransientAttributeModifiers$3
	a (Lbhb;Ljava/util/Collection;)V lambda$removeAttributeModifiers$2
	e (Lbhb;)Lbhc; lambda$getInstance$1
	c (Lbhc;)Z lambda$getSyncableAttributes$0
	<clinit> ()V <clinit>
bhe net/minecraft/world/entity/ai/attributes/AttributeModifier
	a LOGGER
	b amount
	c operation
	d nameGetter
	e id
	<init> (Ljava/lang/String;DLbhe$a;)V <init>
	<init> (Ljava/util/UUID;Ljava/lang/String;DLbhe$a;)V <init>
	<init> (Ljava/util/UUID;Ljava/util/function/Supplier;DLbhe$a;)V <init>
	a ()Ljava/util/UUID; getId
	b ()Ljava/lang/String; getName
	c ()Lbhe$a; getOperation
	d ()D getAmount
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	e ()Lqr; save
	a (Lqr;)Lbhe; load
	a (Ljava/lang/String;)Ljava/lang/String; lambda$new$1
	b (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
	<clinit> ()V <clinit>
bhe$a net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	a ADDITION
	b MULTIPLY_BASE
	c MULTIPLY_TOTAL
	d OPERATIONS
	e value
	f $VALUES
	values ()[Lbhe$a; values
	valueOf (Ljava/lang/String;)Lbhe$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I toValue
	a (I)Lbhe$a; fromValue
	b ()[Lbhe$a; $values
	<clinit> ()V <clinit>
bhf net/minecraft/world/entity/ai/attributes/AttributeSupplier
	a instances
	<init> (Ljava/util/Map;)V <init>
	d (Lbhb;)Lbhc; getAttributeInstance
	a (Lbhb;)D getValue
	b (Lbhb;)D getBaseValue
	a (Lbhb;Ljava/util/UUID;)D getModifierValue
	a (Ljava/util/function/Consumer;Lbhb;)Lbhc; createInstance
	a ()Lbhf$a; builder
	c (Lbhb;)Z hasAttribute
	b (Lbhb;Ljava/util/UUID;)Z hasModifier
bhf$a net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	a builder
	b instanceFrozen
	<init> ()V <init>
	b (Lbhb;)Lbhc; create
	a (Lbhb;)Lbhf$a; add
	a (Lbhb;D)Lbhf$a; add
	a ()Lbhf; build
	a (Lbhb;Lbhc;)V lambda$create$0
bhg net/minecraft/world/entity/ai/attributes/Attributes
	a MAX_HEALTH
	b FOLLOW_RANGE
	c KNOCKBACK_RESISTANCE
	d MOVEMENT_SPEED
	e FLYING_SPEED
	f ATTACK_DAMAGE
	g ATTACK_KNOCKBACK
	h ATTACK_SPEED
	i ARMOR
	j ARMOR_TOUGHNESS
	k LUCK
	l SPAWN_REINFORCEMENTS_CHANCE
	m JUMP_STRENGTH
	<init> ()V <init>
	a (Ljava/lang/String;Lbhb;)Lbhb; register
	<clinit> ()V <clinit>
bhh net/minecraft/world/entity/ai/attributes/DefaultAttributes
	a LOGGER
	b SUPPLIERS
	<init> ()V <init>
	a (Lbfn;)Lbhf; getSupplier
	b (Lbfn;)Z hasSupplier
	a ()V validate
	a (Lacq;)V lambda$validate$2
	c (Lbfn;)Z lambda$validate$1
	d (Lbfn;)Z lambda$validate$0
	<clinit> ()V <clinit>
bhi net/minecraft/world/entity/ai/attributes/RangedAttribute
	b minValue
	c maxValue
	<init> (Ljava/lang/String;DDD)V <init>
	d ()D getMinValue
	e ()D getMaxValue
	a (D)D sanitizeValue
bhj net/minecraft/world/entity/ai/attributes/package-info
bhk net/minecraft/world/entity/ai/behavior/AcquirePoi
	a SCAN_RANGE
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lbpb;ZLjava/util/Optional;)Lbhs; create
	a (Ljava/util/function/Predicate;Lbpb;Lbpb;ZLjava/util/Optional;)Lbhs; create
	a (Lbgb;Ljava/util/Set;)Ldxt; findPathToPois
	a (Lbpb;Lbjb;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$10
	a (Lbjb;Lble;)Lblg; lambda$create$9
	a (Lbpb;ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$8
	a (ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lble;)Lblg; lambda$create$7
	a (ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Lble;Ljava/util/Optional;Laif;Lbgi;J)Z lambda$create$6
	a (Laif;JJ)Lbhk$a; lambda$create$5
	a (Lbqz;Ljava/util/function/Predicate;Lgu;Lble;Laif;Ljava/util/Optional;Lbgi;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Lhe;)V lambda$create$4
	a (Laif;Lbgi;Ljava/lang/Byte;)V lambda$create$3
	a (Lgu;Lhe;Lgu;)Z lambda$create$2
	a (Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;JLgu;)Z lambda$create$1
	a (JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z lambda$create$0
bhk$a net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	a MIN_INTERVAL_INCREASE
	b MAX_INTERVAL_INCREASE
	c MAX_RETRY_PATHFINDING_INTERVAL
	d random
	e previousAttemptTimestamp
	f nextScheduledAttemptTimestamp
	g currentDelay
	<init> (Lapf;J)V <init>
	a (J)V markAttempt
	b (J)Z isStillValid
	c (J)Z shouldRetry
	toString ()Ljava/lang/String; toString
bhl net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	c BREED_RANGE
	d MIN_DURATION
	e MAX_DURATION
	f partnerType
	g speedModifier
	h spawnChildAtTime
	<init> (Lbfn;F)V <init>
	a (Laif;Lbrl;)Z checkExtraStartConditions
	a (Laif;Lbrl;J)V start
	b (Laif;Lbrl;J)Z canStillUse
	c (Laif;Lbrl;J)V tick
	d (Laif;Lbrl;J)V stop
	a (Lbrl;)Lbrl; getBreedTarget
	b (Lbrl;)Z hasBreedTargetOfRightType
	c (Lbrl;)Ljava/util/Optional; findValidBreedPartner
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lbrl;Lbfz;)Z lambda$findValidBreedPartner$0
bhm net/minecraft/world/entity/ai/behavior/AnimalPanic
	c PANIC_MIN_DURATION
	d PANIC_MAX_DURATION
	e PANIC_DISTANCE_HORIZONTAL
	f PANIC_DISTANCE_VERTICAL
	g DEFAULT_SHOULD_PANIC_PREDICATE
	h speedMultiplier
	i shouldPanic
	<init> (F)V <init>
	<init> (FLjava/util/function/Predicate;)V <init>
	a (Laif;Lbgi;)Z checkExtraStartConditions
	a (Laif;Lbgi;J)Z canStillUse
	b (Laif;Lbgi;J)V start
	c (Laif;Lbgi;J)V stop
	d (Laif;Lbgi;J)V tick
	a (Lbgi;Laif;)Leei; getPanicPos
	a (Lcls;Lbfj;)Ljava/util/Optional; lookForWater
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lcls;Lgu;)Z lambda$lookForWater$3
	b (Lcls;Lgu;)Z lambda$lookForWater$2
	c (Lcls;Lgu;)Z lambda$lookForWater$1
	a (Lbgi;)Z lambda$static$0
	<clinit> ()V <clinit>
bhn net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lbld$b;Lble;Lble;)Lblg; lambda$create$5
	a (Lbld$b;Lble;Lble;Laif;Lbyb;J)Z lambda$create$4
	a (Lbyb;Laif;Lbye;)V lambda$create$3
	a (Lhe;)Ljava/util/Optional; lambda$create$2
	a (Lhe;Lbye;)Z lambda$create$1
	a (Lhd;Laif;)Ljava/util/Optional; lambda$create$0
bho net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	<init> ()V <init>
	a (Lbdi;F)Lbjb; create
	a (Lbdi;Ljava/util/function/Function;)Lbjb; create
	a (Lbdi;Ljava/util/function/Function;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;Lbdi;Ljava/util/function/Function;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;Lbdi;Ljava/util/function/Function;Lble;Lble;Laif;Lbfe;J)Z lambda$create$1
	a (FLbfz;)Ljava/lang/Float; lambda$create$0
bhp net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	<init> ()V <init>
	a (IF)Lbjb; create
	a (IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;IFLble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ILble;Lble;FLaif;Lbgb;J)Z lambda$create$0
bhq net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	<init> ()V <init>
	a (Lbpb;I)Lbhs; create
	a (Lbpb;ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (ILble;Lble;Lble;)Lblg; lambda$create$2
	a (Lble;ILble;Laif;Lbfz;J)Z lambda$create$1
	a (Lbpb;)Ljava/lang/String; lambda$create$0
bhr net/minecraft/world/entity/ai/behavior/Behavior
	a DEFAULT_DURATION
	b entryCondition
	c status
	d endTimestamp
	e minDuration
	f maxDuration
	<init> (Ljava/util/Map;)V <init>
	<init> (Ljava/util/Map;I)V <init>
	<init> (Ljava/util/Map;II)V <init>
	a ()Lbhr$a; getStatus
	e (Laif;Lbfz;J)Z tryStart
	d (Laif;Lbfz;J)V start
	f (Laif;Lbfz;J)V tickOrStop
	c (Laif;Lbfz;J)V tick
	g (Laif;Lbfz;J)V doStop
	b (Laif;Lbfz;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	a (J)Z timedOut
	a (Laif;Lbfz;)Z checkExtraStartConditions
	b ()Ljava/lang/String; debugString
	a (Lbfz;)Z hasRequiredMemories
bhr$a net/minecraft/world/entity/ai/behavior/Behavior$Status
	a STOPPED
	b RUNNING
	c $VALUES
	values ()[Lbhr$a; values
	valueOf (Ljava/lang/String;)Lbhr$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbhr$a; $values
	<clinit> ()V <clinit>
bhs net/minecraft/world/entity/ai/behavior/BehaviorControl
	a ()Lbhr$a; getStatus
	e (Laif;Lbfz;J)Z tryStart
	f (Laif;Lbfz;J)V tickOrStop
	g (Laif;Lbfz;J)V doStop
	b ()Ljava/lang/String; debugString
bht net/minecraft/world/entity/ai/behavior/BehaviorUtils
	<init> ()V <init>
	a (Lbfz;Lbfz;F)V lockGazeAndWalkToEachOther
	a (Lbha;Lbfz;)Z entityIsVisible
	a (Lbha;Lbpb;Lbfn;)Z targetIsValid
	a (Lbha;Lbpb;Ljava/util/function/Predicate;)Z targetIsValid
	c (Lbfz;Lbfz;)V lookAtEachOther
	a (Lbfz;Lbfz;)V lookAtEntity
	b (Lbfz;Lbfz;F)V setWalkAndLookTargetMemoriesToEachOther
	a (Lbfz;Lbfj;FI)V setWalkAndLookTargetMemories
	a (Lbfz;Lgu;FI)V setWalkAndLookTargetMemories
	a (Lbfz;Lbje;FI)V setWalkAndLookTargetMemories
	a (Lbfz;Lcfz;Leei;)V throwItem
	a (Lbfz;Lcfz;Leei;Leei;F)V throwItem
	a (Laif;Lhx;I)Lhx; findSectionClosestToVillage
	a (Lbgb;Lbfz;I)Z isWithinAttackRange
	a (Lbfz;Lbfz;D)Z isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	b (Lbfz;Lbfz;)Z canSee
	a (Lbfz;Ljava/util/Optional;Lbfz;)Lbfz; getNearestTarget
	a (Lbfz;Lbfz;Lbfz;)Lbfz; getTargetNearestMe
	a (Lbfz;Lbpb;)Ljava/util/Optional; getLivingEntityFromUUIDMemory
	a (Lbgi;II)Leei; getRandomSwimmablePos
	a (Lbfz;)Z isBreeding
	a (Lbfj;)Lbfz; lambda$getLivingEntityFromUUIDMemory$4
	a (Lbfz;Ljava/util/UUID;)Lbfj; lambda$getLivingEntityFromUUIDMemory$3
	a (Laif;ILhx;)Z lambda$findSectionClosestToVillage$2
	b (Lbha;Lbfz;)Z lambda$targetIsValid$1
	a (Lbfn;Lbfz;)Z lambda$targetIsValid$0
bhu net/minecraft/world/entity/ai/behavior/BlockPosTracker
	a blockPos
	b centerPosition
	<init> (Lgu;)V <init>
	<init> (Leei;)V <init>
	a ()Leei; currentPosition
	b ()Lgu; currentBlockPosition
	a (Lbfz;)Z isVisibleBy
	toString ()Ljava/lang/String; toString
bhv net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	c currentRaid
	<init> (II)V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V stop
	c (Laif;Lbyb;J)V tick
	a (Lcen;I)Lcfz; getFirework
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
bhw net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lbpb;Lbpb;Lbdi;)Lbhs; create
	a (Lbpb;Lbpb;Ljava/util/function/Predicate;Lbdi;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Ljava/util/function/Predicate;Lbld$b;Lbdi;Lble;Lble;)Lblg; lambda$create$1
	a (Ljava/util/function/Predicate;Lble;Lbld$b;Lble;Lbdi;Laif;Lbfz;J)Z lambda$create$0
bhx net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	c cooldownTicks
	<init> (Lbpb;)V <init>
	b (Lbfz;)Ljava/util/Optional; getCooldownTickMemory
	a (J)Z timedOut
	a (Laif;Lbfz;J)Z canStillUse
	c (Laif;Lbfz;J)V tick
	b (Laif;Lbfz;J)V stop
bhy net/minecraft/world/entity/ai/behavior/Croak
	c CROAK_TICKS
	d TIME_OUT_DURATION
	e croakCounter
	<init> ()V <init>
	a (Laif;Lbta;)Z checkExtraStartConditions
	a (Laif;Lbta;J)Z canStillUse
	b (Laif;Lbta;J)V start
	c (Laif;Lbta;J)V stop
	d (Laif;Lbta;J)V tick
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bhz net/minecraft/world/entity/ai/behavior/CrossbowAttack
	c TIMEOUT
	d attackDelay
	e crossbowState
	<init> ()V <init>
	a (Laif;Lbgb;)Z checkExtraStartConditions
	a (Laif;Lbgb;J)Z canStillUse
	b (Laif;Lbgb;J)V tick
	c (Laif;Lbgb;J)V stop
	a (Lbgb;Lbfz;)V crossbowAttack
	b (Lbgb;Lbfz;)V lookAtTarget
	b (Lbfz;)Lbfz; getAttackTarget
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
bhz$a net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	values ()[Lbhz$a; values
	valueOf (Ljava/lang/String;)Lbhz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbhz$a; $values
	<clinit> ()V <clinit>
bia net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	<init> ()V <init>
	a (ILjava/util/function/BiPredicate;)Lbhs; create
	a (Lbfz;Lbfj;I)Z isVehicleValid
	a (ILjava/util/function/BiPredicate;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILjava/util/function/BiPredicate;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ILjava/util/function/BiPredicate;Laif;Lbfz;J)Z lambda$create$0
bib net/minecraft/world/entity/ai/behavior/DoNothing
	a minDuration
	b maxDuration
	c status
	d endTimestamp
	<init> (II)V <init>
	a ()Lbhr$a; getStatus
	e (Laif;Lbfz;J)Z tryStart
	f (Laif;Lbfz;J)V tickOrStop
	g (Laif;Lbfz;J)V doStop
	b ()Ljava/lang/String; debugString
bic net/minecraft/world/entity/ai/behavior/EntityTracker
	a entity
	b trackEyeHeight
	<init> (Lbfj;Z)V <init>
	a ()Leei; currentPosition
	b ()Lgu; currentBlockPosition
	a (Lbfz;)Z isVisibleBy
	c ()Lbfj; getEntity
	toString ()Ljava/lang/String; toString
bid net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lbpb;)Lbhs; create
	a (Lbpb;Ljava/util/function/Predicate;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Ljava/util/function/Predicate;Lble;)Lblg; lambda$create$1
	a (Ljava/util/function/Predicate;Lble;Laif;Lbfz;J)Z lambda$create$0
bie net/minecraft/world/entity/ai/behavior/FollowTemptation
	c TEMPTATION_COOLDOWN
	d CLOSE_ENOUGH_DIST
	e speedModifier
	f closeEnoughDistance
	<init> (Ljava/util/function/Function;)V <init>
	<init> (Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	a (Lbgi;)F getSpeedModifier
	b (Lbgi;)Ljava/util/Optional; getTemptingPlayer
	a (J)Z timedOut
	a (Laif;Lbgi;J)Z canStillUse
	b (Laif;Lbgi;J)V start
	c (Laif;Lbgi;J)V stop
	d (Laif;Lbgi;J)V tick
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	c ()Lcom/google/common/collect/ImmutableMap; lambda$new$1
	b (Lbfz;)Ljava/lang/Double; lambda$new$0
bif net/minecraft/world/entity/ai/behavior/GateBehavior
	a entryCondition
	b exitErasedMemories
	c orderPolicy
	d runningPolicy
	e behaviors
	f status
	<init> (Ljava/util/Map;Ljava/util/Set;Lbif$a;Lbif$b;Ljava/util/List;)V <init>
	a ()Lbhr$a; getStatus
	a (Lbfz;)Z hasRequiredMemories
	e (Laif;Lbfz;J)Z tryStart
	f (Laif;Lbfz;J)V tickOrStop
	g (Laif;Lbfz;J)V doStop
	b ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
	a (Lbhs;)Z lambda$toString$6
	a (Laif;Lbfz;JLbhs;)V lambda$doStop$5
	b (Lbhs;)Z lambda$doStop$4
	c (Lbhs;)Z lambda$tickOrStop$3
	b (Laif;Lbfz;JLbhs;)V lambda$tickOrStop$2
	d (Lbhs;)Z lambda$tickOrStop$1
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$0
bif$a net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	a ORDERED
	b SHUFFLED
	c consumer
	d $VALUES
	values ()[Lbif$a; values
	valueOf (Ljava/lang/String;)Lbif$a; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Consumer;)V <init>
	a (Lbjz;)V apply
	b (Lbjz;)V lambda$static$0
	a ()[Lbif$a; $values
	<clinit> ()V <clinit>
bif$b net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	a RUN_ONE
	b TRY_ALL
	c $VALUES
	values ()[Lbif$b; values
	valueOf (Ljava/lang/String;)Lbif$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/util/stream/Stream;Laif;Lbfz;J)V apply
	a ()[Lbif$b; $values
	<clinit> ()V <clinit>
bif$b$1 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/util/stream/Stream;Laif;Lbfz;J)V apply
	a (Laif;Lbfz;JLbhs;)Z lambda$apply$1
	a (Lbhs;)Z lambda$apply$0
bif$b$2 net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/util/stream/Stream;Laif;Lbfz;J)V apply
	a (Laif;Lbfz;JLbhs;)V lambda$apply$1
	a (Lbhs;)Z lambda$apply$0
big net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	c THROW_GIFT_AT_DISTANCE
	d MIN_TIME_BETWEEN_GIFTS
	e MAX_TIME_BETWEEN_GIFTS
	f TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	g GIFTS
	h SPEED_MODIFIER
	i timeUntilNextGift
	j giftGivenDuringThisRun
	k timeSinceStart
	<init> (I)V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)V start
	b (Laif;Lbyb;J)Z canStillUse
	c (Laif;Lbyb;J)V tick
	d (Laif;Lbyb;J)V stop
	a (Lbyb;Lbfz;)V throwGift
	a (Lbyb;)Ljava/util/List; getItemToThrow
	b (Lbyb;)Z isHeroVisible
	c (Lbyb;)Ljava/util/Optional; getNearestTargetableHero
	a (Lbyo;)Z isHero
	a (Lbyb;Lbyo;)Z isWithinThrowingDistance
	a (Laif;)I calculateTimeUntilNextGift
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bih net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	c CLOSE_ENOUGH_DISTANCE_TO_TARGET
	d ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	e targetPositionGetter
	f speedModifier
	<init> (Ljava/util/function/Function;FI)V <init>
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	d (Laif;Lbfz;J)V start
	c (Laif;Lbfz;J)V tick
	a (Lbje;Lcfz;Laig;)V triggerDropItemOnBlock
	b (Lbfz;)Z canThrowItemToTarget
	a (Lbje;)Leei; getThrowPosition
	a (Lbfz;Lcfz;Leei;)V throwItem
	b (Lbje;Lcfz;Laig;)V lambda$tick$1
	a (Lbfz;Lbje;)V lambda$start$0
bii net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	<init> ()V <init>
	a (FI)Lbhs; create
	a (FILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (FILble;)Lblg; lambda$create$2
	a (Lble;FILaif;Lbyb;J)Z lambda$create$1
	a (Lbqz;Lgu;)D lambda$create$0
bij net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	d TICKS_UNTIL_TIMEOUT
	c speedModifier
	<init> (F)V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V tick
	c (Laif;Lbyb;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	a (Laif;Lhd;)V lambda$stop$2
	a (Lhe;)Z lambda$stop$1
	a (Lbzz;)Ljava/lang/Boolean; lambda$checkExtraStartConditions$0
bik net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	<init> ()V <init>
	a (Lbgb;Lgu;)Lgu; getNearbyPos
	a (Lapf;)I getRandomOffset
	a (Lbpb;IF)Lbjb; create
	a (Lbpb;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;IFLble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;IFLaif;Lbgb;J)Z lambda$create$0
bil net/minecraft/world/entity/ai/behavior/GoToWantedItem
	<init> ()V <init>
	a (FZI)Lbhs; create
	a (Ljava/util/function/Predicate;FZI)Lbhs; create
	a (ZLjava/util/function/Predicate;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;Ljava/util/function/Predicate;IFLble;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;Lble;Ljava/util/function/Predicate;IFLble;Lble;Laif;Lbfz;J)Z lambda$create$1
	a (Lbfz;)Z lambda$create$0
bim net/minecraft/world/entity/ai/behavior/HarvestFarmland
	d HARVEST_DURATION
	c SPEED_MODIFIER
	e aboveFarmlandPos
	f nextOkStartTime
	g timeWorkedSoFar
	h validFarmlandAroundVillager
	<init> ()V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;)Lgu; getValidFarmland
	a (Lgu;Laif;)Z validPos
	a (Laif;Lbyb;J)V start
	b (Laif;Lbyb;J)V stop
	c (Laif;Lbyb;J)V tick
	d (Laif;Lbyb;J)Z canStillUse
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bin net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	<init> ()V <init>
	a (F)Lbhs; create
	a (FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (FLble;)Lblg; lambda$create$5
	a (Lble;FLaif;Lbgi;J)Z lambda$create$4
	a (Lble;FLgu;)V lambda$create$3
	a (Laif;Lbgi;Lgu;)Z lambda$create$2
	b (Laif;Lbgi;Lgu;)Z lambda$create$1
	a (Laif;Lgu;)Z lambda$create$0
bio net/minecraft/world/entity/ai/behavior/InteractWith
	<init> ()V <init>
	a (Lbfn;ILbpb;FI)Lbhs; of
	a (Lbfn;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lbpb;FI)Lbhs; of
	a (Lbpb;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$of$7
	a (Lbld$b;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILble;Lble;Lble;Lble;)Lblg; lambda$of$6
	a (Lbld$b;Lble;Ljava/util/function/Predicate;Ljava/util/function/Predicate;ILble;Lble;Lble;FILaif;Lbfz;J)Z lambda$of$5
	a (Lble;Lble;Lble;FILbfz;)V lambda$of$4
	a (Lbfz;ILjava/util/function/Predicate;Lbfz;)Z lambda$of$3
	a (Lbfn;Ljava/util/function/Predicate;Lbfz;)Z lambda$of$2
	a (Lbfz;)Z lambda$of$1
	b (Lbfz;)Z lambda$of$0
bip net/minecraft/world/entity/ai/behavior/InteractWithDoor
	a COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	b SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	c MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	<init> ()V <init>
	a ()Lbhs; create
	a (Laif;Lbfz;Ldxr;Ldxr;Ljava/util/Set;Ljava/util/Optional;)V closeDoorsThatIHaveOpenedOrPassedThrough
	a (Lbfz;Lgu;Ljava/util/Optional;)Z areOtherMobsComingThroughDoor
	a (Lbha;Lgu;)Z isMobComingThroughDoor
	a (Laif;Lbfz;Lhd;)Z isDoorTooFarAway
	a (Lble;Ljava/util/Optional;Laif;Lgu;)Ljava/util/Optional; rememberDoorToClose
	a (Lhd;Lble;)Ljava/util/Set; lambda$rememberDoorToClose$11
	a (Lhd;Ljava/util/Set;)Ljava/util/Set; lambda$rememberDoorToClose$10
	a (Lgu;Lbfz;)Z lambda$areOtherMobsComingThroughDoor$9
	b (Lgu;Lbfz;)Z lambda$areOtherMobsComingThroughDoor$8
	a (Lbfz;Lbfz;)Z lambda$areOtherMobsComingThroughDoor$7
	a (Ldca$a;)Z lambda$closeDoorsThatIHaveOpenedOrPassedThrough$6
	a (Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$5
	a (Lbld$b;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lble;Lble;Lble;)Lblg; lambda$create$4
	a (Lbld$b;Lble;Lble;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lble;Laif;Lbfz;J)Z lambda$create$3
	a (Laif;Lbfz;Ldxr;Ldxr;Lbld$b;Lble;Ljava/util/Set;)V lambda$create$2
	b (Ldca$a;)Z lambda$create$1
	c (Ldca$a;)Z lambda$create$0
biq net/minecraft/world/entity/ai/behavior/JumpOnBed
	c MAX_TIME_TO_REACH_BED
	d MIN_JUMPS
	e MAX_JUMPS
	f COOLDOWN_BETWEEN_JUMPS
	g speedModifier
	h targetBed
	i remainingTimeToReachBed
	j remainingJumps
	k remainingCooldownUntilNextJump
	<init> (F)V <init>
	a (Laif;Lbgb;)Z checkExtraStartConditions
	a (Laif;Lbgb;J)V start
	b (Laif;Lbgb;J)V stop
	c (Laif;Lbgb;J)Z canStillUse
	a (J)Z timedOut
	d (Laif;Lbgb;J)V tick
	a (Lbgb;Lgu;)V startWalkingTowardsBed
	b (Laif;Lbgb;)Z nearBed
	c (Laif;Lbgb;)Z onOrOverBed
	d (Laif;Lbgb;)Z onBedSurface
	a (Laif;Lgu;)Z isBed
	a (Lbgb;)Ljava/util/Optional; getNearestBed
	e (Laif;Lbgb;)Z tiredOfWalking
	f (Laif;Lbgb;)Z tiredOfJumping
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Laif;Lbgb;Lgu;)V lambda$start$0
bir net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	<init> ()V <init>
	a (IFI)Lbjb; create
	a (IIFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$10
	a (IILbld$b;FLble;Lble;Lble;Lble;Lble;Lble;Lble;)Lblg; lambda$create$9
	a (IILbld$b;Lble;Lble;Lble;Lble;Lble;Lble;Lble;FLaif;Lbfz;J)Z lambda$create$8
	a (Lble;Lble;Lble;Lble;Lble;Laif;Lbfz;ILble;FLgu;)V lambda$create$7
	a (Lbld$b;Lble;)Ljava/util/Optional; lambda$create$6
	a (Laif;Lbfz;I)Ljava/util/Optional; lambda$create$5
	a (Lgu;)Z lambda$create$4
	a (Lhe;)Z lambda$create$3
	a (Lbfz;ILgu;)Z lambda$create$2
	b (Lgu;)Z lambda$create$1
	b (Lhe;)Z lambda$create$0
bis net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	c TIME_OUT_DURATION
	d timeBetweenLongJumps
	e landingSound
	<init> (Lbdi;Lamg;)V <init>
	a (Laif;Lbgb;J)Z canStillUse
	b (Laif;Lbgb;J)V start
	c (Laif;Lbgb;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bit net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m preferredBlockTag
	n preferredBlocksChance
	o notPrefferedJumpCandidates
	p currentlyWantingPreferredOnes
	<init> (Lbdi;IIFLjava/util/function/Function;Lanl;FLjava/util/function/BiPredicate;)V <init>
	a (Laif;Lbgb;J)V start
	a (Laif;)Ljava/util/Optional; getJumpCandidate
	d (Laif;Lbfz;J)V start
biu net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	c FIND_JUMP_TRIES
	m PREPARE_JUMP_DURATION
	d MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	n TIME_OUT_DURATION
	o ALLOWED_ANGLES
	p timeBetweenLongJumps
	e maxLongJumpHeight
	f maxLongJumpWidth
	g maxJumpVelocity
	h jumpCandidates
	i initialPosition
	j chosenJump
	k findJumpTries
	l prepareJumpStart
	q getJumpSound
	r acceptableLandingSpot
	<init> (Lbdi;IIFLjava/util/function/Function;)V <init>
	a (Lbgb;Lgu;)Z defaultAcceptableLandingSpot
	<init> (Lbdi;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V <init>
	a (Laif;Lbgb;)Z checkExtraStartConditions
	b (Laif;Lbgb;J)Z canStillUse
	a (Laif;Lbgb;J)V start
	c (Laif;Lbgb;J)V tick
	d (Laif;Lbgb;J)V pickCandidate
	a (Laif;)Ljava/util/Optional; getJumpCandidate
	a (Laif;Lbgb;Lgu;)Z isAcceptableLandingPosition
	a (Lbgb;Leei;)Leei; calculateOptimalJumpVector
	a (Lbgb;Leei;I)Leei; calculateJumpVectorForAngle
	a (Lbgb;Lbfk;Leei;Leei;)Z isClearTransition
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lgu;Lgu;)Lbiu$a; lambda$start$1
	b (Lgu;Lgu;)Z lambda$start$0
	<clinit> ()V <clinit>
biu$a net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	a jumpTarget
	<init> (Lgu;I)V <init>
	b ()Lgu; getJumpTarget
biv net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	c speedModifier
	<init> (F)V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V start
	c (Laif;Lbyb;J)V stop
	d (Laif;Lbyb;J)V tick
	a (J)Z timedOut
	a (Lbyb;)V followPlayer
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
biw net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	<init> (II)V <init>
	a (Laif;Lbgb;J)Z canStillUse
	b (Laif;Lbgb;J)V stop
	c (Laif;Lbgb;J)V tick
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	a (Lbgb;Lbje;)V lambda$tick$1
	b (Lbgb;Lbje;)Z lambda$canStillUse$0
bix net/minecraft/world/entity/ai/behavior/MeleeAttack
	<init> ()V <init>
	a (I)Lbjb; create
	a (Lbgb;)Z isHoldingUsableProjectileWeapon
	a (Lbgb;Lcfz;)Z lambda$isHoldingUsableProjectileWeapon$3
	a (ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;Lble;Lble;ILaif;Lbgb;J)Z lambda$create$0
biy net/minecraft/world/entity/ai/behavior/Mount
	a CLOSE_ENOUGH_TO_START_RIDING_DIST
	<init> ()V <init>
	a (F)Lbhs; create
	a (FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;FLble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;Lble;FLaif;Lbfz;J)Z lambda$create$0
biz net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	<init> ()V <init>
	a (F)Lbjb; create
	a (Laif;Lbfz;)Leei; getOutdoorPosition
	a (Laif;Lbfz;Lgu;)Z hasNoBlocksAbove
	a (FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (FLble;)Lblg; lambda$create$2
	a (Lble;FLaif;Lbfz;J)Z lambda$create$1
	a (Lble;FLeei;)V lambda$create$0
bja net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	c MAX_COOLDOWN_BEFORE_RETRYING
	d remainingCooldown
	e path
	f lastTargetPos
	g speedModifier
	<init> ()V <init>
	<init> (II)V <init>
	a (Laif;Lbgb;)Z checkExtraStartConditions
	a (Laif;Lbgb;J)Z canStillUse
	b (Laif;Lbgb;J)V stop
	c (Laif;Lbgb;J)V start
	d (Laif;Lbgb;J)V tick
	a (Lbgb;Lbpe;J)Z tryComputePath
	a (Lbgb;Lbpe;)Z reachedTarget
	a (Lbpe;)Z isWalkTargetSpectator
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bjb net/minecraft/world/entity/ai/behavior/OneShot
	a status
	<init> ()V <init>
	a ()Lbhr$a; getStatus
	e (Laif;Lbfz;J)Z tryStart
	f (Laif;Lbfz;J)V tickOrStop
	g (Laif;Lbfz;J)V doStop
	b ()Ljava/lang/String; debugString
bjc net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a MAX_FLEE_XZ_DIST
	b MAX_FLEE_Y_DIST
	c FLEE_SPEED_MODIFIER
	d CHASE_SPEED_MODIFIER
	e MAX_CHASERS_PER_TARGET
	f AVERAGE_WAIT_TIME_BETWEEN_RUNS
	<init> ()V <init>
	a ()Lbhs; create
	a (Lble;Lble;Lble;Lbfz;)V chaseKid
	a (Ljava/util/List;)Ljava/util/Optional; findSomeoneBeingChased
	b (Ljava/util/List;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	a (Lbfz;)Lbfz; whoAreYouChasing
	b (Lbfz;)Z isChasingSomeone
	a (Lbfz;Lbfz;)Z isFriendChasingMe
	b (Lbfz;Lbfz;)Z lambda$isFriendChasingMe$8
	a (Ljava/util/Map;Lbfz;)V lambda$checkHowManyChasersEachFriendHas$7
	a (Lbfz;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$checkHowManyChasersEachFriendHas$6
	a (Ljava/util/Map$Entry;)Z lambda$findSomeoneBeingChased$5
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$4
	a (Lbld$b;Lble;Lble;Lble;Lble;)Lblg; lambda$create$3
	a (Lbld$b;Lble;Lble;Lble;Lble;Laif;Lbgi;J)Z lambda$create$2
	b (Lble;Lble;Lble;Lbfz;)V lambda$create$1
	a (Lbgi;Lbfz;)Z lambda$create$0
bjd net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbyb;Lbyb;)Lbyb; selectWinner
	a (Lhd;Lhe;Lbyb;)Z competesForSameJobsite
	a (Lhe;Lbye;)Z hasMatchingProfession
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lbld$b;Lble;Lble;)Lblg; lambda$create$5
	a (Lbld$b;Lble;Lble;Laif;Lbyb;J)Z lambda$create$4
	a (Lbld$b;Lble;Lbyb;Lhd;Lhe;)V lambda$create$3
	b (Lhd;Lhe;Lbyb;)Z lambda$create$2
	a (Lbfz;)Lbyb; lambda$create$1
	a (Lbyb;Lbfz;)Z lambda$create$0
bje net/minecraft/world/entity/ai/behavior/PositionTracker
	a ()Leei; currentPosition
	b ()Lgu; currentBlockPosition
	a (Lbfz;)Z isVisibleBy
bjf net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	c TIME_OUT_DURATION
	d getCooldownOnFail
	e minRamDistance
	f maxRamDistance
	g walkSpeed
	h ramTargeting
	i ramPrepareTime
	j getPrepareRamSound
	k reachedRamPositionTimestamp
	l ramCandidate
	<init> (Ljava/util/function/ToIntFunction;IIFLbqm;ILjava/util/function/Function;)V <init>
	a (Laif;Lbgi;J)V start
	b (Laif;Lbgi;J)V stop
	c (Laif;Lbgi;J)Z canStillUse
	d (Laif;Lbgi;J)V tick
	a (Lgu;Lgu;)Leei; getEdgeOfBlock
	a (Lbgi;Lbfz;)Ljava/util/Optional; calculateRammingStartPosition
	a (Lbgi;Lgu;)Z isWalkableBlock
	b (Lbgi;Lbfz;)V chooseRamPosition
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lbfz;Lgu;)Lbjf$a; lambda$chooseRamPosition$4
	a (Lbpj;Lgu;)Z lambda$calculateRammingStartPosition$3
	c (Lbgi;Lbfz;)V lambda$start$2
	a (Lbgi;Lbpd;)Ljava/util/Optional; lambda$start$1
	d (Lbgi;Lbfz;)Z lambda$start$0
bjf$a net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	a startPosition
	b targetPosition
	c target
	<init> (Lgu;Lgu;Lbfz;)V <init>
	a ()Lgu; getStartPosition
	b ()Lgu; getTargetPosition
	c ()Lbfz; getTarget
bjg net/minecraft/world/entity/ai/behavior/RamTarget
	c TIME_OUT_DURATION
	d RAM_SPEED_FORCE_FACTOR
	e getTimeBetweenRams
	f ramTargeting
	g speed
	h getKnockbackForce
	i ramDirection
	j getImpactSound
	k getHornBreakSound
	<init> (Ljava/util/function/Function;Lbqm;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	a (Laif;Lbtg;)Z checkExtraStartConditions
	a (Laif;Lbtg;J)Z canStillUse
	b (Laif;Lbtg;J)V start
	c (Laif;Lbtg;J)V tick
	c (Laif;Lbtg;)Z hasRammedHornBreakingBlock
	b (Laif;Lbtg;)V finishRam
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bjh net/minecraft/world/entity/ai/behavior/RandomLookAround
	c interval
	d maxYaw
	e minPitch
	f pitchRange
	<init> (Lbdc;FFF)V <init>
	a (Laif;Lbgb;J)V start
	d (Laif;Lbfz;J)V start
bji net/minecraft/world/entity/ai/behavior/RandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	c SWIM_XY_DISTANCE_TIERS
	<init> ()V <init>
	a (F)Lbjb; stroll
	a (FZ)Lbjb; stroll
	a (FII)Lbhs; stroll
	b (F)Lbhs; fly
	c (F)Lbhs; swim
	a (FLjava/util/function/Function;Ljava/util/function/Predicate;)Lbjb; strollFlyOrSwim
	a (Lbgi;)Leei; getTargetSwimPos
	a (Lbgi;II)Leei; getTargetFlyPos
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$strollFlyOrSwim$10
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;FLble;)Lblg; lambda$strollFlyOrSwim$9
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;Lble;FLaif;Lbgi;J)Z lambda$strollFlyOrSwim$8
	a (FLeei;)Lbpe; lambda$strollFlyOrSwim$7
	b (Lbgi;)Z lambda$fly$6
	c (Lbgi;)Leei; lambda$fly$5
	d (Lbgi;)Z lambda$stroll$4
	a (IILbgi;)Leei; lambda$stroll$3
	e (Lbgi;)Z lambda$stroll$2
	f (Lbgi;)Z lambda$stroll$1
	g (Lbgi;)Leei; lambda$stroll$0
	<clinit> ()V <clinit>
bjj net/minecraft/world/entity/ai/behavior/ReactToBell
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lble;)Lblg; lambda$create$1
	a (Laif;Lbfz;J)Z lambda$create$0
bjk net/minecraft/world/entity/ai/behavior/ResetProfession
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lble;)Lblg; lambda$create$1
	a (Laif;Lbyb;J)Z lambda$create$0
bjl net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$1
	a (Laif;Lbfz;J)Z lambda$create$0
bjm net/minecraft/world/entity/ai/behavior/RingBell
	b BELL_RING_CHANCE
	a RING_BELL_FROM_DISTANCE
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Laif;Lbfz;J)Z lambda$create$0
bjn net/minecraft/world/entity/ai/behavior/RunOne
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/Map;Ljava/util/List;)V <init>
bjo net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	a CACHE_TIMEOUT
	b BATCH_SIZE
	c RATE
	d OK_DISTANCE_SQR
	<init> ()V <init>
	a (F)Lbhs; create
	a (Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLble;Lble;)Lblg; lambda$create$5
	a (Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lble;FLaif;Lbgi;J)Z lambda$create$4
	a (Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$create$3
	a (Lhe;)Z lambda$create$2
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableLong;Lgu;)Z lambda$create$1
	b (Lhe;)Z lambda$create$0
bjp net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	<init> ()V <init>
	a (Lbgc;F)Lbhs; create
	a (Lbfn;F)Lbjb; create
	a (F)Lbjb; create
	a (Ljava/util/function/Predicate;F)Lbjb; create
	a (Ljava/util/function/Predicate;FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lbld$b;Ljava/util/function/Predicate;FLble;Lble;)Lblg; lambda$create$5
	a (Lbld$b;Lble;Ljava/util/function/Predicate;FLble;Laif;Lbfz;J)Z lambda$create$4
	a (Lbfz;FLbfz;)Z lambda$create$3
	a (Lbfz;)Z lambda$create$2
	a (Lbfn;Lbfz;)Z lambda$create$1
	a (Lbgc;Lbfz;)Z lambda$create$0
bjq net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	<init> ()V <init>
	a (FLbdi;)Lbhs; create
	a (Lbfn;FLbdi;)Lbhs; create
	a (FLbdi;Ljava/util/function/Predicate;)Lbhs; create
	a (Ljava/util/function/Predicate;FLbjq$a;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$5
	a (Lbld$b;Ljava/util/function/Predicate;FLbjq$a;Lble;Lble;)Lblg; lambda$create$4
	a (Lbld$b;Lble;Ljava/util/function/Predicate;FLbjq$a;Lble;Laif;Lbfz;J)Z lambda$create$3
	a (Lbfz;FLbfz;)Z lambda$create$2
	a (Lbfn;Lbfz;)Z lambda$create$1
	a (Lbfz;)Z lambda$create$0
bjq$a net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	a interval
	b ticksUntilNextStart
	<init> (Lbdi;)V <init>
	a (Lapf;)Z tickDownAndCheck
bjr net/minecraft/world/entity/ai/behavior/SetHiddenState
	a HIDE_TIMEOUT
	<init> ()V <init>
	a (II)Lbhs; create
	a (Lorg/apache/commons/lang3/mutable/MutableInt;IILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Lorg/apache/commons/lang3/mutable/MutableInt;IILble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lorg/apache/commons/lang3/mutable/MutableInt;ILble;ILaif;Lbfz;J)Z lambda$create$0
bjs net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	<init> ()V <init>
	a (Lbfn;I)Lbhs; create
	a (ILbfn;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;ILbfn;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;ILbfn;Lble;Lble;Laif;Lbfz;J)Z lambda$create$1
	a (Lbfz;ILbfn;Lbfz;)Z lambda$create$0
bjt net/minecraft/world/entity/ai/behavior/SetRaidStatus
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$1
	a (Laif;Lbfz;J)Z lambda$create$0
bju net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	<init> ()V <init>
	a (Lbpb;FIZ)Lbhs; pos
	b (Lbpb;FIZ)Lbjb; entity
	a (Lbpb;FIZLjava/util/function/Function;)Lbjb; create
	a (Lbpb;ZLjava/util/function/Function;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ZLjava/util/function/Function;IFLble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ZLjava/util/function/Function;Lble;IFLaif;Lbgi;J)Z lambda$create$0
bjv net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	a PROJECTILE_ATTACK_RANGE_BUFFER
	<init> ()V <init>
	a (F)Lbhs; create
	a (Ljava/util/function/Function;)Lbhs; create
	a (Ljava/util/function/Function;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;Ljava/util/function/Function;Lble;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;Lble;Lble;Lble;Ljava/util/function/Function;Laif;Lbgb;J)Z lambda$create$1
	a (FLbfz;)Ljava/lang/Float; lambda$create$0
bjw net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	<init> ()V <init>
	a (Lbpb;FIII)Lbjb; create
	a (Lbpb;IIFILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILbpb;IFILble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;ILbpb;ILble;FILaif;Lbyb;J)Z lambda$create$0
bjx net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	<init> ()V <init>
	a (FI)Lbjb; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lbjb; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$4
	a (Ljava/util/function/Predicate;Lbld$b;Ljava/util/function/Function;ILble;Lble;)Lblg; lambda$create$3
	a (Ljava/util/function/Predicate;Lble;Lbld$b;Lble;Ljava/util/function/Function;ILaif;Lbfz;J)Z lambda$create$2
	a (FLbfz;)Ljava/lang/Float; lambda$create$1
	a (Lbfz;)Z lambda$create$0
bjy net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	c MAX_LOOK_TIME
	d STARTING_LOOK_TIME
	e playerItemStack
	f displayItems
	g cycleCounter
	h displayIndex
	i lookTime
	<init> (II)V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V start
	c (Laif;Lbyb;J)V tick
	d (Laif;Lbyb;J)V stop
	a (Lbfz;Lbyb;)V findItemsToDisplay
	a (Lbyb;)V displayFirstItem
	b (Lbyb;)V updateDisplayItems
	a (Lclk;)Z playerItemStackMatchesCostOfOffer
	c (Lbyb;)V clearHeldItem
	a (Lbyb;Lcfz;)V displayAsHeldItem
	d (Lbyb;)Lbfz; lookAtTarget
	e (Lbyb;)V displayCyclingItems
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bjz net/minecraft/world/entity/ai/behavior/ShufflingList
	a entries
	b random
	<init> ()V <init>
	<init> (Ljava/util/List;)V <init>
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;I)Lbjz; add
	a ()Lbjz; shuffle
	b ()Ljava/util/stream/Stream; stream
	iterator ()Ljava/util/Iterator; iterator
	toString ()Ljava/lang/String; toString
	a (Lbjz$a;)V lambda$shuffle$1
	a (Lbjz;)Ljava/util/List; lambda$codec$0
bjz$a net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	a data
	b weight
	c randWeight
	<init> (Ljava/lang/Object;I)V <init>
	c ()D getRandWeight
	a (F)V setRandom
	a ()Ljava/lang/Object; getData
	b ()I getWeight
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
bjz$a$1 net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	a val$elementCodec
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	decode (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decode
	a (Lbjz$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	encode (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Lbjz$a;)Lcom/mojang/datafixers/util/Pair; lambda$decode$1
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbjz$a; lambda$decode$0
bka net/minecraft/world/entity/ai/behavior/SleepInBed
	c COOLDOWN_AFTER_BEING_WOKEN
	d nextOkStartTime
	<init> ()V <init>
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	d (Laif;Lbfz;J)V start
	a (J)Z timedOut
	b (Laif;Lbfz;J)V stop
bkb net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a SPEED_MODIFIER
	<init> ()V <init>
	a ()Lbjb; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$5
	a (Lbld$b;Lble;Lble;Lble;Lble;Lble;)Lblg; lambda$create$4
	a (Lbld$b;Lble;Lble;Lble;Lble;Lble;Laif;Lbfz;J)Z lambda$create$3
	a (Lble;Lble;Lble;Lbfz;)V lambda$create$2
	a (Lbfz;Lbfz;)Z lambda$create$1
	a (Lbfz;)Z lambda$create$0
bkc net/minecraft/world/entity/ai/behavior/StartAttacking
	<init> ()V <init>
	a (Ljava/util/function/Function;)Lbhs; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;)Lbhs; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;Lble;Lble;)Lblg; lambda$create$2
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;Lble;Lble;Laif;Lbgb;J)Z lambda$create$1
	a (Lbgb;)Z lambda$create$0
bkd net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	<init> ()V <init>
	a (ILjava/util/function/BiPredicate;)Lbhs; create
	a (Ljava/util/function/BiPredicate;ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Ljava/util/function/BiPredicate;ILble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Ljava/util/function/BiPredicate;Lble;ILble;Lble;Laif;Lbfz;J)Z lambda$create$0
bke net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	<init> ()V <init>
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lbhs; create
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;IFILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;IFILble;Lble;)Lblg; lambda$create$1
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;ILble;Lble;FILaif;Lbfz;J)Z lambda$create$0
bkf net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	a TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	<init> ()V <init>
	a (Ljava/util/function/BiConsumer;)Lbhs; create
	a (Ljava/util/function/Predicate;)Lbhs; create
	a ()Lbhs; create
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lbhs; create
	a (Lbfz;Ljava/util/Optional;)Z isTiredOfTryingToReachTarget
	a (ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lbld$b;ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lble;Lble;)Lblg; lambda$create$5
	a (Lbld$b;Lble;ZLble;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Laif;Lbgb;J)Z lambda$create$4
	a (Lbgb;Lbfz;)V lambda$create$3
	a (Lbfz;)Z lambda$create$2
	b (Lbgb;Lbfz;)V lambda$create$1
	b (Lbfz;)Z lambda$create$0
bkg net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$5
	a (Lbld$b;Lble;)Lblg; lambda$create$4
	a (Lbld$b;Lble;Laif;Lbfz;J)Z lambda$create$3
	a (Lble;Lbfz;)V lambda$create$2
	a (Laif;Lbfz;)Z lambda$create$1
	a (Lbfj;)Lbfz; lambda$create$0
bkh net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	a MIN_TIME_BETWEEN_STROLLS
	b STROLL_MAX_XZ_DIST
	c STROLL_MAX_Y_DIST
	<init> ()V <init>
	a (Lbpb;FI)Lbjb; create
	a (Lbpb;ILorg/apache/commons/lang3/mutable/MutableLong;FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;ILorg/apache/commons/lang3/mutable/MutableLong;FLble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;ILorg/apache/commons/lang3/mutable/MutableLong;Lble;FLaif;Lbgi;J)Z lambda$create$1
	a (FLeei;)Lbpe; lambda$create$0
bki net/minecraft/world/entity/ai/behavior/StrollToPoi
	<init> ()V <init>
	a (Lbpb;FII)Lbhs; create
	a (Lbpb;ILorg/apache/commons/lang3/mutable/MutableLong;FILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ILorg/apache/commons/lang3/mutable/MutableLong;Lble;FILaif;Lbgi;J)Z lambda$create$0
bkj net/minecraft/world/entity/ai/behavior/StrollToPoiList
	<init> ()V <init>
	a (Lbpb;FIILbpb;)Lbhs; create
	a (Lbpb;Lbpb;ILorg/apache/commons/lang3/mutable/MutableLong;FILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;ILorg/apache/commons/lang3/mutable/MutableLong;Lble;FILaif;Lbyb;J)Z lambda$create$0
bkk net/minecraft/world/entity/ai/behavior/Swim
	c chance
	<init> (F)V <init>
	a (Laif;Lbgb;)Z checkExtraStartConditions
	a (Laif;Lbgb;J)Z canStillUse
	b (Laif;Lbgb;J)V tick
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	c (Laif;Lbfz;J)V tick
bkl net/minecraft/world/entity/ai/behavior/TradeWithVillager
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e trades
	<init> ()V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V start
	c (Laif;Lbyb;J)V tick
	d (Laif;Lbyb;J)V stop
	a (Lbyb;Lbyb;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	a (Lbyb;Ljava/util/Set;Lbfz;)V throwHalfStack
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lcom/google/common/collect/ImmutableSet;Lcfu;)Z lambda$figureOutWhatIAmWillingToTrade$0
bkm net/minecraft/world/entity/ai/behavior/TriggerGate
	<init> ()V <init>
	a (Ljava/util/List;)Lbjb; triggerOneShuffled
	a (Ljava/util/List;Lbif$a;Lbif$b;)Lbjb; triggerGate
	a (Lbif$a;Lbjz;Lbif$b;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$triggerGate$2
	a (Lbif$a;Lbjz;Lbif$b;Laif;Lbfz;J)Z lambda$triggerGate$1
	a (Lbjz;Lcom/mojang/datafixers/util/Pair;)V lambda$triggerGate$0
bkn net/minecraft/world/entity/ai/behavior/TryFindLand
	a COOLDOWN_TICKS
	<init> ()V <init>
	a (IF)Lbhs; create
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLble;Lble;Lble;)Lblg; lambda$create$1
	a (Lorg/apache/commons/lang3/mutable/MutableLong;ILble;Lble;FLaif;Lbgi;J)Z lambda$create$0
bko net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	<init> ()V <init>
	a (IF)Lbhs; create
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLble;Lble;Lble;)Lblg; lambda$create$1
	a (Lorg/apache/commons/lang3/mutable/MutableLong;ILble;Lble;FLaif;Lbgi;J)Z lambda$create$0
bkp net/minecraft/world/entity/ai/behavior/TryFindWater
	<init> ()V <init>
	a (IF)Lbhs; create
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lorg/apache/commons/lang3/mutable/MutableLong;IFLble;Lble;Lble;)Lblg; lambda$create$1
	a (Lorg/apache/commons/lang3/mutable/MutableLong;ILble;Lble;FLaif;Lbgi;J)Z lambda$create$0
bkq net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	<init> ()V <init>
	a (Lcpn;)Lbhs; create
	a (Lcpn;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lcpn;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lcpn;Lble;Laif;Lbfz;J)Z lambda$create$0
bkr net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$1
	a (Laif;Lbfz;J)Z lambda$create$0
bks net/minecraft/world/entity/ai/behavior/UseBonemeal
	c BONEMEALING_DURATION
	d nextWorkCycleTime
	e lastBonemealingSession
	f timeWorkedSoFar
	g cropPos
	<init> ()V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;)Ljava/util/Optional; pickNextTarget
	a (Lgu;Laif;)Z validPos
	b (Laif;Lbyb;J)V start
	a (Lbyb;)V setCurrentCropAsTarget
	c (Laif;Lbyb;J)V stop
	d (Laif;Lbyb;J)V tick
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lbyb;Lgu;)V lambda$setCurrentCropAsTarget$0
bkt net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	a MAX_DISTANCE
	<init> ()V <init>
	a (Ljava/util/function/Predicate;Lbpb;)Lbhs; create
	a (Laif;Lgu;Lbfz;)Z bedIsOccupied
	a (Lbpb;Ljava/util/function/Predicate;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Ljava/util/function/Predicate;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Ljava/util/function/Predicate;Laif;Lbfz;J)Z lambda$create$0
bku net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	<init> ()V <init>
	a (F)Lbjb; create
	a (FII)Lbjb; create
	a (IIFLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (IIFLble;)Lblg; lambda$create$2
	a (IILble;FLaif;Lbgi;J)Z lambda$create$1
	a (FLeei;)Lbpe; lambda$create$0
bkv net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a SAFE_DISTANCE_FROM_DANGER
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;Lble;Lble;Laif;Lbfz;J)Z lambda$create$1
	a (Lbfz;Lbfz;)Z lambda$create$0
bkw net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a STROLL_SPEED_MODIFIER
	<init> ()V <init>
	a (Lbye;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b (Lbye;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	c (Lbye;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lbye;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lbye;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lbye;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lbye;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lbye;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lbye;F)Lcom/google/common/collect/ImmutableList; getHidePackage
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	a (Laif;Lbfz;)Z raidExistsAndActive
	b (Laif;Lbfz;)Z raidExistsAndNotVictory
	a (Lhe;)Z lambda$getMeetPackage$3
	b (Lhe;)Z lambda$getRestPackage$2
	c (Lhe;)Z lambda$getCorePackage$1
	d (Lhe;)Z lambda$getCorePackage$0
bkx net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e birthTimestamp
	<init> ()V <init>
	a (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V start
	c (Laif;Lbyb;J)V tick
	a (Laif;Lbyb;Lbyb;)V tryToGiveBirth
	d (Laif;Lbyb;J)V stop
	a (Lbyb;)Z isBreedingPossible
	b (Laif;Lbyb;)Ljava/util/Optional; takeVacantBed
	a (Lbyb;Lgu;Lhe;)Z canReach
	b (Laif;Lbyb;Lbyb;)Ljava/util/Optional; breed
	a (Laif;Lbyb;Lgu;)V giveBedToChild
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lbyb;Lhe;Lgu;)Z lambda$takeVacantBed$2
	a (Lhe;)Z lambda$takeVacantBed$1
	a (Lbfe;)Z lambda$isBreedingPossible$0
bky net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	<init> ()V <init>
	a (Laif;Lbyb;J)Z canStillUse
	b (Laif;Lbyb;J)V start
	c (Laif;Lbyb;J)V tick
	b (Lbfz;)Z hasHostile
	c (Lbfz;)Z isHurt
	a (Laif;Lbfz;J)Z canStillUse
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bkz net/minecraft/world/entity/ai/behavior/WakeUp
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$1
	a (Laif;Lbfz;J)Z lambda$create$0
bla net/minecraft/world/entity/ai/behavior/WorkAtComposter
	c COMPOSTABLE_ITEMS
	<init> ()V <init>
	a (Laif;Lbyb;)V useWorkstation
	a (Laif;Lbyb;Lhd;Ldcb;)V compostItems
	a (Laif;Ldcb;Lgu;Ldcb;)V spawnComposterFillEffects
	a (Lbyb;)V makeBread
	<clinit> ()V <clinit>
blb net/minecraft/world/entity/ai/behavior/WorkAtPoi
	c CHECK_COOLDOWN
	d DISTANCE
	e lastCheck
	<init> ()V <init>
	b (Laif;Lbyb;)Z checkExtraStartConditions
	a (Laif;Lbyb;J)V start
	a (Laif;Lbyb;)V useWorkstation
	b (Laif;Lbyb;J)Z canStillUse
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	d (Laif;Lbfz;J)V start
	a (Lbha;Lhd;)V lambda$start$0
blc net/minecraft/world/entity/ai/behavior/YieldJobSite
	<init> ()V <init>
	a (F)Lbhs; create
	a (Lhe;Lbyb;Lgu;)Z nearbyWantsJobsite
	a (Lbgi;Lgu;Lbrc;)Z canReachPos
	a (FLbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$6
	a (Lbld$b;FLble;Lble;Lble;Lble;Lble;)Lblg; lambda$create$5
	a (Lbld$b;Lble;Lble;Lble;Lble;FLaif;Lbyb;J)Z lambda$create$4
	a (Lble;Lble;Lble;Lgu;FLaif;Lbyb;)V lambda$create$3
	a (Ljava/util/Optional;Lgu;Lbyb;)Z lambda$create$2
	a (Lbfz;)Lbyb; lambda$create$1
	a (Lbyb;Lbfz;)Z lambda$create$0
bld net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	a trigger
	a (Lcom/mojang/datafixers/kinds/App;)Lbld; unbox
	a ()Lbld$b; instance
	a (Ljava/util/function/Function;)Lbjb; create
	a (Lblg;Lblg;)Lbjb; sequence
	a (Ljava/util/function/Predicate;Lbjb;)Lbjb; triggerIf
	a (Ljava/util/function/Predicate;)Lbjb; triggerIf
	a (Ljava/util/function/BiPredicate;)Lbjb; triggerIf
	b (Lcom/mojang/datafixers/kinds/App;)Lbld$e; get
	<init> (Lbld$e;)V <init>
	a (Lbld$e;)Lbld; create
	a (Ljava/util/function/BiPredicate;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$triggerIf$5
	a (Ljava/util/function/BiPredicate;Laif;Lbfz;J)Z lambda$triggerIf$4
	a (Ljava/util/function/Predicate;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$triggerIf$3
	a (Ljava/util/function/Predicate;Laif;Lbfz;J)Z lambda$triggerIf$2
	a (Lblg;Lblg;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$sequence$1
	a (Lblg;Lcom/mojang/datafixers/util/Unit;)Lblg; lambda$sequence$0
bld$1 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$1
	a val$resolvedBuilder
	<init> (Lbld$e;)V <init>
	trigger (Laif;Lbfz;J)Z trigger
	b ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
	<init> (Ljava/lang/Object;)V <init>
	<init> (Ljava/lang/Object;Ljava/util/function/Supplier;)V <init>
	a (Ljava/lang/Object;)Ljava/lang/String; lambda$new$0
bld$a$1 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant$1
	a val$a
	b val$debugString
	<init> (Ljava/lang/Object;Ljava/util/function/Supplier;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	<init> ()V <init>
	a (Lble;)Ljava/util/Optional; tryGet
	b (Lble;)Ljava/lang/Object; get
	a (Lbpb;)Lbld; registered
	b (Lbpb;)Lbld; present
	c (Lbpb;)Lbld; absent
	a (Lblg;)Lbld; ifTriggered
	a (Ljava/lang/Object;)Lbld; point
	a (Ljava/util/function/Supplier;Ljava/lang/Object;)Lbld; point
	lift1 (Lcom/mojang/datafixers/kinds/App;)Ljava/util/function/Function; lift1
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lbld; map
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbld; ap2
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbld; ap3
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbld; ap4
	ap4 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App; ap4
	ap3 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App; ap3
	ap2 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App; ap2
	point (Ljava/lang/Object;)Lcom/mojang/datafixers/kinds/App; point
	map (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App; map
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App; lambda$lift1$0
bld$b$1 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$1
	a val$aTrigger
	b val$fTrigger
	c this$0
	<init> (Lbld$b;Lbld$e;Lbld$e;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b$2 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$2
	a val$tTrigger
	b val$func
	c this$0
	<init> (Lbld$b;Lbld$e;Ljava/util/function/Function;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b$3 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$3
	a val$aTrigger
	b val$bTrigger
	c val$fTrigger
	d this$0
	<init> (Lbld$b;Lbld$e;Lbld$e;Lbld$e;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b$4 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$4
	a val$t1Trigger
	b val$t2Trigger
	c val$t3Trigger
	d val$fTrigger
	e this$0
	<init> (Lbld$b;Lbld$e;Lbld$e;Lbld$e;Lbld$e;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b$5 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$5
	a val$t1Trigger
	b val$t2Trigger
	c val$t3Trigger
	d val$t4Trigger
	e val$fTrigger
	f this$0
	<init> (Lbld$b;Lbld$e;Lbld$e;Lbld$e;Lbld$e;Lbld$e;)V <init>
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
bld$b$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
	<init> ()V <init>
bld$c net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
	<init> ()V <init>
bld$d net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
	<init> (Lblf;)V <init>
bld$d$1 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory$1
	a val$condition
	<init> (Lblf;)V <init>
	b (Laif;Lbfz;J)Lble; tryTrigger
	a ()Ljava/lang/String; debugString
	toString ()Ljava/lang/String; toString
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
bld$e net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
	a ()Ljava/lang/String; debugString
bld$f net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
	<init> (Lblg;)V <init>
bld$f$1 net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper$1
	a val$dependentTrigger
	<init> (Lblg;)V <init>
	b (Laif;Lbfz;J)Lcom/mojang/datafixers/util/Unit; tryTrigger
	a ()Ljava/lang/String; debugString
	a (Laif;Lbfz;J)Ljava/lang/Object; tryTrigger
ble net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	a brain
	b memoryType
	c value
	<init> (Lbha;Lbpb;Lcom/mojang/datafixers/kinds/App;)V <init>
	a ()Lcom/mojang/datafixers/kinds/App; value
	a (Ljava/lang/Object;)V set
	a (Ljava/util/Optional;)V setOrErase
	a (Ljava/lang/Object;J)V setWithExpiry
	b ()V erase
blf net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	a ()Lbpb; memory
	b ()Lbpc; condition
	a (Lbha;Ljava/util/Optional;)Lble; createAccessor
blf$a net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	a memory
	<init> (Lbpb;)V <init>
	b ()Lbpc; condition
	a (Lbha;Ljava/util/Optional;)Lble; createAccessor
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbpb; memory
blf$b net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	a memory
	<init> (Lbpb;)V <init>
	b ()Lbpc; condition
	a (Lbha;Ljava/util/Optional;)Lble; createAccessor
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbpb; memory
blf$c net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	a memory
	<init> (Lbpb;)V <init>
	b ()Lbpc; condition
	a (Lbha;Ljava/util/Optional;)Lble; createAccessor
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbpb; memory
blg net/minecraft/world/entity/ai/behavior/declarative/Trigger
	trigger (Laif;Lbfz;J)Z trigger
blh net/minecraft/world/entity/ai/behavior/declarative/package-info
bli net/minecraft/world/entity/ai/behavior/package-info
blj net/minecraft/world/entity/ai/behavior/warden/Digging
	<init> (I)V <init>
	a (Laif;Lbxs;J)Z canStillUse
	a (Laif;Lbxs;)Z checkExtraStartConditions
	b (Laif;Lbxs;J)V start
	c (Laif;Lbxs;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
blk net/minecraft/world/entity/ai/behavior/warden/Emerging
	<init> (I)V <init>
	a (Laif;Lbxs;J)Z canStillUse
	b (Laif;Lbxs;J)V start
	c (Laif;Lbxs;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bll net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	<init> ()V <init>
	a (Laif;Lbfz;)Z checkExtraStartConditions
	d (Laif;Lbfz;J)V start
blm net/minecraft/world/entity/ai/behavior/warden/Roar
	c TICKS_BEFORE_PLAYING_ROAR_SOUND
	d ROAR_ANGER_INCREASE
	<init> ()V <init>
	a (Laif;Lbxs;J)V start
	b (Laif;Lbxs;J)Z canStillUse
	c (Laif;Lbxs;J)V tick
	d (Laif;Lbxs;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
bln net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	<init> ()V <init>
	a (Ljava/util/function/Function;)Lbhs; create
	a (Ljava/util/function/Function;Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Ljava/util/function/Function;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Ljava/util/function/Function;Lble;Lble;Laif;Lbxs;J)Z lambda$create$0
blo net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$3
	a (Lbld$b;Lble;Lble;Lble;Lble;)Lblg; lambda$create$2
	a (Lbld$b;Lble;Lble;Lble;Laif;Lbfz;J)Z lambda$create$1
	a (Lbld$b;Lble;)Ljava/util/Optional; lambda$create$0
blp net/minecraft/world/entity/ai/behavior/warden/Sniffing
	c ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	d ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
	<init> (I)V <init>
	a (Laif;Lbxs;J)Z canStillUse
	b (Laif;Lbxs;J)V start
	c (Laif;Lbxs;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
	a (Lbxs;Lbfz;)V lambda$stop$0
blq net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	d DISTANCE_XZ
	e DISTANCE_Y
	f KNOCKBACK_VERTICAL
	g KNOCKBACK_HORIZONTAL
	c COOLDOWN
	h TICKS_BEFORE_PLAYING_SOUND
	i DURATION
	<init> ()V <init>
	a (Laif;Lbxs;)Z checkExtraStartConditions
	a (Laif;Lbxs;J)Z canStillUse
	b (Laif;Lbxs;J)V start
	c (Laif;Lbxs;J)V tick
	d (Laif;Lbxs;J)V stop
	a (Lbfz;I)V setCooldown
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
	a (Lbxs;Laif;Lbfz;)V lambda$tick$2
	a (Lbxs;Lbfz;)Z lambda$tick$1
	b (Lbxs;Lbfz;)V lambda$tick$0
	<clinit> ()V <clinit>
blr net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	a SNIFF_COOLDOWN
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lble;Lble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lble;Lble;Lble;Laif;Lbfz;J)Z lambda$create$0
	<clinit> ()V <clinit>
bls net/minecraft/world/entity/ai/behavior/warden/package-info
blt net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b HEAD_STABLE_ANGLE
	c DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	d HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	e headStableTime
	f lastStableYHeadRot
	<init> (Lbgb;)V <init>
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
blu net/minecraft/world/entity/ai/control/Control
blv net/minecraft/world/entity/ai/control/FlyingMoveControl
	l maxTurn
	m hoversInPlace
	<init> (Lbgb;IZ)V <init>
	a ()V tick
blw net/minecraft/world/entity/ai/control/JumpControl
	b mob
	a jump
	<init> (Lbgb;)V <init>
	a ()V jump
	b ()V tick
blx net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d lookAtCooldown
	e wantedX
	f wantedY
	g wantedZ
	<init> (Lbgb;)V <init>
	a (Leei;)V setLookAt
	a (Lbfj;)V setLookAt
	a (Lbfj;FF)V setLookAt
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a ()V tick
	b ()V clampHeadRotationToBody
	c ()Z resetXRotOnTick
	d ()Z isLookingAtTarget
	e ()D getWantedX
	f ()D getWantedY
	g ()D getWantedZ
	h ()Ljava/util/Optional; getXRotD
	i ()Ljava/util/Optional; getYRotD
	a (FFF)F rotateTowards
	b (Lbfj;)D getWantedY
	a (Ljava/lang/Float;)V lambda$tick$1
	b (Ljava/lang/Float;)V lambda$tick$0
bly net/minecraft/world/entity/ai/control/MoveControl
	a MIN_SPEED
	b MIN_SPEED_SQR
	c MAX_TURN
	d mob
	e wantedX
	f wantedY
	g wantedZ
	h speedModifier
	i strafeForwards
	j strafeRight
	k operation
	<init> (Lbgb;)V <init>
	b ()Z hasWanted
	c ()D getSpeedModifier
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a ()V tick
	b (FF)Z isWalkable
	a (FFF)F rotlerp
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
bly$a net/minecraft/world/entity/ai/control/MoveControl$Operation
	a WAIT
	b MOVE_TO
	c STRAFE
	d JUMPING
	e $VALUES
	values ()[Lbly$a; values
	valueOf (Ljava/lang/String;)Lbly$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbly$a; $values
	<clinit> ()V <clinit>
blz net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	h maxYRotFromCenter
	i HEAD_TILT_X
	j HEAD_TILT_Y
	<init> (Lbgb;I)V <init>
	a ()V tick
	a (Ljava/lang/Float;)V lambda$tick$1
	b (Ljava/lang/Float;)V lambda$tick$0
bma net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	l FULL_SPEED_TURN_THRESHOLD
	m STOP_TURN_THRESHOLD
	n maxTurnX
	o maxTurnY
	p inWaterSpeedModifier
	q outsideWaterSpeedModifier
	r applyGravity
	<init> (Lbgb;IIFFZ)V <init>
	a ()V tick
	a (F)F getTurningSpeedFactor
bmb net/minecraft/world/entity/ai/control/package-info
bmc net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	i walkSpeedModifier
	j sprintSpeedModifier
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	k avoidEntityTargeting
	<init> (Lbgi;Ljava/lang/Class;FDD)V <init>
	<init> (Lbgi;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V <init>
	<init> (Lbgi;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbfz;)Z lambda$canUse$2
	b (Lbfz;)Z lambda$new$1
	c (Lbfz;)Z lambda$new$0
bmd net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	<init> (Lbso;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbyo;)Z playerHoldingInteresting
bme net/minecraft/world/entity/ai/goal/BoatGoals
	a GO_TO_BOAT
	b GO_IN_BOAT_DIRECTION
	c $VALUES
	values ()[Lbme; values
	valueOf (Ljava/lang/String;)Lbme; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbme; $values
	<clinit> ()V <clinit>
bmf net/minecraft/world/entity/ai/goal/BreakDoorGoal
	g DEFAULT_DOOR_BREAK_TIME
	h validDifficulties
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	<init> (Lbgb;Ljava/util/function/Predicate;)V <init>
	<init> (Lbgb;ILjava/util/function/Predicate;)V <init>
	f ()I getDoorBreakTime
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	a (Lbdu;)Z isValidDifficulty
bmg net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	<init> (Lbgi;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	J_ ()Z isInterruptable
	c ()V start
	h ()V findAirPosition
	e ()V tick
	a (Lcmp;Lgu;)Z givesAir
bmh net/minecraft/world/entity/ai/goal/BreedGoal
	d PARTNER_TARGETING
	a animal
	e partnerClass
	b level
	c partner
	f loveTime
	g speedModifier
	<init> (Lbrl;D)V <init>
	<init> (Lbrl;DLjava/lang/Class;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	h ()Lbrl; getFreePartner
	g ()V breed
	<clinit> ()V <clinit>
bmi net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	<init> (Lbro;DI)V <init>
	a ()Z canUse
	c ()V start
	a (Lbgi;)I nextStartTick
	d ()V stop
	e ()V tick
	a (Lcmp;Lgu;)Z isValidTarget
bmj net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	<init> (Lbro;D)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lcmp;Lgu;)Z isValidTarget
	a (Ldca$a;)Z lambda$isValidTarget$1
	a (Ldco;)Ljava/lang/Boolean; lambda$isValidTarget$0
bmk net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	a mob
	b level
	<init> (Lbgb;Lcmm;)V <init>
	a ()Z canUse
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bml net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	<init> (Lbrt;I)V <init>
	a ()Z canUse
	a (Lgu;III)Z waterIsClear
	b (Lgu;III)Z surfaceIsClear
	b ()Z canContinueToUse
	J_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
	<clinit> ()V <clinit>
bmm net/minecraft/world/entity/ai/goal/DoorInteractGoal
	d mob
	e doorPos
	f hasDoor
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	<init> (Lbgb;)V <init>
	h ()Z isOpen
	a (Z)V setOpen
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bmn net/minecraft/world/entity/ai/goal/EatBlockGoal
	a EAT_ANIMATION_TICKS
	b IS_TALL_GRASS
	c mob
	d level
	e eatAnimationTick
	<init> (Lbgb;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	h ()I getEatAnimationTick
	e ()V tick
	<clinit> ()V <clinit>
bmo net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	<init> (Lbgi;D)V <init>
	a ()Z canUse
	h ()Z setWantedPos
	b ()Z canContinueToUse
	c ()V start
	i ()Leei; getHidePos
bmp net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	<init> (Lbgb;)V <init>
	a ()Z canUse
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bmq net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	<init> (Lbgi;)V <init>
	a ()Z canUse
	J_ ()Z isInterruptable
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bmr net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a INTERVAL_TICKS
	b mob
	c timeToRecalcPath
	d nextStartTick
	<init> (Lbrk;)V <init>
	a (Lbrk;)I nextStartTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	b (Lbrk;)Z lambda$canUse$1
	c (Lbrk;)Z lambda$canUse$0
bms net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	<init> (Lbgb;DFF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbgb;Lbgb;)Z lambda$new$0
bmt net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a TELEPORT_WHEN_DISTANCE_IS
	b MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	c MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	d MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	e tamable
	f owner
	g level
	h speedModifier
	i navigation
	j timeToRecalcPath
	k stopDistance
	l startDistance
	m oldWaterCost
	n canFly
	<init> (Lbgv;DFFZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z unableToMove
	c ()V start
	d ()V stop
	e ()V tick
	i ()V teleportToOwner
	a (III)Z maybeTeleportTo
	a (Lgu;)Z canTeleportTo
	a (II)I randomIntInclusive
bmu net/minecraft/world/entity/ai/goal/FollowParentGoal
	a HORIZONTAL_SCAN_RANGE
	b VERTICAL_SCAN_RANGE
	c DONT_FOLLOW_IF_CLOSER_THAN
	d animal
	e parent
	f speedModifier
	g timeToRecalcPath
	<init> (Lbrl;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bmv net/minecraft/world/entity/ai/goal/Goal
	a flags
	<init> ()V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	J_ ()Z isInterruptable
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	a (Ljava/util/EnumSet;)V setFlags
	toString ()Ljava/lang/String; toString
	j ()Ljava/util/EnumSet; getFlags
	a (I)I adjustedTickDelay
	b (I)I reducedTickDelay
bmv$a net/minecraft/world/entity/ai/goal/Goal$Flag
	a MOVE
	b LOOK
	c JUMP
	d TARGET
	e $VALUES
	values ()[Lbmv$a; values
	valueOf (Ljava/lang/String;)Lbmv$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbmv$a; $values
	<clinit> ()V <clinit>
bmw net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g tickCount
	h newGoalRate
	<init> (Ljava/util/function/Supplier;)V <init>
	a (ILbmv;)V addGoal
	a (Ljava/util/function/Predicate;)V removeAllGoals
	a (Lbmv;)V removeGoal
	a (Lboj;Ljava/util/EnumSet;)Z goalContainsAnyFlags
	a (Lboj;Ljava/util/Map;)Z goalCanBeReplacedForAllFlags
	a ()V tick
	a (Z)V tickRunningGoals
	b ()Ljava/util/Set; getAvailableGoals
	c ()Ljava/util/stream/Stream; getRunningGoals
	a (I)V setNewGoalRate
	a (Lbmv$a;)V disableControlFlag
	b (Lbmv$a;)V enableControlFlag
	a (Lbmv$a;Z)V setControlFlag
	a (Lbmv;Lboj;)Z lambda$removeGoal$2
	b (Lbmv;Lboj;)Z lambda$removeGoal$1
	a (Ljava/util/function/Predicate;Lboj;)Z lambda$removeAllGoals$0
	<clinit> ()V <clinit>
bmw$1 net/minecraft/world/entity/ai/goal/GoalSelector$1
	<init> ()V <init>
	a ()Z canUse
bmw$2 net/minecraft/world/entity/ai/goal/GoalSelector$2
	<init> (ILbmv;)V <init>
	h ()Z isRunning
bmx net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	i POI_SECTION_SCAN_RADIUS
	j VILLAGER_SCAN_RADIUS
	k RANDOM_POS_XY_DISTANCE
	l RANDOM_POS_Y_DISTANCE
	<init> (Lbgi;D)V <init>
	h ()Leei; getPosition
	k ()Leei; getPositionTowardsAnywhere
	l ()Leei; getPositionTowardsVillagerWhoWantsGolem
	m ()Leei; getPositionTowardsPoi
	n ()Lhx; getRandomVillageSection
	a (Lhx;)Lgu; getRandomPoiWithinSection
	a (Lbyb;)Z doesVillagerWantGolem
	a (Lhe;)Z lambda$getRandomPoiWithinSection$1
	a (Laif;Lhx;)Z lambda$getRandomVillageSection$0
bmy net/minecraft/world/entity/ai/goal/InteractGoal
	<init> (Lbgb;Ljava/lang/Class;F)V <init>
	<init> (Lbgb;Ljava/lang/Class;FF)V <init>
bmz net/minecraft/world/entity/ai/goal/JumpGoal
	<init> ()V <init>
bna net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	<init> (Lbsi;)V <init>
	a ()Z canUse
	J_ ()Z isInterruptable
	c ()V start
	e ()V tick
bnb net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	<init> (Lbgb;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bnc net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c CARAVAN_LIMIT
	d distCheckCounter
	<init> (Lbtn;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	a (Lbtn;I)Z firstIsLeashed
	a (Lbfj;)Z lambda$canUse$0
bnd net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a DEFAULT_PROBABILITY
	b mob
	c lookAt
	d lookDistance
	h lookTime
	e probability
	i onlyHorizontal
	f lookAtType
	g lookAtContext
	<init> (Lbgb;Ljava/lang/Class;F)V <init>
	<init> (Lbgb;Ljava/lang/Class;FF)V <init>
	<init> (Lbgb;Ljava/lang/Class;FFZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lbfz;)Z lambda$canUse$1
	a (Lbgb;Lbfz;)Z lambda$new$0
bne net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	h villager
	<init> (Lbxw;)V <init>
	a ()Z canUse
bnf net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b speedModifier
	c followingTargetEvenIfNotSeen
	d path
	e pathedTargetX
	f pathedTargetY
	g pathedTargetZ
	h ticksUntilNextPathRecalculation
	i ticksUntilNextAttack
	j attackInterval
	k lastCanUseCheck
	l COOLDOWN_BETWEEN_CAN_USE_CHECKS
	<init> (Lbgi;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	a (Lbfz;D)V checkAndPerformAttack
	h ()V resetAttackCooldown
	i ()Z isTimeToAttack
	k ()I getTicksUntilNextAttack
	l ()I getAttackInterval
	a (Lbfz;)D getAttackReachSqr
bng net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	i MAX_XZ_DIST
	j MAX_Y_DIST
	<init> (Lbgi;DZ)V <init>
	a ()Z canUse
	h ()Leei; getPosition
bnh net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	<init> (Lbgi;DZILjava/util/function/BooleanSupplier;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	a (Lgu;)Z hasNotVisited
	h ()V updateVisited
	a (Lhe;)Z lambda$canUse$3
	a (Laif;Lgu;Lgu;)D lambda$canUse$2
	a (Lgu;Lgu;)Ljava/lang/Double; lambda$canUse$1
	b (Lhe;)Z lambda$canUse$0
bni net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	g GIVE_UP_TICKS
	h STAY_TICKS
	i INTERVAL_TICKS
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	j maxStayTicks
	e blockPos
	k reachedTarget
	l searchRange
	m verticalSearchRange
	f verticalSearchStart
	<init> (Lbgi;DI)V <init>
	<init> (Lbgi;DII)V <init>
	a ()Z canUse
	a (Lbgi;)I nextStartTick
	b ()Z canContinueToUse
	c ()V start
	h ()V moveMobToBlock
	i ()D acceptedDistance
	k ()Lgu; getMoveToTarget
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	l ()Z shouldRecalculatePath
	m ()Z isReachedTarget
	n ()Z findNearestBlock
	a (Lcmp;Lgu;)Z isValidTarget
bnj net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	<init> (Lbgi;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bnk net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	<init> (Lbgi;DF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	c ()V start
bnl net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a mob
	b target
	c attackTime
	<init> (Lbgb;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bnm net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	b OFFER_TARGER_CONTEXT
	a OFFER_TICKS
	c golem
	d villager
	e tick
	<init> (Lbrx;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	<clinit> ()V <clinit>
bnn net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	<init> (Lbgb;Z)V <init>
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bno net/minecraft/world/entity/ai/goal/PanicGoal
	a WATER_CHECK_DISTANCE_VERTICAL
	b mob
	c speedModifier
	d posX
	e posY
	f posZ
	g isRunning
	<init> (Lbgi;D)V <init>
	a ()Z canUse
	h ()Z shouldPanic
	i ()Z findRandomPosition
	k ()Z isRunning
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	a (Lcls;Lbfj;I)Lgu; lookForWater
	a (Lcls;Lgu;)Z lambda$lookForWater$0
bnp net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a RECRUITMENT_SEARCH_TICK_DELAY
	b SPEED_MODIFIER
	c mob
	d recruitmentTick
	<init> (Lbzw;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lbzv;)V recruitNearby
	a (Lbzv;Lbzw;)Z lambda$recruitNearby$0
bnq net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	<init> (Lbgb;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bnr net/minecraft/world/entity/ai/goal/RandomStandGoal
	a horse
	b nextStand
	<init> (Lbtk;)V <init>
	c ()V start
	h ()V playStandSound
	b ()Z canContinueToUse
	a ()Z canUse
	a (Lbtk;)V resetStandInterval
	K_ ()Z requiresUpdateEveryTick
bns net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a DEFAULT_INTERVAL
	b mob
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g interval
	h forceTrigger
	i checkNoActionTime
	<init> (Lbgi;D)V <init>
	<init> (Lbgi;DI)V <init>
	<init> (Lbgi;DIZ)V <init>
	a ()Z canUse
	h ()Leei; getPosition
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	i ()V trigger
	c (I)V setInterval
bnt net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	<init> (Lbgi;DI)V <init>
	h ()Leei; getPosition
bnu net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	<init> (Lbwg;DIF)V <init>
	<init> (Lbwg;DIIF)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bnv net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	<init> (Lbwc;DIF)V <init>
	c (I)V setMinAttackInterval
	a ()Z canUse
	h ()Z isHoldingBow
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bnw net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a PATHFINDING_DELAY_RANGE
	b mob
	c crossbowState
	d speedModifier
	e attackRadiusSqr
	f seeTime
	g attackDelay
	h updatePathDelay
	<init> (Lbwc;DF)V <init>
	a ()Z canUse
	h ()Z isHoldingCrossbow
	b ()Z canContinueToUse
	i ()Z isValidTarget
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	k ()Z canRun
	<clinit> ()V <clinit>
bnw$a net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	values ()[Lbnw$a; values
	valueOf (Ljava/lang/String;)Lbnw$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbnw$a; $values
	<clinit> ()V <clinit>
bnx net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	g blockToRemove
	h removerMob
	i ticksSinceReachedGoal
	j WAIT_AFTER_BLOCK_FOUND
	<init> (Lcpn;Lbgi;DI)V <init>
	a ()Z canUse
	d ()V stop
	c ()V start
	a (Lcmn;Lgu;)V playDestroyProgressSound
	a (Lcmm;Lgu;)V playBreakSound
	e ()V tick
	a (Lgu;Lcls;)Lgu; getPosWithBlock
	a (Lcmp;Lgu;)Z isValidTarget
bny net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	<init> (Lbgi;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
bnz net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	a horse
	b speedModifier
	c posX
	d posY
	e posZ
	<init> (Lbtk;D)V <init>
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	e ()V tick
boa net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	a mob
	<init> (Lbgv;)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	c ()V start
	d ()V stop
bob net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a DISTANCE_THRESHOLD
	b mob
	c interval
	d wantedPos
	<init> (Lbgi;I)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	h ()V moveRandomly
	a (Laif;Lgu;)D lambda$canUse$0
boc net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	<init> (Lbvo;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bod net/minecraft/world/entity/ai/goal/TemptGoal
	c TEMP_TARGETING
	d targetingConditions
	a mob
	e speedModifier
	f px
	g py
	h pz
	i pRotX
	j pRotY
	b player
	k calmDown
	l isRunning
	m items
	n canScare
	<init> (Lbgi;DLciz;Z)V <init>
	a ()Z canUse
	a (Lbfz;)Z shouldFollow
	b ()Z canContinueToUse
	h ()Z canScare
	c ()V start
	d ()V stop
	e ()V tick
	i ()Z isRunning
	<clinit> ()V <clinit>
boe net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	<init> (Lbxw;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
bof net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	<init> (Lbgi;)V <init>
	a ()Z canUse
	c ()V start
bog net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	<init> (Lbgb;Lcfz;Lamg;Ljava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
boh net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	<init> (Lbgi;D)V <init>
	h ()Leei; getPosition
boi net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	i PROBABILITY
	j probability
	<init> (Lbgi;D)V <init>
	<init> (Lbgi;DF)V <init>
	h ()Leei; getPosition
boj net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	<init> (ILbmv;)V <init>
	a (Lboj;)Z canBeReplacedBy
	a ()Z canUse
	b ()Z canContinueToUse
	J_ ()Z isInterruptable
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	a (I)I adjustedTickDelay
	e ()V tick
	a (Ljava/util/EnumSet;)V setFlags
	j ()Ljava/util/EnumSet; getFlags
	h ()Z isRunning
	i ()I getPriority
	k ()Lbmv; getGoal
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
bok net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	b zombie
	c raiseArmTicks
	<init> (Lbwv;DZ)V <init>
	c ()V start
	d ()V stop
	e ()V tick
bol net/minecraft/world/entity/ai/goal/package-info
bom net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	<init> (Lbrx;)V <init>
	a ()Z canUse
	c ()V start
bon net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b ALERT_RANGE_Y
	c alertSameType
	d timestamp
	i toIgnoreDamage
	j toIgnoreAlert
	<init> (Lbgi;[Ljava/lang/Class;)V <init>
	a ()Z canUse
	a ([Ljava/lang/Class;)Lbon; setAlertOthers
	c ()V start
	h ()V alertOthers
	a (Lbgb;Lbfz;)V alertOther
	<clinit> ()V <clinit>
boo net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	i DEFAULT_RANDOM_INTERVAL
	a targetType
	b randomInterval
	c target
	d targetConditions
	<init> (Lbgb;Ljava/lang/Class;Z)V <init>
	<init> (Lbgb;Ljava/lang/Class;ZLjava/util/function/Predicate;)V <init>
	<init> (Lbgb;Ljava/lang/Class;ZZ)V <init>
	<init> (Lbgb;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	a (D)Leed; getTargetSearchArea
	h ()V findTarget
	c ()V start
	a (Lbfz;)V setTarget
	b (Lbfz;)Z lambda$findTarget$0
bop net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	<init> (Lbzw;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V <init>
	a (Z)V setCanAttack
	a ()Z canUse
boq net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i DEFAULT_COOLDOWN
	j cooldown
	<init> (Lbzw;Ljava/lang/Class;ZLjava/util/function/Predicate;)V <init>
	i ()I getCooldown
	k ()V decrementCooldown
	a ()Z canUse
	c ()V start
bor net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	<init> (Lbgv;Ljava/lang/Class;ZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bos net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	<init> (Lbgv;)V <init>
	a ()Z canUse
	c ()V start
bot net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	<init> (Lbgv;)V <init>
	a ()Z canUse
	c ()V start
bou net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	a ALERT_RANGE_Y
	b mob
	c alertOthersOfSameType
	d lastHurtByPlayerTimestamp
	<init> (Lbgb;Z)V <init>
	a ()Z canUse
	h ()Z wasHurtByPlayer
	c ()V start
	i ()Ljava/util/List; getNearbyMobsOfSameType
	a (Lbgb;)Lbgg; lambda$start$1
	b (Lbgb;)Z lambda$start$0
bov net/minecraft/world/entity/ai/goal/target/TargetGoal
	a EMPTY_REACH_CACHE
	b CAN_REACH_CACHE
	c CANT_REACH_CACHE
	e mob
	f mustSee
	d mustReach
	i reachCache
	j reachCacheTime
	k unseenTicks
	g targetMob
	h unseenMemoryTicks
	<init> (Lbgb;Z)V <init>
	<init> (Lbgb;ZZ)V <init>
	b ()Z canContinueToUse
	l ()D getFollowDistance
	c ()V start
	d ()V stop
	a (Lbfz;Lbqm;)Z canAttack
	a (Lbfz;)Z canReach
	c (I)Lbov; setUnseenMemoryTicks
bow net/minecraft/world/entity/ai/goal/target/package-info
box net/minecraft/world/entity/ai/gossip/GossipContainer
	b LOGGER
	a DISCARD_THRESHOLD
	c gossips
	<init> ()V <init>
	a ()Ljava/util/Map; getGossipEntries
	b ()V decay
	c ()Ljava/util/stream/Stream; unpack
	a (Lapf;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Ljava/util/UUID;)Lbox$a; getOrCreate
	a (Lbox;Lapf;I)V transferFrom
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Lboy;Ljava/util/function/DoublePredicate;)J getCountForType
	a (Ljava/util/UUID;Lboy;I)V add
	b (Ljava/util/UUID;Lboy;I)V remove
	a (Ljava/util/UUID;Lboy;)V remove
	a (Lboy;)V remove
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object; store
	a (Lcom/mojang/serialization/Dynamic;)V update
	a (II)I mergeValuesForTransfer
	a (Lboy;II)I mergeValuesForAddition
	a (Lbox$b;)V lambda$update$9
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$update$8
	a (Ljava/lang/String;)V lambda$update$7
	b (Ljava/lang/String;)V lambda$store$6
	b (Lboy;II)I lambda$add$5
	a (Ljava/util/function/DoublePredicate;Lboy;Lbox$a;)Z lambda$getCountForType$4
	b (Lbox$b;)V lambda$transferFrom$3
	b (Ljava/util/UUID;)Lbox$a; lambda$getOrCreate$2
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$unpack$1
	a (Ljava/util/Map;Ljava/util/UUID;)V lambda$getGossipEntries$0
	<clinit> ()V <clinit>
box$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	<init> ()V <init>
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a ()V decay
	b ()Z isEmpty
	a (Lboy;)V makeSureValueIsntTooLowOrTooHigh
	b (Lboy;)V remove
	a (Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lbox$b; lambda$unpack$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I lambda$weightedValue$1
	a (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z lambda$weightedValue$0
box$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	c target
	d type
	e value
	a CODEC
	b LIST_CODEC
	<init> (Ljava/util/UUID;Lboy;I)V <init>
	a ()I weightedValue
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/UUID; target
	c ()Lboy; type
	d ()I value
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
boy net/minecraft/world/entity/ai/gossip/GossipType
	a MAJOR_NEGATIVE
	b MINOR_NEGATIVE
	c MINOR_POSITIVE
	d MAJOR_POSITIVE
	e TRADING
	f REPUTATION_CHANGE_PER_EVENT
	g REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	h REPUTATION_CHANGE_PER_TRADE
	i id
	j weight
	k max
	l decayPerDay
	m decayPerTransfer
	n CODEC
	o $VALUES
	values ()[Lboy; values
	valueOf (Ljava/lang/String;)Lboy; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;IIII)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lboy; $values
	<clinit> ()V <clinit>
boz net/minecraft/world/entity/ai/gossip/package-info
bpa net/minecraft/world/entity/ai/memory/ExpirableValue
	a value
	b timeToLive
	<init> (Ljava/lang/Object;J)V <init>
	a ()V tick
	a (Ljava/lang/Object;)Lbpa; of
	a (Ljava/lang/Object;J)Lbpa; of
	b ()J getTimeToLive
	c ()Ljava/lang/Object; getValue
	d ()Z hasExpired
	toString ()Ljava/lang/String; toString
	e ()Z canExpire
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Ljava/lang/Object;Ljava/util/Optional;)Lbpa; lambda$codec$2
	a (Lbpa;)Ljava/util/Optional; lambda$codec$1
	b (Lbpa;)Ljava/lang/Object; lambda$codec$0
bpb net/minecraft/world/entity/ai/memory/MemoryModuleType
	a DUMMY
	b HOME
	c JOB_SITE
	d POTENTIAL_JOB_SITE
	e MEETING_POINT
	f SECONDARY_JOB_SITE
	g NEAREST_LIVING_ENTITIES
	h NEAREST_VISIBLE_LIVING_ENTITIES
	i VISIBLE_VILLAGER_BABIES
	j NEAREST_PLAYERS
	k NEAREST_VISIBLE_PLAYER
	l NEAREST_VISIBLE_ATTACKABLE_PLAYER
	m WALK_TARGET
	n LOOK_TARGET
	o ATTACK_TARGET
	p ATTACK_COOLING_DOWN
	q INTERACTION_TARGET
	r BREED_TARGET
	s RIDE_TARGET
	t PATH
	u INTERACTABLE_DOORS
	v DOORS_TO_CLOSE
	w NEAREST_BED
	x HURT_BY
	y HURT_BY_ENTITY
	z AVOID_TARGET
	A NEAREST_HOSTILE
	B NEAREST_ATTACKABLE
	C HIDING_PLACE
	D HEARD_BELL_TIME
	E CANT_REACH_WALK_TARGET_SINCE
	F GOLEM_DETECTED_RECENTLY
	G LAST_SLEPT
	H LAST_WOKEN
	I LAST_WORKED_AT_POI
	J NEAREST_VISIBLE_ADULT
	K NEAREST_VISIBLE_WANTED_ITEM
	L NEAREST_VISIBLE_NEMESIS
	M PLAY_DEAD_TICKS
	N TEMPTING_PLAYER
	O TEMPTATION_COOLDOWN_TICKS
	P GAZE_COOLDOWN_TICKS
	Q IS_TEMPTED
	R LONG_JUMP_COOLDOWN_TICKS
	S LONG_JUMP_MID_JUMP
	T HAS_HUNTING_COOLDOWN
	U RAM_COOLDOWN_TICKS
	V RAM_TARGET
	W IS_IN_WATER
	X IS_PREGNANT
	Y IS_PANICKING
	Z UNREACHABLE_TONGUE_TARGETS
	aa ANGRY_AT
	ab UNIVERSAL_ANGER
	ac ADMIRING_ITEM
	ad TIME_TRYING_TO_REACH_ADMIRE_ITEM
	ae DISABLE_WALK_TO_ADMIRE_ITEM
	af ADMIRING_DISABLED
	ag HUNTED_RECENTLY
	ah CELEBRATE_LOCATION
	ai DANCING
	aj NEAREST_VISIBLE_HUNTABLE_HOGLIN
	ak NEAREST_VISIBLE_BABY_HOGLIN
	al NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	am NEARBY_ADULT_PIGLINS
	an NEAREST_VISIBLE_ADULT_PIGLINS
	ao NEAREST_VISIBLE_ADULT_HOGLINS
	ap NEAREST_VISIBLE_ADULT_PIGLIN
	aq NEAREST_VISIBLE_ZOMBIFIED
	ar VISIBLE_ADULT_PIGLIN_COUNT
	as VISIBLE_ADULT_HOGLIN_COUNT
	at NEAREST_PLAYER_HOLDING_WANTED_ITEM
	au ATE_RECENTLY
	av NEAREST_REPELLENT
	aw PACIFIED
	ax ROAR_TARGET
	ay DISTURBANCE_LOCATION
	az RECENT_PROJECTILE
	aA IS_SNIFFING
	aB IS_EMERGING
	aC ROAR_SOUND_DELAY
	aD DIG_COOLDOWN
	aE ROAR_SOUND_COOLDOWN
	aF SNIFF_COOLDOWN
	aG TOUCH_COOLDOWN
	aH VIBRATION_COOLDOWN
	aI SONIC_BOOM_COOLDOWN
	aJ SONIC_BOOM_SOUND_COOLDOWN
	aK SONIC_BOOM_SOUND_DELAY
	aL LIKED_PLAYER
	aM LIKED_NOTEBLOCK_POSITION
	aN LIKED_NOTEBLOCK_COOLDOWN_TICKS
	aO ITEM_PICKUP_COOLDOWN_TICKS
	aP SNIFFER_EXPLORED_POSITIONS
	aQ SNIFFER_SNIFFING_TARGET
	aR SNIFFER_DIGGING
	aS SNIFFER_HAPPY
	aT codec
	<init> (Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	a ()Ljava/util/Optional; getCodec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lbpb; register
	a (Ljava/lang/String;)Lbpb; register
	<clinit> ()V <clinit>
bpc net/minecraft/world/entity/ai/memory/MemoryStatus
	a VALUE_PRESENT
	b VALUE_ABSENT
	c REGISTERED
	d $VALUES
	values ()[Lbpc; values
	valueOf (Ljava/lang/String;)Lbpc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbpc; $values
	<clinit> ()V <clinit>
bpd net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	a EMPTY
	b nearbyEntities
	c lineOfSightTest
	<init> ()V <init>
	<init> (Lbfz;Ljava/util/List;)V <init>
	a ()Lbpd; empty
	a (Ljava/util/function/Predicate;)Ljava/util/Optional; findClosest
	b (Ljava/util/function/Predicate;)Ljava/lang/Iterable; findAll
	c (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; find
	a (Lbfz;)Z contains
	d (Ljava/util/function/Predicate;)Z contains
	a (Ljava/util/function/Predicate;Lbfz;)Z lambda$find$4
	b (Ljava/util/function/Predicate;Lbfz;)Z lambda$findAll$3
	a (Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lbfz;)Z lambda$new$2
	a (Lbfz;Lbfz;)Z lambda$new$1
	b (Lbfz;)Z lambda$new$0
	<clinit> ()V <clinit>
bpe net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speedModifier
	c closeEnoughDist
	<init> (Lgu;FI)V <init>
	<init> (Leei;FI)V <init>
	<init> (Lbfj;FI)V <init>
	<init> (Lbje;FI)V <init>
	a ()Lbje; getTarget
	b ()F getSpeedModifier
	c ()I getCloseEnoughDist
bpf net/minecraft/world/entity/ai/memory/package-info
bpg net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	<init> (Lbgb;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
	a ()Z canUpdatePath
	b ()Leei; getTempMobPos
	a (Leei;)D getGroundY
	a (Leei;Leei;)Z canMoveDirectly
	a (Lgu;)Z isStableDestination
	a (Z)V setCanFloat
bph net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	<init> (Lbgb;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
	a (Leei;Leei;)Z canMoveDirectly
	a ()Z canUpdatePath
	b ()Leei; getTempMobPos
	a (Lbfj;I)Ldxt; createPath
	c ()V tick
	b (Z)V setCanOpenDoors
	d ()Z canPassDoors
	c (Z)V setCanPassDoors
	e ()Z canOpenDoors
	a (Lgu;)Z isStableDestination
bpi net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	<init> (Lbgb;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
	a ()Z canUpdatePath
	b ()Leei; getTempMobPos
	a (Lgu;I)Ldxt; createPath
	a (Lbfj;I)Ldxt; createPath
	t ()I getSurfaceY
	L_ ()V trimPath
	a (Ldxp;)Z hasValidPathType
	b (Z)V setCanOpenDoors
	e ()Z canPassDoors
	c (Z)V setCanPassDoors
	f ()Z canOpenDoors
	d (Z)V setAvoidSun
	e (Z)V setCanWalkOverFences
bpj net/minecraft/world/entity/ai/navigation/PathNavigation
	p MAX_TIME_RECOMPUTE
	q STUCK_CHECK_INTERVAL
	r STUCK_THRESHOLD_DISTANCE_FACTOR
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	s targetPos
	t reachRange
	u maxVisitedNodesMultiplier
	v pathFinder
	w isStuck
	<init> (Lbgb;Lcmm;)V <init>
	g ()V resetMaxVisitedNodesMultiplier
	a (F)V setMaxVisitedNodesMultiplier
	h ()Lgu; getTargetPos
	a (I)Ldxv; createPathFinder
	a (D)V setSpeedModifier
	i ()V recomputePath
	a (DDDI)Ldxt; createPath
	a (Ljava/util/stream/Stream;I)Ldxt; createPath
	a (Ljava/util/Set;I)Ldxt; createPath
	a (Lgu;I)Ldxt; createPath
	a (Lgu;II)Ldxt; createPath
	a (Lbfj;I)Ldxt; createPath
	a (Ljava/util/Set;IZI)Ldxt; createPath
	a (Ljava/util/Set;IZIF)Ldxt; createPath
	a (DDDD)Z moveTo
	a (Lbfj;D)Z moveTo
	a (Ldxt;D)Z moveTo
	j ()Ldxt; getPath
	c ()V tick
	a (Leei;)D getGroundY
	k ()V followThePath
	c (Leei;)Z shouldTargetNextNodeInDirection
	b (Leei;)V doStuckDetection
	e ()V timeoutPath
	f ()V resetStuckTimeout
	l ()Z isDone
	m ()Z isInProgress
	n ()V stop
	b ()Leei; getTempMobPos
	a ()Z canUpdatePath
	o ()Z isInLiquid
	L_ ()V trimPath
	a (Leei;Leei;)Z canMoveDirectly
	b (Ldxp;)Z canCutCorner
	a (Lbgb;Leei;Leei;Z)Z isClearForMovementBetween
	a (Lgu;)Z isStableDestination
	p ()Ldxs; getNodeEvaluator
	a (Z)V setCanFloat
	q ()Z canFloat
	b (Lgu;)Z shouldRecomputePath
	r ()F getMaxDistanceToWaypoint
	s ()Z isStuck
bpk net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	<init> (Lbgb;Lcmm;)V <init>
	a (Lgu;I)Ldxt; createPath
	a (Lbfj;I)Ldxt; createPath
	a (Lbfj;D)Z moveTo
	c ()V tick
bpl net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	<init> (Lbgb;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
	a ()Z canUpdatePath
	b ()Leei; getTempMobPos
	a (Leei;)D getGroundY
	a (Leei;Leei;)Z canMoveDirectly
	a (Lgu;)Z isStableDestination
	a (Z)V setCanFloat
bpm net/minecraft/world/entity/ai/navigation/package-info
bpn net/minecraft/world/entity/ai/package-info
bpo net/minecraft/world/entity/ai/sensing/AdultSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfe;)V doTick
	a (Lbfe;Lbpd;)V setNearestVisibleAdult
	a (Laif;Lbfz;)V doTick
	a (Lbfe;Lbfz;)Z lambda$setNearestVisibleAdult$1
	b (Lbfe;Lbpd;)V lambda$doTick$0
bpp net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	<init> ()V <init>
	a (Lbfz;Lbfz;)Z isMatchingEntity
	e (Lbfz;Lbfz;)Z isHuntTarget
	b (Lbfz;)Z isHostileTarget
	f (Lbfz;Lbfz;)Z isClose
	b ()Lbpb; getMemory
bpq net/minecraft/world/entity/ai/sensing/DummySensor
	<init> ()V <init>
	a (Laif;Lbfz;)V doTick
	a ()Ljava/util/Set; requires
bpr net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	<init> ()V <init>
	a (Lbfz;Lbfz;)Z isMatchingEntity
	e (Lbfz;Lbfz;)Z isUnreachableAttackTarget
	b ()Lbpb; getMemory
bps net/minecraft/world/entity/ai/sensing/GolemSensor
	a GOLEM_SCAN_RATE
	c MEMORY_TIME_TO_LIVE
	<init> ()V <init>
	<init> (I)V <init>
	a (Laif;Lbfz;)V doTick
	a ()Ljava/util/Set; requires
	a (Lbfz;)V checkForNearbyGolem
	b (Lbfz;)V golemDetected
	c (Lbfz;)Z lambda$checkForNearbyGolem$0
bpt net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbwy;)V doTick
	b (Laif;Lbwy;)Ljava/util/Optional; findNearestRepellent
	a (Laif;Lbfz;)V doTick
	a (Laif;Lgu;)Z lambda$findNearestRepellent$1
	a (Lbfz;)Z lambda$doTick$0
bpu net/minecraft/world/entity/ai/sensing/HurtBySensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	a (Laif;Lbha;Lbfz;)V lambda$doTick$0
bpv net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
bpw net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a CACHE_TIMEOUT
	c BATCH_SIZE
	d RATE
	e batchCache
	f triedCount
	g lastUpdate
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbgb;)V doTick
	a (Laif;Lbfz;)V doTick
	a (Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z lambda$doTick$2
	a (Lhe;)Z lambda$doTick$1
	a (Lgu;)Z lambda$doTick$0
bpx net/minecraft/world/entity/ai/sensing/NearestItemSensor
	c XZ_RANGE
	d Y_RANGE
	a MAX_DISTANCE_TO_WANTED_ITEM
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbgb;)V doTick
	a (Laif;Lbfz;)V doTick
	a (Lbgb;Lbvh;)Z lambda$doTick$2
	b (Lbgb;Lbvh;)Z lambda$doTick$1
	a (Lbvh;)Z lambda$doTick$0
bpy net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	<init> ()V <init>
	a (Laif;Lbfz;)V doTick
	b ()I radiusXZ
	c ()I radiusY
	a ()Ljava/util/Set; requires
	a (Lbfz;Lbfz;)Z lambda$doTick$0
bpz net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	<init> ()V <init>
	a (Lbfz;Lbfz;)Z isMatchingEntity
	b ()Lbpb; getMemory
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	b (Lbfz;)Ljava/util/Optional; getNearestEntity
	a (Lbfz;)Ljava/util/Optional; getVisibleEntities
	a (Lbfz;Lbpd;)Ljava/util/Optional; lambda$getNearestEntity$1
	e (Lbfz;Lbfz;)Z lambda$getNearestEntity$0
bqa net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	a (Lbfz;)Z lambda$doTick$0
bqb net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	c (Laif;Lbfz;)Ljava/util/Optional; findNearestRepellent
	a (Laif;Lgu;)Z isValidRepellent
	b (Laif;Lgu;)Z lambda$findNearestRepellent$1
	a (Lbfz;)Z lambda$doTick$0
bqc net/minecraft/world/entity/ai/sensing/PlayerSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	a (Lbfz;Lbyo;)Z lambda$doTick$2
	b (Lbfz;Lbyo;)Z lambda$doTick$1
	a (Lbfz;Laig;)Z lambda$doTick$0
bqd net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a SCAN_RATE
	<init> ()V <init>
	a (Laif;Lbyb;)V doTick
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
bqe net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	<init> (Lbgb;)V <init>
	a ()V tick
	a (Lbfj;)Z hasLineOfSight
bqf net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	c DEFAULT_SCAN_RATE
	b TARGETING_RANGE
	d TARGET_CONDITIONS
	e TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f ATTACK_TARGET_CONDITIONS
	g ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	h ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	i ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	j scanRate
	k timeToTick
	<init> (I)V <init>
	<init> ()V <init>
	b (Laif;Lbfz;)V tick
	a (Laif;Lbfz;)V doTick
	a ()Ljava/util/Set; requires
	b (Lbfz;Lbfz;)Z isEntityTargetable
	c (Lbfz;Lbfz;)Z isEntityAttackable
	d (Lbfz;Lbfz;)Z isEntityAttackableIgnoringLineOfSight
	<clinit> ()V <clinit>
bqg net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_ITEMS
	c NEAREST_LIVING_ENTITIES
	d NEAREST_PLAYERS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_DETECTED
	k PIGLIN_SPECIFIC_SENSOR
	l PIGLIN_BRUTE_SPECIFIC_SENSOR
	m HOGLIN_SPECIFIC_SENSOR
	n NEAREST_ADULT
	o AXOLOTL_ATTACKABLES
	p AXOLOTL_TEMPTATIONS
	q GOAT_TEMPTATIONS
	r FROG_TEMPTATIONS
	s CAMEL_TEMPTATIONS
	t FROG_ATTACKABLES
	u IS_IN_WATER
	v WARDEN_ENTITY_SENSOR
	w SNIFFER_TEMPTATIONS
	x factory
	<init> (Ljava/util/function/Supplier;)V <init>
	a ()Lbqf; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lbqg; register
	b ()Lbqh; lambda$static$4
	c ()Lbqh; lambda$static$3
	d ()Lbqh; lambda$static$2
	e ()Lbqh; lambda$static$1
	f ()Lbqh; lambda$static$0
	<clinit> ()V <clinit>
bqh net/minecraft/world/entity/ai/sensing/TemptingSensor
	a TEMPTATION_RANGE
	c TEMPT_TARGETING
	d temptations
	<init> (Lciz;)V <init>
	a (Laif;Lbgi;)V doTick
	a (Lbyo;)Z playerHoldingTemptation
	a (Lcfz;)Z isTemptation
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	a (Lbgi;Laig;)Z lambda$doTick$2
	b (Lbgi;Laig;)Z lambda$doTick$1
	c (Lbgi;Laig;)Z lambda$doTick$0
	<clinit> ()V <clinit>
bqi net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbfz;)V doTick
	a (Lbfz;)Ljava/util/List; getNearestVillagerBabies
	b (Lbfz;)Z isVillagerBaby
	c (Lbfz;)Lbpd; getVisibleEntities
bqj net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	<init> ()V <init>
	a (Lbfz;Lbfz;)Z isMatchingEntity
	e (Lbfz;Lbfz;)Z isClose
	b ()Lbpb; getMemory
	b (Lbfz;)Z isHostile
	<clinit> ()V <clinit>
bqk net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	<init> ()V <init>
	a ()Ljava/util/Set; requires
	a (Laif;Lbxs;)V doTick
	a (Lbxs;Ljava/util/function/Predicate;)Ljava/util/Optional; getClosest
	b ()I radiusXZ
	c ()I radiusY
	a (Laif;Lbfz;)V doTick
	a (Lbxs;)V lambda$doTick$4
	a (Lbxs;Lbfz;)V lambda$doTick$3
	b (Lbxs;)Ljava/util/Optional; lambda$doTick$2
	a (Lbfz;)Z lambda$doTick$1
	b (Lbfz;)Z lambda$doTick$0
bql net/minecraft/world/entity/ai/sensing/package-info
bqm net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	c isCombat
	d range
	e checkLineOfSight
	f testInvisible
	g selector
	<init> (Z)V <init>
	a ()Lbqm; forCombat
	b ()Lbqm; forNonCombat
	c ()Lbqm; copy
	a (D)Lbqm; range
	d ()Lbqm; ignoreLineOfSight
	e ()Lbqm; ignoreInvisibilityTesting
	a (Ljava/util/function/Predicate;)Lbqm; selector
	a (Lbfz;Lbfz;)Z test
	<clinit> ()V <clinit>
bqn net/minecraft/world/entity/ai/targeting/package-info
bqo net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	<init> ()V <init>
	a (Lbgi;IIIDDD)Leei; getPos
	a (Lbgi;IIIDDDZ)Lgu; generateRandomPos
	a (Lbgi;Lgu;)Z lambda$generateRandomPos$1
	b (Lbgi;IIIDDDZ)Lgu; lambda$getPos$0
bqp net/minecraft/world/entity/ai/util/AirRandomPos
	<init> ()V <init>
	a (Lbgi;IIILeei;D)Leei; getPosTowards
	a (Lbgi;IIILeei;DZ)Lgu; lambda$getPosTowards$0
bqq net/minecraft/world/entity/ai/util/DefaultRandomPos
	<init> ()V <init>
	a (Lbgi;II)Leei; getPos
	a (Lbgi;IILeei;D)Leei; getPosTowards
	a (Lbgi;IILeei;)Leei; getPosAway
	a (Lbgi;IZLgu;)Lgu; generateRandomPosTowardDirection
	a (Lbgi;IILeei;Z)Lgu; lambda$getPosAway$2
	a (Lbgi;IILeei;DZ)Lgu; lambda$getPosTowards$1
	a (Lbgi;IIZ)Lgu; lambda$getPos$0
bqr net/minecraft/world/entity/ai/util/GoalUtils
	<init> ()V <init>
	a (Lbgb;)Z hasGroundPathNavigation
	a (Lbgi;I)Z mobRestricted
	a (Lgu;Lbgi;)Z isOutsideLimits
	a (ZLbgi;Lgu;)Z isRestricted
	a (Lbpj;Lgu;)Z isNotStable
	a (Lbgi;Lgu;)Z isWater
	b (Lbgi;Lgu;)Z hasMalus
	c (Lbgi;Lgu;)Z isSolid
bqs net/minecraft/world/entity/ai/util/HoverRandomPos
	<init> ()V <init>
	a (Lbgi;IIDDFII)Leei; getPos
	a (Lbgi;IIDDFZII)Lgu; lambda$getPos$1
	a (Lbgi;Lgu;)Z lambda$getPos$0
bqt net/minecraft/world/entity/ai/util/LandRandomPos
	<init> ()V <init>
	a (Lbgi;II)Leei; getPos
	a (Lbgi;IILjava/util/function/ToDoubleFunction;)Leei; getPos
	a (Lbgi;IILeei;)Leei; getPosTowards
	b (Lbgi;IILeei;)Leei; getPosAway
	a (Lbgi;IILeei;Z)Leei; getPosInDirection
	a (Lbgi;Lgu;)Lgu; movePosUpOutOfSolid
	a (Lbgi;IZLgu;)Lgu; generateRandomPosTowardDirection
	b (Lbgi;Lgu;)Z lambda$movePosUpOutOfSolid$2
	b (Lbgi;IILeei;Z)Lgu; lambda$getPosInDirection$1
	a (Lbgi;IIZ)Lgu; lambda$getPos$0
bqu net/minecraft/world/entity/ai/util/RandomPos
	a RANDOM_POS_ATTEMPTS
	<init> ()V <init>
	a (Lapf;II)Lgu; generateRandomDirection
	a (Lapf;IIIDDD)Lgu; generateRandomDirectionWithinRadians
	a (Lgu;ILjava/util/function/Predicate;)Lgu; moveUpOutOfSolid
	a (Lgu;IILjava/util/function/Predicate;)Lgu; moveUpToAboveSolid
	a (Lbgi;Ljava/util/function/Supplier;)Leei; generateRandomPos
	a (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Leei; generateRandomPos
	a (Lbgi;ILapf;Lgu;)Lgu; generateRandomPosTowardDirection
bqv net/minecraft/world/entity/ai/util/package-info
bqw net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lbqw; register
	<clinit> ()V <clinit>
bqw$1 net/minecraft/world/entity/ai/village/ReputationEventType$1
	f val$name
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
bqx net/minecraft/world/entity/ai/village/VillageSiege
	a LOGGER
	b hasSetupSiege
	c siegeState
	d zombiesToSpawn
	e nextSpawnTime
	f spawnX
	g spawnY
	h spawnZ
	<init> ()V <init>
	a (Laif;ZZ)I tick
	a (Laif;)Z tryToSetupSiege
	b (Laif;)V trySpawn
	a (Laif;Lgu;)Leei; findRandomSpawnPos
	<clinit> ()V <clinit>
bqx$a net/minecraft/world/entity/ai/village/VillageSiege$State
	a SIEGE_CAN_ACTIVATE
	b SIEGE_TONIGHT
	c SIEGE_DONE
	d $VALUES
	values ()[Lbqx$a; values
	valueOf (Ljava/lang/String;)Lbqx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbqx$a; $values
	<clinit> ()V <clinit>
bqy net/minecraft/world/entity/ai/village/package-info
bqz net/minecraft/world/entity/ai/village/poi/PoiManager
	a MAX_VILLAGE_DISTANCE
	b VILLAGE_SECTION_SIZE
	d distanceTracker
	e loadedChunks
	<init> (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLhs;Lcmo;)V <init>
	a (Lgu;Lhe;)V add
	a (Lgu;)V remove
	a (Ljava/util/function/Predicate;Lgu;ILbqz$b;)J getCountInRange
	a (Lacp;Lgu;)Z existsAtPosition
	b (Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/stream/Stream; getInSquare
	c (Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/stream/Stream; getInRange
	a (Ljava/util/function/Predicate;Lclt;Lbqz$b;)Ljava/util/stream/Stream; getInChunk
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/stream/Stream; findAll
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/stream/Stream; findAllWithType
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/stream/Stream; findAllClosestFirstWithType
	d (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/Optional; find
	d (Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/Optional; findClosest
	e (Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/Optional; findClosestWithType
	e (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lgu;ILbqz$b;)Ljava/util/Optional; findClosest
	a (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lgu;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lbqz$b;Lgu;ILapf;)Ljava/util/Optional; getRandom
	b (Lgu;)Z release
	a (Lgu;Ljava/util/function/Predicate;)Z exists
	c (Lgu;)Ljava/util/Optional; getType
	d (Lgu;)I getFreeTickets
	a (Lhx;)I sectionsToVillage
	g (J)Z isVillageCenter
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (J)V setDirty
	b (J)V onSectionLoad
	a (Lhx;Ldej;)V checkConsistencyWithBlocks
	a (Ldej;)Z mayHavePoi
	a (Ldej;Lhx;Ljava/util/function/BiConsumer;)V updateFromSection
	a (Lcmp;Lgu;I)V ensureLoadedAndValid
	a (Lcmp;Lclt;)V lambda$ensureLoadedAndValid$33
	b (Lclt;)Z lambda$ensureLoadedAndValid$32
	a (Lcom/mojang/datafixers/util/Pair;)Lclt; lambda$ensureLoadedAndValid$31
	b (Lcom/mojang/datafixers/util/Pair;)Z lambda$ensureLoadedAndValid$30
	b (Lhx;)Lcom/mojang/datafixers/util/Pair; lambda$ensureLoadedAndValid$29
	a (Ldej;Ljava/util/function/BiConsumer;Lgu;)V lambda$updateFromSection$28
	a (Ljava/util/function/BiConsumer;Lgu;Lhe;)V lambda$updateFromSection$27
	a (Ldej;Lhx;)V lambda$checkConsistencyWithBlocks$26
	a (Ldej;Lhx;Lbrb;)V lambda$checkConsistencyWithBlocks$25
	b (Ldej;Lhx;Ljava/util/function/BiConsumer;)V lambda$checkConsistencyWithBlocks$24
	a (Lbrb;)Ljava/lang/Boolean; lambda$isVillageCenter$23
	a (Lhe;)Z lambda$isVillageCenter$22
	a (Lgu;Lbrb;)Ljava/lang/Integer; lambda$getFreeTickets$21
	b (Lgu;Lbrb;)Ljava/util/Optional; lambda$getType$20
	a (Lgu;Ljava/util/function/Predicate;Lbrb;)Ljava/lang/Boolean; lambda$exists$19
	e (Lgu;)Ljava/lang/IllegalStateException; lambda$release$18
	c (Lgu;Lbrb;)Ljava/lang/Boolean; lambda$release$17
	a (Ljava/util/function/Predicate;Lbra;)Z lambda$getRandom$16
	a (Lbra;)Lgu; lambda$take$15
	a (Ljava/util/function/BiPredicate;Lbra;)Z lambda$take$14
	a (Lgu;Lgu;)D lambda$findClosest$13
	b (Lbra;)Lcom/mojang/datafixers/util/Pair; lambda$findClosestWithType$12
	a (Lgu;Lbra;)D lambda$findClosestWithType$11
	b (Lgu;Lgu;)D lambda$findClosest$10
	a (Lgu;Lcom/mojang/datafixers/util/Pair;)D lambda$findAllClosestFirstWithType$9
	c (Lbra;)Lcom/mojang/datafixers/util/Pair; lambda$findAllWithType$8
	b (Ljava/util/function/Predicate;Lbra;)Z lambda$findAllWithType$7
	a (Ljava/util/function/Predicate;Lbqz$b;Ljava/util/Optional;)Ljava/util/stream/Stream; lambda$getInChunk$6
	a (Lclt;Ljava/lang/Integer;)Ljava/util/Optional; lambda$getInChunk$5
	a (Lgu;ILbra;)Z lambda$getInRange$4
	b (Lgu;ILbra;)Z lambda$getInSquare$3
	a (Ljava/util/function/Predicate;Lbqz$b;Lclt;)Ljava/util/stream/Stream; lambda$getInSquare$2
	a (Lacp;Lhe;)Z lambda$existsAtPosition$1
	d (Lgu;Lbrb;)V lambda$remove$0
bqz$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	b levels
	a this$0
	<init> (Lbqz;)V <init>
	b (J)I getLevelFromSource
	c (J)I getLevel
	a (JI)V setLevel
	a ()V runAllUpdates
bqz$b net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	a HAS_SPACE
	b IS_OCCUPIED
	c ANY
	d test
	e $VALUES
	values ()[Lbqz$b; values
	valueOf (Ljava/lang/String;)Lbqz$b; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Predicate;)V <init>
	a ()Ljava/util/function/Predicate; getTest
	a (Lbra;)Z lambda$static$0
	b ()[Lbqz$b; $values
	<clinit> ()V <clinit>
bra net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	<init> (Lgu;Lhe;ILjava/lang/Runnable;)V <init>
	<init> (Lgu;Lhe;Ljava/lang/Runnable;)V <init>
	a ()I getFreeTickets
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lgu; getPos
	g ()Lhe; getPoiType
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	a (Lbra;)Ljava/lang/Integer; lambda$codec$2
	b (Lbra;)Lhe; lambda$codec$1
	c (Lbra;)Lgu; lambda$codec$0
brb net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/lang/Runnable;)V <init>
	<init> (Ljava/lang/Runnable;ZLjava/util/List;)V <init>
	a (Ljava/util/function/Predicate;Lbqz$b;)Ljava/util/stream/Stream; getRecords
	a (Lgu;Lhe;)V add
	a (Lbra;)Z add
	a (Lgu;)V remove
	b (Lgu;)I getFreeTickets
	c (Lgu;)Z release
	a (Lgu;Ljava/util/function/Predicate;)Z exists
	d (Lgu;)Ljava/util/Optional; getType
	e (Lgu;)Ljava/util/Optional; getPoiRecord
	a (Ljava/util/function/Consumer;)V refresh
	b ()V clear
	a ()Z isValid
	a (Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lgu;Lhe;)V lambda$refresh$9
	a (Lgu;Lhe;S)Lbra; lambda$refresh$8
	a (Lhe;)Ljava/util/Set; lambda$add$7
	a (Lacp;)Ljava/lang/String; lambda$add$6
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$getRecords$5
	a (Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z lambda$getRecords$4
	b (Ljava/lang/Runnable;)Lbrb; lambda$codec$3
	a (Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$2
	a (Lbrb;)Ljava/util/List; lambda$codec$1
	b (Lbrb;)Ljava/lang/Boolean; lambda$codec$0
	<clinit> ()V <clinit>
brc net/minecraft/world/entity/ai/village/poi/PoiType
	b matchingStates
	c maxTickets
	d validRange
	a NONE
	<init> (Ljava/util/Set;II)V <init>
	a (Ldcb;)Z is
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/Set; matchingStates
	b ()I maxTickets
	c ()I validRange
	a (Lhe;)Z lambda$static$0
	<clinit> ()V <clinit>
brd net/minecraft/world/entity/ai/village/poi/PoiTypes
	a ARMORER
	b BUTCHER
	c CARTOGRAPHER
	d CLERIC
	e FARMER
	f FISHERMAN
	g FLETCHER
	h LEATHERWORKER
	i LIBRARIAN
	j MASON
	k SHEPHERD
	l TOOLSMITH
	m WEAPONSMITH
	n HOME
	o MEETING
	p BEEHIVE
	q BEE_NEST
	r NETHER_PORTAL
	s LODESTONE
	t LIGHTNING_ROD
	u BEDS
	v CAULDRONS
	w TYPE_BY_STATE
	<init> ()V <init>
	a (Lcpn;)Ljava/util/Set; getBlockStates
	a (Ljava/lang/String;)Lacp; createKey
	a (Lhr;Lacp;Ljava/util/Set;II)Lbrc; register
	a (Lhe;Ljava/util/Set;)V registerBlockStates
	a (Ldcb;)Ljava/util/Optional; forState
	b (Ldcb;)Z hasPoi
	a (Lhr;)Lbrc; bootstrap
	a (Lhe;Ldcb;)V lambda$registerBlockStates$3
	b (Lcpn;)Ljava/util/stream/Stream; lambda$static$2
	c (Ldcb;)Z lambda$static$1
	c (Lcpn;)Ljava/util/stream/Stream; lambda$static$0
	<clinit> ()V <clinit>
bre net/minecraft/world/entity/ai/village/poi/package-info
brf net/minecraft/world/entity/ambient/AmbientCreature
	<init> (Lbfn;Lcmm;)V <init>
	a (Lbyo;)Z canBeLeashed
brg net/minecraft/world/entity/ambient/Bat
	b FLAP_DEGREES_PER_TICK
	c TICKS_PER_FLAP
	d DATA_ID_FLAGS
	e FLAG_RESTING
	bS BAT_RESTING_TARGETING
	bT targetPosition
	<init> (Lbfn;Lcmm;)V <init>
	aP ()Z isFlapping
	a_ ()V defineSynchedData
	eR ()F getSoundVolume
	eS ()F getVoicePitch
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	bp ()Z isPushable
	A (Lbfj;)V doPush
	fd ()V pushEntities
	q ()Lbhf$a; createAttributes
	r ()Z isResting
	w (Z)V setResting
	l ()V tick
	W ()V customServerAiStep
	aS ()Lbfj$b; getMovementEmission
	a (DZLdcb;Lgu;)V checkFallDamage
	c_ ()Z isIgnoringBlockTriggers
	a (Lben;F)Z hurt
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkBatSpawnRules
	w ()Z isHalloween
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	<clinit> ()V <clinit>
brh net/minecraft/world/entity/ambient/package-info
bri net/minecraft/world/entity/animal/AbstractFish
	b FROM_BUCKET
	<init> (Lbfn;Lcmm;)V <init>
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Lbhf$a; createAttributes
	T ()Z requiresCustomPersistence
	h (D)Z removeWhenFarAway
	fE ()I getMaxSpawnClusterSize
	a_ ()V defineSynchedData
	r ()Z fromBucket
	w (Z)V setFromBucket
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	x ()V registerGoals
	b (Lcmm;)Lbpj; createNavigation
	h (Leei;)V travel
	b_ ()V aiStep
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	l (Lcfz;)V saveToBucketTag
	c (Lqr;)V loadFromBucketTag
	w ()Lamg; getPickupSound
	fY ()Z canRandomSwim
	fZ ()Lamg; getFlopSound
	aJ ()Lamg; getSwimSound
	b (Lgu;Ldcb;)V playStepSound
	<clinit> ()V <clinit>
bri$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	l fish
	<init> (Lbri;)V <init>
	a ()V tick
bri$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	i fish
	<init> (Lbri;)V <init>
	a ()Z canUse
brj net/minecraft/world/entity/animal/AbstractGolem
	<init> (Lbfn;Lcmm;)V <init>
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	M ()I getAmbientSoundInterval
	h (D)Z removeWhenFarAway
brk net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	fE ()I getMaxSpawnClusterSize
	ga ()I getMaxSchoolSize
	fY ()Z canRandomSwim
	gb ()Z isFollower
	a (Lbrk;)Lbrk; startFollowing
	gc ()V stopFollowing
	gh ()V addFollower
	gi ()V removeFollower
	gd ()Z canBeFollowed
	l ()V tick
	ge ()Z hasFollowers
	gf ()Z inRangeOfLeader
	gg ()V pathToLeader
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbrk;)V lambda$addFollowers$1
	c (Lbrk;)Z lambda$addFollowers$0
brk$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
	<init> (Lbrk;)V <init>
brl net/minecraft/world/entity/animal/Animal
	bV PARENT_AGE_AFTER_BREEDING
	bT inLove
	bU loveCause
	<init> (Lbfn;Lcmm;)V <init>
	W ()V customServerAiStep
	b_ ()V aiStep
	a (Lben;F)Z hurt
	a (Lgu;Lcmp;)F getWalkTargetValue
	b (Lqr;)V addAdditionalSaveData
	bw ()D getMyRidingOffset
	a (Lqr;)V readAdditionalSaveData
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkAnimalSpawnRules
	a (Lclp;Lgu;)Z isBrightEnoughToSpawn
	M ()I getAmbientSoundInterval
	h (D)Z removeWhenFarAway
	ea ()I getExperienceReward
	m (Lcfz;)Z isFood
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lbyo;Lbdw;Lcfz;)V usePlayerItem
	fZ ()Z canFallInLove
	g (Lbyo;)V setInLove
	s (I)V setInLoveTime
	ga ()I getInLoveTime
	gb ()Laig; getLoveCause
	gc ()Z isInLove
	gd ()V resetLove
	a (Lbrl;)Z canMate
	a (Laif;Lbrl;)V spawnChildFromBreeding
	a (Laif;Lbrl;Lbfe;)V finalizeSpawnChildFromBreeding
	b (B)V handleEntityEvent
	a (Lbrl;Lbfe;Laig;)V lambda$finalizeSpawnChildFromBreeding$1
	b (Lbrl;)Ljava/util/Optional; lambda$finalizeSpawnChildFromBreeding$0
brm net/minecraft/world/entity/animal/Bee
	bT FLAP_DEGREES_PER_TICK
	bU TICKS_PER_FLAP
	cd DATA_FLAGS_ID
	ce DATA_REMAINING_ANGER_TIME
	cf FLAG_ROLL
	cg FLAG_HAS_STUNG
	ch FLAG_HAS_NECTAR
	ci STING_DEATH_COUNTDOWN
	cj TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	ck TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	cl MIN_ATTACK_DIST
	cm MAX_CROPS_GROWABLE
	cn POISON_SECONDS_NORMAL
	co POISON_SECONDS_HARD
	cp TOO_FAR_DISTANCE
	cq HIVE_CLOSE_ENOUGH_DISTANCE
	cr PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	cs HIVE_SEARCH_DISTANCE
	bW TAG_CROPS_GROWN_SINCE_POLLINATION
	bX TAG_CANNOT_ENTER_HIVE_TICKS
	bY TAG_TICKS_SINCE_POLLINATION
	bZ TAG_HAS_STUNG
	ca TAG_HAS_NECTAR
	cb TAG_FLOWER_POS
	cc TAG_HIVE_POS
	ct PERSISTENT_ANGER_TIME
	cu persistentAngerTarget
	cv rollAmount
	cw rollAmountO
	cx timeSinceSting
	cy ticksWithoutNectarSinceExitingHive
	cz stayOutOfHiveCountdown
	cA numCropsGrownSincePollination
	cB COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	cC remainingCooldownBeforeLocatingNewHive
	cD COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	cE remainingCooldownBeforeLocatingNewFlower
	cF savedFlowerPos
	cG hivePos
	cH beePollinateGoal
	cI goToHiveGoal
	cJ goToKnownFlowerGoal
	cK underWaterTicks
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Lgu;Lcmp;)F getWalkTargetValue
	x ()V registerGoals
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	z (Lbfj;)Z doHurtTarget
	l ()V tick
	a (Lcmm;DDDDDLit;)V spawnFluidParticle
	j (Lgu;)V pathfindRandomlyTowards
	q ()Lgu; getSavedFlowerPos
	r ()Z hasSavedFlowerPos
	i (Lgu;)V setSavedFlowerPos
	w ()I getTravellingTicks
	fY ()Ljava/util/List; getBlacklistedHives
	gn ()Z isTiredOfLookingForNectar
	go ()Z wantsToEnterHive
	t (I)V setStayOutOfHiveCountdown
	D (F)F getRollAmount
	gp ()V updateRollAmount
	W ()V customServerAiStep
	ge ()V resetTicksWithoutNectarSinceExitingHive
	gq ()Z isHiveNearFire
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	b ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	c ()V startPersistentAngerTimer
	k (Lgu;)Z doesHiveHaveSpace
	gf ()Z hasHive
	gg ()Lgu; getHivePos
	gh ()Lbmw; getGoalSelector
	V ()V sendDebugPackets
	gr ()I getCropsGrownSincePollination
	gs ()V resetNumCropsGrownSincePollination
	gt ()V incrementNumCropsGrownSincePollination
	b_ ()V aiStep
	gu ()Z isHiveValid
	gi ()Z hasNectar
	w (Z)V setHasNectar
	gj ()Z hasStung
	x (Z)V setHasStung
	gv ()Z isRolling
	y (Z)V setRolling
	l (Lgu;)Z isTooFarAway
	d (IZ)V setFlag
	u (I)Z getFlag
	gk ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	m (Lcfz;)Z isFood
	m (Lgu;)Z isFlowerValid
	b (Lgu;Ldcb;)V playStepSound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eR ()F getSoundVolume
	b (Laif;Lbfe;)Lbrm; getBreedOffspring
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (DZLdcb;Lgu;)V checkFallDamage
	aP ()Z isFlapping
	gl ()Z isFlying
	gm ()V dropOffNectar
	a (Lben;F)Z hurt
	eN ()Lbge; getMobType
	c (Lanl;)V jumpInLiquid
	cG ()Leei; getLeashOffset
	b (Lgu;I)Z closerThan
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	a (Lbrm;)Lbpj; access$000
	b (Lbrm;)Lapf; access$100
	c (Lbrm;)Lbpj; access$200
	d (Lbrm;)Lbpj; access$300
	e (Lbrm;)Lbpj; access$400
	f (Lbrm;)Lbpj; access$500
	g (Lbrm;)Lbpj; access$600
	h (Lbrm;)Lbpj; access$700
	i (Lbrm;)Lbpj; access$800
	j (Lbrm;)Lbpj; access$900
	k (Lbrm;)Lbpj; access$1000
	l (Lbrm;)Lbpj; access$1100
	m (Lbrm;)Lbpj; access$1200
	n (Lbrm;)Lbpj; access$1300
	o (Lbrm;)Lbpj; access$1400
	p (Lbrm;)Lbpj; access$1500
	q (Lbrm;)Lbpj; access$1600
	r (Lbrm;)Lbpj; access$1700
	s (Lbrm;)Lbpj; access$1800
	t (Lbrm;)Lapf; access$1900
	u (Lbrm;)Lapf; access$2000
	v (Lbrm;)Lbpj; access$2100
	w (Lbrm;)Lapf; access$2200
	x (Lbrm;)Lbpj; access$2300
	y (Lbrm;)Lapf; access$2400
	z (Lbrm;)Lapf; access$2500
	A (Lbrm;)Lapf; access$2600
	B (Lbrm;)Lapf; access$2700
	C (Lbrm;)Lapf; access$2800
	<clinit> ()V <clinit>
brm$1 net/minecraft/world/entity/animal/Bee$1
	p this$0
	<init> (Lbrm;Lbgb;Lcmm;)V <init>
	a (Lgu;)Z isStableDestination
	c ()V tick
brm$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	a ()Z canUse
	b ()Z canContinueToUse
brm$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	b this$0
	<init> (Lbrm;Lbgi;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
brm$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	<init> (Lbrm;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	i ()Z beeCanTarget
brm$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	b this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	c ()V start
brm$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	b MAX_TRAVELLING_TICKS
	d travellingTicks
	e MAX_BLACKLISTED_TARGETS
	f blacklistedTargets
	g lastPath
	h TICKS_BEFORE_HIVE_DROP
	i ticksStuck
	c this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lgu;)Z pathfindDirectlyTowards
	b (Lgu;)Z isTargetBlacklisted
	c (Lgu;)V blacklistTarget
	k ()V clearBlacklist
	l ()V dropAndBlacklistHive
	m ()V dropHive
	d (Lgu;)Z hasReachedTarget
	b ()Z canContinueToUse
	a ()Z canUse
brm$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	c MAX_TRAVELLING_TICKS
	d travellingTicks
	b this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	k ()Z wantsToGoToKnownFlower
	b ()Z canContinueToUse
	a ()Z canUse
brm$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	b GROW_CHANCE
	c this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	e ()V tick
brm$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a this$0
	<init> (Lbrm;Lbrm;)V <init>
	b ()Z canContinueToUse
	a (Lbgb;Lbfz;)V alertOther
brm$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	b this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	c ()V start
	k ()Ljava/util/List; findNearbyHivesWithSpace
	a (Lgu;Lgu;)D lambda$findNearbyHivesWithSpace$1
	a (Lhe;)Z lambda$findNearbyHivesWithSpace$0
brm$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	h this$0
	<init> (Lbrm;Lbgb;)V <init>
	a ()V tick
	c ()Z resetXRotOnTick
brm$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	c MIN_POLLINATION_TICKS
	d MIN_FIND_FLOWER_RETRY_COOLDOWN
	e MAX_FIND_FLOWER_RETRY_COOLDOWN
	f VALID_POLLINATION_BLOCKS
	g ARRIVAL_THRESHOLD
	h POSITION_CHANGE_CHANCE
	i SPEED_MODIFIER
	j HOVER_HEIGHT_WITHIN_FLOWER
	k HOVER_POS_OFFSET
	l successfulPollinatingTicks
	m lastSoundPlayedTick
	n pollinating
	o hoverPos
	p pollinatingTicks
	q MAX_POLLINATING_TICKS
	b this$0
	<init> (Lbrm;)V <init>
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Z hasPollinatedLongEnough
	l ()Z isPollinating
	m ()V stopPollinating
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	n ()V setWantedPos
	o ()F getOffset
	p ()Ljava/util/Optional; findNearbyFlower
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	a (Ldcb;)Z lambda$new$0
brm$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	b WANDER_THRESHOLD
	a this$0
	<init> (Lbrm;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Leei; findPos
brn net/minecraft/world/entity/animal/Bucketable
	r ()Z fromBucket
	w (Z)V setFromBucket
	l (Lcfz;)V saveToBucketTag
	c (Lqr;)V loadFromBucketTag
	b ()Lcfz; getBucketItemStack
	w ()Lamg; getPickupSound
	a (Lbgb;Lcfz;)V saveDefaultDataToBucketTag
	a (Lbgb;Lqr;)V loadDefaultDataFromBucketTag
	a (Lbyo;Lbdw;Lbfz;)Ljava/util/Optional; bucketMobPickup
bro net/minecraft/world/entity/animal/Cat
	bW TEMPT_SPEED_MOD
	bX WALK_SPEED_MOD
	bY SPRINT_SPEED_MOD
	bZ TEMPT_INGREDIENT
	ca DATA_VARIANT_ID
	cb IS_LYING
	cc RELAX_STATE_ONE
	cd DATA_COLLAR_COLOR
	ce avoidPlayersGoal
	cf temptGoal
	cg lieDownAmount
	ch lieDownAmountO
	ci lieDownAmountTail
	cj lieDownAmountOTail
	ck relaxStateOneAmount
	cl relaxStateOneAmountO
	<init> (Lbfn;Lcmm;)V <init>
	ge ()Lacq; getResourceLocation
	x ()V registerGoals
	gf ()Lbrp; getVariant
	a (Lbrp;)V setVariant
	A (Z)V setLying
	gg ()Z isLying
	B (Z)V setRelaxStateOne
	gh ()Z isRelaxStateOne
	gi ()Lcen; getCollarColor
	a (Lcen;)V setCollarColor
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	W ()V customServerAiStep
	s ()Lamg; getAmbientSound
	M ()I getAmbientSoundInterval
	gj ()V hiss
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	gk ()Lbhf$a; createAttributes
	a (Lbyo;Lbdw;Lcfz;)V usePlayerItem
	gl ()F getAttackDamage
	z (Lbfj;)Z doHurtTarget
	l ()V tick
	gm ()V handleLieDown
	gn ()V updateLieDownAmount
	go ()V updateRelaxStateOneAmount
	D (F)F getLieDownAmount
	E (F)F getLieDownAmountTail
	F (F)F getRelaxStateOneAmount
	b (Laif;Lbfe;)Lbro; getBreedOffspring
	a (Lbrl;)Z canMate
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	m (Lcfz;)Z isFood
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	h (D)Z removeWhenFarAway
	r ()V reassessTameGoals
	bQ ()Z isSteppingCarefully
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	c (Lhe;)V lambda$finalizeSpawn$1
	a (Lcnb;Lhi$c;)Ljava/util/Optional; lambda$finalizeSpawn$0
	<clinit> ()V <clinit>
bro$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	<init> (Lbro;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bro$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	<init> (Lbro;)V <init>
	a ()Z canUse
	h ()Z spaceIsOccupied
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	i ()V giveMorningGift
	e ()V tick
	a (Lgu;)Lgu; lambda$canUse$1
	a (Lgu;Lha;)Lgu; lambda$canUse$0
bro$c net/minecraft/world/entity/animal/Cat$CatTemptGoal
	c selectedPlayer
	d cat
	<init> (Lbro;DLciz;Z)V <init>
	e ()V tick
	h ()Z canScare
	a ()Z canUse
brp net/minecraft/world/entity/animal/CatVariant
	l texture
	a TABBY
	b BLACK
	c RED
	d SIAMESE
	e BRITISH_SHORTHAIR
	f CALICO
	g PERSIAN
	h RAGDOLL
	i WHITE
	j JELLIE
	k ALL_BLACK
	<init> (Lacq;)V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lhr;)Lbrp; bootstrap
	a (Lhr;Lacp;Ljava/lang/String;)Lbrp; register
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; texture
	<clinit> ()V <clinit>
brq net/minecraft/world/entity/animal/Chicken
	cb FOOD_ITEMS
	bT flap
	bU flapSpeed
	bW oFlapSpeed
	bX oFlap
	bY flapping
	cc nextFlap
	bZ eggTime
	ca isChickenJockey
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Lbhf$a; createAttributes
	b_ ()V aiStep
	aP ()Z isFlapping
	aO ()V onFlap
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	b (Laif;Lbfe;)Lbrq; getBreedOffspring
	m (Lcfz;)Z isFood
	ea ()I getExperienceReward
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	h (D)Z removeWhenFarAway
	a (Lbfj;Lbfj$a;)V positionRider
	r ()Z isChickenJockey
	w (Z)V setChickenJockey
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
brr net/minecraft/world/entity/animal/Cod
	<init> (Lbfn;Lcmm;)V <init>
	b ()Lcfz; getBucketItemStack
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	fZ ()Lamg; getFlopSound
brs net/minecraft/world/entity/animal/Cow
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	eR ()F getSoundVolume
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (Laif;Lbfe;)Lbrs; getBreedOffspring
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
brt net/minecraft/world/entity/animal/Dolphin
	d TREASURE_POS
	e GOT_FISH
	bT MOISTNESS_LEVEL
	bU SWIM_WITH_PLAYER_TARGETING
	b TOTAL_AIR_SUPPLY
	bV TOTAL_MOISTNESS_LEVEL
	c ALLOWED_ITEMS
	<init> (Lbfn;Lcmm;)V <init>
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	dN ()Z canBreatheUnderwater
	b (I)V handleAirSupply
	i (Lgu;)V setTreasurePos
	q ()Lgu; getTreasurePos
	r ()Z gotFish
	w (Z)V setGotFish
	w ()I getMoistnessLevel
	c (I)V setMoisntessLevel
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	x ()V registerGoals
	fY ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	z (Lbfj;)Z doHurtTarget
	ce ()I getMaxAirSupply
	n (I)I increaseAirSupply
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	X ()I getMaxHeadXRot
	fC ()I getMaxHeadYRot
	l (Lbfj;)Z canRide
	f (Lcfz;)Z canTakeItem
	b (Lbvh;)V pickUpItem
	l ()V tick
	b (B)V handleEntityEvent
	a (Lit;)V addParticlesAroundSelf
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	s ()Lamg; getAmbientSound
	aK ()Lamg; getSwimSplashSound
	aJ ()Lamg; getSwimSound
	fZ ()Z closeToNextPos
	h (Leei;)V travel
	a (Lbyo;)Z canBeLeashed
	c (Lbvh;)Z lambda$static$0
	a (Lbrt;)Lapf; access$000
	b (Lbrt;)Lapf; access$100
	c (Lbrt;)Lapf; access$200
	<clinit> ()V <clinit>
brt$a net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	<init> (Lbrt;)V <init>
	J_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brt$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	<init> (Lbrt;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brt$c net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	b cooldown
	a this$0
	<init> (Lbrt;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	a (Lcfz;)V drop
bru net/minecraft/world/entity/animal/FlyingAnimal
	gl ()Z isFlying
brv net/minecraft/world/entity/animal/Fox
	bX DATA_TYPE_ID
	bY DATA_FLAGS_ID
	bZ FLAG_SITTING
	bT FLAG_CROUCHING
	bU FLAG_INTERESTED
	bW FLAG_POUNCING
	ca FLAG_SLEEPING
	cb FLAG_FACEPLANTED
	cc FLAG_DEFENDING
	cd DATA_TRUSTED_ID_0
	ce DATA_TRUSTED_ID_1
	cf ALLOWED_ITEMS
	cg TRUSTED_TARGET_SELECTOR
	ch STALKABLE_PREY
	ci AVOID_PLAYERS
	cj MIN_TICKS_BEFORE_EAT
	ck landTargetGoal
	cl turtleEggTargetGoal
	cm fishTargetGoal
	cn interestedAngle
	co interestedAngleO
	cp crouchAmount
	cq crouchAmountO
	cr ticksSinceEaten
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	x ()V registerGoals
	d (Lcfz;)Lamg; getEatingSound
	b_ ()V aiStep
	eT ()Z isImmobile
	l (Lcfz;)Z canEat
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	b (B)V handleEntityEvent
	q ()Lbhf$a; createAttributes
	b (Laif;Lbfe;)Lbrv; getBreedOffspring
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkFoxSpawnRules
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	gi ()V setTargetGoals
	a (Lbyo;Lbdw;Lcfz;)V usePlayerItem
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	r ()Lbrv$v; getVariant
	a (Lbrv$v;)V setVariant
	gj ()Ljava/util/List; getTrustedUUIDs
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	w ()Z isSitting
	w (Z)V setSitting
	fY ()Z isFaceplanted
	A (Z)V setFaceplanted
	gk ()Z isDefending
	B (Z)V setDefending
	fy ()Z isSleeping
	C (Z)V setSleeping
	d (IZ)V setFlag
	t (I)Z getFlag
	f (Lcfz;)Z canTakeItem
	j (Lcfz;)Z canHoldItem
	n (Lcfz;)V spitOutItem
	o (Lcfz;)V dropItemStack
	b (Lbvh;)V pickUpItem
	l ()V tick
	m (Lcfz;)Z isFood
	a (Lbyo;Lbgb;)V onOffspringSpawnedFromEgg
	ge ()Z isPouncing
	x (Z)V setIsPouncing
	gf ()Z isJumping
	gg ()Z isFullyCrouched
	y (Z)V setIsCrouching
	bU ()Z isCrouching
	z (Z)V setIsInterested
	gh ()Z isInterested
	D (F)F getHeadRollAngle
	E (F)F getCrouchAmount
	h (Lbfz;)V setTarget
	d (FF)I calculateFallDamage
	gl ()V wakeUp
	gm ()V clearStates
	gn ()Z canMove
	N ()V playAmbientSound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	c (Ljava/util/UUID;)Z trusts
	g (Lben;)V dropAllDeathLoot
	a (Lbrv;Lbfz;)Z isPathClear
	cG ()Leei; getLeashOffset
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	l (Lbfz;)Z lambda$registerGoals$9
	m (Lbfz;)Z lambda$registerGoals$8
	n (Lbfz;)Z lambda$registerGoals$7
	o (Lbfz;)Z lambda$registerGoals$6
	p (Lbfz;)Z lambda$registerGoals$5
	q (Lbfz;)Z lambda$registerGoals$4
	a (Lbfj;)Z lambda$static$3
	b (Lbfj;)Z lambda$static$2
	c (Lbfj;)Z lambda$static$1
	c (Lbvh;)Z lambda$static$0
	a (Lbrv;)Z access$000
	b (Lbrv;)Lapf; access$100
	c (Lbrv;)Lapf; access$200
	d (Lbrv;)Lapf; access$300
	<clinit> ()V <clinit>
brv$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	i this$0
	<init> (Lbrv;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V <init>
	a ()Z canUse
	c ()V start
brv$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	b this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brv$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a this$0
	<init> (Lbrv;)V <init>
	a (Lbfz;)Z test
	test (Ljava/lang/Object;)Z test
brv$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	b alertableTargeting
	a this$0
	<init> (Lbrv;)V <init>
	h ()Z hasShelter
	i ()Z alertable
brv$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	d this$0
	<init> (Lbrv;D)V <init>
	c ()V start
	g ()V breed
brv$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	i WAIT_TICKS
	g ticksWaited
	h this$0
	<init> (Lbrv;DII)V <init>
	i ()D acceptedDistance
	l ()Z shouldRecalculatePath
	a (Lcmp;Lgu;)Z isValidTarget
	e ()V tick
	o ()V onReachedTarget
	a (Ldcb;)V pickGlowBerry
	b (Ldcb;)V pickSweetBerries
	a ()Z canUse
	c ()V start
brv$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a this$0
	<init> (Lbrv;)V <init>
	c ()V start
	a ()Z canUse
brv$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	e fox
	d this$0
	<init> (Lbrv;Lbrv;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
brv$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
	<init> (Lbrv$v;)V <init>
brv$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	h this$0
	<init> (Lbrv;Lbgb;Ljava/lang/Class;F)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
brv$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	h this$0
	<init> (Lbrv;)V <init>
	a ()V tick
	c ()Z resetXRotOnTick
brv$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	b this$0
	<init> (Lbrv;DZ)V <init>
	a (Lbfz;D)V checkAndPerformAttack
	c ()V start
	a ()Z canUse
brv$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	l this$0
	<init> (Lbrv;)V <init>
	a ()V tick
brv$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	h this$0
	<init> (Lbrv;D)V <init>
	h ()Z shouldPanic
brv$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	a this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	J_ ()Z isInterruptable
	c ()V start
	d ()V stop
	e ()V tick
brv$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	e ()V tick
	c ()V start
brv$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a this$0
	<init> (Lbrv;II)V <init>
	c ()V start
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z canFoxMove
brv$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	c relX
	d relZ
	e lookTime
	f looksRemaining
	b this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	k ()V resetLook
brv$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	c interval
	b this$0
	<init> (Lbrv;D)V <init>
	a ()Z canUse
	c ()V start
brv$t net/minecraft/world/entity/animal/Fox$SleepGoal
	c WAIT_TIME_BEFORE_SLEEP
	d countdown
	b this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	k ()Z canSleep
	d ()V stop
	c ()V start
	<clinit> ()V <clinit>
brv$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a this$0
	<init> (Lbrv;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
brv$v net/minecraft/world/entity/animal/Fox$Type
	a RED
	b SNOW
	c CODEC
	d BY_ID
	e id
	f name
	g $VALUES
	values ()[Lbrv$v; values
	valueOf (Ljava/lang/String;)Lbrv$v; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()I getId
	a (Ljava/lang/String;)Lbrv$v; byName
	a (I)Lbrv$v; byId
	a (Lhe;)Lbrv$v; byBiome
	b ()[Lbrv$v; $values
	<clinit> ()V <clinit>
brw net/minecraft/world/entity/animal/FrogVariant
	d texture
	a TEMPERATE
	b WARM
	c COLD
	<init> (Lacq;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;)Lbrw; register
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; texture
	<clinit> ()V <clinit>
brx net/minecraft/world/entity/animal/IronGolem
	c DATA_FLAGS_ID
	d IRON_INGOT_HEAL_AMOUNT
	e attackAnimationTick
	bT offerFlowerTick
	bU PERSISTENT_ANGER_TIME
	bV remainingPersistentAngerTime
	bW persistentAngerTarget
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	a_ ()V defineSynchedData
	q ()Lbhf$a; createAttributes
	m (I)I decreaseAirSupply
	A (Lbfj;)V doPush
	b_ ()V aiStep
	bg ()Z canSpawnSprintParticle
	a (Lbfn;)Z canAttackType
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	c ()V startPersistentAngerTimer
	a (I)V setRemainingPersistentAngerTime
	a ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	b ()Ljava/util/UUID; getPersistentAngerTarget
	ga ()F getAttackDamage
	z (Lbfj;)Z doHurtTarget
	a (Lben;F)Z hurt
	r ()Lbrx$a; getCrackiness
	b (B)V handleEntityEvent
	w ()I getAttackAnimationTick
	w (Z)V offerFlower
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (Lgu;Ldcb;)V playStepSound
	fY ()I getOfferFlowerTick
	fZ ()Z isPlayerCreated
	x (Z)V setPlayerCreated
	a (Lben;)V die
	a (Lcmp;)Z checkSpawnObstruction
	cG ()Leei; getLeashOffset
	l (Lbfz;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
brx$a net/minecraft/world/entity/animal/IronGolem$Crackiness
	a NONE
	b LOW
	c MEDIUM
	d HIGH
	e BY_DAMAGE
	f fraction
	g $VALUES
	values ()[Lbrx$a; values
	valueOf (Ljava/lang/String;)Lbrx$a; valueOf
	<init> (Ljava/lang/String;IF)V <init>
	a (F)Lbrx$a; byFraction
	a (Lbrx$a;)D lambda$static$0
	a ()[Lbrx$a; $values
	<clinit> ()V <clinit>
bry net/minecraft/world/entity/animal/MushroomCow
	bT DATA_TYPE
	bU MUTATE_CHANCE
	bW effect
	bX effectDuration
	bY lastLightningBoltUUID
	<init> (Lbfn;Lcmm;)V <init>
	a (Lgu;Lcmp;)F getWalkTargetValue
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkMushroomSpawnRules
	a (Laif;Lbfy;)V thunderHit
	a_ ()V defineSynchedData
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lami;)V shear
	a ()Z readyForShearing
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	l (Lcfz;)Ljava/util/Optional; getEffectFromItemStack
	a (Lbry$a;)V setVariant
	r ()Lbry$a; getVariant
	c (Laif;Lbfe;)Lbry; getBreedOffspring
	a (Lbry;)Lbry$a; getOffspringType
	b (Laif;Lbfe;)Lbrs; getBreedOffspring
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lbdw;Lbyo;)V lambda$mobInteract$0
	<clinit> ()V <clinit>
bry$a net/minecraft/world/entity/animal/MushroomCow$MushroomType
	a RED
	b BROWN
	c CODEC
	d type
	e blockState
	f $VALUES
	values ()[Lbry$a; values
	valueOf (Ljava/lang/String;)Lbry$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldcb;)V <init>
	a ()Ldcb; getBlockState
	c ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lbry$a; byType
	b ()[Lbry$a; $values
	<clinit> ()V <clinit>
brz net/minecraft/world/entity/animal/Ocelot
	bT CROUCH_SPEED_MOD
	bU WALK_SPEED_MOD
	bW SPRINT_SPEED_MOD
	bX TEMPT_INGREDIENT
	bY DATA_TRUSTING
	bZ ocelotAvoidPlayersGoal
	ca temptGoal
	<init> (Lbfn;Lcmm;)V <init>
	w ()Z isTrusting
	w (Z)V setTrusting
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	x ()V registerGoals
	W ()V customServerAiStep
	h (D)Z removeWhenFarAway
	q ()Lbhf$a; createAttributes
	s ()Lamg; getAmbientSound
	M ()I getAmbientSoundInterval
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	fY ()F getAttackDamage
	z (Lbfj;)Z doHurtTarget
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (B)V handleEntityEvent
	x (Z)V spawnTrustingParticles
	r ()V reassessTrustingGoals
	b (Laif;Lbfe;)Lbrz; getBreedOffspring
	m (Lcfz;)Z isFood
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkOcelotSpawnRules
	a (Lcmp;)Z checkSpawnObstruction
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	cG ()Leei; getLeashOffset
	bQ ()Z isSteppingCarefully
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
brz$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	<init> (Lbrz;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
brz$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	<init> (Lbrz;DLciz;Z)V <init>
	h ()Z canScare
bsa net/minecraft/world/entity/animal/Panda
	bW UNHAPPY_COUNTER
	bX SNEEZE_COUNTER
	bY EAT_COUNTER
	bZ MAIN_GENE_ID
	ca HIDDEN_GENE_ID
	cb DATA_ID_FLAGS
	cc BREED_TARGETING
	cd FLAG_SNEEZE
	ce FLAG_ROLL
	cf FLAG_SIT
	cg FLAG_ON_BACK
	ch EAT_TICK_INTERVAL
	bT TOTAL_ROLL_STEPS
	ci TOTAL_UNHAPPY_TIME
	cj gotBamboo
	ck didBite
	bU rollCounter
	cl rollDelta
	cm sitAmount
	cn sitAmountO
	co onBackAmount
	cp onBackAmountO
	cq rollAmount
	cr rollAmountO
	cs lookAtPlayerGoal
	ct PANDA_ITEMS
	<init> (Lbfn;Lcmm;)V <init>
	f (Lcfz;)Z canTakeItem
	q ()I getUnhappyCounter
	t (I)V setUnhappyCounter
	r ()Z isSneezing
	w ()Z isSitting
	w (Z)V sit
	fY ()Z isOnBack
	x (Z)V setOnBack
	ge ()Z isEating
	y (Z)V eat
	gt ()I getEatCounter
	v (I)V setEatCounter
	z (Z)V sneeze
	gf ()I getSneezeCounter
	u (I)V setSneezeCounter
	gg ()Lbsa$a; getMainGene
	a (Lbsa$a;)V setMainGene
	gh ()Lbsa$a; getHiddenGene
	b (Lbsa$a;)V setHiddenGene
	gi ()Z isRolling
	A (Z)V roll
	a_ ()V defineSynchedData
	w (I)Z getFlag
	d (IZ)V setFlag
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	x ()V registerGoals
	gj ()Lbhf$a; createAttributes
	gk ()Lbsa$a; getVariant
	gl ()Z isLazy
	gm ()Z isWorried
	gn ()Z isPlayful
	go ()Z isBrown
	gp ()Z isWeak
	fS ()Z isAggressive
	a (Lbyo;)Z canBeLeashed
	z (Lbfj;)Z doHurtTarget
	l ()V tick
	gq ()Z isScared
	gu ()V handleEating
	gv ()V addEatingParticles
	gw ()V updateSitAmount
	gx ()V updateOnBackAnimation
	gy ()V updateRollAmount
	D (F)F getSitAmount
	E (F)F getLieOnBackAmount
	F (F)F getRollAmount
	gz ()V handleRoll
	gA ()V afterSneeze
	b (Lbvh;)V pickUpItem
	a (Lben;F)Z hurt
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lbsa;Lbsa;)V setGeneFromParents
	gB ()Lbsa$a; getOneOfGenesRandomly
	gr ()V setAttributes
	gC ()V tryToSit
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	s ()Lamg; getAmbientSound
	b (Lgu;Ldcb;)V playStepSound
	m (Lcfz;)Z isFood
	l (Lcfz;)Z isFoodOrCake
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	gs ()Z canPerformAction
	c (Lbvh;)Z lambda$static$0
	a (Lbsa;)Lapf; access$000
	b (Lbsa;)Lapf; access$100
	c (Lbsa;)Lapf; access$200
	d (Lbsa;)Lapf; access$300
	e (Lbsa;)Lapf; access$400
	f (Lbsa;)Lapf; access$500
	g (Lbsa;)Lapf; access$600
	h (Lbsa;)Lapf; access$700
	i (Lbsa;)Lapf; access$800
	j (Lbsa;)Lapf; access$900
	k (Lbsa;)Lapf; access$1000
	<clinit> ()V <clinit>
bsa$a net/minecraft/world/entity/animal/Panda$Gene
	a NORMAL
	b LAZY
	c WORRIED
	d PLAYFUL
	e BROWN
	f WEAK
	g AGGRESSIVE
	h CODEC
	i BY_ID
	j MAX_GENE
	k id
	l name
	m isRecessive
	n $VALUES
	values ()[Lbsa$a; values
	valueOf (Ljava/lang/String;)Lbsa$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;Z)V <init>
	a ()I getId
	c ()Ljava/lang/String; getSerializedName
	b ()Z isRecessive
	a (Lbsa$a;Lbsa$a;)Lbsa$a; getVariantFromGenes
	a (I)Lbsa$a; byId
	a (Ljava/lang/String;)Lbsa$a; byName
	a (Lapf;)Lbsa$a; getRandom
	d ()[Lbsa$a; $values
	<clinit> ()V <clinit>
bsa$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	b panda
	<init> (Lbsa;DZ)V <init>
	a ()Z canUse
bsa$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	<init> (Lbsa;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
bsa$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	d panda
	e unhappyCooldown
	<init> (Lbsa;D)V <init>
	a ()Z canUse
	h ()Z canFindBamboo
bsa$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	<init> (Lbsa;[Ljava/lang/Class;)V <init>
	b ()Z canContinueToUse
	a (Lbgb;Lbfz;)V alertOther
bsa$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	<init> (Lbsa;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bsa$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	h panda
	<init> (Lbsa;Ljava/lang/Class;F)V <init>
	a (Lbfz;)V setTarget
	b ()Z canContinueToUse
	a ()Z canUse
	e ()V tick
	b (Lbfz;)Z lambda$canUse$0
bsa$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	l panda
	<init> (Lbsa;)V <init>
	a ()V tick
bsa$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	h panda
	<init> (Lbsa;D)V <init>
	h ()Z shouldPanic
	b ()Z canContinueToUse
bsa$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	<init> (Lbsa;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	J_ ()Z isInterruptable
bsa$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	b cooldown
	a this$0
	<init> (Lbsa;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	c ()V start
	d ()V stop
bsa$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	<init> (Lbsa;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bsb net/minecraft/world/entity/animal/Parrot
	ca DATA_VARIANT_ID
	cb NOT_PARROT_PREDICATE
	cc POISONOUS_FOOD
	cd TAME_FOOD
	ce MOB_SOUND_MAP
	bW flap
	bX flapSpeed
	bY oFlapSpeed
	bZ oFlap
	cf flapping
	cg nextFlap
	ch partyParrot
	ci jukebox
	<init> (Lbfn;Lcmm;)V <init>
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	h_ ()Z isBaby
	x ()V registerGoals
	ge ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	b_ ()V aiStep
	a (Lgu;Z)V setRecordPlayingNearby
	gf ()Z isPartyParrot
	gi ()V calculateFlapping
	a (Lcmm;Lbfj;)Z imitateNearbyMobs
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	m (Lcfz;)Z isFood
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkParrotSpawnRules
	a (DZLdcb;Lgu;)V checkFallDamage
	a (Lbrl;)Z canMate
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	z (Lbfj;)Z doHurtTarget
	s ()Lamg; getAmbientSound
	a (Lcmm;Lapf;)Lamg; getAmbient
	b (Lbfn;)Lamg; getImitatedSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	aP ()Z isFlapping
	aO ()V onFlap
	eS ()F getVoicePitch
	a (Lapf;)F getPitch
	cY ()Lami; getSoundSource
	bp ()Z isPushable
	A (Lbfj;)V doPush
	a (Lben;F)Z hurt
	gg ()Lbsb$b; getVariant
	a (Lbsb$b;)V setVariant
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	gl ()Z isFlying
	cG ()Leei; getLeashOffset
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
bsb$1 net/minecraft/world/entity/animal/Parrot$1
	<init> ()V <init>
	a (Lbgb;)Z test
	test (Ljava/lang/Object;)Z test
bsb$a net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	<init> (Lbgi;D)V <init>
	h ()Leei; getPosition
	k ()Leei; getTreePos
bsb$b net/minecraft/world/entity/animal/Parrot$Variant
	a RED_BLUE
	b BLUE
	c GREEN
	d YELLOW_BLUE
	e GRAY
	f CODEC
	g BY_ID
	h id
	i name
	j $VALUES
	values ()[Lbsb$b; values
	valueOf (Ljava/lang/String;)Lbsb$b; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	a (I)Lbsb$b; byId
	c ()Ljava/lang/String; getSerializedName
	b ()[Lbsb$b; $values
	<clinit> ()V <clinit>
bsc net/minecraft/world/entity/animal/Pig
	bT DATA_SADDLE_ID
	bU DATA_BOOST_TIME
	bW FOOD_ITEMS
	bX steering
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	cL ()Lbfz; getControllingPassenger
	a (Laby;)V onSyncedDataUpdated
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	g ()Z isSaddleable
	eu ()V dropEquipment
	i ()Z isSaddled
	a (Lami;)V equipSaddle
	b (Lbfz;)Leei; getDismountLocationForPassenger
	a (Laif;Lbfy;)V thunderHit
	a (Lbyo;Leei;)V tickRidden
	b (Lbyo;Leei;)Leei; getRiddenInput
	e (Lbyo;)F getRiddenSpeed
	a ()Z boost
	b (Laif;Lbfe;)Lbsc; getBreedOffspring
	m (Lcfz;)Z isFood
	cG ()Leei; getLeashOffset
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
bsd net/minecraft/world/entity/animal/PolarBear
	bT DATA_STANDING_ID
	bU STAND_ANIMATION_TICKS
	bW clientSideStandAnimationO
	bX clientSideStandAnimation
	bY warningSoundTicks
	bZ PERSISTENT_ANGER_TIME
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	<init> (Lbfn;Lcmm;)V <init>
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	m (Lcfz;)Z isFood
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkPolarBearSpawnRules
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	c ()V startPersistentAngerTimer
	a (I)V setRemainingPersistentAngerTime
	a ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	b ()Ljava/util/UUID; getPersistentAngerTarget
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	r ()V playWarningSound
	a_ ()V defineSynchedData
	l ()V tick
	a (Lbgl;)Lbfk; getDimensions
	z (Lbfj;)Z doHurtTarget
	w ()Z isStanding
	w (Z)V setStanding
	D (F)F getStandingAnimationScale
	eY ()F getWaterSlowDown
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	<clinit> ()V <clinit>
bsd$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	i this$0
	<init> (Lbsd;)V <init>
	a ()Z canUse
	l ()D getFollowDistance
bsd$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a this$0
	<init> (Lbsd;)V <init>
	c ()V start
	a (Lbgb;Lbfz;)V alertOther
bsd$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	b this$0
	<init> (Lbsd;)V <init>
	a (Lbfz;D)V checkAndPerformAttack
	d ()V stop
	a (Lbfz;)D getAttackReachSqr
bsd$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	h this$0
	<init> (Lbsd;)V <init>
	h ()Z shouldPanic
bse net/minecraft/world/entity/animal/Pufferfish
	e PUFF_STATE
	bT inflateCounter
	bU deflateTimer
	bV SCARY_MOB
	bW targetingConditions
	b STATE_SMALL
	c STATE_MID
	d STATE_FULL
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	ga ()I getPuffState
	c (I)V setPuffState
	a (Laby;)V onSyncedDataUpdated
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b ()Lcfz; getBucketItemStack
	x ()V registerGoals
	l ()V tick
	b_ ()V aiStep
	a (Lbgb;)V touch
	b_ (Lbyo;)V playerTouch
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	fZ ()Lamg; getFlopSound
	a (Lbgl;)Lbfk; getDimensions
	s (I)F getScale
	b (Lbgb;)Z lambda$aiStep$1
	l (Lbfz;)Z lambda$static$0
	<clinit> ()V <clinit>
bse$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	<init> (Lbse;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	a (Lbfz;)Z lambda$canUse$0
bsf net/minecraft/world/entity/animal/Rabbit
	bT STROLL_SPEED_MOD
	bU BREED_SPEED_MOD
	bW FOLLOW_SPEED_MOD
	bX FLEE_SPEED_MOD
	bY ATTACK_SPEED_MOD
	cb DATA_TYPE_ID
	cc KILLER_BUNNY
	bZ EVIL_ATTACK_POWER
	ca EVIL_ARMOR_VALUE
	cd MORE_CARROTS_DELAY
	ce jumpTicks
	cf jumpDuration
	cg wasOnGround
	ch jumpDelayTicks
	ci moreCarrotTicks
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	eU ()F getJumpPower
	eW ()V jumpFromGround
	D (F)F getJumpCompletion
	i (D)V setSpeedModifier
	r (Z)V setJumping
	q ()V startJumping
	a_ ()V defineSynchedData
	W ()V customServerAiStep
	bg ()Z canSpawnSprintParticle
	c (DD)V facePoint
	ge ()V enableJumpControl
	gf ()V disableJumpControl
	gg ()V setLandingDelay
	gh ()V checkLandingDelay
	b_ ()V aiStep
	r ()Lbhf$a; createAttributes
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	w ()Lamg; getJumpSound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	z (Lbfj;)Z doHurtTarget
	cY ()Lami; getSoundSource
	l (Lcfz;)Z isTemptingItem
	b (Laif;Lbfe;)Lbsf; getBreedOffspring
	m (Lcfz;)Z isFood
	fY ()Lbsf$h; getVariant
	a (Lbsf$h;)V setVariant
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lcmn;Lgu;)Lbsf$h; getRandomRabbitVariant
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkRabbitSpawnRules
	gi ()Z wantsMoreFood
	b (B)V handleEntityEvent
	cG ()Leei; getLeashOffset
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lbsf;)Z access$000
	b (Lbsf;)Lblw; access$100
	<clinit> ()V <clinit>
bsf$a net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	<init> (Lbsf;)V <init>
	a (Lbfz;)D getAttackReachSqr
bsf$b net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	<init> (Lbsf;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
bsf$c net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a variant
	<init> (Lbsf$h;)V <init>
bsf$d net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	b rabbit
	c canJump
	<init> (Lbsf;)V <init>
	c ()Z wantJump
	d ()Z canJump
	a (Z)V setCanJump
	b ()V tick
bsf$e net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	l rabbit
	m nextJumpSpeed
	<init> (Lbsf;)V <init>
	a ()V tick
	a (DDDD)V setWantedPosition
bsf$f net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	h rabbit
	<init> (Lbsf;D)V <init>
	e ()V tick
bsf$g net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	g rabbit
	h wantsToRaid
	i canRaid
	<init> (Lbsf;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lcmp;Lgu;)Z isValidTarget
bsf$h net/minecraft/world/entity/animal/Rabbit$Variant
	a BROWN
	b WHITE
	c BLACK
	d WHITE_SPLOTCHED
	e GOLD
	f SALT
	g EVIL
	i BY_ID
	h CODEC
	j id
	k name
	l $VALUES
	values ()[Lbsf$h; values
	valueOf (Ljava/lang/String;)Lbsf$h; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()I id
	a (I)Lbsf$h; byId
	b ()[Lbsf$h; $values
	<clinit> ()V <clinit>
bsg net/minecraft/world/entity/animal/Salmon
	<init> (Lbfn;Lcmm;)V <init>
	ga ()I getMaxSchoolSize
	b ()Lcfz; getBucketItemStack
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	fZ ()Lamg; getFlopSound
bsh net/minecraft/world/entity/animal/Sheep
	bT EAT_ANIMATION_TICKS
	bU DATA_WOOL_ID
	bW ITEM_BY_DYE
	bX COLORARRAY_BY_COLOR
	bY eatAnimationTick
	bZ eatBlockGoal
	c (Lcen;)[F createSheepColor
	a (Lcen;)[F getColorArray
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	W ()V customServerAiStep
	b_ ()V aiStep
	q ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	Q ()Lacq; getDefaultLootTable
	b (B)V handleEntityEvent
	D (F)F getHeadEatPositionScale
	E (F)F getHeadEatAngleScale
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lami;)V shear
	a ()Z readyForShearing
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	r ()Lcen; getColor
	b (Lcen;)V setColor
	w ()Z isSheared
	w (Z)V setSheared
	a (Lapf;)Lcen; getRandomSheepColor
	b (Laif;Lbfe;)Lbsh; getBreedOffspring
	L ()V ate
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lbrl;Lbrl;)Lcen; getOffspringColor
	a (Lcen;Lcen;)Lcbt; makeContainer
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	b (Lcen;Lcen;)Lcen; lambda$getOffspringColor$4
	a (Lcbt;Lcit;)Lcfz; lambda$getOffspringColor$3
	a (Lbdw;Lbyo;)V lambda$mobInteract$2
	d (Lcen;)Lcen; lambda$static$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
bsh$1 net/minecraft/world/entity/animal/Sheep$1
	<init> (Lcck;I)V <init>
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lbyo;)Z stillValid
bsh$2 net/minecraft/world/entity/animal/Sheep$2
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
bsi net/minecraft/world/entity/animal/ShoulderRidingEntity
	bW RIDE_COOLDOWN
	bX rideCooldownCounter
	<init> (Lbfn;Lcmm;)V <init>
	b (Laig;)Z setEntityOnShoulder
	l ()V tick
	gh ()Z canSitOnShoulder
bsj net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	c PUMPKIN_FLAG
	d EYE_HEIGHT
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	fb ()Z isSensitiveToWater
	b_ ()V aiStep
	a (Lbfz;F)V performRangedAttack
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lami;)V shear
	a ()Z readyForShearing
	r ()Z hasPumpkin
	w (Z)V setPumpkin
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	cG ()Leei; getLeashOffset
	a (Lbdw;Lbyo;)V lambda$mobInteract$1
	l (Lbfz;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bsk net/minecraft/world/entity/animal/Squid
	b xBodyRot
	c xBodyRotO
	d zBodyRot
	e zBodyRotO
	bT tentacleMovement
	bU oldTentacleMovement
	bV tentacleAngle
	bW oldTentacleAngle
	bX speed
	bY tentacleSpeed
	bZ rotateSpeed
	ca tx
	cb ty
	cc tz
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	fY ()Lbhf$a; createAttributes
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	r ()Lamg; getSquirtSound
	a (Lbyo;)Z canBeLeashed
	eR ()F getSoundVolume
	aS ()Lbfj$b; getMovementEmission
	b_ ()V aiStep
	a (Lben;F)Z hurt
	j (Leei;)Leei; rotateVector
	w ()V spawnInk
	q ()Lit; getInkParticle
	h (Leei;)V travel
	b (B)V handleEntityEvent
	a (FFF)V setMovementVector
	fZ ()Z hasMovementVector
	a (Lbsk;)Z access$000
bsk$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	b SQUID_FLEE_SPEED
	c SQUID_FLEE_MIN_DISTANCE
	d SQUID_FLEE_MAX_DISTANCE
	e fleeTicks
	a this$0
	<init> (Lbsk;)V <init>
	a ()Z canUse
	c ()V start
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bsk$b net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	b squid
	a this$0
	<init> (Lbsk;Lbsk;)V <init>
	a ()Z canUse
	e ()V tick
bsl net/minecraft/world/entity/animal/TropicalFish
	b BUCKET_VARIANT_TAG
	d DATA_ID_TYPE_VARIANT
	c COMMON_VARIANTS
	e isSchool
	<init> (Lbfn;Lcmm;)V <init>
	c (I)Ljava/lang/String; getPredefinedName
	a (Lbsl$b;Lcen;Lcen;)I packVariant
	s (I)Lcen; getBaseColor
	t (I)Lcen; getPatternColor
	u (I)Lbsl$b; getPattern
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	v (I)V setPackedVariant
	d (I)Z isMaxGroupSizeReached
	gk ()I getPackedVariant
	gh ()Lcen; getBaseColor
	gi ()Lcen; getPatternColor
	gj ()Lbsl$b; getVariant
	a (Lbsl$b;)V setVariant
	l (Lcfz;)V saveToBucketTag
	b ()Lcfz; getBucketItemStack
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	fZ ()Lamg; getFlopSound
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkTropicalFishSpawnRules
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	<clinit> ()V <clinit>
bsl$a net/minecraft/world/entity/animal/TropicalFish$Base
	a SMALL
	b LARGE
	c id
	d $VALUES
	values ()[Lbsl$a; values
	valueOf (Ljava/lang/String;)Lbsl$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()[Lbsl$a; $values
	<clinit> ()V <clinit>
bsl$b net/minecraft/world/entity/animal/TropicalFish$Pattern
	a KOB
	b SUNSTREAK
	c SNOOPER
	d DASHER
	e BRINELY
	f SPOTTY
	g FLOPPER
	h STRIPEY
	i GLITTER
	j BLOCKFISH
	k BETTY
	l CLAYFISH
	m CODEC
	n BY_ID
	o name
	p displayName
	q base
	r packedId
	s $VALUES
	values ()[Lbsl$b; values
	valueOf (Ljava/lang/String;)Lbsl$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lbsl$a;I)V <init>
	a (I)Lbsl$b; byId
	a ()Lbsl$a; base
	b ()I getPackedId
	c ()Ljava/lang/String; getSerializedName
	d ()Lsw; displayName
	e ()[Lbsl$b; $values
	<clinit> ()V <clinit>
bsl$c net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b variant
	<init> (Lbsl;Lbsl$d;)V <init>
bsl$d net/minecraft/world/entity/animal/TropicalFish$Variant
	a pattern
	b baseColor
	c patternColor
	<init> (Lbsl$b;Lcen;Lcen;)V <init>
	a ()I getPackedId
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lbsl$b; pattern
	c ()Lcen; baseColor
	d ()Lcen; patternColor
bsm net/minecraft/world/entity/animal/Turtle
	bW HOME_POS
	bX HAS_EGG
	bY LAYING_EGG
	bZ TRAVEL_POS
	ca GOING_HOME
	cb TRAVELLING
	bT FOOD_ITEMS
	cc layEggCounter
	bU BABY_ON_LAND_SELECTOR
	<init> (Lbfn;Lcmm;)V <init>
	i (Lgu;)V setHomePos
	fY ()Lgu; getHomePos
	j (Lgu;)V setTravelPos
	ge ()Lgu; getTravelPos
	q ()Z hasEgg
	w (Z)V setHasEgg
	r ()Z isLayingEgg
	x (Z)V setLayingEgg
	gf ()Z isGoingHome
	y (Z)V setGoingHome
	gg ()Z isTravelling
	z (Z)V setTravelling
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkTurtleSpawnRules
	x ()V registerGoals
	w ()Lbhf$a; createAttributes
	cw ()Z isPushedByFluid
	dN ()Z canBreatheUnderwater
	eN ()Lbge; getMobType
	M ()I getAmbientSoundInterval
	s ()Lamg; getAmbientSound
	e (F)V playSwimSound
	aJ ()Lamg; getSwimSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	fZ ()Z canFallInLove
	aI ()F nextStep
	dV ()F getScale
	b (Lcmm;)Lbpj; createNavigation
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	m (Lcfz;)Z isFood
	a (Lgu;Lcmp;)F getWalkTargetValue
	b_ ()V aiStep
	m ()V ageBoundaryReached
	h (Leei;)V travel
	a (Lbyo;)Z canBeLeashed
	a (Laif;Lbfy;)V thunderHit
	l (Lbfz;)Z lambda$static$0
	a (Lbsm;)Lapf; access$000
	b (Lbsm;)Lapf; access$100
	<clinit> ()V <clinit>
bsm$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	<init> (Lbsm;D)V <init>
	a ()Z canUse
	g ()V breed
bsm$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	e GIVE_UP_TICKS
	<init> (Lbsm;D)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	e ()V tick
bsm$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g GIVE_UP_TICKS
	h turtle
	<init> (Lbsm;D)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	l ()Z shouldRecalculatePath
	a (Lcmp;Lgu;)Z isValidTarget
bsm$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	<init> (Lbsm;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	a (Lcmp;Lgu;)Z isValidTarget
bsm$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	l turtle
	<init> (Lbsm;)V <init>
	g ()V updateSpeed
	a ()V tick
bsm$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	<init> (Lbsm;D)V <init>
	a ()Z canUse
bsm$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	<init> (Lbsm;Lcmm;)V <init>
	a (Lgu;)Z isStableDestination
bsm$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	i turtle
	<init> (Lbsm;DI)V <init>
	a ()Z canUse
bsm$i net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	<init> (Lbsm;D)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
	b ()Z canContinueToUse
	d ()V stop
bsn net/minecraft/world/entity/animal/WaterAnimal
	<init> (Lbfn;Lcmm;)V <init>
	dN ()Z canBreatheUnderwater
	eN ()Lbge; getMobType
	a (Lcmp;)Z checkSpawnObstruction
	M ()I getAmbientSoundInterval
	ea ()I getExperienceReward
	b (I)V handleAirSupply
	ao ()V baseTick
	cw ()Z isPushedByFluid
	a (Lbyo;)Z canBeLeashed
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkSurfaceWaterAnimalSpawnRules
bso net/minecraft/world/entity/animal/Wolf
	bX DATA_INTERESTED_ID
	bY DATA_COLLAR_COLOR
	bZ DATA_REMAINING_ANGER_TIME
	bW PREY_SELECTOR
	ca START_HEALTH
	cb TAME_HEALTH
	cc interestedAngle
	cd interestedAngleO
	ce isWet
	cf isShaking
	cg shakeAnim
	ch shakeAnimO
	ci PERSISTENT_ANGER_TIME
	cj persistentAngerTarget
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	ge ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	b (Lgu;Ldcb;)V playStepSound
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eR ()F getSoundVolume
	b_ ()V aiStep
	l ()V tick
	gj ()V cancelShake
	a (Lben;)V die
	gf ()Z isWet
	D (F)F getWetShade
	f (FF)F getBodyRollAngle
	E (F)F getHeadRollAngle
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	X ()I getMaxHeadXRot
	a (Lben;F)Z hurt
	z (Lbfj;)Z doHurtTarget
	x (Z)V setTame
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (B)V handleEntityEvent
	gg ()F getTailAngle
	m (Lcfz;)Z isFood
	fE ()I getMaxSpawnClusterSize
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	c ()V startPersistentAngerTimer
	b ()Ljava/util/UUID; getPersistentAngerTarget
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	gh ()Lcen; getCollarColor
	a (Lcen;)V setCollarColor
	b (Laif;Lbfe;)Lbso; getBreedOffspring
	A (Z)V setIsInterested
	a (Lbrl;)Z canMate
	gi ()Z isInterested
	a (Lbfz;Lbfz;)Z wantsToAttack
	a (Lbyo;)Z canBeLeashed
	cG ()Leei; getLeashOffset
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkWolfSpawnRules
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	m (Lbfz;)Z lambda$static$0
	a (Lbso;)Lapf; access$000
	<clinit> ()V <clinit>
bso$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	j wolf
	i this$0
	<init> (Lbso;Lbso;Ljava/lang/Class;FDD)V <init>
	a ()Z canUse
	a (Lbtn;)Z avoidLlama
	c ()V start
	e ()V tick
bso$b net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	h this$0
	<init> (Lbso;D)V <init>
	h ()Z shouldPanic
bsp net/minecraft/world/entity/animal/allay/Allay
	e LOGGER
	bT ITEM_PICKUP_REACH
	bU LIFTING_ITEM_ANIMATION_DURATION
	bV DANCING_LOOP_DURATION
	bW SPINNING_ANIMATION_DURATION
	bX DUPLICATION_ITEM
	bY DUPLICATION_COOLDOWN_TICKS
	bZ NUM_OF_DUPLICATION_HEARTS
	ca RIDING_OFFSET
	cb DATA_DANCING
	cc DATA_CAN_DUPLICATE
	b SENSOR_TYPES
	c MEMORY_TYPES
	d THROW_SOUND_PITCHES
	cd dynamicVibrationListener
	ce vibrationData
	cf vibrationUser
	cg dynamicJukeboxListener
	ch inventory
	ci jukeboxPos
	cj duplicationCooldown
	ck holdingItemAnimationTicks
	cl holdingItemAnimationTicks0
	cm dancingAnimationTicks
	cn spinningAnimationTicks
	co spinningAnimationTicks0
	<init> (Lbfn;Lcmm;)V <init>
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	q ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	a_ ()V defineSynchedData
	h (Leei;)V travel
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Lben;F)Z hurt
	b (Lgu;Ldcb;)V playStepSound
	a (DZLdcb;Lgu;)V checkFallDamage
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eR ()F getSoundVolume
	W ()V customServerAiStep
	b_ ()V aiStep
	l ()V tick
	fG ()Z canPickUpLoot
	r ()Z hasItemInHand
	f (Lcfz;)Z canTakeItem
	gd ()Z isOnPickupCooldown
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (Lgu;Z)V setJukeboxPlaying
	w ()Lbee; getInventory
	R ()Lhz; getPickupReach
	k (Lcfz;)Z wantsToPickUp
	d (Lcfz;Lcfz;)Z allayConsidersItemEqual
	e (Lcfz;Lcfz;)Z hasNonMatchingPotion
	b (Lbvh;)V pickUpItem
	V ()V sendDebugPackets
	aP ()Z isFlapping
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	fY ()Z isDancing
	fZ ()Z isPanicking
	w (Z)V setDancing
	ge ()Z shouldStopDancing
	D (F)F getHoldingItemAnimationProgress
	ga ()Z isSpinning
	E (F)F getSpinningProgress
	a (Lcfz;Lcfz;)Z equipmentHasChanged
	eu ()V dropEquipment
	h (D)Z removeWhenFarAway
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	fW ()Z shouldStayCloseToLeashHolder
	gf ()V updateDuplicationCooldown
	l (Lcfz;)Z isDuplicationItem
	gg ()V duplicateAllay
	gh ()V resetDuplicationCooldown
	gi ()Z canDuplicate
	a (Lbyo;Lcfz;)V removeInteractionItem
	cG ()Leei; getLeashOffset
	bw ()D getMyRidingOffset
	b (B)V handleEntityEvent
	gj ()V spawnHeartParticle
	gb ()Ldgu$a; getVibrationData
	gc ()Ldgu$d; getVibrationUser
	a (Ldgu$a;)V lambda$readAdditionalSaveData$1
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$0
	<clinit> ()V <clinit>
bsp$a net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	b listenerSource
	c listenerRadius
	a this$0
	<init> (Lbsp;Ldgp;I)V <init>
	a ()Ldgp; getListenerSource
	b ()I getListenerRadius
	a (Laif;Ldgl;Ldgl$a;Leei;)Z handleGameEvent
bsp$b net/minecraft/world/entity/animal/allay/Allay$VibrationUser
	b VIBRATION_EVENT_LISTENER_RANGE
	c positionSource
	a this$0
	<init> (Lbsp;)V <init>
	a ()I getListenerRadius
	b ()Ldgp; getPositionSource
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Laif;Lgu;Ldgl;Lbfj;Lbfj;F)V onReceiveVibration
	c ()Lanl; getListenableEvents
bsq net/minecraft/world/entity/animal/allay/AllayAi
	a SPEED_MULTIPLIER_WHEN_IDLING
	b SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	c SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	d SPEED_MULTIPLIER_WHEN_PANICKING
	e CLOSE_ENOUGH_TO_TARGET
	f TOO_FAR_FROM_TARGET
	g MAX_LOOK_DISTANCE
	h MIN_WAIT_DURATION
	i MAX_WAIT_DURATION
	j TIME_TO_FORGET_NOTEBLOCK
	k DISTANCE_TO_WANTED_ITEM
	l GIVE_ITEM_TIMEOUT_DURATION
	<init> ()V <init>
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	a (Lbsp;)V updateActivity
	a (Lbfz;Lgu;)V hearNoteblock
	b (Lbfz;)Ljava/util/Optional; getItemDepositPosition
	c (Lbfz;)Z hasWantedItem
	a (Lbfz;Lbha;Lhd;)Z shouldDepositItemsAtLikedNoteblock
	d (Lbfz;)Ljava/util/Optional; getLikedPlayerPositionTracker
	a (Lbfz;)Ljava/util/Optional; getLikedPlayer
	a (Laig;)Lbje; lambda$getLikedPlayerPositionTracker$1
	b (Lbsp;)Z lambda$initIdleActivity$0
bsr net/minecraft/world/entity/animal/allay/package-info
bss net/minecraft/world/entity/animal/axolotl/Axolotl
	bT TOTAL_PLAYDEAD_TIME
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	ca DATA_VARIANT
	cb DATA_PLAYING_DEAD
	cc FROM_BUCKET
	bX PLAYER_REGEN_DETECTION_RANGE
	bY RARE_VARIANT_CHANCE
	cd AXOLOTL_TOTAL_AIR_SUPPLY
	bZ VARIANT_TAG
	ce REHYDRATE_AIR_SUPPLY
	cf REGEN_BUFF_MAX_DURATION
	cg modelRotationValues
	ch REGEN_BUFF_BASE_DURATION
	<init> (Lbfn;Lcmm;)V <init>
	a ()Ljava/util/Map; getModelRotationValues
	a (Lgu;Lcmp;)F getWalkTargetValue
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	N ()V playAmbientSound
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	ao ()V baseTick
	t (I)V handleAirSupply
	q ()V rehydrate
	ce ()I getMaxAirSupply
	fY ()Lbss$d; getVariant
	a (Lbss$d;)V setVariant
	a (Lapf;)Z useRareVariant
	a (Lcmp;)Z checkSpawnObstruction
	dN ()Z canBreatheUnderwater
	cw ()Z isPushedByFluid
	eN ()Lbge; getMobType
	x (Z)V setPlayingDead
	ge ()Z isPlayingDead
	r ()Z fromBucket
	w (Z)V setFromBucket
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	i (Lbfz;)D getMeleeAttackRangeSqr
	m (Lcfz;)Z isFood
	a (Lbyo;)Z canBeLeashed
	W ()V customServerAiStep
	gf ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	z (Lbfj;)Z doHurtTarget
	a (Lben;F)Z hurt
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	X ()I getMaxHeadXRot
	fC ()I getMaxHeadYRot
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	l (Lcfz;)V saveToBucketTag
	c (Lqr;)V loadFromBucketTag
	b ()Lcfz; getBucketItemStack
	w ()Lamg; getPickupSound
	ek ()Z canBeSeenAsEnemy
	a (Lbss;Lbfz;)V onStopAttacking
	f (Lbyo;)V applySupportingEffects
	T ()Z requiresCustomPersistence
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	s ()Lamg; getAmbientSound
	aK ()Lamg; getSwimSplashSound
	aJ ()Lamg; getSwimSound
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	V ()V sendDebugPackets
	h (Leei;)V travel
	a (Lbyo;Lbdw;Lcfz;)V usePlayerItem
	h (D)Z removeWhenFarAway
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkAxolotlSpawnRules
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	<clinit> ()V <clinit>
bss$a net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	a types
	<init> ([Lbss$d;)V <init>
	a (Lapf;)Lbss$d; getVariant
bss$b net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	h this$0
	<init> (Lbss;Lbss;I)V <init>
	a ()V tick
bss$c net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	l axolotl
	<init> (Lbss;)V <init>
	a ()V tick
bss$d net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	a LUCY
	b WILD
	c GOLD
	d CYAN
	e BLUE
	g BY_ID
	f CODEC
	h id
	i name
	j common
	k $VALUES
	values ()[Lbss$d; values
	valueOf (Ljava/lang/String;)Lbss$d; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;Z)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	a (I)Lbss$d; byId
	a (Lapf;)Lbss$d; getCommonSpawnVariant
	b (Lapf;)Lbss$d; getRareSpawnVariant
	a (Lapf;Z)Lbss$d; getSpawnVariant
	b (I)[Lbss$d; lambda$getSpawnVariant$1
	a (ZLbss$d;)Z lambda$getSpawnVariant$0
	d ()[Lbss$d; $values
	<clinit> ()V <clinit>
bst net/minecraft/world/entity/animal/axolotl/AxolotlAi
	a ADULT_FOLLOW_RANGE
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_ON_LAND
	d SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	e SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
	<init> ()V <init>
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initPlayDeadActivity
	c (Lbha;)V initFightActivity
	d (Lbha;)V initCoreActivity
	e (Lbha;)V initIdleActivity
	a (Lbfz;)Z canSetWalkTargetFromLookTarget
	a (Lbss;)V updateActivity
	b (Lbfz;)F getSpeedModifierChasing
	c (Lbfz;)F getSpeedModifierFollowingAdult
	d (Lbfz;)F getSpeedModifier
	b (Lbss;)Ljava/util/Optional; findNearestValidAttackTarget
	a ()Lciz; getTemptations
	<clinit> ()V <clinit>
bsu net/minecraft/world/entity/animal/axolotl/PlayDead
	<init> ()V <init>
	a (Laif;Lbss;)Z checkExtraStartConditions
	a (Laif;Lbss;J)Z canStillUse
	b (Laif;Lbss;J)V start
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	d (Laif;Lbfz;J)V start
bsv net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;Laif;Lbfz;J)Z lambda$create$0
bsw net/minecraft/world/entity/animal/axolotl/package-info
bsx net/minecraft/world/entity/animal/camel/Camel
	bT TEMPTATION_ITEM
	bU DASH_COOLDOWN_TICKS
	bW MAX_HEAD_Y_ROT
	cu RUNNING_SPEED_BONUS
	cv DASH_VERTICAL_MOMENTUM
	cw DASH_HORIZONTAL_MOMENTUM
	cx DASH_MINIMUM_DURATION_TICKS
	cy SITDOWN_DURATION_TICKS
	cz STANDUP_DURATION_TICKS
	cA IDLE_MINIMAL_DURATION_TICKS
	cB SITTING_HEIGHT_DIFFERENCE
	bX DASH
	bY LAST_POSE_CHANGE_TICK
	bZ sitAnimationState
	ca sitPoseAnimationState
	cb sitUpAnimationState
	cc idleAnimationState
	cd dashAnimationState
	cC SITTING_DIMENSIONS
	cD dashCooldown
	cE idleAnimationTimeout
	<init> (Lbfn;Lcmm;)V <init>
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	q ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	dL ()Lbha$b; brainProvider
	x ()V registerGoals
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	a (Lbgl;)Lbfk; getDimensions
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	d ()D getRiderShieldingHeight
	W ()V customServerAiStep
	l ()V tick
	gK ()V setupAnimationStates
	v (F)V updateWalkAnimation
	h (Leei;)V travel
	a (Lbyo;Leei;)V tickRidden
	r ()Z refuseToMove
	e (Lbyo;)F getRiddenSpeed
	l (Lbfz;)Leeh; getRiddenRotation
	b (Lbyo;Leei;)Leei; getRiddenInput
	a ()Z canJump
	b (I)V onPlayerJump
	dB ()Z canSprint
	b (FLeei;)V executeRidersJump
	w ()Z isDashing
	w (Z)V setDashing
	fY ()Z isPanicking
	c (I)V handleStartJump
	b ()V handleStopJump
	W_ ()I getJumpCooldown
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	b (Lgu;Ldcb;)V playStepSound
	m (Lcfz;)Z isFood
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	C (F)V onLeashDistance
	a (Lbyo;Lcfz;)Z handleEating
	ge ()Z canPerformRearing
	a (Lbrl;)Z canMate
	b (Laif;Lbfe;)Lbsx; getBreedOffspring
	gf ()Lamg; getEatingSound
	f (Lben;F)V actuallyHurt
	a (Lbfj;Lbfj$a;)V positionRider
	a (ZF)D getBodyAnchorAnimationYOffset
	p (F)Leei; getLeashOffset
	bx ()D getPassengersRidingOffset
	j (Lbfj;)V onPassengerTurned
	a (Lbfj;)V clampRotation
	a (Lbfj;F)V clampHeadRotationToBody
	fC ()I getMaxHeadYRot
	o (Lbfj;)Z canAddPassenger
	cL ()Lbfz; getControllingPassenger
	V ()V sendDebugPackets
	gg ()Z isCamelSitting
	gh ()Z isCamelVisuallySitting
	gi ()Z isInPoseTransition
	gL ()Z isVisuallySittingDown
	gj ()V sitDown
	gk ()V standUp
	gl ()V standUpInstantly
	a (J)V resetLastPoseChangeTick
	b (J)V resetLastPoseChangeTickToFullStand
	gm ()J getPoseTime
	R_ ()Lamg; getSaddleSoundEvent
	a (Laby;)V onSyncedDataUpdated
	D ()Lblt; createBodyControl
	gn ()Z isTamed
	b (Lbyo;)V openCustomInventoryScreen
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
bsx$a net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	a this$0
	<init> (Lbsx;Lbsx;)V <init>
	a ()V clientTick
bsx$b net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	l this$0
	<init> (Lbsx;)V <init>
	a ()V tick
bsy net/minecraft/world/entity/animal/camel/CamelAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	d SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	e SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f ADULT_FOLLOW_RANGE
	g SENSOR_TYPES
	h MEMORY_TYPES
	<init> ()V <init>
	a (Lbsx;Lapf;)V initMemories
	a ()Lbha$b; brainProvider
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	a (Lbsx;)V updateActivity
	b ()Lciz; getTemptations
	a (Lbfz;)Ljava/lang/Float; lambda$initIdleActivity$0
	<clinit> ()V <clinit>
bsy$a net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	<init> (F)V <init>
	b (Laif;Lbgi;J)V start
	d (Laif;Lbfz;J)V start
bsy$b net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	c minimalPoseTicks
	<init> (I)V <init>
	a (Laif;Lbsx;)Z checkExtraStartConditions
	a (Laif;Lbsx;J)V start
	a (Laif;Lbfz;)Z checkExtraStartConditions
	d (Laif;Lbfz;J)V start
bsz net/minecraft/world/entity/animal/camel/package-info
bta net/minecraft/world/entity/animal/frog/Frog
	bT TEMPTATION_ITEM
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	cc DATA_VARIANT_ID
	cd DATA_TONGUE_TARGET_ID
	ce FROG_FALL_DAMAGE_REDUCTION
	bX VARIANT_KEY
	bY jumpAnimationState
	bZ croakAnimationState
	ca tongueAnimationState
	cb swimIdleAnimationState
	<init> (Lbfn;Lcmm;)V <init>
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	a_ ()V defineSynchedData
	q ()V eraseTongueTarget
	r ()Ljava/util/Optional; getTongueTarget
	a (Lbfj;)V setTongueTarget
	fD ()I getHeadRotSpeed
	fC ()I getMaxHeadYRot
	w ()Lbrw; getVariant
	a (Lbrw;)V setVariant
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	dN ()Z canBreatheUnderwater
	W ()V customServerAiStep
	l ()V tick
	a (Laby;)V onSyncedDataUpdated
	v (F)V updateWalkAnimation
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	h_ ()Z isBaby
	a (Z)V setBaby
	a (Laif;Lbrl;)V spawnChildFromBreeding
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	fY ()Lbhf$a; createAttributes
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	cw ()Z isPushedByFluid
	V ()V sendDebugPackets
	d (FF)I calculateFallDamage
	h (Leei;)V travel
	l (Lbfz;)Z canEat
	b (Lcmm;)Lbpj; createNavigation
	m (Lcfz;)Z isFood
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkFrogSpawnRules
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	<clinit> ()V <clinit>
bta$a net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	h this$0
	<init> (Lbta;Lbgb;)V <init>
	c ()Z resetXRotOnTick
bta$b net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	l belowPos
	<init> (Z)V <init>
	a ()Ldxr; getStart
	a (Lcls;III)Ldxp; getBlockPathType
bta$c net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	<init> (Lbta;Lcmm;)V <init>
	b (Ldxp;)Z canCutCorner
	a (I)Ldxv; createPathFinder
btb net/minecraft/world/entity/animal/frog/FrogAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_WHEN_IDLING
	d SPEED_MULTIPLIER_ON_LAND
	e SPEED_MULTIPLIER_IN_WATER
	f TIME_BETWEEN_LONG_JUMPS
	g MAX_LONG_JUMP_HEIGHT
	h MAX_LONG_JUMP_WIDTH
	i MAX_JUMP_VELOCITY
	j SPEED_MULTIPLIER_WHEN_TEMPTED
	<init> ()V <init>
	a (Lbta;Lapf;)V initMemories
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	d (Lbha;)V initSwimActivity
	e (Lbha;)V initLaySpawnActivity
	f (Lbha;)V initJumpActivity
	g (Lbha;)V initTongueActivity
	a (Lbgb;Lgu;)Z isAcceptableLandingSpot
	b (Lbta;)Z canAttack
	a (Lbta;)V updateActivity
	a ()Lciz; getTemptations
	c (Lbta;)Lamg; lambda$initJumpActivity$5
	d (Lbta;)Ljava/util/Optional; lambda$initLaySpawnActivity$4
	e (Lbta;)Ljava/util/Optional; lambda$initSwimActivity$3
	a (Lbfz;)Ljava/lang/Float; lambda$initSwimActivity$2
	f (Lbta;)Ljava/util/Optional; lambda$initIdleActivity$1
	b (Lbfz;)Ljava/lang/Float; lambda$initIdleActivity$0
	<clinit> ()V <clinit>
btc net/minecraft/world/entity/animal/frog/ShootTongue
	c TIME_OUT_DURATION
	d CATCH_ANIMATION_DURATION
	e TONGUE_ANIMATION_DURATION
	h EATING_DISTANCE
	i EATING_MOVEMENT_FACTOR
	f UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	g MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	j eatAnimationTimer
	k calculatePathCounter
	l tongueSound
	m eatSound
	n itemSpawnPos
	o state
	<init> (Lamg;Lamg;)V <init>
	a (Laif;Lbta;)Z checkExtraStartConditions
	a (Laif;Lbta;J)Z canStillUse
	b (Laif;Lbta;J)V start
	c (Laif;Lbta;J)V stop
	b (Laif;Lbta;)V eatEntity
	d (Laif;Lbta;J)V tick
	a (Lbta;Lbfz;)Z canPathfindToTarget
	b (Lbta;Lbfz;)V addUnreachableTargetToMemory
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	c (Laif;Lbfz;J)V tick
	d (Laif;Lbfz;J)V start
btc$1 net/minecraft/world/entity/animal/frog/ShootTongue$1
	a $SwitchMap$net$minecraft$world$entity$animal$frog$ShootTongue$State
	<clinit> ()V <clinit>
btc$a net/minecraft/world/entity/animal/frog/ShootTongue$State
	a MOVE_TO_TARGET
	b CATCH_ANIMATION
	c EAT_ANIMATION
	d DONE
	e $VALUES
	values ()[Lbtc$a; values
	valueOf (Ljava/lang/String;)Lbtc$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbtc$a; $values
	<clinit> ()V <clinit>
btd net/minecraft/world/entity/animal/frog/Tadpole
	b ticksToBeFrog
	c HITBOX_WIDTH
	d HITBOX_HEIGHT
	bU age
	e SENSOR_TYPES
	bT MEMORY_TYPES
	<init> (Lbfn;Lcmm;)V <init>
	b (Lcmm;)Lbpj; createNavigation
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	fZ ()Lamg; getFlopSound
	W ()V customServerAiStep
	ga ()Lbhf$a; createAttributes
	b_ ()V aiStep
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	V ()V sendDebugPackets
	r ()Z fromBucket
	w (Z)V setFromBucket
	l (Lcfz;)V saveToBucketTag
	c (Lqr;)V loadFromBucketTag
	b ()Lcfz; getBucketItemStack
	w ()Lamg; getPickupSound
	m (Lcfz;)Z isFood
	a (Lbyo;Lcfz;)V feed
	b (Lbyo;Lcfz;)V usePlayerItem
	gb ()I getAge
	c (I)V ageUp
	s (I)V setAge
	gc ()V ageUp
	gd ()I getTicksLeftUntilAdult
	dY ()Z shouldDropExperience
	<clinit> ()V <clinit>
bte net/minecraft/world/entity/animal/frog/TadpoleAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	<init> ()V <init>
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	a (Lbtd;)V updateActivity
	a (Lbfz;)Ljava/lang/Float; lambda$initIdleActivity$0
btf net/minecraft/world/entity/animal/frog/package-info
btg net/minecraft/world/entity/animal/goat/Goat
	bT LONG_JUMPING_DIMENSIONS
	ca ADULT_ATTACK_DAMAGE
	cb BABY_ATTACK_DAMAGE
	bU SENSOR_TYPES
	bW MEMORY_TYPES
	bX GOAT_FALL_DAMAGE_REDUCTION
	bY GOAT_SCREAMING_CHANCE
	bZ UNIHORN_CHANCE
	cc DATA_IS_SCREAMING_GOAT
	cd DATA_HAS_LEFT_HORN
	ce DATA_HAS_RIGHT_HORN
	cf isLoweringHead
	cg lowerHeadTick
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lcfz; createHorn
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	r ()Lbhf$a; createAttributes
	m ()V ageBoundaryReached
	d (FF)I calculateFallDamage
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	w ()Lamg; getMilkingSound
	b (Laif;Lbfe;)Lbtg; getBreedOffspring
	dK ()Lbha; getBrain
	W ()V customServerAiStep
	fC ()I getMaxHeadYRot
	n (F)V setYHeadRot
	d (Lcfz;)Lamg; getEatingSound
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	V ()V sendDebugPackets
	a (Lbgl;)Lbfk; getDimensions
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (B)V handleEntityEvent
	b_ ()V aiStep
	a_ ()V defineSynchedData
	fY ()Z hasLeftHorn
	ge ()Z hasRightHorn
	gf ()Z dropHorn
	gg ()V addHorns
	gh ()V removeHorns
	gi ()Z isScreamingGoat
	w (Z)V setScreamingGoat
	gj ()F getRammingXHeadRot
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkGoatSpawnRules
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
bth net/minecraft/world/entity/animal/goat/GoatAi
	a RAM_PREPARE_TIME
	b RAM_MAX_DISTANCE
	i ADULT_FOLLOW_RANGE
	j SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	k SPEED_MULTIPLIER_WHEN_IDLING
	l SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	m SPEED_MULTIPLIER_WHEN_TEMPTED
	n SPEED_MULTIPLIER_WHEN_PANICKING
	o SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	p TIME_BETWEEN_LONG_JUMPS
	c MAX_LONG_JUMP_HEIGHT
	d MAX_LONG_JUMP_WIDTH
	e MAX_JUMP_VELOCITY
	q TIME_BETWEEN_RAMS
	r TIME_BETWEEN_RAMS_SCREAMER
	s RAM_TARGET_CONDITIONS
	t SPEED_MULTIPLIER_WHEN_RAMMING
	f RAM_MIN_DISTANCE
	g ADULT_RAM_KNOCKBACK_FORCE
	h BABY_RAM_KNOCKBACK_FORCE
	<init> ()V <init>
	a (Lbtg;Lapf;)V initMemories
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	d (Lbha;)V initLongJumpActivity
	e (Lbha;)V initRamActivity
	a (Lbtg;)V updateActivity
	a ()Lciz; getTemptations
	b (Lbtg;)Lamg; lambda$initRamActivity$8
	c (Lbtg;)I lambda$initRamActivity$7
	d (Lbtg;)Lamg; lambda$initRamActivity$6
	e (Lbtg;)Lamg; lambda$initRamActivity$5
	f (Lbtg;)D lambda$initRamActivity$4
	g (Lbtg;)Lbdi; lambda$initRamActivity$3
	h (Lbtg;)Lamg; lambda$initLongJumpActivity$2
	a (Lbfz;)Ljava/lang/Float; lambda$initIdleActivity$1
	b (Lbfz;)Z lambda$static$0
	<clinit> ()V <clinit>
bti net/minecraft/world/entity/animal/goat/package-info
btj net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bU DATA_ID_CHEST
	bT INV_CHEST_COUNT
	<init> (Lbfn;Lcmm;)V <init>
	a (Lapf;)V randomizeAttributes
	a_ ()V defineSynchedData
	q ()Lbhf$a; createBaseChestedHorseAttributes
	r ()Z hasChest
	w (Z)V setChest
	V_ ()I getInventorySize
	bx ()D getPassengersRidingOffset
	eu ()V dropEquipment
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a_ (I)Lbgs; getSlot
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	d (Lbyo;Lcfz;)V equipChest
	fY ()V playChestEquipsSound
	gg ()I getInventoryColumns
	<clinit> ()V <clinit>
btj$1 net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	a this$0
	<init> (Lbtj;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
btk net/minecraft/world/entity/animal/horse/AbstractHorse
	ce EQUIPMENT_SLOT_OFFSET
	cf CHEST_SLOT_OFFSET
	cg INVENTORY_SLOT_OFFSET
	ch BREEDING_CROSS_FACTOR
	bT MIN_MOVEMENT_SPEED
	bU MAX_MOVEMENT_SPEED
	bW MIN_JUMP_STRENGTH
	bX MAX_JUMP_STRENGTH
	bY MIN_HEALTH
	bZ MAX_HEALTH
	ca BACKWARDS_MOVE_SPEED_FACTOR
	cb SIDEWAYS_MOVE_SPEED_FACTOR
	cc PARENT_HORSE_SELECTOR
	cd MOMMY_TARGETING
	cu FOOD_ITEMS
	cv DATA_ID_FLAGS
	cw FLAG_TAME
	cx FLAG_SADDLE
	cy FLAG_BRED
	cz FLAG_EATING
	cA FLAG_STANDING
	cB FLAG_OPEN_MOUTH
	ci INV_SLOT_SADDLE
	cj INV_SLOT_ARMOR
	ck INV_BASE_COUNT
	cC eatingCounter
	cD mouthCounter
	cE standCounter
	cl tailCounter
	cm sprintCounter
	cn isJumping
	co inventory
	cp temper
	cq playerJumpPendingScale
	cr allowStandSliding
	cF eatAnim
	cG eatAnimO
	cH standAnim
	cI standAnimO
	cJ mouthAnim
	cK mouthAnimO
	cs canGallop
	ct gallopSoundCounter
	cL owner
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	go ()V addBehaviourGoals
	a_ ()V defineSynchedData
	t (I)Z getFlag
	d (IZ)V setFlag
	gn ()Z isTamed
	U_ ()Ljava/util/UUID; getOwnerUUID
	b (Ljava/util/UUID;)V setOwnerUUID
	gp ()Z isJumping
	x (Z)V setTamed
	y (Z)V setIsJumping
	C (F)V onLeashDistance
	gq ()Z isEating
	gr ()Z isStanding
	gs ()Z isBred
	z (Z)V setBred
	g ()Z isSaddleable
	a (Lami;)V equipSaddle
	b (Lbyo;Lcfz;)V equipArmor
	i ()Z isSaddled
	gt ()I getTemper
	u (I)V setTemper
	v (I)I modifyTemper
	bp ()Z isPushable
	q ()V eating
	a (FFLben;)Z causeFallDamage
	d (FF)I calculateFallDamage
	V_ ()I getInventorySize
	gu ()V createInventory
	gv ()V updateContainerEquipment
	a (Lbdq;)V containerChanged
	gw ()D getCustomJump
	a (Lben;F)Z hurt
	ge ()Z canPerformRearing
	gf ()Lamg; getEatingSound
	gx ()Lamg; getAngrySound
	b (Lgu;Ldcb;)V playStepSound
	b (Lcxa;)Z isWoodSoundType
	a (Lcxa;)V playGallopSound
	gy ()Lbhf$a; createBaseHorseAttributes
	fE ()I getMaxSpawnClusterSize
	gz ()I getMaxTemper
	eR ()F getSoundVolume
	M ()I getAmbientSoundInterval
	b (Lbyo;)V openCustomInventoryScreen
	c (Lbyo;Lcfz;)Lbdx; fedFood
	a (Lbyo;Lcfz;)Z handleEating
	f (Lbyo;)V doPlayerRide
	eT ()Z isImmobile
	m (Lcfz;)Z isFood
	r ()V moveTail
	eu ()V dropEquipment
	b_ ()V aiStep
	gA ()V followMommy
	gB ()Z canEatGrass
	l ()V tick
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	fY ()V openMouth
	A (Z)V setEating
	B (Z)V setStanding
	gC ()Lamg; getAmbientStandSound
	gD ()V standIfPossible
	gE ()V makeMad
	h (Lbyo;)Z tameWithName
	a (Lbyo;Leei;)V tickRidden
	l (Lbfz;)Leeh; getRiddenRotation
	b (Lbyo;Leei;)Leei; getRiddenInput
	e (Lbyo;)F getRiddenSpeed
	b (FLeei;)V executeRidersJump
	gF ()V playJumpSound
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbrl;)Z canMate
	gG ()Z canParent
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	a (Lbfe;Lbtk;)V setOffspringAttributes
	a (Lbfe;Lbtk;Lbhb;DD)V setOffspringAttribute
	a (DDDDLapf;)D createOffspringAttribute
	D (F)F getEatAnim
	E (F)F getStandAnim
	F (F)F getMouthAnim
	b (I)V onPlayerJump
	a ()Z canJump
	c (I)V handleStartJump
	b ()V handleStopJump
	C (Z)V spawnTamingParticles
	b (B)V handleEntityEvent
	a (Lbfj;Lbfj$a;)V positionRider
	a (Ljava/util/function/IntUnaryOperator;)F generateMaxHealth
	a (Ljava/util/function/DoubleSupplier;)D generateJumpStrength
	b (Ljava/util/function/DoubleSupplier;)D generateSpeed
	i_ ()Z onClimbable
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	gH ()Z canWearArmor
	gI ()Z isWearingArmor
	l (Lcfz;)Z isArmor
	a (ILjava/util/function/Predicate;)Lbgs; createEquipmentSlotAccess
	a_ (I)Lbgs; getSlot
	cL ()Lbfz; getControllingPassenger
	a (Leei;Lbfz;)Leei; getDismountLocationInDirection
	b (Lbfz;)Leei; getDismountLocationForPassenger
	a (Lapf;)V randomizeAttributes
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbdq;)Z hasInventoryChanged
	gJ ()I getAmbientStandInterval
	e ()Lcmd; level
	n (Lcfz;)Z lambda$getSlot$8
	o (Lcfz;)Z lambda$getSlot$7
	m (Lbfz;)Z lambda$static$6
	w (I)I lambda$static$5
	x (I)I lambda$static$4
	gg ()D lambda$static$3
	gh ()D lambda$static$2
	gi ()D lambda$static$1
	gj ()D lambda$static$0
	<clinit> ()V <clinit>
btk$1 net/minecraft/world/entity/animal/horse/AbstractHorse$1
	a val$slot
	c val$check
	d this$0
	<init> (Lbtk;ILjava/util/function/Predicate;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
btl net/minecraft/world/entity/animal/horse/Donkey
	<init> (Lbfn;Lcmm;)V <init>
	s ()Lamg; getAmbientSound
	gx ()Lamg; getAngrySound
	g_ ()Lamg; getDeathSound
	gf ()Lamg; getEatingSound
	d (Lben;)Lamg; getHurtSound
	a (Lbrl;)Z canMate
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
btm net/minecraft/world/entity/animal/horse/Horse
	bT ARMOR_MODIFIER_UUID
	bU DATA_ID_TYPE_VARIANT
	<init> (Lbfn;Lcmm;)V <init>
	a (Lapf;)V randomizeAttributes
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	q ()Lcfz; getArmor
	n (Lcfz;)V setArmor
	a (Lqr;)V readAdditionalSaveData
	w (I)V setTypeVariant
	gg ()I getTypeVariant
	a (Lbtt;Lbto;)V setVariantAndMarkings
	r ()Lbtt; getVariant
	a (Lbtt;)V setVariant
	fY ()Lbto; getMarkings
	gv ()V updateContainerEquipment
	o (Lcfz;)V setArmorEquipment
	a (Lbdq;)V containerChanged
	a (Lcxa;)V playGallopSound
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	gf ()Lamg; getEatingSound
	d (Lben;)Lamg; getHurtSound
	gx ()Lamg; getAngrySound
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	a (Lbrl;)Z canMate
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	gH ()Z canWearArmor
	l (Lcfz;)Z isArmor
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	<clinit> ()V <clinit>
btm$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
	<init> (Lbtt;)V <init>
btn net/minecraft/world/entity/animal/horse/Llama
	bU MAX_STRENGTH
	bW FOOD_ITEMS
	bX DATA_STRENGTH_ID
	bY DATA_SWAG_ID
	bZ DATA_VARIANT_ID
	ca didSpit
	cb caravanHead
	cc caravanTail
	<init> (Lbfn;Lcmm;)V <init>
	gh ()Z isTraderLlama
	w (I)V setStrength
	b (Lapf;)V setRandomStrength
	gi ()I getStrength
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	x ()V registerGoals
	gj ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	gk ()Lbtn$d; getVariant
	a (Lbtn$d;)V setVariant
	V_ ()I getInventorySize
	a (Lbfj;Lbfj$a;)V positionRider
	bx ()D getPassengersRidingOffset
	cL ()Lbfz; getControllingPassenger
	m (Lcfz;)Z isFood
	a (Lbyo;Lcfz;)Z handleEating
	eT ()Z isImmobile
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	ge ()Z canPerformRearing
	gx ()Lamg; getAngrySound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	gf ()Lamg; getEatingSound
	b (Lgu;Ldcb;)V playStepSound
	fY ()V playChestEquipsSound
	gg ()I getInventoryColumns
	gH ()Z canWearArmor
	gI ()Z isWearingArmor
	l (Lcfz;)Z isArmor
	g ()Z isSaddleable
	a (Lbdq;)V containerChanged
	gv ()V updateContainerEquipment
	a (Lcen;)V setSwag
	n (Lcfz;)Lcen; getDyeColor
	gl ()Lcen; getSwag
	gz ()I getMaxTemper
	a (Lbrl;)Z canMate
	b (Laif;Lbfe;)Lbtn; getBreedOffspring
	gm ()Lbtn; makeNewLlama
	m (Lbfz;)V spit
	D (Z)V setDidSpit
	a (FFLben;)Z causeFallDamage
	gK ()V leaveCaravan
	a (Lbtn;)V joinCaravan
	gL ()Z hasCaravanTail
	gM ()Z inCaravan
	gN ()Lbtn; getCaravanHead
	fX ()D followLeashSpeed
	gA ()V followMommy
	gB ()Z canEatGrass
	a (Lbfz;F)V performRangedAttack
	cG ()Leei; getLeashOffset
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	<clinit> ()V <clinit>
btn$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	<init> (Lbtn;)V <init>
	l ()D getFollowDistance
	b (Lbfz;)Z lambda$new$0
btn$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
	<init> (Lbtn$d;)V <init>
btn$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	<init> (Lbtn;)V <init>
	b ()Z canContinueToUse
btn$d net/minecraft/world/entity/animal/horse/Llama$Variant
	a CREAMY
	b WHITE
	c BROWN
	d GRAY
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	values ()[Lbtn$d; values
	valueOf (Ljava/lang/String;)Lbtn$d; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	a (I)Lbtn$d; byId
	c ()Ljava/lang/String; getSerializedName
	b ()[Lbtn$d; $values
	<clinit> ()V <clinit>
bto net/minecraft/world/entity/animal/horse/Markings
	a NONE
	b WHITE
	c WHITE_FIELD
	d WHITE_DOTS
	e BLACK_DOTS
	f BY_ID
	g id
	h $VALUES
	values ()[Lbto; values
	valueOf (Ljava/lang/String;)Lbto; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getId
	a (I)Lbto; byId
	b ()[Lbto; $values
	<clinit> ()V <clinit>
btp net/minecraft/world/entity/animal/horse/Mule
	<init> (Lbfn;Lcmm;)V <init>
	s ()Lamg; getAmbientSound
	gx ()Lamg; getAngrySound
	g_ ()Lamg; getDeathSound
	gf ()Lamg; getEatingSound
	d (Lben;)Lamg; getHurtSound
	fY ()V playChestEquipsSound
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
btq net/minecraft/world/entity/animal/horse/SkeletonHorse
	bT skeletonTrapGoal
	bU TRAP_MAX_LIFE
	bW isTrap
	bX trapTime
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lbhf$a; createAttributes
	a (Lapf;)V randomizeAttributes
	go ()V addBehaviourGoals
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	aJ ()Lamg; getSwimSound
	e (F)V playSwimSound
	gF ()V playJumpSound
	eN ()Lbge; getMobType
	bx ()D getPassengersRidingOffset
	b_ ()V aiStep
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	eY ()F getWaterSlowDown
	r ()Z isTrap
	w (Z)V setTrap
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	b (Lbyo;Lbdw;)Lbdx; mobInteract
btr net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	<init> (Lbtq;)V <init>
	a ()Z canUse
	e ()V tick
	a (Lbdv;)Lbtk; createHorse
	a (Lbdv;Lbtk;)Lbwk; createSkeleton
	a (Lcfz;)Lcfz; disenchant
bts net/minecraft/world/entity/animal/horse/TraderLlama
	bU despawnDelay
	<init> (Lbfn;Lcmm;)V <init>
	gh ()Z isTraderLlama
	gm ()Lbtn; makeNewLlama
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	x ()V registerGoals
	w (I)V setDespawnDelay
	f (Lbyo;)V doPlayerRide
	b_ ()V aiStep
	gO ()V maybeDespawn
	gP ()Z canDespawn
	gQ ()Z isLeashedToWanderingTrader
	gR ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
bts$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	a llama
	b ownerLastHurtBy
	c timestamp
	<init> (Lbtn;)V <init>
	a ()Z canUse
	c ()V start
btt net/minecraft/world/entity/animal/horse/Variant
	a WHITE
	b CREAMY
	c CHESTNUT
	d BROWN
	e BLACK
	f GRAY
	g DARK_BROWN
	h CODEC
	i BY_ID
	j id
	k name
	l $VALUES
	values ()[Lbtt; values
	valueOf (Ljava/lang/String;)Lbtt; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	a (I)Lbtt; byId
	c ()Ljava/lang/String; getSerializedName
	b ()[Lbtt; $values
	<clinit> ()V <clinit>
btu net/minecraft/world/entity/animal/horse/ZombieHorse
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lbhf$a; createAttributes
	a (Lapf;)V randomizeAttributes
	eN ()Lbge; getMobType
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	go ()V addBehaviourGoals
btv net/minecraft/world/entity/animal/horse/package-info
btw net/minecraft/world/entity/animal/package-info
btx net/minecraft/world/entity/animal/sniffer/Sniffer
	bZ DIGGING_PARTICLES_DELAY_TICKS
	ca DIGGING_PARTICLES_DURATION_TICKS
	cb DIGGING_PARTICLES_AMOUNT
	cc DIGGING_DROP_SEED_OFFSET_TICKS
	cd SNIFFER_BABY_AGE_TICKS
	ce DIGGING_BB_HEIGHT_OFFSET
	cf DIGGING_DIMENSIONS
	cg DATA_STATE
	ch DATA_DROP_SEED_AT_TICK
	bT feelingHappyAnimationState
	bU scentingAnimationState
	bW sniffingAnimationState
	bX diggingAnimationState
	bY risingAnimationState
	q ()Lbhf$a; createAttributes
	<init> (Lbfn;Lcmm;)V <init>
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	A ()V onPathfindingStart
	C ()V onPathfindingDone
	a (Lbgl;)Lbfk; getDimensions
	r ()Z isPanicking
	w ()Z isSearching
	fY ()Z isTempted
	ge ()Z canSniff
	gf ()Z canPlayDiggingSound
	gi ()Lgu; getHeadBlock
	gj ()Leei; getHeadPosition
	gk ()Lbtx$a; getState
	b (Lbtx$a;)Lbtx; setState
	a (Laby;)V onSyncedDataUpdated
	gl ()V resetAnimations
	a (Lbtx$a;)Lbtx; transitionTo
	gm ()Lbtx; onScentingStart
	gn ()Lbtx; onDiggingStart
	w (Z)Lbtx; onDiggingComplete
	gg ()Ljava/util/Optional; calculateDigPosition
	gh ()Z canDig
	i (Lgu;)Z canDig
	go ()V dropSeed
	a (Lbff;)Lbtx; emitDiggingParticles
	j (Lgu;)Lbtx; storeExploredPosition
	gp ()Ljava/util/stream/Stream; getExploredPositions
	eW ()V jumpFromGround
	a (Laif;Lbrl;)V spawnChildFromBreeding
	a (Lben;)V die
	l ()V tick
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	bx ()D getPassengersRidingOffset
	df ()F getNameTagOffsetY
	gq ()V playSearchingSound
	b (Lgu;Ldcb;)V playStepSound
	d (Lcfz;)Lamg; getEatingSound
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	fC ()I getMaxHeadYRot
	a (Z)V setBaby
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	a (Lbrl;)Z canMate
	j_ ()Leed; getBoundingBoxForCulling
	m (Lcfz;)Z isFood
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	dL ()Lbha$b; brainProvider
	W ()V customServerAiStep
	V ()V sendDebugPackets
	a (Lgu;Lhd;)Z lambda$canDig$2
	k (Lgu;)Z lambda$calculateDigPosition$1
	t (I)Leei; lambda$calculateDigPosition$0
	<clinit> ()V <clinit>
btx$1 net/minecraft/world/entity/animal/sniffer/Sniffer$1
	a $SwitchMap$net$minecraft$world$entity$animal$sniffer$Sniffer$State
	<clinit> ()V <clinit>
btx$a net/minecraft/world/entity/animal/sniffer/Sniffer$State
	a IDLING
	b FEELING_HAPPY
	c SCENTING
	d SNIFFING
	e SEARCHING
	f DIGGING
	g RISING
	h $VALUES
	values ()[Lbtx$a; values
	valueOf (Ljava/lang/String;)Lbtx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbtx$a; $values
	<clinit> ()V <clinit>
bty net/minecraft/world/entity/animal/sniffer/SnifferAi
	c LOGGER
	d MAX_LOOK_DISTANCE
	a SENSOR_TYPES
	b MEMORY_TYPES
	e SNIFFING_COOLDOWN_TICKS
	f SPEED_MULTIPLIER_WHEN_IDLING
	g SPEED_MULTIPLIER_WHEN_PANICKING
	h SPEED_MULTIPLIER_WHEN_SNIFFING
	i SPEED_MULTIPLIER_WHEN_TEMPTED
	<init> ()V <init>
	a ()Lciz; getTemptations
	a (Lbha;)Lbha; makeBrain
	b (Lbtx;)Lbtx; resetSniffing
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initSniffingActivity
	d (Lbha;)V initDigActivity
	e (Lbha;)V initIdleActivity
	a (Lbtx;)V updateActivity
	a (Lbfz;)Ljava/lang/Double; lambda$initIdleActivity$1
	b (Lbfz;)Ljava/lang/Float; lambda$initIdleActivity$0
	<clinit> ()V <clinit>
bty$1 net/minecraft/world/entity/animal/sniffer/SnifferAi$1
	<init> (F)V <init>
	b (Laif;Lbgi;J)V start
	d (Laif;Lbfz;J)V start
bty$2 net/minecraft/world/entity/animal/sniffer/SnifferAi$2
	<init> (Lbfn;F)V <init>
	a (Laif;Lbrl;J)V start
	d (Laif;Lbfz;J)V start
bty$3 net/minecraft/world/entity/animal/sniffer/SnifferAi$3
	<init> (Ljava/util/function/Function;Ljava/util/function/Function;)V <init>
	b (Laif;Lbgi;J)V start
	d (Laif;Lbfz;J)V start
bty$a net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	<init> (II)V <init>
	a (Laif;Lbtx;)Z checkExtraStartConditions
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bty$b net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	<init> (II)V <init>
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bty$c net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	<init> (I)V <init>
	a (Laif;Lbtx;)Z checkExtraStartConditions
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bty$d net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	<init> (II)V <init>
	a (Laif;Lbtx;)Z checkExtraStartConditions
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bty$e net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	<init> ()V <init>
	a (Laif;Lbtx;)Z checkExtraStartConditions
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
bty$f net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	<init> (II)V <init>
	a (Laif;Lbtx;)Z checkExtraStartConditions
	a (Laif;Lbtx;J)Z canStillUse
	b (Laif;Lbtx;J)V start
	c (Laif;Lbtx;J)V stop
	a (Laif;Lbfz;)Z checkExtraStartConditions
	a (Laif;Lbfz;J)Z canStillUse
	b (Laif;Lbfz;J)V stop
	d (Laif;Lbfz;J)V start
	a (Lbtx;Lgu;)V lambda$stop$0
btz net/minecraft/world/entity/boss/EnderDragonPart
	b parentMob
	c name
	d size
	<init> (Lbub;Ljava/lang/String;FF)V <init>
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	bo ()Z isPickable
	dv ()Lcfz; getPickResult
	a (Lben;F)Z hurt
	q (Lbfj;)Z is
	S ()Luo; getAddEntityPacket
	a (Lbgl;)Lbfk; getDimensions
	dG ()Z shouldBeSaved
bua net/minecraft/world/entity/boss/enderdragon/EndCrystal
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	b time
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	l ()V tick
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	bo ()Z isPickable
	a (Lben;F)Z hurt
	ah ()V kill
	a (Lben;)V onDestroyedBy
	a (Lgu;)V setBeamTarget
	j ()Lgu; getBeamTarget
	a (Z)V setShowBottom
	k ()Z showsBottom
	a (D)Z shouldRenderAtSqrDistance
	dv ()Lcfz; getPickResult
	<clinit> ()V <clinit>
bub net/minecraft/world/entity/boss/enderdragon/EnderDragon
	bY LOGGER
	b DATA_PHASE
	bZ CRYSTAL_DESTROY_TARGETING
	ca GROWL_INTERVAL_MIN
	cb GROWL_INTERVAL_MAX
	cc SITTING_ALLOWED_DAMAGE_PERCENTAGE
	cd DRAGON_DEATH_TIME_KEY
	ce DRAGON_PHASE_KEY
	c positions
	d posPointer
	cf subEntities
	e head
	cg neck
	ch body
	ci tail1
	cj tail2
	ck tail3
	cl wing1
	cm wing2
	bS oFlapTime
	bT flapTime
	bU inWall
	bV dragonDeathTime
	bW yRotA
	bX nearestCrystal
	cn dragonFight
	co fightOrigin
	cp phaseManager
	cq growlTime
	cr sittingDamageReceived
	cs nodes
	ct nodeAdjacency
	cu openSet
	<init> (Lbfn;Lcmm;)V <init>
	a (Ldfn;)V setDragonFight
	h (Lgu;)V setFightOrigin
	q ()Lgu; getFightOrigin
	r ()Lbhf$a; createAttributes
	aP ()Z isFlapping
	aO ()V onFlap
	a_ ()V defineSynchedData
	a (IF)[D getLatencyPos
	b_ ()V aiStep
	a (Lbtz;DDD)V tickPart
	fY ()F getHeadYOffset
	fZ ()V checkCrystals
	b (Ljava/util/List;)V knockBack
	c (Ljava/util/List;)V hurt
	i (D)F rotWrap
	b (Leed;)Z checkWalls
	a (Lbtz;Lben;F)Z hurt
	a (Lben;F)Z hurt
	g (Lben;F)Z reallyHurt
	ah ()V kill
	dX ()V tickDeath
	w ()I findClosestNode
	r (DDD)I findClosestNode
	a (IILdxr;)Ldxt; findPath
	a (Ldxr;Ldxr;)Ldxt; reconstructPath
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	du ()V checkDespawn
	fV ()[Lbtz; getSubEntities
	bo ()Z isPickable
	cY ()Lami; getSoundSource
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	eR ()F getSoundVolume
	a (I[D[D)F getHeadPartYOffset
	C (F)Leei; getHeadLookVector
	a (Lbua;Lgu;Lben;)V onCrystalDestroyed
	a (Laby;)V onSyncedDataUpdated
	fW ()Lbus; getPhaseManager
	fX ()Ldfn; getDragonFight
	b (Lbfa;Lbfj;)Z addEffect
	l (Lbfj;)Z canRide
	cq ()Z canChangeDimensions
	a (Lus;)V recreateFromPacket
	c (Lbfz;)Z canAttack
	bx ()D getPassengersRidingOffset
	<clinit> ()V <clinit>
buc net/minecraft/world/entity/boss/enderdragon/package-info
bud net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	<init> (Lbub;)V <init>
	a ()Z isSitting
	b ()V doClientTick
	c ()V doServerTick
	a (Lbua;Lgu;Lben;Lbyo;)V onCrystalDestroyed
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Leei; getFlyTargetLocation
	a (Lben;F)F onHurt
	h ()F getTurnSpeed
bue net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	<init> (Lbub;)V <init>
	a ()Z isSitting
	a (Lben;F)F onHurt
buf net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c CHARGE_RECOVERY_TIME
	d targetLocation
	e timeSinceCharge
	<init> (Lbub;)V <init>
	c ()V doServerTick
	d ()V begin
	a (Leei;)V setTarget
	f ()F getFlySpeed
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
	<clinit> ()V <clinit>
bug net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	<init> (Lbub;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
buh net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	<init> (Lbub;)V <init>
	i ()Lbur; getPhase
	c ()V doServerTick
	d ()V begin
	g ()Leei; getFlyTargetLocation
	j ()V findNewTarget
	a (Lbyo;)V strafePlayer
	k ()V navigateToNextPathNode
	a (Lbua;Lgu;Lben;Lbyo;)V onCrystalDestroyed
	<clinit> ()V <clinit>
bui net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	<init> (Lbub;)V <init>
	c ()V doServerTick
	a ()Z isSitting
	d ()V begin
	f ()F getFlySpeed
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
buj net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	<init> (Lbub;)V <init>
	i ()Lbur; getPhase
	d ()V begin
	c ()V doServerTick
	g ()Leei; getFlyTargetLocation
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	<clinit> ()V <clinit>
buk net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	<init> (Lbub;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	f ()F getFlySpeed
	h ()F getTurnSpeed
	d ()V begin
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
bul net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	b ()V doClientTick
	c ()V doServerTick
	a (Lbua;Lgu;Lben;Lbyo;)V onCrystalDestroyed
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	h ()F getTurnSpeed
	i ()Lbur; getPhase
	g ()Leei; getFlyTargetLocation
	a (Lben;F)F onHurt
bum net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b ROAR_DURATION
	c attackingTicks
	<init> (Lbub;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lbur; getPhase
bun net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b FLAME_DURATION
	c SITTING_FLAME_ATTACKS_COUNT
	d WARMUP_TIME
	e flameTicks
	f flameCount
	g flame
	<init> (Lbub;)V <init>
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lbur; getPhase
	j ()V resetFlameCount
buo net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b SITTING_SCANNING_IDLE_TICKS
	c SITTING_ATTACK_Y_VIEW_RANGE
	d SITTING_ATTACK_VIEW_RANGE
	e SITTING_CHARGE_VIEW_RANGE
	f CHARGE_TARGETING
	g scanTargeting
	h scanningTime
	<init> (Lbub;)V <init>
	c ()V doServerTick
	d ()V begin
	i ()Lbur; getPhase
	a (Lbub;Lbfz;)Z lambda$new$0
	<clinit> ()V <clinit>
bup net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c FIREBALL_CHARGE_AMOUNT
	d fireballCharge
	e currentPath
	f targetLocation
	g attackTarget
	h holdingPatternClockwise
	<init> (Lbub;)V <init>
	c ()V doServerTick
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	d ()V begin
	a (Lbfz;)V setTarget
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
	<clinit> ()V <clinit>
buq net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	<init> (Lbub;)V <init>
	c ()V doServerTick
	d ()V begin
	j ()V findNewTarget
	k ()V navigateToNextPathNode
	g ()Leei; getFlyTargetLocation
	i ()Lbur; getPhase
bur net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	l phases
	a HOLDING_PATTERN
	b STRAFE_PLAYER
	c LANDING_APPROACH
	d LANDING
	e TAKEOFF
	f SITTING_FLAMING
	g SITTING_SCANNING
	h SITTING_ATTACKING
	i CHARGING_PLAYER
	j DYING
	k HOVERING
	m instanceClass
	n id
	o name
	<init> (ILjava/lang/Class;Ljava/lang/String;)V <init>
	a (Lbub;)Lbul; createInstance
	a ()Ljava/lang/reflect/Constructor; getConstructor
	b ()I getId
	toString ()Ljava/lang/String; toString
	a (I)Lbur; getById
	c ()I getCount
	a (Ljava/lang/Class;Ljava/lang/String;)Lbur; create
	<clinit> ()V <clinit>
bus net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	b dragon
	c phases
	d currentPhase
	<init> (Lbub;)V <init>
	a (Lbur;)V setPhase
	a ()Lbul; getCurrentPhase
	b (Lbur;)Lbul; getPhase
	<clinit> ()V <clinit>
but net/minecraft/world/entity/boss/enderdragon/phases/package-info
buu net/minecraft/world/entity/boss/package-info
buv net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	c DATA_TARGET_B
	d DATA_TARGET_C
	e DATA_TARGETS
	bT DATA_ID_INV
	bU INVULNERABLE_TICKS
	bV xRotHeads
	bW yRotHeads
	bX xRotOHeads
	bY yRotOHeads
	bZ nextHeadUpdate
	ca idleHeadUpdates
	cb destroyBlocksTick
	cc bossEvent
	cd LIVING_ENTITY_SELECTOR
	ce TARGETING_CONDITIONS
	<init> (Lbfn;Lcmm;)V <init>
	b (Lcmm;)Lbpj; createNavigation
	x ()V registerGoals
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (Lsw;)V setCustomName
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b_ ()V aiStep
	W ()V customServerAiStep
	d (Ldcb;)Z canDestroy
	q ()V makeInvulnerable
	a (Ldcb;Leei;)V makeStuckInBlock
	c (Laig;)V startSeenByPlayer
	d (Laig;)V stopSeenByPlayer
	u (I)D getHeadX
	v (I)D getHeadY
	w (I)D getHeadZ
	a (FFF)F rotlerp
	a (ILbfz;)V performRangedAttack
	a (IDDDZ)V performRangedAttack
	a (Lbfz;F)V performRangedAttack
	a (Lben;F)Z hurt
	a (Lben;IZ)V dropCustomDeathLoot
	du ()V checkDespawn
	b (Lbfa;Lbfj;)Z addEffect
	r ()Lbhf$a; createAttributes
	b (I)F getHeadYRot
	c (I)F getHeadXRot
	w ()I getInvulnerableTicks
	s (I)V setInvulnerableTicks
	t (I)I getAlternativeTarget
	a (II)V setAlternativeTarget
	a ()Z isPowered
	eN ()Lbge; getMobType
	l (Lbfj;)Z canRide
	cq ()Z canChangeDimensions
	c (Lbfa;)Z canBeAffected
	l (Lbfz;)Z lambda$static$0
	<clinit> ()V <clinit>
buv$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a this$0
	<init> (Lbuv;)V <init>
	a ()Z canUse
buw net/minecraft/world/entity/boss/wither/package-info
bux net/minecraft/world/entity/decoration/ArmorStand
	b WOBBLE_TIME
	bK ENABLE_ARMS
	bL DEFAULT_HEAD_POSE
	bM DEFAULT_BODY_POSE
	bN DEFAULT_LEFT_ARM_POSE
	bO DEFAULT_RIGHT_ARM_POSE
	bP DEFAULT_LEFT_LEG_POSE
	bQ DEFAULT_RIGHT_LEG_POSE
	bR MARKER_DIMENSIONS
	bS BABY_DIMENSIONS
	bT FEET_OFFSET
	bU CHEST_OFFSET
	bV LEGS_OFFSET
	bW HEAD_OFFSET
	c DISABLE_TAKING_OFFSET
	d DISABLE_PUTTING_OFFSET
	e CLIENT_FLAG_SMALL
	f CLIENT_FLAG_SHOW_ARMS
	g CLIENT_FLAG_NO_BASEPLATE
	bB CLIENT_FLAG_MARKER
	bC DATA_CLIENT_FLAGS
	bD DATA_HEAD_POSE
	bE DATA_BODY_POSE
	bF DATA_LEFT_ARM_POSE
	bG DATA_RIGHT_ARM_POSE
	bH DATA_LEFT_LEG_POSE
	bI DATA_RIGHT_LEG_POSE
	bX RIDABLE_MINECARTS
	bY handItems
	bZ armorItems
	ca invisible
	bJ lastHit
	cb disabledSlots
	cc headPose
	cd bodyPose
	ce leftArmPose
	cf rightArmPose
	cg leftLegPose
	ch rightLegPose
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	d_ ()V refreshDimensions
	E ()Z hasPhysics
	cV ()Z isEffectiveAi
	a_ ()V defineSynchedData
	bI ()Ljava/lang/Iterable; getHandSlots
	bJ ()Ljava/lang/Iterable; getArmorSlots
	c (Lbfo;)Lcfz; getItemBySlot
	a (Lbfo;Lcfz;)V setItemSlot
	f (Lcfz;)Z canTakeItem
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	c (Lqr;)V readPose
	G ()Lqr; writePose
	bp ()Z isPushable
	A (Lbfj;)V doPush
	fd ()V pushEntities
	a (Lbyo;Leei;Lbdw;)Lbdx; interactAt
	j (Leei;)Lbfo; getClickedSlot
	e (Lbfo;)Z isDisabled
	a (Lbyo;Lbfo;Lcfz;Lbdw;)Z swapItem
	a (Lben;F)Z hurt
	b (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	I ()V showBreakingParticles
	g (Lben;F)V causeDamage
	h (Lben;)V brokenByPlayer
	i (Lben;)V brokenByAnything
	J ()V playBrokenSound
	e (FF)F tickHeadTurn
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	bw ()D getMyRidingOffset
	h (Leei;)V travel
	o (F)V setYBodyRot
	n (F)V setYHeadRot
	l ()V tick
	F ()V updateInvisibilityStatus
	j (Z)V setInvisible
	h_ ()Z isBaby
	ah ()V kill
	cJ ()Z ignoreExplosion
	l_ ()Ldxj; getPistonPushReaction
	c_ ()Z isIgnoringBlockTriggers
	t (Z)V setSmall
	q ()Z isSmall
	a (Z)V setShowArms
	r ()Z isShowArms
	s (Z)V setNoBasePlate
	s ()Z isNoBasePlate
	u (Z)V setMarker
	w ()Z isMarker
	a (BIZ)B setBit
	a (Lhw;)V setHeadPose
	b (Lhw;)V setBodyPose
	c (Lhw;)V setLeftArmPose
	d (Lhw;)V setRightArmPose
	e (Lhw;)V setLeftLegPose
	f (Lhw;)V setRightLegPose
	x ()Lhw; getHeadPose
	y ()Lhw; getBodyPose
	z ()Lhw; getLeftArmPose
	A ()Lhw; getRightArmPose
	C ()Lhw; getLeftLegPose
	D ()Lhw; getRightLegPose
	bo ()Z isPickable
	r (Lbfj;)Z skipAttackInteraction
	fh ()Lbft; getMainArm
	eC ()Lbfz$a; getFallSounds
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	a (Laif;Lbfy;)V thunderHit
	ft ()Z isAffectedByPotions
	a (Laby;)V onSyncedDataUpdated
	fu ()Z attackable
	a (Lbgl;)Lbfk; getDimensions
	v (Z)Lbfk; getDimensionsMarker
	k (F)Leei; getLightProbePosition
	dv ()Lcfz; getPickResult
	el ()Z canBeSeenByAnyone
	a (Lbfj;)Z lambda$static$0
	<clinit> ()V <clinit>
bux$1 net/minecraft/world/entity/decoration/ArmorStand$1
	a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	<clinit> ()V <clinit>
buy net/minecraft/world/entity/decoration/GlowItemFrame
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lgu;Lha;)V <init>
	j ()Lamg; getRemoveItemSound
	k ()Lamg; getBreakSound
	o ()Lamg; getPlaceSound
	p ()Lamg; getAddItemSound
	q ()Lamg; getRotateItemSound
	r ()Lcfz; getFrameItemStack
buz net/minecraft/world/entity/decoration/HangingEntity
	e LOGGER
	b HANGING_ENTITY
	f checkInterval
	c pos
	d direction
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;Lcmm;Lgu;)V <init>
	a_ ()V defineSynchedData
	a (Lha;)V setDirection
	s ()V recalculateBoundingBox
	b (I)D offs
	l ()V tick
	t ()Z survives
	bo ()Z isPickable
	r (Lbfj;)Z skipAttackInteraction
	cB ()Lha; getDirection
	a (Lben;F)Z hurt
	a (Lbgf;Leei;)V move
	j (DDD)V push
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	v ()I getWidth
	w ()I getHeight
	a (Lbfj;)V dropItem
	x ()V playPlacementSound
	a (Lcfz;F)Lbvh; spawnAtLocation
	bq ()Z repositionEntityAfterLoad
	e (DDD)V setPos
	y ()Lgu; getPos
	a (Lcvz;)F rotate
	a (Lcui;)F mirror
	a (Laif;Lbfy;)V thunderHit
	d_ ()V refreshDimensions
	b (Lbfj;)Z lambda$static$0
	<clinit> ()V <clinit>
buz$1 net/minecraft/world/entity/decoration/HangingEntity$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
bva net/minecraft/world/entity/decoration/ItemFrame
	f LOGGER
	g DATA_ITEM
	h DATA_ROTATION
	e NUM_ROTATIONS
	i dropChance
	j fixed
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lgu;Lha;)V <init>
	<init> (Lbfn;Lcmm;Lgu;Lha;)V <init>
	a (Lbgl;Lbfk;)F getEyeHeight
	a_ ()V defineSynchedData
	a (Lha;)V setDirection
	s ()V recalculateBoundingBox
	t ()Z survives
	a (Lbgf;Leei;)V move
	j (DDD)V push
	bC ()F getPickRadius
	ah ()V kill
	a (Lben;F)Z hurt
	j ()Lamg; getRemoveItemSound
	v ()I getWidth
	w ()I getHeight
	a (D)Z shouldRenderAtSqrDistance
	a (Lbfj;)V dropItem
	k ()Lamg; getBreakSound
	x ()V playPlacementSound
	o ()Lamg; getPlaceSound
	b (Lbfj;Z)V dropItem
	c (Lcfz;)V removeFramedMap
	z ()Lcfz; getItem
	A ()Ljava/util/OptionalInt; getFramedMapId
	C ()Z hasFramedMap
	a (Lcfz;)V setItem
	a (Lcfz;Z)V setItem
	p ()Lamg; getAddItemSound
	a_ (I)Lbgs; getSlot
	a (Laby;)V onSyncedDataUpdated
	d (Lcfz;)V onItemChanged
	D ()I getRotation
	b (I)V setRotation
	a (IZ)V setRotation
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbyo;Lbdw;)Lbdx; interact
	q ()Lamg; getRotateItemSound
	E ()I getAnalogOutput
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	dv ()Lcfz; getPickResult
	r ()Lcfz; getFrameItemStack
	dz ()F getVisualRotationYInDegrees
	c (I)V lambda$removeFramedMap$0
	<clinit> ()V <clinit>
bva$1 net/minecraft/world/entity/decoration/ItemFrame$1
	a this$0
	<init> (Lbva;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
bva$2 net/minecraft/world/entity/decoration/ItemFrame$2
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
bvb net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	e OFFSET_Y
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lgu;)V <init>
	s ()V recalculateBoundingBox
	a (Lha;)V setDirection
	v ()I getWidth
	w ()I getHeight
	a (Lbgl;Lbfk;)F getEyeHeight
	a (D)Z shouldRenderAtSqrDistance
	a (Lbfj;)V dropItem
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbyo;Lbdw;)Lbdx; interact
	t ()Z survives
	b (Lcmm;Lgu;)Lbvb; getOrCreateKnot
	x ()V playPlacementSound
	S ()Luo; getAddEntityPacket
	q (F)Leei; getRopeHoldPosition
	dv ()Lcfz; getPickResult
bvc net/minecraft/world/entity/decoration/Painting
	f DATA_PAINTING_VARIANT_ID
	g DEFAULT_VARIANT
	e VARIANT_TAG
	k ()Lhe; getDefaultVariant
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	a (Lhe;)V setVariant
	j ()Lhe; getVariant
	a (Lcmm;Lgu;Lha;)Ljava/util/Optional; create
	b (Lhe;)I variantArea
	<init> (Lcmm;Lgu;)V <init>
	<init> (Lcmm;Lgu;Lha;Lhe;)V <init>
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lqr;Lhe;)V storeVariant
	c (Lqr;)Ljava/util/Optional; loadVariant
	v ()I getWidth
	w ()I getHeight
	a (Lbfj;)V dropItem
	x ()V playPlacementSound
	b (DDDFF)V moveTo
	a (DDDFFIZ)V lerpTo
	dh ()Leei; trackingPosition
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	dv ()Lcfz; getPickResult
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lacq;)Lacp; lambda$loadVariant$2
	a (ILhe;)Z lambda$create$1
	a (Lbvc;Lhe;)Z lambda$create$0
	<clinit> ()V <clinit>
bvd net/minecraft/world/entity/decoration/PaintingVariant
	a width
	b height
	<init> (II)V <init>
	a ()I getWidth
	b ()I getHeight
bve net/minecraft/world/entity/decoration/PaintingVariants
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	A EARTH
	B WIND
	C WATER
	D FIRE
	<init> ()V <init>
	a (Lhr;)Lbvd; bootstrap
	a (Ljava/lang/String;)Lacp; create
	<clinit> ()V <clinit>
bvf net/minecraft/world/entity/decoration/package-info
bvg net/minecraft/world/entity/item/FallingBlockEntity
	f LOGGER
	g blockState
	b time
	c dropItem
	h cancelDrop
	i hurtEntities
	j fallDamageMax
	k fallDamagePerDistance
	d blockData
	e DATA_START_POS
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDDLdcb;)V <init>
	a (Lcmm;Lgu;Ldcb;)Lbvg; fall
	cn ()Z isAttackable
	a (Lgu;)V setStartPos
	j ()Lgu; getStartPos
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	bo ()Z isPickable
	l ()V tick
	a (Lcpn;Lgu;)V callOnBrokenAfterFall
	a (FFLben;)Z causeFallDamage
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (FI)V setHurtsEntities
	k ()V disableDrop
	cs ()Z displayFireAnimation
	a (Lp;)V fillCrashReportCategory
	o ()Ldcb; getBlockState
	cl ()Lsw; getTypeName
	cK ()Z onlyOpCanSetNbt
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	a (Lben;FLbfj;)V lambda$causeFallDamage$0
	<clinit> ()V <clinit>
bvh net/minecraft/world/entity/item/ItemEntity
	c DATA_ITEM
	d LIFETIME
	e INFINITE_PICKUP_DELAY
	f INFINITE_LIFETIME
	g age
	h pickupDelay
	i health
	j thrower
	k target
	b bobOffs
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDDLcfz;)V <init>
	<init> (Lcmm;DDDLcfz;DDD)V <init>
	<init> (Lbvh;)V <init>
	aT ()Z dampensVibrations
	v ()Lbfj; getOwner
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	l ()V tick
	aE ()Lgu; getBlockPosBelowThatAffectsMyMovement
	y ()V setUnderwaterMovement
	z ()V setUnderLavaMovement
	A ()V mergeWithNeighbours
	C ()Z isMergable
	a (Lbvh;)V tryToMerge
	a (Lcfz;Lcfz;)Z areMergable
	a (Lcfz;Lcfz;I)Lcfz; merge
	a (Lbvh;Lcfz;Lcfz;)V merge
	a (Lbvh;Lcfz;Lbvh;Lcfz;)V merge
	aU ()Z fireImmune
	a (Lben;F)Z hurt
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b_ (Lbyo;)V playerTouch
	Z ()Lsw; getName
	cn ()Z isAttackable
	b (Laif;)Lbfj; changeDimension
	j ()Lcfz; getItem
	a (Lcfz;)V setItem
	a (Laby;)V onSyncedDataUpdated
	b (Ljava/util/UUID;)V setTarget
	c (Ljava/util/UUID;)V setThrower
	k ()I getAge
	o ()V setDefaultPickUpDelay
	p ()V setNoPickUpDelay
	q ()V setNeverPickUp
	b (I)V setPickUpDelay
	r ()Z hasPickUpDelay
	s ()V setUnlimitedLifetime
	t ()V setExtendedLifetime
	w ()V makeFakeItem
	a (F)F getSpin
	x ()Lbvh; copy
	cY ()Lami; getSoundSource
	dz ()F getVisualRotationYInDegrees
	b (Lbvh;)Z lambda$mergeWithNeighbours$0
	<clinit> ()V <clinit>
bvi net/minecraft/world/entity/item/PrimedTnt
	b DATA_FUSE_ID
	c DEFAULT_FUSE_TIME
	d owner
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDDLbfz;)V <init>
	a_ ()V defineSynchedData
	aS ()Lbfj$b; getMovementEmission
	bo ()Z isPickable
	l ()V tick
	o ()V explode
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	j ()Lbfz; getOwner
	a (Lbgl;Lbfk;)F getEyeHeight
	b (I)V setFuse
	k ()I getFuse
	v ()Lbfj; getOwner
	<clinit> ()V <clinit>
bvj net/minecraft/world/entity/item/package-info
bvk net/minecraft/world/entity/monster/AbstractIllager
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	eN ()Lbge; getMobType
	q ()Lbvk$a; getArmPose
	c (Lbfz;)Z canAttack
bvk$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
	values ()[Lbvk$a; values
	valueOf (Ljava/lang/String;)Lbvk$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbvk$a; $values
	<clinit> ()V <clinit>
bvk$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a this$0
	<init> (Lbvk;Lbzw;)V <init>
	a ()Z canUse
bvl net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	b (Lgu;Ldcb;)V playStepSound
	r ()Lamg; getStepSound
	eN ()Lbge; getMobType
	b_ ()V aiStep
	bv ()V rideTick
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	w ()V reassessWeaponGoal
	a (Lbfz;F)V performRangedAttack
	b (Lcfz;F)Lbyu; getArrow
	a (Lcgp;)Z canFireProjectileWeapon
	a (Lqr;)V readAdditionalSaveData
	a (Lbfo;Lcfz;)V setItemSlot
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	bw ()D getMyRidingOffset
	fY ()Z isShaking
bvl$1 net/minecraft/world/entity/monster/AbstractSkeleton$1
	b this$0
	<init> (Lbvl;Lbgi;DZ)V <init>
	d ()V stop
	c ()V start
bvm net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	bj ()F getLightLevelDependentMagicValue
	b_ ()V aiStep
	fb ()Z isSensitiveToWater
	W ()V customServerAiStep
	bL ()Z isOnFire
	r ()Z isCharged
	w (Z)V setCharged
	<clinit> ()V <clinit>
bvm$a net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	<init> (Lbvm;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
	h ()D getFollowDistance
bvn net/minecraft/world/entity/monster/CaveSpider
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lbhf$a; createCaveSpider
	z (Lbfj;)Z doHurtTarget
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbgl;Lbfk;)F getStandingEyeHeight
bvo net/minecraft/world/entity/monster/Creeper
	b DATA_SWELL_DIR
	c DATA_IS_POWERED
	d DATA_IS_IGNITED
	e oldSwell
	bT swell
	bU maxSwell
	bV explosionRadius
	bW droppedSkulls
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	cr ()I getMaxFallDistance
	a (FFLben;)Z causeFallDamage
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	l ()V tick
	h (Lbfz;)V setTarget
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	a (Lben;IZ)V dropCustomDeathLoot
	z (Lbfj;)Z doHurtTarget
	a ()Z isPowered
	D (F)F getSwelling
	r ()I getSwellDir
	b (I)V setSwellDir
	a (Laif;Lbfy;)V thunderHit
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	gb ()V explodeCreeper
	gc ()V spawnLingeringCloud
	w ()Z isIgnited
	fY ()V ignite
	fZ ()Z canDropMobsSkull
	ga ()V increaseDroppedSkulls
	a (Lbdw;Lbyo;)V lambda$mobInteract$0
	<clinit> ()V <clinit>
bvp net/minecraft/world/entity/monster/CrossbowAttackMob
	b (Z)V setChargingCrossbow
	a (Lbfz;Lcfz;Lbzg;F)V shootCrossbowProjectile
	j ()Lbfz; getTarget
	a ()V onCrossbowAttackPerformed
	b (Lbfz;F)V performCrossbowAttack
	a (Lbfz;Lbfz;Lbzg;FF)V shootCrossbowProjectile
	a (Lbfz;Leei;F)Lorg/joml/Vector3f; getProjectileShotVector
bvq net/minecraft/world/entity/monster/Drowned
	b NAUTILUS_SHELL_CHANCE
	bX searchingForLand
	c waterNavigation
	d groundNavigation
	<init> (Lbfn;Lcmm;)V <init>
	q ()V addBehaviourGoals
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkDrownedSpawnRules
	a (Lcmn;Lgu;)Z isDeepEnoughToSpawn
	r ()Z supportsBreakDoorGoal
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	w ()Lamg; getStepSound
	aJ ()Lamg; getSwimSound
	fY ()Lcfz; getSkull
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	b (Lcfz;Lcfz;)Z canReplaceCurrentItem
	fZ ()Z convertsInWater
	a (Lcmp;)Z checkSpawnObstruction
	l (Lbfz;)Z okTarget
	cw ()Z isPushedByFluid
	gi ()Z wantsToSwim
	h (Leei;)V travel
	ba ()V updateSwimming
	bX ()Z isVisuallySwimming
	ga ()Z closeToNextPos
	a (Lbfz;F)V performRangedAttack
	w (Z)V setSearchingForLand
	a (Lbvq;Lbpj;)Lbpj; access$002
bvq$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	b drowned
	<init> (Lbvq;DZ)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bvq$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	<init> (Lbvq;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	a (Lcmp;Lgu;)Z isValidTarget
	c ()V start
	d ()V stop
bvq$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	<init> (Lbgi;D)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Leei; getWaterPos
bvq$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	l drowned
	<init> (Lbvq;)V <init>
	a ()V tick
bvq$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	<init> (Lbvq;DI)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	c ()V start
	d ()V stop
bvq$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	<init> (Lbwg;DIF)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
bvr net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	e EFFECT_INTERVAL
	bT EFFECT_RADIUS
	bU EFFECT_DURATION
	bV EFFECT_AMPLIFIER
	bW EFFECT_DISPLAY_LIMIT
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lbhf$a; createAttributes
	r ()I getAttackDuration
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	w ()Lamg; getFlopSound
	W ()V customServerAiStep
	b (Laig;)V lambda$customServerAiStep$0
	<clinit> ()V <clinit>
bvs net/minecraft/world/entity/monster/EnderMan
	c SPEED_MODIFIER_ATTACKING_UUID
	d SPEED_MODIFIER_ATTACKING
	e DELAY_BETWEEN_CREEPY_STARE_SOUND
	bT MIN_DEAGGRESSION_TIME
	bU DATA_CARRY_STATE
	bV DATA_CREEPY
	bW DATA_STARED_AT
	bX lastStareSound
	bY targetChangeTime
	bZ PERSISTENT_ANGER_TIME
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	h (Lbfz;)V setTarget
	a_ ()V defineSynchedData
	c ()V startPersistentAngerTimer
	a (I)V setRemainingPersistentAngerTime
	a ()I getRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	b ()Ljava/util/UUID; getPersistentAngerTarget
	r ()V playStareSound
	a (Laby;)V onSyncedDataUpdated
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	g (Lbyo;)Z isLookingAtMe
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	b_ ()V aiStep
	fb ()Z isSensitiveToWater
	W ()V customServerAiStep
	w ()Z teleport
	a (Lbfj;)Z teleportTowards
	r (DDD)Z teleport
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	a (Lben;IZ)V dropCustomDeathLoot
	d (Ldcb;)V setCarriedBlock
	fY ()Ldcb; getCarriedBlock
	a (Lben;F)Z hurt
	a (Lben;Lbzr;F)Z hurtWithCleanWater
	fZ ()Z isCreepy
	ga ()Z hasBeenStaredAt
	gb ()V setBeingStaredAt
	T ()Z requiresCustomPersistence
	<clinit> ()V <clinit>
bvs$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	<init> (Lbvs;)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
bvs$b net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	<init> (Lbvs;)V <init>
	a ()Z canUse
	e ()V tick
	a (Lcmm;Lgu;Ldcb;Ldcb;Ldcb;Lgu;)Z canPlaceBlock
bvs$c net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	o isAngerInducing
	<init> (Lbvs;Ljava/util/function/Predicate;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	b ()Z canContinueToUse
	e ()V tick
	a (Lbvs;Lbfz;)Z lambda$new$0
bvs$d net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a enderman
	<init> (Lbvs;)V <init>
	a ()Z canUse
	e ()V tick
bvt net/minecraft/world/entity/monster/Endermite
	b MAX_LIFE
	c life
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Lbhf$a; createAttributes
	aS ()Lbfj$b; getMovementEmission
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	l ()V tick
	o (F)V setYBodyRot
	bw ()D getMyRidingOffset
	b_ ()V aiStep
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkEndermiteSpawnRules
	eN ()Lbge; getMobType
bvu net/minecraft/world/entity/monster/Enemy
	f_ XP_REWARD_NONE
	g_ XP_REWARD_SMALL
	h_ XP_REWARD_MEDIUM
	i_ XP_REWARD_LARGE
	j_ XP_REWARD_HUGE
	k_ XP_REWARD_BOSS
bvv net/minecraft/world/entity/monster/Evoker
	e wololoTarget
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	r ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	Y_ ()Lamg; getCelebrateSound
	b (Lqr;)V addAdditionalSaveData
	W ()V customServerAiStep
	p (Lbfj;)Z isAlliedTo
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	a (Lbsh;)V setWololoTarget
	gr ()Lbsh; getWololoTarget
	fY ()Lamg; getCastingSoundEvent
	a (IZ)V applyRaidBuffs
	a (Lbvv;)Lapf; access$000
	b (Lbvv;)Lapf; access$100
	c (Lbvv;)Lapf; access$200
	d (Lbvv;)Lapf; access$300
	e (Lbvv;)Lapf; access$400
bvv$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a this$0
	<init> (Lbvv;)V <init>
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	a (DDDDFI)V createSpellEntity
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
bvv$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	a this$0
	<init> (Lbvv;)V <init>
	e ()V tick
bvv$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	e vexCountTargeting
	a this$0
	<init> (Lbvv;)V <init>
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
bvv$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	e wololoTargeting
	a this$0
	<init> (Lbvv;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	k ()V performSpellCasting
	n ()I getCastWarmupTime
	h ()I getCastingTime
	i ()I getCastingInterval
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
	e ()V tick
	c ()V start
	a (Lbfz;)Z lambda$new$0
bvw net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	q ()Z isCharging
	w (Z)V setCharging
	r ()I getExplosionPower
	U ()Z shouldDespawnInPeaceful
	h (Lben;)Z isReflectedFireball
	b (Lben;)Z isInvulnerableTo
	a (Lben;F)Z hurt
	a_ ()V defineSynchedData
	w ()Lbhf$a; createAttributes
	cY ()Lami; getSoundSource
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eR ()F getSoundVolume
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkGhastSpawnRules
	fE ()I getMaxSpawnClusterSize
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	l (Lbfz;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bvw$a net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	<init> (Lbvw;)V <init>
	a ()Z canUse
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bvw$b net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	l ghast
	m floatDuration
	<init> (Lbvw;)V <init>
	a ()V tick
	a (Leei;I)Z canReach
bvw$c net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	b ghast
	a chargeTime
	<init> (Lbvw;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bvw$d net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	<init> (Lbvw;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bvx net/minecraft/world/entity/monster/Giant
	<init> (Lbfn;Lcmm;)V <init>
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Lbhf$a; createAttributes
	a (Lgu;Lcmp;)F getWalkTargetValue
bvy net/minecraft/world/entity/monster/Guardian
	c ATTACK_TIME
	b DATA_ID_MOVING
	e DATA_ID_ATTACK_TARGET
	bT clientSideTailAnimation
	bU clientSideTailAnimationO
	bV clientSideTailAnimationSpeed
	bW clientSideSpikesAnimation
	bX clientSideSpikesAnimationO
	bY clientSideCachedAttackTarget
	bZ clientSideAttackTime
	ca clientSideTouchedGround
	d randomStrollGoal
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	fY ()Lbhf$a; createAttributes
	b (Lcmm;)Lbpj; createNavigation
	a_ ()V defineSynchedData
	dN ()Z canBreatheUnderwater
	eN ()Lbge; getMobType
	fZ ()Z isMoving
	w (Z)V setMoving
	r ()I getAttackDuration
	b (I)V setActiveAttackTarget
	ga ()Z hasActiveAttackTarget
	gb ()Lbfz; getActiveAttackTarget
	a (Laby;)V onSyncedDataUpdated
	M ()I getAmbientSoundInterval
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	aS ()Lbfj$b; getMovementEmission
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Lgu;Lcmp;)F getWalkTargetValue
	b_ ()V aiStep
	w ()Lamg; getFlopSound
	D (F)F getTailAnimation
	E (F)F getSpikesAnimation
	F (F)F getAttackAnimationScale
	gc ()F getClientSideAttackTime
	a (Lcmp;)Z checkSpawnObstruction
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkGuardianSpawnRules
	a (Lben;F)Z hurt
	X ()I getMaxHeadXRot
	h (Leei;)V travel
	<clinit> ()V <clinit>
bvy$a net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	<init> (Lbvy;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bvy$b net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	<init> (Lbvy;)V <init>
	a (Lbfz;)Z test
	test (Ljava/lang/Object;)Z test
bvy$c net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	l guardian
	<init> (Lbvy;)V <init>
	a ()V tick
bvz net/minecraft/world/entity/monster/Husk
	<init> (Lbfn;Lcmm;)V <init>
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkHuskSpawnRules
	X_ ()Z isSunSensitive
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	w ()Lamg; getStepSound
	z (Lbfj;)Z doHurtTarget
	fZ ()Z convertsInWater
	gb ()V doUnderWaterConversion
	fY ()Lcfz; getSkull
bwa net/minecraft/world/entity/monster/Illusioner
	e NUM_ILLUSIONS
	bT ILLUSION_TRANSITION_TICKS
	bU ILLUSION_SPREAD
	bV clientSideIllusionTicks
	bW clientSideIllusionOffsets
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	r ()Lbhf$a; createAttributes
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a_ ()V defineSynchedData
	j_ ()Leed; getBoundingBoxForCulling
	b_ ()V aiStep
	Y_ ()Lamg; getCelebrateSound
	D (F)[Leei; getIllusionOffsets
	p (Lbfj;)Z isAlliedTo
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	fY ()Lamg; getCastingSoundEvent
	a (IZ)V applyRaidBuffs
	a (Lbfz;F)V performRangedAttack
	q ()Lbvk$a; getArmPose
bwa$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	e lastTargetId
	a this$0
	<init> (Lbwa;)V <init>
	a ()Z canUse
	c ()V start
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
bwa$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a this$0
	<init> (Lbwa;)V <init>
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
bwb net/minecraft/world/entity/monster/MagmaCube
	<init> (Lbfn;Lcmm;)V <init>
	q ()Lbhf$a; createAttributes
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkMagmaCubeSpawnRules
	a (Lcmp;)Z checkSpawnObstruction
	a (IZ)V setSize
	bj ()F getLightLevelDependentMagicValue
	r ()Lit; getParticleType
	bL ()Z isOnFire
	w ()I getJumpDelay
	fV ()V decreaseSquish
	eW ()V jumpFromGround
	c (Lanl;)V jumpInLiquid
	fW ()Z isDealsDamage
	fX ()F getAttackDamage
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	fY ()Lamg; getSquishSound
	fZ ()Lamg; getJumpSound
bwc net/minecraft/world/entity/monster/Monster
	<init> (Lbfn;Lcmm;)V <init>
	cY ()Lami; getSoundSource
	b_ ()V aiStep
	gd ()V updateNoActionTime
	U ()Z shouldDespawnInPeaceful
	aJ ()Lamg; getSwimSound
	aK ()Lamg; getSwimSplashSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eC ()Lbfz$a; getFallSounds
	a (Lgu;Lcmp;)F getWalkTargetValue
	a (Lcnb;Lgu;Lapf;)Z isDarkEnoughToSpawn
	b (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkMonsterSpawnRules
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkAnyLightMonsterSpawnRules
	ge ()Lbhf$a; createMonsterAttributes
	dY ()Z shouldDropExperience
	dZ ()Z shouldDropLoot
	f (Lbyo;)Z isPreventingPlayerRest
	g (Lcfz;)Lcfz; getProjectile
bwd net/minecraft/world/entity/monster/PatrollingMonster
	b patrolTarget
	c patrolLeader
	d patrolling
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	bw ()D getMyRidingOffset
	fZ ()Z canBeLeader
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkPatrollingMonsterSpawnRules
	h (D)Z removeWhenFarAway
	i (Lgu;)V setPatrolTarget
	ga ()Lgu; getPatrolTarget
	gb ()Z hasPatrolTarget
	w (Z)V setPatrolLeader
	gc ()Z isPatrolLeader
	gf ()Z canJoinPatrol
	gg ()V findPatrolTarget
	gh ()Z isPatrolling
	x (Z)V setPatrolling
bwd$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a NAVIGATION_FAILED_COOLDOWN
	b mob
	c speedModifier
	d leaderSpeedModifier
	e cooldownUntil
	<init> (Lbwd;DD)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Ljava/util/List; findPatrolCompanions
	i ()Z moveRandomly
	a (Lbwd;)Z lambda$findPatrolCompanions$0
bwe net/minecraft/world/entity/monster/Phantom
	b FLAP_DEGREES_PER_TICK
	c TICKS_PER_FLAP
	d ID_SIZE
	e moveTargetPoint
	bS anchorPoint
	bT attackPhase
	<init> (Lbfn;Lcmm;)V <init>
	aP ()Z isFlapping
	D ()Lblt; createBodyControl
	x ()V registerGoals
	a_ ()V defineSynchedData
	b (I)V setPhantomSize
	w ()V updatePhantomSizeInfo
	q ()I getPhantomSize
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Laby;)V onSyncedDataUpdated
	r ()I getUniqueFlapTickOffset
	U ()Z shouldDespawnInPeaceful
	l ()V tick
	b_ ()V aiStep
	W ()V customServerAiStep
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a (D)Z shouldRenderAtSqrDistance
	cY ()Lami; getSoundSource
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	eN ()Lbge; getMobType
	eR ()F getSoundVolume
	a (Lbfn;)Z canAttackType
	a (Lbgl;)Lbfk; getDimensions
	bx ()D getPassengersRidingOffset
	a (Lbwe;)Lapf; access$000
	b (Lbwe;)Lapf; access$100
	c (Lbwe;)Lapf; access$200
	d (Lbwe;)Lapf; access$300
	e (Lbwe;)Lapf; access$400
	f (Lbwe;)Lapf; access$500
	g (Lbwe;)Lapf; access$600
	h (Lbwe;)Lapf; access$700
	i (Lbwe;)Lapf; access$800
	j (Lbwe;)Lapf; access$900
	k (Lbwe;)Lapf; access$1000
	l (Lbwe;)Lapf; access$1100
	<clinit> ()V <clinit>
bwe$a net/minecraft/world/entity/monster/Phantom$AttackPhase
	a CIRCLE
	b SWOOP
	c $VALUES
	values ()[Lbwe$a; values
	valueOf (Ljava/lang/String;)Lbwe$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbwe$a; $values
	<clinit> ()V <clinit>
bwe$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	b attackTargeting
	c nextScanTick
	a this$0
	<init> (Lbwe;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
bwe$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	b nextSweepTick
	a this$0
	<init> (Lbwe;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()V setAnchorAboveTarget
bwe$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a this$0
	<init> (Lbwe;Lbgb;)V <init>
	a ()V clientTick
bwe$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	c angle
	d distance
	e height
	f clockwise
	a this$0
	<init> (Lbwe;)V <init>
	a ()Z canUse
	c ()V start
	e ()V tick
	i ()V selectNext
bwe$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	h this$0
	<init> (Lbwe;Lbgb;)V <init>
	a ()V tick
bwe$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m speed
	l this$0
	<init> (Lbwe;Lbgb;)V <init>
	a ()V tick
bwe$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	b this$0
	<init> (Lbwe;)V <init>
	h ()Z touchingTarget
bwe$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	c CAT_SEARCH_TICK_DELAY
	d isScaredOfCat
	e catSearchTick
	a this$0
	<init> (Lbwe;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bwf net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	e INVENTORY_SIZE
	bT SLOT_OFFSET
	bU CROSSBOW_POWER
	bV inventory
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	r ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	a (Lcgp;)Z canFireProjectileWeapon
	fY ()Z isChargingCrossbow
	b (Z)V setChargingCrossbow
	a ()V onCrossbowAttackPerformed
	b (Lqr;)V addAdditionalSaveData
	q ()Lbvk$a; getArmPose
	a (Lqr;)V readAdditionalSaveData
	a (Lgu;Lcmp;)F getWalkTargetValue
	fE ()I getMaxSpawnClusterSize
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	a (Lapf;F)V enchantSpawnedWeapon
	p (Lbfj;)Z isAlliedTo
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	a (Lbfz;F)V performRangedAttack
	a (Lbfz;Lcfz;Lbzg;F)V shootCrossbowProjectile
	w ()Lbee; getInventory
	b (Lbvh;)V pickUpItem
	l (Lcfz;)Z wantsItem
	a_ (I)Lbgs; getSlot
	a (IZ)V applyRaidBuffs
	Y_ ()Lamg; getCelebrateSound
	<clinit> ()V <clinit>
bwg net/minecraft/world/entity/monster/RangedAttackMob
	a (Lbfz;F)V performRangedAttack
bwh net/minecraft/world/entity/monster/Ravager
	e NO_RAVAGER_AND_ALIVE
	bT BASE_MOVEMENT_SPEED
	bU ATTACK_MOVEMENT_SPEED
	bV STUNNED_COLOR
	bW STUNNED_COLOR_BLUE
	bX STUNNED_COLOR_GREEN
	bY STUNNED_COLOR_RED
	bZ ATTACK_DURATION
	b STUN_DURATION
	ca attackTick
	cb stunnedTick
	cc roarTick
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	P ()V updateControlFlags
	q ()Lbhf$a; createAttributes
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	Y_ ()Lamg; getCelebrateSound
	fC ()I getMaxHeadYRot
	bx ()D getPassengersRidingOffset
	cL ()Lbfz; getControllingPassenger
	b_ ()V aiStep
	gj ()V stunEffect
	eT ()Z isImmobile
	B (Lbfj;)Z hasLineOfSight
	e (Lbfz;)V blockedByShield
	gk ()V roar
	a (Lbfj;)V strongKnockback
	b (B)V handleEntityEvent
	r ()I getAttackTick
	fY ()I getStunnedTick
	gi ()I getRoarTick
	z (Lbfj;)Z doHurtTarget
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	a (Lcmp;)Z checkSpawnObstruction
	a (IZ)V applyRaidBuffs
	fZ ()Z canBeLeader
	l (Lbfz;)Z lambda$registerGoals$1
	b (Lbfj;)Z lambda$static$0
	<clinit> ()V <clinit>
bwh$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	b this$0
	<init> (Lbwh;)V <init>
	a (Lbfz;)D getAttackReachSqr
bwi net/minecraft/world/entity/monster/Shulker
	e COVERED_ARMOR_MODIFIER_UUID
	bT COVERED_ARMOR_MODIFIER
	b DATA_ATTACH_FACE_ID
	c DATA_PEEK_ID
	d DATA_COLOR_ID
	bU TELEPORT_STEPS
	bV NO_COLOR
	bW DEFAULT_COLOR
	bX MAX_TELEPORT_DISTANCE
	bY OTHER_SHULKER_SCAN_RADIUS
	bZ OTHER_SHULKER_LIMIT
	ca PEEK_PER_TICK
	cb FORWARD
	cc currentPeekAmountO
	cd currentPeekAmount
	ce clientOldAttachPosition
	cf clientSideTeleportInterpolation
	cg MAX_LID_OPEN
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	aS ()Lbfj$b; getMovementEmission
	cY ()Lami; getSoundSource
	s ()Lamg; getAmbientSound
	N ()V playAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	a_ ()V defineSynchedData
	q ()Lbhf$a; createAttributes
	D ()Lblt; createBodyControl
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	l ()V tick
	ga ()V findNewAttachment
	am ()Leed; makeBoundingBox
	F (F)F getPhysicalPeek
	gb ()Z updatePeekAmount
	gc ()V onPeekAmountChange
	a (Lha;F)Leed; getProgressAabb
	a (Lha;FF)Leed; getProgressDeltaAabb
	bw ()D getMyRidingOffset
	a (Lbfj;Z)Z startRiding
	Y ()V stopRiding
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lbgf;Leei;)V move
	dl ()Leei; getDeltaMovement
	f (Leei;)V setDeltaMovement
	e (DDD)V setPos
	i (Lgu;)Lha; findAttachableSurface
	a (Lgu;Lha;)Z canStayAt
	j (Lgu;)Z isPositionBlocked
	r ()Z teleportSomewhere
	a (DDDFFIZ)V lerpTo
	a (Lben;F)Z hurt
	gd ()Z isClosed
	ge ()V hitByShulkerBullet
	bu ()Z canBeCollidedWith
	w ()Lha; getAttachFace
	a (Lha;)V setAttachFace
	a (Laby;)V onSyncedDataUpdated
	gf ()I getRawPeekAmount
	b (I)V setRawPeekAmount
	D (F)F getClientPeekAmount
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (Lus;)V recreateFromPacket
	X ()I getMaxHeadXRot
	fC ()I getMaxHeadYRot
	g (Lbfj;)V push
	bC ()F getPickRadius
	E (F)Ljava/util/Optional; getRenderPosition
	a (Ljava/util/Optional;)V setVariant
	fY ()Ljava/util/Optional; getVariant
	fZ ()Lcen; getColor
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lcen;)Ljava/lang/Byte; lambda$setVariant$2
	a (Lbfj;)Z lambda$onPeekAmountChange$1
	gg ()Lorg/joml/Vector3f; lambda$static$0
	a (Lbwi;)Lapf; access$000
	b (Lbwi;)Lapf; access$100
	c (Lbwi;)Lapf; access$200
	d (Lbwi;)Lapf; access$300
	e (Lbwi;)Lapf; access$400
	<clinit> ()V <clinit>
bwi$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	b attackTime
	a this$0
	<init> (Lbwi;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bwi$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	<init> (Lbgb;)V <init>
	a ()V clientTick
bwi$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	<init> (Lbwi;)V <init>
	a ()Z canUse
	a (D)Leed; getTargetSearchArea
	b (Lbfz;)Z lambda$new$0
bwi$d net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	h this$0
	<init> (Lbwi;Lbgb;)V <init>
	b ()V clampHeadRotationToBody
	i ()Ljava/util/Optional; getYRotD
	h ()Ljava/util/Optional; getXRotD
bwi$e net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	i this$0
	<init> (Lbwi;Lbwi;)V <init>
	a ()Z canUse
	a (D)Leed; getTargetSearchArea
bwi$f net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	b peekTime
	a this$0
	<init> (Lbwi;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bwj net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	bw ()D getMyRidingOffset
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Lbhf$a; createAttributes
	aS ()Lbfj$b; getMovementEmission
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	a (Lben;F)Z hurt
	l ()V tick
	o (F)V setYBodyRot
	a (Lgu;Lcmp;)F getWalkTargetValue
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkSilverfishSpawnRules
	eN ()Lbge; getMobType
bwj$a net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	i selectedDirection
	j doMerge
	<init> (Lbwj;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bwj$b net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	a silverfish
	b lookForFriends
	<init> (Lbwj;)V <init>
	h ()V notifyHurt
	a ()Z canUse
	e ()V tick
bwk net/minecraft/world/entity/monster/Skeleton
	c TOTAL_CONVERSION_TIME
	d DATA_STRAY_CONVERSION_ID
	b CONVERSION_TAG
	e inPowderSnowTime
	bT conversionTime
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	fZ ()Z isFreezeConverting
	w (Z)V setFreezeConverting
	fY ()Z isShaking
	l ()V tick
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (I)V startFreezeConversion
	ga ()V doFreezeConversion
	dw ()Z canFreeze
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	r ()Lamg; getStepSound
	a (Lben;IZ)V dropCustomDeathLoot
	<clinit> ()V <clinit>
bwl net/minecraft/world/entity/monster/Slime
	bT ID_SIZE
	b MIN_SIZE
	c MAX_SIZE
	d targetSquish
	e squish
	bS oSquish
	bU wasOnGround
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	a_ ()V defineSynchedData
	a (IZ)V setSize
	ga ()I getSize
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	gb ()Z isTiny
	r ()Lit; getParticleType
	U ()Z shouldDespawnInPeaceful
	l ()V tick
	fV ()V decreaseSquish
	w ()I getJumpDelay
	d_ ()V refreshDimensions
	a (Laby;)V onSyncedDataUpdated
	ae ()Lbfn; getType
	a (Lbfj$c;)V remove
	g (Lbfj;)V push
	b_ (Lbyo;)V playerTouch
	l (Lbfz;)V dealDamage
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	fW ()Z isDealsDamage
	fX ()F getAttackDamage
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	fY ()Lamg; getSquishSound
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkSlimeSpawnRules
	eR ()F getSoundVolume
	X ()I getMaxHeadXRot
	gc ()Z doPlayJumpSound
	eW ()V jumpFromGround
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	q ()F getSoundPitch
	fZ ()Lamg; getJumpSound
	a (Lbgl;)Lbfk; getDimensions
	m (Lbfz;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bwl$a net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	<init> (Lbwl;)V <init>
	a ()Z canUse
	c ()V start
	b ()Z canContinueToUse
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bwl$b net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	<init> (Lbwl;)V <init>
	a ()Z canUse
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bwl$c net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	<init> (Lbwl;)V <init>
	a ()Z canUse
	e ()V tick
bwl$d net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	l yRot
	m jumpDelay
	n slime
	o isAggressive
	<init> (Lbwl;)V <init>
	a (FZ)V setDirection
	a (D)V setWantedMovement
	a ()V tick
bwl$e net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	<init> (Lbwl;)V <init>
	a ()Z canUse
	e ()V tick
bwm net/minecraft/world/entity/monster/SpellcasterIllager
	e DATA_SPELL_CASTING_ID
	b spellCastingTickCount
	bT currentSpell
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	q ()Lbvk$a; getArmPose
	gi ()Z isCastingSpell
	a (Lbwm$a;)V setIsCastingSpell
	gj ()Lbwm$a; getCurrentSpell
	W ()V customServerAiStep
	l ()V tick
	gk ()I getSpellCastingTime
	fY ()Lamg; getCastingSoundEvent
	a (Lbwm;)Lbpj; access$000
	<clinit> ()V <clinit>
bwm$a net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	a NONE
	b SUMMON_VEX
	c FANGS
	d WOLOLO
	e DISAPPEAR
	f BLINDNESS
	g BY_ID
	h id
	i spellColor
	j $VALUES
	values ()[Lbwm$a; values
	valueOf (Ljava/lang/String;)Lbwm$a; valueOf
	<init> (Ljava/lang/String;IIDDD)V <init>
	a (I)Lbwm$a; byId
	a (Lbwm$a;)I lambda$static$0
	a ()[Lbwm$a; $values
	<clinit> ()V <clinit>
bwm$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	b this$0
	<init> (Lbwm;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bwm$c net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	d this$0
	<init> (Lbwm;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	k ()V performSpellCasting
	n ()I getCastWarmupTime
	h ()I getCastingTime
	i ()I getCastingInterval
	l ()Lamg; getSpellPrepareSound
	m ()Lbwm$a; getSpell
bwn net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	c SPIDER_SPECIAL_EFFECT_CHANCE
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	bx ()D getPassengersRidingOffset
	b (Lcmm;)Lbpj; createNavigation
	a_ ()V defineSynchedData
	l ()V tick
	r ()Lbhf$a; createAttributes
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	i_ ()Z onClimbable
	a (Ldcb;Leei;)V makeStuckInBlock
	eN ()Lbge; getMobType
	c (Lbfa;)Z canBeAffected
	w ()Z isClimbing
	w (Z)V setClimbing
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	<clinit> ()V <clinit>
bwn$a net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	<init> (Lbwn;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	a (Lbfz;)D getAttackReachSqr
bwn$b net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	<init> ()V <init>
	a (Lapf;)V setRandomEffect
bwn$c net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	<init> (Lbwn;Ljava/lang/Class;)V <init>
	a ()Z canUse
bwo net/minecraft/world/entity/monster/Stray
	<init> (Lbfn;Lcmm;)V <init>
	a (Lbfn;Lcnb;Lbgd;Lgu;Lapf;)Z checkStraySpawnRules
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	r ()Lamg; getStepSound
	b (Lcfz;F)Lbyu; getArrow
bwp net/minecraft/world/entity/monster/Strider
	bT SUFFOCATING_MODIFIER_UUID
	bU SUFFOCATING_MODIFIER
	bW SUFFOCATE_STEERING_MODIFIER
	bX STEERING_MODIFIER
	bY FOOD_ITEMS
	bZ TEMPT_ITEMS
	ca DATA_BOOST_TIME
	cb DATA_SUFFOCATING
	cc DATA_SADDLE_ID
	cd steering
	ce temptGoal
	cf panicGoal
	<init> (Lbfn;Lcmm;)V <init>
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkStriderSpawnRules
	a (Laby;)V onSyncedDataUpdated
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	i ()Z isSaddled
	g ()Z isSaddleable
	a (Lami;)V equipSaddle
	x ()V registerGoals
	w (Z)V setSuffocating
	q ()Z isSuffocating
	a (Ldxe;)Z canStandOnFluid
	bx ()D getPassengersRidingOffset
	a (Lcmp;)Z checkSpawnObstruction
	cL ()Lbfz; getControllingPassenger
	b (Lbfz;)Leei; getDismountLocationForPassenger
	a (Lbyo;Leei;)V tickRidden
	b (Lbyo;Leei;)Leei; getRiddenInput
	e (Lbyo;)F getRiddenSpeed
	aI ()F nextStep
	b (Lgu;Ldcb;)V playStepSound
	a ()Z boost
	a (DZLdcb;Lgu;)V checkFallDamage
	l ()V tick
	w ()Z isPanicking
	fY ()Z isBeingTempted
	z ()Z shouldPassengersInheritMalus
	ge ()V floatStrider
	r ()Lbhf$a; createAttributes
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	o (Lbfj;)Z canAddPassenger
	fb ()Z isSensitiveToWater
	bL ()Z isOnFire
	b (Lcmm;)Lbpj; createNavigation
	a (Lgu;Lcmp;)F getWalkTargetValue
	b (Laif;Lbfe;)Lbwp; getBreedOffspring
	m (Lcfz;)Z isFood
	eu ()V dropEquipment
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	cG ()Leei; getLeashOffset
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lcnb;Lbdv;Lbgb;Lbgt;)Lbgt; spawnJockey
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	<clinit> ()V <clinit>
bwp$a net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	g strider
	<init> (Lbwp;D)V <init>
	k ()Lgu; getMoveToTarget
	b ()Z canContinueToUse
	a ()Z canUse
	l ()Z shouldRecalculatePath
	a (Lcmp;Lgu;)Z isValidTarget
bwp$b net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	<init> (Lbwp;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
	a (Ldxp;)Z hasValidPathType
	a (Lgu;)Z isStableDestination
bwq net/minecraft/world/entity/monster/Vex
	b FLAP_DEGREES_PER_TICK
	c TICKS_PER_FLAP
	d DATA_FLAGS_ID
	e FLAG_IS_CHARGING
	bT RIDING_OFFSET
	bU owner
	bV boundOrigin
	bW hasLimitedLife
	bX limitedLifeTicks
	<init> (Lbfn;Lcmm;)V <init>
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	aP ()Z isFlapping
	a (Lbgf;Leei;)V move
	l ()V tick
	x ()V registerGoals
	q ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	r ()Lbgb; getOwner
	w ()Lgu; getBoundOrigin
	i (Lgu;)V setBoundOrigin
	c (I)Z getVexFlag
	a (IZ)V setVexFlag
	fY ()Z isCharging
	w (Z)V setIsCharging
	a (Lbgb;)V setOwner
	b (I)V setLimitedLife
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	bj ()F getLightLevelDependentMagicValue
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	bw ()D getMyRidingOffset
	v ()Lbfj; getOwner
	a (Lbwq;)Lapf; access$000
	b (Lbwq;)Lbly; access$100
	c (Lbwq;)Lbly; access$200
	d (Lbwq;)Lapf; access$300
	e (Lbwq;)Lapf; access$400
	f (Lbwq;)Lapf; access$500
	g (Lbwq;)Lapf; access$600
	h (Lbwq;)Lbly; access$700
	<clinit> ()V <clinit>
bwq$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	a this$0
	<init> (Lbwq;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bwq$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	b copyOwnerTargeting
	a this$0
	<init> (Lbwq;Lbgi;)V <init>
	a ()Z canUse
	c ()V start
bwq$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	l this$0
	<init> (Lbwq;Lbwq;)V <init>
	a ()V tick
bwq$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a this$0
	<init> (Lbwq;)V <init>
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
bwr net/minecraft/world/entity/monster/Vindicator
	b TAG_JOHNNY
	e DOOR_BREAKING_PREDICATE
	bT isJohnny
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	W ()V customServerAiStep
	r ()Lbhf$a; createAttributes
	b (Lqr;)V addAdditionalSaveData
	q ()Lbvk$a; getArmPose
	a (Lqr;)V readAdditionalSaveData
	Y_ ()Lamg; getCelebrateSound
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	p (Lbfj;)Z isAlliedTo
	b (Lsw;)V setCustomName
	s ()Lamg; getAmbientSound
	g_ ()Lamg; getDeathSound
	d (Lben;)Lamg; getHurtSound
	a (IZ)V applyRaidBuffs
	a (Lbdu;)Z lambda$static$0
	a (Lbwr;)Lapf; access$000
	<clinit> ()V <clinit>
bwr$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	<init> (Lbgb;)V <init>
	b ()Z canContinueToUse
	a ()Z canUse
	c ()V start
bwr$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	<init> (Lbwr;)V <init>
	a ()Z canUse
	c ()V start
bwr$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	b this$0
	<init> (Lbwr;Lbwr;)V <init>
	a (Lbfz;)D getAttackReachSqr
bws net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	e SPEED_MODIFIER_DRINKING
	bT DATA_USING_ITEM
	bU usingTime
	bV healRaidersGoal
	bW attackPlayersGoal
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	a_ ()V defineSynchedData
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	y (Z)V setUsingItem
	q ()Z isDrinkingPotion
	r ()Lbhf$a; createAttributes
	b_ ()V aiStep
	Y_ ()Lamg; getCelebrateSound
	b (B)V handleEntityEvent
	e (Lben;F)F getDamageAfterMagicAbsorb
	a (Lbfz;F)V performRangedAttack
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a (IZ)V applyRaidBuffs
	fZ ()Z canBeLeader
	l (Lbfz;)Z lambda$registerGoals$0
	<clinit> ()V <clinit>
bwt net/minecraft/world/entity/monster/WitherSkeleton
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	r ()Lamg; getStepSound
	a (Lben;IZ)V dropCustomDeathLoot
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	b (Lapf;Lbdv;)V populateDefaultEquipmentEnchantments
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	z (Lbfj;)Z doHurtTarget
	b (Lcfz;F)Lbyu; getArrow
	c (Lbfa;)Z canBeAffected
bwu net/minecraft/world/entity/monster/Zoglin
	d DATA_BABY_ID
	e MAX_HEALTH
	bT ATTACK_KNOCKBACK
	bU KNOCKBACK_RESISTANCE
	bV ATTACK_DAMAGE
	bW BABY_ATTACK_DAMAGE
	bX ATTACK_INTERVAL
	bY BABY_ATTACK_INTERVAL
	bZ ATTACK_DURATION
	ca MOVEMENT_SPEED_WHEN_FIGHTING
	cb SPEED_MULTIPLIER_WHEN_IDLING
	cc attackAnimationRemainingTicks
	b SENSOR_TYPES
	c MEMORY_TYPES
	<init> (Lbfn;Lcmm;)V <init>
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	a (Lbha;)V initCoreActivity
	b (Lbha;)V initIdleActivity
	c (Lbha;)V initFightActivity
	ga ()Ljava/util/Optional; findNearestValidAttackTarget
	l (Lbfz;)Z isTargetable
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	q ()Lbhf$a; createAttributes
	r ()Z isAdult
	z (Lbfj;)Z doHurtTarget
	a (Lbyo;)Z canBeLeashed
	e (Lbfz;)V blockedByShield
	bx ()D getPassengersRidingOffset
	a (Lben;F)Z hurt
	m (Lbfz;)V setAttackTarget
	dK ()Lbha; getBrain
	w ()V updateActivity
	W ()V customServerAiStep
	a (Z)V setBaby
	h_ ()Z isBaby
	b_ ()V aiStep
	b (B)V handleEntityEvent
	fY ()I getAttackAnimationRemainingTicks
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	fZ ()V playAngrySound
	V ()V sendDebugPackets
	eN ()Lbge; getMobType
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	<clinit> ()V <clinit>
bwv net/minecraft/world/entity/monster/Zombie
	b SPEED_MODIFIER_BABY_UUID
	c SPEED_MODIFIER_BABY
	d DATA_BABY_ID
	bX DATA_SPECIAL_TYPE_ID
	bY DATA_DROWNED_CONVERSION_ID
	e ZOMBIE_LEADER_CHANCE
	bT REINFORCEMENT_ATTEMPTS
	bU REINFORCEMENT_RANGE_MAX
	bV REINFORCEMENT_RANGE_MIN
	bW BABY_EYE_HEIGHT_ADJUSTMENT
	bZ BREAK_DOOR_CHANCE
	ca DOOR_BREAKING_PREDICATE
	cb breakDoorGoal
	cc canBreakDoors
	cd inWaterTime
	ce conversionTime
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;)V <init>
	x ()V registerGoals
	q ()V addBehaviourGoals
	gc ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	gf ()Z isUnderWaterConverting
	gg ()Z canBreakDoors
	x (Z)V setCanBreakDoors
	r ()Z supportsBreakDoorGoal
	h_ ()Z isBaby
	ea ()I getExperienceReward
	a (Z)V setBaby
	a (Laby;)V onSyncedDataUpdated
	fZ ()Z convertsInWater
	l ()V tick
	b_ ()V aiStep
	b (I)V startUnderWaterConversion
	gb ()V doUnderWaterConversion
	b (Lbfn;)V convertToZombieType
	X_ ()Z isSunSensitive
	a (Lben;F)Z hurt
	z (Lbfj;)Z doHurtTarget
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	w ()Lamg; getStepSound
	b (Lgu;Ldcb;)V playStepSound
	eN ()Lbge; getMobType
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Laif;Lbfz;)Z killedEntity
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	j (Lcfz;)Z canHoldItem
	k (Lcfz;)Z wantsToPickUp
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lapf;)Z getSpawnAsBabyOdds
	D (F)V handleAttributes
	gh ()V randomizeReinforcementsChance
	bw ()D getMyRidingOffset
	a (Lben;IZ)V dropCustomDeathLoot
	fY ()Lcfz; getSkull
	a (Lbdu;)Z lambda$static$0
	a (Lbwv;)Lapf; access$000
	<clinit> ()V <clinit>
bwv$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	g this$0
	<init> (Lbwv;Lbgi;DI)V <init>
	a (Lcmn;Lgu;)V playDestroyProgressSound
	a (Lcmm;Lgu;)V playBreakSound
	i ()D acceptedDistance
bwv$b net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b canSpawnJockey
	<init> (ZZ)V <init>
bww net/minecraft/world/entity/monster/ZombieVillager
	b LOGGER
	c DATA_CONVERTING_ID
	d DATA_VILLAGER_DATA
	bX VILLAGER_CONVERSION_WAIT_MIN
	bY VILLAGER_CONVERSION_WAIT_MAX
	bZ MAX_SPECIAL_BLOCKS_COUNT
	ca SPECIAL_BLOCK_RADIUS
	cb villagerConversionTime
	cc conversionStarter
	cd gossips
	ce tradeOffers
	cf villagerXp
	<init> (Lbfn;Lcmm;)V <init>
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	l ()V tick
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	fZ ()Z convertsInWater
	h (D)Z removeWhenFarAway
	gi ()Z isConverting
	a (Ljava/util/UUID;I)V startConverting
	b (B)V handleEntityEvent
	c (Laif;)V finishConversion
	gl ()I getConversionProgress
	eS ()F getVoicePitch
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	w ()Lamg; getStepSound
	fY ()Lcfz; getSkull
	c (Lqr;)V setTradeOffers
	a (Lrk;)V setGossips
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lbyc;)V setVillagerData
	gj ()Lbyc; getVillagerData
	gk ()I getVillagerXp
	b (I)V setVillagerXp
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$1
	a (Lhe$c;)V lambda$new$0
	<clinit> ()V <clinit>
bwx net/minecraft/world/entity/monster/ZombifiedPiglin
	c SPEED_MODIFIER_ATTACKING_UUID
	d SPEED_MODIFIER_ATTACKING
	bX FIRST_ANGER_SOUND_DELAY
	bY playFirstAngerSoundIn
	bZ PERSISTENT_ANGER_TIME
	ca remainingPersistentAngerTime
	cb persistentAngerTarget
	cc ALERT_RANGE_Y
	cd ALERT_INTERVAL
	ce ticksUntilNextAlert
	cf ZOMBIFIED_PIGLIN_EYE_HEIGHT
	cg ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT
	<init> (Lbfn;Lcmm;)V <init>
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	bw ()D getMyRidingOffset
	q ()V addBehaviourGoals
	gi ()Lbhf$a; createAttributes
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	fZ ()Z convertsInWater
	W ()V customServerAiStep
	gj ()V maybePlayFirstAngerSound
	gk ()V maybeAlertOthers
	gl ()V alertOthers
	gm ()V playAngerSound
	h (Lbfz;)V setTarget
	c ()V startPersistentAngerTimer
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkZombifiedPiglinSpawnRules
	a (Lcmp;)Z checkSpawnObstruction
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (I)V setRemainingPersistentAngerTime
	a ()I getRemainingPersistentAngerTime
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	fY ()Lcfz; getSkull
	gh ()V randomizeReinforcementsChance
	b ()Ljava/util/UUID; getPersistentAngerTarget
	f (Lbyo;)Z isPreventingPlayerRest
	k (Lcfz;)Z wantsToPickUp
	a (Lbwx;)V lambda$alertOthers$3
	b (Lbwx;)Z lambda$alertOthers$2
	c (Lbwx;)Z lambda$alertOthers$1
	d (Lbwx;)Z lambda$alertOthers$0
	<clinit> ()V <clinit>
bwy net/minecraft/world/entity/monster/hoglin/Hoglin
	bW DATA_IMMUNE_TO_ZOMBIFICATION
	bX PROBABILITY_OF_SPAWNING_AS_BABY
	bY MAX_HEALTH
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	ca ATTACK_KNOCKBACK
	cb KNOCKBACK_RESISTANCE
	cc ATTACK_DAMAGE
	cd BABY_ATTACK_DAMAGE
	ce CONVERSION_TIME
	cf attackAnimationRemainingTicks
	cg timeInOverworld
	ch cannotBeHunted
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	<init> (Lbfn;Lcmm;)V <init>
	a (Lbyo;)Z canBeLeashed
	q ()Lbhf$a; createAttributes
	z (Lbfj;)Z doHurtTarget
	e (Lbfz;)V blockedByShield
	a (Lben;F)Z hurt
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	W ()V customServerAiStep
	b_ ()V aiStep
	m ()V ageBoundaryReached
	c (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkHoglinSpawnRules
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	h (D)Z removeWhenFarAway
	a (Lgu;Lcmp;)F getWalkTargetValue
	bx ()D getPassengersRidingOffset
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (B)V handleEntityEvent
	fY ()I getAttackAnimationRemainingTicks
	dY ()Z shouldDropExperience
	ea ()I getExperienceReward
	c (Laif;)V finishConversion
	m (Lcfz;)Z isFood
	r ()Z isAdult
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	w (Z)V setImmuneToZombification
	gf ()Z isImmuneToZombification
	w ()Z isConverting
	x (Z)V setCannotBeHunted
	ge ()Z canBeHunted
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	fZ ()Z canFallInLove
	cY ()Lami; getSoundSource
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	aJ ()Lamg; getSwimSound
	aK ()Lamg; getSwimSplashSound
	b (Lgu;Ldcb;)V playStepSound
	b (Lamg;)V playSoundEvent
	V ()V sendDebugPackets
	<clinit> ()V <clinit>
bwz net/minecraft/world/entity/monster/hoglin/HoglinAi
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c RETREAT_DURATION
	d ATTACK_DURATION
	e DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	g ATTACK_INTERVAL
	h BABY_ATTACK_INTERVAL
	i REPELLENT_PACIFY_TIME
	j ADULT_FOLLOW_RANGE
	k SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	l SPEED_MULTIPLIER_WHEN_RETREATING
	m SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	n SPEED_MULTIPLIER_WHEN_IDLING
	o SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	<init> ()V <init>
	a (Lbha;)Lbha; makeBrain
	b (Lbha;)V initCoreActivity
	c (Lbha;)V initIdleActivity
	d (Lbha;)V initFightActivity
	e (Lbha;)V initRetreatActivity
	a ()Lbjn; createIdleMovementBehaviors
	a (Lbwy;)V updateActivity
	a (Lbwy;Lbfz;)V onHitTarget
	c (Lbwy;Lbfz;)V broadcastRetreat
	d (Lbwy;Lbfz;)V retreatFromNearestTarget
	e (Lbwy;Lbfz;)V setAvoidTarget
	d (Lbwy;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lbwy;Lgu;)Z isPosNearNearestRepellent
	e (Lbwy;)Z wantsToStopFleeing
	f (Lbwy;)Z piglinsOutnumberHoglins
	b (Lbwy;Lbfz;)V wasHurtBy
	f (Lbwy;Lbfz;)V maybeRetaliate
	g (Lbwy;Lbfz;)V setAttackTarget
	h (Lbwy;Lbfz;)V broadcastAttackTarget
	i (Lbwy;Lbfz;)V setAttackTargetIfCloserThanCurrent
	b (Lbwy;)Ljava/util/Optional; getSoundForCurrentActivity
	a (Lbwy;Lbzz;)Lamg; getSoundForActivity
	g (Lbwy;)Ljava/util/List; getVisibleAdultHoglins
	h (Lbwy;)Z isNearRepellent
	i (Lbwy;)Z isBreeding
	c (Lbwy;)Z isPacified
	b (Lbwy;Lbzz;)Lamg; lambda$getSoundForCurrentActivity$2
	a (Lbfz;Lbwy;)V lambda$broadcastAttackTarget$1
	b (Lbfz;Lbwy;)V lambda$broadcastRetreat$0
	<clinit> ()V <clinit>
bxa net/minecraft/world/entity/monster/hoglin/HoglinBase
	l_ ATTACK_ANIMATION_DURATION
	fY ()I getAttackAnimationRemainingTicks
	a (Lbfz;Lbfz;)Z hurtAndThrowTarget
	b (Lbfz;Lbfz;)V throwTarget
bxb net/minecraft/world/entity/monster/hoglin/package-info
bxc net/minecraft/world/entity/monster/package-info
bxd net/minecraft/world/entity/monster/piglin/AbstractPiglin
	b DATA_IMMUNE_TO_ZOMBIFICATION
	c CONVERSION_TIME
	d PIGLIN_EYE_HEIGHT
	e timeInOverworld
	<init> (Lbfn;Lcmm;)V <init>
	w ()V applyOpenDoorsAbility
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	q ()Z canHunt
	w (Z)V setImmuneToZombification
	r ()Z isImmuneToZombification
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	bw ()D getMyRidingOffset
	a (Lqr;)V readAdditionalSaveData
	W ()V customServerAiStep
	fY ()Z isConverting
	c (Laif;)V finishConversion
	fZ ()Z isAdult
	ga ()Lbxg; getArmPose
	j ()Lbfz; getTarget
	gb ()Z isHoldingMeleeWeapon
	N ()V playAmbientSound
	V ()V sendDebugPackets
	gc ()V playConvertedSound
	<clinit> ()V <clinit>
bxe net/minecraft/world/entity/monster/piglin/Piglin
	bV DATA_BABY_ID
	bW DATA_IS_CHARGING_CROSSBOW
	bX DATA_IS_DANCING
	bY SPEED_MODIFIER_BABY_UUID
	bZ SPEED_MODIFIER_BABY
	ca MAX_HEALTH
	cb MOVEMENT_SPEED_WHEN_FIGHTING
	cc ATTACK_DAMAGE
	cd CROSSBOW_POWER
	ce CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	cf MAX_PASSENGERS_ON_ONE_HOGLIN
	cg PROBABILITY_OF_SPAWNING_AS_BABY
	ch BABY_EYE_HEIGHT_ADJUSTMENT
	ci PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	cj inventory
	ck cannotHunt
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	<init> (Lbfn;Lcmm;)V <init>
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	w ()Lbee; getInventory
	a (Lben;IZ)V dropCustomDeathLoot
	l (Lcfz;)Lcfz; addToInventory
	m (Lcfz;)Z canAddToInventory
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	gf ()Lbhf$a; createAttributes
	b (Lbfn;Lcmn;Lbgd;Lgu;Lapf;)Z checkPiglinSpawnRules
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	U ()Z shouldDespawnInPeaceful
	h (D)Z removeWhenFarAway
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	a (Lbfo;Lcfz;Lapf;)V maybeWearArmor
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	bx ()D getPassengersRidingOffset
	a (Z)V setBaby
	h_ ()Z isBaby
	y (Z)V setCannotHunt
	q ()Z canHunt
	W ()V customServerAiStep
	ea ()I getExperienceReward
	c (Laif;)V finishConversion
	gh ()Lcfz; createSpawnWeapon
	gi ()Z isChargingCrossbow
	b (Z)V setChargingCrossbow
	a ()V onCrossbowAttackPerformed
	ga ()Lbxg; getArmPose
	gg ()Z isDancing
	x (Z)V setDancing
	a (Lben;F)Z hurt
	a (Lbfz;F)V performRangedAttack
	a (Lbfz;Lcfz;Lbzg;F)V shootCrossbowProjectile
	a (Lcgp;)Z canFireProjectileWeapon
	n (Lcfz;)V holdInMainHand
	o (Lcfz;)V holdInOffHand
	k (Lcfz;)Z wantsToPickUp
	p (Lcfz;)Z canReplaceCurrentItem
	b (Lcfz;Lcfz;)Z canReplaceCurrentItem
	b (Lbvh;)V pickUpItem
	a (Lbfj;Z)Z startRiding
	b (Lbfj;I)Lbfj; getTopPassenger
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	b (Lamg;)V playSoundEvent
	gc ()V playConvertedSound
	<clinit> ()V <clinit>
bxf net/minecraft/world/entity/monster/piglin/PiglinAi
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c BARTERING_ITEM
	e PLAYER_ANGER_RANGE
	f ANGER_DURATION
	g ADMIRE_DURATION
	h MAX_DISTANCE_TO_WALK_TO_ITEM
	i MAX_TIME_TO_WALK_TO_ITEM
	j HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	k CELEBRATION_TIME
	d TIME_BETWEEN_HUNTS
	l BABY_FLEE_DURATION_AFTER_GETTING_HIT
	m HIT_BY_PLAYER_MEMORY_TIMEOUT
	n MAX_WALK_DISTANCE_TO_START_RIDING
	o RIDE_START_INTERVAL
	p RIDE_DURATION
	q RETREAT_DURATION
	r MELEE_ATTACK_COOLDOWN
	s EAT_COOLDOWN
	t DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	u MAX_LOOK_DIST
	v MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	w INTERACTION_RANGE
	x MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	y SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	z DESIRED_DISTANCE_FROM_ZOMBIFIED
	A AVOID_ZOMBIFIED_DURATION
	B BABY_AVOID_NEMESIS_DURATION
	C PROBABILITY_OF_CELEBRATION_DANCE
	D SPEED_MULTIPLIER_WHEN_AVOIDING
	E SPEED_MULTIPLIER_WHEN_RETREATING
	F SPEED_MULTIPLIER_WHEN_MOUNTING
	G SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	H SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	I SPEED_MULTIPLIER_WHEN_DANCING
	J SPEED_MULTIPLIER_WHEN_IDLING
	<init> ()V <init>
	a (Lbxe;Lbha;)Lbha; makeBrain
	a (Lbxe;Lapf;)V initMemories
	a (Lbha;)V initCoreActivity
	b (Lbha;)V initIdleActivity
	b (Lbxe;Lbha;)V initFightActivity
	c (Lbha;)V initCelebrateActivity
	d (Lbha;)V initAdmireItemActivity
	e (Lbha;)V initRetreatActivity
	f (Lbha;)V initRideHoglinActivity
	a ()Lcom/google/common/collect/ImmutableList; createLookBehaviors
	b ()Lbjn; createIdleLookBehaviors
	c ()Lbjn; createIdleMovementBehaviors
	d ()Lbhs; avoidRepellent
	e ()Lbhs; babyAvoidNemesis
	f ()Lbhs; avoidZombified
	a (Lbxe;)V updateActivity
	f (Lbxe;)Z isBabyRidingBaby
	a (Lbxe;Lbvh;)V pickUpItem
	c (Lbxe;Lcfz;)V holdInOffhand
	a (Lbvh;)Lcfz; removeOneItemFromItemEntity
	a (Lbxe;Z)V stopHoldingOffHandItem
	b (Lbxe;)V cancelAdmiring
	d (Lbxe;Lcfz;)V putInInventory
	a (Lbxe;Ljava/util/List;)V throwItems
	b (Lbxe;Ljava/util/List;)V throwItemsTowardRandomPos
	a (Lbxe;Lbyo;Ljava/util/List;)V throwItemsTowardPlayer
	a (Lbxe;Ljava/util/List;Leei;)V throwItemsTowardPos
	g (Lbxe;)Ljava/util/List; getBarterResponseItems
	a (Lbfz;Lbfz;)Z wantsToDance
	a (Lbxe;Lcfz;)Z wantsToPickup
	a (Lcfz;)Z isLovedItem
	a (Lbxe;Lbfj;)Z wantsToStopRiding
	b (Lbxe;Lbfz;)Z isNearestValidAttackTarget
	h (Lbxe;)Z isNearZombified
	i (Lbxe;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lbyo;Z)V angerNearbyPiglins
	a (Lbxe;Lbyo;Lbdw;)Lbdx; mobInteract
	b (Lbxe;Lcfz;)Z canAdmire
	a (Lbxe;Lbfz;)V wasHurtBy
	a (Lbxd;Lbfz;)V maybeRetaliate
	c (Lbxe;)Ljava/util/Optional; getSoundForCurrentActivity
	a (Lbxe;Lbzz;)Lamg; getSoundForActivity
	j (Lbxe;)Z isNearAvoidTarget
	d (Lbxe;)Ljava/util/List; getVisibleAdultPiglins
	e (Lbxd;)Ljava/util/List; getAdultPiglins
	a (Lbfz;)Z isWearingGold
	k (Lbxe;)V stopWalking
	g ()Lbhs; babySometimesRideBabyHoglin
	b (Lbxd;Lbfz;)V broadcastAngerTarget
	a (Lbxd;)V broadcastUniversalAnger
	c (Lbxd;Lbfz;)V setAngerTarget
	d (Lbxd;Lbfz;)V setAngerTargetToNearestTargetablePlayerIfFound
	e (Lbxd;Lbfz;)V setAngerTargetIfCloserThanCurrent
	f (Lbxd;)Ljava/util/Optional; getAngerTarget
	e (Lbxe;)Ljava/util/Optional; getAvoidTarget
	b (Lbxd;)Ljava/util/Optional; getNearestVisibleTargetablePlayer
	c (Lbxe;Lbfz;)V broadcastRetreat
	d (Lbxe;Lbfz;)V retreatFromNearestTarget
	l (Lbxe;)Z wantsToStopFleeing
	m (Lbxe;)Z piglinsEqualOrOutnumberHoglins
	n (Lbxe;)Z hoglinsOutnumberPiglins
	e (Lbxe;Lbfz;)V setAvoidTargetAndDontHuntForAWhile
	c (Lbxd;)V dontKillAnyMoreHoglinsForAWhile
	o (Lbxe;)V eat
	p (Lbxe;)Leei; getRandomNearbyPos
	q (Lbxe;)Z hasEatenRecently
	d (Lbxd;)Z isIdle
	c (Lbfz;)Z hasCrossbow
	d (Lbfz;)V admireGoldItem
	r (Lbxe;)Z isAdmiringItem
	b (Lcfz;)Z isBarterCurrency
	c (Lcfz;)Z isFood
	s (Lbxe;)Z isNearRepellent
	e (Lbfz;)Z seesPlayerHoldingLovedItem
	f (Lbfz;)Z doesntSeeAnyPlayerHoldingLovedItem
	b (Lbfz;)Z isPlayerHoldingLovedItem
	t (Lbxe;)Z isAdmiringDisabled
	g (Lbfz;)Z wasHurtRecently
	u (Lbxe;)Z isHoldingItemInOffHand
	v (Lbxe;)Z isNotHoldingLovedItemInOffHand
	a (Lbfn;)Z isZombified
	a (Lbfz;Lbxd;)V lambda$broadcastRetreat$13
	g (Lbxd;)Z lambda$broadcastRetreat$12
	h (Lbxd;)V lambda$broadcastUniversalAnger$11
	a (Lbxd;Lbyo;)V lambda$broadcastUniversalAnger$10
	b (Lbfz;Lbxd;)V lambda$broadcastAngerTarget$9
	a (Lbjq$a;Lbfz;)Z lambda$babySometimesRideBabyHoglin$8
	b (Lbxe;Lbzz;)Lamg; lambda$getSoundForCurrentActivity$7
	a (Lbfz;Lbha;Lbfz;)V lambda$wasHurtBy$6
	a (Lbyo;Lbxe;)V lambda$angerNearbyPiglins$5
	a (ZLbyo;Lbxe;)Z lambda$angerNearbyPiglins$4
	b (Lbfz;Lbfz;)Z lambda$isNearestValidAttackTarget$3
	w (Lbxe;)Z lambda$initRideHoglinActivity$2
	x (Lbxe;)Z lambda$initCelebrateActivity$1
	f (Lbxe;Lbfz;)Z lambda$initFightActivity$0
	<clinit> ()V <clinit>
bxg net/minecraft/world/entity/monster/piglin/PiglinArmPose
	a ATTACKING_WITH_MELEE_WEAPON
	b CROSSBOW_HOLD
	c CROSSBOW_CHARGE
	d ADMIRING_ITEM
	e DANCING
	f DEFAULT
	g $VALUES
	values ()[Lbxg; values
	valueOf (Ljava/lang/String;)Lbxg; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbxg; $values
	<clinit> ()V <clinit>
bxh net/minecraft/world/entity/monster/piglin/PiglinBrute
	bV MAX_HEALTH
	bW MOVEMENT_SPEED_WHEN_FIGHTING
	bX ATTACK_DAMAGE
	bT SENSOR_TYPES
	bU MEMORY_TYPES
	<init> (Lbfn;Lcmm;)V <init>
	w ()Lbhf$a; createAttributes
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lapf;Lbdv;)V populateDefaultEquipmentSlots
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	q ()Z canHunt
	k (Lcfz;)Z wantsToPickUp
	W ()V customServerAiStep
	ga ()Lbxg; getArmPose
	a (Lben;F)Z hurt
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	gf ()V playAngrySound
	gc ()V playConvertedSound
	<clinit> ()V <clinit>
bxi net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	a ANGER_DURATION
	b MELEE_ATTACK_COOLDOWN
	c ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	d MAX_LOOK_DIST
	e INTERACTION_RANGE
	f TARGETING_RANGE
	g SPEED_MULTIPLIER_WHEN_IDLING
	h HOME_CLOSE_ENOUGH_DISTANCE
	i HOME_TOO_FAR_DISTANCE
	j HOME_STROLL_AROUND_DISTANCE
	<init> ()V <init>
	a (Lbxh;Lbha;)Lbha; makeBrain
	a (Lbxh;)V initMemories
	b (Lbxh;Lbha;)V initCoreActivity
	c (Lbxh;Lbha;)V initIdleActivity
	d (Lbxh;Lbha;)V initFightActivity
	a ()Lbjn; createIdleLookBehaviors
	b ()Lbjn; createIdleMovementBehaviors
	b (Lbxh;)V updateActivity
	a (Lbxd;Lbfz;)Z isNearestValidAttackTarget
	a (Lbxd;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lbxd;Lbpb;)Ljava/util/Optional; getTargetIfWithinRange
	a (Lbxh;Lbfz;)V wasHurtBy
	b (Lbxh;Lbfz;)V setAngerTarget
	c (Lbxh;)V maybePlayActivitySound
	d (Lbxh;)V playActivitySound
	a (Lbxh;Lbzz;)V lambda$playActivitySound$3
	b (Lbxd;Lbfz;)Z lambda$getTargetIfWithinRange$2
	a (Lbfz;Lbfz;)Z lambda$isNearestValidAttackTarget$1
	c (Lbxh;Lbfz;)Z lambda$initFightActivity$0
bxj net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;Laif;Lbfz;J)Z lambda$create$0
bxk net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	<init> ()V <init>
	a (I)Lbhs; create
	a (ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;Lble;ILaif;Lbfz;J)Z lambda$create$0
bxl net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	<init> ()V <init>
	a ()Lbjb; create
	a (Lbxd;)Z hasHuntedRecently
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$4
	a (Lbld$b;Lble;Lble;Lble;Lble;)Lblg; lambda$create$3
	a (Lbld$b;Lble;Lble;Laif;Lbxe;J)Z lambda$create$2
	a (Ljava/util/List;)V lambda$create$1
	b (Ljava/util/List;)Ljava/lang/Boolean; lambda$create$0
bxm net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	<init> ()V <init>
	a (I)Lbhs; create
	a (ILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;ILble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ILble;Laif;Lbfz;J)Z lambda$create$0
bxn net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	<init> ()V <init>
	a (II)Lbhs; create
	a (IILbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lbld$b;IILble;Lble;Lble;Lble;)Lblg; lambda$create$1
	a (Lbld$b;Lble;ILble;Lble;ILaif;Lbfz;J)Z lambda$create$0
bxo net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	<init> ()V <init>
	a ()Lbhs; create
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$create$2
	a (Lble;)Lblg; lambda$create$1
	a (Laif;Lbxe;J)Z lambda$create$0
bxp net/minecraft/world/entity/monster/piglin/package-info
bxq net/minecraft/world/entity/monster/warden/AngerLevel
	a CALM
	b AGITATED
	c ANGRY
	d SORTED_LEVELS
	e minimumAnger
	f ambientSound
	g listeningSound
	h $VALUES
	values ()[Lbxq; values
	valueOf (Ljava/lang/String;)Lbxq; valueOf
	<init> (Ljava/lang/String;IILamg;Lamg;)V <init>
	a ()I getMinimumAnger
	b ()Lamg; getAmbientSound
	c ()Lamg; getListeningSound
	a (I)Lbxq; byAnger
	d ()Z isAngry
	a ([Lbxq;)V lambda$static$1
	a (Lbxq;Lbxq;)I lambda$static$0
	e ()[Lbxq; $values
	<clinit> ()V <clinit>
bxr net/minecraft/world/entity/monster/warden/AngerManagement
	a CONVERSION_DELAY
	b MAX_ANGER
	f DEFAULT_ANGER_DECREASE
	g conversionDelay
	h highestAnger
	i SUSPECT_ANGER_PAIR
	j filter
	c suspects
	k suspectSorter
	d angerBySuspect
	e angerByUuid
	a (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/util/function/Predicate;Ljava/util/List;)V <init>
	b ()Ljava/util/List; createUuidAngerPairs
	a (Laif;Ljava/util/function/Predicate;)V tick
	c ()V sortAndUpdateHighestAnger
	a (Laif;)V convertFromUuids
	a (Lbfj;I)I increaseAnger
	a (Lbfj;)V clearAnger
	d ()Lbfj; getTopSuspect
	b (Lbfj;)I getActiveAnger
	a ()Ljava/util/Optional; getActiveEntity
	c (Lbfj;)Lbfz; lambda$getActiveEntity$8
	d (Lbfj;)Z lambda$getActiveEntity$7
	a (ILbfj;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$increaseAnger$6
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$createUuidAngerPairs$5
	e (Lbfj;)Lcom/mojang/datafixers/util/Pair; lambda$createUuidAngerPairs$4
	a (Lcom/mojang/datafixers/util/Pair;)V lambda$new$3
	a (Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$2
	a (Ljava/util/function/Predicate;Ljava/util/List;)Lbxr; lambda$codec$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
bxr$1 net/minecraft/world/entity/monster/warden/AngerManagement$1
	a $SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
	<clinit> ()V <clinit>
bxr$a net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	a angerManagement
	<init> (Lbxr;)V <init>
	a (Lbfj;Lbfj;)I compare
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbxr; angerManagement
	compare (Ljava/lang/Object;Ljava/lang/Object;)I compare
bxs net/minecraft/world/entity/monster/warden/Warden
	bV LOGGER
	bW VIBRATION_COOLDOWN_TICKS
	bX TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	bY MAX_HEALTH
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	ca KNOCKBACK_RESISTANCE
	cb ATTACK_KNOCKBACK
	cc ATTACK_DAMAGE
	cd CLIENT_ANGER_LEVEL
	ce DARKNESS_DISPLAY_LIMIT
	cf DARKNESS_DURATION
	cg DARKNESS_RADIUS
	ch DARKNESS_INTERVAL
	ci ANGERMANAGEMENT_TICK_DELAY
	cj DEFAULT_ANGER
	ck PROJECTILE_ANGER
	cl ON_HURT_ANGER_BOOST
	cm RECENT_PROJECTILE_TICK_THRESHOLD
	cn TOUCH_COOLDOWN_TICKS
	co DIGGING_PARTICLES_AMOUNT
	cp DIGGING_PARTICLES_DURATION
	cq DIGGING_PARTICLES_OFFSET
	cr PROJECTILE_ANGER_DISTANCE
	cs tendrilAnimation
	ct tendrilAnimationO
	cu heartAnimation
	cv heartAnimationO
	b roarAnimationState
	c sniffAnimationState
	d emergeAnimationState
	e diggingAnimationState
	bT attackAnimationState
	bU sonicBoomAnimationState
	cw dynamicGameEventListener
	cx vibrationUser
	cy vibrationData
	cz angerManagement
	<init> (Lbfn;Lcmm;)V <init>
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	a (Lcmp;)Z checkSpawnObstruction
	a (Lgu;Lcmp;)F getWalkTargetValue
	b (Lben;)Z isInvulnerableTo
	ga ()Z isDiggingOrEmerging
	l (Lbfj;)Z canRide
	fB ()Z canDisableShield
	aI ()F nextStep
	q ()Lbhf$a; createAttributes
	aT ()Z dampensVibrations
	eR ()F getSoundVolume
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	b (Lgu;Ldcb;)V playStepSound
	z (Lbfj;)Z doHurtTarget
	a_ ()V defineSynchedData
	r ()I getClientAngerLevel
	gf ()V syncClientAngerLevel
	l ()V tick
	W ()V customServerAiStep
	b (B)V handleEntityEvent
	gg ()I getHeartBeatDelay
	D (F)F getTendrilAnimation
	E (F)F getHeartAnimation
	a (Lbff;)V clientDiggingParticles
	a (Laby;)V onSyncedDataUpdated
	cJ ()Z ignoreExplosion
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	dK ()Lbha; getBrain
	V ()V sendDebugPackets
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Lbfj;)Z canTargetEntity
	a (Laif;Leei;Lbfj;I)V applyDarknessAround
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	gh ()V playListeningSound
	w ()Lbxq; getAngerLevel
	gi ()I getActiveAnger
	b (Lbfj;)V clearAnger
	c (Lbfj;)V increaseAngerAt
	a (Lbfj;IZ)V increaseAngerAt
	fY ()Ljava/util/Optional; getEntityAngryAt
	j ()Lbfz; getTarget
	h (D)Z removeWhenFarAway
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	a (Lben;F)Z hurt
	l (Lbfz;)V setAttackTarget
	a (Lbgl;)Lbfk; getDimensions
	bp ()Z isPushable
	A (Lbfj;)V doPush
	fZ ()Lbxr; getAngerManagement
	b (Lcmm;)Lbpj; createNavigation
	gb ()Ldgu$a; getVibrationData
	gc ()Ldgu$d; getVibrationUser
	a (Ldgu$a;)V lambda$readAdditionalSaveData$3
	a (Lbxr;)V lambda$readAdditionalSaveData$2
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$1
	b (Lqr;Lrk;)V lambda$addAdditionalSaveData$0
	a (Lbxs;)Lbha; access$000
	<clinit> ()V <clinit>
bxs$1 net/minecraft/world/entity/monster/warden/Warden$1
	p this$0
	<init> (Lbxs;Lbgb;Lcmm;)V <init>
	a (I)Ldxv; createPathFinder
bxs$1$1 net/minecraft/world/entity/monster/warden/Warden$1$1
	a this$1
	<init> (Lbxs$1;Ldxs;I)V <init>
	a (Ldxr;Ldxr;)F distance
bxs$2 net/minecraft/world/entity/monster/warden/Warden$2
	a $SwitchMap$net$minecraft$world$entity$Pose
	<clinit> ()V <clinit>
bxs$a net/minecraft/world/entity/monster/warden/Warden$VibrationUser
	b GAME_EVENT_LISTENER_RANGE
	c positionSource
	a this$0
	<init> (Lbxs;)V <init>
	a ()I getListenerRadius
	b ()Ldgp; getPositionSource
	c ()Lanl; getListenableEvents
	d ()Z canTriggerAvoidVibration
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Laif;Lgu;Ldgl;Lbfj;Lbfj;F)V onReceiveVibration
bxt net/minecraft/world/entity/monster/warden/WardenAi
	d SPEED_MULTIPLIER_WHEN_IDLING
	e SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f SPEED_MULTIPLIER_WHEN_FIGHTING
	g MELEE_ATTACK_COOLDOWN
	h DIGGING_DURATION
	a EMERGE_DURATION
	b ROAR_DURATION
	i SNIFFING_DURATION
	c DIGGING_COOLDOWN
	j DISTURBANCE_LOCATION_EXPIRY_TIME
	k SENSOR_TYPES
	l MEMORY_TYPES
	m DIG_COOLDOWN_SETTER
	<init> ()V <init>
	a (Lbxs;)V updateActivity
	a (Lbxs;Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	a (Lbha;)V initCoreActivity
	b (Lbha;)V initEmergeActivity
	c (Lbha;)V initDiggingActivity
	d (Lbha;)V initIdleActivity
	e (Lbha;)V initInvestigateActivity
	f (Lbha;)V initSniffingActivity
	g (Lbha;)V initRoarActivity
	a (Lbxs;Lbha;)V initFightActivity
	a (Lbxs;Lbfz;)Z isTarget
	b (Lbxs;Lbfz;)V onTargetInvalid
	a (Lbfz;)V setDigCooldown
	a (Lbxs;Lgu;)V setDisturbanceLocation
	a (Lbfz;Lbfz;)Z lambda$isTarget$5
	c (Lbxs;Lbfz;)Z lambda$initFightActivity$4
	d (Lbxs;Lbfz;)Z lambda$initFightActivity$3
	a (Lbld$b;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lbld$b;Lble;)Lblg; lambda$static$1
	a (Lbld$b;Lble;Laif;Lbxs;J)Z lambda$static$0
	<clinit> ()V <clinit>
bxu net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	a CODEC
	b MAX_WARNING_LEVEL
	c PLAYER_SEARCH_RADIUS
	d WARNING_CHECK_DIAMETER
	e DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f WARNING_LEVEL_INCREASE_COOLDOWN
	g ticksSinceLastWarning
	h warningLevel
	i cooldownTicks
	<init> (III)V <init>
	a ()V tick
	b ()V reset
	a (Laif;Lgu;Laig;)Ljava/util/OptionalInt; tryWarn
	d ()Z onCooldown
	a (Laif;Lgu;)Z hasNearbyWarden
	b (Laif;Lgu;)Ljava/util/List; getNearbyPlayers
	e ()V increaseWarningLevel
	f ()V decreaseWarningLevel
	a (I)V setWarningLevel
	c ()I getWarningLevel
	a (Lbxu;)V copyData
	a (Leei;Laig;)Z lambda$getNearbyPlayers$8
	a (Lbxu;Laig;)V lambda$tryWarn$7
	a (Lbxu;Lbxu;)V lambda$tryWarn$6
	a (Laig;)Ljava/util/stream/Stream; lambda$tryWarn$5
	b (Laig;)Z lambda$tryWarn$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	b (Lbxu;)Ljava/lang/Integer; lambda$static$2
	c (Lbxu;)Ljava/lang/Integer; lambda$static$1
	d (Lbxu;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
bxv net/minecraft/world/entity/monster/warden/package-info
bxw net/minecraft/world/entity/npc/AbstractVillager
	bV DATA_UNHAPPY_COUNTER
	bT VILLAGER_SLOT_OFFSET
	bW VILLAGER_INVENTORY_SIZE
	bX tradingPlayer
	bU offers
	bY inventory
	<init> (Lbfn;Lcmm;)V <init>
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	q ()I getUnhappyCounter
	s (I)V setUnhappyCounter
	r ()I getVillagerXp
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	a_ ()V defineSynchedData
	f (Lbyo;)V setTradingPlayer
	fY ()Lbyo; getTradingPlayer
	fZ ()Z isTrading
	ga ()Lcll; getOffers
	a (Lcll;)V overrideOffers
	t (I)V overrideXp
	a (Lclk;)V notifyTrade
	b (Lclk;)V rewardTradeXp
	gb ()Z showProgressBar
	l (Lcfz;)V notifyTradeUpdated
	gc ()Lamg; getNotifyTradeSound
	w (Z)Lamg; getTradeUpdatedSound
	gd ()V playCelebrateSound
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (Laif;)Lbfj; changeDimension
	ge ()V stopTrading
	a (Lben;)V die
	a (Lit;)V addParticlesAroundSelf
	a (Lbyo;)Z canBeLeashed
	w ()Lbee; getInventory
	a_ (I)Lbgs; getSlot
	gf ()V updateTrades
	a (Lcll;[Lbyf$f;I)V addOffersFromItemListings
	q (F)Leei; getRopeHoldPosition
	gg ()Z isClientSide
	<clinit> ()V <clinit>
bxx net/minecraft/world/entity/npc/CatSpawner
	a TICK_DELAY
	b nextTick
	<init> ()V <init>
	a (Laif;ZZ)I tick
	a (Laif;Lgu;)I spawnInVillage
	b (Laif;Lgu;)I spawnInHut
	a (Lgu;Laif;)I spawnCat
	a (Lhe;)Z lambda$spawnInVillage$0
bxy net/minecraft/world/entity/npc/ClientSideMerchant
	a source
	b offers
	c xp
	<init> (Lbyo;)V <init>
	fY ()Lbyo; getTradingPlayer
	f (Lbyo;)V setTradingPlayer
	ga ()Lcll; getOffers
	a (Lcll;)V overrideOffers
	a (Lclk;)V notifyTrade
	l (Lcfz;)V notifyTradeUpdated
	gg ()Z isClientSide
	r ()I getVillagerXp
	t (I)V overrideXp
	gb ()Z showProgressBar
	gc ()Lamg; getNotifyTradeSound
bxz net/minecraft/world/entity/npc/InventoryCarrier
	c_ TAG_INVENTORY
	w ()Lbee; getInventory
	a (Lbgb;Lbxz;Lbvh;)V pickUpItem
	c (Lqr;)V readInventoryFromTag
	a_ (Lqr;)V writeInventoryToTag
bya net/minecraft/world/entity/npc/Npc
byb net/minecraft/world/entity/npc/Villager
	bZ LOGGER
	ca DATA_VILLAGER_DATA
	bV BREEDING_FOOD_THRESHOLD
	bW FOOD_POINTS
	cb TRADES_PER_LEVEL
	cc WANTED_ITEMS
	cd MAX_GOSSIP_TOPICS
	ce GOSSIP_COOLDOWN
	cf GOSSIP_DECAY_INTERVAL
	cg REPUTATION_CHANGE_PER_EVENT
	ch HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	ci HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	cj TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	bX SPEED_MODIFIER
	ck updateMerchantTimer
	cl increaseProfessionLevelOnUpdate
	cm lastTradedPlayer
	cn chasing
	co foodLevel
	cp gossips
	cq lastGossipTime
	cr lastGossipDecayTime
	cs villagerXp
	ct lastRestockGameTime
	cu numberOfRestocksToday
	cv lastRestockCheckDayTime
	cw assignProfessionWhenSpawned
	cx MEMORY_TYPES
	cy SENSOR_TYPES
	bY POI_MEMORIES
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;Lcmm;Lbyg;)V <init>
	dK ()Lbha; getBrain
	dL ()Lbha$b; brainProvider
	a (Lcom/mojang/serialization/Dynamic;)Lbha; makeBrain
	c (Laif;)V refreshBrain
	a (Lbha;)V registerBrainGoals
	m ()V ageBoundaryReached
	gh ()Lbhf$a; createAttributes
	gi ()Z assignProfessionWhenSpawned
	W ()V customServerAiStep
	l ()V tick
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	gu ()V setUnhappy
	h (Lbyo;)V startTrading
	f (Lbyo;)V setTradingPlayer
	ge ()V stopTrading
	gv ()V resetSpecialPrices
	gk ()Z canRestock
	gg ()Z isClientSide
	gl ()V restock
	gw ()V resendOffersToTradingPlayer
	gx ()Z needsToRestock
	gy ()Z allowedToRestock
	gm ()Z shouldRestock
	gz ()V catchUpDemand
	gA ()V updateDemand
	i (Lbyo;)V updateSpecialPrices
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	h (D)Z removeWhenFarAway
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	gn ()V playWorkSound
	a (Lbyc;)V setVillagerData
	gj ()Lbyc; getVillagerData
	b (Lclk;)V rewardTradeXp
	x (Z)V setChasing
	go ()Z isChasing
	a (Lbfz;)V setLastHurtByMob
	a (Lben;)V die
	gB ()V releaseAllPois
	a (Lbfj;)V tellWitnessesThatIWasMurdered
	a (Lbpb;)V releasePoi
	P_ ()Z canBreed
	gC ()Z hungry
	gD ()V eatUntilFull
	g (Lbyo;)I getPlayerReputation
	v (I)V digestFood
	gp ()V eatAndDigestFood
	b (Lcll;)V setOffers
	gE ()Z shouldIncreaseLevel
	gF ()V increaseMerchantCareer
	cl ()Lsw; getTypeName
	b (B)V handleEntityEvent
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	b (Laif;Lbfe;)Lbyb; getBreedOffspring
	a (Laif;Lbfy;)V thunderHit
	b (Lbvh;)V pickUpItem
	k (Lcfz;)Z wantsToPickUp
	gq ()Z hasExcessFood
	gr ()Z wantsMoreFood
	gG ()I countFoodPointsInInventory
	gs ()Z hasFarmSeeds
	gf ()V updateTrades
	a (Laif;Lbyb;J)V gossip
	gH ()V maybeDecayGossip
	a (Laif;JI)V spawnGolemIfNeeded
	a (J)Z wantsToSpawnGolem
	a (Lbqw;Lbfj;)V onReputationEventFrom
	r ()I getVillagerXp
	u (I)V setVillagerXp
	gI ()V resetNumberOfRestocks
	gt ()Lbox; getGossips
	a (Lrk;)V setGossips
	V ()V sendDebugPackets
	b (Lgu;)V startSleeping
	fz ()V stopSleeping
	b (J)Z golemSpawnConditionsMet
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	a (JLbyb;)Z lambda$spawnGolemIfNeeded$10
	m (Lcfz;)Z lambda$hasFarmSeeds$9
	a (Lbee;Ljava/util/Map$Entry;)I lambda$countFoodPointsInInventory$8
	a (Lboy;)Z lambda$getPlayerReputation$7
	a (Lnet/minecraft/server/MinecraftServer;Lbpb;Lhd;)V lambda$releasePoi$6
	a (Laif;Lbfj;Lbfz;)V lambda$tellWitnessesThatIWasMurdered$5
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$4
	a (Lbyb;Lhe;)Z lambda$static$3
	b (Lbyb;Lhe;)Z lambda$static$2
	c (Lbyb;Lhe;)Z lambda$static$1
	d (Lbyb;Lhe;)Z lambda$static$0
	<clinit> ()V <clinit>
byc net/minecraft/world/entity/npc/VillagerData
	a MIN_VILLAGER_LEVEL
	b MAX_VILLAGER_LEVEL
	d NEXT_LEVEL_XP_THRESHOLDS
	c CODEC
	e type
	f profession
	g level
	<init> (Lbyg;Lbye;I)V <init>
	a ()Lbyg; getType
	b ()Lbye; getProfession
	c ()I getLevel
	a (Lbyg;)Lbyc; setType
	a (Lbye;)Lbyc; setProfession
	a (I)Lbyc; setLevel
	b (I)I getMinXpPerLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Lbyc;)Ljava/lang/Integer; lambda$static$4
	b (Lbyc;)Lbye; lambda$static$3
	d ()Lbye; lambda$static$2
	c (Lbyc;)Lbyg; lambda$static$1
	e ()Lbyg; lambda$static$0
	<clinit> ()V <clinit>
byd net/minecraft/world/entity/npc/VillagerDataHolder
	gj ()Lbyc; getVillagerData
	a (Lbyc;)V setVillagerData
	a ()Lbyg; getVariant
	a (Lbyg;)V setVariant
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
bye net/minecraft/world/entity/npc/VillagerProfession
	q name
	r heldJobSite
	s acquirableJobSite
	t requestedItems
	u secondaryPoi
	v workSound
	a ALL_ACQUIRABLE_JOBS
	b NONE
	c ARMORER
	d BUTCHER
	e CARTOGRAPHER
	f CLERIC
	g FARMER
	h FISHERMAN
	i FLETCHER
	j LEATHERWORKER
	k LIBRARIAN
	l MASON
	m NITWIT
	n SHEPHERD
	o TOOLSMITH
	p WEAPONSMITH
	<init> (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamg;)V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;Lacp;Lamg;)Lbye; register
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lamg;)Lbye; register
	a (Ljava/lang/String;Lacp;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamg;)Lbye; register
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lamg;)Lbye; register
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; name
	b ()Ljava/util/function/Predicate; heldJobSite
	c ()Ljava/util/function/Predicate; acquirableJobSite
	d ()Lcom/google/common/collect/ImmutableSet; requestedItems
	e ()Lcom/google/common/collect/ImmutableSet; secondaryPoi
	f ()Lamg; workSound
	a (Lacp;Lhe;)Z lambda$register$4
	b (Lacp;Lhe;)Z lambda$register$3
	c (Lacp;Lhe;)Z lambda$register$2
	d (Lacp;Lhe;)Z lambda$register$1
	a (Lhe;)Z lambda$static$0
	<clinit> ()V <clinit>
byf net/minecraft/world/entity/npc/VillagerTrades
	c DEFAULT_SUPPLY
	d COMMON_ITEMS_SUPPLY
	e UNCOMMON_ITEMS_SUPPLY
	f XP_LEVEL_1_SELL
	g XP_LEVEL_1_BUY
	h XP_LEVEL_2_SELL
	i XP_LEVEL_2_BUY
	j XP_LEVEL_3_SELL
	k XP_LEVEL_3_BUY
	l XP_LEVEL_4_SELL
	m XP_LEVEL_4_BUY
	n XP_LEVEL_5_TRADE
	o LOW_TIER_PRICE_MULTIPLIER
	p HIGH_TIER_PRICE_MULTIPLIER
	a TRADES
	b WANDERING_TRADER_TRADES
	<init> ()V <init>
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
byf$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	<init> (Lcfu;I)V <init>
	<init> (Lcfu;III)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
	a (Lapf;)Lceo; getRandomDye
byf$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	<init> (Lcml;III)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	<init> (IIILjava/util/Map;)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
	a (Lbyg;)V lambda$new$1
	a (Ljava/util/Map;Lbyg;)Z lambda$new$0
byf$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	<init> (I)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	<init> (Lcfu;III)V <init>
	<init> (Lcfu;IIIF)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$f net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lbfj;Lapf;)Lclk; getOffer
byf$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	<init> (Lcml;ILcfu;III)V <init>
	<init> (Lcml;IILcfu;III)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	<init> (Lcpn;IIII)V <init>
	<init> (Lcfu;III)V <init>
	<init> (Lcfu;IIII)V <init>
	<init> (Lcfz;IIII)V <init>
	<init> (Lcfz;IIIIF)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$i net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	<init> (Lbey;II)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byf$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	<init> (Lcfu;ILcfu;IIII)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
	a (Lchw;)Z lambda$getOffer$0
byf$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c displayName
	d destinationType
	e maxUses
	f villagerXp
	<init> (ILanl;Ljava/lang/String;Ldyl$a;II)V <init>
	a (Lbfj;Lapf;)Lclk; getOffer
byg net/minecraft/world/entity/npc/VillagerType
	a DESERT
	b JUNGLE
	c PLAINS
	d SAVANNA
	e SNOW
	f SWAMP
	g TAIGA
	h name
	i BY_BIOME
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Lbyg; register
	a (Lhe;)Lbyg; byBiome
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
byh net/minecraft/world/entity/npc/WanderingTrader
	bV NUMBER_OF_TRADE_OFFERS
	bW wanderTarget
	bX despawnDelay
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	a (Laif;Lbfe;)Lbfe; getBreedOffspring
	gb ()Z showProgressBar
	b (Lbyo;Lbdw;)Lbdx; mobInteract
	gf ()V updateTrades
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	h (D)Z removeWhenFarAway
	b (Lclk;)V rewardTradeXp
	s ()Lamg; getAmbientSound
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	c (Lcfz;)Lamg; getDrinkingSound
	w (Z)Lamg; getTradeUpdatedSound
	gc ()Lamg; getNotifyTradeSound
	u (I)V setDespawnDelay
	gh ()I getDespawnDelay
	b_ ()V aiStep
	gi ()V maybeDespawn
	i (Lgu;)V setWanderTarget
	gj ()Lgu; getWanderTarget
	e (Lbyh;)Z lambda$registerGoals$1
	f (Lbyh;)Z lambda$registerGoals$0
	a (Lbyh;)Lbpj; access$000
	b (Lbyh;)Lbpj; access$100
	c (Lbyh;)Lbpj; access$200
	d (Lbyh;)Lbpj; access$300
byh$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	d this$0
	<init> (Lbyh;Lbyh;DD)V <init>
	d ()V stop
	a ()Z canUse
	e ()V tick
	a (Lgu;D)Z isTooFarAway
byi net/minecraft/world/entity/npc/WanderingTraderSpawner
	b DEFAULT_TICK_DELAY
	a DEFAULT_SPAWN_DELAY
	c MIN_SPAWN_CHANCE
	d MAX_SPAWN_CHANCE
	e SPAWN_CHANCE_INCREASE
	f SPAWN_ONE_IN_X_CHANCE
	g NUMBER_OF_SPAWN_ATTEMPTS
	h random
	i serverLevelData
	j tickDelay
	k spawnDelay
	l spawnChance
	<init> (Ldzd;)V <init>
	a (Laif;ZZ)I tick
	a (Laif;)Z spawn
	a (Laif;Lbyh;I)V tryToSpawnLlamaFor
	a (Lcmp;Lgu;I)Lgu; findSpawnPositionNear
	a (Lcls;Lgu;)Z hasEnoughSpace
	a (Lgu;)Z lambda$spawn$1
	a (Lhe;)Z lambda$spawn$0
byj net/minecraft/world/entity/npc/package-info
byk net/minecraft/world/entity/package-info
byl net/minecraft/world/entity/player/Abilities
	a invulnerable
	b flying
	c mayfly
	d instabuild
	e mayBuild
	f flyingSpeed
	g walkingSpeed
	<init> ()V <init>
	a (Lqr;)V addSaveData
	b (Lqr;)V loadSaveData
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
bym net/minecraft/world/entity/player/ChatVisiblity
	a FULL
	b SYSTEM
	c HIDDEN
	d BY_ID
	e id
	f key
	g $VALUES
	values ()[Lbym; values
	valueOf (Ljava/lang/String;)Lbym; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getKey
	a (I)Lbym; byId
	d ()[Lbym; $values
	<clinit> ()V <clinit>
byn net/minecraft/world/entity/player/Inventory
	c POP_TIME_DURATION
	d INVENTORY_SIZE
	n SELECTION_SIZE
	e SLOT_OFFHAND
	f NOT_FOUND_INDEX
	g ALL_ARMOR_SLOTS
	h HELMET_SLOT_ONLY
	i items
	j armor
	k offhand
	o compartments
	l selected
	m player
	p timesChanged
	<init> (Lbyo;)V <init>
	f ()Lcfz; getSelected
	g ()I getSelectionSize
	a (Lcfz;Lcfz;)Z hasRemainingSpaceForItem
	h ()I getFreeSlot
	a (Lcfz;)V setPickedItem
	c (I)V pickSlot
	d (I)Z isHotbarSlot
	b (Lcfz;)I findSlotMatchingItem
	c (Lcfz;)I findSlotMatchingUnusedItem
	i ()I getSuitableHotbarSlot
	a (D)V swapPaint
	a (Ljava/util/function/Predicate;ILbdq;)I clearOrCountMatchingItems
	i (Lcfz;)I addResource
	d (ILcfz;)I addResource
	d (Lcfz;)I getSlotWithRemainingSpace
	j ()V tick
	e (Lcfz;)Z add
	c (ILcfz;)Z add
	f (Lcfz;)V placeItemBackInInventory
	a (Lcfz;Z)V placeItemBackInInventory
	a (II)Lcfz; removeItem
	g (Lcfz;)V removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Ldcb;)F getDestroySpeed
	a (Lqx;)Lqx; save
	b (Lqx;)V load
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	Z ()Lsw; getName
	e (I)Lcfz; getArmor
	a (Lben;F[I)V hurtArmor
	k ()V dropAll
	e ()V setChanged
	l ()I getTimesChanged
	a (Lbyo;)Z stillValid
	h (Lcfz;)Z contains
	a (Lanl;)Z contains
	a (Lbyn;)V replaceWith
	a ()V clearContent
	a (Lbys;)V fillStackedContents
	a (Z)Lcfz; removeFromSelected
	a (ILbyo;)V lambda$hurtArmor$1
	j (Lcfz;)Ljava/lang/String; lambda$add$0
	<clinit> ()V <clinit>
byo net/minecraft/world/entity/player/Player
	b LOGGER
	bB MAX_NAME_LENGTH
	bC MAX_HEALTH
	bD SLEEP_DURATION
	bE WAKE_UP_DURATION
	bF ENDER_SLOT_OFFSET
	bG CROUCH_BB_HEIGHT
	bH SWIMMING_BB_WIDTH
	bI SWIMMING_BB_HEIGHT
	bJ DEFAULT_EYE_HEIGHT
	bK STANDING_DIMENSIONS
	c POSES
	d FLY_ACHIEVEMENT_SPEED
	e DATA_PLAYER_ABSORPTION_ID
	f DATA_SCORE_ID
	bL DATA_PLAYER_MODE_CUSTOMISATION
	bM DATA_PLAYER_MAIN_HAND
	bN DATA_SHOULDER_LEFT
	bO DATA_SHOULDER_RIGHT
	g timeEntitySatOnShoulder
	cl inventory
	bP enderChestInventory
	bQ inventoryMenu
	bR containerMenu
	bS foodData
	bT jumpTriggerTime
	bU oBob
	bV bob
	bW takeXpDelay
	bX xCloakO
	bY yCloakO
	bZ zCloakO
	ca xCloak
	cb yCloak
	cc zCloak
	cm sleepCounter
	cd wasUnderwater
	cn abilities
	ce experienceLevel
	cf totalExperience
	cg experienceProgress
	ch enchantmentSeed
	ci defaultFlySpeed
	co lastLevelUpTime
	cp gameProfile
	cq reducedDebugInfo
	cr lastItemInMainHand
	cs cooldowns
	ct lastDeathLocation
	cj fishing
	ck hurtDir
	<init> (Lcmm;Lgu;FLcom/mojang/authlib/GameProfile;)V <init>
	a (Lcmm;Lgu;Lcmj;)Z blockActionRestricted
	fC ()Lbhf$a; createAttributes
	a_ ()V defineSynchedData
	l ()V tick
	fD ()Z isSecondaryUseActive
	fE ()Z wantsToStopRiding
	fF ()Z isStayingOnGroundSurface
	fG ()Z updateIsUnderwater
	s ()V turtleHelmetTick
	k ()Lcfv; createItemCooldowns
	x ()V moveCloak
	fH ()V updatePlayerPose
	at ()I getPortalWaitTime
	aJ ()Lamg; getSwimSound
	aK ()Lamg; getSwimSplashSound
	aL ()Lamg; getSwimHighSpeedSplashSound
	bH ()I getDimensionChangingDelay
	a (Lamg;FF)V playSound
	a (Lamg;Lami;FF)V playNotifySound
	cY ()Lami; getSoundSource
	cZ ()I getFireImmuneTicks
	b (B)V handleEntityEvent
	a (Lit;)V addParticlesAroundSelf
	q ()V closeContainer
	r ()V doCloseContainer
	bv ()V rideTick
	fc ()V serverAiStep
	b_ ()V aiStep
	c (Lqr;)V playShoulderEntityAmbientSound
	c (Lbfj;)V touch
	fI ()I getScore
	r (I)V setScore
	s (I)V increaseScore
	t (I)V startAutoSpinAttack
	a (Lben;)V die
	eu ()V dropEquipment
	fJ ()V destroyVanishingCursedItems
	d (Lben;)Lamg; getHurtSound
	g_ ()Lamg; getDeathSound
	a (Lcfz;Z)Lbvh; drop
	a (Lcfz;ZZ)Lbvh; drop
	d (Ldcb;)F getDestroySpeed
	e (Ldcb;)Z hasCorrectToolForDrops
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	b (Lben;)Z isInvulnerableTo
	a (Lben;F)Z hurt
	d (Lbfz;)V blockUsingShield
	ek ()Z canBeSeenAsEnemy
	a (Lbyo;)Z canHarmPlayer
	b (Lben;F)V hurtArmor
	c (Lben;F)V hurtHelmet
	u (F)V hurtCurrentlyUsedShield
	f (Lben;F)V actuallyHurt
	dQ ()Z onSoulSpeedBlock
	U ()Z isTextFilteringEnabled
	a (Ldav;Z)V openTextEdit
	a (Lcln;)V openMinecartCommandBlock
	a (Lczx;)V openCommandBlock
	a (Ldba;)V openStructureBlock
	a (Ldam;)V openJigsawBlock
	a (Lbtk;Lbdq;)V openHorseInventory
	a (Lbea;)Ljava/util/OptionalInt; openMenu
	a (ILcll;IIZZ)V sendMerchantOffers
	a (Lcfz;Lbdw;)V openItemGui
	a (Lbfj;Lbdw;)Lbdx; interactOn
	bw ()D getMyRidingOffset
	bA ()V removeVehicle
	eT ()Z isImmobile
	dW ()Z isAffectedByFluids
	a (Leei;Lbgf;)Leei; maybeBackOffFromEdge
	y ()Z isAboveGround
	d (Lbfj;)V attack
	g (Lbfz;)V doAutoAttackOnTouch
	s (Z)V disableShield
	a (Lbfj;)V crit
	b (Lbfj;)V magicCrit
	fK ()V sweepAttack
	fL ()V respawn
	a (Lbfj$c;)V remove
	g ()Z isLocalPlayer
	fM ()Lcom/mojang/authlib/GameProfile; getGameProfile
	fN ()Lbyn; getInventory
	fO ()Lbyl; getAbilities
	a (Lcfz;Lcfz;Lcbn;)V updateTutorialInventoryAction
	fP ()Z hasContainerOpen
	a (Lgu;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (ZZ)V stopSleepInBed
	fz ()V stopSleeping
	a (Laif;Lgu;FZZ)Ljava/util/Optional; findRespawnPositionAndUseSpawnBlock
	fQ ()Z isSleepingLongEnough
	fR ()I getSleepTimer
	a (Lsw;Z)V displayClientMessage
	a (Lacq;)V awardStat
	a (Lacq;I)V awardStat
	b (Lamo;)V awardStat
	a (Lamo;I)V awardStat
	a (Lamo;)V resetStat
	a (Ljava/util/Collection;)I awardRecipes
	a (Lcjc;Ljava/util/List;)V triggerRecipeCrafted
	a ([Lacq;)V awardRecipesByKey
	b (Ljava/util/Collection;)I resetRecipes
	eW ()V jumpFromGround
	h (Leei;)V travel
	ba ()V updateSwimming
	h (Lgu;)Z freeAt
	fa ()F getSpeed
	r (DDD)V checkMovementStatistics
	s (DDD)V checkRidingStatistics
	a (FFLben;)Z causeFallDamage
	fS ()Z tryToStartFallFlying
	fT ()V startFallFlying
	fU ()V stopFallFlying
	bd ()V doWaterSplashEffect
	b (Lgu;Ldcb;)V playStepSound
	eC ()Lbfz$a; getFallSounds
	a (Laif;Lbfz;)Z killedEntity
	a (Ldcb;Leei;)V makeStuckInBlock
	d (I)V giveExperiencePoints
	fV ()I getEnchantmentSeed
	a (Lcfz;I)V onEnchantmentPerformed
	c (I)V giveExperienceLevels
	fW ()I getXpNeededForNextLevel
	z (F)V causeFoodExhaustion
	W ()Ljava/util/Optional; getWardenSpawnTracker
	fX ()Lcbb; getFoodData
	t (Z)Z canEat
	fY ()Z isHurt
	fZ ()Z mayBuild
	a (Lgu;Lha;Lcfz;)Z mayUseItemAt
	ea ()I getExperienceReward
	eb ()Z isAlwaysExperienceDropper
	cz ()Z shouldShowName
	aS ()Lbfj$b; getMovementEmission
	w ()V onUpdateAbilities
	Z ()Lsw; getName
	ga ()Lcco; getEnderChestInventory
	c (Lbfo;)Lcfz; getItemBySlot
	a (Lbfo;)Z doesEmitEquipEvent
	a (Lbfo;Lcfz;)V setItemSlot
	i (Lcfz;)Z addItem
	bI ()Ljava/lang/Iterable; getHandSlots
	bJ ()Ljava/lang/Iterable; getArmorSlots
	h (Lqr;)Z setEntityOnShoulder
	gb ()V removeEntitiesOnShoulder
	k (Lqr;)V respawnEntityOnShoulder
	G_ ()Z isSpectator
	bn ()Z canBeHitByProjectile
	bW ()Z isSwimming
	f ()Z isCreative
	cw ()Z isPushedByFluid
	gc ()Lefg; getScoreboard
	H_ ()Lsw; getDisplayName
	a (Ltj;)Ltj; decorateDisplayNameComponent
	cv ()Ljava/lang/String; getScoreboardName
	b (Lbgl;Lbfk;)F getStandingEyeHeight
	y (F)V setAbsorptionAmount
	ff ()F getAbsorptionAmount
	a (Lbyp;)Z isModelPartShown
	a_ (I)Lbgs; getSlot
	gd ()Z isReducedDebugInfo
	u (Z)V setReducedDebugInfo
	h (I)V setRemainingFireTicks
	fh ()Lbft; getMainArm
	a (Lbft;)V setMainArm
	ge ()Lqr; getShoulderEntityLeft
	i (Lqr;)V setShoulderEntityLeft
	gf ()Lqr; getShoulderEntityRight
	j (Lqr;)V setShoulderEntityRight
	gg ()F getCurrentItemAttackStrengthDelay
	A (F)F getAttackStrengthScale
	gh ()V resetAttackStrengthTicker
	gi ()Lcfv; getCooldowns
	aH ()F getBlockSpeedFactor
	gj ()F getLuck
	gk ()Z canUseGameMasterBlocks
	f (Lcfz;)Z canTakeItem
	a (Lbgl;)Lbfk; getDimensions
	fv ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	g (Lcfz;)Lcfz; getProjectile
	a (Lcmm;Lcfz;)Lcfz; eat
	c (Ldcb;)Z shouldRemoveSoulSpeed
	q (F)Leei; getRopeHoldPosition
	dH ()Z isAlwaysTicking
	gl ()Z isScoping
	dG ()Z shouldBeSaved
	gm ()Ljava/util/Optional; getLastDeathLocation
	a (Ljava/util/Optional;)V setLastDeathLocation
	eB ()F getHurtDir
	m (F)V animateHurt
	dB ()Z canSprint
	eZ ()F getFlyingSpeed
	a (Ljava/lang/String;Lts;)Lts; lambda$decorateDisplayNameComponent$6
	C (Lbfj;)V lambda$respawnEntityOnShoulder$5
	a (Lbdw;Lbyo;)V lambda$hurtCurrentlyUsedShield$4
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$3
	a (Lhd;)Ljava/util/Optional; lambda$addAdditionalSaveData$2
	b (Lbfn;)V lambda$playShoulderEntityAmbientSound$1
	c (Lbfn;)Z lambda$playShoulderEntityAmbientSound$0
	<clinit> ()V <clinit>
byo$1 net/minecraft/world/entity/player/Player$1
	a $SwitchMap$net$minecraft$world$entity$Pose
	<clinit> ()V <clinit>
byo$a net/minecraft/world/entity/player/Player$BedSleepingProblem
	a NOT_POSSIBLE_HERE
	b NOT_POSSIBLE_NOW
	c TOO_FAR_AWAY
	d OBSTRUCTED
	e OTHER_PROBLEM
	f NOT_SAFE
	g message
	h $VALUES
	values ()[Lbyo$a; values
	valueOf (Ljava/lang/String;)Lbyo$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	<init> (Ljava/lang/String;ILsw;)V <init>
	a ()Lsw; getMessage
	b ()[Lbyo$a; $values
	<clinit> ()V <clinit>
byp net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	values ()[Lbyp; values
	valueOf (Ljava/lang/String;)Lbyp; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lsw; getName
	e ()[Lbyp; $values
	<clinit> ()V <clinit>
byq net/minecraft/world/entity/player/ProfileKeyPair
	b privateKey
	c publicKey
	d refreshedAfter
	a CODEC
	<init> (Ljava/security/PrivateKey;Lbyr;Ljava/time/Instant;)V <init>
	a ()Z dueRefresh
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/security/PrivateKey; privateKey
	c ()Lbyr; publicKey
	d ()Ljava/time/Instant; refreshedAfter
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
byr net/minecraft/world/entity/player/ProfilePublicKey
	d data
	a EXPIRED_PROFILE_PUBLIC_KEY
	e INVALID_SIGNATURE
	b EXPIRY_GRACE_PERIOD
	c TRUSTED_CODEC
	<init> (Lbyr$a;)V <init>
	a (Lapj;Ljava/util/UUID;Lbyr$a;Ljava/time/Duration;)Lbyr; createValidated
	a ()Lapj; createSignatureValidator
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lbyr$a; data
	<clinit> ()V <clinit>
byr$a net/minecraft/world/entity/player/ProfilePublicKey$Data
	b expiresAt
	c key
	d keySignature
	e MAX_KEY_SIGNATURE_SIZE
	a CODEC
	<init> (Lsf;)V <init>
	<init> (Ljava/time/Instant;Ljava/security/PublicKey;[B)V <init>
	a (Lsf;)V write
	a (Lapj;Ljava/util/UUID;)Z validateSignature
	a (Ljava/util/UUID;)[B signedPayload
	a ()Z hasExpired
	a (Ljava/time/Duration;)Z hasExpired
	equals (Ljava/lang/Object;)Z equals
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	b ()Ljava/time/Instant; expiresAt
	c ()Ljava/security/PublicKey; key
	d ()[B keySignature
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
byr$b net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
	<init> (Lsw;)V <init>
bys net/minecraft/world/entity/player/StackedContents
	b EMPTY
	a contents
	<init> ()V <init>
	a (Lcfz;)V accountSimpleStack
	b (Lcfz;)V accountStack
	a (Lcfz;I)V accountStack
	c (Lcfz;)I getStackingIndex
	b (I)Z has
	a (II)I take
	b (II)V put
	a (Lcjc;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lcjc;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	b (Lcjc;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lcjc;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (I)Lcfz; fromStackingIndex
	a ()V clear
bys$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a this$0
	<init> (Lbys;Lcjc;)V <init>
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	b (I)Z isSatisfied
	c (I)V setSatisfied
	d (I)I getSatisfiedIndex
	a (ZII)Z hasConnection
	b (ZII)Z hasResidual
	c (ZII)V toggleResidual
	d (ZII)I getIndex
	a (ZI)V visit
	b (ZI)Z hasVisited
	c (ZI)I getVisitedIndex
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b ()I getMinIngredientCount
byt net/minecraft/world/entity/player/package-info
byu net/minecraft/world/entity/projectile/AbstractArrow
	f ARROW_BASE_DAMAGE
	g ID_FLAGS
	h PIERCE_LEVEL
	i FLAG_CRIT
	j FLAG_NOPHYSICS
	k FLAG_CROSSBOW
	l lastState
	b inGround
	c inGroundTime
	d pickup
	e shakeTime
	m life
	n baseDamage
	o knockback
	p soundEvent
	q piercingIgnoreEntityIds
	r piercedAndKilledEntities
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDLcmm;)V <init>
	<init> (Lbfn;Lbfz;Lcmm;)V <init>
	b (Lamg;)V setSoundEvent
	a (D)Z shouldRenderAtSqrDistance
	a_ ()V defineSynchedData
	c (DDDFF)V shoot
	a (DDDFFIZ)V lerpTo
	l (DDD)V lerpMotion
	l ()V tick
	z ()Z shouldFall
	D ()V startFalling
	a (Lbgf;Leei;)V move
	j ()V tickDespawn
	E ()V resetPiercedEntities
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	k ()Lamg; getDefaultHitGroundSoundEvent
	o ()Lamg; getHitGroundSoundEvent
	a (Lbfz;)V doPostHurtEffects
	a (Leei;Leei;)Leef; findHitEntity
	a (Lbfj;)Z canHitEntity
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (Lbfj;)V setOwner
	b_ (Lbyo;)V playerTouch
	a (Lbyo;)Z tryPickup
	p ()Lcfz; getPickupItem
	aS ()Lbfj$b; getMovementEmission
	h (D)V setBaseDamage
	q ()D getBaseDamage
	b (I)V setKnockback
	r ()I getKnockback
	cn ()Z isAttackable
	a (Lbgl;Lbfk;)F getEyeHeight
	a (Z)V setCritArrow
	a (B)V setPierceLevel
	a (IZ)V setFlag
	s ()Z isCritArrow
	t ()Z shotFromCrossbow
	w ()B getPierceLevel
	a (Lbfz;F)V setEnchantmentEffectsFromEntity
	x ()F getWaterInertia
	p (Z)V setNoPhysics
	y ()Z isNoPhysics
	q (Z)V setShotFromCrossbow
	<clinit> ()V <clinit>
byu$1 net/minecraft/world/entity/projectile/AbstractArrow$1
	a $SwitchMap$net$minecraft$world$entity$projectile$AbstractArrow$Pickup
	<clinit> ()V <clinit>
byu$a net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	a DISALLOWED
	b ALLOWED
	c CREATIVE_ONLY
	d $VALUES
	values ()[Lbyu$a; values
	valueOf (Ljava/lang/String;)Lbyu$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (I)Lbyu$a; byOrdinal
	a ()[Lbyu$a; $values
	<clinit> ()V <clinit>
byv net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	b xPower
	c yPower
	d zPower
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDDDDLcmm;)V <init>
	<init> (Lbfn;Lbfz;DDDLcmm;)V <init>
	a_ ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	l ()V tick
	a (Lbfj;)Z canHitEntity
	aa_ ()Z shouldBurn
	k ()Lit; getTrailParticle
	o ()F getInertia
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	bo ()Z isPickable
	bC ()F getPickRadius
	a (Lben;F)Z hurt
	bj ()F getLightLevelDependentMagicValue
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
byw net/minecraft/world/entity/projectile/Arrow
	f EXPOSED_POTION_DECAY_TIME
	g NO_EFFECT_COLOR
	h ID_EFFECT_COLOR
	i EVENT_POTION_PUFF
	j potion
	k effects
	l fixedColor
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	a (Lcfz;)V setEffectsFromItem
	c (Lcfz;)I getCustomColor
	D ()V updateColor
	a (Lbfa;)V addEffect
	a_ ()V defineSynchedData
	l ()V tick
	c (I)V makeParticle
	z ()I getColor
	d (I)V setFixedColor
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbfz;)V doPostHurtEffects
	p ()Lcfz; getPickupItem
	b (B)V handleEntityEvent
	m (I)I lambda$doPostHurtEffects$0
	<clinit> ()V <clinit>
byx net/minecraft/world/entity/projectile/DragonFireball
	e SPLASH_RANGE
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;DDD)V <init>
	a (Leeg;)V onHit
	bo ()Z isPickable
	a (Lben;F)Z hurt
	k ()Lit; getTrailParticle
	aa_ ()Z shouldBurn
byy net/minecraft/world/entity/projectile/EvokerFangs
	b ATTACK_DURATION
	c LIFE_OFFSET
	d ATTACK_TRIGGER_TICKS
	e warmupDelayTicks
	f sentSpikeEvent
	g lifeTicks
	h clientSideAttackStarted
	i owner
	j ownerUUID
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDDFILbfz;)V <init>
	a_ ()V defineSynchedData
	a (Lbfz;)V setOwner
	j ()Lbfz; getOwner
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	l ()V tick
	c (Lbfz;)V dealDamageTo
	b (B)V handleEntityEvent
	a (F)F getAnimationProgress
	v ()Lbfj; getOwner
byz net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	c tx
	d ty
	e tz
	f life
	g surviveAfterDeath
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	a (Lcfz;)V setItem
	k ()Lcfz; getItemRaw
	j ()Lcfz; getItem
	a_ ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	a (Lgu;)V signalTo
	l (DDD)V lerpMotion
	l ()V tick
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	bj ()F getLightLevelDependentMagicValue
	cn ()Z isAttackable
	<clinit> ()V <clinit>
bza net/minecraft/world/entity/projectile/Fireball
	e DATA_ITEM_STACK
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDDDDLcmm;)V <init>
	<init> (Lbfn;Lbfz;DDDLcmm;)V <init>
	a (Lcfz;)V setItem
	p ()Lcfz; getItemRaw
	j ()Lcfz; getItem
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	<clinit> ()V <clinit>
bzb net/minecraft/world/entity/projectile/FireworkRocketEntity
	b DATA_ID_FIREWORKS_ITEM
	c DATA_ATTACHED_TO_TARGET
	d DATA_SHOT_AT_ANGLE
	e life
	f lifetime
	g attachedToEntity
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDDLcfz;)V <init>
	<init> (Lcmm;Lbfj;DDDLcfz;)V <init>
	<init> (Lcmm;Lcfz;Lbfz;)V <init>
	<init> (Lcmm;Lcfz;DDDZ)V <init>
	<init> (Lcmm;Lcfz;Lbfj;DDDZ)V <init>
	a_ ()V defineSynchedData
	a (D)Z shouldRenderAtSqrDistance
	k (DDD)Z shouldRender
	l ()V tick
	o ()V explode
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	p ()Z hasExplosion
	q ()V dealExplosionDamage
	r ()Z isAttachedToEntity
	k ()Z isShotAtAngle
	b (B)V handleEntityEvent
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	j ()Lcfz; getItem
	cn ()Z isAttackable
	b (I)V lambda$tick$0
	<clinit> ()V <clinit>
bzc net/minecraft/world/entity/projectile/FishingHook
	b LOGGER
	c syncronizedRandom
	d biting
	e outOfWaterTime
	f MAX_OUT_OF_WATER_TIME
	g DATA_HOOKED_ENTITY
	h DATA_BITING
	i life
	j nibble
	k timeUntilLured
	l timeUntilHooked
	m fishAngle
	n openWater
	o hookedIn
	p currentState
	q luck
	r lureSpeed
	<init> (Lbfn;Lcmm;II)V <init>
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbyo;Lcmm;II)V <init>
	a_ ()V defineSynchedData
	a (Laby;)V onSyncedDataUpdated
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	l ()V tick
	a (Lbyo;)Z shouldStopFishing
	p ()V checkCollision
	a (Lbfj;)Z canHitEntity
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	x (Lbfj;)V setHookedEntity
	a (Lgu;)V catchingFish
	b (Lgu;)Z calculateOpenWater
	a (Lgu;Lgu;)Lbzc$b; getOpenWaterTypeForArea
	c (Lgu;)Lbzc$b; getOpenWaterTypeForBlock
	j ()Z isOpenWaterFishing
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lcfz;)I retrieve
	b (B)V handleEntityEvent
	c (Lbfj;)V pullEntity
	aS ()Lbfj$b; getMovementEmission
	a (Lbfj$c;)V remove
	ak ()V onClientRemoval
	b (Lbfj;)V setOwner
	a (Lbzc;)V updateOwnerInfo
	k ()Lbyo; getPlayerOwner
	o ()Lbfj; getHookedIn
	cq ()Z canChangeDimensions
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	a (Lbzc$b;Lbzc$b;)Lbzc$b; lambda$getOpenWaterTypeForArea$0
	<clinit> ()V <clinit>
bzc$1 net/minecraft/world/entity/projectile/FishingHook$1
	a $SwitchMap$net$minecraft$world$entity$projectile$FishingHook$OpenWaterType
	<clinit> ()V <clinit>
bzc$a net/minecraft/world/entity/projectile/FishingHook$FishHookState
	a FLYING
	b HOOKED_IN_ENTITY
	c BOBBING
	d $VALUES
	values ()[Lbzc$a; values
	valueOf (Ljava/lang/String;)Lbzc$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbzc$a; $values
	<clinit> ()V <clinit>
bzc$b net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	a ABOVE_WATER
	b INSIDE_WATER
	c INVALID
	d $VALUES
	values ()[Lbzc$b; values
	valueOf (Ljava/lang/String;)Lbzc$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lbzc$b; $values
	<clinit> ()V <clinit>
bzd net/minecraft/world/entity/projectile/ItemSupplier
	j ()Lcfz; getItem
bze net/minecraft/world/entity/projectile/LargeFireball
	e explosionPower
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;DDDI)V <init>
	a (Leeg;)V onHit
	a (Leef;)V onHitEntity
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
bzf net/minecraft/world/entity/projectile/LlamaSpit
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbtn;)V <init>
	l ()V tick
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	a_ ()V defineSynchedData
	a (Lus;)V recreateFromPacket
bzg net/minecraft/world/entity/projectile/Projectile
	b ownerUUID
	c cachedOwner
	d leftOwner
	e hasBeenShot
	<init> (Lbfn;Lcmm;)V <init>
	b (Lbfj;)V setOwner
	v ()Lbfj; getOwner
	A ()Lbfj; getEffectSource
	b (Lqr;)V addAdditionalSaveData
	d (Lbfj;)Z ownedBy
	a (Lqr;)V readAdditionalSaveData
	l ()V tick
	k ()Z checkLeftOwner
	c (DDDFF)V shoot
	a (Lbfj;FFFFF)V shootFromRotation
	a (Leeg;)V onHit
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	l (DDD)V lerpMotion
	a (Lbfj;)Z canHitEntity
	C ()V updateRotation
	d (FF)F lerpRotation
	S ()Luo; getAddEntityPacket
	a (Lus;)V recreateFromPacket
	a (Lcmm;Lgu;)Z mayInteract
	c (Lbfj;)Z lambda$checkLeftOwner$0
bzh net/minecraft/world/entity/projectile/ProjectileUtil
	<init> ()V <init>
	a (Lbfj;Ljava/util/function/Predicate;)Leeg; getHitResultOnMoveVector
	a (Lbfj;Ljava/util/function/Predicate;D)Leeg; getHitResultOnViewVector
	a (Leei;Lbfj;Ljava/util/function/Predicate;Leei;Lcmm;)Leeg; getHitResult
	a (Lbfj;Leei;Leei;Leed;Ljava/util/function/Predicate;D)Leef; getEntityHitResult
	a (Lcmm;Lbfj;Leei;Leei;Leed;Ljava/util/function/Predicate;)Leef; getEntityHitResult
	a (Lcmm;Lbfj;Leei;Leei;Leed;Ljava/util/function/Predicate;F)Leef; getEntityHitResult
	a (Lbfj;F)V rotateTowardsMovement
	a (Lbfz;Lcfu;)Lbdw; getWeaponHoldingHand
	a (Lbfz;Lcfz;F)Lbyu; getMobArrow
bzi net/minecraft/world/entity/projectile/ShulkerBullet
	b SPEED
	c finalTarget
	d currentMoveDirection
	e flightSteps
	f targetDeltaX
	g targetDeltaY
	h targetDeltaZ
	i targetId
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;Lbfj;Lha$a;)V <init>
	cY ()Lami; getSoundSource
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	j ()Lha; getMoveDirection
	a (Lha;)V setMoveDirection
	a (Lha$a;)V selectNextMoveDirection
	du ()V checkDespawn
	l ()V tick
	a (Lbfj;)Z canHitEntity
	bL ()Z isOnFire
	a (D)Z shouldRenderAtSqrDistance
	bj ()F getLightLevelDependentMagicValue
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	k ()V destroy
	a (Leeg;)V onHit
	bo ()Z isPickable
	a (Lben;F)Z hurt
	a (Lus;)V recreateFromPacket
bzj net/minecraft/world/entity/projectile/SmallFireball
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;DDD)V <init>
	<init> (Lcmm;DDDDDD)V <init>
	a (Leef;)V onHitEntity
	a (Leee;)V onHitBlock
	a (Leeg;)V onHit
	bo ()Z isPickable
	a (Lben;F)Z hurt
bzk net/minecraft/world/entity/projectile/Snowball
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	<init> (Lcmm;DDD)V <init>
	k ()Lcfu; getDefaultItem
	q ()Lit; getParticle
	b (B)V handleEntityEvent
	a (Leef;)V onHitEntity
	a (Leeg;)V onHit
bzl net/minecraft/world/entity/projectile/SpectralArrow
	f duration
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	<init> (Lcmm;DDD)V <init>
	l ()V tick
	p ()Lcfz; getPickupItem
	a (Lbfz;)V doPostHurtEffects
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
bzm net/minecraft/world/entity/projectile/ThrowableItemProjectile
	b DATA_ITEM_STACK
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDLcmm;)V <init>
	<init> (Lbfn;Lbfz;Lcmm;)V <init>
	a (Lcfz;)V setItem
	k ()Lcfu; getDefaultItem
	o ()Lcfz; getItemRaw
	j ()Lcfz; getItem
	a_ ()V defineSynchedData
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	<clinit> ()V <clinit>
bzn net/minecraft/world/entity/projectile/ThrowableProjectile
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDLcmm;)V <init>
	<init> (Lbfn;Lbfz;Lcmm;)V <init>
	a (D)Z shouldRenderAtSqrDistance
	l ()V tick
	p ()F getGravity
bzo net/minecraft/world/entity/projectile/ThrownEgg
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	<init> (Lcmm;DDD)V <init>
	b (B)V handleEntityEvent
	a (Leef;)V onHitEntity
	a (Leeg;)V onHit
	k ()Lcfu; getDefaultItem
bzp net/minecraft/world/entity/projectile/ThrownEnderpearl
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	k ()Lcfu; getDefaultItem
	a (Leef;)V onHitEntity
	a (Leeg;)V onHit
	l ()V tick
	b (Laif;)Lbfj; changeDimension
bzq net/minecraft/world/entity/projectile/ThrownExperienceBottle
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	<init> (Lcmm;DDD)V <init>
	k ()Lcfu; getDefaultItem
	p ()F getGravity
	a (Leeg;)V onHit
bzr net/minecraft/world/entity/projectile/ThrownPotion
	b SPLASH_RANGE
	d SPLASH_RANGE_SQ
	c WATER_SENSITIVE_OR_ON_FIRE
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;)V <init>
	<init> (Lcmm;DDD)V <init>
	k ()Lcfu; getDefaultItem
	p ()F getGravity
	a (Leee;)V onHitBlock
	a (Leeg;)V onHit
	q ()V applyWater
	a (Ljava/util/List;Lbfj;)V applySplash
	a (Lcfz;Lchw;)V makeAreaOfEffectCloud
	r ()Z isLingering
	a (Lgu;)V dowseFire
	a (DI)I lambda$applySplash$1
	a (Lbfz;)Z lambda$static$0
	<clinit> ()V <clinit>
bzs net/minecraft/world/entity/projectile/ThrownTrident
	g ID_LOYALTY
	h ID_FOIL
	i tridentItem
	j dealtDamage
	f clientSideReturnTridentTickCount
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;Lcfz;)V <init>
	a_ ()V defineSynchedData
	l ()V tick
	E ()Z isAcceptibleReturnOwner
	p ()Lcfz; getPickupItem
	z ()Z isFoil
	a (Leei;Leei;)Leef; findHitEntity
	a (Leef;)V onHitEntity
	D ()Z isChanneling
	a (Lbyo;)Z tryPickup
	k ()Lamg; getDefaultHitGroundSoundEvent
	b_ (Lbyo;)V playerTouch
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	j ()V tickDespawn
	x ()F getWaterInertia
	k (DDD)Z shouldRender
	<clinit> ()V <clinit>
bzt net/minecraft/world/entity/projectile/WitherSkull
	e DATA_DANGEROUS
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;Lbfz;DDD)V <init>
	o ()F getInertia
	bL ()Z isOnFire
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;F)F getBlockExplosionResistance
	a (Leef;)V onHitEntity
	a (Leeg;)V onHit
	bo ()Z isPickable
	a (Lben;F)Z hurt
	a_ ()V defineSynchedData
	p ()Z isDangerous
	a (Z)V setDangerous
	aa_ ()Z shouldBurn
	<clinit> ()V <clinit>
bzu net/minecraft/world/entity/projectile/package-info
bzv net/minecraft/world/entity/raid/Raid
	h SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	i ATTEMPT_RAID_FARTHEST
	j ATTEMPT_RAID_CLOSE
	k ATTEMPT_RAID_INSIDE
	l VILLAGE_SEARCH_RADIUS
	m RAID_TIMEOUT_TICKS
	n NUM_SPAWN_ATTEMPTS
	o OMINOUS_BANNER_PATTERN_NAME
	p RAIDERS_REMAINING
	a VILLAGE_RADIUS_BUFFER
	q POST_RAID_TICK_LIMIT
	r DEFAULT_PRE_RAID_TICKS
	b MAX_NO_ACTION_TIME
	c MAX_CELEBRATION_TICKS
	s OUTSIDE_RAID_BOUNDS_TIMEOUT
	d TICKS_PER_DAY
	e DEFAULT_MAX_BAD_OMEN_LEVEL
	t LOW_MOB_THRESHOLD
	u RAID_NAME_COMPONENT
	v VICTORY
	w DEFEAT
	x RAID_BAR_VICTORY_COMPONENT
	y RAID_BAR_DEFEAT_COMPONENT
	z HERO_OF_THE_VILLAGE_DURATION
	f VALID_RAID_RADIUS_SQR
	g RAID_REMOVAL_THRESHOLD_SQR
	A groupToLeaderMap
	B groupRaiderMap
	C heroesOfTheVillage
	D ticksActive
	E center
	F level
	G started
	H id
	I totalHealth
	J badOmenLevel
	K active
	L groupsSpawned
	M raidEvent
	N postRaidTicks
	O raidCooldownTicks
	P random
	Q numGroups
	R status
	S celebrationTicks
	T waveSpawnPos
	<init> (ILaif;Lgu;)V <init>
	<init> (Laif;Lqr;)V <init>
	a ()Z isOver
	b ()Z isBetweenWaves
	c ()Z hasFirstWaveSpawned
	d ()Z isStopped
	e ()Z isVictory
	f ()Z isLoss
	g ()F getTotalHealth
	h ()Ljava/util/Set; getAllRaiders
	i ()Lcmm; getLevel
	j ()Z isStarted
	k ()I getGroupsSpawned
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	l ()I getMaxBadOmenLevel
	m ()I getBadOmenLevel
	a (I)V setBadOmenLevel
	a (Lbyo;)V absorbBadOmen
	n ()V stop
	o ()V tick
	z ()V moveRaidCenterToNearbyVillageSection
	d (I)Ljava/util/Optional; getValidSpawnPos
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	a (Lgu;)V playSound
	b (Lgu;)V spawnGroup
	a (ILbzw;Lgu;Z)V joinRaid
	p ()V updateBossbar
	q ()F getHealthOfLivingRaiders
	G ()Z shouldSpawnGroup
	r ()I getTotalRaidersAlive
	a (Lbzw;Z)V removeFromRaid
	H ()V setDirty
	s ()Lcfz; getLeaderBannerInstance
	b (I)Lbzw; getLeader
	a (II)Lgu; findRandomSpawnPos
	b (ILbzw;)Z addWaveMob
	a (ILbzw;Z)Z addWaveMob
	a (ILbzw;)V setLeader
	c (I)V removeLeader
	t ()Lgu; getCenter
	c (Lgu;)V setCenter
	u ()I getId
	a (Lbzv$b;IZ)I getDefaultNumSpawns
	a (Lbzv$b;Lapf;ILbdv;Z)I getPotentialBonusSpawns
	v ()Z isActive
	a (Lqr;)Lqr; save
	a (Lbdu;)I getNumGroups
	w ()F getEnchantOdds
	a (Lbfj;)V addHeroOfTheVillage
	a (Ljava/lang/Integer;)Ljava/util/Set; lambda$addWaveMob$2
	d (Lgu;)D lambda$moveRaidCenterToNearbyVillageSection$1
	a (Laig;)Z lambda$validPlayer$0
	<clinit> ()V <clinit>
bzv$1 net/minecraft/world/entity/raid/Raid$1
	a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
	b $SwitchMap$net$minecraft$world$Difficulty
	<clinit> ()V <clinit>
bzv$a net/minecraft/world/entity/raid/Raid$RaidStatus
	a ONGOING
	b VICTORY
	c LOSS
	d STOPPED
	e VALUES
	f $VALUES
	values ()[Lbzv$a; values
	valueOf (Ljava/lang/String;)Lbzv$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ljava/lang/String;)Lbzv$a; getByName
	a ()Ljava/lang/String; getName
	b ()[Lbzv$a; $values
	<clinit> ()V <clinit>
bzv$b net/minecraft/world/entity/raid/Raid$RaiderType
	a VINDICATOR
	b EVOKER
	c PILLAGER
	d WITCH
	e RAVAGER
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	values ()[Lbzv$b; values
	valueOf (Ljava/lang/String;)Lbzv$b; valueOf
	<init> (Ljava/lang/String;ILbfn;[I)V <init>
	a ()[Lbzv$b; $values
	<clinit> ()V <clinit>
bzw net/minecraft/world/entity/raid/Raider
	c IS_CELEBRATING
	b ALLOWED_ITEMS
	d raid
	e wave
	bT canJoinRaid
	bU ticksOutsideRaid
	<init> (Lbfn;Lcmm;)V <init>
	x ()V registerGoals
	a_ ()V defineSynchedData
	a (IZ)V applyRaidBuffs
	gl ()Z canJoinRaid
	z (Z)V setCanJoinRaid
	b_ ()V aiStep
	gd ()V updateNoActionTime
	a (Lben;)V die
	gf ()Z canJoinPatrol
	a (Lbzv;)V setCurrentRaid
	gm ()Lbzv; getCurrentRaid
	gn ()Z hasActiveRaid
	b (I)V setWave
	go ()I getWave
	gp ()Z isCelebrating
	A (Z)V setCelebrating
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	b (Lbvh;)V pickUpItem
	h (D)Z removeWhenFarAway
	T ()Z requiresCustomPersistence
	gq ()I getTicksOutsideRaid
	c (I)V setTicksOutsideRaid
	a (Lben;F)Z hurt
	a (Lcnb;Lbdv;Lbgd;Lbgt;Lqr;)Lbgt; finalizeSpawn
	Y_ ()Lamg; getCelebrateSound
	c (Lbvh;)Z lambda$static$0
	a (Lbzw;)Lapf; access$000
	b (Lbzw;)F access$100
	c (Lbzw;)Lapf; access$200
	d (Lbzw;)Z access$300
	e (Lbzw;)Lapf; access$400
	f (Lbzw;)Lapf; access$500
	<clinit> ()V <clinit>
bzw$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	c mob
	d hostileRadiusSqr
	a shoutTargeting
	b this$0
	<init> (Lbzw;Lbvk;F)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	K_ ()Z requiresUpdateEveryTick
	e ()V tick
bzw$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	b mob
	a this$0
	<init> (Lbzw;Lbzw;)V <init>
	a ()Z canUse
	e ()V tick
bzw$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	b mob
	a this$0
	<init> (Lbzw;Lbzw;)V <init>
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bzw$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	<init> (Lbzw;DI)V <init>
	a ()Z canUse
	h ()Z isValidRaid
	i ()Z hasSuitablePoi
	b ()Z canContinueToUse
	d ()V stop
	c ()V start
	e ()V tick
	a (Lgu;)Z hasNotVisited
	k ()V updateVisited
	a (Lhe;)Z lambda$hasSuitablePoi$0
bzx net/minecraft/world/entity/raid/Raids
	a RAID_FILE_ID
	b raidMap
	c level
	d nextAvailableID
	e tick
	<init> (Laif;)V <init>
	a (I)Lbzv; get
	a ()V tick
	a (Lbzw;Lbzv;)Z canJoinRaid
	a (Laig;)Lbzv; createOrExtendRaid
	a (Laif;Lgu;)Lbzv; getOrCreateRaid
	a (Laif;Lqr;)Lbzx; load
	a (Lqr;)Lqr; save
	a (Lhe;)Ljava/lang/String; getFileId
	d ()I getUniqueId
	a (Lgu;I)Lbzv; getNearbyRaid
	b (Lhe;)Z lambda$createOrExtendRaid$0
bzy net/minecraft/world/entity/raid/package-info
bzz net/minecraft/world/entity/schedule/Activity
	a CORE
	b IDLE
	c WORK
	d PLAY
	e REST
	f MEET
	g PANIC
	h RAID
	i PRE_RAID
	j HIDE
	k FIGHT
	l CELEBRATE
	m ADMIRE_ITEM
	n AVOID
	o RIDE
	p PLAY_DEAD
	q LONG_JUMP
	r RAM
	s TONGUE
	t SWIM
	u LAY_SPAWN
	v SNIFF
	w INVESTIGATE
	x ROAR
	y EMERGE
	z DIG
	A name
	B hashCode
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lbzz; register
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
caa net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	<init> (IF)V <init>
	a ()I getTimeStamp
	b ()F getValue
cab net/minecraft/world/entity/schedule/Schedule
	a WORK_START_TIME
	b TOTAL_WORK_TIME
	c EMPTY
	d SIMPLE
	e VILLAGER_BABY
	f VILLAGER_DEFAULT
	g timelines
	<init> ()V <init>
	a (Ljava/lang/String;)Lcac; register
	a (Lbzz;)V ensureTimelineExistsFor
	b (Lbzz;)Lcad; getTimelineFor
	c (Lbzz;)Ljava/util/List; getAllTimelinesExceptFor
	a (I)Lbzz; getActivityAt
	a (ILjava/util/Map$Entry;)D lambda$getActivityAt$1
	a (Lbzz;Ljava/util/Map$Entry;)Z lambda$getAllTimelinesExceptFor$0
	<clinit> ()V <clinit>
cac net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	<init> (Lcab;)V <init>
	a (ILbzz;)Lcac; changeActivityAt
	a ()Lcab; build
	a (Lcac$a;)V lambda$build$1
	a (Lcac$a;Lcad;)V lambda$build$0
cac$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	<init> (ILbzz;)V <init>
	a ()I getTime
	b ()Lbzz; getActivity
cad net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	<init> ()V <init>
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (IF)Lcad; addKeyframe
	a (Ljava/util/Collection;)Lcad; addKeyframes
	b ()V sortAndDeduplicateKeyframes
	a (I)F getValueAt
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lcaa;)V lambda$sortAndDeduplicateKeyframes$0
cae net/minecraft/world/entity/schedule/package-info
caf net/minecraft/world/entity/vehicle/AbstractMinecart
	c DATA_ID_HURT
	d DATA_ID_HURTDIR
	e DATA_ID_DAMAGE
	f DATA_ID_DISPLAY_BLOCK
	g DATA_ID_DISPLAY_OFFSET
	h DATA_ID_CUSTOM_DISPLAY
	i POSE_DISMOUNT_HEIGHTS
	b WATER_SLOWDOWN_FACTOR
	j flipped
	k onRails
	l EXITS
	m lSteps
	n lx
	o ly
	p lz
	q lyr
	r lxr
	s lxd
	t lyd
	u lzd
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;Lcmm;DDD)V <init>
	a (Lcmm;DDDLcaf$a;)Lcaf; createMinecart
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	h (Lbfj;)Z canCollideWith
	bp ()Z isPushable
	a (Lha$a;Ll$a;)Leei; getRelativePortalPosition
	bx ()D getPassengersRidingOffset
	b (Lbfz;)Leei; getDismountLocationForPassenger
	a (Lben;F)Z hurt
	aH ()F getBlockSpeedFactor
	a (Lben;)V destroy
	j ()Lcfu; getDropItem
	m (F)V animateHurt
	bo ()Z isPickable
	a (Lddf;)Lcom/mojang/datafixers/util/Pair; exits
	cC ()Lha; getMotionDirection
	l ()V tick
	k ()D getMaxSpeed
	a (IIIZ)V activateMinecart
	o ()V comeOffTrack
	c (Lgu;Ldcb;)V moveAlongTrack
	cc ()Z isOnRails
	a (Lgu;)Z isRedstoneConductor
	p ()V applyNaturalSlowdown
	a (DDDD)Leei; getPosOffs
	q (DDD)Leei; getPos
	j_ ()Leed; getBoundingBoxForCulling
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	g (Lbfj;)V push
	a (DDDFFIZ)V lerpTo
	l (DDD)V lerpMotion
	a (F)V setDamage
	q ()F getDamage
	c (I)V setHurtTime
	r ()I getHurtTime
	d (I)V setHurtDir
	s ()I getHurtDir
	t ()Lcaf$a; getMinecartType
	v ()Ldcb; getDisplayBlockState
	w ()Ldcb; getDefaultDisplayBlockState
	x ()I getDisplayOffset
	y ()I getDefaultDisplayOffset
	c (Ldcb;)V setDisplayBlockState
	m (I)V setDisplayOffset
	z ()Z hasCustomDisplay
	a (Z)V setCustomDisplay
	dv ()Lcfz; getPickResult
	a (Ljava/util/EnumMap;)V lambda$static$2
	b (Lgu;)Lefb; lambda$getDismountLocationForPassenger$1
	a (Lgu$a;)Lefb; lambda$getDismountLocationForPassenger$0
	<clinit> ()V <clinit>
caf$1 net/minecraft/world/entity/vehicle/AbstractMinecart$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$entity$vehicle$AbstractMinecart$Type
	<clinit> ()V <clinit>
caf$a net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	a RIDEABLE
	b CHEST
	c FURNACE
	d TNT
	e SPAWNER
	f HOPPER
	g COMMAND_BLOCK
	h $VALUES
	values ()[Lcaf$a; values
	valueOf (Ljava/lang/String;)Lcaf$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcaf$a; $values
	<clinit> ()V <clinit>
cag net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c itemStacks
	d lootTable
	e lootTableSeed
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lbfn;DDDLcmm;)V <init>
	a (Lben;)V destroy
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a_ (I)Lbgs; getSlot
	e ()V setChanged
	a (Lbyo;)Z stillValid
	a (Lbfj$c;)V remove
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbyo;Lbdw;)Lbdx; interact
	p ()V applyNaturalSlowdown
	a ()V clearContent
	a (Lacq;J)V setLootTable
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	a (ILbyn;)Lcbf; createMenu
	A ()Lacq; getLootTable
	a (Lacq;)V setLootTable
	C ()J getLootTableSeed
	a (J)V setLootTableSeed
	D ()Lhn; getItemStacks
	E ()V clearItemStacks
cah net/minecraft/world/entity/vehicle/Boat
	f DATA_ID_HURT
	g DATA_ID_HURTDIR
	h DATA_ID_DAMAGE
	i DATA_ID_TYPE
	j DATA_ID_PADDLE_LEFT
	k DATA_ID_PADDLE_RIGHT
	l DATA_ID_BUBBLE_TIME
	b PADDLE_LEFT
	c PADDLE_RIGHT
	m TIME_TO_EJECT
	n PADDLE_SPEED
	d PADDLE_SOUND_TIME
	e BUBBLE_TIME
	o paddlePositions
	p invFriction
	q outOfControlTicks
	r deltaRotation
	s lerpSteps
	t lerpX
	u lerpY
	aD lerpZ
	aE lerpYRot
	aF lerpXRot
	aG inputLeft
	aH inputRight
	aI inputUp
	aJ inputDown
	aK waterLevel
	aL landFriction
	aM status
	aN oldStatus
	aO lastYd
	aP isAboveBubbleColumn
	aQ bubbleColumnDirectionIsDown
	aR bubbleMultiplier
	aS bubbleAngle
	aT bubbleAngleO
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	a (Lbgl;Lbfk;)F getEyeHeight
	aS ()Lbfj$b; getMovementEmission
	a_ ()V defineSynchedData
	h (Lbfj;)Z canCollideWith
	a (Lbfj;Lbfj;)Z canVehicleCollide
	bu ()Z canBeCollidedWith
	bp ()Z isPushable
	a (Lha$a;Ll$a;)Leei; getRelativePortalPosition
	bx ()D getPassengersRidingOffset
	a (Lben;F)Z hurt
	a (Lben;)V destroy
	k (Z)V onAboveBubbleCol
	g (Lbfj;)V push
	j ()Lcfu; getDropItem
	m (F)V animateHurt
	bo ()Z isPickable
	a (DDDFFIZ)V lerpTo
	cC ()Lha; getMotionDirection
	l ()V tick
	x ()V tickBubbleColumn
	k ()Lamg; getPaddleSound
	y ()V tickLerp
	a (ZZ)V setPaddleState
	a (IF)F getRowingTime
	z ()Lcah$a; getStatus
	o ()F getWaterLevelAbove
	p ()F getGroundFriction
	A ()Z checkInWater
	C ()Lcah$a; isUnderwater
	D ()V floatBoat
	E ()V controlBoat
	q ()F getSinglePassengerXOffset
	a (Lbfj;)Z hasEnoughSpaceFor
	a (Lbfj;Lbfj$a;)V positionRider
	b (Lbfz;)Leei; getDismountLocationForPassenger
	b (Lbfj;)V clampRotation
	j (Lbfj;)V onPassengerTurned
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lbyo;Lbdw;)Lbdx; interact
	a (DZLdcb;Lgu;)V checkFallDamage
	c (I)Z getPaddleState
	a (F)V setDamage
	r ()F getDamage
	d (I)V setHurtTime
	s ()I getHurtTime
	b (I)V setBubbleTime
	F ()I getBubbleTime
	s (F)F getBubbleAngle
	m (I)V setHurtDir
	t ()I getHurtDir
	a (Lcah$b;)V setVariant
	v ()Lcah$b; getVariant
	o (Lbfj;)Z canAddPassenger
	w ()I getMaxPassengers
	cL ()Lbfz; getControllingPassenger
	a (ZZZZ)V setInput
	aZ ()Z isUnderWater
	dv ()Lcfz; getPickResult
	c ()Ljava/lang/Object; getVariant
	a (Ljava/lang/Object;)V setVariant
	c (Lbfj;)Z lambda$tickBubbleColumn$0
	<clinit> ()V <clinit>
cah$1 net/minecraft/world/entity/vehicle/Boat$1
	a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
	<clinit> ()V <clinit>
cah$a net/minecraft/world/entity/vehicle/Boat$Status
	a IN_WATER
	b UNDER_WATER
	c UNDER_FLOWING_WATER
	d ON_LAND
	e IN_AIR
	f $VALUES
	values ()[Lcah$a; values
	valueOf (Ljava/lang/String;)Lcah$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcah$a; $values
	<clinit> ()V <clinit>
cah$b net/minecraft/world/entity/vehicle/Boat$Type
	a OAK
	b SPRUCE
	c BIRCH
	d JUNGLE
	e ACACIA
	f CHERRY
	g DARK_OAK
	h MANGROVE
	i BAMBOO
	k name
	l planks
	j CODEC
	m BY_ID
	n $VALUES
	values ()[Lcah$b; values
	valueOf (Ljava/lang/String;)Lcah$b; valueOf
	<init> (Ljava/lang/String;ILcpn;Ljava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Ljava/lang/String; getName
	b ()Lcpn; getPlanks
	toString ()Ljava/lang/String; toString
	a (I)Lcah$b; byId
	a (Ljava/lang/String;)Lcah$b; byName
	d ()[Lcah$b; $values
	<clinit> ()V <clinit>
cai net/minecraft/world/entity/vehicle/ChestBoat
	f CONTAINER_SIZE
	g itemStacks
	h lootTable
	i lootTableSeed
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	q ()F getSinglePassengerXOffset
	w ()I getMaxPassengers
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (Lben;)V destroy
	a (Lbfj$c;)V remove
	a (Lbyo;Lbdw;)Lbdx; interact
	b (Lbyo;)V openCustomInventoryScreen
	j ()Lcfu; getDropItem
	a ()V clearContent
	b ()I getContainerSize
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a_ (I)Lbgs; getSlot
	e ()V setChanged
	a (Lbyo;)Z stillValid
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	e (Lbyo;)V unpackLootTable
	A ()Lacq; getLootTable
	a (Lacq;)V setLootTable
	C ()J getLootTableSeed
	a (J)V setLootTableSeed
	D ()Lhn; getItemStacks
	E ()V clearItemStacks
	c (Lbyo;)V stopOpen
cai$1 net/minecraft/world/entity/vehicle/ChestBoat$1
	a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
	<clinit> ()V <clinit>
caj net/minecraft/world/entity/vehicle/ContainerEntity
	dg ()Leei; position
	A ()Lacq; getLootTable
	a (Lacq;)V setLootTable
	C ()J getLootTableSeed
	a (J)V setLootTableSeed
	D ()Lhn; getItemStacks
	E ()V clearItemStacks
	dI ()Lcmm; level
	dD ()Z isRemoved
	ab_ ()Z isEmpty
	c (Lqr;)V addChestVehicleSaveData
	b_ (Lqr;)V readChestVehicleSaveData
	a (Lben;Lcmm;Lbfj;)V chestVehicleDestroyed
	c_ (Lbyo;)Lbdx; interactWithContainerVehicle
	f (Lbyo;)V unpackChestVehicleLootTable
	f ()V clearChestVehicleContent
	g ()Z isChestVehicleEmpty
	e_ (I)Lcfz; removeChestVehicleItemNoUpdate
	f_ (I)Lcfz; getChestVehicleItem
	b (II)Lcfz; removeChestVehicleItem
	c (ILcfz;)V setChestVehicleItem
	g_ (I)Lbgs; getChestVehicleSlot
	g (Lbyo;)Z isChestVehicleStillValid
caj$1 net/minecraft/world/entity/vehicle/ContainerEntity$1
	a val$slot
	c this$0
	<init> (Lcaj;I)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
cak net/minecraft/world/entity/vehicle/DismountHelper
	<init> ()V <init>
	a (Lha;)[[I offsetsForDirection
	a (D)Z isBlockFloorValid
	a (Lclw;Lbfz;Leed;)Z canDismountTo
	a (Lclw;Leei;Lbfz;Lbgl;)Z canDismountTo
	a (Lcls;Lgu;)Lefb; nonClimbableShape
	a (Lgu;ILjava/util/function/Function;)D findCeilingFrom
	a (Lbfn;Lclw;Lgu;Z)Leei; findSafeDismountLocation
	a (Lclw;Lgu;)Lefb; lambda$findSafeDismountLocation$0
cal net/minecraft/world/entity/vehicle/Minecart
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	a (Lbyo;Lbdw;)Lbdx; interact
	j ()Lcfu; getDropItem
	a (IIIZ)V activateMinecart
	t ()Lcaf$a; getMinecartType
cam net/minecraft/world/entity/vehicle/MinecartChest
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	j ()Lcfu; getDropItem
	b ()I getContainerSize
	t ()Lcaf$a; getMinecartType
	w ()Ldcb; getDefaultDisplayBlockState
	y ()I getDefaultDisplayOffset
	a (ILbyn;)Lcbf; createMenu
	c (Lbyo;)V stopOpen
	a (Lbyo;Lbdw;)Lbdx; interact
can net/minecraft/world/entity/vehicle/MinecartCommandBlock
	c DATA_ID_COMMAND_NAME
	d DATA_ID_LAST_OUTPUT
	e commandBlock
	f ACTIVATION_DELAY
	g lastActivated
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	j ()Lcfu; getDropItem
	a_ ()V defineSynchedData
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	t ()Lcaf$a; getMinecartType
	w ()Ldcb; getDefaultDisplayBlockState
	A ()Lcln; getCommandBlock
	a (IIIZ)V activateMinecart
	a (Lbyo;Lbdw;)Lbdx; interact
	a (Laby;)V onSyncedDataUpdated
	cK ()Z onlyOpCanSetNbt
	<clinit> ()V <clinit>
can$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	b this$0
	<init> (Lcan;)V <init>
	e ()Laif; getLevel
	f ()V onUpdated
	g ()Leei; getPosition
	h ()Lcan; getMinecart
	i ()Lds; createCommandSourceStack
	j ()Z isValid
cao net/minecraft/world/entity/vehicle/MinecartFurnace
	e DATA_ID_FUEL
	f fuel
	c xPush
	d zPush
	g INGREDIENT
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	t ()Lcaf$a; getMinecartType
	a_ ()V defineSynchedData
	l ()V tick
	k ()D getMaxSpeed
	j ()Lcfu; getDropItem
	c (Lgu;Ldcb;)V moveAlongTrack
	p ()V applyNaturalSlowdown
	a (Lbyo;Lbdw;)Lbdx; interact
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	A ()Z hasFuel
	p (Z)V setHasFuel
	w ()Ldcb; getDefaultDisplayBlockState
	<clinit> ()V <clinit>
cap net/minecraft/world/entity/vehicle/MinecartHopper
	f enabled
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	t ()Lcaf$a; getMinecartType
	w ()Ldcb; getDefaultDisplayBlockState
	y ()I getDefaultDisplayOffset
	b ()I getContainerSize
	a (IIIZ)V activateMinecart
	F ()Z isEnabled
	p (Z)V setEnabled
	G ()D getLevelX
	I ()D getLevelY
	J ()D getLevelZ
	l ()V tick
	K ()Z suckInItems
	j ()Lcfu; getDropItem
	b (Lqr;)V addAdditionalSaveData
	a (Lqr;)V readAdditionalSaveData
	a (ILbyn;)Lcbf; createMenu
caq net/minecraft/world/entity/vehicle/MinecartSpawner
	c spawner
	d ticker
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	j ()Lcfu; getDropItem
	b (Lcmm;)Ljava/lang/Runnable; createTicker
	t ()Lcaf$a; getMinecartType
	w ()Ldcb; getDefaultDisplayBlockState
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	b (B)V handleEntityEvent
	l ()V tick
	A ()Lclo; getSpawner
	cK ()Z onlyOpCanSetNbt
	c (Lcmm;)V lambda$createTicker$1
	d (Lcmm;)V lambda$createTicker$0
caq$1 net/minecraft/world/entity/vehicle/MinecartSpawner$1
	a this$0
	<init> (Lcaq;)V <init>
	a (Lcmm;Lgu;I)V broadcastEvent
car net/minecraft/world/entity/vehicle/MinecartTNT
	c EVENT_PRIME
	d fuse
	<init> (Lbfn;Lcmm;)V <init>
	<init> (Lcmm;DDD)V <init>
	t ()Lcaf$a; getMinecartType
	w ()Ldcb; getDefaultDisplayBlockState
	l ()V tick
	a (Lben;F)Z hurt
	a (Lben;)V destroy
	j ()Lcfu; getDropItem
	h (D)V explode
	a (Lben;D)V explode
	a (FFLben;)Z causeFallDamage
	a (IIIZ)V activateMinecart
	b (B)V handleEntityEvent
	A ()V primeFuse
	C ()I getFuse
	D ()Z isPrimed
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;F)F getBlockExplosionResistance
	a (Lcme;Lcls;Lgu;Ldcb;F)Z shouldBlockExplode
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
cas net/minecraft/world/entity/vehicle/package-info
cat net/minecraft/world/flag/FeatureElement
	bv FILTERED_REGISTRIES
	m ()Lcaw; requiredFeatures
	a (Lcaw;)Z isEnabled
	<clinit> ()V <clinit>
cau net/minecraft/world/flag/FeatureFlag
	a universe
	b mask
	<init> (Lcax;I)V <init>
cav net/minecraft/world/flag/FeatureFlagRegistry
	a LOGGER
	b universe
	c names
	d allFlags
	<init> (Lcax;Lcaw;Ljava/util/Map;)V <init>
	a (Lcaw;)Z isSubset
	a ()Lcaw; allFlags
	a (Ljava/lang/Iterable;)Lcaw; fromNames
	a ([Lcau;)Lcaw; subset
	a (Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcaw; fromNames
	b (Lcaw;)Ljava/util/Set; toNames
	b ()Lcom/mojang/serialization/Codec; codec
	c (Lcaw;)Ljava/util/List; lambda$codec$4
	a (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$codec$3
	a (Ljava/util/Set;)Ljava/lang/String; lambda$codec$2
	a (Lcaw;Ljava/util/Set;Lacq;Lcau;)V lambda$toNames$1
	a (Lacq;)V lambda$fromNames$0
	<clinit> ()V <clinit>
cav$a net/minecraft/world/flag/FeatureFlagRegistry$Builder
	a universe
	b id
	c flags
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Lcau; createVanilla
	a (Lacq;)Lcau; create
	a ()Lcav; build
caw net/minecraft/world/flag/FeatureFlagSet
	b EMPTY
	a MAX_CONTAINER_SIZE
	c universe
	d mask
	<init> (Lcax;J)V <init>
	a (Lcax;Ljava/util/Collection;)Lcaw; create
	a ()Lcaw; of
	a (Lcau;)Lcaw; of
	a (Lcau;[Lcau;)Lcaw; of
	a (Lcax;JLjava/lang/Iterable;)J computeMask
	b (Lcau;)Z contains
	a (Lcaw;)Z isSubsetOf
	b (Lcaw;)Lcaw; join
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	<clinit> ()V <clinit>
cax net/minecraft/world/flag/FeatureFlagUniverse
	a id
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
cay net/minecraft/world/flag/FeatureFlags
	a VANILLA
	b BUNDLE
	c REGISTRY
	d CODEC
	e VANILLA_SET
	f DEFAULT_FLAGS
	<init> ()V <init>
	a (Lcaw;Lcaw;)Ljava/lang/String; printMissingFlags
	a (Lcav;Lcaw;Lcaw;)Ljava/lang/String; printMissingFlags
	a (Lcaw;)Z isExperimental
	a (Ljava/util/Set;Lacq;)Z lambda$printMissingFlags$0
	<clinit> ()V <clinit>
caz net/minecraft/world/flag/package-info
cba net/minecraft/world/food/FoodConstants
	a MAX_FOOD
	b MAX_SATURATION
	c START_SATURATION
	d SATURATION_FLOOR
	e EXHAUSTION_DROP
	f HEALTH_TICK_COUNT
	g HEALTH_TICK_COUNT_SATURATED
	h HEAL_LEVEL
	i SPRINT_LEVEL
	j STARVE_LEVEL
	k FOOD_SATURATION_POOR
	l FOOD_SATURATION_LOW
	m FOOD_SATURATION_NORMAL
	n FOOD_SATURATION_GOOD
	o FOOD_SATURATION_MAX
	p FOOD_SATURATION_SUPERNATURAL
	q EXHAUSTION_HEAL
	r EXHAUSTION_JUMP
	s EXHAUSTION_SPRINT_JUMP
	t EXHAUSTION_MINE
	u EXHAUSTION_ATTACK
	v EXHAUSTION_WALK
	w EXHAUSTION_CROUCH
	x EXHAUSTION_SPRINT
	y EXHAUSTION_SWIM
	<init> ()V <init>
cbb net/minecraft/world/food/FoodData
	a foodLevel
	b saturationLevel
	c exhaustionLevel
	d tickTimer
	e lastFoodLevel
	<init> ()V <init>
	a (IF)V eat
	a (Lcfu;Lcfz;)V eat
	a (Lbyo;)V tick
	a (Lqr;)V readAdditionalSaveData
	b (Lqr;)V addAdditionalSaveData
	a ()I getFoodLevel
	b ()I getLastFoodLevel
	c ()Z needsFood
	a (F)V addExhaustion
	d ()F getExhaustionLevel
	e ()F getSaturationLevel
	a (I)V setFoodLevel
	b (F)V setSaturation
	c (F)V setExhaustion
cbc net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	<init> (IFZZZLjava/util/List;)V <init>
	a ()I getNutrition
	b ()F getSaturationModifier
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
cbc$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	<init> ()V <init>
	a (I)Lcbc$a; nutrition
	a (F)Lcbc$a; saturationMod
	a ()Lcbc$a; meat
	b ()Lcbc$a; alwaysEat
	c ()Lcbc$a; fast
	a (Lbfa;F)Lcbc$a; effect
	d ()Lcbc; build
cbd net/minecraft/world/food/Foods
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M GLOW_BERRIES
	N TROPICAL_FISH
	<init> ()V <init>
	a (I)Lcbc$a; stew
	<clinit> ()V <clinit>
cbe net/minecraft/world/food/package-info
cbf net/minecraft/world/inventory/AbstractContainerMenu
	k LOGGER
	a SLOT_CLICKED_OUTSIDE
	b QUICKCRAFT_TYPE_CHARITABLE
	c QUICKCRAFT_TYPE_GREEDY
	d QUICKCRAFT_TYPE_CLONE
	e QUICKCRAFT_HEADER_START
	f QUICKCRAFT_HEADER_CONTINUE
	g QUICKCRAFT_HEADER_END
	h CARRIED_SLOT_SIZE
	l lastSlots
	i slots
	m dataSlots
	n carried
	o remoteSlots
	p remoteDataSlots
	q remoteCarried
	r stateId
	s menuType
	j containerId
	t quickcraftType
	u quickcraftStatus
	v quickcraftSlots
	w containerListeners
	x synchronizer
	y suppressRemoteUpdates
	<init> (Lcck;I)V <init>
	a (Lcbq;Lbyo;Lcpn;)Z stillValid
	a ()Lcck; getType
	a (Lbdq;I)V checkContainerSize
	a (Lcbp;I)V checkContainerDataCount
	a (I)Z isValidSlotIndex
	a (Lccx;)Lccx; addSlot
	a (Lcbv;)Lcbv; addDataSlot
	a (Lcbp;)V addDataSlots
	a (Lcbr;)V addSlotListener
	a (Lcbs;)V setSynchronizer
	b ()V sendAllDataToRemote
	b (Lcbr;)V removeSlotListener
	c ()Lhn; getItems
	d ()V broadcastChanges
	e ()V broadcastFullState
	c (II)V updateDataSlotListeners
	a (ILcfz;Ljava/util/function/Supplier;)V triggerSlotListeners
	b (ILcfz;Ljava/util/function/Supplier;)V synchronizeSlotToRemote
	d (II)V synchronizeDataSlotToRemote
	l ()V synchronizeCarriedToRemote
	a (ILcfz;)V setRemoteSlot
	b (ILcfz;)V setRemoteSlotNoCopy
	a (Lcfz;)V setRemoteCarried
	b (Lbyo;I)Z clickMenuButton
	b (I)Lccx; getSlot
	a (Lbyo;I)Lcfz; quickMoveStack
	a (IILcbo;Lbyo;)V clicked
	b (IILcbo;Lbyo;)V doClick
	a (Lbyo;Lcbn;Lccx;Lcfz;Lcfz;)Z tryItemClickBehaviourOverride
	m ()Lbgs; createCarriedSlotAccess
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	b (Lbyo;)V removed
	a (Lbyo;Lbdq;)V clearContainer
	a (Lbdq;)V slotsChanged
	a (IILcfz;)V setItem
	a (ILjava/util/List;Lcfz;)V initializeContents
	a (II)V setData
	a (Lbyo;)Z stillValid
	a (Lcfz;IIZ)Z moveItemStackTo
	c (I)I getQuickcraftType
	d (I)I getQuickcraftHeader
	b (II)I getQuickcraftMask
	a (ILbyo;)Z isValidQuickcraftType
	f ()V resetQuickCraft
	a (Lccx;Lcfz;Z)Z canItemQuickReplace
	a (Ljava/util/Set;ILcfz;)I getQuickCraftPlaceCount
	b (Lccx;)Z canDragTo
	a (Lczn;)I getRedstoneSignalFromBlockEntity
	b (Lbdq;)I getRedstoneSignalFromContainer
	b (Lcfz;)V setCarried
	g ()Lcfz; getCarried
	h ()V suppressRemoteUpdates
	i ()V resumeRemoteUpdates
	a (Lcbf;)V transferState
	b (Lbdq;I)Ljava/util/OptionalInt; findSlot
	j ()I getStateId
	k ()I incrementStateId
	a (Lcfz;Lccx;Lbyo;Lcfz;)V lambda$doClick$4
	a (Lccx;Lbyo;Lcfz;)V lambda$doClick$3
	n ()Ljava/lang/String; lambda$clicked$2
	o ()Ljava/lang/String; lambda$clicked$1
	a (Lcpn;Lbyo;Lcmm;Lgu;)Ljava/lang/Boolean; lambda$stillValid$0
	<clinit> ()V <clinit>
cbf$1 net/minecraft/world/inventory/AbstractContainerMenu$1
	a this$0
	<init> (Lcbf;)V <init>
	a ()Lcfz; get
	a (Lcfz;)Z set
cbg net/minecraft/world/inventory/AbstractFurnaceMenu
	k INGREDIENT_SLOT
	l FUEL_SLOT
	m RESULT_SLOT
	n SLOT_COUNT
	o DATA_COUNT
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u container
	v data
	p level
	w recipeType
	x recipeBookType
	<init> (Lcck;Lcjf;Lccq;ILbyn;)V <init>
	<init> (Lcck;Lcjf;Lccq;ILbyn;Lbdq;Lcbp;)V <init>
	a (Lbys;)V fillCraftSlotsStackedContents
	l ()V clearCraftingContent
	a (Lcjc;)Z recipeMatches
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	c (Lcfz;)Z canSmelt
	d (Lcfz;)Z isFuel
	q ()I getBurnProgress
	r ()I getLitProgress
	s ()Z isLit
	t ()Lccq; getRecipeBookType
	e (I)Z shouldMoveToInventory
cbh net/minecraft/world/inventory/AnvilMenu
	k INPUT_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	s LOGGER
	t DEBUG_COST
	n MAX_NAME_LENGTH
	u repairItemCountCost
	v itemName
	w cost
	x COST_FAIL
	y COST_BASE
	z COST_ADDED_BASE
	A COST_REPAIR_MATERIAL
	B COST_REPAIR_SACRIFICE
	C COST_INCOMPATIBLE_PENALTY
	D COST_RENAME
	E INPUT_SLOT_X_PLACEMENT
	F ADDITIONAL_SLOT_X_PLACEMENT
	G RESULT_SLOT_X_PLACEMENT
	H SLOT_Y_PLACEMENT
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	l ()Lccg; createInputSlotDefinitions
	a (Ldcb;)Z isValidBlock
	a (Lbyo;Z)Z mayPickup
	a (Lbyo;Lcfz;)V onTake
	m ()V createResult
	e (I)I calculateIncreasedRepairCost
	a (Ljava/lang/String;)Z setItemName
	b (Ljava/lang/String;)Ljava/lang/String; validateName
	n ()I getCost
	a (Lbyo;Lcmm;Lgu;)V lambda$onTake$2
	e (Lcfz;)Z lambda$createInputSlotDefinitions$1
	f (Lcfz;)Z lambda$createInputSlotDefinitions$0
	<clinit> ()V <clinit>
cbh$1 net/minecraft/world/inventory/AnvilMenu$1
	a $SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
	<clinit> ()V <clinit>
cbi net/minecraft/world/inventory/BeaconMenu
	k PAYMENT_SLOT
	l SLOT_COUNT
	m DATA_COUNT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r beacon
	s paymentSlot
	t access
	u beaconData
	<init> (ILbdq;)V <init>
	<init> (ILbdq;Lcbp;Lcbq;)V <init>
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (II)V setData
	a (Lbyo;I)Lcfz; quickMoveStack
	l ()I getLevels
	m ()Lbey; getPrimaryEffect
	n ()Lbey; getSecondaryEffect
	a (Ljava/util/Optional;Ljava/util/Optional;)V updateEffects
	o ()Z hasPayment
cbi$1 net/minecraft/world/inventory/BeaconMenu$1
	c this$0
	<init> (Lcbi;I)V <init>
	b (ILcfz;)Z canPlaceItem
	ac_ ()I getMaxStackSize
cbi$a net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a this$0
	<init> (Lcbi;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a ()I getMaxStackSize
cbj net/minecraft/world/inventory/BlastFurnaceMenu
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;Lcbp;)V <init>
cbk net/minecraft/world/inventory/BrewingStandMenu
	k BOTTLE_SLOT_START
	l BOTTLE_SLOT_END
	m INGREDIENT_SLOT
	n FUEL_SLOT
	o SLOT_COUNT
	p DATA_COUNT
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u brewingStand
	v brewingStandData
	w ingredientSlot
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;Lcbp;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	l ()I getFuel
	m ()I getBrewingTicks
cbk$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	<init> (Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	b (Lcfz;)Z mayPlaceItem
	a ()I getMaxStackSize
cbk$b net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	<init> (Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a ()I getMaxStackSize
cbk$c net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	<init> (Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a ()I getMaxStackSize
	a (Lbyo;Lcfz;)V onTake
	b (Lcfz;)Z mayPlaceItem
cbl net/minecraft/world/inventory/CartographyTableMenu
	k MAP_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s access
	t lastSoundTime
	n container
	u resultContainer
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbdq;)V slotsChanged
	a (Lcfz;Lcfz;Lcfz;)V setupResultSlot
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$1
	a (Lcfz;Lcfz;Lcfz;Lcmm;Lgu;)V lambda$setupResultSlot$0
cbl$1 net/minecraft/world/inventory/CartographyTableMenu$1
	c this$0
	<init> (Lcbl;I)V <init>
	e ()V setChanged
cbl$2 net/minecraft/world/inventory/CartographyTableMenu$2
	c this$0
	<init> (Lcbl;)V <init>
	e ()V setChanged
cbl$3 net/minecraft/world/inventory/CartographyTableMenu$3
	a this$0
	<init> (Lcbl;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cbl$4 net/minecraft/world/inventory/CartographyTableMenu$4
	a this$0
	<init> (Lcbl;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cbl$5 net/minecraft/world/inventory/CartographyTableMenu$5
	a val$access
	b this$0
	<init> (Lcbl;Lbdq;IIILcbq;)V <init>
	a (Lcfz;)Z mayPlace
	a (Lbyo;Lcfz;)V onTake
	a (Lcmm;Lgu;)V lambda$onTake$0
cbm net/minecraft/world/inventory/ChestMenu
	k SLOTS_PER_ROW
	l container
	m containerRows
	<init> (Lcck;ILbyn;I)V <init>
	a (ILbyn;)Lcbm; oneRow
	b (ILbyn;)Lcbm; twoRows
	c (ILbyn;)Lcbm; threeRows
	d (ILbyn;)Lcbm; fourRows
	e (ILbyn;)Lcbm; fiveRows
	f (ILbyn;)Lcbm; sixRows
	a (ILbyn;Lbdq;)Lcbm; threeRows
	b (ILbyn;Lbdq;)Lcbm; sixRows
	<init> (Lcck;ILbyn;Lbdq;I)V <init>
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
	l ()Lbdq; getContainer
	m ()I getRowCount
cbn net/minecraft/world/inventory/ClickAction
	a PRIMARY
	b SECONDARY
	c $VALUES
	values ()[Lcbn; values
	valueOf (Ljava/lang/String;)Lcbn; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcbn; $values
	<clinit> ()V <clinit>
cbo net/minecraft/world/inventory/ClickType
	a PICKUP
	b QUICK_MOVE
	c SWAP
	d CLONE
	e THROW
	f QUICK_CRAFT
	g PICKUP_ALL
	h $VALUES
	values ()[Lcbo; values
	valueOf (Ljava/lang/String;)Lcbo; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcbo; $values
	<clinit> ()V <clinit>
cbp net/minecraft/world/inventory/ContainerData
	a (I)I get
	a (II)V set
	a ()I getCount
cbq net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Lcmm;Lgu;)Lcbq; create
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiConsumer;Lcmm;Lgu;)Ljava/util/Optional; lambda$execute$0
	<clinit> ()V <clinit>
cbq$1 net/minecraft/world/inventory/ContainerLevelAccess$1
	<init> ()V <init>
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
cbq$2 net/minecraft/world/inventory/ContainerLevelAccess$2
	b val$level
	c val$pos
	<init> (Lcmm;Lgu;)V <init>
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
cbr net/minecraft/world/inventory/ContainerListener
	a (Lcbf;ILcfz;)V slotChanged
	a (Lcbf;II)V dataChanged
cbs net/minecraft/world/inventory/ContainerSynchronizer
	a (Lcbf;Lhn;Lcfz;[I)V sendInitialData
	a (Lcbf;ILcfz;)V sendSlotChange
	a (Lcbf;Lcfz;)V sendCarriedChange
	a (Lcbf;II)V sendDataChange
cbt net/minecraft/world/inventory/CraftingContainer
	f ()I getWidth
	g ()I getHeight
	h ()Ljava/util/List; getItems
cbu net/minecraft/world/inventory/CraftingMenu
	k RESULT_SLOT
	l CRAFT_SLOT_START
	m CRAFT_SLOT_END
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r craftSlots
	s resultSlots
	t access
	u player
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	a (Lcbf;Lcmm;Lbyo;Lcbt;Lccs;)V slotChangedCraftingGrid
	a (Lbdq;)V slotsChanged
	a (Lbys;)V fillCraftSlotsStackedContents
	l ()V clearCraftingContent
	a (Lcjc;)Z recipeMatches
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lccq; getRecipeBookType
	e (I)Z shouldMoveToInventory
	a (Lcfz;Lbyo;Lcmm;Lgu;)V lambda$quickMoveStack$2
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$1
	a (Lcmm;Lgu;)V lambda$slotsChanged$0
cbv net/minecraft/world/inventory/DataSlot
	a prevValue
	<init> ()V <init>
	a (Lcbp;I)Lcbv; forContainer
	a ([II)Lcbv; shared
	a ()Lcbv; standalone
	b ()I get
	a (I)V set
	c ()Z checkAndClearUpdateFlag
cbv$1 net/minecraft/world/inventory/DataSlot$1
	a val$container
	b val$dataId
	<init> (Lcbp;I)V <init>
	b ()I get
	a (I)V set
cbv$2 net/minecraft/world/inventory/DataSlot$2
	a val$storage
	b val$index
	<init> ([II)V <init>
	b ()I get
	a (I)V set
cbv$3 net/minecraft/world/inventory/DataSlot$3
	a value
	<init> ()V <init>
	b ()I get
	a (I)V set
cbw net/minecraft/world/inventory/DispenserMenu
	k SLOT_COUNT
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p dispenser
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
cbx net/minecraft/world/inventory/EnchantmentMenu
	n enchantSlots
	o access
	p random
	q enchantmentSeed
	k costs
	l enchantClue
	m levelClue
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	a (Lbdq;)V slotsChanged
	b (Lbyo;I)Z clickMenuButton
	a (Lcfz;II)Ljava/util/List; getEnchantmentList
	l ()I getGoldCount
	m ()I getEnchantmentSeed
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$2
	a (Lcfz;ILbyo;ILcfz;Lcmm;Lgu;)V lambda$clickMenuButton$1
	a (Lcfz;Lcmm;Lgu;)V lambda$slotsChanged$0
cbx$1 net/minecraft/world/inventory/EnchantmentMenu$1
	c this$0
	<init> (Lcbx;I)V <init>
	e ()V setChanged
cbx$2 net/minecraft/world/inventory/EnchantmentMenu$2
	a this$0
	<init> (Lcbx;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a ()I getMaxStackSize
cbx$3 net/minecraft/world/inventory/EnchantmentMenu$3
	a this$0
	<init> (Lcbx;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cby net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	<init> (Lcbg;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a_ (Lcfz;)I getMaxStackSize
	c (Lcfz;)Z isBucket
cbz net/minecraft/world/inventory/FurnaceMenu
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;Lcbp;)V <init>
cca net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	<init> (Lbyo;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a (I)Lcfz; remove
	a (Lbyo;Lcfz;)V onTake
	a (Lcfz;I)V onQuickCraft
	b_ (Lcfz;)V checkTakeAchievements
ccb net/minecraft/world/inventory/GrindstoneMenu
	k MAX_NAME_LENGTH
	l INPUT_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s resultSlots
	t repairSlots
	u access
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	a (Lbdq;)V slotsChanged
	l ()V createResult
	a (Lcfz;Lcfz;)Lcfz; mergeEnchants
	a (Lcfz;II)Lcfz; removeNonCurses
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$1
	a (Ljava/util/Map$Entry;)Z lambda$removeNonCurses$0
ccb$1 net/minecraft/world/inventory/GrindstoneMenu$1
	c this$0
	<init> (Lccb;I)V <init>
	e ()V setChanged
ccb$2 net/minecraft/world/inventory/GrindstoneMenu$2
	a this$0
	<init> (Lccb;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
ccb$3 net/minecraft/world/inventory/GrindstoneMenu$3
	a this$0
	<init> (Lccb;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
ccb$4 net/minecraft/world/inventory/GrindstoneMenu$4
	a val$access
	b this$0
	<init> (Lccb;Lbdq;IIILcbq;)V <init>
	a (Lcfz;)Z mayPlace
	a (Lbyo;Lcfz;)V onTake
	a (Lcmm;)I getExperienceAmount
	g (Lcfz;)I getExperienceFromItem
	a (Lcmm;Lgu;)V lambda$onTake$0
ccc net/minecraft/world/inventory/HopperMenu
	k CONTAINER_SIZE
	l hopper
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
ccd net/minecraft/world/inventory/HorseInventoryMenu
	k horseContainer
	l horse
	<init> (ILbyn;Lbdq;Lbtk;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbtk;)Z hasChest
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
ccd$1 net/minecraft/world/inventory/HorseInventoryMenu$1
	a val$horse
	b this$0
	<init> (Lccd;Lbdq;IIILbtk;)V <init>
	a (Lcfz;)Z mayPlace
	b ()Z isActive
ccd$2 net/minecraft/world/inventory/HorseInventoryMenu$2
	a val$horse
	b this$0
	<init> (Lccd;Lbdq;IIILbtk;)V <init>
	a (Lcfz;)Z mayPlace
	b ()Z isActive
	a ()I getMaxStackSize
cce net/minecraft/world/inventory/InventoryMenu
	k CONTAINER_ID
	l RESULT_SLOT
	m CRAFT_SLOT_START
	n CRAFT_SLOT_END
	o ARMOR_SLOT_START
	p ARMOR_SLOT_END
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u SHIELD_SLOT
	v BLOCK_ATLAS
	w EMPTY_ARMOR_SLOT_HELMET
	x EMPTY_ARMOR_SLOT_CHESTPLATE
	y EMPTY_ARMOR_SLOT_LEGGINGS
	z EMPTY_ARMOR_SLOT_BOOTS
	A EMPTY_ARMOR_SLOT_SHIELD
	C TEXTURE_EMPTY_SLOTS
	D SLOT_IDS
	E craftSlots
	F resultSlots
	B active
	G owner
	<init> (Lbyn;ZLbyo;)V <init>
	a (Lbyo;Lbfo;Lcfz;Lcfz;)V onEquipItem
	f (I)Z isHotbarSlot
	a (Lbys;)V fillCraftSlotsStackedContents
	l ()V clearCraftingContent
	a (Lcjc;)Z recipeMatches
	a (Lbdq;)V slotsChanged
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	q ()Lcbt; getCraftSlots
	t ()Lccq; getRecipeBookType
	e (I)Z shouldMoveToInventory
	<clinit> ()V <clinit>
cce$1 net/minecraft/world/inventory/InventoryMenu$1
	a val$owner
	b val$slot
	c this$0
	<init> (Lcce;Lbdq;IIILbyo;Lbfo;)V <init>
	d (Lcfz;)V setByPlayer
	a ()I getMaxStackSize
	a (Lcfz;)Z mayPlace
	a (Lbyo;)Z mayPickup
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
cce$2 net/minecraft/world/inventory/InventoryMenu$2
	a val$owner
	b this$0
	<init> (Lcce;Lbdq;IIILbyo;)V <init>
	d (Lcfz;)V setByPlayer
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
ccf net/minecraft/world/inventory/ItemCombinerMenu
	k INVENTORY_SLOTS_PER_ROW
	l INVENTORY_SLOTS_PER_COLUMN
	o access
	p player
	q inputSlots
	m inputSlotIndexes
	r resultSlots
	n resultSlotIndex
	a (Lbyo;Z)Z mayPickup
	a (Lbyo;Lcfz;)V onTake
	a (Ldcb;)Z isValidBlock
	<init> (Lcck;ILbyn;Lcbq;)V <init>
	a (Lccg;)V createInputSlots
	b (Lccg;)V createResultSlot
	a (Lbyn;)V createInventorySlots
	m ()V createResult
	l ()Lccg; createInputSlotDefinitions
	e (I)Lbee; createContainer
	a (Lbdq;)V slotsChanged
	b (Lbyo;)V removed
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	c (Lcfz;)Z canMoveIntoInputSlots
	d (Lcfz;)I getSlotToQuickMoveTo
	o ()I getResultSlot
	n ()I getInventorySlotStart
	p ()I getInventorySlotEnd
	q ()I getUseRowStart
	r ()I getUseRowEnd
	a (Lbyo;Lcmm;Lgu;)Ljava/lang/Boolean; lambda$stillValid$1
	b (Lbyo;Lcmm;Lgu;)V lambda$removed$0
ccf$1 net/minecraft/world/inventory/ItemCombinerMenu$1
	a val$slot
	b this$0
	<init> (Lccf;Lbdq;IIILccg$b;)V <init>
	a (Lcfz;)Z mayPlace
ccf$2 net/minecraft/world/inventory/ItemCombinerMenu$2
	a this$0
	<init> (Lccf;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a (Lbyo;)Z mayPickup
	a (Lbyo;Lcfz;)V onTake
ccf$3 net/minecraft/world/inventory/ItemCombinerMenu$3
	c this$0
	<init> (Lccf;I)V <init>
	e ()V setChanged
ccg net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	a slots
	b resultSlot
	<init> (Ljava/util/List;Lccg$b;)V <init>
	a ()Lccg$a; create
	a (I)Z hasSlot
	b (I)Lccg$b; getSlot
	b ()Lccg$b; getResultSlot
	c ()Ljava/util/List; getSlots
	d ()I getNumOfInputSlots
	e ()I getResultSlotIndex
	f ()Ljava/util/List; getInputSlotIndexes
ccg$a net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	a slots
	b resultSlot
	<init> ()V <init>
	a (IIILjava/util/function/Predicate;)Lccg$a; withSlot
	a (III)Lccg$a; withResultSlot
	a ()Lccg; build
	a (Lcfz;)Z lambda$withResultSlot$0
ccg$b net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	a slotIndex
	b x
	c y
	d mayPlace
	e EMPTY
	<init> (IIILjava/util/function/Predicate;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I slotIndex
	b ()I x
	c ()I y
	d ()Ljava/util/function/Predicate; mayPlace
	a (Lcfz;)Z lambda$static$0
	<clinit> ()V <clinit>
cch net/minecraft/world/inventory/LecternMenu
	o DATA_COUNT
	p SLOT_COUNT
	k BUTTON_PREV_PAGE
	l BUTTON_NEXT_PAGE
	m BUTTON_TAKE_BOOK
	n BUTTON_PAGE_JUMP_RANGE_START
	q lectern
	r lecternData
	<init> (I)V <init>
	<init> (ILbdq;Lcbp;)V <init>
	b (Lbyo;I)Z clickMenuButton
	a (Lbyo;I)Lcfz; quickMoveStack
	a (II)V setData
	a (Lbyo;)Z stillValid
	l ()Lcfz; getBook
	m ()I getPage
cch$1 net/minecraft/world/inventory/LecternMenu$1
	a this$0
	<init> (Lcch;Lbdq;III)V <init>
	d ()V setChanged
cci net/minecraft/world/inventory/LoomMenu
	k PATTERN_NOT_SET
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p access
	q selectedBannerPatternIndex
	r selectablePatterns
	s slotUpdateListener
	t bannerSlot
	u dyeSlot
	v patternSlot
	w resultSlot
	x lastSoundTime
	y inputContainer
	z outputContainer
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	a (Lbyo;)Z stillValid
	b (Lbyo;I)Z clickMenuButton
	c (Lcfz;)Ljava/util/List; getSelectablePatterns
	e (I)Z isValidPatternIndex
	a (Lbdq;)V slotsChanged
	l ()Ljava/util/List; getSelectablePatterns
	m ()I getSelectedBannerPatternIndex
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
	a (Lhe;)V setupResultSlot
	n ()Lccx; getBannerSlot
	o ()Lccx; getDyeSlot
	p ()Lccx; getPatternSlot
	q ()Lccx; getResultSlot
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$1
	r ()V lambda$new$0
cci$1 net/minecraft/world/inventory/LoomMenu$1
	c this$0
	<init> (Lcci;I)V <init>
	e ()V setChanged
cci$2 net/minecraft/world/inventory/LoomMenu$2
	c this$0
	<init> (Lcci;I)V <init>
	e ()V setChanged
cci$3 net/minecraft/world/inventory/LoomMenu$3
	a this$0
	<init> (Lcci;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cci$4 net/minecraft/world/inventory/LoomMenu$4
	a this$0
	<init> (Lcci;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cci$5 net/minecraft/world/inventory/LoomMenu$5
	a this$0
	<init> (Lcci;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
cci$6 net/minecraft/world/inventory/LoomMenu$6
	a val$access
	b this$0
	<init> (Lcci;Lbdq;IIILcbq;)V <init>
	a (Lcfz;)Z mayPlace
	a (Lbyo;Lcfz;)V onTake
	a (Lcmm;Lgu;)V lambda$onTake$0
ccj net/minecraft/world/inventory/MenuConstructor
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
cck net/minecraft/world/inventory/MenuType
	a GENERIC_9x1
	b GENERIC_9x2
	c GENERIC_9x3
	d GENERIC_9x4
	e GENERIC_9x5
	f GENERIC_9x6
	g GENERIC_3x3
	h ANVIL
	i BEACON
	j BLAST_FURNACE
	k BREWING_STAND
	l CRAFTING
	m ENCHANTMENT
	n FURNACE
	o GRINDSTONE
	p HOPPER
	q LECTERN
	r LOOM
	s MERCHANT
	t SHULKER_BOX
	u SMITHING
	v SMOKER
	w CARTOGRAPHY_TABLE
	x STONECUTTER
	y requiredFeatures
	z constructor
	a (Ljava/lang/String;Lcck$a;)Lcck; register
	a (Ljava/lang/String;Lcck$a;[Lcau;)Lcck; register
	<init> (Lcck$a;Lcaw;)V <init>
	a (ILbyn;)Lcbf; create
	m ()Lcaw; requiredFeatures
	b (ILbyn;)Lcch; lambda$static$0
	<clinit> ()V <clinit>
cck$a net/minecraft/world/inventory/MenuType$MenuSupplier
	create (ILbyn;)Lcbf; create
ccl net/minecraft/world/inventory/MerchantContainer
	c merchant
	d itemStacks
	e activeOffer
	f selectionHint
	g futureXp
	<init> (Lclj;)V <init>
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	d (I)Z isPaymentSlot
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Lbyo;)Z stillValid
	e ()V setChanged
	f ()V updateSellItem
	g ()Lclk; getActiveOffer
	c (I)V setSelectionHint
	a ()V clearContent
	h ()I getFutureXp
ccm net/minecraft/world/inventory/MerchantMenu
	k PAYMENT1_SLOT
	l PAYMENT2_SLOT
	m RESULT_SLOT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r SELLSLOT1_X
	s SELLSLOT2_X
	t BUYSLOT_X
	u ROW_Y
	v trader
	w tradeContainer
	x merchantLevel
	y showProgressBar
	z canRestock
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lclj;)V <init>
	a (Z)V setShowProgressBar
	a (Lbdq;)V slotsChanged
	e (I)V setSelectionHint
	a (Lbyo;)Z stillValid
	l ()I getTraderXp
	m ()I getFutureTraderXp
	f (I)V setXp
	n ()I getTraderLevel
	g (I)V setMerchantLevel
	b (Z)V setCanRestock
	o ()Z canRestock
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	a (Lbyo;I)Lcfz; quickMoveStack
	r ()V playTradeSound
	b (Lbyo;)V removed
	h (I)V tryMoveItems
	c (ILcfz;)V moveFromInventoryToPaymentSlot
	a (Lcll;)V setOffers
	p ()Lcll; getOffers
	q ()Z showProgressBar
ccn net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	c removeCount
	h merchant
	<init> (Lbyo;Lclj;Lccl;III)V <init>
	a (Lcfz;)Z mayPlace
	a (I)Lcfz; remove
	a (Lcfz;I)V onQuickCraft
	b_ (Lcfz;)V checkTakeAchievements
	a (Lbyo;Lcfz;)V onTake
cco net/minecraft/world/inventory/PlayerEnderChestContainer
	c activeChest
	<init> ()V <init>
	a (Ldah;)V setActiveChest
	b (Ldah;)Z isActiveChest
	a (Lqx;)V fromTag
	g ()Lqx; createTag
	a (Lbyo;)Z stillValid
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
ccp net/minecraft/world/inventory/RecipeBookMenu
	<init> (Lcck;I)V <init>
	a (ZLcjc;Laig;)V handlePlacement
	a (Lbys;)V fillCraftSlotsStackedContents
	l ()V clearCraftingContent
	a (Lcjc;)Z recipeMatches
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lccq; getRecipeBookType
	e (I)Z shouldMoveToInventory
ccq net/minecraft/world/inventory/RecipeBookType
	a CRAFTING
	b FURNACE
	c BLAST_FURNACE
	d SMOKER
	e $VALUES
	values ()[Lccq; values
	valueOf (Ljava/lang/String;)Lccq; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lccq; $values
	<clinit> ()V <clinit>
ccr net/minecraft/world/inventory/RecipeHolder
	a (Lcjc;)V setRecipeUsed
	d ()Lcjc; getRecipeUsed
	a (Lbyo;Ljava/util/List;)V awardUsedRecipes
	a (Lcmm;Laig;Lcjc;)Z setRecipeUsed
ccs net/minecraft/world/inventory/ResultContainer
	c itemStacks
	d recipeUsed
	<init> ()V <init>
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	e ()V setChanged
	a (Lbyo;)Z stillValid
	a ()V clearContent
	a (Lcjc;)V setRecipeUsed
	d ()Lcjc; getRecipeUsed
cct net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	c removeCount
	<init> (Lbyo;Lcbt;Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
	a (I)Lcfz; remove
	a (Lcfz;I)V onQuickCraft
	b (I)V onSwapCraft
	b_ (Lcfz;)V checkTakeAchievements
	a (Lbyo;Lcfz;)V onTake
ccu net/minecraft/world/inventory/ShulkerBoxMenu
	k CONTAINER_SIZE
	l container
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;)V <init>
	a (Lbyo;)Z stillValid
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
ccv net/minecraft/world/inventory/ShulkerBoxSlot
	<init> (Lbdq;III)V <init>
	a (Lcfz;)Z mayPlace
ccw net/minecraft/world/inventory/SimpleContainerData
	a ints
	<init> (I)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
ccx net/minecraft/world/inventory/Slot
	a slot
	d container
	e index
	f x
	g y
	<init> (Lbdq;III)V <init>
	a (Lcfz;Lcfz;)V onQuickCraft
	a (Lcfz;I)V onQuickCraft
	b (I)V onSwapCraft
	b_ (Lcfz;)V checkTakeAchievements
	a (Lbyo;Lcfz;)V onTake
	a (Lcfz;)Z mayPlace
	e ()Lcfz; getItem
	f ()Z hasItem
	d (Lcfz;)V setByPlayer
	e (Lcfz;)V set
	d ()V setChanged
	a ()I getMaxStackSize
	a_ (Lcfz;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	a (I)Lcfz; remove
	a (Lbyo;)Z mayPickup
	b ()Z isActive
	a (IILbyo;)Ljava/util/Optional; tryRemove
	b (IILbyo;)Lcfz; safeTake
	f (Lcfz;)Lcfz; safeInsert
	b (Lcfz;I)Lcfz; safeInsert
	b (Lbyo;)Z allowModification
	g ()I getContainerSlot
	h ()Z isHighlightable
	b (Lbyo;Lcfz;)V lambda$safeTake$0
ccy net/minecraft/world/inventory/SmithingMenu
	k TEMPLATE_SLOT
	l BASE_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	s TEMPLATE_SLOT_X_PLACEMENT
	t BASE_SLOT_X_PLACEMENT
	u ADDITIONAL_SLOT_X_PLACEMENT
	w RESULT_SLOT_X_PLACEMENT
	v SLOT_Y_PLACEMENT
	x level
	y selectedRecipe
	z recipes
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	l ()Lccg; createInputSlotDefinitions
	a (Ldcb;)Z isValidBlock
	a (Lbyo;Z)Z mayPickup
	a (Lbyo;Lcfz;)V onTake
	n ()Ljava/util/List; getRelevantItems
	e (I)V shrinkStackInSlot
	m ()V createResult
	d (Lcfz;)I getSlotToQuickMoveTo
	a (Lcjp;Lcfz;)Ljava/util/Optional; findSlotMatchingIngredient
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	c (Lcfz;)Z canMoveIntoInputSlots
	a (Lcfz;Lcjp;)Ljava/util/Optional; lambda$canMoveIntoInputSlots$8
	b (Lcfz;Lcjp;)Ljava/util/Optional; lambda$getSlotToQuickMoveTo$7
	a (Lcmm;Lgu;)V lambda$onTake$6
	e (Lcfz;)Z lambda$createInputSlotDefinitions$5
	c (Lcfz;Lcjp;)Z lambda$createInputSlotDefinitions$4
	f (Lcfz;)Z lambda$createInputSlotDefinitions$3
	d (Lcfz;Lcjp;)Z lambda$createInputSlotDefinitions$2
	g (Lcfz;)Z lambda$createInputSlotDefinitions$1
	e (Lcfz;Lcjp;)Z lambda$createInputSlotDefinitions$0
ccz net/minecraft/world/inventory/SmokerMenu
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lbdq;Lcbp;)V <init>
cda net/minecraft/world/inventory/StackedContentsCompatible
	a (Lbys;)V fillStackedContents
cdb net/minecraft/world/inventory/StonecutterMenu
	k INPUT_SLOT
	l RESULT_SLOT
	p INV_SLOT_START
	q INV_SLOT_END
	r USE_ROW_SLOT_START
	s USE_ROW_SLOT_END
	t access
	u selectedRecipeIndex
	v level
	w recipes
	x input
	y lastSoundTime
	m inputSlot
	n resultSlot
	z slotUpdateListener
	o container
	A resultContainer
	<init> (ILbyn;)V <init>
	<init> (ILbyn;Lcbq;)V <init>
	l ()I getSelectedRecipeIndex
	m ()Ljava/util/List; getRecipes
	n ()I getNumRecipes
	o ()Z hasInputItem
	a (Lbyo;)Z stillValid
	b (Lbyo;I)Z clickMenuButton
	e (I)Z isValidRecipeIndex
	a (Lbdq;)V slotsChanged
	a (Lbdq;Lcfz;)V setupRecipeList
	p ()V setupResultSlot
	a ()Lcck; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lcfz;Lccx;)Z canTakeItemForPickAll
	a (Lbyo;I)Lcfz; quickMoveStack
	b (Lbyo;)V removed
	a (Lbyo;Lcmm;Lgu;)V lambda$removed$1
	q ()V lambda$new$0
cdb$1 net/minecraft/world/inventory/StonecutterMenu$1
	c this$0
	<init> (Lcdb;I)V <init>
	e ()V setChanged
cdb$2 net/minecraft/world/inventory/StonecutterMenu$2
	a val$access
	b this$0
	<init> (Lcdb;Lbdq;IIILcbq;)V <init>
	a (Lcfz;)Z mayPlace
	a (Lbyo;Lcfz;)V onTake
	i ()Ljava/util/List; getRelevantItems
	a (Lcmm;Lgu;)V lambda$onTake$0
cdc net/minecraft/world/inventory/TransientCraftingContainer
	c items
	d width
	e height
	f menu
	<init> (Lcbf;II)V <init>
	<init> (Lcbf;IILhn;)V <init>
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	b (I)Lcfz; removeItemNoUpdate
	a (II)Lcfz; removeItem
	a (ILcfz;)V setItem
	e ()V setChanged
	a (Lbyo;)Z stillValid
	a ()V clearContent
	g ()I getHeight
	f ()I getWidth
	h ()Ljava/util/List; getItems
	a (Lbys;)V fillStackedContents
cdd net/minecraft/world/inventory/package-info
cde net/minecraft/world/inventory/tooltip/BundleTooltip
	a items
	b weight
	<init> (Lhn;I)V <init>
	a ()Lhn; getItems
	b ()I getWeight
cdf net/minecraft/world/inventory/tooltip/TooltipComponent
cdg net/minecraft/world/inventory/tooltip/package-info
cdh net/minecraft/world/item/AdventureModeCheck
	a tagName
	b lastCheckedBlock
	c lastResult
	d checksBlockEntity
	<init> (Ljava/lang/String;)V <init>
	a (Ldcf;Ldcf;Z)Z areSameBlocks
	a (Lcfz;Lhr;Ldcf;)Z test
cdi net/minecraft/world/item/AirItem
	a block
	<init> (Lcpn;Lcfu$a;)V <init>
	a ()Ljava/lang/String; getDescriptionId
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
cdj net/minecraft/world/item/ArmorItem
	e ARMOR_MODIFIER_UUID_PER_TYPE
	a DISPENSE_ITEM_BEHAVIOR
	b type
	f defense
	g toughness
	c knockbackResistance
	d material
	h defaultModifiers
	a (Lgv;Lcfz;)Z dispenseArmor
	<init> (Lcdk;Lcdj$a;Lcfu$a;)V <init>
	b ()Lcdj$a; getType
	c ()I getEnchantmentValue
	d ()Lcdk; getMaterial
	a (Lcfz;Lcfz;)Z isValidRepairItem
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lbfo;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	e ()I getDefense
	f ()F getToughness
	g ()Lbfo; getEquipmentSlot
	ak_ ()Lamg; getEquipSound
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
cdj$1 net/minecraft/world/item/ArmorItem$1
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
cdj$a net/minecraft/world/item/ArmorItem$Type
	a HELMET
	b CHESTPLATE
	c LEGGINGS
	d BOOTS
	e slot
	f name
	g $VALUES
	values ()[Lcdj$a; values
	valueOf (Ljava/lang/String;)Lcdj$a; valueOf
	<init> (Ljava/lang/String;ILbfo;Ljava/lang/String;)V <init>
	a ()Lbfo; getSlot
	b ()Ljava/lang/String; getName
	c ()[Lcdj$a; $values
	<clinit> ()V <clinit>
cdk net/minecraft/world/item/ArmorMaterial
	a (Lcdj$a;)I getDurabilityForType
	b (Lcdj$a;)I getDefenseForType
	a ()I getEnchantmentValue
	b ()Lamg; getEquipSound
	d ()Lciz; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
cdl net/minecraft/world/item/ArmorMaterials
	a LEATHER
	b CHAIN
	c IRON
	d GOLD
	e DIAMOND
	f TURTLE
	g NETHERITE
	h CODEC
	i HEALTH_FUNCTION_FOR_TYPE
	j name
	k durabilityMultiplier
	l protectionFunctionForType
	m enchantmentValue
	n sound
	o toughness
	p knockbackResistance
	q repairIngredient
	r $VALUES
	values ()[Lcdl; values
	valueOf (Ljava/lang/String;)Lcdl; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;ILjava/util/EnumMap;ILamg;FFLjava/util/function/Supplier;)V <init>
	a (Lcdj$a;)I getDurabilityForType
	b (Lcdj$a;)I getDefenseForType
	a ()I getEnchantmentValue
	b ()Lamg; getEquipSound
	d ()Lciz; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
	c ()Ljava/lang/String; getSerializedName
	a (Ljava/util/EnumMap;)V lambda$static$14
	h ()Lciz; lambda$static$13
	b (Ljava/util/EnumMap;)V lambda$static$12
	i ()Lciz; lambda$static$11
	c (Ljava/util/EnumMap;)V lambda$static$10
	j ()Lciz; lambda$static$9
	d (Ljava/util/EnumMap;)V lambda$static$8
	k ()Lciz; lambda$static$7
	e (Ljava/util/EnumMap;)V lambda$static$6
	l ()Lciz; lambda$static$5
	f (Ljava/util/EnumMap;)V lambda$static$4
	m ()Lciz; lambda$static$3
	g (Ljava/util/EnumMap;)V lambda$static$2
	n ()Lciz; lambda$static$1
	h (Ljava/util/EnumMap;)V lambda$static$0
	o ()[Lcdl; $values
	<clinit> ()V <clinit>
cdm net/minecraft/world/item/ArmorStandItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
cdn net/minecraft/world/item/ArrowItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lcfz;Lbfz;)Lbyu; createArrow
cdo net/minecraft/world/item/AxeItem
	a STRIPPABLES
	<init> (Lchm;FFLcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	b (Ldcb;)Ljava/util/Optional; getStripped
	a (Ldcb;Lcpn;)Ldcb; lambda$getStripped$2
	a (Lcij;Lbyo;)V lambda$useOn$1
	b (Ldcb;Lcpn;)Ldcb; lambda$useOn$0
	<clinit> ()V <clinit>
cdp net/minecraft/world/item/BannerItem
	c PATTERN_PREFIX
	<init> (Lcpn;Lcpn;Lcfu$a;)V <init>
	a (Lcfz;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	b ()Lcen; getColor
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Ljava/util/List;Lcen;Ljava/lang/String;)V lambda$appendHoverTextFromBannerBlockEntityTag$1
	a (Lacp;)Ljava/lang/String; lambda$appendHoverTextFromBannerBlockEntityTag$0
cdq net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	<init> (Lanl;Lcfu$a;)V <init>
	b ()Lanl; getBannerPattern
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	d ()Ltj; getDisplayName
cdr net/minecraft/world/item/BedItem
	<init> (Lcpn;Lcfu$a;)V <init>
	a (Lcih;Ldcb;)Z placeBlock
cds net/minecraft/world/item/BlockItem
	a BLOCK_ENTITY_TAG
	b BLOCK_STATE_TAG
	c block
	<init> (Lcpn;Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcih;)Lbdx; place
	a (Ldcb;)Lamg; getPlaceSound
	b (Lcih;)Lcih; updatePlacementContext
	a (Lgu;Lcmm;Lbyo;Lcfz;Ldcb;)Z updateCustomBlockEntityTag
	c (Lcih;)Ldcb; getPlacementState
	a (Lgu;Lcmm;Lcfz;Ldcb;)Ldcb; updateBlockStateFromTag
	a (Ldcb;Ldde;Ljava/lang/String;)Ldcb; updateState
	b (Lcih;Ldcb;)Z canPlace
	d ()Z mustSurvive
	a (Lcih;Ldcb;)Z placeBlock
	a (Lcmm;Lbyo;Lgu;Lcfz;)Z updateCustomBlockEntityTag
	a ()Ljava/lang/String; getDescriptionId
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	e ()Lcpn; getBlock
	a (Ljava/util/Map;Lcfu;)V registerBlocks
	ah_ ()Z canFitInsideContainerItems
	a (Lbvh;)V onDestroyed
	a (Lcfz;)Lqr; getBlockEntityData
	a (Lcfz;Lczp;Lqr;)V setBlockEntityData
	m ()Lcaw; requiredFeatures
	a (Ldcb;Ldde;Ljava/lang/Comparable;)Ldcb; lambda$updateState$0
cdt net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	c hasChest
	<init> (ZLcah$b;Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcmm;Leeg;)Lcah; getBoat
	<clinit> ()V <clinit>
cdu net/minecraft/world/item/BoneMealItem
	a GRASS_SPREAD_WIDTH
	b GRASS_SPREAD_HEIGHT
	c GRASS_COUNT_MULTIPLIER
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcfz;Lcmm;Lgu;)Z growCrop
	a (Lcfz;Lcmm;Lgu;Lha;)Z growWaterPlant
	a (Lcmn;Lgu;I)V addGrowthParticles
	a (Ldca$a;)Z lambda$growWaterPlant$4
	a (Lhe;)Ldcb; lambda$growWaterPlant$3
	a (Lcmm;Lhi$c;)Ljava/util/Optional; lambda$growWaterPlant$2
	b (Lhe;)Ldcb; lambda$growWaterPlant$1
	b (Lcmm;Lhi$c;)Ljava/util/Optional; lambda$growWaterPlant$0
cdv net/minecraft/world/item/BookItem
	<init> (Lcfu$a;)V <init>
	d_ (Lcfz;)Z isEnchantable
	c ()I getEnchantmentValue
cdw net/minecraft/world/item/BottleItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lbyo;Lcfz;)Lcfz; turnBottleIntoItem
	a (Lbfg;)Z lambda$use$0
cdx net/minecraft/world/item/BowItem
	a MAX_DRAW_DURATION
	b DEFAULT_RANGE
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Lbfz;I)V releaseUsing
	a (I)F getPowerForTime
	b (Lcfz;)I getUseDuration
	c (Lcfz;)Lchs; getUseAnimation
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	d ()I getDefaultProjectileRange
	a (Lbyo;Lbyo;)V lambda$releaseUsing$0
cdy net/minecraft/world/item/BowlFoodItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
cdz net/minecraft/world/item/BrushItem
	a ANIMATION_DURATION
	b USE_DURATION
	c MAX_BRUSH_DISTANCE
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	c (Lcfz;)Lchs; getUseAnimation
	b (Lcfz;)I getUseDuration
	a (Lcmm;Lbfz;Lcfz;I)V onUseTick
	a (Lbfz;)Leeg; calculateHitResult
	a (Lcmm;Leee;Ldcb;Leei;Lbft;)V spawnDustParticles
	a (Lbfj;)Z lambda$calculateHitResult$1
	a (Lbfo;Lbfz;)V lambda$onUseTick$0
	<clinit> ()V <clinit>
cdz$1 net/minecraft/world/item/BrushItem$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cdz$a net/minecraft/world/item/BrushItem$DustParticlesDelta
	a xd
	b yd
	c zd
	d ALONG_SIDE_DELTA
	e OUT_FROM_SIDE_DELTA
	<init> (DDD)V <init>
	a (Leei;Lha;)Lcdz$a; fromDirection
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()D xd
	b ()D yd
	c ()D zd
cea net/minecraft/world/item/BucketItem
	a content
	<init> (Ldxd;Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lbyo;)Lcfz; getEmptySuccessItem
	a (Lbyo;Lcmm;Lcfz;Lgu;)V checkExtraContent
	a (Lbyo;Lcmm;Lgu;Leee;)Z emptyContents
	a (Lbyo;Lcmn;Lgu;)V playEmptySound
	a (Lbyo;Lamg;)V lambda$use$0
ceb net/minecraft/world/item/BundleItem
	b TAG_ITEMS
	a MAX_WEIGHT
	c BUNDLE_IN_BUNDLE_WEIGHT
	d BAR_COLOR
	<init> (Lcfu$a;)V <init>
	d (Lcfz;)F getFullnessDisplay
	a (Lcfz;Lccx;Lcbn;Lbyo;)Z overrideStackedOnOther
	a (Lcfz;Lcfz;Lccx;Lcbn;Lbyo;Lbgs;)Z overrideOtherStackedOnMe
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	e (Lcfz;)Z isBarVisible
	f (Lcfz;)I getBarWidth
	g (Lcfz;)I getBarColor
	b (Lcfz;Lcfz;)I add
	a (Lcfz;Lqx;)Ljava/util/Optional; getMatchingItem
	k (Lcfz;)I getWeight
	o (Lcfz;)I getContentWeight
	p (Lcfz;)Ljava/util/Optional; removeOne
	a (Lcfz;Lbyo;)Z dropContents
	q (Lcfz;)Ljava/util/stream/Stream; getContents
	h (Lcfz;)Ljava/util/Optional; getTooltipImage
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lbvh;)V onDestroyed
	a (Lbfj;)V playRemoveOneSound
	b (Lbfj;)V playInsertSound
	c (Lbfj;)V playDropContentsSound
	r (Lcfz;)I lambda$getContentWeight$3
	a (Lcfz;Lqr;)Z lambda$getMatchingItem$2
	a (Lbyo;Lbgs;Lcfz;)V lambda$overrideOtherStackedOnMe$1
	a (Lcfz;Lccx;Lcfz;)V lambda$overrideStackedOnOther$0
	<clinit> ()V <clinit>
cec net/minecraft/world/item/ChorusFruitItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
ced net/minecraft/world/item/CompassItem
	d LOGGER
	a TAG_LODESTONE_POS
	b TAG_LODESTONE_DIMENSION
	c TAG_LODESTONE_TRACKED
	<init> (Lcfu$a;)V <init>
	d (Lcfz;)Z isLodestoneCompass
	c (Lqr;)Ljava/util/Optional; getLodestoneDimension
	a (Lqr;)Lhd; getLodestonePosition
	a (Lcmm;)Lhd; getSpawnPosition
	i (Lcfz;)Z isFoil
	a (Lcfz;Lcmm;Lbfj;IZ)V inventoryTick
	a (Lcij;)Lbdx; useOn
	a (Lacp;Lgu;Lqr;)V addLodestoneTags
	j (Lcfz;)Ljava/lang/String; getDescriptionId
	a (Lqr;Lrk;)V lambda$addLodestoneTags$0
	<clinit> ()V <clinit>
cee net/minecraft/world/item/ComplexItem
	<init> (Lcfu$a;)V <init>
	ad_ ()Z isComplex
	a (Lcfz;Lcmm;Lbyo;)Luo; getUpdatePacket
cef net/minecraft/world/item/CreativeModeTab
	a displayName
	b backgroundSuffix
	c canScroll
	d showTitle
	e alignedRight
	f row
	g column
	h type
	i iconItemStack
	j displayItems
	k displayItemsSearchTab
	l searchTreeBuilder
	m iconGenerator
	n displayItemsGenerator
	<init> (Lcef$f;ILcef$h;Lsw;Ljava/util/function/Supplier;Lcef$b;)V <init>
	a (Lcef$f;I)Lcef$a; builder
	a ()Lsw; getDisplayName
	b ()Lcfz; getIconItem
	c ()Ljava/lang/String; getBackgroundSuffix
	d ()Z showTitle
	e ()Z canScroll
	f ()I column
	g ()Lcef$f; row
	h ()Z hasAnyItems
	i ()Z shouldDisplay
	j ()Z isAlignedRight
	k ()Lcef$h; getType
	a (Lcef$d;)V buildContents
	l ()Ljava/util/Collection; getDisplayItems
	m ()Ljava/util/Collection; getSearchTabDisplayItems
	a (Lcfz;)Z contains
	a (Ljava/util/function/Consumer;)V setSearchTreeBuilder
	n ()V rebuildSearchTree
	o ()Ljava/lang/IllegalStateException; lambda$buildContents$0
cef$1 net/minecraft/world/item/CreativeModeTab$1
	a $SwitchMap$net$minecraft$world$item$CreativeModeTab$TabVisibility
	<clinit> ()V <clinit>
cef$a net/minecraft/world/item/CreativeModeTab$Builder
	a EMPTY_GENERATOR
	b row
	c column
	d displayName
	e iconGenerator
	f displayItemsGenerator
	g canScroll
	h showTitle
	i alignedRight
	j type
	k backgroundSuffix
	<init> (Lcef$f;I)V <init>
	a (Lsw;)Lcef$a; title
	a (Ljava/util/function/Supplier;)Lcef$a; icon
	a (Lcef$b;)Lcef$a; displayItems
	a ()Lcef$a; alignedRight
	b ()Lcef$a; hideTitle
	c ()Lcef$a; noScrollBar
	a (Lcef$h;)Lcef$a; type
	a (Ljava/lang/String;)Lcef$a; backgroundSuffix
	d ()Lcef; build
	e ()Lcfz; lambda$new$1
	a (Lcef$d;Lcef$e;)V lambda$static$0
	<clinit> ()V <clinit>
cef$b net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
	accept (Lcef$d;Lcef$e;)V accept
cef$c net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	a tabContents
	b searchTabContents
	c tab
	d featureFlagSet
	<init> (Lcef;Lcaw;)V <init>
	a (Lcfz;Lcef$g;)V accept
cef$d net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	a enabledFeatures
	b hasPermissions
	c holders
	<init> (Lcaw;ZLhg$b;)V <init>
	a (Lcaw;ZLhg$b;)Z needsUpdate
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcaw; enabledFeatures
	b ()Z hasPermissions
	c ()Lhg$b; holders
cef$e net/minecraft/world/item/CreativeModeTab$Output
	a (Lcfz;Lcef$g;)V accept
	a (Lcfz;)V accept
	a (Lcml;Lcef$g;)V accept
	a (Lcml;)V accept
	a (Ljava/util/Collection;Lcef$g;)V acceptAll
	a (Ljava/util/Collection;)V acceptAll
	a (Lcef$g;Lcfz;)V lambda$acceptAll$0
cef$f net/minecraft/world/item/CreativeModeTab$Row
	a TOP
	b BOTTOM
	c $VALUES
	values ()[Lcef$f; values
	valueOf (Ljava/lang/String;)Lcef$f; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcef$f; $values
	<clinit> ()V <clinit>
cef$g net/minecraft/world/item/CreativeModeTab$TabVisibility
	a PARENT_AND_SEARCH_TABS
	b PARENT_TAB_ONLY
	c SEARCH_TAB_ONLY
	d $VALUES
	values ()[Lcef$g; values
	valueOf (Ljava/lang/String;)Lcef$g; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcef$g; $values
	<clinit> ()V <clinit>
cef$h net/minecraft/world/item/CreativeModeTab$Type
	a CATEGORY
	b INVENTORY
	c HOTBAR
	d SEARCH
	e $VALUES
	values ()[Lcef$h; values
	valueOf (Ljava/lang/String;)Lcef$h; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcef$h; $values
	<clinit> ()V <clinit>
ceg net/minecraft/world/item/CreativeModeTabs
	a BUILDING_BLOCKS
	b COLORED_BLOCKS
	c NATURAL_BLOCKS
	d FUNCTIONAL_BLOCKS
	e REDSTONE_BLOCKS
	f HOTBAR
	g SEARCH
	h TOOLS_AND_UTILITIES
	i COMBAT
	j FOOD_AND_DRINKS
	k INGREDIENTS
	l SPAWN_EGGS
	m OP_BLOCKS
	n INVENTORY
	o PAINTING_COMPARATOR
	p CACHED_PARAMETERS
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lhr;)Lcef; bootstrap
	a ()V validate
	b ()Lcef; getDefaultTab
	a (Lcef$e;Lhg;Lcfu;Lcef$g;)V generatePotionEffectTypes
	a (Lcef$e;Lhg;Ljava/util/Set;Lcef$g;)V generateEnchantmentBookTypesOnlyMaxLevel
	b (Lcef$e;Lhg;Ljava/util/Set;Lcef$g;)V generateEnchantmentBookTypesAllLevels
	a (Lcef$e;Lhg;Lcfu;Lanl;Lcef$g;)V generateInstrumentTypes
	a (Lcef$e;Lcef$g;)V generateSuspiciousStews
	b (Lcef$e;Lcef$g;)V generateFireworksAllDurations
	a (Lcef$e;Lhg$c;Ljava/util/function/Predicate;Lcef$g;)V generatePresetPaintings
	c ()Ljava/util/List; tabs
	d ()Ljava/util/List; allTabs
	f ()Ljava/util/stream/Stream; streamAllTabs
	e ()Lcef; searchTab
	a (Lcef$d;)V buildAllTabContents
	a (Lcaw;ZLhg$b;)Z tryRebuildTabContents
	a (Lcef$d;Lcef;)V lambda$buildAllTabContents$52
	a (Lcef;)Z lambda$buildAllTabContents$51
	b (Lcef$d;Lcef;)V lambda$buildAllTabContents$50
	b (Lcef;)Z lambda$buildAllTabContents$49
	a (Lcef$e;Lcef$g;Lhe$c;)V lambda$generatePresetPaintings$48
	a (Lcfu;Lcef$e;Lcef$g;Lhi$c;)V lambda$generateInstrumentTypes$47
	a (Lcef$e;Lcef$g;Lcfz;)V lambda$generateInstrumentTypes$46
	a (Lcfu;Lhe;)Lcfz; lambda$generateInstrumentTypes$45
	b (Lcef$e;Lcef$g;Lcfz;)V lambda$generateEnchantmentBookTypesAllLevels$44
	a (Lckg;)Ljava/util/stream/Stream; lambda$generateEnchantmentBookTypesAllLevels$43
	a (Lckg;I)Lcfz; lambda$generateEnchantmentBookTypesAllLevels$42
	a (Ljava/util/Set;Lckg;)Z lambda$generateEnchantmentBookTypesAllLevels$41
	c (Lcef$e;Lcef$g;Lcfz;)V lambda$generateEnchantmentBookTypesOnlyMaxLevel$40
	b (Lckg;)Lcfz; lambda$generateEnchantmentBookTypesOnlyMaxLevel$39
	b (Ljava/util/Set;Lckg;)Z lambda$generateEnchantmentBookTypesOnlyMaxLevel$38
	d (Lcef$e;Lcef$g;Lcfz;)V lambda$generatePotionEffectTypes$37
	a (Lcfu;Lhe$c;)Lcfz; lambda$generatePotionEffectTypes$36
	a (Lhe$c;)Z lambda$generatePotionEffectTypes$35
	a (Lbvd;)I lambda$static$34
	g ()Lcfz; lambda$bootstrap$33
	a (Lcef$d;Lcef$e;)V lambda$bootstrap$32
	a (Lcef$e;Lhg$c;)V lambda$bootstrap$31
	a (Lhe;)Z lambda$bootstrap$30
	h ()Lcfz; lambda$bootstrap$29
	b (Lcef$d;Lcef$e;)V lambda$bootstrap$28
	i ()Lcfz; lambda$bootstrap$27
	c (Lcef$d;Lcef$e;)V lambda$bootstrap$26
	a (Lcef$e;Ljava/util/Set;Lhg$c;)V lambda$bootstrap$25
	j ()Lcfz; lambda$bootstrap$24
	d (Lcef$d;Lcef$e;)V lambda$bootstrap$23
	b (Lcef$e;Lhg$c;)V lambda$bootstrap$22
	k ()Lcfz; lambda$bootstrap$21
	e (Lcef$d;Lcef$e;)V lambda$bootstrap$20
	c (Lcef$e;Lhg$c;)V lambda$bootstrap$19
	l ()Lcfz; lambda$bootstrap$18
	f (Lcef$d;Lcef$e;)V lambda$bootstrap$17
	d (Lcef$e;Lhg$c;)V lambda$bootstrap$16
	m ()Lcfz; lambda$bootstrap$15
	a (Lhr;Lcef$d;Lcef$e;)V lambda$bootstrap$14
	n ()Lcfz; lambda$bootstrap$13
	o ()Lcfz; lambda$bootstrap$12
	g (Lcef$d;Lcef$e;)V lambda$bootstrap$11
	p ()Lcfz; lambda$bootstrap$10
	h (Lcef$d;Lcef$e;)V lambda$bootstrap$9
	e (Lcef$e;Lhg$c;)V lambda$bootstrap$8
	b (Lhe;)Z lambda$bootstrap$7
	q ()Lcfz; lambda$bootstrap$6
	i (Lcef$d;Lcef$e;)V lambda$bootstrap$5
	r ()Lcfz; lambda$bootstrap$4
	j (Lcef$d;Lcef$e;)V lambda$bootstrap$3
	s ()Lcfz; lambda$bootstrap$2
	k (Lcef$d;Lcef$e;)V lambda$bootstrap$1
	t ()Lcfz; lambda$bootstrap$0
	<clinit> ()V <clinit>
ceh net/minecraft/world/item/CrossbowItem
	b TAG_CHARGED
	e TAG_CHARGED_PROJECTILES
	f MAX_CHARGE_DURATION
	a DEFAULT_RANGE
	g startSoundPlayed
	h midLoadSoundPlayed
	i START_SOUND_PERCENT
	j MID_SOUND_PERCENT
	k ARROW_POWER
	r FIREWORK_POWER
	<init> (Lcfu$a;)V <init>
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	o (Lcfz;)F getShootingPower
	a (Lcfz;Lcmm;Lbfz;I)V releaseUsing
	a (Lbfz;Lcfz;)Z tryLoadProjectiles
	a (Lbfz;Lcfz;Lcfz;ZZ)Z loadProjectile
	d (Lcfz;)Z isCharged
	a (Lcfz;Z)V setCharged
	b (Lcfz;Lcfz;)V addChargedProjectile
	p (Lcfz;)Ljava/util/List; getChargedProjectiles
	q (Lcfz;)V clearChargedProjectiles
	a (Lcfz;Lcfu;)Z containsChargedProjectile
	a (Lcmm;Lbfz;Lbdw;Lcfz;Lcfz;FZFFF)V shootProjectile
	a (Lcmm;Lbfz;Lcfz;Lcfz;)Lbyu; getArrow
	a (Lcmm;Lbfz;Lbdw;Lcfz;FF)V performShooting
	a (Lapf;)[F getShotPitches
	a (ZLapf;)F getRandomShotPitch
	a (Lcmm;Lbfz;Lcfz;)V onCrossbowShot
	a (Lcmm;Lbfz;Lcfz;I)V onUseTick
	b (Lcfz;)I getUseDuration
	k (Lcfz;)I getChargeDuration
	c (Lcfz;)Lchs; getUseAnimation
	a (I)Lamg; getStartSound
	a (ILcfz;)F getPowerForTime
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	l (Lcfz;)Z useOnRelease
	d ()I getDefaultProjectileRange
	a (Lbdw;Lbfz;)V lambda$shootProjectile$1
	a (Lcfu;Lcfz;)Z lambda$containsChargedProjectile$0
cei net/minecraft/world/item/DebugStickItem
	<init> (Lcfu$a;)V <init>
	i (Lcfz;)Z isFoil
	a (Ldcb;Lcmm;Lgu;Lbyo;)Z canAttackBlock
	a (Lcij;)Lbdx; useOn
	a (Lbyo;Ldcb;Lcmn;Lgu;ZLcfz;)Z handleInteraction
	a (Ldcb;Ldde;Z)Ldcb; cycleState
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lbyo;Lsw;)V message
	a (Ldcb;Ldde;)Ljava/lang/String; getNameHelper
cej net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamageBaseline
	d defaultModifiers
	<init> (FFLchm;Lanl;Lcfu$a;)V <init>
	a (Lcfz;Ldcb;)F getDestroySpeed
	a (Lcfz;Lbfz;Lbfz;)Z hurtEnemy
	a (Lcfz;Lcmm;Ldcb;Lgu;Lbfz;)Z mineBlock
	a (Lbfo;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	d ()F getAttackDamage
	a_ (Ldcb;)Z isCorrectToolForDrops
	a (Lbfz;)V lambda$mineBlock$1
	b (Lbfz;)V lambda$hurtEnemy$0
cek net/minecraft/world/item/DiscFragmentItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	d ()Ltj; getDisplayName
cel net/minecraft/world/item/DispensibleContainerItem
	a (Lbyo;Lcmm;Lcfz;Lgu;)V checkExtraContent
	a (Lbyo;Lcmm;Lgu;Leee;)Z emptyContents
cem net/minecraft/world/item/DoubleHighBlockItem
	<init> (Lcpn;Lcfu$a;)V <init>
	a (Lcih;Ldcb;)Z placeBlock
cen net/minecraft/world/item/DyeColor
	a WHITE
	b ORANGE
	c MAGENTA
	d LIGHT_BLUE
	e YELLOW
	f LIME
	g PINK
	h GRAY
	i LIGHT_GRAY
	j CYAN
	k PURPLE
	l BLUE
	m BROWN
	n GREEN
	o RED
	p BLACK
	r BY_ID
	s BY_FIREWORK_COLOR
	q CODEC
	t id
	u name
	v mapColor
	w textureDiffuseColors
	x fireworkColor
	y textColor
	z $VALUES
	values ()[Lcen; values
	valueOf (Ljava/lang/String;)Lcen; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;ILdxi;II)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	d ()[F getTextureDiffuseColors
	e ()Ldxi; getMapColor
	f ()I getFireworkColor
	g ()I getTextColor
	a (I)Lcen; byId
	a (Ljava/lang/String;Lcen;)Lcen; byName
	b (I)Lcen; byFireworkColor
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a (Lcen;)Lcen; lambda$static$1
	b (Lcen;)Ljava/lang/Integer; lambda$static$0
	h ()[Lcen; $values
	<clinit> ()V <clinit>
ceo net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	<init> (Lcen;Lcfu$a;)V <init>
	a (Lcfz;Lbyo;Lbfz;Lbdw;)Lbdx; interactLivingEntity
	d ()Lcen; getDyeColor
	a (Lcen;)Lceo; byColor
	a (Lcmm;Ldav;ZLbyo;)Z tryApplyToSign
	a (Ldaw;)Ldaw; lambda$tryApplyToSign$0
	<clinit> ()V <clinit>
cep net/minecraft/world/item/DyeableArmorItem
	<init> (Lcdk;Lcdj$a;Lcfu$a;)V <init>
ceq net/minecraft/world/item/DyeableHorseArmorItem
	<init> (ILjava/lang/String;Lcfu$a;)V <init>
cer net/minecraft/world/item/DyeableLeatherItem
	o_ TAG_COLOR
	p_ TAG_DISPLAY
	q_ DEFAULT_LEATHER_COLOR
	a (Lcfz;)Z hasCustomColor
	e_ (Lcfz;)I getColor
	f_ (Lcfz;)V clearColor
	a (Lcfz;I)V setColor
	a (Lcfz;Ljava/util/List;)Lcfz; dyeArmor
ces net/minecraft/world/item/EggItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cet net/minecraft/world/item/ElytraItem
	<init> (Lcfu$a;)V <init>
	d (Lcfz;)Z isFlyEnabled
	a (Lcfz;Lcfz;)Z isValidRepairItem
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	ak_ ()Lamg; getEquipSound
	g ()Lbfo; getEquipmentSlot
ceu net/minecraft/world/item/EmptyMapItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cev net/minecraft/world/item/EnchantedBookItem
	a TAG_STORED_ENCHANTMENTS
	<init> (Lcfu$a;)V <init>
	i (Lcfz;)Z isFoil
	d_ (Lcfz;)Z isEnchantable
	d (Lcfz;)Lqx; getEnchantments
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcfz;Lckj;)V addEnchantment
	a (Lckj;)Lcfz; createForEnchantment
cew net/minecraft/world/item/EnchantedGoldenAppleItem
	<init> (Lcfu$a;)V <init>
	i (Lcfz;)Z isFoil
cex net/minecraft/world/item/EndCrystalItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	i (Lcfz;)Z isFoil
cey net/minecraft/world/item/EnderEyeItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cez net/minecraft/world/item/EnderpearlItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cfa net/minecraft/world/item/Equipable
	g ()Lbfo; getEquipmentSlot
	ak_ ()Lamg; getEquipSound
	a (Lcfu;Lcmm;Lbyo;Lbdw;)Lbdy; swapWithEquipmentSlot
	c_ (Lcfz;)Lcfa; get
cfb net/minecraft/world/item/ExperienceBottleItem
	<init> (Lcfu$a;)V <init>
	i (Lcfz;)Z isFoil
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cfc net/minecraft/world/item/FireChargeItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lgu;)V playSound
cfd net/minecraft/world/item/FireworkRocketItem
	a CRAFTABLE_DURATIONS
	b TAG_FIREWORKS
	c TAG_EXPLOSION
	d TAG_EXPLOSIONS
	e TAG_FLIGHT
	f TAG_EXPLOSION_TYPE
	g TAG_EXPLOSION_TRAIL
	h TAG_EXPLOSION_FLICKER
	i TAG_EXPLOSION_COLORS
	j TAG_EXPLOSION_FADECOLORS
	k ROCKET_PLACEMENT_OFFSET
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcfz;B)V setDuration
	ae_ ()Lcfz; getDefaultInstance
	<clinit> ()V <clinit>
cfd$a net/minecraft/world/item/FireworkRocketItem$Shape
	a SMALL_BALL
	b LARGE_BALL
	c STAR
	d CREEPER
	e BURST
	f BY_ID
	g id
	h name
	i $VALUES
	values ()[Lcfd$a; values
	valueOf (Ljava/lang/String;)Lcfd$a; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	a (I)Lcfd$a; byId
	c ()[Lcfd$a; $values
	<clinit> ()V <clinit>
cfe net/minecraft/world/item/FireworkStarItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lqr;Ljava/util/List;)V appendHoverText
	a (Ltj;[I)Lsw; appendColors
	a (I)Lsw; getColorName
cff net/minecraft/world/item/FishingRodItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	c ()I getEnchantmentValue
	a (Lbdw;Lbyo;)V lambda$use$0
cfg net/minecraft/world/item/FlintAndSteelItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcij;Lbyo;)V lambda$useOn$1
	b (Lcij;Lbyo;)V lambda$useOn$0
cfh net/minecraft/world/item/FoodOnAStickItem
	a canInteractWith
	b consumeItemDamage
	<init> (Lcfu$a;Lbfn;I)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lbdw;Lbyo;)V lambda$use$0
cfi net/minecraft/world/item/GameMasterBlockItem
	<init> (Lcpn;Lcfu$a;)V <init>
	c (Lcih;)Ldcb; getPlacementState
cfj net/minecraft/world/item/GlowInkSacItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Ldav;ZLbyo;)Z tryApplyToSign
	a (Ldaw;)Ldaw; lambda$tryApplyToSign$0
cfk net/minecraft/world/item/HangingEntityItem
	a TOOLTIP_RANDOM_VARIANT
	b type
	<init> (Lbfn;Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lbyo;Lha;Lcfz;Lgu;)Z mayPlace
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Ljava/util/List;)V lambda$appendHoverText$2
	a (Ljava/util/List;Lhe;)V lambda$appendHoverText$1
	a (Ljava/util/List;Lacp;)V lambda$appendHoverText$0
	<clinit> ()V <clinit>
cfl net/minecraft/world/item/HangingSignItem
	<init> (Lcpn;Lcpn;Lcfu$a;)V <init>
	a (Lcmp;Ldcb;Lgu;)Z canPlace
cfm net/minecraft/world/item/HoeItem
	a TILLABLES
	<init> (Lchm;IFLcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	b (Ldcb;)Ljava/util/function/Consumer; changeIntoState
	a (Ldcb;Lcml;)Ljava/util/function/Consumer; changeIntoStateAndDropItem
	b (Lcij;)Z onlyIfAirAbove
	a (Ldcb;Lcml;Lcij;)V lambda$changeIntoStateAndDropItem$3
	a (Ldcb;Lcij;)V lambda$changeIntoState$2
	a (Lcij;Lbyo;)V lambda$useOn$1
	c (Lcij;)Z lambda$static$0
	<clinit> ()V <clinit>
cfn net/minecraft/world/item/HoneyBottleItem
	a DRINK_DURATION
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
	b (Lcfz;)I getUseDuration
	c (Lcfz;)Lchs; getUseAnimation
	af_ ()Lamg; getDrinkingSound
	ag_ ()Lamg; getEatingSound
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cfo net/minecraft/world/item/HoneycombItem
	a WAXABLES
	b WAX_OFF_BY_BLOCK
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	b (Ldcb;)Ljava/util/Optional; getWaxed
	a (Lcmm;Ldav;ZLbyo;)Z tryApplyToSign
	a (Ldaw;Lbyo;)Z canApplyToSign
	a (Ldcb;Lcpn;)Ldcb; lambda$getWaxed$3
	a (Lcij;Lgu;Lcmm;Ldcb;)Lbdx; lambda$useOn$2
	h ()Lcom/google/common/collect/BiMap; lambda$static$1
	i ()Lcom/google/common/collect/BiMap; lambda$static$0
	<clinit> ()V <clinit>
cfp net/minecraft/world/item/HorseArmorItem
	a TEX_FOLDER
	b protection
	c texture
	<init> (ILjava/lang/String;Lcfu$a;)V <init>
	h ()Lacq; getTexture
	i ()I getProtection
cfq net/minecraft/world/item/InkSacItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Ldav;ZLbyo;)Z tryApplyToSign
	a (Ldaw;)Ldaw; lambda$tryApplyToSign$0
cfr net/minecraft/world/item/Instrument
	b soundEvent
	c useDuration
	d range
	a CODEC
	<init> (Lhe;IF)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; soundEvent
	b ()I useDuration
	c ()F range
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cfs net/minecraft/world/item/InstrumentItem
	a TAG_INSTRUMENT
	b instruments
	<init> (Lcfu$a;Lanl;)V <init>
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcfu;Lhe;)Lcfz; create
	a (Lcfz;Lanl;Lapf;)V setRandom
	a (Lcfz;Lhe;)V setSoundVariantId
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	b (Lcfz;)I getUseDuration
	d (Lcfz;)Ljava/util/Optional; getInstrument
	c (Lcfz;)Lchs; getUseAnimation
	a (Lcmm;Lbyo;Lcfr;)V play
	a (Lhe;)Ljava/lang/Integer; lambda$getUseDuration$3
	h ()Ljava/lang/IllegalStateException; lambda$setSoundVariantId$2
	b (Lcfz;Lhe;)V lambda$setRandom$1
	a (Lapf;Lhi$c;)Ljava/util/Optional; lambda$setRandom$0
cft net/minecraft/world/item/Instruments
	a GOAT_HORN_RANGE_BLOCKS
	b GOAT_HORN_DURATION
	c PONDER_GOAT_HORN
	d SING_GOAT_HORN
	e SEEK_GOAT_HORN
	f FEEL_GOAT_HORN
	g ADMIRE_GOAT_HORN
	h CALL_GOAT_HORN
	i YEARN_GOAT_HORN
	j DREAM_GOAT_HORN
	a (Ljava/lang/String;)Lacp; create
	a (Lhr;)Lcfr; bootstrap
	<clinit> ()V <clinit>
cfu net/minecraft/world/item/Item
	a LOGGER
	l BY_BLOCK
	m BASE_ATTACK_DAMAGE_UUID
	n BASE_ATTACK_SPEED_UUID
	o MAX_STACK_SIZE
	p EAT_DURATION
	q MAX_BAR_WIDTH
	b builtInRegistryHolder
	c rarity
	d maxStackSize
	e maxDamage
	f isFireResistant
	g craftingRemainingItem
	h descriptionId
	i foodProperties
	j requiredFeatures
	a (Lcfu;)I getId
	b (I)Lcfu; byId
	a (Lcpn;)Lcfu; byBlock
	<init> (Lcfu$a;)V <init>
	j ()Lhe$c; builtInRegistryHolder
	a (Lcmm;Lbfz;Lcfz;I)V onUseTick
	a (Lbvh;)V onDestroyed
	b (Lqr;)V verifyTagAfterLoad
	a (Ldcb;Lcmm;Lgu;Lbyo;)Z canAttackBlock
	k ()Lcfu; asItem
	a (Lcij;)Lbdx; useOn
	a (Lcfz;Ldcb;)F getDestroySpeed
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
	l ()I getMaxStackSize
	n ()I getMaxDamage
	o ()Z canBeDepleted
	e (Lcfz;)Z isBarVisible
	f (Lcfz;)I getBarWidth
	g (Lcfz;)I getBarColor
	a (Lcfz;Lccx;Lcbn;Lbyo;)Z overrideStackedOnOther
	a (Lcfz;Lcfz;Lccx;Lcbn;Lbyo;Lbgs;)Z overrideOtherStackedOnMe
	a (Lcfz;Lbfz;Lbfz;)Z hurtEnemy
	a (Lcfz;Lcmm;Ldcb;Lgu;Lbfz;)Z mineBlock
	a_ (Ldcb;)Z isCorrectToolForDrops
	a (Lcfz;Lbyo;Lbfz;Lbdw;)Lbdx; interactLivingEntity
	p ()Lsw; getDescription
	toString ()Ljava/lang/String; toString
	q ()Ljava/lang/String; getOrCreateDescriptionId
	a ()Ljava/lang/String; getDescriptionId
	j (Lcfz;)Ljava/lang/String; getDescriptionId
	r ()Z shouldOverrideMultiplayerNbt
	s ()Lcfu; getCraftingRemainingItem
	t ()Z hasCraftingRemainingItem
	a (Lcfz;Lcmm;Lbfj;IZ)V inventoryTick
	b (Lcfz;Lcmm;Lbyo;)V onCraftedBy
	ad_ ()Z isComplex
	c (Lcfz;)Lchs; getUseAnimation
	b (Lcfz;)I getUseDuration
	a (Lcfz;Lcmm;Lbfz;I)V releaseUsing
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	h (Lcfz;)Ljava/util/Optional; getTooltipImage
	m (Lcfz;)Lsw; getName
	i (Lcfz;)Z isFoil
	n (Lcfz;)Lcgq; getRarity
	d_ (Lcfz;)Z isEnchantable
	a (Lcmm;Lbyo;Lclv$b;)Leee; getPlayerPOVHitResult
	c ()I getEnchantmentValue
	a (Lcfz;Lcfz;)Z isValidRepairItem
	a (Lbfo;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	l (Lcfz;)Z useOnRelease
	ae_ ()Lcfz; getDefaultInstance
	u ()Z isEdible
	v ()Lcbc; getFoodProperties
	af_ ()Lamg; getDrinkingSound
	ag_ ()Lamg; getEatingSound
	w ()Z isFireResistant
	a (Lben;)Z canBeHurtBy
	ah_ ()Z canFitInsideContainerItems
	m ()Lcaw; requiredFeatures
	<clinit> ()V <clinit>
cfu$1 net/minecraft/world/item/Item$1
	a $SwitchMap$net$minecraft$world$item$Rarity
	<clinit> ()V <clinit>
cfu$a net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d rarity
	e foodProperties
	f isFireResistant
	g requiredFeatures
	<init> ()V <init>
	a (Lcbc;)Lcfu$a; food
	a (I)Lcfu$a; stacksTo
	b (I)Lcfu$a; defaultDurability
	c (I)Lcfu$a; durability
	a (Lcfu;)Lcfu$a; craftRemainder
	a (Lcgq;)Lcfu$a; rarity
	a ()Lcfu$a; fireResistant
	a ([Lcau;)Lcfu$a; requiredFeatures
cfv net/minecraft/world/item/ItemCooldowns
	a cooldowns
	b tickCount
	<init> ()V <init>
	a (Lcfu;)Z isOnCooldown
	a (Lcfu;F)F getCooldownPercent
	a ()V tick
	a (Lcfu;I)V addCooldown
	b (Lcfu;)V removeCooldown
	b (Lcfu;I)V onCooldownStarted
	c (Lcfu;)V onCooldownEnded
cfv$a net/minecraft/world/item/ItemCooldowns$CooldownInstance
	a startTime
	b endTime
	<init> (II)V <init>
cfw net/minecraft/world/item/ItemDisplayContext
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j CODEC
	k BY_ID
	l id
	m name
	n $VALUES
	values ()[Lcfw; values
	valueOf (Ljava/lang/String;)Lcfw; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()B getId
	b ()Z firstPerson
	d ()[Lcfw; $values
	<clinit> ()V <clinit>
cfx net/minecraft/world/item/ItemFrameItem
	<init> (Lbfn;Lcfu$a;)V <init>
	a (Lbyo;Lha;Lcfz;Lgu;)Z mayPlace
cfy net/minecraft/world/item/ItemNameBlockItem
	<init> (Lcpn;Lcfu$a;)V <init>
	a ()Ljava/lang/String; getDescriptionId
cfz net/minecraft/world/item/ItemStack
	a CODEC
	j LOGGER
	b EMPTY
	c ATTRIBUTE_MODIFIER_FORMAT
	d TAG_ENCH
	e TAG_DISPLAY
	f TAG_DISPLAY_NAME
	g TAG_LORE
	h TAG_DAMAGE
	i TAG_COLOR
	k TAG_UNBREAKABLE
	l TAG_REPAIR_COST
	m TAG_CAN_DESTROY_BLOCK_LIST
	n TAG_CAN_PLACE_ON_BLOCK_LIST
	o TAG_HIDE_FLAGS
	p DISABLED_ITEM_TOOLTIP
	q DONT_HIDE_TOOLTIP
	r LORE_STYLE
	s count
	t popTime
	u item
	v tag
	w entityRepresentation
	x adventureBreakCheck
	y adventurePlaceCheck
	a ()Ljava/util/Optional; getTooltipImage
	<init> (Lcml;)V <init>
	<init> (Lhe;)V <init>
	<init> (Lcml;ILjava/util/Optional;)V <init>
	<init> (Lhe;I)V <init>
	<init> (Lcml;I)V <init>
	<init> (Ljava/lang/Void;)V <init>
	<init> (Lqr;)V <init>
	a (Lqr;)Lcfz; of
	b ()Z isEmpty
	a (Lcaw;)Z isItemEnabled
	a (I)Lcfz; split
	c ()Lcfz; copyAndClear
	d ()Lcfu; getItem
	e ()Lhe; getItemHolder
	a (Lanl;)Z is
	a (Lcfu;)Z is
	a (Ljava/util/function/Predicate;)Z is
	a (Lhe;)Z is
	f ()Ljava/util/stream/Stream; getTags
	a (Lcij;)Lbdx; useOn
	a (Ldcb;)F getDestroySpeed
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcmm;Lbfz;)Lcfz; finishUsingItem
	b (Lqr;)Lqr; save
	g ()I getMaxStackSize
	h ()Z isStackable
	i ()Z isDamageableItem
	j ()Z isDamaged
	k ()I getDamageValue
	b (I)V setDamageValue
	l ()I getMaxDamage
	a (ILapf;Laig;)Z hurt
	a (ILbfz;Ljava/util/function/Consumer;)V hurtAndBreak
	m ()Z isBarVisible
	n ()I getBarWidth
	o ()I getBarColor
	a (Lccx;Lcbn;Lbyo;)Z overrideStackedOnOther
	a (Lcfz;Lccx;Lcbn;Lbyo;Lbgs;)Z overrideOtherStackedOnMe
	a (Lbfz;Lbyo;)V hurtEnemy
	a (Lcmm;Ldcb;Lgu;Lbyo;)V mineBlock
	b (Ldcb;)Z isCorrectToolForDrops
	a (Lbyo;Lbfz;Lbdw;)Lbdx; interactLivingEntity
	p ()Lcfz; copy
	c (I)Lcfz; copyWithCount
	a (Lcfz;Lcfz;)Z matches
	b (Lcfz;Lcfz;)Z isSameItem
	c (Lcfz;Lcfz;)Z isSameItemSameTags
	q ()Ljava/lang/String; getDescriptionId
	toString ()Ljava/lang/String; toString
	a (Lcmm;Lbfj;IZ)V inventoryTick
	a (Lcmm;Lbyo;I)V onCraftedBy
	r ()I getUseDuration
	s ()Lchs; getUseAnimation
	a (Lcmm;Lbfz;I)V releaseUsing
	t ()Z useOnRelease
	u ()Z hasTag
	v ()Lqr; getTag
	w ()Lqr; getOrCreateTag
	a (Ljava/lang/String;)Lqr; getOrCreateTagElement
	b (Ljava/lang/String;)Lqr; getTagElement
	c (Ljava/lang/String;)V removeTagKey
	x ()Lqx; getEnchantmentTags
	c (Lqr;)V setTag
	y ()Lsw; getHoverName
	a (Lsw;)Lcfz; setHoverName
	z ()V resetHoverName
	A ()Z hasCustomHoverName
	a (Lbyo;Lchq;)Ljava/util/List; getTooltipLines
	a (ILcfz$a;)Z shouldShowInTooltip
	P ()I getHideFlags
	a (Lcfz$a;)V hideTooltipPart
	a (Ljava/util/List;Lqx;)V appendEnchantmentNames
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	B ()Z hasFoil
	C ()Lcgq; getRarity
	D ()Z isEnchantable
	a (Lckg;I)V enchant
	E ()Z isEnchanted
	a (Ljava/lang/String;Lrk;)V addTagElement
	F ()Z isFramed
	a (Lbfj;)V setEntityRepresentation
	G ()Lbva; getFrame
	H ()Lbfj; getEntityRepresentation
	I ()I getBaseRepairCost
	d (I)V setRepairCost
	a (Lbfo;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lbhb;Lbhe;Lbfo;)V addAttributeModifier
	J ()Lsw; getDisplayName
	a (Lhr;Ldcf;)Z hasAdventureModePlaceTagForBlock
	b (Lhr;Ldcf;)Z hasAdventureModeBreakTagForBlock
	K ()I getPopTime
	e (I)V setPopTime
	L ()I getCount
	f (I)V setCount
	g (I)V grow
	h (I)V shrink
	b (Lcmm;Lbfz;I)V onUseTick
	a (Lbvh;)V onDestroyed
	M ()Z isEdible
	N ()Lamg; getDrinkingSound
	O ()Lamg; getEatingSound
	a (Lts;)Lts; lambda$getDisplayName$7
	a (Lfg$b;)Ljava/util/List; lambda$expandBlockState$6
	b (Lhe;)Ltj; lambda$expandBlockState$5
	a (Lfg$a;)Ljava/util/List; lambda$expandBlockState$4
	a (Ljava/util/List;Lqr;Lckg;)V lambda$appendEnchantmentNames$3
	a (Ljava/text/DecimalFormat;)V lambda$static$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcfz;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
cfz$a net/minecraft/world/item/ItemStack$TooltipPart
	a ENCHANTMENTS
	b MODIFIERS
	c UNBREAKABLE
	d CAN_DESTROY
	e CAN_PLACE
	f ADDITIONAL
	g DYE
	h UPGRADES
	i mask
	j $VALUES
	values ()[Lcfz$a; values
	valueOf (Ljava/lang/String;)Lcfz$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()I getMask
	b ()[Lcfz$a; $values
	<clinit> ()V <clinit>
cga net/minecraft/world/item/ItemStackLinkedSet
	a TYPE_AND_TAG
	<init> ()V <init>
	a (Lcfz;)I hashStackAndTag
	a ()Ljava/util/Set; createTypeAndTagSet
	<clinit> ()V <clinit>
cga$1 net/minecraft/world/item/ItemStackLinkedSet$1
	<init> ()V <init>
	a (Lcfz;)I hashCode
	a (Lcfz;Lcfz;)Z equals
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	hashCode (Ljava/lang/Object;)I hashCode
cgb net/minecraft/world/item/ItemUtils
	<init> ()V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; startUsingInstantly
	a (Lcfz;Lbyo;Lcfz;Z)Lcfz; createFilledResult
	a (Lcfz;Lbyo;Lcfz;)Lcfz; createFilledResult
	a (Lbvh;Ljava/util/stream/Stream;)V onContainerDestroyed
	a (Lcmm;Lbvh;Lcfz;)V lambda$onContainerDestroyed$0
cgc net/minecraft/world/item/Items
	a AIR
	b STONE
	c GRANITE
	d POLISHED_GRANITE
	e DIORITE
	f POLISHED_DIORITE
	g ANDESITE
	h POLISHED_ANDESITE
	i DEEPSLATE
	j COBBLED_DEEPSLATE
	k POLISHED_DEEPSLATE
	l CALCITE
	m TUFF
	n DRIPSTONE_BLOCK
	o GRASS_BLOCK
	p DIRT
	q COARSE_DIRT
	r PODZOL
	s ROOTED_DIRT
	t MUD
	u CRIMSON_NYLIUM
	v WARPED_NYLIUM
	w COBBLESTONE
	x OAK_PLANKS
	y SPRUCE_PLANKS
	z BIRCH_PLANKS
	A JUNGLE_PLANKS
	B ACACIA_PLANKS
	C CHERRY_PLANKS
	D DARK_OAK_PLANKS
	E MANGROVE_PLANKS
	F BAMBOO_PLANKS
	G CRIMSON_PLANKS
	H WARPED_PLANKS
	I BAMBOO_MOSAIC
	J OAK_SAPLING
	K SPRUCE_SAPLING
	L BIRCH_SAPLING
	M JUNGLE_SAPLING
	N ACACIA_SAPLING
	O CHERRY_SAPLING
	P DARK_OAK_SAPLING
	Q MANGROVE_PROPAGULE
	R BEDROCK
	S SAND
	T SUSPICIOUS_SAND
	U SUSPICIOUS_GRAVEL
	V RED_SAND
	W GRAVEL
	X COAL_ORE
	Y DEEPSLATE_COAL_ORE
	Z IRON_ORE
	aa DEEPSLATE_IRON_ORE
	ab COPPER_ORE
	ac DEEPSLATE_COPPER_ORE
	ad GOLD_ORE
	ae DEEPSLATE_GOLD_ORE
	af REDSTONE_ORE
	ag DEEPSLATE_REDSTONE_ORE
	ah EMERALD_ORE
	ai DEEPSLATE_EMERALD_ORE
	aj LAPIS_ORE
	ak DEEPSLATE_LAPIS_ORE
	al DIAMOND_ORE
	am DEEPSLATE_DIAMOND_ORE
	an NETHER_GOLD_ORE
	ao NETHER_QUARTZ_ORE
	ap ANCIENT_DEBRIS
	aq COAL_BLOCK
	ar RAW_IRON_BLOCK
	as RAW_COPPER_BLOCK
	at RAW_GOLD_BLOCK
	au AMETHYST_BLOCK
	av BUDDING_AMETHYST
	aw IRON_BLOCK
	ax COPPER_BLOCK
	ay GOLD_BLOCK
	az DIAMOND_BLOCK
	aA NETHERITE_BLOCK
	aB EXPOSED_COPPER
	aC WEATHERED_COPPER
	aD OXIDIZED_COPPER
	aE CUT_COPPER
	aF EXPOSED_CUT_COPPER
	aG WEATHERED_CUT_COPPER
	aH OXIDIZED_CUT_COPPER
	aI CUT_COPPER_STAIRS
	aJ EXPOSED_CUT_COPPER_STAIRS
	aK WEATHERED_CUT_COPPER_STAIRS
	aL OXIDIZED_CUT_COPPER_STAIRS
	aM CUT_COPPER_SLAB
	aN EXPOSED_CUT_COPPER_SLAB
	aO WEATHERED_CUT_COPPER_SLAB
	aP OXIDIZED_CUT_COPPER_SLAB
	aQ WAXED_COPPER_BLOCK
	aR WAXED_EXPOSED_COPPER
	aS WAXED_WEATHERED_COPPER
	aT WAXED_OXIDIZED_COPPER
	aU WAXED_CUT_COPPER
	aV WAXED_EXPOSED_CUT_COPPER
	aW WAXED_WEATHERED_CUT_COPPER
	aX WAXED_OXIDIZED_CUT_COPPER
	aY WAXED_CUT_COPPER_STAIRS
	aZ WAXED_EXPOSED_CUT_COPPER_STAIRS
	ba WAXED_WEATHERED_CUT_COPPER_STAIRS
	bb WAXED_OXIDIZED_CUT_COPPER_STAIRS
	bc WAXED_CUT_COPPER_SLAB
	bd WAXED_EXPOSED_CUT_COPPER_SLAB
	be WAXED_WEATHERED_CUT_COPPER_SLAB
	bf WAXED_OXIDIZED_CUT_COPPER_SLAB
	bg OAK_LOG
	bh SPRUCE_LOG
	bi BIRCH_LOG
	bj JUNGLE_LOG
	bk ACACIA_LOG
	bl CHERRY_LOG
	bm DARK_OAK_LOG
	bn MANGROVE_LOG
	bo MANGROVE_ROOTS
	bp MUDDY_MANGROVE_ROOTS
	bq CRIMSON_STEM
	br WARPED_STEM
	bs BAMBOO_BLOCK
	bt STRIPPED_OAK_LOG
	bu STRIPPED_SPRUCE_LOG
	bv STRIPPED_BIRCH_LOG
	bw STRIPPED_JUNGLE_LOG
	bx STRIPPED_ACACIA_LOG
	by STRIPPED_CHERRY_LOG
	bz STRIPPED_DARK_OAK_LOG
	bA STRIPPED_MANGROVE_LOG
	bB STRIPPED_CRIMSON_STEM
	bC STRIPPED_WARPED_STEM
	bD STRIPPED_OAK_WOOD
	bE STRIPPED_SPRUCE_WOOD
	bF STRIPPED_BIRCH_WOOD
	bG STRIPPED_JUNGLE_WOOD
	bH STRIPPED_ACACIA_WOOD
	bI STRIPPED_CHERRY_WOOD
	bJ STRIPPED_DARK_OAK_WOOD
	bK STRIPPED_MANGROVE_WOOD
	bL STRIPPED_CRIMSON_HYPHAE
	bM STRIPPED_WARPED_HYPHAE
	bN STRIPPED_BAMBOO_BLOCK
	bO OAK_WOOD
	bP SPRUCE_WOOD
	bQ BIRCH_WOOD
	bR JUNGLE_WOOD
	bS ACACIA_WOOD
	bT CHERRY_WOOD
	bU DARK_OAK_WOOD
	bV MANGROVE_WOOD
	bW CRIMSON_HYPHAE
	bX WARPED_HYPHAE
	bY OAK_LEAVES
	bZ SPRUCE_LEAVES
	ca BIRCH_LEAVES
	cb JUNGLE_LEAVES
	cc ACACIA_LEAVES
	cd CHERRY_LEAVES
	ce DARK_OAK_LEAVES
	cf MANGROVE_LEAVES
	cg AZALEA_LEAVES
	ch FLOWERING_AZALEA_LEAVES
	ci SPONGE
	cj WET_SPONGE
	ck GLASS
	cl TINTED_GLASS
	cm LAPIS_BLOCK
	cn SANDSTONE
	co CHISELED_SANDSTONE
	cp CUT_SANDSTONE
	cq COBWEB
	cr GRASS
	cs FERN
	ct AZALEA
	cu FLOWERING_AZALEA
	cv DEAD_BUSH
	cw SEAGRASS
	cx SEA_PICKLE
	cy WHITE_WOOL
	cz ORANGE_WOOL
	cA MAGENTA_WOOL
	cB LIGHT_BLUE_WOOL
	cC YELLOW_WOOL
	cD LIME_WOOL
	cE PINK_WOOL
	cF GRAY_WOOL
	cG LIGHT_GRAY_WOOL
	cH CYAN_WOOL
	cI PURPLE_WOOL
	cJ BLUE_WOOL
	cK BROWN_WOOL
	cL GREEN_WOOL
	cM RED_WOOL
	cN BLACK_WOOL
	cO DANDELION
	cP POPPY
	cQ BLUE_ORCHID
	cR ALLIUM
	cS AZURE_BLUET
	cT RED_TULIP
	cU ORANGE_TULIP
	cV WHITE_TULIP
	cW PINK_TULIP
	cX OXEYE_DAISY
	cY CORNFLOWER
	cZ LILY_OF_THE_VALLEY
	da WITHER_ROSE
	db TORCHFLOWER
	dc PITCHER_PLANT
	dd SPORE_BLOSSOM
	de BROWN_MUSHROOM
	df RED_MUSHROOM
	dg CRIMSON_FUNGUS
	dh WARPED_FUNGUS
	di CRIMSON_ROOTS
	dj WARPED_ROOTS
	dk NETHER_SPROUTS
	dl WEEPING_VINES
	dm TWISTING_VINES
	dn SUGAR_CANE
	do KELP
	dp MOSS_CARPET
	dq PINK_PETALS
	dr MOSS_BLOCK
	ds HANGING_ROOTS
	dt BIG_DRIPLEAF
	du SMALL_DRIPLEAF
	dv BAMBOO
	dw OAK_SLAB
	dx SPRUCE_SLAB
	dy BIRCH_SLAB
	dz JUNGLE_SLAB
	dA ACACIA_SLAB
	dB CHERRY_SLAB
	dC DARK_OAK_SLAB
	dD MANGROVE_SLAB
	dE BAMBOO_SLAB
	dF BAMBOO_MOSAIC_SLAB
	dG CRIMSON_SLAB
	dH WARPED_SLAB
	dI STONE_SLAB
	dJ SMOOTH_STONE_SLAB
	dK SANDSTONE_SLAB
	dL CUT_STANDSTONE_SLAB
	dM PETRIFIED_OAK_SLAB
	dN COBBLESTONE_SLAB
	dO BRICK_SLAB
	dP STONE_BRICK_SLAB
	dQ MUD_BRICK_SLAB
	dR NETHER_BRICK_SLAB
	dS QUARTZ_SLAB
	dT RED_SANDSTONE_SLAB
	dU CUT_RED_SANDSTONE_SLAB
	dV PURPUR_SLAB
	dW PRISMARINE_SLAB
	dX PRISMARINE_BRICK_SLAB
	dY DARK_PRISMARINE_SLAB
	dZ SMOOTH_QUARTZ
	ea SMOOTH_RED_SANDSTONE
	eb SMOOTH_SANDSTONE
	ec SMOOTH_STONE
	ed BRICKS
	ee BOOKSHELF
	ef CHISELED_BOOKSHELF
	eg DECORATED_POT
	eh MOSSY_COBBLESTONE
	ei OBSIDIAN
	ej TORCH
	ek END_ROD
	el CHORUS_PLANT
	em CHORUS_FLOWER
	en PURPUR_BLOCK
	eo PURPUR_PILLAR
	ep PURPUR_STAIRS
	eq SPAWNER
	er CHEST
	es CRAFTING_TABLE
	et FARMLAND
	eu FURNACE
	ev LADDER
	ew COBBLESTONE_STAIRS
	ex SNOW
	ey ICE
	ez SNOW_BLOCK
	eA CACTUS
	eB CLAY
	eC JUKEBOX
	eD OAK_FENCE
	eE SPRUCE_FENCE
	eF BIRCH_FENCE
	eG JUNGLE_FENCE
	eH ACACIA_FENCE
	eI CHERRY_FENCE
	eJ DARK_OAK_FENCE
	eK MANGROVE_FENCE
	eL BAMBOO_FENCE
	eM CRIMSON_FENCE
	eN WARPED_FENCE
	eO PUMPKIN
	eP CARVED_PUMPKIN
	eQ JACK_O_LANTERN
	eR NETHERRACK
	eS SOUL_SAND
	eT SOUL_SOIL
	eU BASALT
	eV POLISHED_BASALT
	eW SMOOTH_BASALT
	eX SOUL_TORCH
	eY GLOWSTONE
	eZ INFESTED_STONE
	fa INFESTED_COBBLESTONE
	fb INFESTED_STONE_BRICKS
	fc INFESTED_MOSSY_STONE_BRICKS
	fd INFESTED_CRACKED_STONE_BRICKS
	fe INFESTED_CHISELED_STONE_BRICKS
	ff INFESTED_DEEPSLATE
	fg STONE_BRICKS
	fh MOSSY_STONE_BRICKS
	fi CRACKED_STONE_BRICKS
	fj CHISELED_STONE_BRICKS
	fk PACKED_MUD
	fl MUD_BRICKS
	fm DEEPSLATE_BRICKS
	fn CRACKED_DEEPSLATE_BRICKS
	fo DEEPSLATE_TILES
	fp CRACKED_DEEPSLATE_TILES
	fq CHISELED_DEEPSLATE
	fr REINFORCED_DEEPSLATE
	fs BROWN_MUSHROOM_BLOCK
	ft RED_MUSHROOM_BLOCK
	fu MUSHROOM_STEM
	fv IRON_BARS
	fw CHAIN
	fx GLASS_PANE
	fy MELON
	fz VINE
	fA GLOW_LICHEN
	fB BRICK_STAIRS
	fC STONE_BRICK_STAIRS
	fD MUD_BRICK_STAIRS
	fE MYCELIUM
	fF LILY_PAD
	fG NETHER_BRICKS
	fH CRACKED_NETHER_BRICKS
	fI CHISELED_NETHER_BRICKS
	fJ NETHER_BRICK_FENCE
	fK NETHER_BRICK_STAIRS
	fL SCULK
	fM SCULK_VEIN
	fN SCULK_CATALYST
	fO SCULK_SHRIEKER
	fP ENCHANTING_TABLE
	fQ END_PORTAL_FRAME
	fR END_STONE
	fS END_STONE_BRICKS
	fT DRAGON_EGG
	fU SANDSTONE_STAIRS
	fV ENDER_CHEST
	fW EMERALD_BLOCK
	fX OAK_STAIRS
	fY SPRUCE_STAIRS
	fZ BIRCH_STAIRS
	ga JUNGLE_STAIRS
	gb ACACIA_STAIRS
	gc CHERRY_STAIRS
	gd DARK_OAK_STAIRS
	ge MANGROVE_STAIRS
	gf BAMBOO_STAIRS
	gg BAMBOO_MOSAIC_STAIRS
	gh CRIMSON_STAIRS
	gi WARPED_STAIRS
	gj COMMAND_BLOCK
	gk BEACON
	gl COBBLESTONE_WALL
	gm MOSSY_COBBLESTONE_WALL
	gn BRICK_WALL
	go PRISMARINE_WALL
	gp RED_SANDSTONE_WALL
	gq MOSSY_STONE_BRICK_WALL
	gr GRANITE_WALL
	gs STONE_BRICK_WALL
	gt MUD_BRICK_WALL
	gu NETHER_BRICK_WALL
	gv ANDESITE_WALL
	gw RED_NETHER_BRICK_WALL
	gx SANDSTONE_WALL
	gy END_STONE_BRICK_WALL
	gz DIORITE_WALL
	gA BLACKSTONE_WALL
	gB POLISHED_BLACKSTONE_WALL
	gC POLISHED_BLACKSTONE_BRICK_WALL
	gD COBBLED_DEEPSLATE_WALL
	gE POLISHED_DEEPSLATE_WALL
	gF DEEPSLATE_BRICK_WALL
	gG DEEPSLATE_TILE_WALL
	gH ANVIL
	gI CHIPPED_ANVIL
	gJ DAMAGED_ANVIL
	gK CHISELED_QUARTZ_BLOCK
	gL QUARTZ_BLOCK
	gM QUARTZ_BRICKS
	gN QUARTZ_PILLAR
	gO QUARTZ_STAIRS
	gP WHITE_TERRACOTTA
	gQ ORANGE_TERRACOTTA
	gR MAGENTA_TERRACOTTA
	gS LIGHT_BLUE_TERRACOTTA
	gT YELLOW_TERRACOTTA
	gU LIME_TERRACOTTA
	gV PINK_TERRACOTTA
	gW GRAY_TERRACOTTA
	gX LIGHT_GRAY_TERRACOTTA
	gY CYAN_TERRACOTTA
	gZ PURPLE_TERRACOTTA
	ha BLUE_TERRACOTTA
	hb BROWN_TERRACOTTA
	hc GREEN_TERRACOTTA
	hd RED_TERRACOTTA
	he BLACK_TERRACOTTA
	hf BARRIER
	hg LIGHT
	hh HAY_BLOCK
	hi WHITE_CARPET
	hj ORANGE_CARPET
	hk MAGENTA_CARPET
	hl LIGHT_BLUE_CARPET
	hm YELLOW_CARPET
	hn LIME_CARPET
	ho PINK_CARPET
	hp GRAY_CARPET
	hq LIGHT_GRAY_CARPET
	hr CYAN_CARPET
	hs PURPLE_CARPET
	ht BLUE_CARPET
	hu BROWN_CARPET
	hv GREEN_CARPET
	hw RED_CARPET
	hx BLACK_CARPET
	hy TERRACOTTA
	hz PACKED_ICE
	hA DIRT_PATH
	hB SUNFLOWER
	hC LILAC
	hD ROSE_BUSH
	hE PEONY
	hF TALL_GRASS
	hG LARGE_FERN
	hH WHITE_STAINED_GLASS
	hI ORANGE_STAINED_GLASS
	hJ MAGENTA_STAINED_GLASS
	hK LIGHT_BLUE_STAINED_GLASS
	hL YELLOW_STAINED_GLASS
	hM LIME_STAINED_GLASS
	hN PINK_STAINED_GLASS
	hO GRAY_STAINED_GLASS
	hP LIGHT_GRAY_STAINED_GLASS
	hQ CYAN_STAINED_GLASS
	hR PURPLE_STAINED_GLASS
	hS BLUE_STAINED_GLASS
	hT BROWN_STAINED_GLASS
	hU GREEN_STAINED_GLASS
	hV RED_STAINED_GLASS
	hW BLACK_STAINED_GLASS
	hX WHITE_STAINED_GLASS_PANE
	hY ORANGE_STAINED_GLASS_PANE
	hZ MAGENTA_STAINED_GLASS_PANE
	ia LIGHT_BLUE_STAINED_GLASS_PANE
	ib YELLOW_STAINED_GLASS_PANE
	ic LIME_STAINED_GLASS_PANE
	id PINK_STAINED_GLASS_PANE
	ie GRAY_STAINED_GLASS_PANE
	if LIGHT_GRAY_STAINED_GLASS_PANE
	ig CYAN_STAINED_GLASS_PANE
	ih PURPLE_STAINED_GLASS_PANE
	ii BLUE_STAINED_GLASS_PANE
	ij BROWN_STAINED_GLASS_PANE
	ik GREEN_STAINED_GLASS_PANE
	il RED_STAINED_GLASS_PANE
	im BLACK_STAINED_GLASS_PANE
	in PRISMARINE
	io PRISMARINE_BRICKS
	ip DARK_PRISMARINE
	iq PRISMARINE_STAIRS
	ir PRISMARINE_BRICK_STAIRS
	is DARK_PRISMARINE_STAIRS
	it SEA_LANTERN
	iu RED_SANDSTONE
	iv CHISELED_RED_SANDSTONE
	iw CUT_RED_SANDSTONE
	ix RED_SANDSTONE_STAIRS
	iy REPEATING_COMMAND_BLOCK
	iz CHAIN_COMMAND_BLOCK
	iA MAGMA_BLOCK
	iB NETHER_WART_BLOCK
	iC WARPED_WART_BLOCK
	iD RED_NETHER_BRICKS
	iE BONE_BLOCK
	iF STRUCTURE_VOID
	iG SHULKER_BOX
	iH WHITE_SHULKER_BOX
	iI ORANGE_SHULKER_BOX
	iJ MAGENTA_SHULKER_BOX
	iK LIGHT_BLUE_SHULKER_BOX
	iL YELLOW_SHULKER_BOX
	iM LIME_SHULKER_BOX
	iN PINK_SHULKER_BOX
	iO GRAY_SHULKER_BOX
	iP LIGHT_GRAY_SHULKER_BOX
	iQ CYAN_SHULKER_BOX
	iR PURPLE_SHULKER_BOX
	iS BLUE_SHULKER_BOX
	iT BROWN_SHULKER_BOX
	iU GREEN_SHULKER_BOX
	iV RED_SHULKER_BOX
	iW BLACK_SHULKER_BOX
	iX WHITE_GLAZED_TERRACOTTA
	iY ORANGE_GLAZED_TERRACOTTA
	iZ MAGENTA_GLAZED_TERRACOTTA
	ja LIGHT_BLUE_GLAZED_TERRACOTTA
	jb YELLOW_GLAZED_TERRACOTTA
	jc LIME_GLAZED_TERRACOTTA
	jd PINK_GLAZED_TERRACOTTA
	je GRAY_GLAZED_TERRACOTTA
	jf LIGHT_GRAY_GLAZED_TERRACOTTA
	jg CYAN_GLAZED_TERRACOTTA
	jh PURPLE_GLAZED_TERRACOTTA
	ji BLUE_GLAZED_TERRACOTTA
	jj BROWN_GLAZED_TERRACOTTA
	jk GREEN_GLAZED_TERRACOTTA
	jl RED_GLAZED_TERRACOTTA
	jm BLACK_GLAZED_TERRACOTTA
	jn WHITE_CONCRETE
	jo ORANGE_CONCRETE
	jp MAGENTA_CONCRETE
	jq LIGHT_BLUE_CONCRETE
	jr YELLOW_CONCRETE
	js LIME_CONCRETE
	jt PINK_CONCRETE
	ju GRAY_CONCRETE
	jv LIGHT_GRAY_CONCRETE
	jw CYAN_CONCRETE
	jx PURPLE_CONCRETE
	jy BLUE_CONCRETE
	jz BROWN_CONCRETE
	jA GREEN_CONCRETE
	jB RED_CONCRETE
	jC BLACK_CONCRETE
	jD WHITE_CONCRETE_POWDER
	jE ORANGE_CONCRETE_POWDER
	jF MAGENTA_CONCRETE_POWDER
	jG LIGHT_BLUE_CONCRETE_POWDER
	jH YELLOW_CONCRETE_POWDER
	jI LIME_CONCRETE_POWDER
	jJ PINK_CONCRETE_POWDER
	jK GRAY_CONCRETE_POWDER
	jL LIGHT_GRAY_CONCRETE_POWDER
	jM CYAN_CONCRETE_POWDER
	jN PURPLE_CONCRETE_POWDER
	jO BLUE_CONCRETE_POWDER
	jP BROWN_CONCRETE_POWDER
	jQ GREEN_CONCRETE_POWDER
	jR RED_CONCRETE_POWDER
	jS BLACK_CONCRETE_POWDER
	jT TURTLE_EGG
	jU SNIFFER_EGG
	jV DEAD_TUBE_CORAL_BLOCK
	jW DEAD_BRAIN_CORAL_BLOCK
	jX DEAD_BUBBLE_CORAL_BLOCK
	jY DEAD_FIRE_CORAL_BLOCK
	jZ DEAD_HORN_CORAL_BLOCK
	ka TUBE_CORAL_BLOCK
	kb BRAIN_CORAL_BLOCK
	kc BUBBLE_CORAL_BLOCK
	kd FIRE_CORAL_BLOCK
	ke HORN_CORAL_BLOCK
	kf TUBE_CORAL
	kg BRAIN_CORAL
	kh BUBBLE_CORAL
	ki FIRE_CORAL
	kj HORN_CORAL
	kk DEAD_BRAIN_CORAL
	kl DEAD_BUBBLE_CORAL
	km DEAD_FIRE_CORAL
	kn DEAD_HORN_CORAL
	ko DEAD_TUBE_CORAL
	kp TUBE_CORAL_FAN
	kq BRAIN_CORAL_FAN
	kr BUBBLE_CORAL_FAN
	ks FIRE_CORAL_FAN
	kt HORN_CORAL_FAN
	ku DEAD_TUBE_CORAL_FAN
	kv DEAD_BRAIN_CORAL_FAN
	kw DEAD_BUBBLE_CORAL_FAN
	kx DEAD_FIRE_CORAL_FAN
	ky DEAD_HORN_CORAL_FAN
	kz BLUE_ICE
	kA CONDUIT
	kB POLISHED_GRANITE_STAIRS
	kC SMOOTH_RED_SANDSTONE_STAIRS
	kD MOSSY_STONE_BRICK_STAIRS
	kE POLISHED_DIORITE_STAIRS
	kF MOSSY_COBBLESTONE_STAIRS
	kG END_STONE_BRICK_STAIRS
	kH STONE_STAIRS
	kI SMOOTH_SANDSTONE_STAIRS
	kJ SMOOTH_QUARTZ_STAIRS
	kK GRANITE_STAIRS
	kL ANDESITE_STAIRS
	kM RED_NETHER_BRICK_STAIRS
	kN POLISHED_ANDESITE_STAIRS
	kO DIORITE_STAIRS
	kP COBBLED_DEEPSLATE_STAIRS
	kQ POLISHED_DEEPSLATE_STAIRS
	kR DEEPSLATE_BRICK_STAIRS
	kS DEEPSLATE_TILE_STAIRS
	kT POLISHED_GRANITE_SLAB
	kU SMOOTH_RED_SANDSTONE_SLAB
	kV MOSSY_STONE_BRICK_SLAB
	kW POLISHED_DIORITE_SLAB
	kX MOSSY_COBBLESTONE_SLAB
	kY END_STONE_BRICK_SLAB
	kZ SMOOTH_SANDSTONE_SLAB
	la SMOOTH_QUARTZ_SLAB
	lb GRANITE_SLAB
	lc ANDESITE_SLAB
	ld RED_NETHER_BRICK_SLAB
	le POLISHED_ANDESITE_SLAB
	lf DIORITE_SLAB
	lg COBBLED_DEEPSLATE_SLAB
	lh POLISHED_DEEPSLATE_SLAB
	li DEEPSLATE_BRICK_SLAB
	lj DEEPSLATE_TILE_SLAB
	lk SCAFFOLDING
	ll REDSTONE
	lm REDSTONE_TORCH
	ln REDSTONE_BLOCK
	lo REPEATER
	lp COMPARATOR
	lq PISTON
	lr STICKY_PISTON
	ls SLIME_BLOCK
	lt HONEY_BLOCK
	lu OBSERVER
	lv HOPPER
	lw DISPENSER
	lx DROPPER
	ly LECTERN
	lz TARGET
	lA LEVER
	lB LIGHTNING_ROD
	lC DAYLIGHT_DETECTOR
	lD SCULK_SENSOR
	lE CALIBRATED_SCULK_SENSOR
	lF TRIPWIRE_HOOK
	lG TRAPPED_CHEST
	lH TNT
	lI REDSTONE_LAMP
	lJ NOTE_BLOCK
	lK STONE_BUTTON
	lL POLISHED_BLACKSTONE_BUTTON
	lM OAK_BUTTON
	lN SPRUCE_BUTTON
	lO BIRCH_BUTTON
	lP JUNGLE_BUTTON
	lQ ACACIA_BUTTON
	lR CHERRY_BUTTON
	lS DARK_OAK_BUTTON
	lT MANGROVE_BUTTON
	lU BAMBOO_BUTTON
	lV CRIMSON_BUTTON
	lW WARPED_BUTTON
	lX STONE_PRESSURE_PLATE
	lY POLISHED_BLACKSTONE_PRESSURE_PLATE
	lZ LIGHT_WEIGHTED_PRESSURE_PLATE
	ma HEAVY_WEIGHTED_PRESSURE_PLATE
	mb OAK_PRESSURE_PLATE
	mc SPRUCE_PRESSURE_PLATE
	md BIRCH_PRESSURE_PLATE
	me JUNGLE_PRESSURE_PLATE
	mf ACACIA_PRESSURE_PLATE
	mg CHERRY_PRESSURE_PLATE
	mh DARK_OAK_PRESSURE_PLATE
	mi MANGROVE_PRESSURE_PLATE
	mj BAMBOO_PRESSURE_PLATE
	mk CRIMSON_PRESSURE_PLATE
	ml WARPED_PRESSURE_PLATE
	mm IRON_DOOR
	mn OAK_DOOR
	mo SPRUCE_DOOR
	mp BIRCH_DOOR
	mq JUNGLE_DOOR
	mr ACACIA_DOOR
	ms CHERRY_DOOR
	mt DARK_OAK_DOOR
	mu MANGROVE_DOOR
	mv BAMBOO_DOOR
	mw CRIMSON_DOOR
	mx WARPED_DOOR
	my IRON_TRAPDOOR
	mz OAK_TRAPDOOR
	mA SPRUCE_TRAPDOOR
	mB BIRCH_TRAPDOOR
	mC JUNGLE_TRAPDOOR
	mD ACACIA_TRAPDOOR
	mE CHERRY_TRAPDOOR
	mF DARK_OAK_TRAPDOOR
	mG MANGROVE_TRAPDOOR
	mH BAMBOO_TRAPDOOR
	mI CRIMSON_TRAPDOOR
	mJ WARPED_TRAPDOOR
	mK OAK_FENCE_GATE
	mL SPRUCE_FENCE_GATE
	mM BIRCH_FENCE_GATE
	mN JUNGLE_FENCE_GATE
	mO ACACIA_FENCE_GATE
	mP CHERRY_FENCE_GATE
	mQ DARK_OAK_FENCE_GATE
	mR MANGROVE_FENCE_GATE
	mS BAMBOO_FENCE_GATE
	mT CRIMSON_FENCE_GATE
	mU WARPED_FENCE_GATE
	mV POWERED_RAIL
	mW DETECTOR_RAIL
	mX RAIL
	mY ACTIVATOR_RAIL
	mZ SADDLE
	na MINECART
	nb CHEST_MINECART
	nc FURNACE_MINECART
	nd TNT_MINECART
	ne HOPPER_MINECART
	nf CARROT_ON_A_STICK
	ng WARPED_FUNGUS_ON_A_STICK
	nh ELYTRA
	ni OAK_BOAT
	nj OAK_CHEST_BOAT
	nk SPRUCE_BOAT
	nl SPRUCE_CHEST_BOAT
	nm BIRCH_BOAT
	nn BIRCH_CHEST_BOAT
	no JUNGLE_BOAT
	np JUNGLE_CHEST_BOAT
	nq ACACIA_BOAT
	nr ACACIA_CHEST_BOAT
	ns CHERRY_BOAT
	nt CHERRY_CHEST_BOAT
	nu DARK_OAK_BOAT
	nv DARK_OAK_CHEST_BOAT
	nw MANGROVE_BOAT
	nx MANGROVE_CHEST_BOAT
	ny BAMBOO_RAFT
	nz BAMBOO_CHEST_RAFT
	nA STRUCTURE_BLOCK
	nB JIGSAW
	nC TURTLE_HELMET
	nD SCUTE
	nE FLINT_AND_STEEL
	nF APPLE
	nG BOW
	nH ARROW
	nI COAL
	nJ CHARCOAL
	nK DIAMOND
	nL EMERALD
	nM LAPIS_LAZULI
	nN QUARTZ
	nO AMETHYST_SHARD
	nP RAW_IRON
	nQ IRON_INGOT
	nR RAW_COPPER
	nS COPPER_INGOT
	nT RAW_GOLD
	nU GOLD_INGOT
	nV NETHERITE_INGOT
	nW NETHERITE_SCRAP
	nX WOODEN_SWORD
	nY WOODEN_SHOVEL
	nZ WOODEN_PICKAXE
	oa WOODEN_AXE
	ob WOODEN_HOE
	oc STONE_SWORD
	od STONE_SHOVEL
	oe STONE_PICKAXE
	of STONE_AXE
	og STONE_HOE
	oh GOLDEN_SWORD
	oi GOLDEN_SHOVEL
	oj GOLDEN_PICKAXE
	ok GOLDEN_AXE
	ol GOLDEN_HOE
	om IRON_SWORD
	on IRON_SHOVEL
	oo IRON_PICKAXE
	op IRON_AXE
	oq IRON_HOE
	or DIAMOND_SWORD
	os DIAMOND_SHOVEL
	ot DIAMOND_PICKAXE
	ou DIAMOND_AXE
	ov DIAMOND_HOE
	ow NETHERITE_SWORD
	ox NETHERITE_SHOVEL
	oy NETHERITE_PICKAXE
	oz NETHERITE_AXE
	oA NETHERITE_HOE
	oB STICK
	oC BOWL
	oD MUSHROOM_STEW
	oE STRING
	oF FEATHER
	oG GUNPOWDER
	oH WHEAT_SEEDS
	oI WHEAT
	oJ BREAD
	oK LEATHER_HELMET
	oL LEATHER_CHESTPLATE
	oM LEATHER_LEGGINGS
	oN LEATHER_BOOTS
	oO CHAINMAIL_HELMET
	oP CHAINMAIL_CHESTPLATE
	oQ CHAINMAIL_LEGGINGS
	oR CHAINMAIL_BOOTS
	oS IRON_HELMET
	oT IRON_CHESTPLATE
	oU IRON_LEGGINGS
	oV IRON_BOOTS
	oW DIAMOND_HELMET
	oX DIAMOND_CHESTPLATE
	oY DIAMOND_LEGGINGS
	oZ DIAMOND_BOOTS
	pa GOLDEN_HELMET
	pb GOLDEN_CHESTPLATE
	pc GOLDEN_LEGGINGS
	pd GOLDEN_BOOTS
	pe NETHERITE_HELMET
	pf NETHERITE_CHESTPLATE
	pg NETHERITE_LEGGINGS
	ph NETHERITE_BOOTS
	pi FLINT
	pj PORKCHOP
	pk COOKED_PORKCHOP
	pl PAINTING
	pm GOLDEN_APPLE
	pn ENCHANTED_GOLDEN_APPLE
	po OAK_SIGN
	pp SPRUCE_SIGN
	pq BIRCH_SIGN
	pr JUNGLE_SIGN
	ps ACACIA_SIGN
	pt CHERRY_SIGN
	pu DARK_OAK_SIGN
	pv MANGROVE_SIGN
	pw BAMBOO_SIGN
	px CRIMSON_SIGN
	py WARPED_SIGN
	pz OAK_HANGING_SIGN
	pA SPRUCE_HANGING_SIGN
	pB BIRCH_HANGING_SIGN
	pC JUNGLE_HANGING_SIGN
	pD ACACIA_HANGING_SIGN
	pE CHERRY_HANGING_SIGN
	pF DARK_OAK_HANGING_SIGN
	pG MANGROVE_HANGING_SIGN
	pH BAMBOO_HANGING_SIGN
	pI CRIMSON_HANGING_SIGN
	pJ WARPED_HANGING_SIGN
	pK BUCKET
	pL WATER_BUCKET
	pM LAVA_BUCKET
	pN POWDER_SNOW_BUCKET
	pO SNOWBALL
	pP LEATHER
	pQ MILK_BUCKET
	pR PUFFERFISH_BUCKET
	pS SALMON_BUCKET
	pT COD_BUCKET
	pU TROPICAL_FISH_BUCKET
	pV AXOLOTL_BUCKET
	pW TADPOLE_BUCKET
	pX BRICK
	pY CLAY_BALL
	pZ DRIED_KELP_BLOCK
	qa PAPER
	qb BOOK
	qc SLIME_BALL
	qd EGG
	qe COMPASS
	qf RECOVERY_COMPASS
	qg BUNDLE
	qh FISHING_ROD
	qi CLOCK
	qj SPYGLASS
	qk GLOWSTONE_DUST
	ql COD
	qm SALMON
	qn TROPICAL_FISH
	qo PUFFERFISH
	qp COOKED_COD
	qq COOKED_SALMON
	qr INK_SAC
	qs GLOW_INK_SAC
	qt COCOA_BEANS
	qu WHITE_DYE
	qv ORANGE_DYE
	qw MAGENTA_DYE
	qx LIGHT_BLUE_DYE
	qy YELLOW_DYE
	qz LIME_DYE
	qA PINK_DYE
	qB GRAY_DYE
	qC LIGHT_GRAY_DYE
	qD CYAN_DYE
	qE PURPLE_DYE
	qF BLUE_DYE
	qG BROWN_DYE
	qH GREEN_DYE
	qI RED_DYE
	qJ BLACK_DYE
	qK BONE_MEAL
	qL BONE
	qM SUGAR
	qN CAKE
	qO WHITE_BED
	qP ORANGE_BED
	qQ MAGENTA_BED
	qR LIGHT_BLUE_BED
	qS YELLOW_BED
	qT LIME_BED
	qU PINK_BED
	qV GRAY_BED
	qW LIGHT_GRAY_BED
	qX CYAN_BED
	qY PURPLE_BED
	qZ BLUE_BED
	ra BROWN_BED
	rb GREEN_BED
	rc RED_BED
	rd BLACK_BED
	re COOKIE
	rf FILLED_MAP
	rg SHEARS
	rh MELON_SLICE
	ri DRIED_KELP
	rj PUMPKIN_SEEDS
	rk MELON_SEEDS
	rl BEEF
	rm COOKED_BEEF
	rn CHICKEN
	ro COOKED_CHICKEN
	rp ROTTEN_FLESH
	rq ENDER_PEARL
	rr BLAZE_ROD
	rs GHAST_TEAR
	rt GOLD_NUGGET
	ru NETHER_WART
	rv POTION
	rw GLASS_BOTTLE
	rx SPIDER_EYE
	ry FERMENTED_SPIDER_EYE
	rz BLAZE_POWDER
	rA MAGMA_CREAM
	rB BREWING_STAND
	rC CAULDRON
	rD ENDER_EYE
	rE GLISTERING_MELON_SLICE
	rF ALLAY_SPAWN_EGG
	rG AXOLOTL_SPAWN_EGG
	rH BAT_SPAWN_EGG
	rI BEE_SPAWN_EGG
	rJ BLAZE_SPAWN_EGG
	rK CAT_SPAWN_EGG
	rL CAMEL_SPAWN_EGG
	rM CAVE_SPIDER_SPAWN_EGG
	rN CHICKEN_SPAWN_EGG
	rO COD_SPAWN_EGG
	rP COW_SPAWN_EGG
	rQ CREEPER_SPAWN_EGG
	rR DOLPHIN_SPAWN_EGG
	rS DONKEY_SPAWN_EGG
	rT DROWNED_SPAWN_EGG
	rU ELDER_GUARDIAN_SPAWN_EGG
	rV ENDER_DRAGON_SPAWN_EGG
	rW ENDERMAN_SPAWN_EGG
	rX ENDERMITE_SPAWN_EGG
	rY EVOKER_SPAWN_EGG
	rZ FOX_SPAWN_EGG
	sa FROG_SPAWN_EGG
	sb GHAST_SPAWN_EGG
	sc GLOW_SQUID_SPAWN_EGG
	sd GOAT_SPAWN_EGG
	se GUARDIAN_SPAWN_EGG
	sf HOGLIN_SPAWN_EGG
	sg HORSE_SPAWN_EGG
	sh HUSK_SPAWN_EGG
	si IRON_GOLEM_SPAWN_EGG
	sj LLAMA_SPAWN_EGG
	sk MAGMA_CUBE_SPAWN_EGG
	sl MOOSHROOM_SPAWN_EGG
	sm MULE_SPAWN_EGG
	sn OCELOT_SPAWN_EGG
	so PANDA_SPAWN_EGG
	sp PARROT_SPAWN_EGG
	sq PHANTOM_SPAWN_EGG
	sr PIG_SPAWN_EGG
	ss PIGLIN_SPAWN_EGG
	st PIGLIN_BRUTE_SPAWN_EGG
	su PILLAGER_SPAWN_EGG
	sv POLAR_BEAR_SPAWN_EGG
	sw PUFFERFISH_SPAWN_EGG
	sx RABBIT_SPAWN_EGG
	sy RAVAGER_SPAWN_EGG
	sz SALMON_SPAWN_EGG
	sA SHEEP_SPAWN_EGG
	sB SHULKER_SPAWN_EGG
	sC SILVERFISH_SPAWN_EGG
	sD SKELETON_SPAWN_EGG
	sE SKELETON_HORSE_SPAWN_EGG
	sF SLIME_SPAWN_EGG
	sG SNIFFER_SPAWN_EGG
	sH SNOW_GOLEM_SPAWN_EGG
	sI SPIDER_SPAWN_EGG
	sJ SQUID_SPAWN_EGG
	sK STRAY_SPAWN_EGG
	sL STRIDER_SPAWN_EGG
	sM TADPOLE_SPAWN_EGG
	sN TRADER_LLAMA_SPAWN_EGG
	sO TROPICAL_FISH_SPAWN_EGG
	sP TURTLE_SPAWN_EGG
	sQ VEX_SPAWN_EGG
	sR VILLAGER_SPAWN_EGG
	sS VINDICATOR_SPAWN_EGG
	sT WANDERING_TRADER_SPAWN_EGG
	sU WARDEN_SPAWN_EGG
	sV WITCH_SPAWN_EGG
	sW WITHER_SPAWN_EGG
	sX WITHER_SKELETON_SPAWN_EGG
	sY WOLF_SPAWN_EGG
	sZ ZOGLIN_SPAWN_EGG
	ta ZOMBIE_SPAWN_EGG
	tb ZOMBIE_HORSE_SPAWN_EGG
	tc ZOMBIE_VILLAGER_SPAWN_EGG
	td ZOMBIFIED_PIGLIN_SPAWN_EGG
	te EXPERIENCE_BOTTLE
	tf FIRE_CHARGE
	tg WRITABLE_BOOK
	th WRITTEN_BOOK
	ti ITEM_FRAME
	tj GLOW_ITEM_FRAME
	tk FLOWER_POT
	tl CARROT
	tm POTATO
	tn BAKED_POTATO
	to POISONOUS_POTATO
	tp MAP
	tq GOLDEN_CARROT
	tr SKELETON_SKULL
	ts WITHER_SKELETON_SKULL
	tt PLAYER_HEAD
	tu ZOMBIE_HEAD
	tv CREEPER_HEAD
	tw DRAGON_HEAD
	tx PIGLIN_HEAD
	ty NETHER_STAR
	tz PUMPKIN_PIE
	tA FIREWORK_ROCKET
	tB FIREWORK_STAR
	tC ENCHANTED_BOOK
	tD NETHER_BRICK
	tE PRISMARINE_SHARD
	tF PRISMARINE_CRYSTALS
	tG RABBIT
	tH COOKED_RABBIT
	tI RABBIT_STEW
	tJ RABBIT_FOOT
	tK RABBIT_HIDE
	tL ARMOR_STAND
	tM IRON_HORSE_ARMOR
	tN GOLDEN_HORSE_ARMOR
	tO DIAMOND_HORSE_ARMOR
	tP LEATHER_HORSE_ARMOR
	tQ LEAD
	tR NAME_TAG
	tS COMMAND_BLOCK_MINECART
	tT MUTTON
	tU COOKED_MUTTON
	tV WHITE_BANNER
	tW ORANGE_BANNER
	tX MAGENTA_BANNER
	tY LIGHT_BLUE_BANNER
	tZ YELLOW_BANNER
	ua LIME_BANNER
	ub PINK_BANNER
	uc GRAY_BANNER
	ud LIGHT_GRAY_BANNER
	ue CYAN_BANNER
	uf PURPLE_BANNER
	ug BLUE_BANNER
	uh BROWN_BANNER
	ui GREEN_BANNER
	uj RED_BANNER
	uk BLACK_BANNER
	ul END_CRYSTAL
	um CHORUS_FRUIT
	un POPPED_CHORUS_FRUIT
	uo TORCHFLOWER_SEEDS
	up PITCHER_POD
	uq BEETROOT
	ur BEETROOT_SEEDS
	us BEETROOT_SOUP
	ut DRAGON_BREATH
	uu SPLASH_POTION
	uv SPECTRAL_ARROW
	uw TIPPED_ARROW
	ux LINGERING_POTION
	uy SHIELD
	uz TOTEM_OF_UNDYING
	uA SHULKER_SHELL
	uB IRON_NUGGET
	uC KNOWLEDGE_BOOK
	uD DEBUG_STICK
	uE MUSIC_DISC_13
	uF MUSIC_DISC_CAT
	uG MUSIC_DISC_BLOCKS
	uH MUSIC_DISC_CHIRP
	uI MUSIC_DISC_FAR
	uJ MUSIC_DISC_MALL
	uK MUSIC_DISC_MELLOHI
	uL MUSIC_DISC_STAL
	uM MUSIC_DISC_STRAD
	uN MUSIC_DISC_WARD
	uO MUSIC_DISC_11
	uP MUSIC_DISC_WAIT
	uQ MUSIC_DISC_OTHERSIDE
	uR MUSIC_DISC_RELIC
	uS MUSIC_DISC_5
	uT MUSIC_DISC_PIGSTEP
	uU DISC_FRAGMENT_5
	uV TRIDENT
	uW PHANTOM_MEMBRANE
	uX NAUTILUS_SHELL
	uY HEART_OF_THE_SEA
	uZ CROSSBOW
	va SUSPICIOUS_STEW
	vb LOOM
	vc FLOWER_BANNER_PATTERN
	vd CREEPER_BANNER_PATTERN
	ve SKULL_BANNER_PATTERN
	vf MOJANG_BANNER_PATTERN
	vg GLOBE_BANNER_PATTERN
	vh PIGLIN_BANNER_PATTERN
	vi GOAT_HORN
	vj COMPOSTER
	vk BARREL
	vl SMOKER
	vm BLAST_FURNACE
	vn CARTOGRAPHY_TABLE
	vo FLETCHING_TABLE
	vp GRINDSTONE
	vq SMITHING_TABLE
	vr STONECUTTER
	vs BELL
	vt LANTERN
	vu SOUL_LANTERN
	vv SWEET_BERRIES
	vw GLOW_BERRIES
	vx CAMPFIRE
	vy SOUL_CAMPFIRE
	vz SHROOMLIGHT
	vA HONEYCOMB
	vB BEE_NEST
	vC BEEHIVE
	vD HONEY_BOTTLE
	vE HONEYCOMB_BLOCK
	vF LODESTONE
	vG CRYING_OBSIDIAN
	vH BLACKSTONE
	vI BLACKSTONE_SLAB
	vJ BLACKSTONE_STAIRS
	vK GILDED_BLACKSTONE
	vL POLISHED_BLACKSTONE
	vM POLISHED_BLACKSTONE_SLAB
	vN POLISHED_BLACKSTONE_STAIRS
	vO CHISELED_POLISHED_BLACKSTONE
	vP POLISHED_BLACKSTONE_BRICKS
	vQ POLISHED_BLACKSTONE_BRICK_SLAB
	vR POLISHED_BLACKSTONE_BRICK_STAIRS
	vS CRACKED_POLISHED_BLACKSTONE_BRICKS
	vT RESPAWN_ANCHOR
	vU CANDLE
	vV WHITE_CANDLE
	vW ORANGE_CANDLE
	vX MAGENTA_CANDLE
	vY LIGHT_BLUE_CANDLE
	vZ YELLOW_CANDLE
	wa LIME_CANDLE
	wb PINK_CANDLE
	wc GRAY_CANDLE
	wd LIGHT_GRAY_CANDLE
	we CYAN_CANDLE
	wf PURPLE_CANDLE
	wg BLUE_CANDLE
	wh BROWN_CANDLE
	wi GREEN_CANDLE
	wj RED_CANDLE
	wk BLACK_CANDLE
	wl SMALL_AMETHYST_BUD
	wm MEDIUM_AMETHYST_BUD
	wn LARGE_AMETHYST_BUD
	wo AMETHYST_CLUSTER
	wp POINTED_DRIPSTONE
	wq OCHRE_FROGLIGHT
	wr VERDANT_FROGLIGHT
	ws PEARLESCENT_FROGLIGHT
	wt FROGSPAWN
	wu ECHO_SHARD
	wv BRUSH
	ww NETHERITE_UPGRADE_SMITHING_TEMPLATE
	wx SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	wy DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	wz COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	wA WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	wB WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	wC EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	wD VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	wE TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	wF SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	wG RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	wH SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	wI WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE
	wJ SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE
	wK SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE
	wL RAISER_ARMOR_TRIM_SMITHING_TEMPLATE
	wM HOST_ARMOR_TRIM_SMITHING_TEMPLATE
	wN ANGLER_POTTERY_SHERD
	wO ARCHER_POTTERY_SHERD
	wP ARMS_UP_POTTERY_SHERD
	wQ BLADE_POTTERY_SHERD
	wR BREWER_POTTERY_SHERD
	wS BURN_POTTERY_SHERD
	wT DANGER_POTTERY_SHERD
	wU EXPLORER_POTTERY_SHERD
	wV FRIEND_POTTERY_SHERD
	wW HEART_POTTERY_SHERD
	wX HEARTBREAK_POTTERY_SHERD
	wY HOWL_POTTERY_SHERD
	wZ MINER_POTTERY_SHERD
	xa MOURNER_POTTERY_SHERD
	xb PLENTY_POTTERY_SHERD
	xc PRIZE_POTTERY_SHERD
	xd SHEAF_POTTERY_SHERD
	xe SHELTER_POTTERY_SHERD
	xf SKULL_POTTERY_SHERD
	xg SNORT_POTTERY_SHERD
	<init> ()V <init>
	a (Lcpn;)Lcfu; registerBlock
	a (Lcpn;[Lcpn;)Lcfu; registerBlock
	a (Lcds;)Lcfu; registerBlock
	a (Lcpn;Lcfu;)Lcfu; registerBlock
	a (Ljava/lang/String;Lcfu;)Lcfu; registerItem
	a (Lacq;Lcfu;)Lcfu; registerItem
	a (Lacp;Lcfu;)Lcfu; registerItem
	<clinit> ()V <clinit>
cgd net/minecraft/world/item/KnowledgeBookItem
	a RECIPE_TAG
	b LOGGER
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	<clinit> ()V <clinit>
cge net/minecraft/world/item/LeadItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lbyo;Lcmm;Lgu;)Lbdx; bindPlayerMobs
cgf net/minecraft/world/item/LingeringPotionItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cgg net/minecraft/world/item/MapItem
	a IMAGE_WIDTH
	b IMAGE_HEIGHT
	e DEFAULT_MAP_COLOR
	f TAG_MAP
	c MAP_SCALE_TAG
	d MAP_LOCK_TAG
	<init> (Lcfu$a;)V <init>
	a (Lcmm;IIBZZ)Lcfz; create
	a (Ljava/lang/Integer;Lcmm;)Ldyo; getSavedData
	a (Lcfz;Lcmm;)Ldyo; getSavedData
	d (Lcfz;)Ljava/lang/Integer; getMapId
	a (Lcmm;IIIZZLacp;)I createNewSavedData
	a (Lcfz;I)V storeMapData
	a (Lcfz;Lcmm;IIIZZLacp;)V createAndStoreSavedData
	a (I)Ljava/lang/String; makeKey
	a (Lcmm;Lbfj;Ldyo;)V update
	a (Lcmm;Ldcb;Lgu;)Ldcb; getCorrectStateForFluidBlock
	a ([ZII)Z isBiomeWatery
	a (Laif;Lcfz;)V renderBiomePreviewMap
	a (Lcfz;Lcmm;Lbfj;IZ)V inventoryTick
	a (Lcfz;Lcmm;Lbyo;)Luo; getUpdatePacket
	b (Lcfz;Lcmm;Lbyo;)V onCraftedBy
	a (Lcfz;Lcmm;I)V scaleMap
	a (Lcmm;Lcfz;)V lockMap
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	k (Lcfz;)I getColor
	a (Lcij;)Lbdx; useOn
cgh net/minecraft/world/item/MilkBucketItem
	a DRINK_DURATION
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
	b (Lcfz;)I getUseDuration
	c (Lcfz;)Lchs; getUseAnimation
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cgi net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	<init> (Lcaf$a;Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	<clinit> ()V <clinit>
cgi$1 net/minecraft/world/item/MinecartItem$1
	c defaultDispenseItemBehavior
	<init> ()V <init>
	a (Lgv;Lcfz;)Lcfz; execute
	a (Lgv;)V playSound
cgj net/minecraft/world/item/MobBucketItem
	a type
	b emptySound
	<init> (Lbfn;Ldxd;Lamg;Lcfu$a;)V <init>
	a (Lbyo;Lcmm;Lcfz;Lgu;)V checkExtraContent
	a (Lbyo;Lcmn;Lgu;)V playEmptySound
	a (Laif;Lcfz;Lgu;)V spawn
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
cgk net/minecraft/world/item/NameTagItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lbyo;Lbfz;Lbdw;)Lbdx; interactLivingEntity
cgl net/minecraft/world/item/PickaxeItem
	<init> (Lchm;IFLcfu$a;)V <init>
cgm net/minecraft/world/item/PlaceOnWaterBlockItem
	<init> (Lcpn;Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
cgn net/minecraft/world/item/PlayerHeadItem
	c TAG_SKULL_OWNER
	<init> (Lcpn;Lcpn;Lcfu$a;)V <init>
	m (Lcfz;)Lsw; getName
	b (Lqr;)V verifyTagAfterLoad
	a (Lqr;Lcom/mojang/authlib/GameProfile;)V lambda$verifyTagAfterLoad$0
cgo net/minecraft/world/item/PotionItem
	a DRINK_DURATION
	<init> (Lcfu$a;)V <init>
	ae_ ()Lcfz; getDefaultInstance
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
	a (Lcij;)Lbdx; useOn
	b (Lcfz;)I getUseDuration
	c (Lcfz;)Lchs; getUseAnimation
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	j (Lcfz;)Ljava/lang/String; getDescriptionId
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
cgp net/minecraft/world/item/ProjectileWeaponItem
	c ARROW_ONLY
	d ARROW_OR_FIREWORK
	<init> (Lcfu$a;)V <init>
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	a (Lbfz;Ljava/util/function/Predicate;)Lcfz; getHeldProjectile
	c ()I getEnchantmentValue
	d ()I getDefaultProjectileRange
	d (Lcfz;)Z lambda$static$1
	k (Lcfz;)Z lambda$static$0
	<clinit> ()V <clinit>
cgq net/minecraft/world/item/Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d EPIC
	e color
	f $VALUES
	values ()[Lcgq; values
	valueOf (Ljava/lang/String;)Lcgq; valueOf
	<init> (Ljava/lang/String;ILn;)V <init>
	a ()[Lcgq; $values
	<clinit> ()V <clinit>
cgr net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	d lengthInTicks
	<init> (ILamg;Lcfu$a;I)V <init>
	a (Lcij;)Lbdx; useOn
	h ()I getAnalogOutput
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	i ()Ltj; getDisplayName
	a (Lamg;)Lcgr; getBySound
	x ()Lamg; getSound
	y ()I getLengthInTicks
	<clinit> ()V <clinit>
cgs net/minecraft/world/item/SaddleItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lbyo;Lbfz;Lbdw;)Lbdx; interactLivingEntity
cgt net/minecraft/world/item/ScaffoldingBlockItem
	<init> (Lcpn;Lcfu$a;)V <init>
	b (Lcih;)Lcih; updatePlacementContext
	d ()Z mustSurvive
cgu net/minecraft/world/item/ServerItemCooldowns
	a player
	<init> (Laig;)V <init>
	b (Lcfu;I)V onCooldownStarted
	c (Lcfu;)V onCooldownEnded
cgv net/minecraft/world/item/ShearsItem
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lcmm;Ldcb;Lgu;Lbfz;)Z mineBlock
	a_ (Ldcb;)Z isCorrectToolForDrops
	a (Lcfz;Ldcb;)F getDestroySpeed
	a (Lcij;)Lbdx; useOn
	a (Lcij;Lbyo;)V lambda$useOn$1
	a (Lbfz;)V lambda$mineBlock$0
cgw net/minecraft/world/item/ShieldItem
	a EFFECTIVE_BLOCK_DELAY
	b MINIMUM_DURABILITY_DAMAGE
	c TAG_BASE_COLOR
	<init> (Lcfu$a;)V <init>
	j (Lcfz;)Ljava/lang/String; getDescriptionId
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	c (Lcfz;)Lchs; getUseAnimation
	b (Lcfz;)I getUseDuration
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lcfz;)Z isValidRepairItem
	d (Lcfz;)Lcen; getColor
	g ()Lbfo; getEquipmentSlot
cgx net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	<init> (Lchm;FFLcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcij;Lbyo;)V lambda$useOn$0
	<clinit> ()V <clinit>
cgy net/minecraft/world/item/SignApplicator
	a (Lcmm;Ldav;ZLbyo;)Z tryApplyToSign
	a (Ldaw;Lbyo;)Z canApplyToSign
cgz net/minecraft/world/item/SignItem
	<init> (Lcfu$a;Lcpn;Lcpn;)V <init>
	<init> (Lcfu$a;Lcpn;Lcpn;Lha;)V <init>
	a (Lgu;Lcmm;Lbyo;Lcfz;Ldcb;)Z updateCustomBlockEntityTag
cha net/minecraft/world/item/SimpleFoiledItem
	<init> (Lcfu$a;)V <init>
	i (Lcfz;)Z isFoil
chb net/minecraft/world/item/SmithingTemplateItem
	a TITLE_FORMAT
	b DESCRIPTION_FORMAT
	c DESCRIPTION_ID
	d INGREDIENTS_TITLE
	e APPLIES_TO_TITLE
	f NETHERITE_UPGRADE
	g ARMOR_TRIM_APPLIES_TO
	h ARMOR_TRIM_INGREDIENTS
	i ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	j ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	k NETHERITE_UPGRADE_APPLIES_TO
	r NETHERITE_UPGRADE_INGREDIENTS
	s NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	t NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	u EMPTY_SLOT_HELMET
	v EMPTY_SLOT_CHESTPLATE
	w EMPTY_SLOT_LEGGINGS
	x EMPTY_SLOT_BOOTS
	y EMPTY_SLOT_HOE
	z EMPTY_SLOT_AXE
	A EMPTY_SLOT_SWORD
	B EMPTY_SLOT_SHOVEL
	C EMPTY_SLOT_PICKAXE
	D EMPTY_SLOT_INGOT
	E EMPTY_SLOT_REDSTONE_DUST
	F EMPTY_SLOT_QUARTZ
	G EMPTY_SLOT_EMERALD
	H EMPTY_SLOT_DIAMOND
	I EMPTY_SLOT_LAPIS_LAZULI
	J EMPTY_SLOT_AMETHYST_SHARD
	K appliesTo
	L ingredients
	M upgradeDescription
	N baseSlotDescription
	O additionsSlotDescription
	P baseSlotEmptyIcons
	Q additionalSlotEmptyIcons
	<init> (Lsw;Lsw;Lsw;Lsw;Lsw;Ljava/util/List;Ljava/util/List;)V <init>
	a (Lacp;)Lchb; createArmorTrimTemplate
	a (Lacq;)Lchb; createArmorTrimTemplate
	h ()Lchb; createNetheriteUpgradeTemplate
	A ()Ljava/util/List; createTrimmableArmorIconList
	B ()Ljava/util/List; createTrimmableMaterialIconList
	C ()Ljava/util/List; createNetheriteUpgradeIconList
	D ()Ljava/util/List; createNetheriteUpgradeMaterialList
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	i ()Lsw; getBaseSlotDescription
	x ()Lsw; getAdditionSlotDescription
	y ()Ljava/util/List; getBaseSlotEmptyIcons
	z ()Ljava/util/List; getAdditionalSlotEmptyIcons
	a ()Ljava/lang/String; getDescriptionId
	<clinit> ()V <clinit>
chc net/minecraft/world/item/SnowballItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
chd net/minecraft/world/item/SolidBucketItem
	c placeSound
	<init> (Lcpn;Lamg;Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a ()Ljava/lang/String; getDescriptionId
	a (Ldcb;)Lamg; getPlaceSound
	a (Lbyo;Lcmm;Lgu;Leee;)Z emptyContents
che net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b backgroundColor
	c highlightColor
	d defaultType
	<init> (Lbfn;IILcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lqr;Lbfn;)Z spawnsEntity
	a (I)I getColor
	a (Lbfn;)Lche; byId
	h ()Ljava/lang/Iterable; eggs
	a (Lqr;)Lbfn; getType
	m ()Lcaw; requiredFeatures
	a (Lbyo;Lbgb;Lbfn;Laif;Leei;Lcfz;)Ljava/util/Optional; spawnOffspringFromSpawnEgg
	<clinit> ()V <clinit>
chf net/minecraft/world/item/SpectralArrowItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lcfz;Lbfz;)Lbyu; createArrow
chg net/minecraft/world/item/SplashPotionItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
chh net/minecraft/world/item/SpyglassItem
	a USE_DURATION
	b ZOOM_FOV_MODIFIER
	<init> (Lcfu$a;)V <init>
	b (Lcfz;)I getUseDuration
	c (Lcfz;)Lchs; getUseAnimation
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
	a (Lcfz;Lcmm;Lbfz;I)V releaseUsing
	a (Lbfz;)V stopUsing
chi net/minecraft/world/item/StandingAndWallBlockItem
	d wallBlock
	c attachmentDirection
	<init> (Lcpn;Lcpn;Lcfu$a;Lha;)V <init>
	a (Lcmp;Ldcb;Lgu;)Z canPlace
	c (Lcih;)Ldcb; getPlacementState
	a (Ljava/util/Map;Lcfu;)V registerBlocks
chj net/minecraft/world/item/SuspiciousStewItem
	a EFFECTS_TAG
	b EFFECT_ID_TAG
	c EFFECT_DURATION_TAG
	d DEFAULT_DURATION
	<init> (Lcfu$a;)V <init>
	a (Lcfz;Lbey;I)V saveMobEffect
	a (Lcfz;Ljava/util/function/Consumer;)V listPotionEffects
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcfz;Lcmm;Lbfz;)Lcfz; finishUsingItem
chk net/minecraft/world/item/SwordItem
	a attackDamage
	b defaultModifiers
	<init> (Lchm;IFLcfu$a;)V <init>
	h ()F getDamage
	a (Ldcb;Lcmm;Lgu;Lbyo;)Z canAttackBlock
	a (Lcfz;Ldcb;)F getDestroySpeed
	a (Lcfz;Lbfz;Lbfz;)Z hurtEnemy
	a (Lcfz;Lcmm;Ldcb;Lgu;Lbfz;)Z mineBlock
	a_ (Ldcb;)Z isCorrectToolForDrops
	a (Lbfo;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lbfz;)V lambda$mineBlock$1
	b (Lbfz;)V lambda$hurtEnemy$0
chl net/minecraft/world/item/ThrowablePotionItem
	<init> (Lcfu$a;)V <init>
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
chm net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lciz; getRepairIngredient
chn net/minecraft/world/item/TieredItem
	a tier
	<init> (Lchm;Lcfu$a;)V <init>
	i ()Lchm; getTier
	c ()I getEnchantmentValue
	a (Lcfz;Lcfz;)Z isValidRepairItem
cho net/minecraft/world/item/Tiers
	a WOOD
	b STONE
	c IRON
	d DIAMOND
	e GOLD
	f NETHERITE
	g level
	h uses
	i speed
	j damage
	k enchantmentValue
	l repairIngredient
	m $VALUES
	values ()[Lcho; values
	valueOf (Ljava/lang/String;)Lcho; valueOf
	<init> (Ljava/lang/String;IIIFFILjava/util/function/Supplier;)V <init>
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lciz; getRepairIngredient
	g ()Lciz; lambda$static$5
	h ()Lciz; lambda$static$4
	i ()Lciz; lambda$static$3
	j ()Lciz; lambda$static$2
	k ()Lciz; lambda$static$1
	l ()Lciz; lambda$static$0
	m ()[Lcho; $values
	<clinit> ()V <clinit>
chp net/minecraft/world/item/TippedArrowItem
	<init> (Lcfu$a;)V <init>
	ae_ ()Lcfz; getDefaultInstance
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	j (Lcfz;)Ljava/lang/String; getDescriptionId
chq net/minecraft/world/item/TooltipFlag
	a NORMAL
	b ADVANCED
	a ()Z isAdvanced
	b ()Z isCreative
	<clinit> ()V <clinit>
chq$a net/minecraft/world/item/TooltipFlag$Default
	c advanced
	d creative
	<init> (ZZ)V <init>
	a ()Z isAdvanced
	b ()Z isCreative
	c ()Lchq$a; asCreative
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Z advanced
	e ()Z creative
chr net/minecraft/world/item/TridentItem
	a THROW_THRESHOLD_TIME
	b BASE_DAMAGE
	c SHOOT_POWER
	d defaultModifiers
	<init> (Lcfu$a;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;)Z canAttackBlock
	c (Lcfz;)Lchs; getUseAnimation
	b (Lcfz;)I getUseDuration
	a (Lcfz;Lcmm;Lbfz;I)V releaseUsing
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lbfz;Lbfz;)Z hurtEnemy
	a (Lcfz;Lcmm;Ldcb;Lgu;Lbfz;)Z mineBlock
	a (Lbfo;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	c ()I getEnchantmentValue
	a (Lbfz;)V lambda$mineBlock$2
	b (Lbfz;)V lambda$hurtEnemy$1
	a (Lbfz;Lbyo;)V lambda$releaseUsing$0
chs net/minecraft/world/item/UseAnim
	a NONE
	b EAT
	c DRINK
	d BLOCK
	e BOW
	f SPEAR
	g CROSSBOW
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k $VALUES
	values ()[Lchs; values
	valueOf (Ljava/lang/String;)Lchs; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lchs; $values
	<clinit> ()V <clinit>
cht net/minecraft/world/item/Vanishable
chu net/minecraft/world/item/WritableBookItem
	<init> (Lcfu$a;)V <init>
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lqr;)Z makeSureTagIsValid
chv net/minecraft/world/item/WrittenBookItem
	a TITLE_LENGTH
	b TITLE_MAX_LENGTH
	c PAGE_EDIT_LENGTH
	d PAGE_LENGTH
	e MAX_PAGES
	f MAX_GENERATION
	g TAG_TITLE
	h TAG_FILTERED_TITLE
	i TAG_AUTHOR
	j TAG_PAGES
	k TAG_FILTERED_PAGES
	r TAG_GENERATION
	s TAG_RESOLVED
	<init> (Lcfu$a;)V <init>
	a (Lqr;)Z makeSureTagIsValid
	d (Lcfz;)I getGeneration
	k (Lcfz;)I getPageCount
	m (Lcfz;)Lsw; getName
	a (Lcfz;Lcmm;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcij;)Lbdx; useOn
	a (Lcmm;Lbyo;Lbdw;)Lbdy; use
	a (Lcfz;Lds;Lbyo;)Z resolveBookComponents
	a (Lds;Lbyo;Ljava/lang/String;)Ljava/lang/String; resolvePage
	i (Lcfz;)Z isFoil
chw net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a (Ljava/lang/String;)Lchw; byName
	<init> ([Lbfa;)V <init>
	<init> (Ljava/lang/String;[Lbfa;)V <init>
	b (Ljava/lang/String;)Ljava/lang/String; getName
	a ()Ljava/util/List; getEffects
	b ()Z hasInstantEffects
chx net/minecraft/world/item/alchemy/PotionBrewing
	a BREWING_TIME_SECONDS
	b POTION_MIXES
	c CONTAINER_MIXES
	d ALLOWED_CONTAINERS
	e ALLOWED_CONTAINER
	<init> ()V <init>
	a (Lcfz;)Z isIngredient
	b (Lcfz;)Z isContainerIngredient
	c (Lcfz;)Z isPotionIngredient
	a (Lchw;)Z isBrewablePotion
	a (Lcfz;Lcfz;)Z hasMix
	b (Lcfz;Lcfz;)Z hasContainerMix
	c (Lcfz;Lcfz;)Z hasPotionMix
	d (Lcfz;Lcfz;)Lcfz; mix
	a ()V bootStrap
	a (Lcfu;Lcfu;Lcfu;)V addContainerRecipe
	a (Lcfu;)V addContainer
	a (Lchw;Lcfu;Lchw;)V addMix
	d (Lcfz;)Z lambda$static$0
	<clinit> ()V <clinit>
chx$a net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
	<init> (Ljava/lang/Object;Lciz;Ljava/lang/Object;)V <init>
chy net/minecraft/world/item/alchemy/PotionUtils
	a TAG_CUSTOM_POTION_EFFECTS
	b TAG_CUSTOM_POTION_COLOR
	c TAG_POTION
	d EMPTY_COLOR
	e NO_EFFECT
	<init> ()V <init>
	a (Lcfz;)Ljava/util/List; getMobEffects
	a (Lchw;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	a (Lqr;)Ljava/util/List; getAllEffects
	b (Lcfz;)Ljava/util/List; getCustomEffects
	b (Lqr;)Ljava/util/List; getCustomEffects
	a (Lqr;Ljava/util/List;)V getCustomEffects
	c (Lcfz;)I getColor
	a (Lchw;)I getColor
	a (Ljava/util/Collection;)I getColor
	d (Lcfz;)Lchw; getPotion
	c (Lqr;)Lchw; getPotion
	a (Lcfz;Lchw;)Lcfz; setPotion
	a (Lcfz;Ljava/util/Collection;)Lcfz; setCustomEffects
	a (Lcfz;Ljava/util/List;F)V addPotionTooltip
	a (Ljava/util/List;Ljava/util/List;F)V addPotionTooltip
	<clinit> ()V <clinit>
chz net/minecraft/world/item/alchemy/Potions
	a EMPTY_ID
	b EMPTY
	c WATER
	d MUNDANE
	e THICK
	f AWKWARD
	g NIGHT_VISION
	h LONG_NIGHT_VISION
	i INVISIBILITY
	j LONG_INVISIBILITY
	k LEAPING
	l LONG_LEAPING
	m STRONG_LEAPING
	n FIRE_RESISTANCE
	o LONG_FIRE_RESISTANCE
	p SWIFTNESS
	q LONG_SWIFTNESS
	r STRONG_SWIFTNESS
	s SLOWNESS
	t LONG_SLOWNESS
	u STRONG_SLOWNESS
	v TURTLE_MASTER
	w LONG_TURTLE_MASTER
	x STRONG_TURTLE_MASTER
	y WATER_BREATHING
	z LONG_WATER_BREATHING
	A HEALING
	B STRONG_HEALING
	C HARMING
	D STRONG_HARMING
	E POISON
	F LONG_POISON
	G STRONG_POISON
	H REGENERATION
	I LONG_REGENERATION
	J STRONG_REGENERATION
	K STRENGTH
	L LONG_STRENGTH
	M STRONG_STRENGTH
	N WEAKNESS
	O LONG_WEAKNESS
	P LUCK
	Q SLOW_FALLING
	R LONG_SLOW_FALLING
	<init> ()V <init>
	a (Ljava/lang/String;Lchw;)Lchw; register
	a (Lacp;Lchw;)Lchw; register
	<clinit> ()V <clinit>
cia net/minecraft/world/item/alchemy/package-info
cib net/minecraft/world/item/armortrim/ArmorTrim
	a CODEC
	c LOGGER
	b TAG_TRIM_ID
	d UPGRADE_TITLE
	e material
	f pattern
	g innerTexture
	h outerTexture
	<init> (Lhe;Lhe;)V <init>
	c (Lcdk;)Ljava/lang/String; getColorPaletteSuffix
	a (Lhe;Lhe;)Z hasPatternAndMaterial
	a ()Lhe; pattern
	b ()Lhe; material
	a (Lcdk;)Lacq; innerTexture
	b (Lcdk;)Lacq; outerTexture
	equals (Ljava/lang/Object;)Z equals
	a (Lhs;Lcfz;Lcib;)Z setTrim
	a (Lhs;Lcfz;)Ljava/util/Optional; getTrim
	a (Lcfz;Lhs;Ljava/util/List;)V appendUpgradeHoverText
	a (Lhe;Lcdk;)Lacq; lambda$new$4
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$new$3
	b (Lhe;Lcdk;)Lacq; lambda$new$2
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; lambda$new$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cic net/minecraft/world/item/armortrim/TrimMaterial
	c assetName
	d ingredient
	e itemModelIndex
	f overrideArmorMaterials
	g description
	a DIRECT_CODEC
	b CODEC
	<init> (Ljava/lang/String;Lhe;FLjava/util/Map;Lsw;)V <init>
	a (Ljava/lang/String;Lcfu;FLsw;Ljava/util/Map;)Lcic; create
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/String; assetName
	b ()Lhe; ingredient
	c ()F itemModelIndex
	d ()Ljava/util/Map; overrideArmorMaterials
	e ()Lsw; description
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cid net/minecraft/world/item/armortrim/TrimMaterials
	a QUARTZ
	b IRON
	c NETHERITE
	d REDSTONE
	e COPPER
	f GOLD
	g EMERALD
	h DIAMOND
	i LAPIS
	j AMETHYST
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Lhs;Lcfz;)Ljava/util/Optional; getFromIngredient
	a (Lnm;Lacp;Lcfu;Lts;F)V register
	a (Lnm;Lacp;Lcfu;Lts;FLjava/util/Map;)V register
	a (Ljava/lang/String;)Lacp; registryKey
	a (Lcfz;Lhe$c;)Z lambda$getFromIngredient$0
	<clinit> ()V <clinit>
cie net/minecraft/world/item/armortrim/TrimPattern
	c assetId
	d templateItem
	e description
	a DIRECT_CODEC
	b CODEC
	<init> (Lacq;Lhe;Lsw;)V <init>
	a (Lhe;)Lsw; copyWithStyle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacq; assetId
	b ()Lhe; templateItem
	c ()Lsw; description
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cif net/minecraft/world/item/armortrim/TrimPatterns
	a SENTRY
	b DUNE
	c COAST
	d WILD
	e WARD
	f EYE
	g VEX
	h TIDE
	i SNOUT
	j RIB
	k SPIRE
	l WAYFINDER
	m SHAPER
	n SILENCE
	o RAISER
	p HOST
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Lhs;Lcfz;)Ljava/util/Optional; getFromTemplate
	a (Lnm;Lcfu;Lacp;)V register
	a (Ljava/lang/String;)Lacp; registryKey
	a (Lcfz;Lhe$c;)Z lambda$getFromTemplate$0
	<clinit> ()V <clinit>
cig net/minecraft/world/item/armortrim/package-info
cih net/minecraft/world/item/context/BlockPlaceContext
	b relativePos
	a replaceClicked
	<init> (Lbyo;Lbdw;Lcfz;Leee;)V <init>
	<init> (Lcij;)V <init>
	<init> (Lcmm;Lbyo;Lbdw;Lcfz;Leee;)V <init>
	a (Lcih;Lgu;Lha;)Lcih; at
	a ()Lgu; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lha; getNearestLookingDirection
	e ()Lha; getNearestLookingVerticalDirection
	f ()[Lha; getNearestLookingDirections
cii net/minecraft/world/item/context/DirectionalPlaceContext
	b direction
	<init> (Lcmm;Lgu;Lha;Lcfz;Lha;)V <init>
	a ()Lgu; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lha; getNearestLookingDirection
	f ()[Lha; getNearestLookingDirections
	g ()Lha; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
cii$1 net/minecraft/world/item/context/DirectionalPlaceContext$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cij net/minecraft/world/item/context/UseOnContext
	a player
	b hand
	c hitResult
	d level
	e itemStack
	<init> (Lbyo;Lbdw;Leee;)V <init>
	<init> (Lcmm;Lbyo;Lbdw;Lcfz;Leee;)V <init>
	j ()Leee; getHitResult
	a ()Lgu; getClickedPos
	k ()Lha; getClickedFace
	l ()Leei; getClickLocation
	m ()Z isInside
	n ()Lcfz; getItemInHand
	o ()Lbyo; getPlayer
	p ()Lbdw; getHand
	q ()Lcmm; getLevel
	g ()Lha; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
cik net/minecraft/world/item/context/package-info
cil net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	b id
	h category
	c group
	d ingredient
	e result
	f experience
	g cookingTime
	<init> (Lcjf;Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)V <init>
	a (Lbdq;Lcmm;)Z matches
	a (Lbdq;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	a ()Lhn; getIngredients
	b ()F getExperience
	a (Lhs;)Lcfz; getResultItem
	c ()Ljava/lang/String; getGroup
	d ()I getCookingTime
	e ()Lacq; getId
	f ()Lcjf; getType
	g ()Lcir; category
cim net/minecraft/world/item/crafting/ArmorDyeRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cin net/minecraft/world/item/crafting/BannerDuplicateRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (Lcbt;)Lhn; getRemainingItems
	aj_ ()Lcje; getSerializer
	a (II)Z canCraftInDimensions
	a (Lbdq;)Lhn; getRemainingItems
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cio net/minecraft/world/item/crafting/BlastingRecipe
	<init> (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)V <init>
	h ()Lcfz; getToastSymbol
	aj_ ()Lcje; getSerializer
cip net/minecraft/world/item/crafting/BookCloningRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (Lcbt;)Lhn; getRemainingItems
	aj_ ()Lcje; getSerializer
	a (II)Z canCraftInDimensions
	a (Lbdq;)Lhn; getRemainingItems
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
ciq net/minecraft/world/item/crafting/CampfireCookingRecipe
	<init> (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)V <init>
	h ()Lcfz; getToastSymbol
	aj_ ()Lcje; getSerializer
cir net/minecraft/world/item/crafting/CookingBookCategory
	a FOOD
	b BLOCKS
	c MISC
	d CODEC
	e name
	f $VALUES
	values ()[Lcir; values
	valueOf (Ljava/lang/String;)Lcir; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lcir; $values
	<clinit> ()V <clinit>
cis net/minecraft/world/item/crafting/CraftingBookCategory
	a BUILDING
	b REDSTONE
	c EQUIPMENT
	d MISC
	e CODEC
	f name
	g $VALUES
	values ()[Lcis; values
	valueOf (Ljava/lang/String;)Lcis; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Lcis; $values
	<clinit> ()V <clinit>
cit net/minecraft/world/item/crafting/CraftingRecipe
	f ()Lcjf; getType
	d ()Lcis; category
ciu net/minecraft/world/item/crafting/CustomRecipe
	a id
	b category
	<init> (Lacq;Lcis;)V <init>
	e ()Lacq; getId
	ai_ ()Z isSpecial
	a (Lhs;)Lcfz; getResultItem
	d ()Lcis; category
civ net/minecraft/world/item/crafting/DecoratedPotRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (Ldac$a;)Lcfz; createDecoratedPotItem
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
ciw net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	a (Lhs;)Lcfz; getResultItem
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
	<clinit> ()V <clinit>
cix net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
	<clinit> ()V <clinit>
ciy net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	a (Lhs;)Lcfz; getResultItem
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
	a (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
ciz net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b values
	c itemStacks
	d stackingIds
	<init> (Ljava/util/stream/Stream;)V <init>
	a ()[Lcfz; getItems
	a (Lcfz;)Z test
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	a (Lsf;)V toNetwork
	c ()Lcom/google/gson/JsonElement; toJson
	d ()Z isEmpty
	b (Ljava/util/stream/Stream;)Lciz; fromValues
	e ()Lciz; of
	a ([Lcml;)Lciz; of
	a ([Lcfz;)Lciz; of
	a (Ljava/util/stream/Stream;)Lciz; of
	a (Lanl;)Lciz; of
	b (Lsf;)Lciz; fromNetwork
	a (Lcom/google/gson/JsonElement;)Lciz; fromJson
	a (Lcom/google/gson/JsonElement;Z)Lciz; fromJson
	a (Lcom/google/gson/JsonObject;)Lciz$c; valueFromJson
	test (Ljava/lang/Object;)Z test
	b (Lcom/google/gson/JsonElement;)Lciz$c; lambda$fromJson$4
	b (Lcfz;)Z lambda$of$3
	a (I)[Lcfz; lambda$getItems$2
	a (Lciz$c;)Ljava/util/stream/Stream; lambda$getItems$1
	b (I)[Lciz$c; lambda$new$0
	<clinit> ()V <clinit>
ciz$a net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	<init> (Lcfz;)V <init>
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
ciz$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	<init> (Lanl;)V <init>
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
ciz$c net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
cja net/minecraft/world/item/crafting/MapCloningRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjb net/minecraft/world/item/crafting/MapExtendingRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (Lcbt;)Lcfz; findFilledMap
	ai_ ()Z isSpecial
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjc net/minecraft/world/item/crafting/Recipe
	a (Lbdq;Lcmm;)Z matches
	a (Lbdq;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	a (Lhs;)Lcfz; getResultItem
	a (Lbdq;)Lhn; getRemainingItems
	a ()Lhn; getIngredients
	ai_ ()Z isSpecial
	i ()Z showNotification
	c ()Ljava/lang/String; getGroup
	h ()Lcfz; getToastSymbol
	e ()Lacq; getId
	aj_ ()Lcje; getSerializer
	f ()Lcjf; getType
	j ()Z isIncomplete
	a (Lciz;)Z lambda$isIncomplete$0
cjd net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	c recipes
	d byName
	e hasErrors
	<init> ()V <init>
	a (Ljava/util/Map;Lakx;Lban;)V apply
	a ()Z hadErrorsLoading
	a (Lcjf;Lbdq;Lcmm;)Ljava/util/Optional; getRecipeFor
	a (Lcjf;Lbdq;Lcmm;Lacq;)Ljava/util/Optional; getRecipeFor
	a (Lcjf;)Ljava/util/List; getAllRecipesFor
	b (Lcjf;Lbdq;Lcmm;)Ljava/util/List; getRecipesFor
	c (Lcjf;)Ljava/util/Map; byType
	c (Lcjf;Lbdq;Lcmm;)Lhn; getRemainingItemsFor
	a (Lacq;)Ljava/util/Optional; byKey
	b ()Ljava/util/Collection; getRecipes
	d ()Ljava/util/stream/Stream; getRecipeIds
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
	a (Ljava/lang/Iterable;)V replaceRecipes
	b (Lcjf;)Lcjd$a; createCheck
	a (Ljava/lang/Object;Lakx;Lban;)V apply
	a (Ljava/util/Map;Lcom/google/common/collect/ImmutableMap$Builder;Lcjc;)V lambda$replaceRecipes$11
	d (Lcjf;)Ljava/util/Map; lambda$replaceRecipes$10
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$9
	a (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipeIds$8
	b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipes$7
	a (Lcmm;Lcjc;)Ljava/lang/String; lambda$getRecipesFor$6
	a (Lbdq;Lcmm;Lcjc;)Z lambda$getRecipesFor$5
	a (Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$getRecipeFor$4
	a (Lbdq;Lcmm;Ljava/util/Map$Entry;)Z lambda$getRecipeFor$3
	b (Lbdq;Lcmm;Lcjc;)Z lambda$getRecipeFor$2
	b (Ljava/util/Map$Entry;)Ljava/util/Map; lambda$apply$1
	e (Lcjf;)Lcom/google/common/collect/ImmutableMap$Builder; lambda$apply$0
	<clinit> ()V <clinit>
cjd$1 net/minecraft/world/item/crafting/RecipeManager$1
	b lastRecipe
	a val$type
	<init> (Lcjf;)V <init>
	a (Lbdq;Lcmm;)Ljava/util/Optional; getRecipeFor
cjd$a net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	a (Lbdq;Lcmm;)Ljava/util/Optional; getRecipeFor
cje net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	u SMITHING_TRANSFORM
	v SMITHING_TRIM
	w DECORATED_POT_RECIPE
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Ljava/lang/String;Lcje;)Lcje; register
	<clinit> ()V <clinit>
cjf net/minecraft/world/item/crafting/RecipeType
	a CRAFTING
	b SMELTING
	c BLASTING
	d SMOKING
	e CAMPFIRE_COOKING
	f STONECUTTING
	g SMITHING
	a (Ljava/lang/String;)Lcjf; register
	<clinit> ()V <clinit>
cjf$1 net/minecraft/world/item/crafting/RecipeType$1
	h val$name
	<init> (Ljava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
cjg net/minecraft/world/item/crafting/RepairItemRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
	a (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Lckg;)V lambda$assemble$0
cjh net/minecraft/world/item/crafting/ShapedRecipe
	a width
	b height
	c recipeItems
	d result
	e id
	f group
	g category
	h showNotification
	<init> (Lacq;Ljava/lang/String;Lcis;IILhn;Lcfz;Z)V <init>
	<init> (Lacq;Ljava/lang/String;Lcis;IILhn;Lcfz;)V <init>
	e ()Lacq; getId
	aj_ ()Lcje; getSerializer
	c ()Ljava/lang/String; getGroup
	d ()Lcis; category
	a (Lhs;)Lcfz; getResultItem
	a ()Lhn; getIngredients
	i ()Z showNotification
	a (II)Z canCraftInDimensions
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;IIZ)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	k ()I getWidth
	l ()I getHeight
	a ([Ljava/lang/String;Ljava/util/Map;II)Lhn; dissolvePattern
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	j ()Z isIncomplete
	a (Ljava/lang/String;)I firstNonSpace
	b (Ljava/lang/String;)I lastNonSpace
	a (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	a (Lcom/google/gson/JsonObject;)Lcfz; itemStackFromJson
	b (Lcom/google/gson/JsonObject;)Lcfu; itemFromJson
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
	c (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$itemFromJson$2
	a (Lciz;)Z lambda$isIncomplete$1
	b (Lciz;)Z lambda$isIncomplete$0
cjh$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	<init> ()V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcjh; fromJson
	b (Lacq;Lsf;)Lcjh; fromNetwork
	a (Lsf;Lcjh;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cji net/minecraft/world/item/crafting/ShapelessRecipe
	a id
	b group
	c category
	d result
	e ingredients
	<init> (Lacq;Ljava/lang/String;Lcis;Lcfz;Lhn;)V <init>
	e ()Lacq; getId
	aj_ ()Lcje; getSerializer
	c ()Ljava/lang/String; getGroup
	d ()Lcis; category
	a (Lhs;)Lcfz; getResultItem
	a ()Lhn; getIngredients
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cji$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	<init> ()V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcji; fromJson
	a (Lcom/google/gson/JsonArray;)Lhn; itemsFromJson
	b (Lacq;Lsf;)Lcji; fromNetwork
	a (Lsf;Lcji;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cjj net/minecraft/world/item/crafting/ShieldDecorationRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjk net/minecraft/world/item/crafting/ShulkerBoxColoring
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjl net/minecraft/world/item/crafting/SimpleCookingSerializer
	x defaultCookingTime
	y factory
	<init> (Lcjl$a;I)V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcil; fromJson
	b (Lacq;Lsf;)Lcil; fromNetwork
	a (Lsf;Lcil;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
	a (Ljava/lang/String;)Ljava/lang/IllegalStateException; lambda$fromJson$0
cjl$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
	create (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)Lcil; create
cjm net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	x constructor
	<init> (Lcjm$a;)V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcit; fromJson
	b (Lacq;Lsf;)Lcit; fromNetwork
	a (Lsf;Lcit;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cjm$a net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory
	create (Lacq;Lcis;)Lcit; create
cjn net/minecraft/world/item/crafting/SingleItemRecipe
	a ingredient
	b result
	e type
	f serializer
	c id
	d group
	<init> (Lcjf;Lcje;Lacq;Ljava/lang/String;Lciz;Lcfz;)V <init>
	f ()Lcjf; getType
	aj_ ()Lcje; getSerializer
	e ()Lacq; getId
	c ()Ljava/lang/String; getGroup
	a (Lhs;)Lcfz; getResultItem
	a ()Lhn; getIngredients
	a (II)Z canCraftInDimensions
	a (Lbdq;Lhs;)Lcfz; assemble
cjn$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	x factory
	<init> (Lcjn$a$a;)V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcjn; fromJson
	b (Lacq;Lsf;)Lcjn; fromNetwork
	a (Lsf;Lcjn;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cjn$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
	create (Lacq;Ljava/lang/String;Lciz;Lcfz;)Lcjn; create
cjo net/minecraft/world/item/crafting/SmeltingRecipe
	<init> (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)V <init>
	h ()Lcfz; getToastSymbol
	aj_ ()Lcje; getSerializer
cjp net/minecraft/world/item/crafting/SmithingRecipe
	f ()Lcjf; getType
	a (II)Z canCraftInDimensions
	h ()Lcfz; getToastSymbol
	a (Lcfz;)Z isTemplateIngredient
	b (Lcfz;)Z isBaseIngredient
	c (Lcfz;)Z isAdditionIngredient
cjq net/minecraft/world/item/crafting/SmithingTransformRecipe
	a id
	b template
	c base
	d addition
	e result
	<init> (Lacq;Lciz;Lciz;Lciz;Lcfz;)V <init>
	a (Lbdq;Lcmm;)Z matches
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lhs;)Lcfz; getResultItem
	a (Lcfz;)Z isTemplateIngredient
	b (Lcfz;)Z isBaseIngredient
	c (Lcfz;)Z isAdditionIngredient
	e ()Lacq; getId
	aj_ ()Lcje; getSerializer
	j ()Z isIncomplete
cjq$a net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	<init> ()V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcjq; fromJson
	b (Lacq;Lsf;)Lcjq; fromNetwork
	a (Lsf;Lcjq;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cjr net/minecraft/world/item/crafting/SmithingTrimRecipe
	a id
	b template
	c base
	d addition
	<init> (Lacq;Lciz;Lciz;Lciz;)V <init>
	a (Lbdq;Lcmm;)Z matches
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lhs;)Lcfz; getResultItem
	a (Lcfz;)Z isTemplateIngredient
	b (Lcfz;)Z isBaseIngredient
	c (Lcfz;)Z isAdditionIngredient
	e ()Lacq; getId
	aj_ ()Lcje; getSerializer
	j ()Z isIncomplete
cjr$a net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	<init> ()V <init>
	b (Lacq;Lcom/google/gson/JsonObject;)Lcjr; fromJson
	b (Lacq;Lsf;)Lcjr; fromNetwork
	a (Lsf;Lcjr;)V toNetwork
	a (Lsf;Lcjc;)V toNetwork
	a (Lacq;Lsf;)Lcjc; fromNetwork
	a (Lacq;Lcom/google/gson/JsonObject;)Lcjc; fromJson
cjs net/minecraft/world/item/crafting/SmokingRecipe
	<init> (Lacq;Ljava/lang/String;Lcir;Lciz;Lcfz;FI)V <init>
	h ()Lcfz; getToastSymbol
	aj_ ()Lcje; getSerializer
cjt net/minecraft/world/item/crafting/StonecutterRecipe
	<init> (Lacq;Ljava/lang/String;Lciz;Lcfz;)V <init>
	a (Lbdq;Lcmm;)Z matches
	h ()Lcfz; getToastSymbol
cju net/minecraft/world/item/crafting/SuspiciousStewRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjv net/minecraft/world/item/crafting/TippedArrowRecipe
	<init> (Lacq;Lcis;)V <init>
	a (Lcbt;Lcmm;)Z matches
	a (Lcbt;Lhs;)Lcfz; assemble
	a (II)Z canCraftInDimensions
	aj_ ()Lcje; getSerializer
	a (Lbdq;Lhs;)Lcfz; assemble
	a (Lbdq;Lcmm;)Z matches
cjw net/minecraft/world/item/crafting/package-info
cjx net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
cjy net/minecraft/world/item/enchantment/ArrowFireEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
cjz net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a (Lckg;)Z checkCompatibility
cka net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckb net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lckg;)Z checkCompatibility
ckc net/minecraft/world/item/enchantment/BindingCurseEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	c ()Z isCurse
	a (Lcfz;)Z canEnchant
ckd net/minecraft/world/item/enchantment/DamageEnchantment
	a ALL
	b UNDEAD
	c ARTHROPODS
	g NAMES
	h MIN_COST
	i LEVEL_COST
	j LEVEL_COST_SPAN
	d type
	<init> (Lckg$a;I[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILbge;)F getDamageBonus
	a (Lckg;)Z checkCompatibility
	a (Lcfz;)Z canEnchant
	a (Lbfz;Lbfj;I)V doPostAttack
	<clinit> ()V <clinit>
cke net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lcfz;)Z canEnchant
	a (Lcfz;ILapf;)Z shouldIgnoreDurabilityDrop
ckf net/minecraft/world/item/enchantment/DiggingEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lcfz;)Z canEnchant
ckg net/minecraft/world/item/enchantment/Enchantment
	a slots
	b rarity
	e category
	f descriptionId
	c (I)Lckg; byId
	<init> (Lckg$a;Lckh;[Lbfo;)V <init>
	a (Lbfz;)Ljava/util/Map; getSlotItems
	d ()Lckg$a; getRarity
	e ()I getMinLevel
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	a (ILben;)I getDamageProtection
	a (ILbge;)F getDamageBonus
	b (Lckg;)Z isCompatibleWith
	a (Lckg;)Z checkCompatibility
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	d (I)Lsw; getFullname
	a (Lcfz;)Z canEnchant
	a (Lbfz;Lbfj;I)V doPostAttack
	b (Lbfz;Lbfj;I)V doPostHurt
	b ()Z isTreasureOnly
	c ()Z isCurse
	h ()Z isTradeable
	i ()Z isDiscoverable
ckg$a net/minecraft/world/item/enchantment/Enchantment$Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d VERY_RARE
	e weight
	f $VALUES
	values ()[Lckg$a; values
	valueOf (Ljava/lang/String;)Lckg$a; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getWeight
	b ()[Lckg$a; $values
	<clinit> ()V <clinit>
ckh net/minecraft/world/item/enchantment/EnchantmentCategory
	a ARMOR
	b ARMOR_FEET
	c ARMOR_LEGS
	d ARMOR_CHEST
	e ARMOR_HEAD
	f WEAPON
	g DIGGER
	h FISHING_ROD
	i TRIDENT
	j BREAKABLE
	k BOW
	l WEARABLE
	m CROSSBOW
	n VANISHABLE
	o $VALUES
	values ()[Lckh; values
	valueOf (Ljava/lang/String;)Lckh; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
	a ()[Lckh; $values
	<clinit> ()V <clinit>
ckh$1 net/minecraft/world/item/enchantment/EnchantmentCategory$1
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$2 net/minecraft/world/item/enchantment/EnchantmentCategory$10
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$3 net/minecraft/world/item/enchantment/EnchantmentCategory$11
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$4 net/minecraft/world/item/enchantment/EnchantmentCategory$12
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$5 net/minecraft/world/item/enchantment/EnchantmentCategory$13
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$6 net/minecraft/world/item/enchantment/EnchantmentCategory$14
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$7 net/minecraft/world/item/enchantment/EnchantmentCategory$2
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$8 net/minecraft/world/item/enchantment/EnchantmentCategory$3
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$9 net/minecraft/world/item/enchantment/EnchantmentCategory$4
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$10 net/minecraft/world/item/enchantment/EnchantmentCategory$5
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$11 net/minecraft/world/item/enchantment/EnchantmentCategory$6
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$12 net/minecraft/world/item/enchantment/EnchantmentCategory$7
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$13 net/minecraft/world/item/enchantment/EnchantmentCategory$8
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
ckh$14 net/minecraft/world/item/enchantment/EnchantmentCategory$9
	<init> (Ljava/lang/String;I)V <init>
	a (Lcfu;)Z canEnchant
cki net/minecraft/world/item/enchantment/EnchantmentHelper
	a TAG_ENCH_ID
	b TAG_ENCH_LEVEL
	c SWIFT_SNEAK_EXTRA_FACTOR
	<init> ()V <init>
	a (Lacq;I)Lqr; storeEnchantment
	a (Lqr;I)V setEnchantmentLevel
	a (Lqr;)I getEnchantmentLevel
	b (Lqr;)Lacq; getEnchantmentId
	a (Lckg;)Lacq; getEnchantmentId
	a (Lckg;Lcfz;)I getItemEnchantmentLevel
	a (Lcfz;)Ljava/util/Map; getEnchantments
	a (Lqx;)Ljava/util/Map; deserializeEnchantments
	a (Ljava/util/Map;Lcfz;)V setEnchantments
	a (Lcki$a;Lcfz;)V runIterationOnItem
	a (Lcki$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Ljava/lang/Iterable;Lben;)I getDamageProtection
	a (Lcfz;Lbge;)F getDamageBonus
	a (Lbfz;)F getSweepingDamageRatio
	a (Lbfz;Lbfj;)V doPostHurtEffects
	b (Lbfz;Lbfj;)V doPostDamageEffects
	a (Lckg;Lbfz;)I getEnchantmentLevel
	b (Lbfz;)F getSneakingSpeedBonus
	c (Lbfz;)I getKnockbackBonus
	d (Lbfz;)I getFireAspect
	e (Lbfz;)I getRespiration
	f (Lbfz;)I getDepthStrider
	g (Lbfz;)I getBlockEfficiency
	b (Lcfz;)I getFishingLuckBonus
	c (Lcfz;)I getFishingSpeedBonus
	h (Lbfz;)I getMobLooting
	i (Lbfz;)Z hasAquaAffinity
	j (Lbfz;)Z hasFrostWalker
	k (Lbfz;)Z hasSoulSpeed
	d (Lcfz;)Z hasBindingCurse
	e (Lcfz;)Z hasVanishingCurse
	f (Lcfz;)Z hasSilkTouch
	g (Lcfz;)I getLoyalty
	h (Lcfz;)I getRiptide
	i (Lcfz;)Z hasChanneling
	b (Lckg;Lbfz;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lckg;Lbfz;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lapf;IILcfz;)I getEnchantmentCost
	a (Lapf;Lcfz;IZ)Lcfz; enchantItem
	b (Lapf;Lcfz;IZ)Ljava/util/List; selectEnchantment
	a (Ljava/util/List;Lckj;)V filterCompatibleEnchantments
	a (Ljava/util/Collection;Lckg;)Z isEnchantmentCompatible
	a (ILcfz;Z)Ljava/util/List; getAvailableEnchantmentResults
	j (Lcfz;)Z lambda$getRandomItemWith$6
	a (Lbfz;Lbfj;Lckg;I)V lambda$doPostDamageEffects$5
	b (Lbfz;Lbfj;Lckg;I)V lambda$doPostHurtEffects$4
	a (Lorg/apache/commons/lang3/mutable/MutableFloat;Lbge;Lckg;I)V lambda$getDamageBonus$3
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lben;Lckg;I)V lambda$getDamageProtection$2
	a (Lcki$a;Lqr;Lckg;)V lambda$runIterationOnItem$1
	a (Ljava/util/Map;Lqr;Lckg;)V lambda$deserializeEnchantments$0
cki$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	accept (Lckg;I)V accept
ckj net/minecraft/world/item/enchantment/EnchantmentInstance
	a enchantment
	b level
	<init> (Lckg;I)V <init>
ckk net/minecraft/world/item/enchantment/Enchantments
	N ARMOR_SLOTS
	a ALL_DAMAGE_PROTECTION
	b FIRE_PROTECTION
	c FALL_PROTECTION
	d BLAST_PROTECTION
	e PROJECTILE_PROTECTION
	f RESPIRATION
	g AQUA_AFFINITY
	h THORNS
	i DEPTH_STRIDER
	j FROST_WALKER
	k BINDING_CURSE
	l SOUL_SPEED
	m SWIFT_SNEAK
	n SHARPNESS
	o SMITE
	p BANE_OF_ARTHROPODS
	q KNOCKBACK
	r FIRE_ASPECT
	s MOB_LOOTING
	t SWEEPING_EDGE
	u BLOCK_EFFICIENCY
	v SILK_TOUCH
	w UNBREAKING
	x BLOCK_FORTUNE
	y POWER_ARROWS
	z PUNCH_ARROWS
	A FLAMING_ARROWS
	B INFINITY_ARROWS
	C FISHING_LUCK
	D FISHING_SPEED
	E LOYALTY
	F IMPALING
	G RIPTIDE
	H CHANNELING
	I MULTISHOT
	J QUICK_CHARGE
	K PIERCING
	L MENDING
	M VANISHING_CURSE
	<init> ()V <init>
	a (Ljava/lang/String;Lckg;)Lckg; register
	<clinit> ()V <clinit>
ckl net/minecraft/world/item/enchantment/FireAspectEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckm net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	<init> (Lckg$a;Lckh;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckn net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	a ()I getMaxLevel
	a (Lbfz;Lcmm;Lgu;I)V onEntityMoved
	a (Lckg;)Z checkCompatibility
cko net/minecraft/world/item/enchantment/KnockbackEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckp net/minecraft/world/item/enchantment/LootBonusEnchantment
	<init> (Lckg$a;Lckh;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lckg;)Z checkCompatibility
ckq net/minecraft/world/item/enchantment/MendingEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
ckr net/minecraft/world/item/enchantment/MultiShotEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a (Lckg;)Z checkCompatibility
cks net/minecraft/world/item/enchantment/OxygenEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckt net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	<init> (Lckg$a;Lckt$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILben;)I getDamageProtection
	a (Lckg;)Z checkCompatibility
	a (Lbfz;I)I getFireAfterDampener
	a (Lbfz;D)D getExplosionKnockbackAfterDampener
ckt$a net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	a ALL
	b FIRE
	c FALL
	d EXPLOSION
	e PROJECTILE
	f minCost
	g levelCost
	h $VALUES
	values ()[Lckt$a; values
	valueOf (Ljava/lang/String;)Lckt$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a ()I getMinCost
	b ()I getLevelCost
	c ()[Lckt$a; $values
	<clinit> ()V <clinit>
cku net/minecraft/world/item/enchantment/QuickChargeEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
ckv net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	h ()Z isTradeable
	i ()Z isDiscoverable
	a ()I getMaxLevel
ckw net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	e (I)F getSweepingDamageRatio
ckx net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	h ()Z isTradeable
	i ()Z isDiscoverable
	a ()I getMaxLevel
cky net/minecraft/world/item/enchantment/ThornsEnchantment
	a CHANCE_PER_LEVEL
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lcfz;)Z canEnchant
	b (Lbfz;Lbfj;I)V doPostHurt
	a (ILapf;)Z shouldHit
	b (ILapf;)I getDamage
	a (Ljava/util/Map$Entry;Lbfz;)V lambda$doPostHurt$0
ckz net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
cla net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (ILbge;)F getDamageBonus
clb net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
clc net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lckg;)Z checkCompatibility
cld net/minecraft/world/item/enchantment/UntouchingEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a (Lckg;)Z checkCompatibility
cle net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	b ()Z isTreasureOnly
	c ()Z isCurse
clf net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
	a ()I getMaxLevel
	a (Lckg;)Z checkCompatibility
clg net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	<init> (Lckg$a;[Lbfo;)V <init>
	a (I)I getMinCost
	b (I)I getMaxCost
clh net/minecraft/world/item/enchantment/package-info
cli net/minecraft/world/item/package-info
clj net/minecraft/world/item/trading/Merchant
	f (Lbyo;)V setTradingPlayer
	fY ()Lbyo; getTradingPlayer
	ga ()Lcll; getOffers
	a (Lcll;)V overrideOffers
	a (Lclk;)V notifyTrade
	l (Lcfz;)V notifyTradeUpdated
	r ()I getVillagerXp
	t (I)V overrideXp
	gb ()Z showProgressBar
	gc ()Lamg; getNotifyTradeSound
	gk ()Z canRestock
	a (Lbyo;Lsw;I)V openTradingScreen
	gg ()Z isClientSide
	a (ILbyn;Lbyo;)Lcbf; lambda$openTradingScreen$0
clk net/minecraft/world/item/trading/MerchantOffer
	a baseCostA
	b costB
	c result
	d uses
	e maxUses
	f rewardExp
	g specialPriceDiff
	h demand
	i priceMultiplier
	j xp
	<init> (Lqr;)V <init>
	<init> (Lcfz;Lcfz;IIF)V <init>
	<init> (Lcfz;Lcfz;Lcfz;IIF)V <init>
	<init> (Lcfz;Lcfz;Lcfz;IIIF)V <init>
	<init> (Lcfz;Lcfz;Lcfz;IIIFI)V <init>
	a ()Lcfz; getBaseCostA
	b ()Lcfz; getCostA
	c ()Lcfz; getCostB
	d ()Lcfz; getResult
	e ()V updateDemand
	f ()Lcfz; assemble
	g ()I getUses
	h ()V resetUses
	i ()I getMaxUses
	j ()V increaseUses
	k ()I getDemand
	a (I)V addToSpecialPriceDiff
	l ()V resetSpecialPriceDiff
	m ()I getSpecialPriceDiff
	b (I)V setSpecialPriceDiff
	n ()F getPriceMultiplier
	o ()I getXp
	p ()Z isOutOfStock
	q ()V setToOutOfStock
	r ()Z needsRestock
	s ()Z shouldRewardExp
	t ()Lqr; createTag
	a (Lcfz;Lcfz;)Z satisfiedBy
	c (Lcfz;Lcfz;)Z isRequiredItem
	b (Lcfz;Lcfz;)Z take
cll net/minecraft/world/item/trading/MerchantOffers
	<init> ()V <init>
	<init> (I)V <init>
	<init> (Lqr;)V <init>
	a (Lcfz;Lcfz;I)Lclk; getRecipeFor
	a (Lsf;)V writeToStream
	b (Lsf;)Lcll; createFromStream
	a ()Lqr; createTag
	c (Lsf;)Lclk; lambda$createFromStream$1
	a (Lsf;Lclk;)V lambda$writeToStream$0
clm net/minecraft/world/item/trading/package-info
cln net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	d lastExecution
	e updateLastExecution
	f successCount
	g trackOutput
	h lastOutput
	i command
	j name
	<init> ()V <init>
	k ()I getSuccessCount
	a (I)V setSuccessCount
	l ()Lsw; getLastOutput
	a (Lqr;)Lqr; save
	b (Lqr;)V load
	a (Ljava/lang/String;)V setCommand
	m ()Ljava/lang/String; getCommand
	a (Lcmm;)Z performCommand
	n ()Lsw; getName
	b (Lsw;)V setName
	a (Lsw;)V sendSystemMessage
	e ()Laif; getLevel
	f ()V onUpdated
	c (Lsw;)V setLastOutput
	a (Z)V setTrackOutput
	o ()Z isTrackOutput
	a (Lbyo;)Lbdx; usedBy
	g ()Leei; getPosition
	i ()Lds; createCommandSourceStack
	e_ ()Z acceptsSuccess
	q_ ()Z acceptsFailure
	N_ ()Z shouldInformAdmins
	j ()Z isValid
	h ()Ljava/lang/String; lambda$performCommand$1
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$performCommand$0
	<clinit> ()V <clinit>
clo net/minecraft/world/level/BaseSpawner
	b SPAWN_DATA_TAG
	a LOGGER
	c EVENT_SPAWN
	d spawnDelay
	e spawnPotentials
	f nextSpawnData
	g spin
	h oSpin
	i minSpawnDelay
	j maxSpawnDelay
	k spawnCount
	l displayEntity
	m maxNearbyEntities
	n requiredPlayerRange
	o spawnRange
	<init> ()V <init>
	a (Lbfn;Lcmm;Lapf;Lgu;)V setEntityId
	b (Lcmm;Lgu;)Z isNearPlayer
	a (Lcmm;Lgu;)V clientTick
	a (Laif;Lgu;)V serverTick
	c (Lcmm;Lgu;)V delay
	a (Lcmm;Lgu;Lqr;)V load
	a (Lqr;)Lqr; save
	a (Lcmm;Lapf;Lgu;)Lbfj; getOrCreateDisplayEntity
	a (Lcmm;I)Z onEventTriggered
	a (Lcmm;Lgu;Lcnd;)V setNextSpawnData
	b (Lcmm;Lapf;Lgu;)Lcnd; getOrCreateNextSpawnData
	a (Lcmm;Lgu;I)V broadcastEvent
	a ()D getSpin
	b ()D getoSpin
	c ()Ljava/lang/IllegalStateException; lambda$save$4
	a (Ljava/lang/String;)V lambda$load$3
	b (Ljava/lang/String;)V lambda$load$2
	a (Lcmm;Lgu;Lbcj$b;)V lambda$delay$1
	a (DDDLbfj;)Lbfj; lambda$serverTick$0
	<clinit> ()V <clinit>
clp net/minecraft/world/level/BlockAndTintGetter
	a (Lha;Z)F getShade
	s_ ()Ldwt; getLightEngine
	a (Lgu;Lclx;)I getBlockTint
	a (Lcmv;Lgu;)I getBrightness
	b (Lgu;I)I getRawBrightness
	g (Lgu;)Z canSeeSky
clq net/minecraft/world/level/BlockCollisions
	a box
	b context
	c cursor
	d pos
	e entityShape
	f collisionGetter
	g onlySuffocatingBlocks
	h cachedBlockGetter
	i cachedBlockGetterPos
	j resultProvider
	<init> (Lclw;Lbfj;Leed;ZLjava/util/function/BiFunction;)V <init>
	a (II)Lcls; getChunk
	computeNext ()Ljava/lang/Object; computeNext
clr net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	<init> (Lgu;Lcpn;II)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Lcpn; block
	c ()I paramA
	d ()I paramB
cls net/minecraft/world/level/BlockGetter
	c_ (Lgu;)Lczn; getBlockEntity
	a (Lgu;Lczp;)Ljava/util/Optional; getBlockEntity
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	h (Lgu;)I getLightEmission
	M ()I getMaxLightLevel
	a (Leed;)Ljava/util/stream/Stream; getBlockStates
	a (Lclu;)Leee; isBlockInLine
	a (Lclv;)Leee; clip
	a (Leei;Leei;Lgu;Lefb;Ldcb;)Leee; clipWithInteractionOverride
	a (Lefb;Ljava/util/function/Supplier;)D getBlockFloorHeight
	i (Lgu;)D getBlockFloorHeight
	a (Leei;Leei;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	f (Lgu;)Lefb; lambda$getBlockFloorHeight$4
	b (Lclv;)Leee; lambda$clip$3
	a (Lclv;Lgu;)Leee; lambda$clip$2
	b (Lclu;)Leee; lambda$isBlockInLine$1
	a (Lclu;Lgu;)Leee; lambda$isBlockInLine$0
clt net/minecraft/world/level/ChunkPos
	g SAFETY_MARGIN
	a INVALID_CHUNK_POS
	b ZERO
	h COORD_BITS
	i COORD_MASK
	j REGION_BITS
	c REGION_SIZE
	k REGION_MASK
	d REGION_MAX_INDEX
	e x
	f z
	l HASH_A
	m HASH_C
	n HASH_Z_XOR
	<init> (II)V <init>
	<init> (Lgu;)V <init>
	<init> (J)V <init>
	a (II)Lclt; minFromRegion
	b (II)Lclt; maxFromRegion
	a ()J toLong
	c (II)J asLong
	a (Lgu;)J asLong
	a (J)I getX
	b (J)I getZ
	hashCode ()I hashCode
	d (II)I hash
	equals (Ljava/lang/Object;)Z equals
	b ()I getMiddleBlockX
	c ()I getMiddleBlockZ
	d ()I getMinBlockX
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	h ()I getRegionX
	i ()I getRegionZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	a (III)Lgu; getBlockAt
	a (I)I getBlockX
	b (I)I getBlockZ
	c (I)Lgu; getMiddleBlockPosition
	toString ()Ljava/lang/String; toString
	l ()Lgu; getWorldPosition
	a (Lclt;)I getChessboardDistance
	a (Lclt;I)Ljava/util/stream/Stream; rangeClosed
	a (Lclt;Lclt;)Ljava/util/stream/Stream; rangeClosed
	<clinit> ()V <clinit>
clt$1 net/minecraft/world/level/ChunkPos$1
	e pos
	a val$from
	b val$to
	c val$zDiff
	d val$xDiff
	<init> (JILclt;Lclt;II)V <init>
	tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
clu net/minecraft/world/level/ClipBlockStateContext
	a from
	b to
	c block
	<init> (Leei;Leei;Ljava/util/function/Predicate;)V <init>
	a ()Leei; getTo
	b ()Leei; getFrom
	c ()Ljava/util/function/Predicate; isTargetBlock
clv net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	<init> (Leei;Leei;Lclv$a;Lclv$b;Lbfj;)V <init>
	a ()Leei; getTo
	b ()Leei; getFrom
	a (Ldcb;Lcls;Lgu;)Lefb; getBlockShape
	a (Ldxe;Lcls;Lgu;)Lefb; getFluidShape
clv$a net/minecraft/world/level/ClipContext$Block
	a COLLIDER
	b OUTLINE
	c VISUAL
	d FALLDAMAGE_RESETTING
	e shapeGetter
	f $VALUES
	values ()[Lclv$a; values
	valueOf (Ljava/lang/String;)Lclv$a; valueOf
	<init> (Ljava/lang/String;ILclv$c;)V <init>
	get (Ldcb;Lcls;Lgu;Leen;)Lefb; get
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; lambda$static$0
	a ()[Lclv$a; $values
	<clinit> ()V <clinit>
clv$b net/minecraft/world/level/ClipContext$Fluid
	a NONE
	b SOURCE_ONLY
	c ANY
	d WATER
	e canPick
	f $VALUES
	values ()[Lclv$b; values
	valueOf (Ljava/lang/String;)Lclv$b; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/Predicate;)V <init>
	a (Ldxe;)Z canPick
	b (Ldxe;)Z lambda$static$2
	c (Ldxe;)Z lambda$static$1
	d (Ldxe;)Z lambda$static$0
	a ()[Lclv$b; $values
	<clinit> ()V <clinit>
clv$c net/minecraft/world/level/ClipContext$ShapeGetter
	get (Ldcb;Lcls;Lgu;Leen;)Lefb; get
clw net/minecraft/world/level/CollisionGetter
	w_ ()Ldds; getWorldBorder
	c (II)Lcls; getChunkForCollisions
	a (Lbfj;Lefb;)Z isUnobstructed
	a (Ldcb;Lgu;Leen;)Z isUnobstructed
	f (Lbfj;)Z isUnobstructed
	b (Leed;)Z noCollision
	g (Lbfj;)Z noCollision
	a (Lbfj;Leed;)Z noCollision
	b (Lbfj;Leed;)Ljava/util/List; getEntityCollisions
	c (Lbfj;Leed;)Ljava/lang/Iterable; getCollisions
	d (Lbfj;Leed;)Ljava/lang/Iterable; getBlockCollisions
	g (Lbfj;Leed;)Lefb; borderCollision
	e (Lbfj;Leed;)Z collidesWithSuffocatingBlock
	f (Lbfj;Leed;)Ljava/util/Optional; findSupportingBlock
	a (Lbfj;Lefb;Leei;DDD)Ljava/util/Optional; findFreePosition
	a (DDDLeed;)Leed; lambda$findFreePosition$6
	a (Lefb;)Ljava/util/stream/Stream; lambda$findFreePosition$5
	b (Lefb;)Z lambda$findFreePosition$4
	a (Lgu$a;Lefb;)Lgu; lambda$findSupportingBlock$3
	b (Lgu$a;Lefb;)Lefb; lambda$collidesWithSuffocatingBlock$2
	h (Lbfj;Leed;)Ljava/util/Iterator; lambda$getBlockCollisions$1
	c (Lgu$a;Lefb;)Lefb; lambda$getBlockCollisions$0
clx net/minecraft/world/level/ColorResolver
	getColor (Lcnk;DD)I getColor
cly net/minecraft/world/level/CommonLevelAccessor
	a (Lgu;Lczp;)Ljava/util/Optional; getBlockEntity
	b (Lbfj;Leed;)Ljava/util/List; getEntityCollisions
	a (Lbfj;Lefb;)Z isUnobstructed
	a (Ldhk$a;Lgu;)Lgu; getHeightmapPos
clz net/minecraft/world/level/CustomSpawner
	a (Laif;ZZ)I tick
cma net/minecraft/world/level/DataPackConfig
	a DEFAULT
	b CODEC
	c enabled
	d disabled
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	a ()Ljava/util/List; getEnabled
	b ()Ljava/util/List; getDisabled
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcma;)Ljava/util/List; lambda$static$1
	b (Lcma;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
cmb net/minecraft/world/level/EmptyBlockGetter
	a INSTANCE
	b $VALUES
	values ()[Lcmb; values
	valueOf (Ljava/lang/String;)Lcmb; valueOf
	<init> (Ljava/lang/String;I)V <init>
	c_ (Lgu;)Lczn; getBlockEntity
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
	a ()[Lcmb; $values
	<clinit> ()V <clinit>
cmc net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	a source
	<init> (Lbfj;)V <init>
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;)Ljava/util/Optional; getBlockExplosionResistance
	a (Lcme;Lcls;Lgu;Ldcb;F)Z shouldBlockExplode
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;Ljava/lang/Float;)Ljava/lang/Float; lambda$getBlockExplosionResistance$0
cmd net/minecraft/world/level/EntityGetter
	a (Lbfj;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ldfz;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ljava/lang/Class;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	v ()Ljava/util/List; players
	a_ (Lbfj;Leed;)Ljava/util/List; getEntities
	a (Lbfj;Lefb;)Z isUnobstructed
	a (Ljava/lang/Class;Leed;)Ljava/util/List; getEntitiesOfClass
	b (Lbfj;Leed;)Ljava/util/List; getEntityCollisions
	a (DDDDLjava/util/function/Predicate;)Lbyo; getNearestPlayer
	a (Lbfj;D)Lbyo; getNearestPlayer
	a (DDDDZ)Lbyo; getNearestPlayer
	a (DDDD)Z hasNearbyAlivePlayer
	a (Lbqm;Lbfz;)Lbyo; getNearestPlayer
	a (Lbqm;Lbfz;DDD)Lbyo; getNearestPlayer
	a (Lbqm;DDD)Lbyo; getNearestPlayer
	a (Ljava/lang/Class;Lbqm;Lbfz;DDDLeed;)Lbfz; getNearestEntity
	a (Ljava/util/List;Lbqm;Lbfz;DDD)Lbfz; getNearestEntity
	a (Lbqm;Lbfz;Leed;)Ljava/util/List; getNearbyPlayers
	a (Ljava/lang/Class;Lbqm;Lbfz;Leed;)Ljava/util/List; getNearbyEntities
	b (Ljava/util/UUID;)Lbyo; getPlayerByUUID
	a (Lbfz;)Z lambda$getNearbyEntities$1
	b (Lbfz;)Z lambda$getNearestEntity$0
cme net/minecraft/world/level/Explosion
	a EXPLOSION_DAMAGE_CALCULATOR
	b MAX_DROPS_PER_COMBINED_STACK
	c fire
	d blockInteraction
	e random
	f level
	g x
	h y
	i z
	j source
	k radius
	l damageSource
	m damageCalculator
	n toBlow
	o hitPlayers
	<init> (Lcmm;Lbfj;DDDFLjava/util/List;)V <init>
	<init> (Lcmm;Lbfj;DDDFZLcme$a;Ljava/util/List;)V <init>
	<init> (Lcmm;Lbfj;DDDFZLcme$a;)V <init>
	<init> (Lcmm;Lbfj;Lben;Lcmf;DDDFZLcme$a;)V <init>
	a (Lbfj;)Lcmf; makeDamageCalculator
	a (Leei;Lbfj;)F getSeenPercent
	a ()V explode
	a (Z)V finalizeExplosion
	b ()Z interactsWithBlocks
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lcfz;Lgu;)V addBlockDrops
	c ()Lben; getDamageSource
	d ()Ljava/util/Map; getHitPlayers
	e ()Lbfz; getIndirectSourceEntity
	f ()Lbfj; getDirectSourceEntity
	g ()V clearToBlow
	h ()Ljava/util/List; getToBlow
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lgu;Lcfz;)V lambda$finalizeExplosion$0
	<clinit> ()V <clinit>
cme$a net/minecraft/world/level/Explosion$BlockInteraction
	a KEEP
	b DESTROY
	c DESTROY_WITH_DECAY
	d $VALUES
	values ()[Lcme$a; values
	valueOf (Ljava/lang/String;)Lcme$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcme$a; $values
	<clinit> ()V <clinit>
cmf net/minecraft/world/level/ExplosionDamageCalculator
	<init> ()V <init>
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;)Ljava/util/Optional; getBlockExplosionResistance
	a (Lcme;Lcls;Lgu;Ldcb;F)Z shouldBlockExplode
cmg net/minecraft/world/level/FoliageColor
	a pixels
	<init> ()V <init>
	a ([I)V init
	a (DD)I get
	a ()I getEvergreenColor
	b ()I getBirchColor
	c ()I getDefaultColor
	d ()I getMangroveColor
	<clinit> ()V <clinit>
cmh net/minecraft/world/level/ForcedChunksSavedData
	a FILE_ID
	b TAG_FORCED
	c chunks
	<init> (Lit/unimi/dsi/fastutil/longs/LongSet;)V <init>
	<init> ()V <init>
	b (Lqr;)Lcmh; load
	a (Lqr;)Lqr; save
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
cmi net/minecraft/world/level/GameRules
	a DEFAULT_RANDOM_TICK_SPEED
	U LOGGER
	V GAME_RULE_TYPES
	b RULE_DOFIRETICK
	c RULE_MOBGRIEFING
	d RULE_KEEPINVENTORY
	e RULE_DOMOBSPAWNING
	f RULE_DOMOBLOOT
	g RULE_DOBLOCKDROPS
	h RULE_DOENTITYDROPS
	i RULE_COMMANDBLOCKOUTPUT
	j RULE_NATURAL_REGENERATION
	k RULE_DAYLIGHT
	l RULE_LOGADMINCOMMANDS
	m RULE_SHOWDEATHMESSAGES
	n RULE_RANDOMTICKING
	o RULE_SENDCOMMANDFEEDBACK
	p RULE_REDUCEDDEBUGINFO
	q RULE_SPECTATORSGENERATECHUNKS
	r RULE_SPAWN_RADIUS
	s RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	t RULE_MAX_ENTITY_CRAMMING
	u RULE_WEATHER_CYCLE
	v RULE_LIMITED_CRAFTING
	w RULE_MAX_COMMAND_CHAIN_LENGTH
	x RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	y RULE_ANNOUNCE_ADVANCEMENTS
	z RULE_DISABLE_RAIDS
	A RULE_DOINSOMNIA
	B RULE_DO_IMMEDIATE_RESPAWN
	C RULE_DROWNING_DAMAGE
	D RULE_FALL_DAMAGE
	E RULE_FIRE_DAMAGE
	F RULE_FREEZE_DAMAGE
	G RULE_DO_PATROL_SPAWNING
	H RULE_DO_TRADER_SPAWNING
	I RULE_DO_WARDEN_SPAWNING
	J RULE_FORGIVE_DEAD_PLAYERS
	K RULE_UNIVERSAL_ANGER
	L RULE_PLAYERS_SLEEPING_PERCENTAGE
	M RULE_BLOCK_EXPLOSION_DROP_DECAY
	N RULE_MOB_EXPLOSION_DROP_DECAY
	O RULE_TNT_EXPLOSION_DROP_DECAY
	P RULE_SNOW_ACCUMULATION_HEIGHT
	Q RULE_WATER_SOURCE_CONVERSION
	R RULE_LAVA_SOURCE_CONVERSION
	S RULE_GLOBAL_SOUND_EVENTS
	T RULE_DO_VINES_SPREAD
	W rules
	a (Ljava/lang/String;Lcmi$b;Lcmi$f;)Lcmi$e; register
	<init> (Lcom/mojang/serialization/DynamicLike;)V <init>
	<init> ()V <init>
	<init> (Ljava/util/Map;)V <init>
	a (Lcmi$e;)Lcmi$g; getRule
	a ()Lqr; createTag
	a (Lcom/mojang/serialization/DynamicLike;)V loadFromTag
	b ()Lcmi; copy
	a (Lcmi$c;)V visitGameRuleTypes
	a (Lcmi$c;Lcmi$e;Lcmi$f;)V callVisitorCap
	a (Lcmi;Lnet/minecraft/server/MinecraftServer;)V assignFrom
	a (Lcmi$e;Lcmi;Lnet/minecraft/server/MinecraftServer;)V assignCap
	b (Lcmi$e;)Z getBoolean
	c (Lcmi$e;)I getInt
	a (Lcmi;Lnet/minecraft/server/MinecraftServer;Lcmi$e;)V lambda$assignFrom$8
	b (Lcmi$c;Lcmi$e;Lcmi$f;)V lambda$visitGameRuleTypes$7
	a (Ljava/util/Map$Entry;)Lcmi$g; lambda$copy$6
	a (Lcom/mojang/serialization/DynamicLike;Lcmi$e;Lcmi$g;)V lambda$loadFromTag$5
	a (Lqr;Lcmi$e;Lcmi$g;)V lambda$createTag$4
	b (Ljava/util/Map$Entry;)Lcmi$g; lambda$new$3
	a (Lnet/minecraft/server/MinecraftServer;Lcmi$a;)V lambda$static$2
	b (Lnet/minecraft/server/MinecraftServer;Lcmi$a;)V lambda$static$1
	d (Lcmi$e;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
cmi$a net/minecraft/world/level/GameRules$BooleanValue
	b value
	a (ZLjava/util/function/BiConsumer;)Lcmi$f; create
	a (Z)Lcmi$f; create
	<init> (Lcmi$f;Z)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a ()Z get
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	a (Ljava/lang/String;)V deserialize
	c ()I getCommandResult
	d ()Lcmi$a; getSelf
	e ()Lcmi$a; copy
	a (Lcmi$a;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lcmi$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
	f ()Lcmi$g; copy
	g ()Lcmi$g; getSelf
	a (Lnet/minecraft/server/MinecraftServer;Lcmi$a;)V lambda$create$1
	a (ZLcmi$f;)Lcmi$a; lambda$create$0
cmi$b net/minecraft/world/level/GameRules$Category
	a PLAYER
	b MOBS
	c SPAWNING
	d DROPS
	e UPDATES
	f CHAT
	g MISC
	h descriptionId
	i $VALUES
	values ()[Lcmi$b; values
	valueOf (Ljava/lang/String;)Lcmi$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getDescriptionId
	b ()[Lcmi$b; $values
	<clinit> ()V <clinit>
cmi$c net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lcmi$e;Lcmi$f;)V visit
	b (Lcmi$e;Lcmi$f;)V visitBoolean
	c (Lcmi$e;Lcmi$f;)V visitInteger
cmi$d net/minecraft/world/level/GameRules$IntegerValue
	b value
	a (ILjava/util/function/BiConsumer;)Lcmi$f; create
	a (I)Lcmi$f; create
	<init> (Lcmi$f;I)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a ()I get
	a (ILnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	a (Ljava/lang/String;)V deserialize
	b (Ljava/lang/String;)Z tryDeserialize
	c (Ljava/lang/String;)I safeParse
	c ()I getCommandResult
	d ()Lcmi$d; getSelf
	e ()Lcmi$d; copy
	a (Lcmi$d;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lcmi$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
	f ()Lcmi$g; copy
	g ()Lcmi$g; getSelf
	a (Lnet/minecraft/server/MinecraftServer;Lcmi$d;)V lambda$create$1
	a (ILcmi$f;)Lcmi$d; lambda$create$0
cmi$e net/minecraft/world/level/GameRules$Key
	a id
	b category
	<init> (Ljava/lang/String;Lcmi$b;)V <init>
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a ()Ljava/lang/String; getId
	b ()Ljava/lang/String; getDescriptionId
	c ()Lcmi$b; getCategory
cmi$f net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	d visitorCaller
	<init> (Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Lcmi$h;)V <init>
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a ()Lcmi$g; createRule
	a (Lcmi$c;Lcmi$e;)V callVisitor
cmi$g net/minecraft/world/level/GameRules$Value
	a type
	<init> (Lcmi$f;)V <init>
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	a (Lnet/minecraft/server/MinecraftServer;)V onChanged
	a (Ljava/lang/String;)V deserialize
	b ()Ljava/lang/String; serialize
	toString ()Ljava/lang/String; toString
	c ()I getCommandResult
	g ()Lcmi$g; getSelf
	f ()Lcmi$g; copy
	a (Lcmi$g;Lnet/minecraft/server/MinecraftServer;)V setFrom
cmi$h net/minecraft/world/level/GameRules$VisitorCaller
	call (Lcmi$c;Lcmi$e;Lcmi$f;)V call
cmj net/minecraft/world/level/GameType
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e DEFAULT_MODE
	f CODEC
	g BY_ID
	h NOT_SET
	i id
	j name
	k shortName
	l longName
	m $VALUES
	values ()[Lcmj; values
	valueOf (Ljava/lang/String;)Lcmj; valueOf
	<init> (Ljava/lang/String;IILjava/lang/String;)V <init>
	a ()I getId
	b ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	d ()Lsw; getLongDisplayName
	e ()Lsw; getShortDisplayName
	a (Lbyl;)V updatePlayerAbilities
	f ()Z isBlockPlacingRestricted
	g ()Z isCreative
	h ()Z isSurvival
	a (I)Lcmj; byId
	a (Ljava/lang/String;)Lcmj; byName
	a (Ljava/lang/String;Lcmj;)Lcmj; byName
	a (Lcmj;)I getNullableId
	b (I)Lcmj; byNullableId
	i ()[Lcmj; $values
	<clinit> ()V <clinit>
cmk net/minecraft/world/level/GrassColor
	a pixels
	<init> ()V <init>
	a ([I)V init
	a (DD)I get
	a ()I getDefaultColor
	<clinit> ()V <clinit>
cml net/minecraft/world/level/ItemLike
	k ()Lcfu; asItem
cmm net/minecraft/world/level/Level
	g RESOURCE_KEY_CODEC
	h OVERWORLD
	i NETHER
	j END
	k MAX_LEVEL_SIZE
	l LONG_PARTICLE_CLIP_RANGE
	m SHORT_PARTICLE_CLIP_RANGE
	n MAX_BRIGHTNESS
	o TICKS_PER_DAY
	p MAX_ENTITY_SPAWN_Y
	q MIN_ENTITY_SPAWN_Y
	r blockEntityTickers
	s neighborUpdater
	a pendingBlockEntityTickers
	b tickingBlockEntities
	c thread
	d isDebug
	e skyDarken
	t randValue
	u addend
	v oRainLevel
	w rainLevel
	x oThunderLevel
	y thunderLevel
	z random
	f threadSafeRandom
	D dimensionTypeId
	E dimensionTypeRegistration
	A levelData
	F profiler
	B isClientSide
	G worldBorder
	H biomeManager
	I dimension
	J registryAccess
	K damageSources
	L subTickCount
	<init> (Ldzf;Lacp;Lhs;Lhe;Ljava/util/function/Supplier;ZZJI)V <init>
	r_ ()Z isClientSide
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	j (Lgu;)Z isInWorldBounds
	k (Lgu;)Z isInSpawnableBounds
	D (Lgu;)Z isInWorldBoundsHorizontal
	b (I)Z isOutsideSpawnableHeight
	l (Lgu;)Ldei; getChunkAt
	d (II)Ldei; getChunk
	a (IILdec;Z)Lddx; getChunk
	a (Lgu;Ldcb;I)Z setBlock
	a (Lgu;Ldcb;II)Z setBlock
	a (Lgu;Ldcb;Ldcb;)V onBlockStateChange
	a (Lgu;Z)Z removeBlock
	a (Lgu;ZLbfj;I)Z destroyBlock
	a (Lgu;Ldcb;)V addDestroyBlockEffect
	b (Lgu;Ldcb;)Z setBlockAndUpdate
	a (Lgu;Ldcb;Ldcb;I)V sendBlockUpdated
	b (Lgu;Ldcb;Ldcb;)V setBlocksDirty
	a (Lgu;Lcpn;)V updateNeighborsAt
	a (Lgu;Lcpn;Lha;)V updateNeighborsAtExceptFromFacing
	a (Lgu;Lcpn;Lgu;)V neighborChanged
	a (Ldcb;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lha;Ldcb;Lgu;Lgu;II)V neighborShapeChanged
	a (Ldhk$a;II)I getHeight
	s_ ()Ldwt; getLightEngine
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	N ()Z isDay
	O ()Z isNight
	a (Lbfj;Lgu;Lamg;Lami;FF)V playSound
	a (Lbyo;Lgu;Lamg;Lami;FF)V playSound
	a (Lbyo;DDDLhe;Lami;FFJ)V playSeededSound
	a (Lbyo;DDDLamg;Lami;FFJ)V playSeededSound
	a (Lbyo;Lbfj;Lhe;Lami;FFJ)V playSeededSound
	a (Lbyo;DDDLamg;Lami;FF)V playSound
	a (Lbyo;Lbfj;Lamg;Lami;FF)V playSound
	a (Lgu;Lamg;Lami;FFZ)V playLocalSound
	a (DDDLamg;Lami;FFZ)V playLocalSound
	a (Lit;DDDDDD)V addParticle
	a (Lit;ZDDDDDD)V addParticle
	b (Lit;DDDDDD)V addAlwaysVisibleParticle
	b (Lit;ZDDDDDD)V addAlwaysVisibleParticle
	a (F)F getSunAngle
	a (Ldbd;)V addBlockEntityTicker
	P ()V tickBlockEntities
	a (Ljava/util/function/Consumer;Lbfj;)V guardEntityTick
	h (Lbfj;)Z shouldTickDeath
	a (J)Z shouldTickBlocksAt
	m (Lgu;)Z shouldTickBlocksAt
	a (Lbfj;DDDFLcmm$a;)Lcme; explode
	a (Lbfj;DDDFZLcmm$a;)Lcme; explode
	a (Lbfj;Lben;Lcmf;Leei;FZLcmm$a;)Lcme; explode
	a (Lbfj;Lben;Lcmf;DDDFZLcmm$a;)Lcme; explode
	a (Lbfj;Lben;Lcmf;DDDFZLcmm$a;Z)Lcme; explode
	a (Lcmi$e;)Lcme$a; getDestroyType
	F ()Ljava/lang/String; gatherChunkSourceStats
	c_ (Lgu;)Lczn; getBlockEntity
	a (Lczn;)V setBlockEntity
	n (Lgu;)V removeBlockEntity
	o (Lgu;)Z isLoaded
	a (Lgu;Lbfj;Lha;)Z loadedAndEntityCanStandOnFace
	a (Lgu;Lbfj;)Z loadedAndEntityCanStandOn
	Q ()V updateSkyBrightness
	b (ZZ)V setSpawnSettings
	R ()Lgu; getSharedSpawnPos
	S ()F getSharedSpawnAngle
	T ()V prepareWeather
	close ()V close
	c (II)Lcls; getChunkForCollisions
	a (Lbfj;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ldfz;Leed;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Ldfz;Leed;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Ldfz;Leed;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	a (I)Lbfj; getEntity
	p (Lgu;)V blockEntityChanged
	t_ ()I getSeaLevel
	U ()V disconnect
	V ()J getGameTime
	W ()J getDayTime
	a (Lbyo;Lgu;)Z mayInteract
	a (Lbfj;B)V broadcastEntityEvent
	a (Lbfj;Lben;)V broadcastDamageEvent
	a (Lgu;Lcpn;II)V blockEvent
	u_ ()Ldyv; getLevelData
	X ()Lcmi; getGameRules
	b (F)F getThunderLevel
	c (F)V setThunderLevel
	d (F)F getRainLevel
	e (F)V setRainLevel
	Y ()Z isThundering
	Z ()Z isRaining
	q (Lgu;)Z isRainingAt
	a (Ljava/lang/String;)Ldyo; getMapData
	a (Ljava/lang/String;Ldyo;)V setMapData
	t ()I getFreeMapId
	b (ILgu;I)V globalLevelEvent
	a (Lo;)Lp; fillReportDetails
	a (ILgu;I)V destroyBlockProgress
	a (DDDDDDLqr;)V createFireworks
	I ()Lefg; getScoreboard
	c (Lgu;Lcpn;)V updateNeighbourForOutputSignal
	d_ (Lgu;)Lbdv; getCurrentDifficultyAt
	v_ ()I getSkyDarken
	c (I)V setSkyFlashTime
	w_ ()Ldds; getWorldBorder
	a (Luo;)V sendPacketToServer
	x_ ()Ldfk; dimensionType
	aa ()Lacp; dimensionTypeId
	ab ()Lhe; dimensionTypeRegistration
	ac ()Lacp; dimension
	y_ ()Lapf; getRandom
	a (Lgu;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lgu;Ljava/util/function/Predicate;)Z isFluidAtPosition
	q ()Lcjd; getRecipeManager
	a (IIII)Lgu; getBlockRandomPos
	r ()Z noSave
	ad ()Lban; getProfiler
	ae ()Ljava/util/function/Supplier; getProfilerSupplier
	z_ ()Lcnm; getBiomeManager
	af ()Z isDebug
	E ()Ldgb; getEntities
	A_ ()J nextSubTickCount
	B_ ()Lhs; registryAccess
	ag ()Lbeo; damageSources
	a (II)Lddx; getChunk
	a ()Ljava/lang/String; lambda$fillReportDetails$4
	p ()Ljava/lang/String; lambda$fillReportDetails$3
	a (Ljava/util/function/Predicate;Ljava/util/List;ILdfz;Lbfj;)Lanr$a; lambda$getEntities$2
	a (Lbfj;Ljava/util/function/Predicate;Ljava/util/List;Lbfj;)V lambda$getEntities$1
	a (Lhe;)Ljava/lang/IllegalArgumentException; lambda$new$0
	<clinit> ()V <clinit>
cmm$1 net/minecraft/world/level/Level$1
	a val$dimensionType
	b this$0
	<init> (Lcmm;Ldfk;)V <init>
	a ()D getCenterX
	b ()D getCenterZ
cmm$2 net/minecraft/world/level/Level$2
	a $SwitchMap$net$minecraft$world$level$Level$ExplosionInteraction
	<clinit> ()V <clinit>
cmm$a net/minecraft/world/level/Level$ExplosionInteraction
	a NONE
	b BLOCK
	c MOB
	d TNT
	e $VALUES
	values ()[Lcmm$a; values
	valueOf (Ljava/lang/String;)Lcmm$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcmm$a; $values
	<clinit> ()V <clinit>
cmn net/minecraft/world/level/LevelAccessor
	ah ()J dayTime
	A_ ()J nextSubTickCount
	L ()Lefp; getBlockTicks
	a (Lgu;Ljava/lang/Object;ILefx;)Left; createTick
	a (Lgu;Ljava/lang/Object;I)Left; createTick
	a (Lgu;Lcpn;ILefx;)V scheduleTick
	a (Lgu;Lcpn;I)V scheduleTick
	K ()Lefp; getFluidTicks
	a (Lgu;Ldxd;ILefx;)V scheduleTick
	a (Lgu;Ldxd;I)V scheduleTick
	u_ ()Ldyv; getLevelData
	d_ (Lgu;)Lbdv; getCurrentDifficultyAt
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	ai ()Lbdu; getDifficulty
	J ()Ldeb; getChunkSource
	b (II)Z hasChunk
	y_ ()Lapf; getRandom
	b (Lgu;Lcpn;)V blockUpdated
	a (Lha;Ldcb;Lgu;Lgu;II)V neighborShapeChanged
	a (Lbyo;Lgu;Lamg;Lami;)V playSound
	a (Lbyo;Lgu;Lamg;Lami;FF)V playSound
	a (Lit;DDDDDD)V addParticle
	a (Lbyo;ILgu;I)V levelEvent
	c (ILgu;I)V levelEvent
	a (Ldgl;Leei;Ldgl$a;)V gameEvent
	a (Lbfj;Ldgl;Leei;)V gameEvent
	a (Lbfj;Ldgl;Lgu;)V gameEvent
	a (Ldgl;Lgu;Ldgl$a;)V gameEvent
cmo net/minecraft/world/level/LevelHeightAccessor
	D_ ()I getHeight
	C_ ()I getMinBuildHeight
	aj ()I getMaxBuildHeight
	ak ()I getSectionsCount
	al ()I getMinSection
	am ()I getMaxSection
	r (Lgu;)Z isOutsideBuildHeight
	d (I)Z isOutsideBuildHeight
	e (I)I getSectionIndex
	f (I)I getSectionIndexFromSectionY
	g (I)I getSectionYFromSectionIndex
	e (II)Lcmo; create
cmo$1 net/minecraft/world/level/LevelHeightAccessor$1
	a val$height
	b val$minBuildHeight
	<init> (II)V <init>
	D_ ()I getHeight
	C_ ()I getMinBuildHeight
cmp net/minecraft/world/level/LevelReader
	a (IILdec;Z)Lddx; getChunk
	b (II)Z hasChunk
	a (Ldhk$a;II)I getHeight
	v_ ()I getSkyDarken
	z_ ()Lcnm; getBiomeManager
	s (Lgu;)Lhe; getBiome
	c (Leed;)Ljava/util/stream/Stream; getBlockStatesIfLoaded
	a (Lgu;Lclx;)I getBlockTint
	getNoiseBiome (III)Lhe; getNoiseBiome
	a (III)Lhe; getUncachedNoiseBiome
	r_ ()Z isClientSide
	t_ ()I getSeaLevel
	x_ ()Ldfk; dimensionType
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
	a (Ldhk$a;Lgu;)Lgu; getHeightmapPos
	t (Lgu;)Z isEmptyBlock
	u (Lgu;)Z canSeeSkyFromBelowWater
	v (Lgu;)F getPathfindingCostFromLightLevels
	w (Lgu;)F getLightLevelDependentMagicValue
	x (Lgu;)Lddx; getChunk
	a (II)Lddx; getChunk
	a (IILdec;)Lddx; getChunk
	c (II)Lcls; getChunkForCollisions
	y (Lgu;)Z isWaterAt
	d (Leed;)Z containsAnyLiquid
	z (Lgu;)I getMaxLocalRawBrightness
	c (Lgu;I)I getMaxLocalRawBrightness
	f (II)Z hasChunkAt
	A (Lgu;)Z hasChunkAt
	a (Lgu;Lgu;)Z hasChunksAt
	a (IIIIII)Z hasChunksAt
	b (IIII)Z hasChunksAt
	B_ ()Lhs; registryAccess
	G ()Lcaw; enabledFeatures
	a (Lacp;)Lhg; holderLookup
cmq net/minecraft/world/level/LevelSettings
	a levelName
	b gameType
	c hardcore
	d difficulty
	e allowCommands
	f gameRules
	g dataConfiguration
	<init> (Ljava/lang/String;Lcmj;ZLbdu;ZLcmi;Lcnf;)V <init>
	a (Lcom/mojang/serialization/Dynamic;Lcnf;)Lcmq; parse
	a ()Ljava/lang/String; levelName
	b ()Lcmj; gameType
	c ()Z hardcore
	d ()Lbdu; difficulty
	e ()Z allowCommands
	f ()Lcmi; gameRules
	g ()Lcnf; getDataConfiguration
	a (Lcmj;)Lcmq; withGameType
	a (Lbdu;)Lcmq; withDifficulty
	a (Lcnf;)Lcmq; withDataConfiguration
	h ()Lcmq; copy
	a (Ljava/lang/Number;)Lbdu; lambda$parse$0
cmr net/minecraft/world/level/LevelSimulatedRW
cms net/minecraft/world/level/LevelSimulatedReader
	a (Lgu;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lgu;Ljava/util/function/Predicate;)Z isFluidAtPosition
	a (Lgu;Lczp;)Ljava/util/Optional; getBlockEntity
	a (Ldhk$a;Lgu;)Lgu; getHeightmapPos
cmt net/minecraft/world/level/LevelTimeAccess
	ah ()J dayTime
	an ()F getMoonBrightness
	f (F)F getTimeOfDay
	ao ()I getMoonPhase
cmu net/minecraft/world/level/LevelWriter
	a (Lgu;Ldcb;II)Z setBlock
	a (Lgu;Ldcb;I)Z setBlock
	a (Lgu;Z)Z removeBlock
	b (Lgu;Z)Z destroyBlock
	a (Lgu;ZLbfj;)Z destroyBlock
	a (Lgu;ZLbfj;I)Z destroyBlock
	b (Lbfj;)Z addFreshEntity
cmv net/minecraft/world/level/LightLayer
	a SKY
	b BLOCK
	c $VALUES
	values ()[Lcmv; values
	valueOf (Ljava/lang/String;)Lcmv; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcmv; $values
	<clinit> ()V <clinit>
cmw net/minecraft/world/level/LocalMobCapCalculator
	a playersNearChunk
	b playerMobCounts
	c chunkMap
	<init> (Lahr;)V <init>
	a (Lclt;)Ljava/util/List; getPlayersNear
	a (Lclt;Lbgc;)V addMob
	a (Lbgc;Lclt;)Z canSpawn
	a (Laig;)Lcmw$a; lambda$addMob$1
	a (Lclt;J)Ljava/util/List; lambda$getPlayersNear$0
cmw$a net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	a counts
	<init> ()V <init>
	a (Lbgc;)V add
	b (Lbgc;)Z canSpawn
	a (Lbgc;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$add$0
cmx net/minecraft/world/level/NaturalSpawner
	c LOGGER
	d MIN_SPAWN_DISTANCE
	a SPAWN_DISTANCE_CHUNK
	b SPAWN_DISTANCE_BLOCK
	e MAGIC_NUMBER
	f SPAWNING_CATEGORIES
	<init> ()V <init>
	a (ILjava/lang/Iterable;Lcmx$b;Lcmw;)Lcmx$d; createState
	a (Lgu;Lddx;)Lcnk; getRoughBiome
	a (Laif;Ldei;Lcmx$d;ZZZ)V spawnForChunk
	a (Lbgc;Laif;Ldei;Lcmx$c;Lcmx$a;)V spawnCategoryForChunk
	a (Lbgc;Laif;Lgu;)V spawnCategoryForPosition
	a (Lbgc;Laif;Lddx;Lgu;Lcmx$c;Lcmx$a;)V spawnCategoryForPosition
	a (Laif;Lddx;Lgu$a;D)Z isRightDistanceToPlayerAndSpawnPoint
	a (Laif;Lbgc;Lcne;Lddy;Lcnw$c;Lgu$a;D)Z isValidSpawnPostitionForType
	a (Laif;Lbfn;)Lbgb; getMobForSpawn
	a (Laif;Lbgb;D)Z isValidPositionForMob
	a (Laif;Lcne;Lddy;Lbgc;Lapf;Lgu;)Ljava/util/Optional; getRandomSpawnMobAt
	a (Laif;Lcne;Lddy;Lbgc;Lcnw$c;Lgu;)Z canSpawnMobAt
	a (Laif;Lcne;Lddy;Lbgc;Lgu;Lhe;)Lbcl; mobsAt
	a (Lgu;Laif;Lbgc;Lcne;)Z isInNetherFortressBounds
	a (Lcmm;Ldei;)Lgu; getRandomPosWithin
	a (Lcls;Lgu;Ldcb;Ldxe;Lbfn;)Z isValidEmptySpawnBlock
	a (Lbgu$c;Lcmp;Lgu;Lbfn;)Z isSpawnPositionOk
	a (Lcnb;Lhe;Lclt;Lapf;)V spawnMobsForChunkGeneration
	a (Lcmp;Lbfn;II)Lgu; getTopNonCollidingPos
	a (Lbgb;Lddx;)V lambda$spawnCategoryForPosition$4
	a (Lbfn;Lgu;Lddx;)Z lambda$spawnCategoryForPosition$3
	a (Lgu;Lbfj;Lcna;Lcmw;Lbgc;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Ldei;)V lambda$createState$2
	a (I)[Lbgc; lambda$static$1
	a (Lbgc;)Z lambda$static$0
	<clinit> ()V <clinit>
cmx$1 net/minecraft/world/level/NaturalSpawner$1
	a $SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
	<clinit> ()V <clinit>
cmx$a net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	run (Lbgb;Lddx;)V run
cmx$b net/minecraft/world/level/NaturalSpawner$ChunkGetter
	query (JLjava/util/function/Consumer;)V query
cmx$c net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	test (Lbfn;Lgu;Lddx;)Z test
cmx$d net/minecraft/world/level/NaturalSpawner$SpawnState
	a spawnableChunkCount
	b mobCategoryCounts
	c spawnPotential
	d unmodifiableMobCategoryCounts
	e localMobCapCalculator
	f lastCheckedPos
	g lastCheckedType
	h lastCharge
	<init> (ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lcna;Lcmw;)V <init>
	a (Lbfn;Lgu;Lddx;)Z canSpawn
	a (Lbgb;Lddx;)V afterSpawn
	a ()I getSpawnableChunkCount
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
	a (Lbgc;Lclt;)Z canSpawnForCategory
cmy net/minecraft/world/level/NoiseColumn
	a minY
	b column
	<init> (I[Ldcb;)V <init>
	a (I)Ldcb; getBlock
	a (ILdcb;)V setBlock
cmz net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	f plains
	<init> (Lcmm;Lgu;Lgu;)V <init>
	d (Lgu;)Lddx; getChunk
	a (II)Lddx; getChunk
	w_ ()Ldds; getWorldBorder
	c (II)Lcls; getChunkForCollisions
	b (Lbfj;Leed;)Ljava/util/List; getEntityCollisions
	c_ (Lgu;)Lczn; getBlockEntity
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
	a ()Lban; getProfiler
	a (Lcmm;)Lhe; lambda$new$0
cna net/minecraft/world/level/PotentialCalculator
	a charges
	<init> ()V <init>
	a (Lgu;D)V addCharge
	b (Lgu;D)D getPotentialEnergyChange
cna$a net/minecraft/world/level/PotentialCalculator$PointCharge
	a pos
	b charge
	<init> (Lgu;D)V <init>
	a (Lgu;)D getPotentialChange
cnb net/minecraft/world/level/ServerLevelAccessor
	C ()Laif; getLevel
	a_ (Lbfj;)V addFreshEntityWithPassengers
cnc net/minecraft/world/level/SignalGetter
	C DIRECTIONS
	a (Lgu;Lha;)I getDirectSignal
	e_ (Lgu;)I getDirectSignalTo
	a (Lgu;Lha;Z)I getControlInputSignal
	b (Lgu;Lha;)Z hasSignal
	c (Lgu;Lha;)I getSignal
	B (Lgu;)Z hasNeighborSignal
	C (Lgu;)I getBestNeighborSignal
	<clinit> ()V <clinit>
cnd net/minecraft/world/level/SpawnData
	d entityToSpawn
	e customSpawnRules
	a ENTITY_TAG
	b CODEC
	c LIST_CODEC
	<init> ()V <init>
	<init> (Lqr;Ljava/util/Optional;)V <init>
	a ()Lqr; getEntityToSpawn
	b ()Ljava/util/Optional; getCustomSpawnRules
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lqr; entityToSpawn
	d ()Ljava/util/Optional; customSpawnRules
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcnd;)Ljava/util/Optional; lambda$static$1
	b (Lcnd;)Lqr; lambda$static$0
	<clinit> ()V <clinit>
cnd$a net/minecraft/world/level/SpawnData$CustomSpawnRules
	b blockLightLimit
	c skyLightLimit
	d LIGHT_RANGE
	a CODEC
	<init> (Laot;Laot;)V <init>
	a (Laot;)Lcom/mojang/serialization/DataResult; checkLightBoundaries
	a (Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; lightLimit
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Laot; blockLightLimit
	b ()Laot; skyLightLimit
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcnd$a;)Laot; lambda$static$2
	b (Lcnd$a;)Laot; lambda$static$1
	c ()Ljava/lang/String; lambda$checkLightBoundaries$0
	<clinit> ()V <clinit>
cne net/minecraft/world/level/StructureManager
	a level
	b worldOptions
	c structureCheck
	<init> (Lcmn;Ldii;Ldsb;)V <init>
	a (Laim;)Lcne; forWorldGenRegion
	a (Lclt;Ljava/util/function/Predicate;)Ljava/util/List; startsForStructure
	a (Lhx;Ldsa;)Ljava/util/List; startsForStructure
	a (Ldsa;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V fillStartsForStructure
	a (Lhx;Ldsa;Ldeu;)Ldsi; getStartForStructure
	a (Lhx;Ldsa;Ldsi;Ldeu;)V setStartForStructure
	a (Lhx;Ldsa;JLdeu;)V addReferenceForStructure
	a ()Z shouldGenerateStructures
	a (Lgu;Ldsa;)Ldsi; getStructureAt
	a (Lgu;Lacp;)Ldsi; getStructureWithPieceAt
	a (Lgu;Lanl;)Ldsi; getStructureWithPieceAt
	b (Lgu;Ldsa;)Ldsi; getStructureWithPieceAt
	a (Lgu;Ldsi;)Z structureHasPieceAt
	a (Lgu;)Z hasAnyStructureAt
	b (Lgu;)Ljava/util/Map; getAllStructuresAt
	a (Lclt;Ldsa;Z)Ldsc; checkStructurePresence
	a (Ldsi;)V addReference
	b ()Lhs; registryAccess
	a (Lhr;Lanl;Ldsa;)Z lambda$getStructureWithPieceAt$1
	a (Lanl;Lhe$c;)Ljava/lang/Boolean; lambda$getStructureWithPieceAt$0
cnf net/minecraft/world/level/WorldDataConfiguration
	d dataPacks
	e enabledFeatures
	a ENABLED_FEATURES_ID
	b CODEC
	c DEFAULT
	<init> (Lcma;Lcaw;)V <init>
	a (Lcaw;)Lcnf; expandFeatures
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lcma; dataPacks
	b ()Lcaw; enabledFeatures
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
cng net/minecraft/world/level/WorldGenLevel
	A ()J getSeed
	f_ (Lgu;)Z ensureCanWrite
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
cnh net/minecraft/world/level/biome/AmbientAdditionsSettings
	a CODEC
	b soundEvent
	c tickChance
	<init> (Lhe;D)V <init>
	a ()Lhe; getSoundEvent
	b ()D getTickChance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcnh;)Ljava/lang/Double; lambda$static$1
	b (Lcnh;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
cni net/minecraft/world/level/biome/AmbientMoodSettings
	a CODEC
	b LEGACY_CAVE_SETTINGS
	c soundEvent
	d tickDelay
	e blockSearchExtent
	f soundPositionOffset
	<init> (Lhe;IID)V <init>
	a ()Lhe; getSoundEvent
	b ()I getTickDelay
	c ()I getBlockSearchExtent
	d ()D getSoundPositionOffset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lcni;)Ljava/lang/Double; lambda$static$3
	b (Lcni;)Ljava/lang/Integer; lambda$static$2
	c (Lcni;)Ljava/lang/Integer; lambda$static$1
	d (Lcni;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
cnj net/minecraft/world/level/biome/AmbientParticleSettings
	a CODEC
	b options
	c probability
	<init> (Lit;F)V <init>
	a ()Lit; getOptions
	a (Lapf;)Z canSpawn
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcnj;)Ljava/lang/Float; lambda$static$1
	b (Lcnj;)Lit; lambda$static$0
	<clinit> ()V <clinit>
cnk net/minecraft/world/level/biome/Biome
	a DIRECT_CODEC
	b NETWORK_CODEC
	c CODEC
	d LIST_CODEC
	f TEMPERATURE_NOISE
	g FROZEN_TEMPERATURE_NOISE
	e BIOME_INFO_NOISE
	h TEMPERATURE_CACHE_SIZE
	i climateSettings
	j generationSettings
	k mobSettings
	l specialEffects
	m temperatureCache
	<init> (Lcnk$b;Lcnq;Lcnl;Lcnw;)V <init>
	a ()I getSkyColor
	b ()Lcnw; getMobSettings
	c ()Z hasPrecipitation
	a (Lgu;)Lcnk$c; getPrecipitationAt
	e (Lgu;)F getHeightAdjustedTemperature
	f (Lgu;)F getTemperature
	a (Lcmp;Lgu;)Z shouldFreeze
	a (Lcmp;Lgu;Z)Z shouldFreeze
	b (Lgu;)Z coldEnoughToSnow
	c (Lgu;)Z warmEnoughToRain
	d (Lgu;)Z shouldMeltFrozenOceanIcebergSlightly
	b (Lcmp;Lgu;)Z shouldSnow
	d ()Lcnl; getGenerationSettings
	e ()I getFogColor
	a (DD)I getGrassColor
	p ()I getGrassColorFromTexture
	f ()I getFoliageColor
	q ()I getFoliageColorFromTexture
	g ()F getBaseTemperature
	h ()Lcnq; getSpecialEffects
	i ()I getWaterColor
	j ()I getWaterFogColor
	k ()Ljava/util/Optional; getAmbientParticle
	l ()Ljava/util/Optional; getAmbientLoop
	m ()Ljava/util/Optional; getAmbientMood
	n ()Ljava/util/Optional; getAmbientAdditions
	o ()Ljava/util/Optional; getBackgroundMusic
	r ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$10
	s ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$9
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$8
	a (Lcnk$b;Lcnq;)Lcnk; lambda$static$7
	a (Lcnk;)Lcnq; lambda$static$6
	b (Lcnk;)Lcnk$b; lambda$static$5
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	c (Lcnk;)Lcnw; lambda$static$3
	d (Lcnk;)Lcnl; lambda$static$2
	e (Lcnk;)Lcnq; lambda$static$1
	f (Lcnk;)Lcnk$b; lambda$static$0
	<clinit> ()V <clinit>
cnk$1 net/minecraft/world/level/biome/Biome$1
	a this$0
	<init> (Lcnk;IF)V <init>
	rehash (I)V rehash
cnk$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a hasPrecipitation
	b temperature
	c temperatureModifier
	d downfall
	e specialEffects
	f mobSpawnSettings
	g generationSettings
	<init> ()V <init>
	a (Z)Lcnk$a; hasPrecipitation
	a (F)Lcnk$a; temperature
	b (F)Lcnk$a; downfall
	a (Lcnq;)Lcnk$a; specialEffects
	a (Lcnw;)Lcnk$a; mobSpawnSettings
	a (Lcnl;)Lcnk$a; generationSettings
	a (Lcnk$d;)Lcnk$a; temperatureAdjustment
	a ()Lcnk; build
	toString ()Ljava/lang/String; toString
cnk$b net/minecraft/world/level/biome/Biome$ClimateSettings
	b hasPrecipitation
	c temperature
	d temperatureModifier
	e downfall
	a CODEC
	<init> (ZFLcnk$d;F)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Z hasPrecipitation
	b ()F temperature
	c ()Lcnk$d; temperatureModifier
	d ()F downfall
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Lcnk$b;)Ljava/lang/Float; lambda$static$3
	b (Lcnk$b;)Lcnk$d; lambda$static$2
	c (Lcnk$b;)Ljava/lang/Float; lambda$static$1
	d (Lcnk$b;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
cnk$c net/minecraft/world/level/biome/Biome$Precipitation
	a NONE
	b RAIN
	c SNOW
	d $VALUES
	values ()[Lcnk$c; values
	valueOf (Ljava/lang/String;)Lcnk$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcnk$c; $values
	<clinit> ()V <clinit>
cnk$d net/minecraft/world/level/biome/Biome$TemperatureModifier
	a NONE
	b FROZEN
	d name
	c CODEC
	e $VALUES
	values ()[Lcnk$d; values
	valueOf (Ljava/lang/String;)Lcnk$d; valueOf
	a (Lgu;F)F modifyTemperature
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()[Lcnk$d; $values
	<clinit> ()V <clinit>
cnk$d$1 net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lgu;F)F modifyTemperature
cnk$d$2 net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lgu;F)F modifyTemperature
cnl net/minecraft/world/level/biome/BiomeGenerationSettings
	c LOGGER
	a EMPTY
	b CODEC
	d carvers
	e features
	f flowerFeatures
	g featureSet
	<init> (Ljava/util/Map;Ljava/util/List;)V <init>
	a (Ldhg$a;)Ljava/lang/Iterable; getCarvers
	a ()Ljava/util/List; getFlowerFeatures
	b ()Ljava/util/List; features
	a (Ldre;)Z hasFeature
	a (Ljava/util/List;)Ljava/util/Set; lambda$new$5
	b (Ljava/util/List;)Ljava/util/List; lambda$new$4
	a (Ldkb;)Z lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcnl;)Ljava/util/List; lambda$static$1
	b (Lcnl;)Ljava/util/Map; lambda$static$0
	<clinit> ()V <clinit>
cnl$a net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	a placedFeatures
	b worldCarvers
	<init> (Lhf;Lhf;)V <init>
	a (Ldhg$b;Lacp;)Lcnl$a; addFeature
	a (Ldhg$a;Lacp;)Lcnl$a; addCarver
cnl$b net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	a carvers
	b features
	<init> ()V <init>
	a (Ldhg$b;Lhe;)Lcnl$b; addFeature
	a (ILhe;)Lcnl$b; addFeature
	a (Ldhg$a;Lhe;)Lcnl$b; addCarver
	a (I)V addFeatureStepsUpTo
	a ()Lcnl; build
	a (Ljava/util/Map$Entry;)Lhi; lambda$build$1
	a (Ldhg$a;)Ljava/util/List; lambda$addCarver$0
cnm net/minecraft/world/level/biome/BiomeManager
	a CHUNK_CENTER_QUART
	b ZOOM_BITS
	c ZOOM
	d ZOOM_MASK
	e noiseBiomeSource
	f biomeZoomSeed
	<init> (Lcnm$a;J)V <init>
	a (J)J obfuscateSeed
	a (Lcnm$a;)Lcnm; withDifferentSource
	a (Lgu;)Lhe; getBiome
	a (DDD)Lhe; getNoiseBiomeAtPosition
	b (Lgu;)Lhe; getNoiseBiomeAtPosition
	a (III)Lhe; getNoiseBiomeAtQuart
	a (JIIIDDD)D getFiddledDistance
	b (J)D getFiddle
	<clinit> ()V <clinit>
cnm$a net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	getNoiseBiome (III)Lhe; getNoiseBiome
cnn net/minecraft/world/level/biome/BiomeResolver
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
cno net/minecraft/world/level/biome/BiomeSource
	a CODEC
	b possibleBiomes
	<init> ()V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	c ()Ljava/util/Set; possibleBiomes
	a (IIIILcnt$f;)Ljava/util/Set; getBiomesWithin
	a (IIIILjava/util/function/Predicate;Lapf;Lcnt$f;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (Lgu;IIILjava/util/function/Predicate;Lcnt$f;Lcmp;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	a (IIIIILjava/util/function/Predicate;Lapf;ZLcnt$f;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
	a (Ljava/util/List;Lgu;Lcnt$f;)V addDebugInfo
	d ()Ljava/util/Set; lambda$new$0
	<clinit> ()V <clinit>
cnp net/minecraft/world/level/biome/BiomeSources
	<init> ()V <init>
	a (Lhr;)Lcom/mojang/serialization/Codec; bootstrap
cnq net/minecraft/world/level/biome/BiomeSpecialEffects
	a CODEC
	b fogColor
	c waterColor
	d waterFogColor
	e skyColor
	f foliageColorOverride
	g grassColorOverride
	h grassColorModifier
	i ambientParticleSettings
	j ambientLoopSoundEvent
	k ambientMoodSettings
	l ambientAdditionsSettings
	m backgroundMusic
	<init> (IIIILjava/util/Optional;Ljava/util/Optional;Lcnq$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V <init>
	a ()I getFogColor
	b ()I getWaterColor
	c ()I getWaterFogColor
	d ()I getSkyColor
	e ()Ljava/util/Optional; getFoliageColorOverride
	f ()Ljava/util/Optional; getGrassColorOverride
	g ()Lcnq$b; getGrassColorModifier
	h ()Ljava/util/Optional; getAmbientParticleSettings
	i ()Ljava/util/Optional; getAmbientLoopSoundEvent
	j ()Ljava/util/Optional; getAmbientMoodSettings
	k ()Ljava/util/Optional; getAmbientAdditionsSettings
	l ()Ljava/util/Optional; getBackgroundMusic
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$12
	a (Lcnq;)Ljava/util/Optional; lambda$static$11
	b (Lcnq;)Ljava/util/Optional; lambda$static$10
	c (Lcnq;)Ljava/util/Optional; lambda$static$9
	d (Lcnq;)Ljava/util/Optional; lambda$static$8
	e (Lcnq;)Ljava/util/Optional; lambda$static$7
	f (Lcnq;)Lcnq$b; lambda$static$6
	g (Lcnq;)Ljava/util/Optional; lambda$static$5
	h (Lcnq;)Ljava/util/Optional; lambda$static$4
	i (Lcnq;)Ljava/lang/Integer; lambda$static$3
	j (Lcnq;)Ljava/lang/Integer; lambda$static$2
	k (Lcnq;)Ljava/lang/Integer; lambda$static$1
	l (Lcnq;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
cnq$a net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	a fogColor
	b waterColor
	c waterFogColor
	d skyColor
	e foliageColorOverride
	f grassColorOverride
	g grassColorModifier
	h ambientParticle
	i ambientLoopSoundEvent
	j ambientMoodSettings
	k ambientAdditionsSettings
	l backgroundMusic
	<init> ()V <init>
	a (I)Lcnq$a; fogColor
	b (I)Lcnq$a; waterColor
	c (I)Lcnq$a; waterFogColor
	d (I)Lcnq$a; skyColor
	e (I)Lcnq$a; foliageColorOverride
	f (I)Lcnq$a; grassColorOverride
	a (Lcnq$b;)Lcnq$a; grassColorModifier
	a (Lcnj;)Lcnq$a; ambientParticle
	a (Lhe;)Lcnq$a; ambientLoopSound
	a (Lcni;)Lcnq$a; ambientMoodSound
	a (Lcnh;)Lcnq$a; ambientAdditionsSound
	a (Lame;)Lcnq$a; backgroundMusic
	a ()Lcnq; build
	b ()Ljava/lang/IllegalStateException; lambda$build$3
	c ()Ljava/lang/IllegalStateException; lambda$build$2
	d ()Ljava/lang/IllegalStateException; lambda$build$1
	e ()Ljava/lang/IllegalStateException; lambda$build$0
cnq$b net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	a NONE
	b DARK_FOREST
	c SWAMP
	e name
	d CODEC
	f $VALUES
	values ()[Lcnq$b; values
	valueOf (Ljava/lang/String;)Lcnq$b; valueOf
	a (DDI)I modifyColor
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()[Lcnq$b; $values
	<clinit> ()V <clinit>
cnq$b$1 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
cnq$b$2 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
cnq$b$3 net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (DDI)I modifyColor
cnr net/minecraft/world/level/biome/Biomes
	a THE_VOID
	b PLAINS
	c SUNFLOWER_PLAINS
	d SNOWY_PLAINS
	e ICE_SPIKES
	f DESERT
	g SWAMP
	h MANGROVE_SWAMP
	i FOREST
	j FLOWER_FOREST
	k BIRCH_FOREST
	l DARK_FOREST
	m OLD_GROWTH_BIRCH_FOREST
	n OLD_GROWTH_PINE_TAIGA
	o OLD_GROWTH_SPRUCE_TAIGA
	p TAIGA
	q SNOWY_TAIGA
	r SAVANNA
	s SAVANNA_PLATEAU
	t WINDSWEPT_HILLS
	u WINDSWEPT_GRAVELLY_HILLS
	v WINDSWEPT_FOREST
	w WINDSWEPT_SAVANNA
	x JUNGLE
	y SPARSE_JUNGLE
	z BAMBOO_JUNGLE
	A BADLANDS
	B ERODED_BADLANDS
	C WOODED_BADLANDS
	D MEADOW
	E CHERRY_GROVE
	F GROVE
	G SNOWY_SLOPES
	H FROZEN_PEAKS
	I JAGGED_PEAKS
	J STONY_PEAKS
	K RIVER
	L FROZEN_RIVER
	M BEACH
	N SNOWY_BEACH
	O STONY_SHORE
	P WARM_OCEAN
	Q LUKEWARM_OCEAN
	R DEEP_LUKEWARM_OCEAN
	S OCEAN
	T DEEP_OCEAN
	U COLD_OCEAN
	V DEEP_COLD_OCEAN
	W FROZEN_OCEAN
	X DEEP_FROZEN_OCEAN
	Y MUSHROOM_FIELDS
	Z DRIPSTONE_CAVES
	aa LUSH_CAVES
	ab DEEP_DARK
	ac NETHER_WASTES
	ad WARPED_FOREST
	ae CRIMSON_FOREST
	af SOUL_SAND_VALLEY
	ag BASALT_DELTAS
	ah THE_END
	ai END_HIGHLANDS
	aj END_MIDLANDS
	ak SMALL_END_ISLANDS
	al END_BARRENS
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; register
	<clinit> ()V <clinit>
cns net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	b CODEC
	c allowedBiomes
	d bitShift
	e size
	<init> (Lhi;I)V <init>
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcns;)Ljava/lang/Integer; lambda$static$1
	b (Lcns;)Lhi; lambda$static$0
	<clinit> ()V <clinit>
cnt net/minecraft/world/level/biome/Climate
	b DEBUG_SLOW_BIOME_SEARCH
	c QUANTIZATION_FACTOR
	a PARAMETER_COUNT
	<init> ()V <init>
	a (FFFFFF)Lcnt$h; target
	a (FFFFFFF)Lcnt$d; parameters
	a (Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;F)Lcnt$d; parameters
	a (F)J quantizeCoord
	a (J)F unquantizeCoord
	a ()Lcnt$f; empty
	a (Ljava/util/List;Lcnt$f;)Lgu; findSpawnPosition
cnt$a net/minecraft/world/level/biome/Climate$DistanceMetric
	distance (Lcnt$e$b;[J)J distance
cnt$b net/minecraft/world/level/biome/Climate$Parameter
	b min
	c max
	a CODEC
	<init> (JJ)V <init>
	a (F)Lcnt$b; point
	a (FF)Lcnt$b; span
	a (Lcnt$b;Lcnt$b;)Lcnt$b; span
	toString ()Ljava/lang/String; toString
	a (J)J distance
	a (Lcnt$b;)J distance
	b (Lcnt$b;)Lcnt$b; span
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()J min
	b ()J max
	c (Lcnt$b;)Ljava/lang/Float; lambda$static$3
	d (Lcnt$b;)Ljava/lang/Float; lambda$static$2
	a (Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult; lambda$static$1
	b (Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
cnt$c net/minecraft/world/level/biome/Climate$ParameterList
	a values
	b index
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; codec
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; values
	a (Lcnt$h;)Ljava/lang/Object; findValue
	b (Lcnt$h;)Ljava/lang/Object; findValueBruteForce
	c (Lcnt$h;)Ljava/lang/Object; findValueIndex
	a (Lcnt$h;Lcnt$a;)Ljava/lang/Object; findValueIndex
	a (Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$0
cnt$d net/minecraft/world/level/biome/Climate$ParameterPoint
	b temperature
	c humidity
	d continentalness
	e erosion
	f depth
	g weirdness
	h offset
	a CODEC
	<init> (Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;J)V <init>
	a (Lcnt$h;)J fitness
	a ()Ljava/util/List; parameterSpace
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lcnt$b; temperature
	c ()Lcnt$b; humidity
	d ()Lcnt$b; continentalness
	e ()Lcnt$b; erosion
	f ()Lcnt$b; depth
	g ()Lcnt$b; weirdness
	h ()J offset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	a (Lcnt$d;)Ljava/lang/Long; lambda$static$6
	b (Lcnt$d;)Lcnt$b; lambda$static$5
	c (Lcnt$d;)Lcnt$b; lambda$static$4
	d (Lcnt$d;)Lcnt$b; lambda$static$3
	e (Lcnt$d;)Lcnt$b; lambda$static$2
	f (Lcnt$d;)Lcnt$b; lambda$static$1
	g (Lcnt$d;)Lcnt$b; lambda$static$0
	<clinit> ()V <clinit>
cnt$e net/minecraft/world/level/biome/Climate$RTree
	a CHILDREN_PER_NODE
	b root
	c lastResult
	<init> (Lcnt$e$b;)V <init>
	a (Ljava/util/List;)Lcnt$e; create
	a (ILjava/util/List;)Lcnt$e$b; build
	a (Ljava/util/List;IIZ)V sort
	a (IZ)Ljava/util/Comparator; comparator
	b (Ljava/util/List;)Ljava/util/List; bucketize
	a ([Lcnt$b;)J cost
	c (Ljava/util/List;)Ljava/util/List; buildParameterSpace
	a (Lcnt$h;Lcnt$a;)Ljava/lang/Object; search
	a (IZLcnt$e$b;)J lambda$comparator$3
	a (ILcnt$e$c;)Lcnt$e$b; lambda$build$2
	a (ILcnt$e$b;)J lambda$build$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcnt$e$a; lambda$create$0
cnt$e$a net/minecraft/world/level/biome/Climate$RTree$Leaf
	b value
	<init> (Lcnt$d;Ljava/lang/Object;)V <init>
	a ([JLcnt$e$a;Lcnt$a;)Lcnt$e$a; search
cnt$e$b net/minecraft/world/level/biome/Climate$RTree$Node
	a parameterSpace
	<init> (Ljava/util/List;)V <init>
	a ([JLcnt$e$a;Lcnt$a;)Lcnt$e$a; search
	a ([J)J distance
	toString ()Ljava/lang/String; toString
cnt$e$c net/minecraft/world/level/biome/Climate$RTree$SubTree
	b children
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/List;Ljava/util/List;)V <init>
	a ([JLcnt$e$a;Lcnt$a;)Lcnt$e$a; search
cnt$f net/minecraft/world/level/biome/Climate$Sampler
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	g spawnTarget
	<init> (Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ljava/util/List;)V <init>
	a (III)Lcnt$h; sample
	a ()Lgu; findSpawnPosition
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldhd; temperature
	c ()Ldhd; humidity
	d ()Ldhd; continentalness
	e ()Ldhd; erosion
	f ()Ldhd; depth
	g ()Ldhd; weirdness
	h ()Ljava/util/List; spawnTarget
cnt$g net/minecraft/world/level/biome/Climate$SpawnFinder
	a result
	<init> (Ljava/util/List;Lcnt$f;)V <init>
	a (Ljava/util/List;Lcnt$f;FF)V radialSearch
	a (Ljava/util/List;Lcnt$f;II)Lcnt$g$a; getSpawnPositionAndFitness
cnt$g$a net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	a location
	b fitness
	<init> (Lgu;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; location
	b ()J fitness
cnt$h net/minecraft/world/level/biome/Climate$TargetPoint
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	<init> (JJJJJJ)V <init>
	a ()[J toParameterArray
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()J temperature
	c ()J humidity
	d ()J continentalness
	e ()J erosion
	f ()J depth
	g ()J weirdness
cnu net/minecraft/world/level/biome/FeatureSorter
	<init> ()V <init>
	a (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; buildFeaturesPerStep
	a (ILcnu$a;)Z lambda$buildFeaturesPerStep$2
	a (Ljava/util/Comparator;Lcnu$a;)Ljava/util/Set; lambda$buildFeaturesPerStep$1
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I lambda$buildFeaturesPerStep$0
cnu$a net/minecraft/world/level/biome/FeatureSorter$1FeatureData
	a featureIndex
	b step
	c feature
	<init> (IILdre;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I featureIndex
	b ()I step
	c ()Ldre; feature
cnu$b net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	a features
	b indexMapping
	<init> (Ljava/util/List;)V <init>
	<init> (Ljava/util/List;Ljava/util/function/ToIntFunction;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; features
	b ()Ljava/util/function/ToIntFunction; indexMapping
	a (I)Lit/unimi/dsi/fastutil/objects/Object2IntMap; lambda$new$0
cnv net/minecraft/world/level/biome/FixedBiomeSource
	b CODEC
	c biome
	<init> (Lhe;)V <init>
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
	getNoiseBiome (III)Lhe; getNoiseBiome
	a (IIIIILjava/util/function/Predicate;Lapf;ZLcnt$f;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (Lgu;IIILjava/util/function/Predicate;Lcnt$f;Lcmp;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	a (IIIILcnt$f;)Ljava/util/Set; getBiomesWithin
	a (Lcnv;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
cnw net/minecraft/world/level/biome/MobSpawnSettings
	d LOGGER
	e DEFAULT_CREATURE_SPAWN_PROBABILITY
	a EMPTY_MOB_LIST
	b EMPTY
	c CODEC
	f creatureGenerationProbability
	g spawners
	h mobSpawnCosts
	<init> (FLjava/util/Map;Ljava/util/Map;)V <init>
	a (Lbgc;)Lbcl; getMobs
	a (Lbfn;)Lcnw$b; getMobSpawnCost
	a ()F getCreatureProbability
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lcnw;)Ljava/util/Map; lambda$static$2
	b (Lcnw;)Ljava/util/Map; lambda$static$1
	c (Lcnw;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
cnw$a net/minecraft/world/level/biome/MobSpawnSettings$Builder
	a spawners
	b mobSpawnCosts
	c creatureGenerationProbability
	<init> ()V <init>
	a (Lbgc;Lcnw$c;)Lcnw$a; addSpawn
	a (Lbfn;DD)Lcnw$a; addMobCharge
	a (F)Lcnw$a; creatureGenerationProbability
	a ()Lcnw; build
	a (Ljava/util/Map$Entry;)Lbcl; lambda$build$2
	a (Lbgc;)Ljava/util/List; lambda$new$1
	b (Lbgc;)Lbgc; lambda$new$0
cnw$b net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	b energyBudget
	c charge
	a CODEC
	<init> (DD)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()D energyBudget
	b ()D charge
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lcnw$b;)Ljava/lang/Double; lambda$static$1
	b (Lcnw$b;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
cnw$c net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	a CODEC
	b type
	c minCount
	d maxCount
	<init> (Lbfn;III)V <init>
	<init> (Lbfn;Lbci;II)V <init>
	toString ()Ljava/lang/String; toString
	a (Lcnw$c;)Lcom/mojang/serialization/DataResult; lambda$static$5
	b ()Ljava/lang/String; lambda$static$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	b (Lcnw$c;)Ljava/lang/Integer; lambda$static$2
	c (Lcnw$c;)Ljava/lang/Integer; lambda$static$1
	d (Lcnw$c;)Lbfn; lambda$static$0
	<clinit> ()V <clinit>
cnx net/minecraft/world/level/biome/MultiNoiseBiomeSource
	d ENTRY_CODEC
	b DIRECT_CODEC
	e PRESET_CODEC
	c CODEC
	f parameters
	<init> (Lcom/mojang/datafixers/util/Either;)V <init>
	a (Lcnt$c;)Lcnx; createFromList
	a (Lhe;)Lcnx; createFromPreset
	d ()Lcnt$c; parameters
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lacp;)Z stable
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
	a (Lcnt$h;)Lhe; getNoiseBiome
	a (Ljava/util/List;Lgu;Lcnt$f;)V addDebugInfo
	b (Lhe;)Lcnt$c; lambda$parameters$2
	b (Lcnt$c;)Lcnt$c; lambda$parameters$1
	a (Lcnx;)Lcom/mojang/datafixers/util/Either; lambda$static$0
	<clinit> ()V <clinit>
cny net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	a DIRECT_CODEC
	b CODEC
	c preset
	d parameters
	<init> (Lcny$a;Lhf;)V <init>
	a ()Lcnt$c; parameters
	b ()Ljava/util/Map; knownPresets
	a (Lcny$a;)Lcnt$c; lambda$knownPresets$4
	a (Lacp;)Lacp; lambda$knownPresets$3
	b (Lcny$a;)Lcny$a; lambda$knownPresets$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lcny;)Lcny$a; lambda$static$0
	<clinit> ()V <clinit>
cny$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	d id
	e provider
	a NETHER
	b OVERWORLD
	f BY_NAME
	c CODEC
	<init> (Lacq;Lcny$a$a;)V <init>
	a (Ljava/util/function/Function;)Lcnt$c; generateOverworldBiomes
	a ()Ljava/util/stream/Stream; usedBiomes
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lacq; id
	c ()Lcny$a$a; provider
	a (Lacp;)Lacp; lambda$usedBiomes$6
	a (Lcom/google/common/collect/ImmutableList$Builder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V lambda$generateOverworldBiomes$5
	a (Lcny$a;)Lcom/mojang/serialization/DataResult; lambda$static$4
	a (Lacq;)Lcom/mojang/serialization/DataResult; lambda$static$3
	b (Lacq;)Lcom/mojang/serialization/DataResult; lambda$static$2
	c (Lacq;)Ljava/lang/String; lambda$static$1
	b (Lcny$a;)Lcny$a; lambda$static$0
	<clinit> ()V <clinit>
cny$a$1 net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$1
	<init> ()V <init>
	apply (Ljava/util/function/Function;)Lcnt$c; apply
cny$a$2 net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$2
	<init> ()V <init>
	apply (Ljava/util/function/Function;)Lcnt$c; apply
cny$a$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
	apply (Ljava/util/function/Function;)Lcnt$c; apply
cnz net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	a NETHER
	b OVERWORLD
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Ljava/lang/String;)Lacp; register
	<clinit> ()V <clinit>
coa net/minecraft/world/level/biome/OverworldBiomeBuilder
	h VALLEY_SIZE
	i LOW_START
	a HIGH_START
	j HIGH_END
	k PEAK_SIZE
	b PEAK_START
	l PEAK_END
	c NEAR_INLAND_START
	d MID_INLAND_START
	e FAR_INLAND_START
	f EROSION_INDEX_1_START
	g EROSION_INDEX_2_START
	m EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	n DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	o FULL_RANGE
	p temperatures
	q humidities
	r erosions
	s FROZEN_RANGE
	t UNFROZEN_RANGE
	u mushroomFieldsContinentalness
	v deepOceanContinentalness
	w oceanContinentalness
	x coastContinentalness
	y inlandContinentalness
	z nearInlandContinentalness
	A midInlandContinentalness
	B farInlandContinentalness
	C OCEANS
	D MIDDLE_BIOMES
	E MIDDLE_BIOMES_VARIANT
	F PLATEAU_BIOMES
	G PLATEAU_BIOMES_VARIANT
	H SHATTERED_BIOMES
	<init> ()V <init>
	a ()Ljava/util/List; spawnTarget
	a (Ljava/util/function/Consumer;)V addBiomes
	b (Ljava/util/function/Consumer;)V addDebugBiomes
	c (Ljava/util/function/Consumer;)V addOffCoastBiomes
	d (Ljava/util/function/Consumer;)V addInlandBiomes
	a (Ljava/util/function/Consumer;Lcnt$b;)V addPeaks
	b (Ljava/util/function/Consumer;Lcnt$b;)V addHighSlice
	c (Ljava/util/function/Consumer;Lcnt$b;)V addMidSlice
	d (Ljava/util/function/Consumer;Lcnt$b;)V addLowSlice
	e (Ljava/util/function/Consumer;Lcnt$b;)V addValleys
	e (Ljava/util/function/Consumer;)V addUndergroundBiomes
	a (IILcnt$b;)Lacp; pickMiddleBiome
	b (IILcnt$b;)Lacp; pickMiddleBiomeOrBadlandsIfHot
	c (IILcnt$b;)Lacp; pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
	a (IILcnt$b;Lacp;)Lacp; maybePickWindsweptSavannaBiome
	d (IILcnt$b;)Lacp; pickShatteredCoastBiome
	a (II)Lacp; pickBeachBiome
	a (ILcnt$b;)Lacp; pickBadlandsBiome
	e (IILcnt$b;)Lacp; pickPlateauBiome
	f (IILcnt$b;)Lacp; pickPeakBiome
	g (IILcnt$b;)Lacp; pickSlopeBiome
	h (IILcnt$b;)Lacp; pickShatteredBiome
	a (Ljava/util/function/Consumer;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;FLacp;)V addSurfaceBiome
	b (Ljava/util/function/Consumer;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;FLacp;)V addUndergroundBiome
	c (Ljava/util/function/Consumer;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;Lcnt$b;FLacp;)V addBottomBiome
	a (Ldhd;Ldhd;Ldhd$b;)Z isDeepDarkRegion
	a (D)Ljava/lang/String; getDebugStringForPeaksAndValleys
	b (D)Ljava/lang/String; getDebugStringForContinentalness
	c (D)Ljava/lang/String; getDebugStringForErosion
	d (D)Ljava/lang/String; getDebugStringForTemperature
	e (D)Ljava/lang/String; getDebugStringForHumidity
	a (D[Lcnt$b;)Ljava/lang/String; getDebugStringForNoiseValue
	b ()[Lcnt$b; getTemperatureThresholds
	c ()[Lcnt$b; getHumidityThresholds
	d ()[Lcnt$b; getErosionThresholds
	e ()[Lcnt$b; getContinentalnessThresholds
	f ()[Lcnt$b; getPeaksAndValleysThresholds
	g ()[Lcnt$b; getWeirdnessThresholds
cob net/minecraft/world/level/biome/TheEndBiomeSource
	b CODEC
	c end
	d highlands
	e midlands
	f islands
	g barrens
	a (Lhf;)Lcob; create
	<init> (Lhe;Lhe;Lhe;Lhe;Lhe;)V <init>
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	getNoiseBiome (IIILcnt$f;)Lhe; getNoiseBiome
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
coc net/minecraft/world/level/biome/package-info
cod net/minecraft/world/level/block/AbstractBannerBlock
	a color
	<init> (Lcen;Ldca$d;)V <init>
	a (Ldcb;)Z isPossibleToRespawnInThis
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a ()Lcen; getColor
	a (Lcfz;Lczd;)V lambda$setPlacedBy$1
	b (Lcfz;Lczd;)V lambda$setPlacedBy$0
coe net/minecraft/world/level/block/AbstractCandleBlock
	a LIGHT_PER_CANDLE
	b LIT
	<init> (Ldca$d;)V <init>
	b (Ldcb;)Ljava/lang/Iterable; getParticleOffsets
	c (Ldcb;)Z isLit
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	d (Ldcb;)Z canBeLit
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcmm;Leei;Lapf;)V addParticlesAndSound
	a (Lbyo;Ldcb;Lcmn;Lgu;)V extinguish
	a (Lcmn;Ldcb;Lgu;Z)V setLit
	a (Lcmn;Lgu;Leei;)V lambda$extinguish$1
	a (Lcmm;Lgu;Lapf;Leei;)V lambda$animateTick$0
	<clinit> ()V <clinit>
cof net/minecraft/world/level/block/AbstractCauldronBlock
	c SIDE_THICKNESS
	d LEG_WIDTH
	e LEG_HEIGHT
	f LEG_DEPTH
	a FLOOR_LEVEL
	g INSIDE
	b SHAPE
	h interactions
	<init> (Ldca$d;Ljava/util/Map;)V <init>
	b (Ldcb;)D getContentHeight
	a (Ldcb;Lgu;Lbfj;)Z isEntityInsideContent
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;)Lefb; getInteractionShape
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	d (Ldcb;)Z isFull
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldxd;)Z canReceiveStalactiteDrip
	a (Ldcb;Lcmm;Lgu;Ldxd;)V receiveStalactiteDrip
	<clinit> ()V <clinit>
cog net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	<init> (Ldca$d;Ljava/util/function/Supplier;)V <init>
	a (Ldcb;Lcmm;Lgu;Z)Lcrq$c; combine
coh net/minecraft/world/level/block/AbstractFurnaceBlock
	a FACING
	b LIT
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Lbyo;)V openContainer
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lczp;Lczp;)Lczo; createFurnaceTicker
	<clinit> ()V <clinit>
coi net/minecraft/world/level/block/AbstractGlassBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
coj net/minecraft/world/level/block/AbstractSkullBlock
	a type
	<init> (Lcwp$a;Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a ()Lcwp$a; getType
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	g ()Lbfo; getEquipmentSlot
cok net/minecraft/world/level/block/AirBlock
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
col net/minecraft/world/level/block/AmethystBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
com net/minecraft/world/level/block/AmethystClusterBlock
	a WATERLOGGED
	b FACING
	c northAabb
	d southAabb
	e eastAabb
	f westAabb
	g upAabb
	h downAabb
	<init> (IILdca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
com$1 net/minecraft/world/level/block/AmethystClusterBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
coo net/minecraft/world/level/block/AnvilBlock
	a FACING
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	l FALL_DAMAGE_PER_DISTANCE
	m FALL_DAMAGE_MAX
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lbvg;)V falling
	a (Lcmm;Lgu;Ldcb;Ldcb;Lbvg;)V onLand
	a (Lcmm;Lgu;Lbvg;)V onBrokenAfterFall
	a (Lbfj;)Lben; getFallDamageSource
	e (Ldcb;)Ldcb; damage
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	d (Ldcb;Lcls;Lgu;)I getDustColor
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cop net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	d fruit
	e seedSupplier
	<init> (Lcxk;Ljava/util/function/Supplier;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
coq net/minecraft/world/level/block/AzaleaBlock
	a TREE_GROWER
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cor net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_AABB_OFFSET
	b SAPLING_SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcb;Lbyo;Lcls;Lgu;)F getDestroyProgress
	a (Lcmm;Lgu;)V growBamboo
	<clinit> ()V <clinit>
cos net/minecraft/world/level/block/BambooStalkBlock
	a SMALL_LEAVES_AABB_OFFSET
	b LARGE_LEAVES_AABB_OFFSET
	c COLLISION_AABB_OFFSET
	d SMALL_SHAPE
	e LARGE_SHAPE
	f COLLISION_SHAPE
	g AGE
	h LEAVES
	i STAGE
	j MAX_HEIGHT
	k STAGE_GROWING
	l STAGE_DONE_GROWING
	m AGE_THIN_BAMBOO
	n AGE_THICK_BAMBOO
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a_ (Ldcb;Lcls;Lgu;)Z isCollisionShapeFullBlock
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcb;Lbyo;Lcls;Lgu;)F getDestroyProgress
	a (Ldcb;Lcmm;Lgu;Lapf;I)V growBamboo
	a (Lcls;Lgu;)I getHeightAboveUpToMax
	b (Lcls;Lgu;)I getHeightBelowUpToMax
	<clinit> ()V <clinit>
cot net/minecraft/world/level/block/BannerBlock
	a ROTATION
	b BY_COLOR
	c SHAPE
	<init> (Lcen;Ldca$d;)V <init>
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcen;)Lcpn; byColor
	<clinit> ()V <clinit>
cou net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
	<clinit> ()V <clinit>
cov net/minecraft/world/level/block/BarrierBlock
	<init> (Ldca$d;)V <init>
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	b_ (Ldcb;)Lcvs; getRenderShape
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
cow net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cox net/minecraft/world/level/block/BaseCoralPlantBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
coy net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	c WATERLOGGED
	a AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmn;Lgu;)V tryScheduleDieTick
	e (Ldcb;Lcls;Lgu;)Z scanForWater
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	<clinit> ()V <clinit>
coz net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	b SHAPES
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	<clinit> ()V <clinit>
cpa net/minecraft/world/level/block/BaseEntityBlock
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcmm;Lgu;II)Z triggerEvent
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lczp;Lczp;Lczo;)Lczo; createTickerHelper
cpb net/minecraft/world/level/block/BaseFireBlock
	c SECONDS_ON_FIRE
	d fireDamage
	a AABB_OFFSET
	b DOWN_AABB
	<init> (Ldca$d;F)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcls;Lgu;)Ldcb; getState
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	f (Ldcb;)Z canBurn
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lcmm;)Z inPortalDimension
	a (Lcmm;Lbyo;Lgu;Ldcb;)V spawnDestroyParticles
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Lcmm;Lgu;Lha;)Z canBePlacedAt
	b (Lcmm;Lgu;Lha;)Z isPortal
	<clinit> ()V <clinit>
cpc net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	d type
	<init> (Ldca$d;Ldcq;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a ()I getPressedTime
	a (Ldcb;)Z isPossibleToRespawnInThis
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Lbfj;Lcmm;Lgu;Ldcb;I)V checkPressed
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcmm;Lgu;)V updateNeighbours
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	f_ (Ldcb;)Z isSignalSource
	a (Lcmm;Leed;Ljava/lang/Class;)I getEntityCount
	b (Lcmm;Lgu;)I getSignalStrength
	g (Ldcb;)I getSignalForState
	a (Ldcb;I)Ldcb; setSignalForState
	a (Lbfj;)Z lambda$getEntityCount$0
	<clinit> ()V <clinit>
cpd net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c WATERLOGGED
	d isStraight
	a (Lcmm;Lgu;)Z isRail
	g (Ldcb;)Z isRail
	<init> (ZLdca$d;)V <init>
	a ()Z isStraight
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Z)Ldcb; updateState
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lgu;Lcmm;Lddf;)Z shouldBeRemoved
	a (Ldcb;Lcmm;Lgu;Lcpn;)V updateState
	a (Lcmm;Lgu;Ldcb;Z)Ldcb; updateDir
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcih;)Ldcb; getStateForPlacement
	b ()Ldde; getShapeProperty
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	<clinit> ()V <clinit>
cpd$1 net/minecraft/world/level/block/BaseRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
cpe net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lcen; getColor
cpf net/minecraft/world/level/block/BeaconBlock
	<init> (Ldca$d;)V <init>
	a ()Lcen; getColor
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
cpg net/minecraft/world/level/block/BedBlock
	a PART
	b OCCUPIED
	c HEIGHT
	d BASE
	m LEG_WIDTH
	e LEG_NORTH_WEST
	f LEG_SOUTH_WEST
	g LEG_NORTH_EAST
	h LEG_SOUTH_EAST
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l EAST_SHAPE
	n color
	<init> (Lcen;Ldca$d;)V <init>
	a (Lcls;Lgu;)Lha; getBedOrientation
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;)Z canSetSpawn
	a (Lcmm;Lgu;)Z kickVillagerOutOfBed
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Lcls;Lbfj;)V updateEntityAfterFallOn
	a (Lbfj;)V bounceUp
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldco;Lha;)Lha; getNeighbourDirection
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	g (Ldcb;)Lha; getConnectedDirection
	h (Ldcb;)Lcrq$a; getBlockType
	b (Lcls;Lgu;)Z isBunkBed
	a (Lbfn;Lclw;Lgu;Lha;F)Ljava/util/Optional; findStandUpPosition
	a (Lbfn;Lclw;Lgu;Lha;Lha;)Ljava/util/Optional; findBunkBedStandUpPosition
	a (Lbfn;Lclw;Lgu;[[IZ)Ljava/util/Optional; findStandUpPositionAtOffset
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a ()Lcen; getColor
	a (Ldcb;Lgu;)J getSeed
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lha;Lha;)[[I bedStandUpOffsets
	b (Lha;Lha;)[[I bedSurroundStandUpOffsets
	a (Lha;)[[I bedAboveStandUpOffsets
	a (Lbyo;Lbyo$a;)V lambda$use$0
	<clinit> ()V <clinit>
cpg$1 net/minecraft/world/level/block/BedBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cph net/minecraft/world/level/block/BeehiveBlock
	a FACING
	b HONEY_LEVEL
	c MAX_HONEY_LEVELS
	d SHEARED_HONEYCOMB_COUNT
	<init> (Ldca$d;)V <init>
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Lcmm;Lbyo;Lgu;Ldcb;Lczn;Lcfz;)V playerDestroy
	b (Lcmm;Lgu;)V angerNearbyBees
	a (Lcmm;Lgu;)V dropHoneycomb
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	c (Lcmm;Lgu;)Z hiveContainsBees
	a (Lcmm;Ldcb;Lgu;Lbyo;Lczk$b;)V releaseBeesAndResetHoneyLevel
	a (Lcmm;Ldcb;Lgu;)V resetHoneyLevel
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcmm;Lgu;Ldcb;)V trySpawnDripParticles
	a (Lcmm;Lgu;Lefb;D)V spawnParticle
	a (Lcmm;DDDDD)V spawnFluidParticle
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lbdw;Lbyo;)V lambda$use$0
	<clinit> ()V <clinit>
cpi net/minecraft/world/level/block/BeetrootBlock
	a MAX_AGE
	b AGE
	e SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	a ()Lddb; getAgeProperty
	b ()I getMaxAge
	c ()Lcml; getBaseSeedId
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;)I getBonemealAgeIncrease
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cpj net/minecraft/world/level/block/BellBlock
	a FACING
	b ATTACHMENT
	c POWERED
	e NORTH_SOUTH_FLOOR_SHAPE
	f EAST_WEST_FLOOR_SHAPE
	g BELL_TOP_SHAPE
	h BELL_BOTTOM_SHAPE
	i BELL_SHAPE
	j NORTH_SOUTH_BETWEEN
	k EAST_WEST_BETWEEN
	l TO_WEST
	m TO_EAST
	n TO_NORTH
	D TO_SOUTH
	E CEILING_SHAPE
	d EVENT_BELL_RING
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Ldcb;Leee;Lbyo;Z)Z onHit
	a (Ldcb;Lha;D)Z isProperHit
	a (Lcmm;Lgu;Lha;)Z attemptToRing
	a (Lbfj;Lcmm;Lgu;Lha;)Z attemptToRing
	h (Ldcb;)Lefb; getVoxelShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	n (Ldcb;)Lha; getConnectedDirection
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cpj$1 net/minecraft/world/level/block/BellBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
	<clinit> ()V <clinit>
cpk net/minecraft/world/level/block/BigDripleafBlock
	a WATERLOGGED
	b TILT
	c NO_TICK
	d DELAY_UNTIL_NEXT_TILT_STATE
	e MAX_GEN_HEIGHT
	f STEM_WIDTH
	g ENTITY_DETECTION_MIN_Y
	h LOWEST_LEAF_TOP
	i LEAF_SHAPES
	j STEM_SLICER
	k STEM_SHAPES
	l shapesCache
	<init> (Ldca$d;)V <init>
	h (Ldcb;)Lefb; calculateShape
	a (Lcmn;Lapf;Lgu;Lha;)V placeWithRandomHeight
	n (Ldcb;)Z canReplace
	a (Lcmo;Lgu;Ldcb;)Z canPlaceAt
	a (Lcmn;Lgu;Ldxe;Lha;)Z place
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Lgu;Lamg;)V playTiltSound
	a (Lgu;Lbfj;)Z canEntityTilt
	a (Ldcb;Lcmm;Lgu;Lddm;Lamg;)V setTiltAndScheduleTick
	d (Ldcb;Lcmm;Lgu;)V resetTilt
	a (Ldcb;Lcmm;Lgu;Lddm;)V setTilt
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V lambda$static$0
	<clinit> ()V <clinit>
cpl net/minecraft/world/level/block/BigDripleafStemBlock
	e WATERLOGGED
	f STEM_WIDTH
	a NORTH_SHAPE
	b SOUTH_SHAPE
	c EAST_SHAPE
	d WEST_SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcmn;Lgu;Ldxe;Lha;)Z place
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	<clinit> ()V <clinit>
cpl$1 net/minecraft/world/level/block/BigDripleafStemBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cpm net/minecraft/world/level/block/BlastFurnaceBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Lbyo;)V openContainer
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
cpn net/minecraft/world/level/block/Block
	a LOGGER
	b builtInRegistryHolder
	o BLOCK_STATE_REGISTRY
	c SHAPE_FULL_BLOCK_CACHE
	p UPDATE_NEIGHBORS
	q UPDATE_CLIENTS
	r UPDATE_INVISIBLE
	s UPDATE_IMMEDIATE
	t UPDATE_KNOWN_SHAPE
	u UPDATE_SUPPRESS_DROPS
	v UPDATE_MOVE_BY_PISTON
	w UPDATE_NONE
	x UPDATE_ALL
	y UPDATE_ALL_IMMEDIATE
	z INDESTRUCTIBLE
	A INSTANT
	B UPDATE_LIMIT
	C stateDefinition
	d defaultBlockState
	e descriptionId
	f item
	g CACHE_SIZE
	h OCCLUSION_CACHE
	i (Ldcb;)I getId
	a (I)Ldcb; stateById
	a (Lcfu;)Lcpn; byItem
	a (Ldcb;Ldcb;Lcmn;Lgu;)Ldcb; pushEntitiesUp
	a (DDDDDD)Lefb; box
	b (Ldcb;Lcmn;Lgu;)Ldcb; updateFromNeighbourShapes
	a (Ldcb;Ldcb;Lcmn;Lgu;I)V updateOrDestroy
	a (Ldcb;Ldcb;Lcmn;Lgu;II)V updateOrDestroy
	<init> (Ldca$d;)V <init>
	j (Ldcb;)Z isExceptionForConnection
	e_ (Ldcb;)Z isRandomlyTicking
	a (Ldcb;Lcls;Lgu;Lha;Lgu;)Z shouldRenderFace
	c (Lcls;Lgu;)Z canSupportRigidBlock
	a (Lcmp;Lgu;Lha;)Z canSupportCenter
	a (Lefb;Lha;)Z isFaceFull
	a (Lefb;)Z isShapeFullBlock
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcmn;Lgu;Ldcb;)V destroy
	a (Ldcb;Laif;Lgu;Lczn;)Ljava/util/List; getDrops
	a (Ldcb;Laif;Lgu;Lczn;Lbfj;Lcfz;)Ljava/util/List; getDrops
	c (Ldcb;Lcmm;Lgu;)V dropResources
	a (Ldcb;Lcmn;Lgu;Lczn;)V dropResources
	a (Ldcb;Lcmm;Lgu;Lczn;Lbfj;Lcfz;)V dropResources
	a (Lcmm;Lgu;Lcfz;)V popResource
	a (Lcmm;Lgu;Lha;Lcfz;)V popResourceFromFace
	a (Lcmm;Ljava/util/function/Supplier;Lcfz;)V popResource
	a (Laif;Lgu;I)V popExperience
	d ()F getExplosionResistance
	a (Lcmm;Lgu;Lcme;)V wasExploded
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lbyo;Lgu;Ldcb;Lczn;Lcfz;)V playerDestroy
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;)Z isPossibleToRespawnInThis
	e ()Ltj; getName
	f ()Ljava/lang/String; getDescriptionId
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Lcls;Lbfj;)V updateEntityAfterFallOn
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	h ()F getFriction
	i ()F getSpeedFactor
	j ()F getJumpFactor
	a (Lcmm;Lbyo;Lgu;Ldcb;)V spawnDestroyParticles
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Ldcb;Lcmm;Lgu;Lcnk$c;)V handlePrecipitation
	a (Lcme;)Z dropFromExplosion
	a (Ldcc$a;)V createBlockStateDefinition
	l ()Ldcc; getStateDefinition
	k (Ldcb;)V registerDefaultState
	n ()Ldcb; defaultBlockState
	l (Ldcb;)Ldcb; withPropertiesOf
	a (Ldcb;Ldcb;Ldde;)Ldcb; copyProperty
	m (Ldcb;)Lcxa; getSoundType
	k ()Lcfu; asItem
	o ()Z hasDynamicShape
	toString ()Ljava/lang/String; toString
	a (Lcfz;Lcls;Ljava/util/List;Lchq;)V appendHoverText
	p ()Lcpn; asBlock
	a (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; getShapeForEachState
	q ()Lhe$c; builtInRegistryHolder
	a (Laif;Lgu;Lcfz;Lbdc;)V tryDropExperience
	a (Lcmm;DDDLcfz;DDD)Lbvh; lambda$popResourceFromFace$5
	a (Lcmm;DDDLcfz;)Lbvh; lambda$popResource$4
	b (Lcmm;Lgu;Lcfz;)V lambda$dropResources$3
	a (Lcmn;Lgu;Lcfz;)V lambda$dropResources$2
	c (Lcmm;Lgu;Lcfz;)V lambda$dropResources$1
	u ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	<clinit> ()V <clinit>
cpn$1 net/minecraft/world/level/block/Block$1
	<init> ()V <init>
	a (Lefb;)Ljava/lang/Boolean; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
cpn$2 net/minecraft/world/level/block/Block$2
	<init> (IF)V <init>
	rehash (I)V rehash
cpn$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
	<init> (Ldcb;Ldcb;Lha;)V <init>
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
cpo net/minecraft/world/level/block/Blocks
	a AIR
	b STONE
	c GRANITE
	d POLISHED_GRANITE
	e DIORITE
	f POLISHED_DIORITE
	g ANDESITE
	h POLISHED_ANDESITE
	i GRASS_BLOCK
	j DIRT
	k COARSE_DIRT
	l PODZOL
	m COBBLESTONE
	n OAK_PLANKS
	o SPRUCE_PLANKS
	p BIRCH_PLANKS
	q JUNGLE_PLANKS
	r ACACIA_PLANKS
	s CHERRY_PLANKS
	t DARK_OAK_PLANKS
	u MANGROVE_PLANKS
	v BAMBOO_PLANKS
	w BAMBOO_MOSAIC
	x OAK_SAPLING
	y SPRUCE_SAPLING
	z BIRCH_SAPLING
	A JUNGLE_SAPLING
	B ACACIA_SAPLING
	C CHERRY_SAPLING
	D DARK_OAK_SAPLING
	E MANGROVE_PROPAGULE
	F BEDROCK
	G WATER
	H LAVA
	I SAND
	J SUSPICIOUS_SAND
	K RED_SAND
	L GRAVEL
	M SUSPICIOUS_GRAVEL
	N GOLD_ORE
	O DEEPSLATE_GOLD_ORE
	P IRON_ORE
	Q DEEPSLATE_IRON_ORE
	R COAL_ORE
	S DEEPSLATE_COAL_ORE
	T NETHER_GOLD_ORE
	U OAK_LOG
	V SPRUCE_LOG
	W BIRCH_LOG
	X JUNGLE_LOG
	Y ACACIA_LOG
	Z CHERRY_LOG
	aa DARK_OAK_LOG
	ab MANGROVE_LOG
	ac MANGROVE_ROOTS
	ad MUDDY_MANGROVE_ROOTS
	ae BAMBOO_BLOCK
	af STRIPPED_SPRUCE_LOG
	ag STRIPPED_BIRCH_LOG
	ah STRIPPED_JUNGLE_LOG
	ai STRIPPED_ACACIA_LOG
	aj STRIPPED_CHERRY_LOG
	ak STRIPPED_DARK_OAK_LOG
	al STRIPPED_OAK_LOG
	am STRIPPED_MANGROVE_LOG
	an STRIPPED_BAMBOO_BLOCK
	ao OAK_WOOD
	ap SPRUCE_WOOD
	aq BIRCH_WOOD
	ar JUNGLE_WOOD
	as ACACIA_WOOD
	at CHERRY_WOOD
	au DARK_OAK_WOOD
	av MANGROVE_WOOD
	aw STRIPPED_OAK_WOOD
	ax STRIPPED_SPRUCE_WOOD
	ay STRIPPED_BIRCH_WOOD
	az STRIPPED_JUNGLE_WOOD
	aA STRIPPED_ACACIA_WOOD
	aB STRIPPED_CHERRY_WOOD
	aC STRIPPED_DARK_OAK_WOOD
	aD STRIPPED_MANGROVE_WOOD
	aE OAK_LEAVES
	aF SPRUCE_LEAVES
	aG BIRCH_LEAVES
	aH JUNGLE_LEAVES
	aI ACACIA_LEAVES
	aJ CHERRY_LEAVES
	aK DARK_OAK_LEAVES
	aL MANGROVE_LEAVES
	aM AZALEA_LEAVES
	aN FLOWERING_AZALEA_LEAVES
	aO SPONGE
	aP WET_SPONGE
	aQ GLASS
	aR LAPIS_ORE
	aS DEEPSLATE_LAPIS_ORE
	aT LAPIS_BLOCK
	aU DISPENSER
	aV SANDSTONE
	aW CHISELED_SANDSTONE
	aX CUT_SANDSTONE
	aY NOTE_BLOCK
	aZ WHITE_BED
	ba ORANGE_BED
	bb MAGENTA_BED
	bc LIGHT_BLUE_BED
	bd YELLOW_BED
	be LIME_BED
	bf PINK_BED
	bg GRAY_BED
	bh LIGHT_GRAY_BED
	bi CYAN_BED
	bj PURPLE_BED
	bk BLUE_BED
	bl BROWN_BED
	bm GREEN_BED
	bn RED_BED
	bo BLACK_BED
	bp POWERED_RAIL
	bq DETECTOR_RAIL
	br STICKY_PISTON
	bs COBWEB
	bt GRASS
	bu FERN
	bv DEAD_BUSH
	bw SEAGRASS
	bx TALL_SEAGRASS
	by PISTON
	bz PISTON_HEAD
	bA WHITE_WOOL
	bB ORANGE_WOOL
	bC MAGENTA_WOOL
	bD LIGHT_BLUE_WOOL
	bE YELLOW_WOOL
	bF LIME_WOOL
	bG PINK_WOOL
	bH GRAY_WOOL
	bI LIGHT_GRAY_WOOL
	bJ CYAN_WOOL
	bK PURPLE_WOOL
	bL BLUE_WOOL
	bM BROWN_WOOL
	bN GREEN_WOOL
	bO RED_WOOL
	bP BLACK_WOOL
	bQ MOVING_PISTON
	bR DANDELION
	bS TORCHFLOWER
	bT POPPY
	bU BLUE_ORCHID
	bV ALLIUM
	bW AZURE_BLUET
	bX RED_TULIP
	bY ORANGE_TULIP
	bZ WHITE_TULIP
	ca PINK_TULIP
	cb OXEYE_DAISY
	cc CORNFLOWER
	cd WITHER_ROSE
	ce LILY_OF_THE_VALLEY
	cf BROWN_MUSHROOM
	cg RED_MUSHROOM
	ch GOLD_BLOCK
	ci IRON_BLOCK
	cj BRICKS
	ck TNT
	cl BOOKSHELF
	cm CHISELED_BOOKSHELF
	cn MOSSY_COBBLESTONE
	co OBSIDIAN
	cp TORCH
	cq WALL_TORCH
	cr FIRE
	cs SOUL_FIRE
	ct SPAWNER
	cu OAK_STAIRS
	cv CHEST
	cw REDSTONE_WIRE
	cx DIAMOND_ORE
	cy DEEPSLATE_DIAMOND_ORE
	cz DIAMOND_BLOCK
	cA CRAFTING_TABLE
	cB WHEAT
	cC FARMLAND
	cD FURNACE
	cE OAK_SIGN
	cF SPRUCE_SIGN
	cG BIRCH_SIGN
	cH ACACIA_SIGN
	cI CHERRY_SIGN
	cJ JUNGLE_SIGN
	cK DARK_OAK_SIGN
	cL MANGROVE_SIGN
	cM BAMBOO_SIGN
	cN OAK_DOOR
	cO LADDER
	cP RAIL
	cQ COBBLESTONE_STAIRS
	cR OAK_WALL_SIGN
	cS SPRUCE_WALL_SIGN
	cT BIRCH_WALL_SIGN
	cU ACACIA_WALL_SIGN
	cV CHERRY_WALL_SIGN
	cW JUNGLE_WALL_SIGN
	cX DARK_OAK_WALL_SIGN
	cY MANGROVE_WALL_SIGN
	cZ BAMBOO_WALL_SIGN
	da OAK_HANGING_SIGN
	db SPRUCE_HANGING_SIGN
	dc BIRCH_HANGING_SIGN
	dd ACACIA_HANGING_SIGN
	de CHERRY_HANGING_SIGN
	df JUNGLE_HANGING_SIGN
	dg DARK_OAK_HANGING_SIGN
	dh CRIMSON_HANGING_SIGN
	di WARPED_HANGING_SIGN
	dj MANGROVE_HANGING_SIGN
	dk BAMBOO_HANGING_SIGN
	dl OAK_WALL_HANGING_SIGN
	dm SPRUCE_WALL_HANGING_SIGN
	dn BIRCH_WALL_HANGING_SIGN
	do ACACIA_WALL_HANGING_SIGN
	dp CHERRY_WALL_HANGING_SIGN
	dq JUNGLE_WALL_HANGING_SIGN
	dr DARK_OAK_WALL_HANGING_SIGN
	ds MANGROVE_WALL_HANGING_SIGN
	dt CRIMSON_WALL_HANGING_SIGN
	du WARPED_WALL_HANGING_SIGN
	dv BAMBOO_WALL_HANGING_SIGN
	dw LEVER
	dx STONE_PRESSURE_PLATE
	dy IRON_DOOR
	dz OAK_PRESSURE_PLATE
	dA SPRUCE_PRESSURE_PLATE
	dB BIRCH_PRESSURE_PLATE
	dC JUNGLE_PRESSURE_PLATE
	dD ACACIA_PRESSURE_PLATE
	dE CHERRY_PRESSURE_PLATE
	dF DARK_OAK_PRESSURE_PLATE
	dG MANGROVE_PRESSURE_PLATE
	dH BAMBOO_PRESSURE_PLATE
	dI REDSTONE_ORE
	dJ DEEPSLATE_REDSTONE_ORE
	dK REDSTONE_TORCH
	dL REDSTONE_WALL_TORCH
	dM STONE_BUTTON
	dN SNOW
	dO ICE
	dP SNOW_BLOCK
	dQ CACTUS
	dR CLAY
	dS SUGAR_CANE
	dT JUKEBOX
	dU OAK_FENCE
	dV PUMPKIN
	dW NETHERRACK
	dX SOUL_SAND
	dY SOUL_SOIL
	dZ BASALT
	ea POLISHED_BASALT
	eb SOUL_TORCH
	ec SOUL_WALL_TORCH
	ed GLOWSTONE
	ee NETHER_PORTAL
	ef CARVED_PUMPKIN
	eg JACK_O_LANTERN
	eh CAKE
	ei REPEATER
	ej WHITE_STAINED_GLASS
	ek ORANGE_STAINED_GLASS
	el MAGENTA_STAINED_GLASS
	em LIGHT_BLUE_STAINED_GLASS
	en YELLOW_STAINED_GLASS
	eo LIME_STAINED_GLASS
	ep PINK_STAINED_GLASS
	eq GRAY_STAINED_GLASS
	er LIGHT_GRAY_STAINED_GLASS
	es CYAN_STAINED_GLASS
	et PURPLE_STAINED_GLASS
	eu BLUE_STAINED_GLASS
	ev BROWN_STAINED_GLASS
	ew GREEN_STAINED_GLASS
	ex RED_STAINED_GLASS
	ey BLACK_STAINED_GLASS
	ez OAK_TRAPDOOR
	eA SPRUCE_TRAPDOOR
	eB BIRCH_TRAPDOOR
	eC JUNGLE_TRAPDOOR
	eD ACACIA_TRAPDOOR
	eE CHERRY_TRAPDOOR
	eF DARK_OAK_TRAPDOOR
	eG MANGROVE_TRAPDOOR
	eH BAMBOO_TRAPDOOR
	eI STONE_BRICKS
	eJ MOSSY_STONE_BRICKS
	eK CRACKED_STONE_BRICKS
	eL CHISELED_STONE_BRICKS
	eM PACKED_MUD
	eN MUD_BRICKS
	eO INFESTED_STONE
	eP INFESTED_COBBLESTONE
	eQ INFESTED_STONE_BRICKS
	eR INFESTED_MOSSY_STONE_BRICKS
	eS INFESTED_CRACKED_STONE_BRICKS
	eT INFESTED_CHISELED_STONE_BRICKS
	eU BROWN_MUSHROOM_BLOCK
	eV RED_MUSHROOM_BLOCK
	eW MUSHROOM_STEM
	eX IRON_BARS
	eY CHAIN
	eZ GLASS_PANE
	fa MELON
	fb ATTACHED_PUMPKIN_STEM
	fc ATTACHED_MELON_STEM
	fd PUMPKIN_STEM
	fe MELON_STEM
	ff VINE
	fg GLOW_LICHEN
	fh OAK_FENCE_GATE
	fi BRICK_STAIRS
	fj STONE_BRICK_STAIRS
	fk MUD_BRICK_STAIRS
	fl MYCELIUM
	fm LILY_PAD
	fn NETHER_BRICKS
	fo NETHER_BRICK_FENCE
	fp NETHER_BRICK_STAIRS
	fq NETHER_WART
	fr ENCHANTING_TABLE
	fs BREWING_STAND
	ft CAULDRON
	fu WATER_CAULDRON
	fv LAVA_CAULDRON
	fw POWDER_SNOW_CAULDRON
	fx END_PORTAL
	fy END_PORTAL_FRAME
	fz END_STONE
	fA DRAGON_EGG
	fB REDSTONE_LAMP
	fC COCOA
	fD SANDSTONE_STAIRS
	fE EMERALD_ORE
	fF DEEPSLATE_EMERALD_ORE
	fG ENDER_CHEST
	fH TRIPWIRE_HOOK
	fI TRIPWIRE
	fJ EMERALD_BLOCK
	fK SPRUCE_STAIRS
	fL BIRCH_STAIRS
	fM JUNGLE_STAIRS
	fN COMMAND_BLOCK
	fO BEACON
	fP COBBLESTONE_WALL
	fQ MOSSY_COBBLESTONE_WALL
	fR FLOWER_POT
	fS POTTED_TORCHFLOWER
	fT POTTED_OAK_SAPLING
	fU POTTED_SPRUCE_SAPLING
	fV POTTED_BIRCH_SAPLING
	fW POTTED_JUNGLE_SAPLING
	fX POTTED_ACACIA_SAPLING
	fY POTTED_CHERRY_SAPLING
	fZ POTTED_DARK_OAK_SAPLING
	ga POTTED_MANGROVE_PROPAGULE
	gb POTTED_FERN
	gc POTTED_DANDELION
	gd POTTED_POPPY
	ge POTTED_BLUE_ORCHID
	gf POTTED_ALLIUM
	gg POTTED_AZURE_BLUET
	gh POTTED_RED_TULIP
	gi POTTED_ORANGE_TULIP
	gj POTTED_WHITE_TULIP
	gk POTTED_PINK_TULIP
	gl POTTED_OXEYE_DAISY
	gm POTTED_CORNFLOWER
	gn POTTED_LILY_OF_THE_VALLEY
	go POTTED_WITHER_ROSE
	gp POTTED_RED_MUSHROOM
	gq POTTED_BROWN_MUSHROOM
	gr POTTED_DEAD_BUSH
	gs POTTED_CACTUS
	gt CARROTS
	gu POTATOES
	gv OAK_BUTTON
	gw SPRUCE_BUTTON
	gx BIRCH_BUTTON
	gy JUNGLE_BUTTON
	gz ACACIA_BUTTON
	gA CHERRY_BUTTON
	gB DARK_OAK_BUTTON
	gC MANGROVE_BUTTON
	gD BAMBOO_BUTTON
	gE SKELETON_SKULL
	gF SKELETON_WALL_SKULL
	gG WITHER_SKELETON_SKULL
	gH WITHER_SKELETON_WALL_SKULL
	gI ZOMBIE_HEAD
	gJ ZOMBIE_WALL_HEAD
	gK PLAYER_HEAD
	gL PLAYER_WALL_HEAD
	gM CREEPER_HEAD
	gN CREEPER_WALL_HEAD
	gO DRAGON_HEAD
	gP DRAGON_WALL_HEAD
	gQ PIGLIN_HEAD
	gR PIGLIN_WALL_HEAD
	gS ANVIL
	gT CHIPPED_ANVIL
	gU DAMAGED_ANVIL
	gV TRAPPED_CHEST
	gW LIGHT_WEIGHTED_PRESSURE_PLATE
	gX HEAVY_WEIGHTED_PRESSURE_PLATE
	gY COMPARATOR
	gZ DAYLIGHT_DETECTOR
	ha REDSTONE_BLOCK
	hb NETHER_QUARTZ_ORE
	hc HOPPER
	hd QUARTZ_BLOCK
	he CHISELED_QUARTZ_BLOCK
	hf QUARTZ_PILLAR
	hg QUARTZ_STAIRS
	hh ACTIVATOR_RAIL
	hi DROPPER
	hj WHITE_TERRACOTTA
	hk ORANGE_TERRACOTTA
	hl MAGENTA_TERRACOTTA
	hm LIGHT_BLUE_TERRACOTTA
	hn YELLOW_TERRACOTTA
	ho LIME_TERRACOTTA
	hp PINK_TERRACOTTA
	hq GRAY_TERRACOTTA
	hr LIGHT_GRAY_TERRACOTTA
	hs CYAN_TERRACOTTA
	ht PURPLE_TERRACOTTA
	hu BLUE_TERRACOTTA
	hv BROWN_TERRACOTTA
	hw GREEN_TERRACOTTA
	hx RED_TERRACOTTA
	hy BLACK_TERRACOTTA
	hz WHITE_STAINED_GLASS_PANE
	hA ORANGE_STAINED_GLASS_PANE
	hB MAGENTA_STAINED_GLASS_PANE
	hC LIGHT_BLUE_STAINED_GLASS_PANE
	hD YELLOW_STAINED_GLASS_PANE
	hE LIME_STAINED_GLASS_PANE
	hF PINK_STAINED_GLASS_PANE
	hG GRAY_STAINED_GLASS_PANE
	hH LIGHT_GRAY_STAINED_GLASS_PANE
	hI CYAN_STAINED_GLASS_PANE
	hJ PURPLE_STAINED_GLASS_PANE
	hK BLUE_STAINED_GLASS_PANE
	hL BROWN_STAINED_GLASS_PANE
	hM GREEN_STAINED_GLASS_PANE
	hN RED_STAINED_GLASS_PANE
	hO BLACK_STAINED_GLASS_PANE
	hP ACACIA_STAIRS
	hQ CHERRY_STAIRS
	hR DARK_OAK_STAIRS
	hS MANGROVE_STAIRS
	hT BAMBOO_STAIRS
	hU BAMBOO_MOSAIC_STAIRS
	hV SLIME_BLOCK
	hW BARRIER
	hX LIGHT
	hY IRON_TRAPDOOR
	hZ PRISMARINE
	ia PRISMARINE_BRICKS
	ib DARK_PRISMARINE
	ic PRISMARINE_STAIRS
	id PRISMARINE_BRICK_STAIRS
	ie DARK_PRISMARINE_STAIRS
	if PRISMARINE_SLAB
	ig PRISMARINE_BRICK_SLAB
	ih DARK_PRISMARINE_SLAB
	ii SEA_LANTERN
	ij HAY_BLOCK
	ik WHITE_CARPET
	il ORANGE_CARPET
	im MAGENTA_CARPET
	in LIGHT_BLUE_CARPET
	io YELLOW_CARPET
	ip LIME_CARPET
	iq PINK_CARPET
	ir GRAY_CARPET
	is LIGHT_GRAY_CARPET
	it CYAN_CARPET
	iu PURPLE_CARPET
	iv BLUE_CARPET
	iw BROWN_CARPET
	ix GREEN_CARPET
	iy RED_CARPET
	iz BLACK_CARPET
	iA TERRACOTTA
	iB COAL_BLOCK
	iC PACKED_ICE
	iD SUNFLOWER
	iE LILAC
	iF ROSE_BUSH
	iG PEONY
	iH TALL_GRASS
	iI LARGE_FERN
	iJ WHITE_BANNER
	iK ORANGE_BANNER
	iL MAGENTA_BANNER
	iM LIGHT_BLUE_BANNER
	iN YELLOW_BANNER
	iO LIME_BANNER
	iP PINK_BANNER
	iQ GRAY_BANNER
	iR LIGHT_GRAY_BANNER
	iS CYAN_BANNER
	iT PURPLE_BANNER
	iU BLUE_BANNER
	iV BROWN_BANNER
	iW GREEN_BANNER
	iX RED_BANNER
	iY BLACK_BANNER
	iZ WHITE_WALL_BANNER
	ja ORANGE_WALL_BANNER
	jb MAGENTA_WALL_BANNER
	jc LIGHT_BLUE_WALL_BANNER
	jd YELLOW_WALL_BANNER
	je LIME_WALL_BANNER
	jf PINK_WALL_BANNER
	jg GRAY_WALL_BANNER
	jh LIGHT_GRAY_WALL_BANNER
	ji CYAN_WALL_BANNER
	jj PURPLE_WALL_BANNER
	jk BLUE_WALL_BANNER
	jl BROWN_WALL_BANNER
	jm GREEN_WALL_BANNER
	jn RED_WALL_BANNER
	jo BLACK_WALL_BANNER
	jp RED_SANDSTONE
	jq CHISELED_RED_SANDSTONE
	jr CUT_RED_SANDSTONE
	js RED_SANDSTONE_STAIRS
	jt OAK_SLAB
	ju SPRUCE_SLAB
	jv BIRCH_SLAB
	jw JUNGLE_SLAB
	jx ACACIA_SLAB
	jy CHERRY_SLAB
	jz DARK_OAK_SLAB
	jA MANGROVE_SLAB
	jB BAMBOO_SLAB
	jC BAMBOO_MOSAIC_SLAB
	jD STONE_SLAB
	jE SMOOTH_STONE_SLAB
	jF SANDSTONE_SLAB
	jG CUT_SANDSTONE_SLAB
	jH PETRIFIED_OAK_SLAB
	jI COBBLESTONE_SLAB
	jJ BRICK_SLAB
	jK STONE_BRICK_SLAB
	jL MUD_BRICK_SLAB
	jM NETHER_BRICK_SLAB
	jN QUARTZ_SLAB
	jO RED_SANDSTONE_SLAB
	jP CUT_RED_SANDSTONE_SLAB
	jQ PURPUR_SLAB
	jR SMOOTH_STONE
	jS SMOOTH_SANDSTONE
	jT SMOOTH_QUARTZ
	jU SMOOTH_RED_SANDSTONE
	jV SPRUCE_FENCE_GATE
	jW BIRCH_FENCE_GATE
	jX JUNGLE_FENCE_GATE
	jY ACACIA_FENCE_GATE
	jZ CHERRY_FENCE_GATE
	ka DARK_OAK_FENCE_GATE
	kb MANGROVE_FENCE_GATE
	kc BAMBOO_FENCE_GATE
	kd SPRUCE_FENCE
	ke BIRCH_FENCE
	kf JUNGLE_FENCE
	kg ACACIA_FENCE
	kh CHERRY_FENCE
	ki DARK_OAK_FENCE
	kj MANGROVE_FENCE
	kk BAMBOO_FENCE
	kl SPRUCE_DOOR
	km BIRCH_DOOR
	kn JUNGLE_DOOR
	ko ACACIA_DOOR
	kp CHERRY_DOOR
	kq DARK_OAK_DOOR
	kr MANGROVE_DOOR
	ks BAMBOO_DOOR
	kt END_ROD
	ku CHORUS_PLANT
	kv CHORUS_FLOWER
	kw PURPUR_BLOCK
	kx PURPUR_PILLAR
	ky PURPUR_STAIRS
	kz END_STONE_BRICKS
	kA TORCHFLOWER_CROP
	kB PITCHER_CROP
	kC PITCHER_PLANT
	kD BEETROOTS
	kE DIRT_PATH
	kF END_GATEWAY
	kG REPEATING_COMMAND_BLOCK
	kH CHAIN_COMMAND_BLOCK
	kI FROSTED_ICE
	kJ MAGMA_BLOCK
	kK NETHER_WART_BLOCK
	kL RED_NETHER_BRICKS
	kM BONE_BLOCK
	kN STRUCTURE_VOID
	kO OBSERVER
	kP SHULKER_BOX
	kQ WHITE_SHULKER_BOX
	kR ORANGE_SHULKER_BOX
	kS MAGENTA_SHULKER_BOX
	kT LIGHT_BLUE_SHULKER_BOX
	kU YELLOW_SHULKER_BOX
	kV LIME_SHULKER_BOX
	kW PINK_SHULKER_BOX
	kX GRAY_SHULKER_BOX
	kY LIGHT_GRAY_SHULKER_BOX
	kZ CYAN_SHULKER_BOX
	la PURPLE_SHULKER_BOX
	lb BLUE_SHULKER_BOX
	lc BROWN_SHULKER_BOX
	ld GREEN_SHULKER_BOX
	le RED_SHULKER_BOX
	lf BLACK_SHULKER_BOX
	lg WHITE_GLAZED_TERRACOTTA
	lh ORANGE_GLAZED_TERRACOTTA
	li MAGENTA_GLAZED_TERRACOTTA
	lj LIGHT_BLUE_GLAZED_TERRACOTTA
	lk YELLOW_GLAZED_TERRACOTTA
	ll LIME_GLAZED_TERRACOTTA
	lm PINK_GLAZED_TERRACOTTA
	ln GRAY_GLAZED_TERRACOTTA
	lo LIGHT_GRAY_GLAZED_TERRACOTTA
	lp CYAN_GLAZED_TERRACOTTA
	lq PURPLE_GLAZED_TERRACOTTA
	lr BLUE_GLAZED_TERRACOTTA
	ls BROWN_GLAZED_TERRACOTTA
	lt GREEN_GLAZED_TERRACOTTA
	lu RED_GLAZED_TERRACOTTA
	lv BLACK_GLAZED_TERRACOTTA
	lw WHITE_CONCRETE
	lx ORANGE_CONCRETE
	ly MAGENTA_CONCRETE
	lz LIGHT_BLUE_CONCRETE
	lA YELLOW_CONCRETE
	lB LIME_CONCRETE
	lC PINK_CONCRETE
	lD GRAY_CONCRETE
	lE LIGHT_GRAY_CONCRETE
	lF CYAN_CONCRETE
	lG PURPLE_CONCRETE
	lH BLUE_CONCRETE
	lI BROWN_CONCRETE
	lJ GREEN_CONCRETE
	lK RED_CONCRETE
	lL BLACK_CONCRETE
	lM WHITE_CONCRETE_POWDER
	lN ORANGE_CONCRETE_POWDER
	lO MAGENTA_CONCRETE_POWDER
	lP LIGHT_BLUE_CONCRETE_POWDER
	lQ YELLOW_CONCRETE_POWDER
	lR LIME_CONCRETE_POWDER
	lS PINK_CONCRETE_POWDER
	lT GRAY_CONCRETE_POWDER
	lU LIGHT_GRAY_CONCRETE_POWDER
	lV CYAN_CONCRETE_POWDER
	lW PURPLE_CONCRETE_POWDER
	lX BLUE_CONCRETE_POWDER
	lY BROWN_CONCRETE_POWDER
	lZ GREEN_CONCRETE_POWDER
	ma RED_CONCRETE_POWDER
	mb BLACK_CONCRETE_POWDER
	mc KELP
	md KELP_PLANT
	me DRIED_KELP_BLOCK
	mf TURTLE_EGG
	mg SNIFFER_EGG
	mh DEAD_TUBE_CORAL_BLOCK
	mi DEAD_BRAIN_CORAL_BLOCK
	mj DEAD_BUBBLE_CORAL_BLOCK
	mk DEAD_FIRE_CORAL_BLOCK
	ml DEAD_HORN_CORAL_BLOCK
	mm TUBE_CORAL_BLOCK
	mn BRAIN_CORAL_BLOCK
	mo BUBBLE_CORAL_BLOCK
	mp FIRE_CORAL_BLOCK
	mq HORN_CORAL_BLOCK
	mr DEAD_TUBE_CORAL
	ms DEAD_BRAIN_CORAL
	mt DEAD_BUBBLE_CORAL
	mu DEAD_FIRE_CORAL
	mv DEAD_HORN_CORAL
	mw TUBE_CORAL
	mx BRAIN_CORAL
	my BUBBLE_CORAL
	mz FIRE_CORAL
	mA HORN_CORAL
	mB DEAD_TUBE_CORAL_FAN
	mC DEAD_BRAIN_CORAL_FAN
	mD DEAD_BUBBLE_CORAL_FAN
	mE DEAD_FIRE_CORAL_FAN
	mF DEAD_HORN_CORAL_FAN
	mG TUBE_CORAL_FAN
	mH BRAIN_CORAL_FAN
	mI BUBBLE_CORAL_FAN
	mJ FIRE_CORAL_FAN
	mK HORN_CORAL_FAN
	mL DEAD_TUBE_CORAL_WALL_FAN
	mM DEAD_BRAIN_CORAL_WALL_FAN
	mN DEAD_BUBBLE_CORAL_WALL_FAN
	mO DEAD_FIRE_CORAL_WALL_FAN
	mP DEAD_HORN_CORAL_WALL_FAN
	mQ TUBE_CORAL_WALL_FAN
	mR BRAIN_CORAL_WALL_FAN
	mS BUBBLE_CORAL_WALL_FAN
	mT FIRE_CORAL_WALL_FAN
	mU HORN_CORAL_WALL_FAN
	mV SEA_PICKLE
	mW BLUE_ICE
	mX CONDUIT
	mY BAMBOO_SAPLING
	mZ BAMBOO
	na POTTED_BAMBOO
	nb VOID_AIR
	nc CAVE_AIR
	nd BUBBLE_COLUMN
	ne POLISHED_GRANITE_STAIRS
	nf SMOOTH_RED_SANDSTONE_STAIRS
	ng MOSSY_STONE_BRICK_STAIRS
	nh POLISHED_DIORITE_STAIRS
	ni MOSSY_COBBLESTONE_STAIRS
	nj END_STONE_BRICK_STAIRS
	nk STONE_STAIRS
	nl SMOOTH_SANDSTONE_STAIRS
	nm SMOOTH_QUARTZ_STAIRS
	nn GRANITE_STAIRS
	no ANDESITE_STAIRS
	np RED_NETHER_BRICK_STAIRS
	nq POLISHED_ANDESITE_STAIRS
	nr DIORITE_STAIRS
	ns POLISHED_GRANITE_SLAB
	nt SMOOTH_RED_SANDSTONE_SLAB
	nu MOSSY_STONE_BRICK_SLAB
	nv POLISHED_DIORITE_SLAB
	nw MOSSY_COBBLESTONE_SLAB
	nx END_STONE_BRICK_SLAB
	ny SMOOTH_SANDSTONE_SLAB
	nz SMOOTH_QUARTZ_SLAB
	nA GRANITE_SLAB
	nB ANDESITE_SLAB
	nC RED_NETHER_BRICK_SLAB
	nD POLISHED_ANDESITE_SLAB
	nE DIORITE_SLAB
	nF BRICK_WALL
	nG PRISMARINE_WALL
	nH RED_SANDSTONE_WALL
	nI MOSSY_STONE_BRICK_WALL
	nJ GRANITE_WALL
	nK STONE_BRICK_WALL
	nL MUD_BRICK_WALL
	nM NETHER_BRICK_WALL
	nN ANDESITE_WALL
	nO RED_NETHER_BRICK_WALL
	nP SANDSTONE_WALL
	nQ END_STONE_BRICK_WALL
	nR DIORITE_WALL
	nS SCAFFOLDING
	nT LOOM
	nU BARREL
	nV SMOKER
	nW BLAST_FURNACE
	nX CARTOGRAPHY_TABLE
	nY FLETCHING_TABLE
	nZ GRINDSTONE
	oa LECTERN
	ob SMITHING_TABLE
	oc STONECUTTER
	od BELL
	oe LANTERN
	of SOUL_LANTERN
	og CAMPFIRE
	oh SOUL_CAMPFIRE
	oi SWEET_BERRY_BUSH
	oj WARPED_STEM
	ok STRIPPED_WARPED_STEM
	ol WARPED_HYPHAE
	om STRIPPED_WARPED_HYPHAE
	on WARPED_NYLIUM
	oo WARPED_FUNGUS
	op WARPED_WART_BLOCK
	oq WARPED_ROOTS
	or NETHER_SPROUTS
	os CRIMSON_STEM
	ot STRIPPED_CRIMSON_STEM
	ou CRIMSON_HYPHAE
	ov STRIPPED_CRIMSON_HYPHAE
	ow CRIMSON_NYLIUM
	ox CRIMSON_FUNGUS
	oy SHROOMLIGHT
	oz WEEPING_VINES
	oA WEEPING_VINES_PLANT
	oB TWISTING_VINES
	oC TWISTING_VINES_PLANT
	oD CRIMSON_ROOTS
	oE CRIMSON_PLANKS
	oF WARPED_PLANKS
	oG CRIMSON_SLAB
	oH WARPED_SLAB
	oI CRIMSON_PRESSURE_PLATE
	oJ WARPED_PRESSURE_PLATE
	oK CRIMSON_FENCE
	oL WARPED_FENCE
	oM CRIMSON_TRAPDOOR
	oN WARPED_TRAPDOOR
	oO CRIMSON_FENCE_GATE
	oP WARPED_FENCE_GATE
	oQ CRIMSON_STAIRS
	oR WARPED_STAIRS
	oS CRIMSON_BUTTON
	oT WARPED_BUTTON
	oU CRIMSON_DOOR
	oV WARPED_DOOR
	oW CRIMSON_SIGN
	oX WARPED_SIGN
	oY CRIMSON_WALL_SIGN
	oZ WARPED_WALL_SIGN
	pa STRUCTURE_BLOCK
	pb JIGSAW
	pc COMPOSTER
	pd TARGET
	pe BEE_NEST
	pf BEEHIVE
	pg HONEY_BLOCK
	ph HONEYCOMB_BLOCK
	pi NETHERITE_BLOCK
	pj ANCIENT_DEBRIS
	pk CRYING_OBSIDIAN
	pl RESPAWN_ANCHOR
	pm POTTED_CRIMSON_FUNGUS
	pn POTTED_WARPED_FUNGUS
	po POTTED_CRIMSON_ROOTS
	pp POTTED_WARPED_ROOTS
	pq LODESTONE
	pr BLACKSTONE
	ps BLACKSTONE_STAIRS
	pt BLACKSTONE_WALL
	pu BLACKSTONE_SLAB
	pv POLISHED_BLACKSTONE
	pw POLISHED_BLACKSTONE_BRICKS
	px CRACKED_POLISHED_BLACKSTONE_BRICKS
	py CHISELED_POLISHED_BLACKSTONE
	pz POLISHED_BLACKSTONE_BRICK_SLAB
	pA POLISHED_BLACKSTONE_BRICK_STAIRS
	pB POLISHED_BLACKSTONE_BRICK_WALL
	pC GILDED_BLACKSTONE
	pD POLISHED_BLACKSTONE_STAIRS
	pE POLISHED_BLACKSTONE_SLAB
	pF POLISHED_BLACKSTONE_PRESSURE_PLATE
	pG POLISHED_BLACKSTONE_BUTTON
	pH POLISHED_BLACKSTONE_WALL
	pI CHISELED_NETHER_BRICKS
	pJ CRACKED_NETHER_BRICKS
	pK QUARTZ_BRICKS
	pL CANDLE
	pM WHITE_CANDLE
	pN ORANGE_CANDLE
	pO MAGENTA_CANDLE
	pP LIGHT_BLUE_CANDLE
	pQ YELLOW_CANDLE
	pR LIME_CANDLE
	pS PINK_CANDLE
	pT GRAY_CANDLE
	pU LIGHT_GRAY_CANDLE
	pV CYAN_CANDLE
	pW PURPLE_CANDLE
	pX BLUE_CANDLE
	pY BROWN_CANDLE
	pZ GREEN_CANDLE
	qa RED_CANDLE
	qb BLACK_CANDLE
	qc CANDLE_CAKE
	qd WHITE_CANDLE_CAKE
	qe ORANGE_CANDLE_CAKE
	qf MAGENTA_CANDLE_CAKE
	qg LIGHT_BLUE_CANDLE_CAKE
	qh YELLOW_CANDLE_CAKE
	qi LIME_CANDLE_CAKE
	qj PINK_CANDLE_CAKE
	qk GRAY_CANDLE_CAKE
	ql LIGHT_GRAY_CANDLE_CAKE
	qm CYAN_CANDLE_CAKE
	qn PURPLE_CANDLE_CAKE
	qo BLUE_CANDLE_CAKE
	qp BROWN_CANDLE_CAKE
	qq GREEN_CANDLE_CAKE
	qr RED_CANDLE_CAKE
	qs BLACK_CANDLE_CAKE
	qt AMETHYST_BLOCK
	qu BUDDING_AMETHYST
	qv AMETHYST_CLUSTER
	qw LARGE_AMETHYST_BUD
	qx MEDIUM_AMETHYST_BUD
	qy SMALL_AMETHYST_BUD
	qz TUFF
	qA CALCITE
	qB TINTED_GLASS
	qC POWDER_SNOW
	qD SCULK_SENSOR
	qE CALIBRATED_SCULK_SENSOR
	qF SCULK
	qG SCULK_VEIN
	qH SCULK_CATALYST
	qI SCULK_SHRIEKER
	qJ OXIDIZED_COPPER
	qK WEATHERED_COPPER
	qL EXPOSED_COPPER
	qM COPPER_BLOCK
	qN COPPER_ORE
	qO DEEPSLATE_COPPER_ORE
	qP OXIDIZED_CUT_COPPER
	qQ WEATHERED_CUT_COPPER
	qR EXPOSED_CUT_COPPER
	qS CUT_COPPER
	qT OXIDIZED_CUT_COPPER_STAIRS
	qU WEATHERED_CUT_COPPER_STAIRS
	qV EXPOSED_CUT_COPPER_STAIRS
	qW CUT_COPPER_STAIRS
	qX OXIDIZED_CUT_COPPER_SLAB
	qY WEATHERED_CUT_COPPER_SLAB
	qZ EXPOSED_CUT_COPPER_SLAB
	ra CUT_COPPER_SLAB
	rb WAXED_COPPER_BLOCK
	rc WAXED_WEATHERED_COPPER
	rd WAXED_EXPOSED_COPPER
	re WAXED_OXIDIZED_COPPER
	rf WAXED_OXIDIZED_CUT_COPPER
	rg WAXED_WEATHERED_CUT_COPPER
	rh WAXED_EXPOSED_CUT_COPPER
	ri WAXED_CUT_COPPER
	rj WAXED_OXIDIZED_CUT_COPPER_STAIRS
	rk WAXED_WEATHERED_CUT_COPPER_STAIRS
	rl WAXED_EXPOSED_CUT_COPPER_STAIRS
	rm WAXED_CUT_COPPER_STAIRS
	rn WAXED_OXIDIZED_CUT_COPPER_SLAB
	ro WAXED_WEATHERED_CUT_COPPER_SLAB
	rp WAXED_EXPOSED_CUT_COPPER_SLAB
	rq WAXED_CUT_COPPER_SLAB
	rr LIGHTNING_ROD
	rs POINTED_DRIPSTONE
	rt DRIPSTONE_BLOCK
	ru CAVE_VINES
	rv CAVE_VINES_PLANT
	rw SPORE_BLOSSOM
	rx AZALEA
	ry FLOWERING_AZALEA
	rz MOSS_CARPET
	rA PINK_PETALS
	rB MOSS_BLOCK
	rC BIG_DRIPLEAF
	rD BIG_DRIPLEAF_STEM
	rE SMALL_DRIPLEAF
	rF HANGING_ROOTS
	rG ROOTED_DIRT
	rH MUD
	rI DEEPSLATE
	rJ COBBLED_DEEPSLATE
	rK COBBLED_DEEPSLATE_STAIRS
	rL COBBLED_DEEPSLATE_SLAB
	rM COBBLED_DEEPSLATE_WALL
	rN POLISHED_DEEPSLATE
	rO POLISHED_DEEPSLATE_STAIRS
	rP POLISHED_DEEPSLATE_SLAB
	rQ POLISHED_DEEPSLATE_WALL
	rR DEEPSLATE_TILES
	rS DEEPSLATE_TILE_STAIRS
	rT DEEPSLATE_TILE_SLAB
	rU DEEPSLATE_TILE_WALL
	rV DEEPSLATE_BRICKS
	rW DEEPSLATE_BRICK_STAIRS
	rX DEEPSLATE_BRICK_SLAB
	rY DEEPSLATE_BRICK_WALL
	rZ CHISELED_DEEPSLATE
	sa CRACKED_DEEPSLATE_BRICKS
	sb CRACKED_DEEPSLATE_TILES
	sc INFESTED_DEEPSLATE
	sd SMOOTH_BASALT
	se RAW_IRON_BLOCK
	sf RAW_COPPER_BLOCK
	sg RAW_GOLD_BLOCK
	sh POTTED_AZALEA
	si POTTED_FLOWERING_AZALEA
	sj OCHRE_FROGLIGHT
	sk VERDANT_FROGLIGHT
	sl PEARLESCENT_FROGLIGHT
	sm FROGSPAWN
	sn REINFORCED_DEEPSLATE
	so DECORATED_POT
	<init> ()V <init>
	a (I)Ljava/util/function/ToIntFunction; litBlockEmission
	a (Ldcb;Lcls;Lgu;Lbfn;)Ljava/lang/Boolean; never
	b (Ldcb;Lcls;Lgu;Lbfn;)Ljava/lang/Boolean; always
	c (Ldcb;Lcls;Lgu;Lbfn;)Ljava/lang/Boolean; ocelotOrParrot
	a (Lcen;)Lcpg; bed
	a (Ldxi;Ldxi;)Lcvy; log
	a (Ldxi;Ldxi;Lcxa;)Lcvy; log
	a (Ldxi;)Lcpn; netherStem
	a (Ldcb;Lcls;Lgu;)Z always
	b (Ldcb;Lcls;Lgu;)Z never
	b (Lcen;)Lcxf; stainedGlass
	a (Lcxa;)Lctu; leaves
	a (Lcen;Ldca$d;)Lcwm; shulkerBox
	a (Z)Ldbu; pistonBase
	a (Ldcq;[Lcau;)Lcpw; woodenButton
	b ()Lcpw; stoneButton
	a (Lcpn;[Lcau;)Lcsm; flowerPot
	b (Ldxi;)Lcqb; candle
	a (Ljava/lang/String;Lcpn;)Lcpn; register
	a ()V rebuildCache
	a (Ldcb;)I lambda$static$55
	b (Ldcb;)I lambda$static$54
	c (Ldcb;)I lambda$static$53
	d (Ldcb;)I lambda$static$52
	c (Ldcb;Lcls;Lgu;)Z lambda$static$51
	e (Ldcb;)I lambda$static$50
	f (Ldcb;)I lambda$static$49
	g (Ldcb;)I lambda$static$48
	h (Ldcb;)I lambda$static$47
	i (Ldcb;)I lambda$static$46
	j (Ldcb;)I lambda$static$45
	k (Ldcb;)I lambda$static$44
	l (Ldcb;)I lambda$static$43
	m (Ldcb;)I lambda$static$42
	n (Ldcb;)I lambda$static$41
	o (Ldcb;)I lambda$static$40
	p (Ldcb;)I lambda$static$39
	d (Ldcb;Lcls;Lgu;Lbfn;)Z lambda$static$38
	q (Ldcb;)I lambda$static$37
	e (Ldcb;Lcls;Lgu;Lbfn;)Z lambda$static$36
	r (Ldcb;)I lambda$static$35
	s (Ldcb;)I lambda$static$34
	t (Ldcb;)I lambda$static$33
	u (Ldcb;)I lambda$static$32
	v (Ldcb;)I lambda$static$31
	w (Ldcb;)I lambda$static$30
	x (Ldcb;)I lambda$static$29
	y (Ldcb;)I lambda$static$28
	z (Ldcb;)I lambda$static$27
	A (Ldcb;)I lambda$static$26
	B (Ldcb;)I lambda$static$25
	c ()Lcfu; lambda$static$24
	d ()Lcfu; lambda$static$23
	e ()Lcfu; lambda$static$22
	f ()Lcfu; lambda$static$21
	C (Ldcb;)I lambda$static$20
	D (Ldcb;)I lambda$static$19
	E (Ldcb;)I lambda$static$18
	F (Ldcb;)I lambda$static$17
	G (Ldcb;)I lambda$static$16
	f (Ldcb;Lcls;Lgu;Lbfn;)Z lambda$static$15
	d (Ldcb;Lcls;Lgu;)Z lambda$static$14
	g ()Lczp; lambda$static$13
	H (Ldcb;)I lambda$static$12
	I (Ldcb;)I lambda$static$11
	J (Ldcb;)I lambda$static$10
	K (Ldcb;)I lambda$static$9
	L (Ldcb;)I lambda$static$8
	M (Ldcb;)I lambda$static$7
	e (Ldcb;Lcls;Lgu;)Z lambda$pistonBase$6
	f (Ldcb;Lcls;Lgu;)Z lambda$shulkerBox$5
	a (Ldxi;Ldcb;)Ldxi; lambda$netherStem$4
	a (Ldxi;Ldxi;Ldcb;)Ldxi; lambda$log$3
	b (Ldxi;Ldxi;Ldcb;)Ldxi; lambda$log$2
	a (Lcen;Ldcb;)Ldxi; lambda$bed$1
	a (ILdcb;)I lambda$litBlockEmission$0
	<clinit> ()V <clinit>
cpp net/minecraft/world/level/block/BonemealableBlock
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cpq net/minecraft/world/level/block/BrewingStandBlock
	a HAS_BOTTLE
	b SHAPE
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cpr net/minecraft/world/level/block/BrushableBlock
	b DUSTED
	a TICK_DELAY
	c turnsInto
	d brushSound
	e brushCompletedSound
	<init> (Lcpn;Ldca$d;Lamg;Lamg;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	b_ (Ldcb;)Lcvs; getRenderShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmm;Lgu;Lbvg;)V onBrokenAfterFall
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a ()Lcpn; getTurnsInto
	b ()Lamg; getBrushSound
	c ()Lamg; getBrushCompletedSound
	<clinit> ()V <clinit>
cps net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	b CHECK_PERIOD
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	c_ (Ldcb;)Ldxe; getFluidState
	b (Lcmn;Lgu;Ldcb;)V updateColumn
	a (Lcmn;Lgu;Ldcb;Ldcb;)V updateColumn
	h (Ldcb;)Z canExistIn
	n (Ldcb;)Ldcb; getColumnState
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcc$a;)V createBlockStateDefinition
	c (Lcmn;Lgu;Ldcb;)Lcfz; pickupBlock
	am_ ()Ljava/util/Optional; getPickupSound
	<clinit> ()V <clinit>
cpt net/minecraft/world/level/block/BucketPickup
	c (Lcmn;Lgu;Ldcb;)Lcfz; pickupBlock
	am_ ()Ljava/util/Optional; getPickupSound
cpu net/minecraft/world/level/block/BuddingAmethystBlock
	a GROWTH_CHANCE
	b DIRECTIONS
	<init> (Ldca$d;)V <init>
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	g (Ldcb;)Z canClusterGrowAtState
	<clinit> ()V <clinit>
cpv net/minecraft/world/level/block/BushBlock
	<init> (Ldca$d;)V <init>
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
cpw net/minecraft/world/level/block/ButtonBlock
	a POWERED
	J PRESSED_DEPTH
	K UNPRESSED_DEPTH
	b HALF_AABB_HEIGHT
	c HALF_AABB_WIDTH
	d CEILING_AABB_X
	e CEILING_AABB_Z
	f FLOOR_AABB_X
	g FLOOR_AABB_Z
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l PRESSED_CEILING_AABB_X
	m PRESSED_CEILING_AABB_Z
	n PRESSED_FLOOR_AABB_X
	D PRESSED_FLOOR_AABB_Z
	E PRESSED_NORTH_AABB
	F PRESSED_SOUTH_AABB
	G PRESSED_WEST_AABB
	H PRESSED_EAST_AABB
	L type
	M ticksToStayPressed
	N arrowsCanPress
	<init> (Ldca$d;Ldcq;IZ)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	d (Ldcb;Lcmm;Lgu;)V press
	a (Lbyo;Lcmn;Lgu;Z)V playSound
	a (Z)Lamg; getSound
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	e (Ldcb;Lcmm;Lgu;)V checkPressed
	f (Ldcb;Lcmm;Lgu;)V updateNeighbours
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cpw$1 net/minecraft/world/level/block/ButtonBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
cpx net/minecraft/world/level/block/CactusBlock
	a AGE
	b MAX_AGE
	c AABB_OFFSET
	d COLLISION_SHAPE
	e OUTLINE_SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cpy net/minecraft/world/level/block/CakeBlock
	a MAX_BITES
	b BITES
	c FULL_CAKE_SIGNAL
	d AABB_OFFSET
	e AABB_SIZE_PER_BITE
	f SHAPE_BY_BITE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmn;Lgu;Ldcb;Lbyo;)Lbdx; eat
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	b (I)I getOutputSignal
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cpz net/minecraft/world/level/block/CalibratedSculkSensorBlock
	a FACING
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	b ()I getActiveTicks
	a (Lcmm;Lgu;Ldcb;Lczs;)V lambda$getTicker$0
	<clinit> ()V <clinit>
cqa net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	g SMOKE_DISTANCE
	h spawnParticles
	i fireDamage
	<init> (ZILdca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	n (Ldcb;)Z isSmokeSource
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lbfj;Lcmn;Lgu;Ldcb;)V dowse
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Lcmm;Lgu;ZZ)V makeParticles
	a (Lcmm;Lgu;)Z isSmokeyPos
	g (Ldcb;)Z isLitCampfire
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	h (Ldcb;)Z canLight
	a (Ldca$a;)Z lambda$canLight$0
	<clinit> ()V <clinit>
cqb net/minecraft/world/level/block/CandleBlock
	c MIN_CANDLES
	d MAX_CANDLES
	e CANDLES
	f LIT
	g WATERLOGGED
	h LIGHT_EMISSION
	i PARTICLE_OFFSETS
	j ONE_AABB
	k TWO_AABB
	l THREE_AABB
	m FOUR_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	g (Ldcb;)Z canLight
	b (Ldcb;)Ljava/lang/Iterable; getParticleOffsets
	d (Ldcb;)Z canBeLit
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldca$a;)Z lambda$canLight$2
	g ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; lambda$static$1
	h (Ldcb;)I lambda$static$0
	<clinit> ()V <clinit>
cqc net/minecraft/world/level/block/CandleCakeBlock
	c LIT
	d AABB_OFFSET
	e CAKE_SHAPE
	f CANDLE_SHAPE
	g SHAPE
	h BY_CANDLE
	i PARTICLE_OFFSETS
	<init> (Lcpn;Ldca$d;)V <init>
	b (Ldcb;)Ljava/lang/Iterable; getParticleOffsets
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Leee;)Z candleHit
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcpn;)Ldcb; byCandle
	g (Ldcb;)Z canLight
	a (Ldcb;Ldca$a;)Z lambda$canLight$0
	<clinit> ()V <clinit>
cqd net/minecraft/world/level/block/CarpetBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	<clinit> ()V <clinit>
cqe net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	c ()Lcml; getBaseSeedId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cqf net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cqg net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lcmp;Lgu;)Z canSpawnGolem
	a (Lcmm;Lgu;)V trySpawnGolem
	a (Lcmm;Ldcg$b;Lbfj;Lgu;)V spawnGolemInWorld
	a (Lcmm;Ldcg$b;)V clearPatternBlocks
	b (Lcmm;Ldcg$b;)V updatePatternBlocks
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a ()Ldcg; getOrCreateSnowGolemBase
	g ()Ldcg; getOrCreateSnowGolemFull
	u ()Ldcg; getOrCreateIronGolemBase
	v ()Ldcg; getOrCreateIronGolemFull
	a (Ldcf;)Z lambda$getOrCreateIronGolemFull$2
	b (Ldcf;)Z lambda$getOrCreateIronGolemBase$1
	h (Ldcb;)Z lambda$static$0
	<clinit> ()V <clinit>
cqh net/minecraft/world/level/block/CauldronBlock
	c RAIN_FILL_CHANCE
	d POWDER_SNOW_FILL_CHANCE
	<init> (Ldca$d;)V <init>
	d (Ldcb;)Z isFull
	a (Lcmm;Lcnk$c;)Z shouldHandlePrecipitation
	a (Ldcb;Lcmm;Lgu;Lcnk$c;)V handlePrecipitation
	a (Ldxd;)Z canReceiveStalactiteDrip
	a (Ldcb;Lcmm;Lgu;Ldxd;)V receiveStalactiteDrip
cqi net/minecraft/world/level/block/CaveVines
	r_ SHAPE
	s_ BERRIES
	a (Lbfj;Ldcb;Lcmm;Lgu;)Lbdx; use
	h_ (Ldcb;)Z hasGlowBerries
	h_ (I)Ljava/util/function/ToIntFunction; emission
	a (ILdcb;)I lambda$emission$0
	<clinit> ()V <clinit>
cqj net/minecraft/world/level/block/CaveVinesBlock
	f CHANCE_OF_BERRIES_ON_GROWTH
	<init> (Ldca$d;)V <init>
	a (Lapf;)I getBlocksToGrowWhenBonemealed
	g (Ldcb;)Z canGrowInto
	a ()Lcpn; getBodyBlock
	a (Ldcb;Ldcb;)Ldcb; updateBodyAfterConvertedFromHead
	a (Ldcb;Lapf;)Ldcb; getGrowIntoState
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cqk net/minecraft/world/level/block/CaveVinesPlantBlock
	<init> (Ldca$d;)V <init>
	b ()Lcta; getHeadBlock
	a (Ldcb;Ldcb;)Ldcb; updateHeadAfterConvertedFromBody
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cql net/minecraft/world/level/block/CeilingHangingSignBlock
	a ROTATION
	b ATTACHED
	c AABB_OFFSET
	d SHAPE
	h AABBS
	<init> (Ldca$d;Lddo;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lbyo;Leee;Ldav;Lcfz;)Z shouldTryToChainAnotherHangingSign
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	g (Ldcb;)F getYRotationDegrees
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	<clinit> ()V <clinit>
cqm net/minecraft/world/level/block/ChainBlock
	a WATERLOGGED
	b AABB_MIN
	c AABB_MAX
	d Y_AXIS_AABB
	e Z_AXIS_AABB
	f X_AXIS_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cqm$1 net/minecraft/world/level/block/ChainBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
cqn net/minecraft/world/level/block/ChangeOverTimeBlock
	w_ SCAN_DISTANCE
	i_ (Ldcb;)Ljava/util/Optional; getNext
	a ()F getChanceModifier
	a_ (Ldcb;Laif;Lgu;Lapf;)V onRandomTick
	b ()Ljava/lang/Enum; getAge
	c (Ldcb;Laif;Lgu;Lapf;)V applyChangeOverTime
	a (Laif;Lgu;Ldcb;)V lambda$applyChangeOverTime$0
cqo net/minecraft/world/level/block/CherryLeavesBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
cqp net/minecraft/world/level/block/ChestBlock
	b FACING
	c TYPE
	d WATERLOGGED
	e EVENT_SET_OPEN_COUNT
	f AABB_OFFSET
	g AABB_HEIGHT
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l AABB
	m CHEST_COMBINER
	n MENU_PROVIDER_COMBINER
	<init> (Ldca$d;Ljava/util/function/Supplier;)V <init>
	g (Ldcb;)Lcrq$a; getBlockType
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	h (Ldcb;)Lha; getConnectedDirection
	a (Lcih;)Ldcb; getStateForPlacement
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcih;Lha;)Lha; candidatePartnerFacing
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b ()Lamo; getOpenChestStat
	c ()Lczp; blockEntityType
	a (Lcqp;Ldcb;Lcmm;Lgu;Z)Lbdq; getContainer
	a (Ldcb;Lcmm;Lgu;Z)Lcrq$c; combine
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldap;)Lcrq$b; opennessCombiner
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmn;Lgu;)Z isChestBlockedAt
	a (Lcls;Lgu;)Z isBlockedChestByBlock
	b (Lcmn;Lgu;)Z isCatSittingOnChest
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	c (Lcmn;Lgu;)Z lambda$combine$0
	<clinit> ()V <clinit>
cqp$1 net/minecraft/world/level/block/ChestBlock$1
	<init> ()V <init>
	a (Lczu;Lczu;)Ljava/util/Optional; acceptDouble
	a (Lczu;)Ljava/util/Optional; acceptSingle
	a ()Ljava/util/Optional; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
cqp$2 net/minecraft/world/level/block/ChestBlock$2
	<init> ()V <init>
	a (Lczu;Lczu;)Ljava/util/Optional; acceptDouble
	a (Lczu;)Ljava/util/Optional; acceptSingle
	a ()Ljava/util/Optional; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
cqp$2$1 net/minecraft/world/level/block/ChestBlock$2$1
	a val$first
	b val$second
	c val$container
	d this$0
	<init> (Lcqp$2;Lczu;Lczu;Lbdq;)V <init>
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	H_ ()Lsw; getDisplayName
cqp$3 net/minecraft/world/level/block/ChestBlock$3
	a val$entity
	<init> (Ldap;)V <init>
	a (Lczu;Lczu;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptDouble
	a (Lczu;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptSingle
	a ()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction; acceptNone
	b ()Ljava/lang/Object; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lczu;Lczu;F)F lambda$acceptDouble$0
cqp$4 net/minecraft/world/level/block/ChestBlock$4
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cqq net/minecraft/world/level/block/ChiseledBookShelfBlock
	c MAX_BOOKS_IN_STORAGE
	a BOOKS_PER_ROW
	b SLOT_OCCUPIED_PROPERTIES
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Leee;Lha;)Ljava/util/Optional; getRelativeHitCoordinatesForBlockFace
	a (Leeh;)I getHitSlot
	a (F)I getSection
	a (Lcmm;Lgu;Lbyo;Lczw;Lcfz;I)V addBook
	a (Lcmm;Lgu;Lbyo;Lczw;I)V removeBook
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcc$a;Ldde;)V lambda$createBlockStateDefinition$0
	<clinit> ()V <clinit>
cqq$1 net/minecraft/world/level/block/ChiseledBookShelfBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cqr net/minecraft/world/level/block/ChorusFlowerBlock
	a DEAD_AGE
	b AGE
	c plant
	<init> (Lcqs;Ldca$d;)V <init>
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;Lgu;I)V placeGrownFlower
	a (Lcmm;Lgu;)V placeDeadFlower
	b (Lcmp;Lgu;Lha;)Z allNeighborsEmpty
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmn;Lgu;Lapf;I)V generatePlant
	a (Lcmn;Lgu;Lapf;Lgu;II)V growTreeRecursive
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	<clinit> ()V <clinit>
cqs net/minecraft/world/level/block/ChorusPlantBlock
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcls;Lgu;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
cqt net/minecraft/world/level/block/CocoaBlock
	a MAX_AGE
	b AGE
	c AGE_0_WIDTH
	d AGE_0_HEIGHT
	e AGE_0_HALFWIDTH
	f AGE_1_WIDTH
	g AGE_1_HEIGHT
	h AGE_1_HALFWIDTH
	i AGE_2_WIDTH
	j AGE_2_HEIGHT
	k AGE_2_HALFWIDTH
	l EAST_AABB
	m WEST_AABB
	n NORTH_AABB
	D SOUTH_AABB
	<init> (Ldca$d;)V <init>
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cqt$1 net/minecraft/world/level/block/CocoaBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cqu net/minecraft/world/level/block/CommandBlock
	c LOGGER
	a FACING
	b CONDITIONAL
	d automatic
	<init> (Ldca$d;Z)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lcln;Z)V execute
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Lha;)V executeChain
	<clinit> ()V <clinit>
cqv net/minecraft/world/level/block/ComparatorBlock
	a MODE
	<init> (Ldca$d;)V <init>
	g (Ldcb;)I getDelay
	b (Lcls;Lgu;Ldcb;)I getOutputSignal
	e (Lcmm;Lgu;Ldcb;)I calculateOutputSignal
	a (Lcmm;Lgu;Ldcb;)Z shouldTurnOn
	b (Lcmm;Lgu;Ldcb;)I getInputSignal
	a (Lcmm;Lha;Lgu;)Lbva; getItemFrame
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	c (Lcmm;Lgu;Ldcb;)V checkTickOnNeighbor
	f (Lcmm;Lgu;Ldcb;)V refreshOutputState
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;II)Z triggerEvent
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lha;Lbva;)Z lambda$getItemFrame$0
	<clinit> ()V <clinit>
cqw net/minecraft/world/level/block/ComposterBlock
	a READY
	b MIN_LEVEL
	c MAX_LEVEL
	d LEVEL
	e COMPOSTABLES
	f AABB_SIDE_THICKNESS
	g OUTER_SHAPE
	h SHAPES
	a ()V bootStrap
	a (FLcml;)V add
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Z)V handleFill
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;)Lefb; getInteractionShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lbfj;Ldcb;Laif;Lcfz;Lgu;)Ldcb; insertItem
	a (Lbfj;Ldcb;Lcmm;Lgu;)Ldcb; extractProduce
	a (Lbfj;Ldcb;Lcmn;Lgu;)Ldcb; empty
	a (Lbfj;Ldcb;Lcmn;Lgu;Lcfz;)Ldcb; addItem
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lcmn;Lgu;)Lbeg; getContainer
	a ([Lefb;)V lambda$static$0
	<clinit> ()V <clinit>
cqw$a net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	<init> ()V <init>
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
cqw$b net/minecraft/world/level/block/ComposterBlock$InputContainer
	c state
	d level
	e pos
	f changed
	<init> (Ldcb;Lcmn;Lgu;)V <init>
	ac_ ()I getMaxStackSize
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
	e ()V setChanged
cqw$c net/minecraft/world/level/block/ComposterBlock$OutputContainer
	c state
	d level
	e pos
	f changed
	<init> (Ldcb;Lcmn;Lgu;Lcfz;)V <init>
	ac_ ()I getMaxStackSize
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
	e ()V setChanged
cqx net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	<init> (Lcpn;Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Ldcb;Lbvg;)V onLand
	a (Lcih;)Ldcb; getStateForPlacement
	b (Lcls;Lgu;Ldcb;)Z shouldSolidify
	a (Lcls;Lgu;)Z touchesLiquid
	n (Ldcb;)Z canSolidify
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	d (Ldcb;Lcls;Lgu;)I getDustColor
cqy net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	c SIZE
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	b_ (Ldcb;)Lcvs; getRenderShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cqz net/minecraft/world/level/block/CoralBlock
	a deadBlock
	<init> (Lcpn;Ldca$d;)V <init>
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcls;Lgu;)Z scanForWater
	a (Lcih;)Ldcb; getStateForPlacement
cra net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	<init> (Lcpn;Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
crb net/minecraft/world/level/block/CoralPlantBlock
	d deadBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Lcpn;Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
crc net/minecraft/world/level/block/CoralWallFanBlock
	b deadBlock
	<init> (Lcpn;Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
crd net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cre net/minecraft/world/level/block/CropBlock
	c MAX_AGE
	d AGE
	a SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a ()Lddb; getAgeProperty
	b ()I getMaxAge
	g (Ldcb;)I getAge
	b (I)Ldcb; getStateForAge
	h (Ldcb;)Z isMaxAge
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;Lgu;Ldcb;)V growCrops
	a (Lcmm;)I getBonemealAgeIncrease
	a (Lcpn;Lcls;Lgu;)F getGrowthSpeed
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	c ()Lcml; getBaseSeedId
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
crf net/minecraft/world/level/block/CrossCollisionBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	<init> (FFFFFLdca$d;)V <init>
	a (FFFFF)[Lefb; makeShapes
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Lha;)I indexFor
	g (Ldcb;)I getAABBIndex
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	h (Ldcb;)I lambda$getAABBIndex$1
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
crf$1 net/minecraft/world/level/block/CrossCollisionBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
crg net/minecraft/world/level/block/CryingObsidianBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
crh net/minecraft/world/level/block/DaylightDetectorBlock
	a POWER
	b INVERTED
	c SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	d (Ldcb;Lcmm;Lgu;)V updateSignalStrength
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b_ (Ldcb;)Lcvs; getRenderShape
	f_ (Ldcb;)Z isSignalSource
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Ldcb;Ldab;)V tickEntity
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cri net/minecraft/world/level/block/DeadBushBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	<clinit> ()V <clinit>
crj net/minecraft/world/level/block/DecoratedPotBlock
	a SHERDS_DYNAMIC_DROP_ID
	b BOUNDING_BOX
	c HORIZONTAL_FACING
	d CRACKED
	e WATERLOGGED
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	c_ (Ldcb;)Ldxe; getFluidState
	m (Ldcb;)Lcxa; getSoundType
	a (Lcfz;Lcls;Ljava/util/List;Lchq;)V appendHoverText
	a (Ljava/util/List;Lcfu;)V lambda$appendHoverText$1
	a (Ldac;Ljava/util/function/Consumer;)V lambda$getDrops$0
	<clinit> ()V <clinit>
crk net/minecraft/world/level/block/DetectorRailBlock
	d SHAPE
	e POWERED
	f PRESSED_CHECK_PERIOD
	<init> (Ldca$d;)V <init>
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	a (Lcmm;Lgu;Ldcb;)V checkPressed
	b (Lcmm;Lgu;Ldcb;Z)V updatePowerToConnected
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	b ()Ldde; getShapeProperty
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Lcmm;Lgu;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lgu;)Leed; getSearchBB
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lbfj;)Z lambda$getAnalogOutputSignal$1
	b (Lbfj;)Z lambda$checkPressed$0
	<clinit> ()V <clinit>
crk$1 net/minecraft/world/level/block/DetectorRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
crl net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	c (Lcmm;Lgu;Ldcb;)V checkTickOnNeighbor
	a (Lcmp;Lgu;Ldcb;)Z isLocked
	a (Lcmm;Lgu;Ldcb;)Z shouldTurnOn
	b (Lcmm;Lgu;Ldcb;)I getInputSignal
	a (Lcnc;Lgu;Ldcb;)I getAlternateSignal
	f_ (Ldcb;)Z isSignalSource
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	d (Lcmm;Lgu;Ldcb;)V updateNeighborsInFront
	a ()Z sideInputDiodesOnly
	b (Lcls;Lgu;Ldcb;)I getOutputSignal
	h (Ldcb;)Z isDiode
	c (Lcls;Lgu;Ldcb;)Z shouldPrioritize
	g (Ldcb;)I getDelay
	<clinit> ()V <clinit>
crm net/minecraft/world/level/block/DirectionalBlock
	a FACING
	<init> (Ldca$d;)V <init>
	<clinit> ()V <clinit>
crn net/minecraft/world/level/block/DirtPathBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cro net/minecraft/world/level/block/DispenserBlock
	a FACING
	b TRIGGERED
	c DISPENSER_REGISTRY
	d TRIGGER_DURATION
	a (Lcml;Lih;)V registerBehavior
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Laif;Lgu;)V dispenseFrom
	a (Lcfz;)Lih; getDispenseMethod
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lgv;)Lho; getDispensePosition
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
crp net/minecraft/world/level/block/DoorBlock
	a FACING
	b OPEN
	c HINGE
	d POWERED
	e HALF
	f AABB_DOOR_THICKNESS
	g SOUTH_AABB
	h NORTH_AABB
	i WEST_AABB
	j EAST_AABB
	k type
	<init> (Ldca$d;Ldcq;)V <init>
	a ()Ldcq; type
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b (Lcih;)Ldcw; getHinge
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	h (Ldcb;)Z isOpen
	a (Lbfj;Lcmm;Ldcb;Lgu;Z)V setOpen
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lbfj;Lcmm;Lgu;Z)V playSound
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Lgu;)J getSeed
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lgu;)Z isWoodenDoor
	n (Ldcb;)Z isWoodenDoor
	<clinit> ()V <clinit>
crp$1 net/minecraft/world/level/block/DoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
crq net/minecraft/world/level/block/DoubleBlockCombiner
	<init> ()V <init>
	a (Lczp;Ljava/util/function/Function;Ljava/util/function/Function;Ldcv;Ldcb;Lcmn;Lgu;Ljava/util/function/BiPredicate;)Lcrq$c; combineWithNeigbour
crq$a net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	a SINGLE
	b FIRST
	c SECOND
	d $VALUES
	values ()[Lcrq$a; values
	valueOf (Ljava/lang/String;)Lcrq$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcrq$a; $values
	<clinit> ()V <clinit>
crq$b net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	b ()Ljava/lang/Object; acceptNone
crq$c net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	apply (Lcrq$b;)Ljava/lang/Object; apply
crq$c$a net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
	<init> (Ljava/lang/Object;Ljava/lang/Object;)V <init>
	apply (Lcrq$b;)Ljava/lang/Object; apply
crq$c$b net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
	<init> (Ljava/lang/Object;)V <init>
	apply (Lcrq$b;)Ljava/lang/Object; apply
crr net/minecraft/world/level/block/DoublePlantBlock
	a HALF
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcmn;Ldcb;Lgu;I)V placeAt
	a (Lcmp;Lgu;Ldcb;)Ldcb; copyWaterloggedFrom
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Lcmm;Lbyo;Lgu;Ldcb;Lczn;Lcfz;)V playerDestroy
	b (Lcmm;Lgu;Ldcb;Lbyo;)V preventCreativeDropFromBottomPart
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lgu;)J getSeed
	<clinit> ()V <clinit>
crs net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Lbyo;)V attack
	d (Ldcb;Lcmm;Lgu;)V teleport
	a ()I getDelayAfterPlace
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
crt net/minecraft/world/level/block/DropExperienceBlock
	a xpRange
	<init> (Ldca$d;)V <init>
	<init> (Ldca$d;Lbdc;)V <init>
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
cru net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	<init> (Ldca$d;)V <init>
	a (Lcfz;)Lih; getDispenseMethod
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Laif;Lgu;)V dispenseFrom
	<clinit> ()V <clinit>
crv net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	b BOOKSHELF_OFFSETS
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Lgu;)Z isValidBookShelf
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$1
	a (Lgu;)Z lambda$static$0
	<clinit> ()V <clinit>
crw net/minecraft/world/level/block/EndGatewayBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Ldxd;)Z canBeReplaced
crx net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Ldxd;)Z canBeReplaced
	<clinit> ()V <clinit>
cry net/minecraft/world/level/block/EndPortalFrameBlock
	a FACING
	b HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	<init> (Ldca$d;)V <init>
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a ()Ldcg; getOrCreatePortalShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
crz net/minecraft/world/level/block/EndRodBlock
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
csa net/minecraft/world/level/block/EnderChestBlock
	b FACING
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Z)Lcrq$c; combine
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcco;ILbyn;Lbyo;)Lcbf; lambda$use$1
	g ()Lczp; lambda$new$0
	<clinit> ()V <clinit>
csb net/minecraft/world/level/block/EntityBlock
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Laif;Lczn;)Ldgn; getListener
csc net/minecraft/world/level/block/EquipableCarvedPumpkinBlock
	<init> (Ldca$d;)V <init>
	g ()Lbfo; getEquipmentSlot
csd net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	I FACE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	b (Lcmp;Lgu;Lha;)Z canAttach
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	h (Ldcb;)Lha; getConnectedDirection
	<clinit> ()V <clinit>
csd$1 net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
cse net/minecraft/world/level/block/Fallable
	a (Lcmm;Lgu;Ldcb;Ldcb;Lbvg;)V onLand
	a (Lcmm;Lgu;Lbvg;)V onBrokenAfterFall
	a (Lbfj;)Lben; getFallDamageSource
csf net/minecraft/world/level/block/FallingBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lbvg;)V falling
	a ()I getDelayAfterPlace
	h (Ldcb;)Z isFree
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	d (Ldcb;Lcls;Lgu;)I getDustColor
csg net/minecraft/world/level/block/FarmBlock
	a MOISTURE
	b SHAPE
	c MAX_MOISTURE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Lbfj;Ldcb;Lcmm;Lgu;)V turnToDirt
	a (Lcls;Lgu;)Z shouldMaintainFarmland
	a (Lcmp;Lgu;)Z isNearWater
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
csh net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	<init> (Ldca$d;)V <init>
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;ZLha;)Z connectsTo
	h (Ldcb;)Z isSameFence
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcc$a;)V createBlockStateDefinition
csi net/minecraft/world/level/block/FenceGateBlock
	a OPEN
	b POWERED
	c IN_WALL
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_SUPPORT_SHAPE
	k X_SUPPORT_SHAPE
	l Z_OCCLUSION_SHAPE
	m X_OCCLUSION_SHAPE
	n Z_OCCLUSION_SHAPE_LOW
	D X_OCCLUSION_SHAPE_LOW
	E type
	<init> (Ldca$d;Lddo;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcih;)Ldcb; getStateForPlacement
	h (Ldcb;)Z isWall
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lha;)Z connectsToDirection
	<clinit> ()V <clinit>
csi$1 net/minecraft/world/level/block/FenceGateBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
csj net/minecraft/world/level/block/FireBlock
	c MAX_AGE
	d AGE
	e NORTH
	f EAST
	g SOUTH
	h WEST
	i UP
	j PROPERTY_BY_DIRECTION
	k UP_AABB
	l WEST_AABB
	m EAST_AABB
	n NORTH_AABB
	D SOUTH_AABB
	E shapesCache
	F IGNITE_INSTANT
	G IGNITE_EASY
	H IGNITE_MEDIUM
	I IGNITE_HARD
	J BURN_INSTANT
	K BURN_EASY
	L BURN_MEDIUM
	M BURN_HARD
	N igniteOdds
	O burnOdds
	<init> (Ldca$d;)V <init>
	h (Ldcb;)Lefb; calculateShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	b (Lcls;Lgu;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmm;Lgu;)Z isNearRain
	n (Ldcb;)I getBurnOdds
	o (Ldcb;)I getIgniteOdds
	a (Lcmm;Lgu;ILapf;I)V checkBurnOut
	a (Lcmn;Lgu;I)Ldcb; getStateWithAge
	d (Lcls;Lgu;)Z isValidFireLocation
	a (Lcmp;Lgu;)I getIgniteOdds
	f (Ldcb;)Z canBurn
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lapf;)I getFireTickDelay
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcpn;II)V setFlammable
	a ()V bootStrap
	p (Ldcb;)Z lambda$new$1
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
csk net/minecraft/world/level/block/FletchingTableBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
csl net/minecraft/world/level/block/FlowerBlock
	a AABB_OFFSET
	b SHAPE
	c suspiciousStewEffect
	d effectDuration
	<init> (Lbey;ILdca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a ()Lbey; getSuspiciousEffect
	b ()I getEffectDuration
	<clinit> ()V <clinit>
csm net/minecraft/world/level/block/FlowerPotBlock
	c POTTED_BY_CONTENT
	a AABB_SIZE
	b SHAPE
	d content
	<init> (Lcpn;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	g ()Z isEmpty
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a ()Lcpn; getContent
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
csn net/minecraft/world/level/block/FrogspawnBlock
	b MIN_TADPOLES_SPAWN
	c MAX_TADPOLES_SPAWN
	d DEFAULT_MIN_HATCH_TICK_DELAY
	e DEFAULT_MAX_HATCH_TICK_DELAY
	a SHAPE
	f minHatchTickDelay
	g maxHatchTickDelay
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lapf;)I getFrogspawnHatchDelay
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Lcls;Lgu;)Z mayPlaceOn
	a (Laif;Lgu;Lapf;)V hatchFrogspawn
	a (Lcmm;Lgu;)V destroyBlock
	b (Laif;Lgu;Lapf;)V spawnTadpoles
	b (Lapf;)D getRandomTadpolePositionOffset
	a (II)V setHatchDelay
	a ()V setDefaultHatchDelay
	<clinit> ()V <clinit>
cso net/minecraft/world/level/block/FrostedIceBlock
	a MAX_AGE
	b AGE
	c NEIGHBORS_TO_AGE
	d NEIGHBORS_TO_MELT
	<init> (Ldca$d;)V <init>
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	e (Ldcb;Lcmm;Lgu;)Z slightlyMelt
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcls;Lgu;I)Z fewerNeigboursThan
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	<clinit> ()V <clinit>
csp net/minecraft/world/level/block/FungusBlock
	a SHAPE
	b BONEMEAL_SUCCESS_PROBABILITY
	c requiredBlock
	d feature
	<init> (Ldca$d;Lacp;Lcpn;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcmp;)Ljava/util/Optional; getFeature
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Laif;Lapf;Lgu;Lhe;)V lambda$performBonemeal$0
	<clinit> ()V <clinit>
csq net/minecraft/world/level/block/FurnaceBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Lbyo;)V openContainer
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
csr net/minecraft/world/level/block/GameMasterBlock
css net/minecraft/world/level/block/GlassBlock
	<init> (Ldca$d;)V <init>
cst net/minecraft/world/level/block/GlazedTerracottaBlock
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
csu net/minecraft/world/level/block/GlowLichenBlock
	b WATERLOGGED
	c spreader
	<init> (Ldca$d;)V <init>
	b (I)Ljava/util/function/ToIntFunction; emission
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	c_ (Ldcb;)Ldxe; getFluidState
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	b ()Lcum; getSpreader
	a (Ldcb;Lcmp;Lgu;Lha;)Z lambda$isValidBonemealTarget$1
	a (ILdcb;)I lambda$emission$0
	<clinit> ()V <clinit>
csv net/minecraft/world/level/block/GrassBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
csw net/minecraft/world/level/block/GravelBlock
	<init> (Ldca$d;)V <init>
	d (Ldcb;Lcls;Lgu;)I getDustColor
csx net/minecraft/world/level/block/GrindstoneBlock
	a FLOOR_NORTH_SOUTH_LEFT_POST
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	l FLOOR_EAST_WEST_RIGHT_PIVOT
	m FLOOR_EAST_WEST_LEFT_LEG
	n FLOOR_EAST_WEST_RIGHT_LEG
	D FLOOR_EAST_WEST_ALL_LEGS
	E FLOOR_EAST_WEST_GRINDSTONE
	F WALL_SOUTH_LEFT_POST
	G WALL_SOUTH_RIGHT_POST
	H WALL_SOUTH_LEFT_PIVOT
	J WALL_SOUTH_RIGHT_PIVOT
	K WALL_SOUTH_LEFT_LEG
	L WALL_SOUTH_RIGHT_LEG
	M WALL_SOUTH_ALL_LEGS
	N WALL_SOUTH_GRINDSTONE
	O WALL_NORTH_LEFT_POST
	P WALL_NORTH_RIGHT_POST
	Q WALL_NORTH_LEFT_PIVOT
	R WALL_NORTH_RIGHT_PIVOT
	S WALL_NORTH_LEFT_LEG
	T WALL_NORTH_RIGHT_LEG
	U WALL_NORTH_ALL_LEGS
	V WALL_NORTH_GRINDSTONE
	W WALL_WEST_LEFT_POST
	X WALL_WEST_RIGHT_POST
	Y WALL_WEST_LEFT_PIVOT
	Z WALL_WEST_RIGHT_PIVOT
	aa WALL_WEST_LEFT_LEG
	ab WALL_WEST_RIGHT_LEG
	ac WALL_WEST_ALL_LEGS
	ad WALL_WEST_GRINDSTONE
	ae WALL_EAST_LEFT_POST
	af WALL_EAST_RIGHT_POST
	ag WALL_EAST_LEFT_PIVOT
	ah WALL_EAST_RIGHT_PIVOT
	ai WALL_EAST_LEFT_LEG
	aj WALL_EAST_RIGHT_LEG
	ak WALL_EAST_ALL_LEGS
	al WALL_EAST_GRINDSTONE
	am CEILING_NORTH_SOUTH_LEFT_POST
	an CEILING_NORTH_SOUTH_RIGHT_POST
	ao CEILING_NORTH_SOUTH_LEFT_PIVOT
	ap CEILING_NORTH_SOUTH_RIGHT_PIVOT
	aq CEILING_NORTH_SOUTH_LEFT_LEG
	ar CEILING_NORTH_SOUTH_RIGHT_LEG
	as CEILING_NORTH_SOUTH_ALL_LEGS
	at CEILING_NORTH_SOUTH_GRINDSTONE
	au CEILING_EAST_WEST_LEFT_POST
	av CEILING_EAST_WEST_RIGHT_POST
	aw CEILING_EAST_WEST_LEFT_PIVOT
	ax CEILING_EAST_WEST_RIGHT_PIVOT
	ay CEILING_EAST_WEST_LEFT_LEG
	az CEILING_EAST_WEST_RIGHT_LEG
	aA CEILING_EAST_WEST_ALL_LEGS
	aB CEILING_EAST_WEST_GRINDSTONE
	aP CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	n (Ldcb;)Lefb; getVoxelShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
csx$1 net/minecraft/world/level/block/GrindstoneBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
csy net/minecraft/world/level/block/GrowingPlantBlock
	a growthDirection
	b scheduleFluidTicks
	c shape
	<init> (Ldca$d;Lha;Lefb;Z)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmn;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	h (Ldcb;)Z canAttachTo
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b ()Lcta; getHeadBlock
	a ()Lcpn; getBodyBlock
csz net/minecraft/world/level/block/GrowingPlantBodyBlock
	<init> (Ldca$d;Lha;Lefb;Z)V <init>
	a (Ldcb;Ldcb;)Ldcb; updateHeadAfterConvertedFromBody
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Lcls;Lgu;Lcpn;)Ljava/util/Optional; getHeadPos
	a (Ldcb;Lcih;)Z canBeReplaced
	a ()Lcpn; getBodyBlock
cta net/minecraft/world/level/block/GrowingPlantHeadBlock
	d AGE
	e MAX_AGE
	f growPerTickProbability
	<init> (Ldca$d;Lha;Lefb;ZD)V <init>
	a (Lcmn;)Ldcb; getStateForPlacement
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lapf;)Ldcb; getGrowIntoState
	n (Ldcb;)Ldcb; getMaxAgeState
	o (Ldcb;)Z isMaxAge
	a (Ldcb;Ldcb;)Ldcb; updateBodyAfterConvertedFromHead
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Lapf;)I getBlocksToGrowWhenBonemealed
	g (Ldcb;)Z canGrowInto
	b ()Lcta; getHeadBlock
	<clinit> ()V <clinit>
ctb net/minecraft/world/level/block/HalfTransparentBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Ldcb;Lha;)Z skipRendering
ctc net/minecraft/world/level/block/HangingRootsBlock
	b WATERLOGGED
	a SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	<clinit> ()V <clinit>
ctd net/minecraft/world/level/block/HayBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
cte net/minecraft/world/level/block/HoneyBlock
	b SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	c MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	d THROTTLE_SLIDE_SPEED_TO
	e SLIDE_ADVANCEMENT_CHECK_INTERVAL
	a SHAPE
	<init> (Ldca$d;)V <init>
	c (Lbfj;)Z doesEntityDoHoneyBlockSlideEffects
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Lgu;Lbfj;)Z isSlidingDown
	a (Lbfj;Lgu;)V maybeDoSlideAchievement
	d (Lbfj;)V doSlideMovement
	a (Lcmm;Lbfj;)V maybeDoSlideEffects
	a (Lbfj;)V showSlideParticles
	b (Lbfj;)V showJumpParticles
	a (Lbfj;I)V showParticles
	<clinit> ()V <clinit>
ctf net/minecraft/world/level/block/HopperBlock
	a FACING
	b ENABLED
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l DOWN_INTERACTION_SHAPE
	m EAST_INTERACTION_SHAPE
	n NORTH_INTERACTION_SHAPE
	D SOUTH_INTERACTION_SHAPE
	E WEST_INTERACTION_SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;)Lefb; getInteractionShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Lgu;Ldcb;I)V checkPoweredState
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	b_ (Ldcb;)Lcvs; getRenderShape
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
ctf$1 net/minecraft/world/level/block/HopperBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ctg net/minecraft/world/level/block/HorizontalDirectionalBlock
	aC FACING
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	<clinit> ()V <clinit>
cth net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cti net/minecraft/world/level/block/IceBlock
	<init> (Ldca$d;)V <init>
	a ()Ldcb; meltsInto
	a (Lcmm;Lbyo;Lgu;Ldcb;Lczn;Lcfz;)V playerDestroy
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	d (Ldcb;Lcmm;Lgu;)V melt
ctj net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	c HOST_TO_INFESTED_STATES
	d INFESTED_TO_HOST_STATES
	<init> (Lcpn;Ldca$d;)V <init>
	a ()Lcpn; getHostBlock
	h (Ldcb;)Z isCompatibleHostBlock
	a (Laif;Lgu;)V spawnInfestation
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	n (Ldcb;)Ldcb; infestedStateByHost
	o (Ldcb;)Ldcb; hostStateByInfested
	a (Ljava/util/Map;Ldcb;Ljava/util/function/Supplier;)Ldcb; getNewStateWithProperties
	a (Ljava/util/function/Supplier;Ldcb;)Ldcb; lambda$getNewStateWithProperties$2
	g ()Ldcb; lambda$hostStateByInfested$1
	p (Ldcb;)Ldcb; lambda$infestedStateByHost$0
	<clinit> ()V <clinit>
ctk net/minecraft/world/level/block/InfestedRotatedPillarBlock
	<init> (Lcpn;Ldca$d;)V <init>
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
ctl net/minecraft/world/level/block/IronBarsBlock
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	a (Ldcb;Ldcb;Lha;)Z skipRendering
	a (Ldcb;Z)Z attachsTo
	a (Ldcc$a;)V createBlockStateDefinition
ctm net/minecraft/world/level/block/JigsawBlock
	a ORIENTATION
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldvt$c;Ldvt$c;)Z canAttach
	h (Ldcb;)Lha; getFrontFacing
	n (Ldcb;)Lha; getTopFacing
	a (Lha;)Ldam$a; lambda$canAttach$0
	<clinit> ()V <clinit>
ctn net/minecraft/world/level/block/JukeboxBlock
	a HAS_RECORD
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	<clinit> ()V <clinit>
cto net/minecraft/world/level/block/KelpBlock
	f SHAPE
	g GROW_PER_TICK_PROBABILITY
	<init> (Ldca$d;)V <init>
	g (Ldcb;)Z canGrowInto
	a ()Lcpn; getBodyBlock
	h (Ldcb;)Z canAttachTo
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	a (Lapf;)I getBlocksToGrowWhenBonemealed
	a (Lcih;)Ldcb; getStateForPlacement
	c_ (Ldcb;)Ldxe; getFluidState
	<clinit> ()V <clinit>
ctp net/minecraft/world/level/block/KelpPlantBlock
	<init> (Ldca$d;)V <init>
	b ()Lcta; getHeadBlock
	c_ (Ldcb;)Ldxe; getFluidState
	h (Ldcb;)Z canAttachTo
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
ctq net/minecraft/world/level/block/LadderBlock
	a FACING
	b WATERLOGGED
	c AABB_OFFSET
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcls;Lgu;Lha;)Z canAttachTo
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	<clinit> ()V <clinit>
ctq$1 net/minecraft/world/level/block/LadderBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ctr net/minecraft/world/level/block/LanternBlock
	a HANGING
	b WATERLOGGED
	c AABB
	d HANGING_AABB
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	h (Ldcb;)Lha; getConnectedDirection
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cts net/minecraft/world/level/block/LavaCauldronBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;)D getContentHeight
	d (Ldcb;)Z isFull
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
ctt net/minecraft/world/level/block/LayeredCauldronBlock
	c MIN_FILL_LEVEL
	d MAX_FILL_LEVEL
	e LEVEL
	h BASE_CONTENT_HEIGHT
	i HEIGHT_PER_LEVEL
	f RAIN
	g SNOW
	j fillPredicate
	<init> (Ldca$d;Ljava/util/function/Predicate;Ljava/util/Map;)V <init>
	d (Ldcb;)Z isFull
	a (Ldxd;)Z canReceiveStalactiteDrip
	b (Ldcb;)D getContentHeight
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	d (Ldcb;Lcmm;Lgu;)V handleEntityOnFireInside
	e (Ldcb;Lcmm;Lgu;)V lowerFillLevel
	a (Ldcb;Lcmm;Lgu;Lcnk$c;)V handlePrecipitation
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Ldxd;)V receiveStalactiteDrip
	a (Lcnk$c;)Z lambda$static$1
	b (Lcnk$c;)Z lambda$static$0
	<clinit> ()V <clinit>
ctu net/minecraft/world/level/block/LeavesBlock
	a DECAY_DISTANCE
	b DISTANCE
	c PERSISTENT
	d WATERLOGGED
	e TICK_DELAY
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	h (Ldcb;)Z decaying
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	g (Ldcb;Lcls;Lgu;)I getLightBlock
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmn;Lgu;)Ldcb; updateDistance
	o (Ldcb;)I getDistanceAt
	n (Ldcb;)Ljava/util/OptionalInt; getOptionalDistanceAt
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
	<clinit> ()V <clinit>
ctv net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	l SHAPE_SOUTH
	m PAGE_CHANGE_IMPULSE_TICKS
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Lcih;)Ldcb; getStateForPlacement
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lbfj;Lcmm;Lgu;Ldcb;Lcfz;)Z tryPlaceBook
	b (Lbfj;Lcmm;Lgu;Ldcb;Lcfz;)V placeBook
	a (Lbfj;Lcmm;Lgu;Ldcb;Z)V resetBookState
	a (Lcmm;Lgu;Ldcb;)V signalPageChange
	a (Lcmm;Lgu;Ldcb;Z)V changePowered
	b (Lcmm;Lgu;Ldcb;)V updateBelow
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	d (Ldcb;Lcmm;Lgu;)V popBook
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lcmm;Lgu;Lbyo;)V openScreen
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
ctv$1 net/minecraft/world/level/block/LecternBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
ctw net/minecraft/world/level/block/LevelEvent
	a SOUND_DISPENSER_DISPENSE
	b SOUND_DISPENSER_FAIL
	c SOUND_DISPENSER_PROJECTILE_LAUNCH
	d SOUND_ENDER_EYE_LAUNCH
	e SOUND_FIREWORK_SHOOT
	f SOUND_EXTINGUISH_FIRE
	g SOUND_PLAY_JUKEBOX_SONG
	h SOUND_STOP_JUKEBOX_SONG
	i SOUND_GHAST_WARNING
	j SOUND_GHAST_FIREBALL
	k SOUND_DRAGON_FIREBALL
	l SOUND_BLAZE_FIREBALL
	m SOUND_ZOMBIE_WOODEN_DOOR
	n SOUND_ZOMBIE_IRON_DOOR
	o SOUND_ZOMBIE_DOOR_CRASH
	p SOUND_WITHER_BLOCK_BREAK
	q SOUND_WITHER_BOSS_SPAWN
	r SOUND_WITHER_BOSS_SHOOT
	s SOUND_BAT_LIFTOFF
	t SOUND_ZOMBIE_INFECTED
	u SOUND_ZOMBIE_CONVERTED
	v SOUND_DRAGON_DEATH
	w SOUND_ANVIL_BROKEN
	x SOUND_ANVIL_USED
	y SOUND_ANVIL_LAND
	z SOUND_PORTAL_TRAVEL
	A SOUND_CHORUS_GROW
	B SOUND_CHORUS_DEATH
	C SOUND_BREWING_STAND_BREW
	D SOUND_END_PORTAL_SPAWN
	E SOUND_PHANTOM_BITE
	F SOUND_ZOMBIE_TO_DROWNED
	G SOUND_HUSK_TO_ZOMBIE
	H SOUND_GRINDSTONE_USED
	I SOUND_PAGE_TURN
	J SOUND_SMITHING_TABLE_USED
	K SOUND_POINTED_DRIPSTONE_LAND
	L SOUND_DRIP_LAVA_INTO_CAULDRON
	M SOUND_DRIP_WATER_INTO_CAULDRON
	N SOUND_SKELETON_TO_STRAY
	O COMPOSTER_FILL
	P LAVA_FIZZ
	Q REDSTONE_TORCH_BURNOUT
	R END_PORTAL_FRAME_FILL
	S DRIPSTONE_DRIP
	T PARTICLES_AND_SOUND_PLANT_GROWTH
	U PARTICLES_SHOOT
	V PARTICLES_DESTROY_BLOCK
	W PARTICLES_SPELL_POTION_SPLASH
	X PARTICLES_EYE_OF_ENDER_DEATH
	Y PARTICLES_MOBBLOCK_SPAWN
	Z PARTICLES_PLANT_GROWTH
	aa PARTICLES_DRAGON_FIREBALL_SPLASH
	ab PARTICLES_INSTANT_POTION_SPLASH
	ac PARTICLES_DRAGON_BLOCK_BREAK
	ad PARTICLES_WATER_EVAPORATING
	ae ANIMATION_END_GATEWAY_SPAWN
	af ANIMATION_DRAGON_SUMMON_ROAR
	ag PARTICLES_ELECTRIC_SPARK
	ah PARTICLES_AND_SOUND_WAX_ON
	ai PARTICLES_WAX_OFF
	aj PARTICLES_SCRAPE
	ak PARTICLES_SCULK_CHARGE
	al PARTICLES_SCULK_SHRIEK
	am PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	an PARTICLES_EGG_CRACK
	<init> ()V <init>
ctx net/minecraft/world/level/block/LeverBlock
	a POWERED
	b DEPTH
	c WIDTH
	d HEIGHT
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i UP_AABB_Z
	j UP_AABB_X
	k DOWN_AABB_Z
	l DOWN_AABB_X
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	d (Ldcb;Lcmm;Lgu;)Ldcb; pull
	a (Ldcb;Lcmn;Lgu;F)V makeParticle
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	f_ (Ldcb;)Z isSignalSource
	e (Ldcb;Lcmm;Lgu;)V updateNeighbours
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
ctx$1 net/minecraft/world/level/block/LeverBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	c $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	<clinit> ()V <clinit>
cty net/minecraft/world/level/block/LightBlock
	a MAX_LEVEL
	b LEVEL
	c WATERLOGGED
	d LIGHT_EMISSION
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	b_ (Ldcb;)Lcvs; getRenderShape
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcfz;I)Lcfz; setLightOnStack
	h (Ldcb;)I lambda$static$0
	<clinit> ()V <clinit>
ctz net/minecraft/world/level/block/LightningRodBlock
	b WATERLOGGED
	c POWERED
	j ACTIVATION_TICKS
	d RANGE
	k SPARK_CYCLE
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	d (Ldcb;Lcmm;Lgu;)V onLightningStrike
	e (Ldcb;Lcmm;Lgu;)V updateNeighbours
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Ldcc$a;)V createBlockStateDefinition
	f_ (Ldcb;)Z isSignalSource
	<clinit> ()V <clinit>
cua net/minecraft/world/level/block/LiquidBlock
	a LEVEL
	b fluid
	e stateCache
	c STABLE_SHAPE
	d POSSIBLE_FLOW_DIRECTIONS
	<init> (Ldxc;Ldca$d;)V <init>
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Ldcb;Lha;)Z skipRendering
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Lgu;Ldcb;)Z shouldSpreadLiquid
	a (Lcmn;Lgu;)V fizz
	a (Ldcc$a;)V createBlockStateDefinition
	c (Lcmn;Lgu;Ldcb;)Lcfz; pickupBlock
	am_ ()Ljava/util/Optional; getPickupSound
	<clinit> ()V <clinit>
cub net/minecraft/world/level/block/LiquidBlockContainer
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
cuc net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cud net/minecraft/world/level/block/MagmaBlock
	a BUBBLE_COLUMN_CHECK_DELAY
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
cue net/minecraft/world/level/block/MangroveLeavesBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cuf net/minecraft/world/level/block/MangrovePropaguleBlock
	a AGE
	b MAX_AGE
	g SHAPE_PER_AGE
	h WATERLOGGED
	c HANGING
	i GROW_TALL_MANGROVE_PROBABILITY
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	h (Ldcb;)Z isHanging
	n (Ldcb;)Z isFullyGrown
	b ()Ldcb; createNewHangingPropagule
	b (I)Ldcb; createNewHangingPropagule
	<clinit> ()V <clinit>
cug net/minecraft/world/level/block/MangroveRootsBlock
	a WATERLOGGED
	<init> (Ldca$d;)V <init>
	a (Ldcb;Ldcb;Lha;)Z skipRendering
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cuh net/minecraft/world/level/block/MelonBlock
	<init> (Ldca$d;)V <init>
	a ()Lcxj; getStem
	b ()Lcop; getAttachedStem
cui net/minecraft/world/level/block/Mirror
	a NONE
	b LEFT_RIGHT
	c FRONT_BACK
	d CODEC
	e id
	f symbol
	g rotation
	h $VALUES
	values ()[Lcui; values
	valueOf (Ljava/lang/String;)Lcui; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lh;)V <init>
	a (II)I mirror
	a (Lha;)Lcvz; getRotation
	b (Lha;)Lha; mirror
	a ()Lh; rotation
	b ()Lsw; symbol
	c ()Ljava/lang/String; getSerializedName
	d ()[Lcui; $values
	<clinit> ()V <clinit>
cui$1 net/minecraft/world/level/block/Mirror$1
	a $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cuj net/minecraft/world/level/block/MossBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Laif;Lapf;Lgu;Lhe$c;)V lambda$performBonemeal$1
	a (Lhr;)Ljava/util/Optional; lambda$performBonemeal$0
cuk net/minecraft/world/level/block/MudBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	<clinit> ()V <clinit>
cul net/minecraft/world/level/block/MultifaceBlock
	b AABB_OFFSET
	c UP_AABB
	d DOWN_AABB
	e WEST_AABB
	f EAST_AABB
	g NORTH_AABB
	h SOUTH_AABB
	i PROPERTY_BY_DIRECTION
	j SHAPE_BY_DIRECTION
	a DIRECTIONS
	k shapesCache
	l canRotate
	m canMirrorX
	n canMirrorZ
	<init> (Ldca$d;)V <init>
	h (Ldcb;)Ljava/util/Set; availableFaces
	a (B)Ljava/util/Set; unpack
	a (Ljava/util/Collection;)B pack
	a (Lha;)Z isFaceSupported
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcls;Ldcb;Lgu;Lha;)Z isValidStateForPlacement
	c (Ldcb;Lcls;Lgu;Lha;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Ljava/util/function/Function;)Ldcb; mapDirections
	a (Ldcb;Lha;)Z hasFace
	a (Lcls;Lha;Lgu;Ldcb;)Z canAttachTo
	g ()Z isWaterloggable
	a (Ldcb;Ldcs;)Ldcb; removeFace
	b (Lha;)Ldcs; getFaceProperty
	a (Ldcc;)Ldcb; getDefaultMultifaceState
	o (Ldcb;)Lefb; calculateMultifaceShape
	n (Ldcb;)Z hasAnyFace
	p (Ldcb;)Z hasAnyVacantFace
	b ()Lcum; getSpreader
	b (Ldcb;Lha;)Z lambda$hasAnyVacantFace$3
	c (Ldcb;Lha;)Z lambda$hasAnyFace$2
	a (Ldcb;Lcmm;Lgu;Lha;)Ldcb; lambda$getStateForPlacement$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
cum net/minecraft/world/level/block/MultifaceSpreader
	a DEFAULT_SPREAD_ORDER
	b config
	<init> (Lcul;)V <init>
	<init> (Lcum$b;)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Z canSpreadInAnyDirection
	a (Ldcb;Lcmn;Lgu;Lapf;)Ljava/util/Optional; spreadFromRandomFaceTowardRandomDirection
	a (Ldcb;Lcmn;Lgu;Z)J spreadAll
	a (Ldcb;Lcmn;Lgu;Lha;Lapf;Z)Ljava/util/Optional; spreadFromFaceTowardRandomDirection
	a (Ldcb;Lcmn;Lgu;Lha;Z)J spreadFromFaceTowardAllDirections
	a (Ldcb;Lcmn;Lgu;Lha;Lha;Z)Ljava/util/Optional; spreadFromFaceTowardDirection
	a (Ldcb;Lcls;Lgu;Lha;Lha;Lcum$d;)Ljava/util/Optional; getSpreadFromFaceTowardDirection
	a (Lcmn;Lcum$c;Z)Ljava/util/Optional; spreadToFace
	a (Lcmn;ZLcum$c;)Ljava/util/Optional; lambda$spreadFromFaceTowardDirection$7
	a (Ldcb;Lcmn;Lgu;Lha;ZLha;)Ljava/util/Optional; lambda$spreadFromFaceTowardAllDirections$6
	b (Ldcb;Lcmn;Lgu;Lha;ZLha;)Ljava/util/Optional; lambda$spreadFromFaceTowardRandomDirection$5
	a (Ldcb;Lcmn;Lgu;ZLha;)Ljava/lang/Long; lambda$spreadAll$4
	a (Ldcb;Lha;)Z lambda$spreadAll$3
	a (Ldcb;Lcmn;Lgu;Lapf;Lha;)Ljava/util/Optional; lambda$spreadFromRandomFaceTowardRandomDirection$2
	b (Ldcb;Lha;)Z lambda$spreadFromRandomFaceTowardRandomDirection$1
	a (Ldcb;Lcls;Lgu;Lha;Lha;)Z lambda$canSpreadInAnyDirection$0
	<clinit> ()V <clinit>
cum$a net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	a block
	<init> (Lcul;)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Ldcb; getStateForPlacement
	a (Lcls;Lgu;Lgu;Lha;Ldcb;)Z stateCanBeReplaced
	a (Lcls;Lgu;Lcum$c;)Z canSpreadInto
cum$b net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	a (Ldcb;Lcls;Lgu;Lha;)Ldcb; getStateForPlacement
	a (Lcls;Lgu;Lcum$c;)Z canSpreadInto
	a ()[Lcum$e; getSpreadTypes
	a (Ldcb;Lha;)Z hasFace
	a (Ldcb;)Z isOtherBlockValidAsSource
	b (Ldcb;Lha;)Z canSpreadFrom
	a (Lcmn;Lcum$c;Ldcb;Z)Z placeBlock
cum$c net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	a pos
	b face
	<init> (Lgu;Lha;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Lha; face
cum$d net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
	test (Lcls;Lgu;Lcum$c;)Z test
cum$e net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	a SAME_POSITION
	b SAME_PLANE
	c WRAP_AROUND
	d $VALUES
	values ()[Lcum$e; values
	valueOf (Ljava/lang/String;)Lcum$e; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lgu;Lha;Lha;)Lcum$c; getSpreadPos
	a ()[Lcum$e; $values
	<clinit> ()V <clinit>
cum$e$1 net/minecraft/world/level/block/MultifaceSpreader$SpreadType$1
	<init> (Ljava/lang/String;I)V <init>
	a (Lgu;Lha;Lha;)Lcum$c; getSpreadPos
cum$e$2 net/minecraft/world/level/block/MultifaceSpreader$SpreadType$2
	<init> (Ljava/lang/String;I)V <init>
	a (Lgu;Lha;Lha;)Lcum$c; getSpreadPos
cum$e$3 net/minecraft/world/level/block/MultifaceSpreader$SpreadType$3
	<init> (Ljava/lang/String;I)V <init>
	a (Lgu;Lha;Lha;)Lcum$c; getSpreadPos
cun net/minecraft/world/level/block/MushroomBlock
	a AABB_OFFSET
	b SHAPE
	c feature
	<init> (Ldca$d;Lacp;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Laif;Lgu;Ldcb;Lapf;)Z growMushroom
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cuo net/minecraft/world/level/block/MyceliumBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
cup net/minecraft/world/level/block/NetherPortalBlock
	a AXIS
	b AABB_OFFSET
	c X_AXIS_AABB
	d Z_AXIS_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cup$1 net/minecraft/world/level/block/NetherPortalBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
cuq net/minecraft/world/level/block/NetherSproutsBlock
	a SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	<clinit> ()V <clinit>
cur net/minecraft/world/level/block/NetherVines
	b BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
	a GROW_PER_TICK_PROBABILITY
	<init> ()V <init>
	a (Ldcb;)Z isValidGrowthState
	a (Lapf;)I getBlocksToGrowWhenBonemealed
cus net/minecraft/world/level/block/NetherWartBlock
	a MAX_AGE
	b AGE
	c SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cut net/minecraft/world/level/block/NetherrackBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cuu net/minecraft/world/level/block/NoteBlock
	a INSTRUMENT
	b POWERED
	c NOTE
	d NOTE_VOLUME
	<init> (Ldca$d;)V <init>
	b (Lcmn;Lgu;Ldcb;)Ldcb; setInstrument
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lbfj;Ldcb;Lcmm;Lgu;)V playNote
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Lbyo;)V attack
	b (I)F getPitchFromNote
	a (Ldcb;Lcmm;Lgu;II)Z triggerEvent
	a (Lcmm;Lgu;)Lacq; getCustomSoundId
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cuv net/minecraft/world/level/block/NyliumBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmp;Lgu;)Z canBeNylium
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Lhr;Lacp;Laif;Lddy;Lapf;Lgu;)V place
	a (Laif;Lddy;Lapf;Lgu;Lhe$c;)V lambda$place$0
cuw net/minecraft/world/level/block/ObserverBlock
	b POWERED
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmn;Lgu;)V startSignal
	a (Lcmm;Lgu;Ldcb;)V updateNeighborsInFront
	f_ (Ldcb;)Z isSignalSource
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcih;)Ldcb; getStateForPlacement
	<clinit> ()V <clinit>
cux net/minecraft/world/level/block/PiglinWallSkullBlock
	b AABBS
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cuy net/minecraft/world/level/block/PinkPetalsBlock
	a MIN_FLOWERS
	b MAX_FLOWERS
	c FACING
	d AMOUNT
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cuz net/minecraft/world/level/block/PipeBlock
	i DIRECTIONS
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	<init> (FLdca$d;)V <init>
	a (F)[Lefb; makeShapes
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	h (Ldcb;)I getAABBIndex
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
cva net/minecraft/world/level/block/PitcherCropBlock
	b AGE
	c MAX_AGE
	d DOUBLE_PLANT_AGE_INTERSECTION
	e BONEMEAL_INCREASE
	f FULL_UPPER_SHAPE
	g FULL_LOWER_SHAPE
	h COLLISION_SHAPE_BULB
	i COLLISION_SHAPE_CROP
	j UPPER_SHAPE_BY_AGE
	k LOWER_SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	h (Ldcb;)Z isMaxAge
	e_ (Ldcb;)Z isRandomlyTicking
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Laif;Ldcb;Lgu;I)V grow
	a (Lcmp;Lgu;)Z canGrowInto
	b (Lcmp;Lgu;)Z sufficientLight
	n (Ldcb;)Z isLower
	o (Ldcb;)Z isUpper
	a (Lcmp;Lgu;Ldcb;I)Z canGrow
	b (Lcmp;Lgu;Ldcb;)Lcva$a; getLowerHalf
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cva$a net/minecraft/world/level/block/PitcherCropBlock$PosAndState
	a pos
	b state
	<init> (Lgu;Ldcb;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Ldcb; state
cvb net/minecraft/world/level/block/PlayerHeadBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
cvc net/minecraft/world/level/block/PlayerWallHeadBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
cvd net/minecraft/world/level/block/PointedDripstoneBlock
	a TIP_DIRECTION
	b THICKNESS
	c WATERLOGGED
	d MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	e DELAY_BEFORE_FALLING
	f DRIP_PROBABILITY_PER_ANIMATE_TICK
	g DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	h MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	i WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	j LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	k MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	l STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	m STALACTITE_MAX_DAMAGE
	n MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
	D STALAGMITE_FALL_DISTANCE_OFFSET
	E STALAGMITE_FALL_DAMAGE_MODIFIER
	F AVERAGE_DAYS_PER_GROWTH
	G GROWTH_PROBABILITY_PER_RANDOM_TICK
	H MAX_GROWTH_LENGTH
	I MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	J STALACTITE_DRIP_START_PIXEL
	K TIP_MERGE_SHAPE
	L TIP_SHAPE_UP
	M TIP_SHAPE_DOWN
	N FRUSTUM_SHAPE
	O MIDDLE_SHAPE
	P BASE_SHAPE
	Q MAX_HORIZONTAL_OFFSET
	R REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Laif;Lgu;F)V maybeTransferFluid
	a (Lcih;)Ldcb; getStateForPlacement
	c_ (Ldcb;)Ldxe; getFluidState
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a_ (Ldcb;Lcls;Lgu;)Z isCollisionShapeFullBlock
	al_ ()F getMaxHorizontalOffset
	a (Lcmm;Lgu;Lbvg;)V onBrokenAfterFall
	a (Lbfj;)Lben; getFallDamageSource
	a (Ldcb;Laif;Lgu;)V spawnFallingStalactite
	c (Ldcb;Laif;Lgu;Lapf;)V growStalactiteOrStalagmiteIfPossible
	b (Laif;Lgu;)V growStalagmiteBelow
	a (Laif;Lgu;Lha;)V grow
	a (Lcmn;Lgu;Lha;Ldcy;)V createDripstone
	a (Ldcb;Lcmn;Lgu;)V createMergedTips
	a (Lcmm;Lgu;Ldcb;)V spawnDripParticle
	a (Lcmm;Lgu;Ldcb;Ldxd;)V spawnDripParticle
	a (Ldcb;Lcmn;Lgu;IZ)Lgu; findTip
	b (Lcmp;Lgu;Lha;)Lha; calculateTipDirection
	a (Lcmp;Lgu;Lha;Z)Ldcy; calculateDripstoneThickness
	h (Ldcb;)Z canDrip
	b (Ldcb;Laif;Lgu;)Z canTipGrow
	a (Lcmm;Lgu;Ldcb;I)Ljava/util/Optional; findRootBlock
	c (Lcmp;Lgu;Lha;)Z isValidPointedDripstonePlacement
	a (Ldcb;Z)Z isTip
	a (Ldcb;Lha;)Z isUnmergedTipWithDirection
	n (Ldcb;)Z isStalactite
	o (Ldcb;)Z isStalagmite
	b (Ldcb;Lcmp;Lgu;)Z isStalactiteStartPos
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	b (Ldcb;Lha;)Z isPointedDripstoneWithDirection
	a (Lcmm;Lgu;Ldxd;)Lgu; findFillableCauldronBelowStalactiteTip
	a (Lcmm;Lgu;)Lgu; findStalactiteTipAboveCauldron
	a (Laif;Lgu;)Ldxd; getCauldronFillFluidType
	b (Lcmm;Lgu;Ldcb;)Ljava/util/Optional; getFluidAboveStalactite
	a (Ldxd;)Z canFillCauldron
	a (Ldcb;Ldcb;)Z canGrow
	a (Lcmm;Ldxd;)Ldxd; getDripFluid
	a (Lcmn;Lgu;Lha$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; findBlockVertical
	b (Lcls;Lgu;Ldcb;)Z canDripThrough
	b (Lcmm;Lgu;)Lcvd$a; lambda$getFluidAboveStalactite$11
	a (Lcvd$a;)Ldxd; lambda$getCauldronFillFluidType$10
	c (Lcmm;Lgu;Ldcb;)Z lambda$findStalactiteTipAboveCauldron$9
	d (Lcmm;Lgu;Ldcb;)Z lambda$findFillableCauldronBelowStalactiteTip$8
	a (Ldxd;Ldcb;)Z lambda$findFillableCauldronBelowStalactiteTip$7
	p (Ldcb;)Z lambda$findRootBlock$6
	a (Lha;Lgu;Ldcb;)Z lambda$findRootBlock$5
	a (ZLdcb;)Z lambda$findTip$4
	b (Lha;Lgu;Ldcb;)Z lambda$findTip$3
	a (Lcmm;Lgu;Ldcb;Lcvd$a;)V lambda$spawnDripParticle$2
	b (Lcmm;Lgu;Ldcb;Lcvd$a;)V lambda$animateTick$1
	a (FLcvd$a;)Z lambda$animateTick$0
	<clinit> ()V <clinit>
cvd$a net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	a pos
	b fluid
	c sourceState
	<init> (Lgu;Ldxd;Ldcb;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Ldxd; fluid
	c ()Ldcb; sourceState
cve net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	<init> (Ldca$d;)V <init>
	c ()Lcml; getBaseSeedId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cvf net/minecraft/world/level/block/PowderSnowBlock
	a HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	b IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	c IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	d NUM_BLOCKS_TO_FALL_INTO_BLOCK
	e FALLING_COLLISION_SHAPE
	f MINIMUM_FALL_DISTANCE_FOR_SOUND
	g MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
	<init> (Ldca$d;)V <init>
	a (Ldcb;Ldcb;Lha;)Z skipRendering
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	a (Lbfj;)Z canEntityWalkOnPowderSnow
	c (Lcmn;Lgu;Ldcb;)Lcfz; pickupBlock
	am_ ()Ljava/util/Optional; getPickupSound
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cvg net/minecraft/world/level/block/PowderSnowCauldronBlock
	<init> (Ldca$d;Ljava/util/function/Predicate;Ljava/util/Map;)V <init>
	d (Ldcb;Lcmm;Lgu;)V handleEntityOnFireInside
cvh net/minecraft/world/level/block/PoweredBlock
	<init> (Ldca$d;)V <init>
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
cvi net/minecraft/world/level/block/PoweredRailBlock
	d SHAPE
	e POWERED
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;ZI)Z findPoweredRailSignal
	a (Lcmm;Lgu;ZILddf;)Z isSameRailWithPower
	a (Ldcb;Lcmm;Lgu;Lcpn;)V updateState
	b ()Ldde; getShapeProperty
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvi$1 net/minecraft/world/level/block/PoweredRailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cvj net/minecraft/world/level/block/PressurePlateBlock
	d POWERED
	e sensitivity
	<init> (Lcvj$a;Ldca$d;Ldcq;)V <init>
	g (Ldcb;)I getSignalForState
	a (Ldcb;I)Ldcb; setSignalForState
	b (Lcmm;Lgu;)I getSignalStrength
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvj$1 net/minecraft/world/level/block/PressurePlateBlock$1
	a $SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
	<clinit> ()V <clinit>
cvj$a net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	a EVERYTHING
	b MOBS
	c $VALUES
	values ()[Lcvj$a; values
	valueOf (Ljava/lang/String;)Lcvj$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcvj$a; $values
	<clinit> ()V <clinit>
cvk net/minecraft/world/level/block/PumpkinBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a ()Lcxj; getStem
	b ()Lcop; getAttachedStem
	a (Lbdw;Lbyo;)V lambda$use$0
cvl net/minecraft/world/level/block/RailBlock
	d SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lcpn;)V updateState
	b ()Ldde; getShapeProperty
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvl$1 net/minecraft/world/level/block/RailBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cvm net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	<init> (Lcmm;Lgu;Ldcb;)V <init>
	a ()Ljava/util/List; getConnections
	a (Lddf;)V updateConnections
	d ()V removeSoftConnections
	a (Lgu;)Z hasRail
	b (Lgu;)Lcvm; getRail
	a (Lcvm;)Z connectsTo
	c (Lgu;)Z hasConnection
	b ()I countPotentialConnections
	b (Lcvm;)Z canConnectTo
	c (Lcvm;)V connectTo
	d (Lgu;)Z hasNeighborRail
	a (ZZLddf;)Lcvm; place
	c ()Ldcb; getState
cvm$1 net/minecraft/world/level/block/RailState$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	<clinit> ()V <clinit>
cvn net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;)V attack
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	d (Ldcb;Lcmm;Lgu;)V interact
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcmm;Lgu;)V spawnParticles
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvo net/minecraft/world/level/block/RedStoneWireBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e POWER
	f PROPERTY_BY_DIRECTION
	g H
	h W
	i E
	j N
	k S
	l SHAPE_DOT
	m SHAPES_FLOOR
	n SHAPES_UP
	D SHAPES_CACHE
	E COLORS
	F PARTICLE_DENSITY
	G crossState
	H shouldSignal
	<init> (Ldca$d;)V <init>
	n (Ldcb;)Lefb; calculateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcls;Ldcb;Lgu;)Ldcb; getConnectionState
	b (Lcls;Ldcb;Lgu;)Ldcb; getMissingConnections
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	o (Ldcb;)Z isCross
	p (Ldcb;)Z isDot
	a (Ldcb;Lcmn;Lgu;II)V updateIndirectNeighbourShapes
	a (Lcls;Lgu;Lha;)Lddg; getConnectingSide
	a (Lcls;Lgu;Lha;Z)Lddg; getConnectingSide
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	b (Lcls;Lgu;Ldcb;)Z canSurviveOn
	a (Lcmm;Lgu;Ldcb;)V updatePowerStrength
	a (Lcmm;Lgu;)I calculateTargetStrength
	q (Ldcb;)I getWireSignal
	b (Lcmm;Lgu;)V checkCornerChangeAt
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	c (Lcmm;Lgu;)V updateNeighborsOfNeighboringWires
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	h (Ldcb;)Z shouldConnectTo
	a (Ldcb;Lha;)Z shouldConnectTo
	f_ (Ldcb;)Z isSignalSource
	b (I)I getColorForPower
	a (Lcmm;Lapf;Lgu;Leei;Lha;Lha;FF)V spawnParticlesAlongLine
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Ldcb;Ldcb;)V updatesOnShapeChange
	a ([Leei;)V lambda$static$0
	<clinit> ()V <clinit>
cvo$1 net/minecraft/world/level/block/RedStoneWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	c $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cvp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvq net/minecraft/world/level/block/RedstoneTorchBlock
	a LIT
	e RECENT_TOGGLES
	b RECENT_TOGGLE_TIMER
	c MAX_RECENT_TOGGLES
	d RESTART_DELAY
	f TOGGLE_DELAY
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	a (Lcmm;Lgu;Ldcb;)Z hasNeighborSignal
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lgu;Z)Z isToggledTooFrequently
	a (Lcls;)Ljava/util/List; lambda$isToggledTooFrequently$0
	<clinit> ()V <clinit>
cvq$a net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
	<init> (Lgu;J)V <init>
cvr net/minecraft/world/level/block/RedstoneWallTorchBlock
	e FACING
	f LIT
	<init> (Ldca$d;)V <init>
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Lcmm;Lgu;Ldcb;)Z hasNeighborSignal
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvs net/minecraft/world/level/block/RenderShape
	a INVISIBLE
	b ENTITYBLOCK_ANIMATED
	c MODEL
	d $VALUES
	values ()[Lcvs; values
	valueOf (Ljava/lang/String;)Lcvs; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcvs; $values
	<clinit> ()V <clinit>
cvt net/minecraft/world/level/block/RepeaterBlock
	a LOCKED
	d DELAY
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	g (Ldcb;)I getDelay
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmp;Lgu;Ldcb;)Z isLocked
	a ()Z sideInputDiodesOnly
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cvu net/minecraft/world/level/block/RespawnAnchorBlock
	a MIN_CHARGES
	b MAX_CHARGES
	c CHARGE
	d RESPAWN_HORIZONTAL_OFFSETS
	e RESPAWN_OFFSETS
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcfz;)Z isRespawnFuel
	h (Ldcb;)Z canBeCharged
	a (Lgu;Lcmm;)Z isWaterThatWouldFlow
	d (Ldcb;Lcmm;Lgu;)V explode
	a (Lcmm;)Z canSetSpawn
	a (Lbfj;Lcmm;Lgu;Ldcb;)V charge
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;I)I getScaledChargeLevel
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Lbfn;Lclw;Lgu;)Ljava/util/Optional; findStandUpPosition
	a (Lbfn;Lclw;Lgu;Z)Ljava/util/Optional; findStandUpPosition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcmm;Lgu;)Z lambda$explode$0
	<clinit> ()V <clinit>
cvu$1 net/minecraft/world/level/block/RespawnAnchorBlock$1
	a val$pos
	b val$inWater
	c this$0
	<init> (Lcvu;Lgu;Z)V <init>
	a (Lcme;Lcls;Lgu;Ldcb;Ldxe;)Ljava/util/Optional; getBlockExplosionResistance
cvv net/minecraft/world/level/block/RodBlock
	e AABB_MIN
	f AABB_MAX
	g Y_AXIS_AABB
	h Z_AXIS_AABB
	i X_AXIS_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cvv$1 net/minecraft/world/level/block/RodBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
cvw net/minecraft/world/level/block/RootedDirtBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cvx net/minecraft/world/level/block/RootsBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	<clinit> ()V <clinit>
cvy net/minecraft/world/level/block/RotatedPillarBlock
	g AXIS
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcvz;)Ldcb; rotate
	b (Ldcb;Lcvz;)Ldcb; rotatePillar
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcih;)Ldcb; getStateForPlacement
	<clinit> ()V <clinit>
cvy$1 net/minecraft/world/level/block/RotatedPillarBlock$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
cvz net/minecraft/world/level/block/Rotation
	a NONE
	b CLOCKWISE_90
	c CLOCKWISE_180
	d COUNTERCLOCKWISE_90
	e CODEC
	f id
	g rotation
	h $VALUES
	values ()[Lcvz; values
	valueOf (Ljava/lang/String;)Lcvz; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lh;)V <init>
	a (Lcvz;)Lcvz; getRotated
	a ()Lh; rotation
	a (Lha;)Lha; rotate
	a (II)I rotate
	a (Lapf;)Lcvz; getRandom
	b (Lapf;)Ljava/util/List; getShuffled
	c ()Ljava/lang/String; getSerializedName
	b ()[Lcvz; $values
	<clinit> ()V <clinit>
cvz$1 net/minecraft/world/level/block/Rotation$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	<clinit> ()V <clinit>
cwa net/minecraft/world/level/block/SandBlock
	a dustColor
	<init> (ILdca$d;)V <init>
	d (Ldcb;Lcls;Lgu;)I getDustColor
cwb net/minecraft/world/level/block/SaplingBlock
	d STAGE
	e AABB_OFFSET
	f SHAPE
	a treeGrower
	<init> (Ldbh;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Laif;Lgu;Ldcb;Lapf;)V advanceTree
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cwc net/minecraft/world/level/block/ScaffoldingBlock
	e TICK_DELAY
	f STABLE_SHAPE
	g UNSTABLE_SHAPE
	h UNSTABLE_SHAPE_BOTTOM
	i BELOW_BLOCK
	a STABILITY_MAX_DISTANCE
	b DISTANCE
	c WATERLOGGED
	d BOTTOM
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;)Lefb; getInteractionShape
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcls;Lgu;I)Z isBottom
	a (Lcls;Lgu;)I getDistance
	<clinit> ()V <clinit>
cwd net/minecraft/world/level/block/SculkBehaviour
	t_ DEFAULT
	a ()B getSculkSpreadDelay
	a (Lcmn;Ldcb;Lgu;Lapf;)V onDischarged
	a (Lcmn;Lgu;Lapf;)Z depositCharge
	a (Lcmn;Lgu;Ldcb;Ljava/util/Collection;Z)Z attemptSpreadVein
	c ()Z canChangeBlockStateOnSpread
	i_ (I)I updateDecayDelay
	a (Lcwi$a;Lcmn;Lgu;Lapf;Lcwi;Z)I attemptUseCharge
	<clinit> ()V <clinit>
cwd$1 net/minecraft/world/level/block/SculkBehaviour$1
	<init> ()V <init>
	a (Lcmn;Lgu;Ldcb;Ljava/util/Collection;Z)Z attemptSpreadVein
	a (Lcwi$a;Lcmn;Lgu;Lapf;Lcwi;Z)I attemptUseCharge
	i_ (I)I updateDecayDelay
cwe net/minecraft/world/level/block/SculkBlock
	<init> (Ldca$d;)V <init>
	a (Lcwi$a;Lcmn;Lgu;Lapf;Lcwi;Z)I attemptUseCharge
	a (Lcwi;Lgu;Lgu;I)I getDecayPenalty
	a (Lcmn;Lgu;Lapf;Z)Ldcb; getRandomGrowthState
	a (Lcmn;Lgu;)Z canPlaceGrowth
	c ()Z canChangeBlockStateOnSpread
cwf net/minecraft/world/level/block/SculkCatalystBlock
	a PULSE
	b xpRange
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	<clinit> ()V <clinit>
cwg net/minecraft/world/level/block/SculkSensorBlock
	b ACTIVE_TICKS
	c COOLDOWN_TICKS
	d PHASE
	e POWER
	f WATERLOGGED
	g SHAPE
	a RESONANCE_PITCH_BEND
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Lcmm;Lgu;Ldcb;)V updateNeighbours
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	h (Ldcb;)Lddi; getPhase
	n (Ldcb;)Z canActivate
	a (Lcmm;Lgu;Ldcb;)V deactivate
	b ()I getActiveTicks
	a (Lbfj;Lcmm;Lgu;Ldcb;II)V activate
	a (Lbfj;Lcmm;Lgu;I)V tryResonateVibration
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcc$a;)V createBlockStateDefinition
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	a (Lcmm;Lgu;Ldcb;Ldas;)V lambda$getTicker$1
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
cwh net/minecraft/world/level/block/SculkShriekerBlock
	a SHRIEKING
	b WATERLOGGED
	c CAN_SUMMON
	d COLLIDER
	e TOP_Y
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b_ (Ldcb;)Lcvs; getRenderShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Ldcb;Ldat;)V lambda$getTicker$3
	a (Laif;Ldat;)V lambda$tick$2
	b (Laif;Ldat;)V lambda$onRemove$1
	a (Laif;Laig;Ldat;)V lambda$stepOn$0
	<clinit> ()V <clinit>
cwi net/minecraft/world/level/block/SculkSpreader
	a MAX_GROWTH_RATE_RADIUS
	b MAX_CHARGE
	c MAX_DECAY_FACTOR
	e MAX_CURSORS
	d SHRIEKER_PLACEMENT_RATE
	f isWorldGeneration
	g replaceableBlocks
	h growthSpawnCost
	i noGrowthRadius
	j chargeDecayRate
	k additionalDecayRate
	l cursors
	m LOGGER
	<init> (ZLanl;IIII)V <init>
	a ()Lcwi; createLevelSpreader
	b ()Lcwi; createWorldGenSpreader
	c ()Lanl; replaceableBlocks
	d ()I growthSpawnCost
	e ()I noGrowthRadius
	f ()I chargeDecayRate
	g ()I additionalDecayRate
	h ()Z isWorldGeneration
	i ()Ljava/util/List; getCursors
	j ()V clear
	a (Lqr;)V load
	b (Lqr;)V save
	a (Lgu;I)V addCursors
	a (Lcwi$a;)V addCursor
	a (Lcmn;Lgu;Lapf;Z)V updateCursors
	a (Lcwi$a;Lgu;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$updateCursors$2
	b (Lcwi$a;)Ljava/lang/Integer; lambda$save$1
	a (Lqr;Lrk;)V lambda$save$0
	<clinit> ()V <clinit>
cwi$a net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	c NON_CORNER_NEIGHBOURS
	a MAX_CURSOR_DECAY_DELAY
	d pos
	e charge
	f updateDelay
	g decayDelay
	h facings
	i DIRECTION_SET
	b CODEC
	<init> (Lgu;IIILjava/util/Optional;)V <init>
	<init> (Lgu;I)V <init>
	a ()Lgu; getPos
	b ()I getCharge
	c ()I getDecayDelay
	d ()Ljava/util/Set; getFacingData
	a (Lcmn;Lgu;Z)Z shouldUpdate
	a (Lcmn;Lgu;Lapf;Lcwi;Z)V update
	a (Lcwi$a;)V mergeWith
	a (Ldcb;)Lcwd; getBlockBehaviour
	a (Lapf;)Ljava/util/List; getRandomizedNonCornerNeighbourOffsets
	a (Lcmn;Lgu;Lapf;)Lgu; getValidMovementPos
	a (Lcmn;Lgu;Lgu;)Z isMovementUnobstructed
	a (Lcmn;Lgu;Lha;)Z isUnobstructed
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	b (Lcwi$a;)Ljava/util/Optional; lambda$static$4
	c (Lcwi$a;)Ljava/lang/Integer; lambda$static$3
	a (Ljava/util/List;)Ljava/util/Set; lambda$static$2
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V lambda$static$1
	a (Lgu;)Z lambda$static$0
	<clinit> ()V <clinit>
cwj net/minecraft/world/level/block/SculkVeinBlock
	b WATERLOGGED
	c veinSpreader
	d sameSpaceSpreader
	<init> (Ldca$d;)V <init>
	b ()Lcum; getSpreader
	g ()Lcum; getSameSpaceSpreader
	a (Lcmn;Lgu;Ldcb;Ljava/util/Collection;)Z regrow
	a (Lcmn;Ldcb;Lgu;Lapf;)V onDischarged
	a (Lcwi$a;Lcmn;Lgu;Lapf;Lcwi;Z)I attemptUseCharge
	a (Lcwi;Lcmn;Lgu;Lapf;)Z attemptPlaceSculk
	a (Lcmn;Ldcb;Lgu;)Z hasSubstrateAccess
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcih;)Z canBeReplaced
	c_ (Ldcb;)Ldxe; getFluidState
	<clinit> ()V <clinit>
cwj$a net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	c spreadTypes
	b this$0
	<init> (Lcwj;[Lcum$e;)V <init>
	a (Lcls;Lgu;Lgu;Lha;Ldcb;)Z stateCanBeReplaced
	a ()[Lcum$e; getSpreadTypes
	a (Ldcb;)Z isOtherBlockValidAsSource
cwk net/minecraft/world/level/block/SeaPickleBlock
	a MAX_PICKLES
	b PICKLES
	c WATERLOGGED
	d ONE_AABB
	e TWO_AABB
	f THREE_AABB
	g FOUR_AABB
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	h (Ldcb;)Z isDead
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cwl net/minecraft/world/level/block/SeagrassBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	c_ (Ldcb;)Ldxe; getFluidState
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	<clinit> ()V <clinit>
cwm net/minecraft/world/level/block/ShulkerBoxBlock
	c OPEN_AABB_SIZE
	d UP_OPEN_AABB
	e DOWN_OPEN_AABB
	f WES_OPEN_AABB
	g EAST_OPEN_AABB
	h NORTH_OPEN_AABB
	i SOUTH_OPEN_AABB
	j OPEN_SHAPE_BY_DIRECTION
	a FACING
	b CONTENTS
	k color
	<init> (Lcen;Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;Ldau;)Z canOpen
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcfz;Lcls;Ljava/util/List;Lchq;)V appendHoverText
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d_ (Ldcb;)Z hasAnalogOutputSignal
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	b (Lcfu;)Lcen; getColorFromItem
	a (Lcpn;)Lcen; getColorFromBlock
	a (Lcen;)Lcpn; getBlockByColor
	a ()Lcen; getColor
	b (Lcen;)Lcfz; getColoredItemStack
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Lcfz;Ldau;)V lambda$getCloneItemStack$2
	a (Ldau;Ljava/util/function/Consumer;)V lambda$getDrops$1
	a (Ljava/util/EnumMap;)V lambda$static$0
	<clinit> ()V <clinit>
cwm$1 net/minecraft/world/level/block/ShulkerBoxBlock$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
cwn net/minecraft/world/level/block/SignBlock
	e WATERLOGGED
	f AABB_OFFSET
	g SHAPE
	a type
	<init> (Ldca$d;Lddo;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;)Z isPossibleToRespawnInThis
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Lbyo;Ldav;Z)Z hasEditableText
	g (Ldcb;)F getYRotationDegrees
	h (Ldcb;)Leei; getSignHitboxCenterPosition
	c_ (Ldcb;)Ldxe; getFluidState
	c ()Lddo; type
	a (Lcpn;)Lddo; getWoodType
	a (Lbyo;Ldav;Z)V openTextEdit
	a (Lbyo;Ldav;)Z otherPlayerIsEditingSign
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lsw;)Z lambda$hasEditableText$0
	<clinit> ()V <clinit>
cwo net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	c (Lcmn;Lgu;Ldcb;)Lcfz; pickupBlock
	am_ ()Ljava/util/Optional; getPickupSound
cwp net/minecraft/world/level/block/SkullBlock
	a MAX
	e ROTATIONS
	b ROTATION
	c SHAPE
	d PIGLIN_SHAPE
	<init> (Lcwp$a;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cwp$a net/minecraft/world/level/block/SkullBlock$Type
cwp$b net/minecraft/world/level/block/SkullBlock$Types
	a SKELETON
	b WITHER_SKELETON
	c PLAYER
	d ZOMBIE
	e CREEPER
	f PIGLIN
	g DRAGON
	h $VALUES
	values ()[Lcwp$b; values
	valueOf (Ljava/lang/String;)Lcwp$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcwp$b; $values
	<clinit> ()V <clinit>
cwq net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	<init> (Ldca$d;)V <init>
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcih;)Z canBeReplaced
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
cwq$1 net/minecraft/world/level/block/SlabBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
cwr net/minecraft/world/level/block/SlimeBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Lcls;Lbfj;)V updateEntityAfterFallOn
	a (Lbfj;)V bounceUp
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
cws net/minecraft/world/level/block/SmallDripleafBlock
	e WATERLOGGED
	b FACING
	c AABB_OFFSET
	d SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	an_ ()F getMaxVerticalOffset
	<clinit> ()V <clinit>
cwt net/minecraft/world/level/block/SmithingTableBlock
	a CONTAINER_TITLE
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cwu net/minecraft/world/level/block/SmokerBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Lcmm;Lgu;Lbyo;)V openContainer
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
cwv net/minecraft/world/level/block/SnifferEggBlock
	a MAX_HATCH_LEVEL
	b HATCH
	c REGULAR_HATCH_TIME_TICKS
	d BOOSTED_HATCH_TIME_TICKS
	e RANDOM_HATCH_OFFSET_TICKS
	f SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	h (Ldcb;)I getHatchLevel
	n (Ldcb;)Z isReadyToHatch
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcls;Lgu;)Z hatchBoost
	<clinit> ()V <clinit>
cww net/minecraft/world/level/block/SnowLayerBlock
	a MAX_HEIGHT
	b LAYERS
	c SHAPE_BY_LAYER
	d HEIGHT_IMPASSABLE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cww$1 net/minecraft/world/level/block/SnowLayerBlock$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
cwx net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	h (Ldcb;)Z isSnowySetting
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cwy net/minecraft/world/level/block/SoulFireBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	h (Ldcb;)Z canSurviveOnBlock
	f (Ldcb;)Z canBurn
cwz net/minecraft/world/level/block/SoulSandBlock
	a SHAPE
	b BUBBLE_COLUMN_CHECK_DELAY
	<init> (Ldca$d;)V <init>
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	<clinit> ()V <clinit>
cxa net/minecraft/world/level/block/SoundType
	a EMPTY
	b WOOD
	c GRAVEL
	d GRASS
	e LILY_PAD
	f STONE
	g METAL
	h GLASS
	i WOOL
	j SAND
	k SNOW
	l POWDER_SNOW
	m LADDER
	n ANVIL
	o SLIME_BLOCK
	p HONEY_BLOCK
	q WET_GRASS
	r CORAL_BLOCK
	s BAMBOO
	t BAMBOO_SAPLING
	u SCAFFOLDING
	v SWEET_BERRY_BUSH
	w CROP
	x HARD_CROP
	y VINE
	z NETHER_WART
	A LANTERN
	B STEM
	C NYLIUM
	D FUNGUS
	E ROOTS
	F SHROOMLIGHT
	G WEEPING_VINES
	H TWISTING_VINES
	I SOUL_SAND
	J SOUL_SOIL
	K BASALT
	L WART_BLOCK
	M NETHERRACK
	N NETHER_BRICKS
	O NETHER_SPROUTS
	P NETHER_ORE
	Q BONE_BLOCK
	R NETHERITE_BLOCK
	S ANCIENT_DEBRIS
	T LODESTONE
	U CHAIN
	V NETHER_GOLD_ORE
	W GILDED_BLACKSTONE
	X CANDLE
	Y AMETHYST
	Z AMETHYST_CLUSTER
	aa SMALL_AMETHYST_BUD
	ab MEDIUM_AMETHYST_BUD
	ac LARGE_AMETHYST_BUD
	ad TUFF
	ae CALCITE
	af DRIPSTONE_BLOCK
	ag POINTED_DRIPSTONE
	ah COPPER
	ai CAVE_VINES
	aj SPORE_BLOSSOM
	ak AZALEA
	al FLOWERING_AZALEA
	am MOSS_CARPET
	an PINK_PETALS
	ao MOSS
	ap BIG_DRIPLEAF
	aq SMALL_DRIPLEAF
	ar ROOTED_DIRT
	as HANGING_ROOTS
	at AZALEA_LEAVES
	au SCULK_SENSOR
	av SCULK_CATALYST
	aw SCULK
	ax SCULK_VEIN
	ay SCULK_SHRIEKER
	az GLOW_LICHEN
	aA DEEPSLATE
	aB DEEPSLATE_BRICKS
	aC DEEPSLATE_TILES
	aD POLISHED_DEEPSLATE
	aE FROGLIGHT
	aF FROGSPAWN
	aG MANGROVE_ROOTS
	aH MUDDY_MANGROVE_ROOTS
	aI MUD
	aJ MUD_BRICKS
	aK PACKED_MUD
	aL HANGING_SIGN
	aM NETHER_WOOD_HANGING_SIGN
	aN BAMBOO_WOOD_HANGING_SIGN
	aO BAMBOO_WOOD
	aP NETHER_WOOD
	aQ CHERRY_WOOD
	aR CHERRY_SAPLING
	aS CHERRY_LEAVES
	aT CHERRY_WOOD_HANGING_SIGN
	aU CHISELED_BOOKSHELF
	aV SUSPICIOUS_SAND
	aW SUSPICIOUS_GRAVEL
	aX DECORATED_POT
	aY DECORATED_POT_CRACKED
	aZ volume
	ba pitch
	bb breakSound
	bc stepSound
	bd placeSound
	be hitSound
	bf fallSound
	<init> (FFLamg;Lamg;Lamg;Lamg;Lamg;)V <init>
	a ()F getVolume
	b ()F getPitch
	c ()Lamg; getBreakSound
	d ()Lamg; getStepSound
	e ()Lamg; getPlaceSound
	f ()Lamg; getHitSound
	g ()Lamg; getFallSound
	<clinit> ()V <clinit>
cxb net/minecraft/world/level/block/SpawnerBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Lcfz;Lcls;Ljava/util/List;Lchq;)V appendHoverText
	a (Lcfz;)Ljava/util/Optional; getSpawnEntityDisplayName
	a (Lbfn;)Lsw; lambda$getSpawnEntityDisplayName$0
cxc net/minecraft/world/level/block/SpongeBlock
	a MAX_DEPTH
	b MAX_COUNT
	c ALL_DIRECTIONS
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Lgu;)V tryAbsorbWater
	b (Lcmm;Lgu;)Z removeWaterBreadthFirstSearch
	a (Lgu;Lcmm;Lgu;)Z lambda$removeWaterBreadthFirstSearch$1
	a (Lgu;Ljava/util/function/Consumer;)V lambda$removeWaterBreadthFirstSearch$0
	<clinit> ()V <clinit>
cxd net/minecraft/world/level/block/SporeBlossomBlock
	a SHAPE
	b ADD_PARTICLE_ATTEMPTS
	c PARTICLE_XZ_RADIUS
	d PARTICLE_Y_MAX
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	<clinit> ()V <clinit>
cxe net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmp;Lgu;)Z canBeGrass
	c (Ldcb;Lcmp;Lgu;)Z canPropagate
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
cxf net/minecraft/world/level/block/StainedGlassBlock
	a color
	<init> (Lcen;Ldca$d;)V <init>
	a ()Lcen; getColor
cxg net/minecraft/world/level/block/StainedGlassPaneBlock
	i color
	<init> (Lcen;Ldca$d;)V <init>
	a ()Lcen; getColor
cxh net/minecraft/world/level/block/StairBlock
	a FACING
	b HALF
	c SHAPE
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	l OCTET_PNP
	m OCTET_PPN
	n OCTET_PPP
	D TOP_SHAPES
	E BOTTOM_SHAPES
	F SHAPE_BY_STATE
	G base
	H baseState
	a (Lefb;Lefb;Lefb;Lefb;Lefb;)[Lefb; makeShapes
	a (ILefb;Lefb;Lefb;Lefb;Lefb;)Lefb; makeStairShape
	<init> (Ldcb;Ldca$d;)V <init>
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	n (Ldcb;)I getShapeIndex
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcmm;Lgu;Lbyo;)V attack
	a (Lcmn;Lgu;Ldcb;)V destroy
	d ()F getExplosionResistance
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Lcme;)V wasExploded
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	i (Ldcb;Lcls;Lgu;)Lddk; getStairsShape
	c (Ldcb;Lcls;Lgu;Lha;)Z canTakeShape
	h (Ldcb;)Z isStairs
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	b (I)[Lefb; lambda$makeShapes$1
	a (Lefb;Lefb;Lefb;Lefb;Lefb;I)Lefb; lambda$makeShapes$0
	<clinit> ()V <clinit>
cxh$1 net/minecraft/world/level/block/StairBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cxi net/minecraft/world/level/block/StandingSignBlock
	a ROTATION
	<init> (Ldca$d;Lddo;)V <init>
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	g (Ldcb;)F getYRotationDegrees
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cxj net/minecraft/world/level/block/StemBlock
	a MAX_AGE
	b AGE
	c AABB_OFFSET
	d SHAPE_BY_AGE
	e fruit
	f seedSupplier
	<init> (Lcxk;Ljava/util/function/Supplier;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	a (Ldcc$a;)V createBlockStateDefinition
	a ()Lcxk; getFruit
	<clinit> ()V <clinit>
cxk net/minecraft/world/level/block/StemGrownBlock
	<init> (Ldca$d;)V <init>
	a ()Lcxj; getStem
	b ()Lcop; getAttachedStem
cxl net/minecraft/world/level/block/StonecutterBlock
	c CONTAINER_TITLE
	a FACING
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcmm;Lgu;ILbyn;Lbyo;)Lcbf; lambda$getMenuProvider$0
	<clinit> ()V <clinit>
cxm net/minecraft/world/level/block/StructureBlock
	a MODE
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Laif;Ldba;)V trigger
	<clinit> ()V <clinit>
cxm$1 net/minecraft/world/level/block/StructureBlock$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	<clinit> ()V <clinit>
cxn net/minecraft/world/level/block/StructureVoidBlock
	a SIZE
	b SHAPE
	<init> (Ldca$d;)V <init>
	b_ (Ldcb;)Lcvs; getRenderShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	<clinit> ()V <clinit>
cxo net/minecraft/world/level/block/SugarCaneBlock
	a AGE
	b AABB_OFFSET
	c SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cxp net/minecraft/world/level/block/SupportType
	a FULL
	b CENTER
	c RIGID
	d $VALUES
	values ()[Lcxp; values
	valueOf (Ljava/lang/String;)Lcxp; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Z isSupporting
	a ()[Lcxp; $values
	<clinit> ()V <clinit>
cxp$1 net/minecraft/world/level/block/SupportType$1
	<init> (Ljava/lang/String;I)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Z isSupporting
cxp$2 net/minecraft/world/level/block/SupportType$2
	d CENTER_SUPPORT_WIDTH
	e CENTER_SUPPORT_SHAPE
	<init> (Ljava/lang/String;I)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Z isSupporting
cxp$3 net/minecraft/world/level/block/SupportType$3
	d RIGID_SUPPORT_WIDTH
	e RIGID_SUPPORT_SHAPE
	<init> (Ljava/lang/String;I)V <init>
	a (Ldcb;Lcls;Lgu;Lha;)Z isSupporting
cxq net/minecraft/world/level/block/SuspiciousEffectHolder
	a ()Lbey; getSuspiciousEffect
	b ()I getEffectDuration
	c ()Ljava/util/List; getAllEffectHolders
	a (Lcml;)Lcxq; tryGet
cxr net/minecraft/world/level/block/SweetBerryBushBlock
	c HURT_SPEED_THRESHOLD
	a MAX_AGE
	b AGE
	d SAPLING_SHAPE
	e MID_GROWTH_SHAPE
	<init> (Ldca$d;)V <init>
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	e_ (Ldcb;)Z isRandomlyTicking
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cxs net/minecraft/world/level/block/TallFlowerBlock
	<init> (Ldca$d;)V <init>
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
cxt net/minecraft/world/level/block/TallGrassBlock
	a AABB_OFFSET
	b SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcmp;Lgu;Ldcb;Z)Z isValidBonemealTarget
	a (Lcmm;Lapf;Lgu;Ldcb;)Z isBonemealSuccess
	a (Laif;Lapf;Lgu;Ldcb;)V performBonemeal
	<clinit> ()V <clinit>
cxu net/minecraft/world/level/block/TallSeagrassBlock
	b HALF
	c AABB_OFFSET
	d SHAPE
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	c_ (Ldcb;)Ldxe; getFluidState
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canPlaceLiquid
	a (Lcmn;Lgu;Ldcb;Ldxe;)Z placeLiquid
	<clinit> ()V <clinit>
cxv net/minecraft/world/level/block/TargetBlock
	a OUTPUT_POWER
	b ACTIVATION_TICKS_ARROWS
	c ACTIVATION_TICKS_OTHER
	<init> (Ldca$d;)V <init>
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Lcmn;Ldcb;Leee;Lbfj;)I updateRedstoneOutput
	a (Leee;Leei;)I getRedstoneStrength
	a (Lcmn;Ldcb;ILgu;I)V setOutputPower
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	f_ (Ldcb;)Z isSignalSource
	a (Ldcc$a;)V createBlockStateDefinition
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	<clinit> ()V <clinit>
cxw net/minecraft/world/level/block/TintedGlassBlock
	<init> (Ldca$d;)V <init>
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	g (Ldcb;Lcls;Lgu;)I getLightBlock
cxx net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Lcmm;Lgu;Lcme;)V wasExploded
	a (Lcmm;Lgu;)V explode
	a (Lcmm;Lgu;Lbfz;)V explode
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	a (Lcme;)Z dropFromExplosion
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lbdw;Lbyo;)V lambda$use$0
	<clinit> ()V <clinit>
cxy net/minecraft/world/level/block/TorchBlock
	g AABB_STANDING_OFFSET
	h AABB
	i flameParticle
	<init> (Ldca$d;Lit;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	<clinit> ()V <clinit>
cxz net/minecraft/world/level/block/TorchflowerCropBlock
	a MAX_AGE
	b AGE
	e AABB_OFFSET
	f SHAPE_BY_AGE
	g BONEMEAL_INCREASE
	<init> (Ldca$d;)V <init>
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a ()Lddb; getAgeProperty
	b ()I getMaxAge
	c ()Lcml; getBaseSeedId
	b (I)Ldcb; getStateForAge
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;)I getBonemealAgeIncrease
	<clinit> ()V <clinit>
cya net/minecraft/world/level/block/TrapDoorBlock
	a OPEN
	b HALF
	c POWERED
	d WATERLOGGED
	e AABB_THICKNESS
	f EAST_OPEN_AABB
	g WEST_OPEN_AABB
	h SOUTH_OPEN_AABB
	i NORTH_OPEN_AABB
	j BOTTOM_AABB
	k TOP_AABB
	l type
	<init> (Ldca$d;Ldcq;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lbyo;Lcmm;Lgu;Z)V playSound
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	c_ (Ldcb;)Ldxe; getFluidState
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	<clinit> ()V <clinit>
cya$1 net/minecraft/world/level/block/TrapDoorBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	<clinit> ()V <clinit>
cyb net/minecraft/world/level/block/TrappedChestBlock
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	b ()Lamo; getOpenChestStat
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	g ()Lczp; lambda$new$0
cyc net/minecraft/world/level/block/TripWireBlock
	a POWERED
	b ATTACHED
	c DISARMED
	d NORTH
	e EAST
	f SOUTH
	g WEST
	j PROPERTY_BY_DIRECTION
	h AABB
	i NOT_ATTACHED_AABB
	k RECHECK_PERIOD
	l hook
	<init> (Lcyd;Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Lcmm;Lgu;Ldcb;)V updateSource
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmm;Lgu;)V checkPressed
	a (Ldcb;Lha;)Z shouldConnectTo
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyc$1 net/minecraft/world/level/block/TripWireBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cyd net/minecraft/world/level/block/TripWireHookBlock
	a FACING
	b POWERED
	c ATTACHED
	d WIRE_DIST_MIN
	e WIRE_DIST_MAX
	k RECHECK_PERIOD
	f AABB_OFFSET
	g NORTH_AABB
	h SOUTH_AABB
	i WEST_AABB
	j EAST_AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Lcmm;Lgu;Ldcb;ZZILdcb;)V calculateState
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Lcmm;Lgu;ZZZZ)V emitState
	a (Lcmm;Lgu;Lha;)V notifyNeighbors
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	f_ (Ldcb;)Z isSignalSource
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyd$1 net/minecraft/world/level/block/TripWireHookBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cye net/minecraft/world/level/block/TurtleEggBlock
	a MAX_HATCH_LEVEL
	b MIN_EGGS
	c MAX_EGGS
	f ONE_EGG_AABB
	g MULTIPLE_EGGS_AABB
	d HATCH
	e EGGS
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfj;)V stepOn
	a (Lcmm;Ldcb;Lgu;Lbfj;F)V fallOn
	a (Lcmm;Ldcb;Lgu;Lbfj;I)V destroyEgg
	a (Lcmm;Lgu;Ldcb;)V decreaseEggs
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Lcls;Lgu;)Z onSand
	b (Lcls;Lgu;)Z isSand
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lcmm;)Z shouldUpdateHatchLevel
	a (Lcmm;Lbyo;Lgu;Ldcb;Lczn;Lcfz;)V playerDestroy
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lcmm;Lbfj;)Z canDestroyEgg
	<clinit> ()V <clinit>
cyf net/minecraft/world/level/block/TwistingVinesBlock
	f SHAPE
	<init> (Ldca$d;)V <init>
	a (Lapf;)I getBlocksToGrowWhenBonemealed
	a ()Lcpn; getBodyBlock
	g (Ldcb;)Z canGrowInto
	<clinit> ()V <clinit>
cyg net/minecraft/world/level/block/TwistingVinesPlantBlock
	d SHAPE
	<init> (Ldca$d;)V <init>
	b ()Lcta; getHeadBlock
	<clinit> ()V <clinit>
cyh net/minecraft/world/level/block/VineBlock
	a UP
	b NORTH
	c EAST
	d SOUTH
	e WEST
	f PROPERTY_BY_DIRECTION
	g AABB_OFFSET
	h UP_AABB
	i WEST_AABB
	j EAST_AABB
	k NORTH_AABB
	l SOUTH_AABB
	m shapesCache
	<init> (Ldca$d;)V <init>
	h (Ldcb;)Lefb; calculateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	n (Ldcb;)Z hasFaces
	o (Ldcb;)I countFaces
	b (Lcls;Lgu;Lha;)Z canSupportAtFace
	a (Lcls;Lgu;Lha;)Z isAcceptableNeighbour
	i (Ldcb;Lcls;Lgu;)Ldcb; getUpdatedState
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Ldcb;Lapf;)Ldcb; copyRandomFaces
	p (Ldcb;)Z hasHorizontalConnection
	a (Lcls;Lgu;)Z canSpread
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Lha;)Ldcs; getPropertyForFace
	a (Ljava/util/Map$Entry;)Z lambda$static$0
	<clinit> ()V <clinit>
cyh$1 net/minecraft/world/level/block/VineBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cyi net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	<init> (Lcen;Ldca$d;)V <init>
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyj net/minecraft/world/level/block/WallBlock
	a UP
	b EAST_WALL
	c NORTH_WALL
	d SOUTH_WALL
	e WEST_WALL
	f WATERLOGGED
	g shapeByIndex
	h collisionShapeByIndex
	i WALL_WIDTH
	j WALL_HEIGHT
	k POST_WIDTH
	l POST_COVER_WIDTH
	m WALL_COVER_START
	n WALL_COVER_END
	D POST_TEST
	E NORTH_TEST
	F SOUTH_TEST
	G WEST_TEST
	H EAST_TEST
	<init> (Ldca$d;)V <init>
	a (Lefb;Lddn;Lefb;Lefb;)Lefb; applyWallShape
	a (FFFFFF)Ljava/util/Map; makeShapes
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;ZLha;)Z connectsTo
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Ldde;)Z isConnected
	a (Lefb;Lefb;)Z isCovered
	a (Lcmp;Ldcb;Lgu;Ldcb;)Ldcb; topUpdate
	a (Lcmp;Lgu;Ldcb;Lgu;Ldcb;Lha;)Ldcb; sideUpdate
	a (Lcmp;Ldcb;Lgu;Ldcb;ZZZZ)Ldcb; updateShape
	a (Ldcb;Ldcb;Lefb;)Z shouldRaisePost
	a (Ldcb;ZZZZLefb;)Ldcb; updateSides
	a (ZLefb;Lefb;)Lddn; makeWallState
	c_ (Ldcb;)Ldxe; getFluidState
	c (Ldcb;Lcls;Lgu;)Z propagatesSkylightDown
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	<clinit> ()V <clinit>
cyj$1 net/minecraft/world/level/block/WallBlock$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
cyk net/minecraft/world/level/block/WallHangingSignBlock
	a FACING
	b PLANK_NORTHSOUTH
	c PLANK_EASTWEST
	d SHAPE_NORTHSOUTH
	h SHAPE_EASTWEST
	i AABBS
	<init> (Ldca$d;Lddo;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lbyo;Leee;Ldav;Lcfz;)Z shouldTryToChainAnotherHangingSign
	a (Leee;Ldcb;)Z isHittingEditableSide
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	b (Ldcb;Lcmp;Lgu;)Z canPlace
	a (Lcmp;Ldcb;Lgu;Lha;)Z canAttachTo
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	g (Ldcb;)F getYRotationDegrees
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	<clinit> ()V <clinit>
cyk$1 net/minecraft/world/level/block/WallHangingSignBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
cyl net/minecraft/world/level/block/WallSignBlock
	a FACING
	b AABB_THICKNESS
	c AABB_BOTTOM
	d AABB_TOP
	h AABBS
	<init> (Ldca$d;Lddo;)V <init>
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	g (Ldcb;)F getYRotationDegrees
	h (Ldcb;)Leei; getSignHitboxCenterPosition
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cym net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	<init> (Lcwp$a;Ldca$d;)V <init>
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyn net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	<init> (Ldca$d;Lit;)V <init>
	f ()Ljava/lang/String; getDescriptionId
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	h (Ldcb;)Lefb; getShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Lcih;)Ldcb; getStateForPlacement
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyo net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	<clinit> ()V <clinit>
cyp net/minecraft/world/level/block/WeatheringCopper
	u_ NEXT_BY_BLOCK
	v_ PREVIOUS_BY_BLOCK
	a (Lcpn;)Ljava/util/Optional; getPrevious
	b (Lcpn;)Lcpn; getFirst
	b (Ldcb;)Ljava/util/Optional; getPrevious
	c (Lcpn;)Ljava/util/Optional; getNext
	c (Ldcb;)Ldcb; getFirst
	i_ (Ldcb;)Ljava/util/Optional; getNext
	a ()F getChanceModifier
	a (Ldcb;Lcpn;)Ldcb; lambda$getNext$3
	b (Ldcb;Lcpn;)Ldcb; lambda$getPrevious$2
	c ()Lcom/google/common/collect/BiMap; lambda$static$1
	d ()Lcom/google/common/collect/BiMap; lambda$static$0
	<clinit> ()V <clinit>
cyp$a net/minecraft/world/level/block/WeatheringCopper$WeatherState
	a UNAFFECTED
	b EXPOSED
	c WEATHERED
	d OXIDIZED
	e $VALUES
	values ()[Lcyp$a; values
	valueOf (Ljava/lang/String;)Lcyp$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lcyp$a; $values
	<clinit> ()V <clinit>
cyq net/minecraft/world/level/block/WeatheringCopperFullBlock
	d weatherState
	<init> (Lcyp$a;Ldca$d;)V <init>
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	e_ (Ldcb;)Z isRandomlyTicking
	g ()Lcyp$a; getAge
	b ()Ljava/lang/Enum; getAge
cyr net/minecraft/world/level/block/WeatheringCopperSlabBlock
	e weatherState
	<init> (Lcyp$a;Ldca$d;)V <init>
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	e_ (Ldcb;)Z isRandomlyTicking
	g ()Lcyp$a; getAge
	b ()Ljava/lang/Enum; getAge
cys net/minecraft/world/level/block/WeatheringCopperStairBlock
	F weatherState
	<init> (Lcyp$a;Ldcb;Ldca$d;)V <init>
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	e_ (Ldcb;)Z isRandomlyTicking
	g ()Lcyp$a; getAge
	b ()Ljava/lang/Enum; getAge
cyt net/minecraft/world/level/block/WebBlock
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
cyu net/minecraft/world/level/block/WeepingVinesBlock
	f SHAPE
	<init> (Ldca$d;)V <init>
	a (Lapf;)I getBlocksToGrowWhenBonemealed
	a ()Lcpn; getBodyBlock
	g (Ldcb;)Z canGrowInto
	<clinit> ()V <clinit>
cyv net/minecraft/world/level/block/WeepingVinesPlantBlock
	d SHAPE
	<init> (Ldca$d;)V <init>
	b ()Lcta; getHeadBlock
	<clinit> ()V <clinit>
cyw net/minecraft/world/level/block/WeightedPressurePlateBlock
	d POWER
	e maxWeight
	<init> (ILdca$d;Ldcq;)V <init>
	b (Lcmm;Lgu;)I getSignalStrength
	g (Ldcb;)I getSignalForState
	a (Ldcb;I)Ldcb; setSignalForState
	a ()I getPressedTime
	a (Ldcc$a;)V createBlockStateDefinition
	<clinit> ()V <clinit>
cyx net/minecraft/world/level/block/WetSpongeBlock
	<init> (Ldca$d;)V <init>
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
cyy net/minecraft/world/level/block/WitherRoseBlock
	<init> (Lbey;Ldca$d;)V <init>
	d (Ldcb;Lcls;Lgu;)Z mayPlaceOn
	a (Ldcb;Lcmm;Lgu;Lapf;)V animateTick
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
cyz net/minecraft/world/level/block/WitherSkullBlock
	e witherPatternFull
	f witherPatternBase
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Lcmm;Lgu;Ldax;)V checkSpawn
	b (Lcmm;Lgu;Lcfz;)Z canSpawnMob
	u ()Ldcg; getOrCreateWitherFull
	v ()Ldcg; getOrCreateWitherBase
	a (Ldcf;)Z lambda$getOrCreateWitherBase$3
	b (Ldcf;)Z lambda$getOrCreateWitherBase$2
	c (Ldcf;)Z lambda$getOrCreateWitherFull$1
	d (Ldcf;)Z lambda$getOrCreateWitherFull$0
cza net/minecraft/world/level/block/WitherWallSkullBlock
	<init> (Ldca$d;)V <init>
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
czb net/minecraft/world/level/block/WoolCarpetBlock
	b color
	<init> (Lcen;Ldca$d;)V <init>
	a ()Lcen; getColor
czc net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	c SLOT_INPUT
	d SLOT_FUEL
	e SLOT_RESULT
	f DATA_LIT_TIME
	r SLOTS_FOR_UP
	s SLOTS_FOR_DOWN
	t SLOTS_FOR_SIDES
	g DATA_LIT_DURATION
	h DATA_COOKING_PROGRESS
	i DATA_COOKING_TOTAL_TIME
	j NUM_DATA_VALUES
	k BURN_TIME_STANDARD
	l BURN_COOL_SPEED
	m items
	u litTime
	v litDuration
	w cookingProgress
	x cookingTotalTime
	n dataAccess
	y recipesUsed
	z quickCheck
	<init> (Lczp;Lgu;Ldcb;Lcjf;)V <init>
	f ()Ljava/util/Map; getFuel
	b (Lcfu;)Z isNeverAFurnaceFuel
	a (Ljava/util/Map;Lanl;I)V add
	a (Ljava/util/Map;Lcml;I)V add
	i ()Z isLit
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lcmm;Lgu;Ldcb;Lczc;)V serverTick
	a (Lhs;Lcjc;Lhn;I)Z canBurn
	b (Lhs;Lcjc;Lhn;I)Z burn
	a (Lcfz;)I getBurnDuration
	a (Lcmm;Lczc;)I getTotalCookTime
	b (Lcfz;)Z isFuel
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Lbyo;)Z stillValid
	b (ILcfz;)Z canPlaceItem
	a ()V clearContent
	a (Lcjc;)V setRecipeUsed
	d ()Lcjc; getRecipeUsed
	a (Lbyo;Ljava/util/List;)V awardUsedRecipes
	a (Laig;)V awardUsedRecipesAndPopExperience
	a (Laif;Leei;)Ljava/util/List; getRecipesToAwardAndPopExperience
	a (Laif;Leei;IF)V createExperience
	a (Lbys;)V fillStackedContents
	a (Ljava/util/List;Laif;Leei;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lcjc;)V lambda$getRecipesToAwardAndPopExperience$1
	a (Lqr;Lacq;Ljava/lang/Integer;)V lambda$saveAdditional$0
	<clinit> ()V <clinit>
czc$1 net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	a this$0
	<init> (Lczc;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
czd net/minecraft/world/level/block/entity/BannerBlockEntity
	a MAX_PATTERNS
	b TAG_PATTERNS
	c TAG_PATTERN
	d TAG_COLOR
	e name
	f baseColor
	g itemPatterns
	h patterns
	<init> (Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;Lcen;)V <init>
	a (Lcfz;)Lqx; getItemPatterns
	a (Lcfz;Lcen;)V fromItem
	b (Lcfz;)V fromItem
	Z ()Lsw; getName
	ab ()Lsw; getCustomName
	a (Lsw;)V setCustomName
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	a ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	c (Lcfz;)I getPatternCount
	c ()Ljava/util/List; getPatterns
	a (Lcen;Lqx;)Ljava/util/List; createPatterns
	d (Lcfz;)V removeLastPattern
	f ()Lcfz; getItem
	g ()Lcen; getBaseColor
	h ()Luo; getUpdatePacket
cze net/minecraft/world/level/block/entity/BannerPattern
	a hashname
	<init> (Ljava/lang/String;)V <init>
	a (Lacp;Z)Lacq; location
	a ()Ljava/lang/String; getHashname
	a (Ljava/lang/String;)Lhe; byHash
	a (Ljava/lang/String;Lhe$c;)Z lambda$byHash$0
cze$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	<init> ()V <init>
	a (Lacp;Lcen;)Lcze$a; addPattern
	a (Lhe;Lcen;)Lcze$a; addPattern
	a (Lcom/mojang/datafixers/util/Pair;)Lcze$a; addPattern
	a ()Lqx; toListTag
czf net/minecraft/world/level/block/entity/BannerPatterns
	a BASE
	b SQUARE_BOTTOM_LEFT
	c SQUARE_BOTTOM_RIGHT
	d SQUARE_TOP_LEFT
	e SQUARE_TOP_RIGHT
	f STRIPE_BOTTOM
	g STRIPE_TOP
	h STRIPE_LEFT
	i STRIPE_RIGHT
	j STRIPE_CENTER
	k STRIPE_MIDDLE
	l STRIPE_DOWNRIGHT
	m STRIPE_DOWNLEFT
	n STRIPE_SMALL
	o CROSS
	p STRAIGHT_CROSS
	q TRIANGLE_BOTTOM
	r TRIANGLE_TOP
	s TRIANGLES_BOTTOM
	t TRIANGLES_TOP
	u DIAGONAL_LEFT
	v DIAGONAL_RIGHT
	w DIAGONAL_LEFT_MIRROR
	x DIAGONAL_RIGHT_MIRROR
	y CIRCLE_MIDDLE
	z RHOMBUS_MIDDLE
	A HALF_VERTICAL
	B HALF_HORIZONTAL
	C HALF_VERTICAL_MIRROR
	D HALF_HORIZONTAL_MIRROR
	E BORDER
	F CURLY_BORDER
	G GRADIENT
	H GRADIENT_UP
	I BRICKS
	J GLOBE
	K CREEPER
	L SKULL
	M FLOWER
	N MOJANG
	O PIGLIN
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; create
	a (Lhr;)Lcze; bootstrap
	<clinit> ()V <clinit>
czg net/minecraft/world/level/block/entity/BarrelBlockEntity
	c items
	f openersCounter
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	b ()I getContainerSize
	f ()Lhn; getItems
	a (Lhn;)V setItems
	g ()Lsw; getDefaultName
	a (ILbyn;)Lcbf; createMenu
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
	i ()V recheckOpen
	a (Ldcb;Z)V updateBlockState
	a (Ldcb;Lamg;)V playSound
czg$1 net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	a this$0
	<init> (Lczg;)V <init>
	a (Lcmm;Lgu;Ldcb;)V onOpen
	b (Lcmm;Lgu;Ldcb;)V onClose
	a (Lcmm;Lgu;Ldcb;II)V openerCountChanged
	a (Lbyo;)Z isOwnContainer
czh net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	c lockKey
	d name
	<init> (Lczp;Lgu;Ldcb;)V <init>
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lsw;)V setCustomName
	Z ()Lsw; getName
	H_ ()Lsw; getDisplayName
	ab ()Lsw; getCustomName
	g ()Lsw; getDefaultName
	d (Lbyo;)Z canOpen
	a (Lbyo;Lbdz;Lsw;)Z canUnlock
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	a (ILbyn;)Lcbf; createMenu
czi net/minecraft/world/level/block/entity/BeaconBlockEntity
	f MAX_LEVELS
	a BEACON_EFFECTS
	g VALID_EFFECTS
	b DATA_LEVELS
	c DATA_PRIMARY
	d DATA_SECONDARY
	e NUM_DATA_VALUES
	h BLOCKS_CHECK_PER_TICK
	i DEFAULT_NAME
	j beamSections
	k checkingBeamSections
	l levels
	m lastCheckY
	n primaryPower
	r secondaryPower
	s name
	t lockKey
	u dataAccess
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;Lczi;)V tick
	a (Lcmm;III)I updateBase
	ap_ ()V setRemoved
	a (Lcmm;Lgu;ILbey;Lbey;)V applyEffects
	a (Lcmm;Lgu;Lamg;)V playSound
	c ()Ljava/util/List; getBeamSections
	f ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (I)Lbey; getValidEffectById
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lsw;)V setCustomName
	ab ()Lsw; getCustomName
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	H_ ()Lsw; getDisplayName
	Z ()Lsw; getName
	a (Lcmm;)V setLevel
	h ()Luo; getUpdatePacket
	<clinit> ()V <clinit>
czi$1 net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	a this$0
	<init> (Lczi;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
czi$a net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	<init> ([F)V <init>
	a ()V increaseHeight
	b ()[F getColor
	c ()I getHeight
czj net/minecraft/world/level/block/entity/BedBlockEntity
	a color
	<init> (Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;Lcen;)V <init>
	c ()Luz; getUpdatePacket
	d ()Lcen; getColor
	a (Lcen;)V setColor
	h ()Luo; getUpdatePacket
czk net/minecraft/world/level/block/entity/BeehiveBlockEntity
	a TAG_FLOWER_POS
	b MIN_OCCUPATION_TICKS
	c ENTITY_DATA
	d TICKS_IN_HIVE
	e HAS_NECTAR
	f BEES
	i IGNORED_BEE_TAGS
	g MAX_OCCUPANTS
	j MIN_TICKS_BEFORE_REENTERING_HIVE
	k MIN_OCCUPATION_TICKS_NECTAR
	h MIN_OCCUPATION_TICKS_NECTARLESS
	l stored
	m savedFlowerPos
	<init> (Lgu;Ldcb;)V <init>
	e ()V setChanged
	c ()Z isFireNearby
	d ()Z isEmpty
	f ()Z isFull
	a (Lbyo;Ldcb;Lczk$b;)V emptyAllLivingFromHive
	a (Ldcb;Lczk$b;)Ljava/util/List; releaseAllOccupants
	a (Lbfj;Z)V addOccupant
	g ()I getOccupantCount
	a (Ldcb;)I getHoneyLevel
	i ()Z isSedated
	a (Lbfj;ZI)V addOccupantWithPresetTicks
	a (Lqr;IZ)V storeBee
	a (Lcmm;Lgu;Ldcb;Lczk$a;Ljava/util/List;Lczk$b;Lgu;)Z releaseOccupant
	d (Lqr;)V removeIgnoredBeeTags
	a (ILbrm;)V setBeeReleaseData
	v ()Z hasSavedFlowerPos
	a (Lcmm;Lgu;Ldcb;Ljava/util/List;Lgu;)V tickOccupants
	a (Lcmm;Lgu;Ldcb;Lczk;)V serverTick
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	j ()Lqx; writeBees
	a (Ldca$a;)Z lambda$releaseOccupant$2
	a (Lbfj;)Lbfj; lambda$releaseOccupant$1
	a (Ldcb;Ljava/util/List;Lczk$b;Lczk$a;)Z lambda$releaseAllOccupants$0
	<clinit> ()V <clinit>
czk$a net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a entityData
	b ticksInHive
	c minOccupationTicks
	<init> (Lqr;II)V <init>
czk$b net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	a HONEY_DELIVERED
	b BEE_RELEASED
	c EMERGENCY
	d $VALUES
	values ()[Lczk$b; values
	valueOf (Ljava/lang/String;)Lczk$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lczk$b; $values
	<clinit> ()V <clinit>
czl net/minecraft/world/level/block/entity/BellBlockEntity
	d DURATION
	e GLOW_DURATION
	f MIN_TICKS_BETWEEN_SEARCHES
	g MAX_RESONATION_TICKS
	h TICKS_BEFORE_RESONATION
	i SEARCH_RADIUS
	j HEAR_BELL_RADIUS
	k HIGHLIGHT_RAIDERS_RADIUS
	l lastRingTimestamp
	a ticks
	b shaking
	c clickDirection
	m nearbyEntities
	n resonating
	r resonationTicks
	<init> (Lgu;Ldcb;)V <init>
	a_ (II)Z triggerEvent
	a (Lcmm;Lgu;Ldcb;Lczl;Lczl$a;)V tick
	a (Lcmm;Lgu;Ldcb;Lczl;)V clientTick
	b (Lcmm;Lgu;Ldcb;Lczl;)V serverTick
	a (Lha;)V onHit
	c ()V updateEntities
	a (Lgu;Ljava/util/List;)Z areRaidersNearby
	a (Lcmm;Lgu;Ljava/util/List;)V makeRaidersGlow
	b (Lcmm;Lgu;Ljava/util/List;)V showBellParticles
	a (Lgu;Lbfz;)Z isRaiderWithinRange
	a (Lbfz;)V glow
	a (Lgu;ILorg/apache/commons/lang3/mutable/MutableInt;Lcmm;Lbfz;)V lambda$showBellParticles$3
	b (Lgu;Lbfz;)Z lambda$showBellParticles$2
	c (Lgu;Lbfz;)Z lambda$showBellParticles$1
	d (Lgu;Lbfz;)Z lambda$makeRaidersGlow$0
czl$a net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
	run (Lcmm;Lgu;Ljava/util/List;)V run
czm net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	g ()Lsw; getDefaultName
	a (Lcfz;)I getBurnDuration
	a (ILbyn;)Lcbf; createMenu
czn net/minecraft/world/level/block/entity/BlockEntity
	c LOGGER
	d type
	o level
	p worldPosition
	q remove
	e blockState
	<init> (Lczp;Lgu;Ldcb;)V <init>
	c (Lqr;)Lgu; getPosFromTag
	k ()Lcmm; getLevel
	a (Lcmm;)V setLevel
	l ()Z hasLevel
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	m ()Lqr; saveWithFullMetadata
	n ()Lqr; saveWithId
	o ()Lqr; saveWithoutMetadata
	d (Lqr;)V saveId
	a (Lqr;Lczp;)V addEntityType
	e (Lcfz;)V saveToItem
	e (Lqr;)V saveMetadata
	a (Lgu;Ldcb;Lqr;)Lczn; loadStatic
	e ()V setChanged
	a (Lcmm;Lgu;Ldcb;)V setChanged
	p ()Lgu; getBlockPos
	q ()Ldcb; getBlockState
	h ()Luo; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	r ()Z isRemoved
	ap_ ()V setRemoved
	s ()V clearRemoved
	a_ (II)Z triggerEvent
	a (Lp;)V fillCrashReportCategory
	t ()Z onlyOpCanSetNbt
	u ()Lczp; getType
	b (Ldcb;)V setBlockState
	f ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	a (Ljava/lang/String;)Lczn; lambda$loadStatic$2
	a (Lqr;Ljava/lang/String;Lczn;)Lczn; lambda$loadStatic$1
	a (Lgu;Ldcb;Ljava/lang/String;Lczp;)Lczn; lambda$loadStatic$0
	<clinit> ()V <clinit>
czo net/minecraft/world/level/block/entity/BlockEntityTicker
	tick (Lcmm;Lgu;Ldcb;Lczn;)V tick
czp net/minecraft/world/level/block/entity/BlockEntityType
	P LOGGER
	a FURNACE
	b CHEST
	c TRAPPED_CHEST
	d ENDER_CHEST
	e JUKEBOX
	f DISPENSER
	g DROPPER
	h SIGN
	i HANGING_SIGN
	j MOB_SPAWNER
	k PISTON
	l BREWING_STAND
	m ENCHANTING_TABLE
	n END_PORTAL
	o BEACON
	p SKULL
	q DAYLIGHT_DETECTOR
	r HOPPER
	s COMPARATOR
	t BANNER
	u STRUCTURE_BLOCK
	v END_GATEWAY
	w COMMAND_BLOCK
	x SHULKER_BOX
	y BED
	z CONDUIT
	A BARREL
	B SMOKER
	C BLAST_FURNACE
	D LECTERN
	E BELL
	F JIGSAW
	G CAMPFIRE
	H BEEHIVE
	I SCULK_SENSOR
	J CALIBRATED_SCULK_SENSOR
	K SCULK_CATALYST
	L SCULK_SHRIEKER
	M CHISELED_BOOKSHELF
	N BRUSHABLE_BLOCK
	O DECORATED_POT
	Q factory
	R validBlocks
	S dataType
	a (Lczp;)Lacq; getKey
	a (Ljava/lang/String;Lczp$b;)Lczp; register
	<init> (Lczp$a;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V <init>
	a (Lgu;Ldcb;)Lczn; create
	a (Ldcb;)Z isValid
	a (Lcls;Lgu;)Lczn; getBlockEntity
	<clinit> ()V <clinit>
czp$a net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
	create (Lgu;Ldcb;)Lczn; create
czp$b net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	<init> (Lczp$a;Ljava/util/Set;)V <init>
	a (Lczp$a;[Lcpn;)Lczp$b; of
	a (Lcom/mojang/datafixers/types/Type;)Lczp; build
czq net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	h INGREDIENT_SLOT
	i FUEL_SLOT
	j SLOTS_FOR_UP
	k SLOTS_FOR_DOWN
	l SLOTS_FOR_SIDES
	c FUEL_USES
	d DATA_BREW_TIME
	e DATA_FUEL_USES
	f NUM_DATA_VALUES
	m items
	n brewTime
	r lastPotionCount
	s ingredient
	t fuel
	g dataAccess
	<init> (Lgu;Ldcb;)V <init>
	g ()Lsw; getDefaultName
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (Lcmm;Lgu;Ldcb;Lczq;)V serverTick
	f ()[Z getPotionBits
	a (Lhn;)Z isBrewable
	a (Lcmm;Lgu;Lhn;)V doBrew
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Lbyo;)Z stillValid
	b (ILcfz;)Z canPlaceItem
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
	a ()V clearContent
	a (ILbyn;)Lcbf; createMenu
	<clinit> ()V <clinit>
czq$1 net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	a this$0
	<init> (Lczq;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
czr net/minecraft/world/level/block/entity/BrushableBlockEntity
	a LOGGER
	b LOOT_TABLE_TAG
	c LOOT_TABLE_SEED_TAG
	d HIT_DIRECTION_TAG
	e ITEM_TAG
	f BRUSH_COOLDOWN_TICKS
	g BRUSH_RESET_TICKS
	h REQUIRED_BRUSHES_TO_BREAK
	i brushCount
	j brushCountResetsAtTick
	k coolDownEndsAtTick
	l item
	m hitDirection
	n lootTable
	r lootTableSeed
	<init> (Lgu;Ldcb;)V <init>
	a (JLbyo;Lha;)Z brush
	a (Lbyo;)V unpackLootTable
	b (Lbyo;)V brushingCompleted
	c (Lbyo;)V dropContent
	c ()V checkReset
	d (Lqr;)Z tryLoadLootTable
	e (Lqr;)Z trySaveLootTable
	ao_ ()Lqr; getUpdateTag
	d ()Luz; getUpdatePacket
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lacq;J)V setLootTable
	i ()I getCompletionState
	f ()Lha; getHitDirection
	g ()Lcfz; getItem
	h ()Luo; getUpdatePacket
	<clinit> ()V <clinit>
czs net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	c ()Ldgu$d; createVibrationUser
czs$a net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser
	a this$0
	<init> (Lczs;Lgu;)V <init>
	a ()I getListenerRadius
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Lcmm;Lgu;Ldcb;)I getBackSignal
czt net/minecraft/world/level/block/entity/CampfireBlockEntity
	a BURN_COOL_SPEED
	b NUM_SLOTS
	c items
	d cookingProgress
	e cookingTime
	f quickCheck
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;Lczt;)V cookTick
	b (Lcmm;Lgu;Ldcb;Lczt;)V cooldownTick
	c (Lcmm;Lgu;Ldcb;Lczt;)V particleTick
	c ()Lhn; getItems
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	d ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (Lcfz;)Ljava/util/Optional; getCookableRecipe
	a (Lbfj;Lcfz;I)Z placeFood
	g ()V markUpdated
	a ()V clearContent
	f ()V dowse
	h ()Luo; getUpdatePacket
	a (Lbdq;Lcmm;Lciq;)Lcfz; lambda$cookTick$0
czu net/minecraft/world/level/block/entity/ChestBlockEntity
	c EVENT_SET_OPEN_COUNT
	f items
	g openersCounter
	j chestLidController
	<init> (Lczp;Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;)V <init>
	b ()I getContainerSize
	g ()Lsw; getDefaultName
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lcmm;Lgu;Ldcb;Lczu;)V lidAnimateTick
	a (Lcmm;Lgu;Ldcb;Lamg;)V playSound
	a_ (II)Z triggerEvent
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
	f ()Lhn; getItems
	a (Lhn;)V setItems
	a (F)F getOpenNess
	a (Lcls;Lgu;)I getOpenCount
	a (Lczu;Lczu;)V swapContents
	a (ILbyn;)Lcbf; createMenu
	i ()V recheckOpen
	a (Lcmm;Lgu;Ldcb;II)V signalOpenCount
czu$1 net/minecraft/world/level/block/entity/ChestBlockEntity$1
	a this$0
	<init> (Lczu;)V <init>
	a (Lcmm;Lgu;Ldcb;)V onOpen
	b (Lcmm;Lgu;Ldcb;)V onClose
	a (Lcmm;Lgu;Ldcb;II)V openerCountChanged
	a (Lbyo;)Z isOwnContainer
czv net/minecraft/world/level/block/entity/ChestLidController
	a shouldBeOpen
	b openness
	c oOpenness
	<init> ()V <init>
	a ()V tickLid
	a (F)F getOpenness
	a (Z)V shouldBeOpen
czw net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	c MAX_BOOKS_IN_STORAGE
	d LOGGER
	e items
	f lastInteractedSlot
	<init> (Lgu;Ldcb;)V <init>
	c (I)V updateState
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	f ()I count
	a ()V clearContent
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Lbdq;ILcfz;)Z canTakeItem
	ac_ ()I getMaxStackSize
	a (Lbyo;)Z stillValid
	b (ILcfz;)Z canPlaceItem
	g ()I getLastInteractedSlot
	a (Lcfz;Lbdq;Lcfz;)Z lambda$canTakeItem$0
	<clinit> ()V <clinit>
czx net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	d commandBlock
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	t ()Z onlyOpCanSetNbt
	c ()Lcln; getCommandBlock
	a (Z)V setPowered
	d ()Z isPowered
	f ()Z isAutomatic
	b (Z)V setAutomatic
	g ()V onModeSwitch
	x ()V scheduleTick
	i ()Z wasConditionMet
	j ()Z markConditionMet
	v ()Lczx$a; getMode
	w ()Z isConditional
czx$1 net/minecraft/world/level/block/entity/CommandBlockEntity$1
	b this$0
	<init> (Lczx;)V <init>
	a (Ljava/lang/String;)V setCommand
	e ()Laif; getLevel
	f ()V onUpdated
	g ()Leei; getPosition
	i ()Lds; createCommandSourceStack
	j ()Z isValid
czx$a net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	a SEQUENCE
	b AUTO
	c REDSTONE
	d $VALUES
	values ()[Lczx$a; values
	valueOf (Ljava/lang/String;)Lczx$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lczx$a; $values
	<clinit> ()V <clinit>
czy net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	c ()I getOutputSignal
	a (I)V setOutputSignal
czz net/minecraft/world/level/block/entity/ConduitBlockEntity
	b BLOCK_REFRESH_RATE
	c EFFECT_DURATION
	d ROTATION_SPEED
	e MIN_ACTIVE_SIZE
	f MIN_KILL_SIZE
	g KILL_RANGE
	h VALID_BLOCKS
	a tickCount
	i activeRotation
	j isActive
	k isHunting
	l effectBlocks
	m destroyTarget
	n destroyTargetUUID
	r nextAmbientSoundActivation
	<init> (Lgu;Ldcb;)V <init>
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	c ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (Lcmm;Lgu;Ldcb;Lczz;)V clientTick
	b (Lcmm;Lgu;Ldcb;Lczz;)V serverTick
	a (Lczz;Ljava/util/List;)V updateHunting
	a (Lcmm;Lgu;Ljava/util/List;)Z updateShape
	b (Lcmm;Lgu;Ljava/util/List;)V applyEffects
	a (Lcmm;Lgu;Ldcb;Ljava/util/List;Lczz;)V updateDestroyTarget
	a (Lcmm;Lgu;Lczz;)V updateClientTarget
	a (Lgu;)Leed; getDestroyRangeAABB
	a (Lcmm;Lgu;Ljava/util/UUID;)Lbfz; findDestroyTarget
	a (Lcmm;Lgu;Ljava/util/List;Lbfj;I)V animationTick
	d ()Z isActive
	f ()Z isHunting
	a (Z)V setHunting
	a (F)F getActiveRotation
	h ()Luo; getUpdatePacket
	a (Ljava/util/UUID;Lbfz;)Z lambda$findDestroyTarget$1
	a (Lbfz;)Z lambda$updateDestroyTarget$0
	<clinit> ()V <clinit>
daa net/minecraft/world/level/block/entity/ContainerOpenersCounter
	a CHECK_TICK_DELAY
	b openCount
	<init> ()V <init>
	a (Lcmm;Lgu;Ldcb;)V onOpen
	b (Lcmm;Lgu;Ldcb;)V onClose
	a (Lcmm;Lgu;Ldcb;II)V openerCountChanged
	a (Lbyo;)Z isOwnContainer
	a (Lbyo;Lcmm;Lgu;Ldcb;)V incrementOpeners
	b (Lbyo;Lcmm;Lgu;Ldcb;)V decrementOpeners
	a (Lcmm;Lgu;)I getOpenCount
	c (Lcmm;Lgu;Ldcb;)V recheckOpeners
	a ()I getOpenerCount
	d (Lcmm;Lgu;Ldcb;)V scheduleRecheck
dab net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	<init> (Lgu;Ldcb;)V <init>
dac net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	a TAG_SHERDS
	b decorations
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	c ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	d ()Lha; getDirection
	f ()Ldac$a; getDecorations
	a (Lcfz;)V setFromItem
	h ()Luo; getUpdatePacket
dac$a net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations
	b back
	c left
	d right
	e front
	a EMPTY
	<init> (Lcfu;Lcfu;Lcfu;Lcfu;)V <init>
	a (Lqr;)Lqr; save
	a ()Ljava/util/stream/Stream; sorted
	b (Lqr;)Ldac$a; load
	a (Lqx;I)Lcfu; itemFromTag
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lcfu; back
	c ()Lcfu; left
	d ()Lcfu; right
	e ()Lcfu; front
	a (Lqx;Lcfu;)V lambda$save$0
	<clinit> ()V <clinit>
dad net/minecraft/world/level/block/entity/DecoratedPotPatterns
	b BASE_NAME
	a BASE
	c BRICK_NAME
	d ANGLER_NAME
	e ARCHER_NAME
	f ARMS_UP_NAME
	g BLADE_NAME
	h BREWER_NAME
	i BURN_NAME
	j DANGER_NAME
	k EXPLORER_NAME
	l FRIEND_NAME
	m HEART_NAME
	n HEARTBREAK_NAME
	o HOWL_NAME
	p MINER_NAME
	q MOURNER_NAME
	r PLENTY_NAME
	s PRIZE_NAME
	t SHEAF_NAME
	u SHELTER_NAME
	v SKULL_NAME
	w SNORT_NAME
	x BRICK
	y ANGLER
	z ARCHER
	A ARMS_UP
	B BLADE
	C BREWER
	D BURN
	E DANGER
	F EXPLORER
	G FRIEND
	H HEART
	I HEARTBREAK
	J HOWL
	K MINER
	L MOURNER
	M PLENTY
	N PRIZE
	O SHEAF
	P SHELTER
	Q SKULL
	R SNORT
	S ITEM_TO_POT_TEXTURE
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; create
	a (Lacp;)Lacq; location
	a (Lcfu;)Lacp; getResourceKey
	a (Lhr;)Ljava/lang/String; bootstrap
	<clinit> ()V <clinit>
dae net/minecraft/world/level/block/entity/DispenserBlockEntity
	c CONTAINER_SIZE
	f items
	<init> (Lczp;Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;)V <init>
	b ()I getContainerSize
	a (Lapf;)I getRandomSlot
	a (Lcfz;)I addItem
	g ()Lsw; getDefaultName
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	f ()Lhn; getItems
	a (Lhn;)V setItems
	a (ILbyn;)Lcbf; createMenu
daf net/minecraft/world/level/block/entity/DropperBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	g ()Lsw; getDefaultName
dag net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	d flipT
	e flipA
	f open
	g oOpen
	h rot
	i oRot
	j tRot
	k RANDOM
	l name
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	a (Lcmm;Lgu;Ldcb;Ldag;)V bookAnimationTick
	Z ()Lsw; getName
	a (Lsw;)V setCustomName
	ab ()Lsw; getCustomName
	<clinit> ()V <clinit>
dah net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a chestLidController
	b openersCounter
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;Ldah;)V lidAnimateTick
	a_ (II)Z triggerEvent
	a (Lbyo;)V startOpen
	b (Lbyo;)V stopOpen
	c (Lbyo;)Z stillValid
	c ()V recheckOpen
	a (F)F getOpenNess
dah$1 net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	a this$0
	<init> (Ldah;)V <init>
	a (Lcmm;Lgu;Ldcb;)V onOpen
	b (Lcmm;Lgu;Ldcb;)V onClose
	a (Lcmm;Lgu;Ldcb;II)V openerCountChanged
	a (Lbyo;)Z isOwnContainer
dai net/minecraft/world/level/block/entity/FurnaceBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	g ()Lsw; getDefaultName
	a (ILbyn;)Lcbf; createMenu
daj net/minecraft/world/level/block/entity/HangingSignBlockEntity
	a MAX_TEXT_LINE_WIDTH
	b TEXT_LINE_HEIGHT
	<init> (Lgu;Ldcb;)V <init>
	c ()I getTextLineHeight
	d ()I getMaxTextLineWidth
dak net/minecraft/world/level/block/entity/Hopper
	c INSIDE
	x_ ABOVE
	y_ SUCK
	aq_ ()Lefb; getSuckShape
	G ()D getLevelX
	I ()D getLevelY
	J ()D getLevelZ
	<clinit> ()V <clinit>
dal net/minecraft/world/level/block/entity/HopperBlockEntity
	f MOVE_ITEM_SPEED
	g HOPPER_CONTAINER_SIZE
	j items
	k cooldownTime
	l tickedGameTime
	<init> (Lgu;Ldcb;)V <init>
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	b ()I getContainerSize
	a (II)Lcfz; removeItem
	a (ILcfz;)V setItem
	g ()Lsw; getDefaultName
	a (Lcmm;Lgu;Ldcb;Ldal;)V pushItemsTick
	a (Lcmm;Lgu;Ldcb;Ldal;Ljava/util/function/BooleanSupplier;)Z tryMoveItems
	i ()Z inventoryFull
	a (Lcmm;Lgu;Ldcb;Lbdq;)Z ejectItems
	a (Lbdq;Lha;)Ljava/util/stream/IntStream; getSlots
	b (Lbdq;Lha;)Z isFullContainer
	c (Lbdq;Lha;)Z isEmptyContainer
	a (Lcmm;Ldak;)Z suckInItems
	a (Ldak;Lbdq;ILha;)Z tryTakeInItemFromSlot
	a (Lbdq;Lbvh;)Z addItem
	a (Lbdq;Lbdq;Lcfz;Lha;)Lcfz; addItem
	a (Lbdq;Lcfz;ILha;)Z canPlaceItemInContainer
	a (Lbdq;Lbdq;Lcfz;ILha;)Z canTakeItemFromContainer
	b (Lbdq;Lbdq;Lcfz;ILha;)Lcfz; tryMoveInItem
	b (Lcmm;Lgu;Ldcb;)Lbdq; getAttachedContainer
	c (Lcmm;Ldak;)Lbdq; getSourceContainer
	b (Lcmm;Ldak;)Ljava/util/List; getItemsAtAndAbove
	a (Lcmm;Lgu;)Lbdq; getContainerAt
	a (Lcmm;DDD)Lbdq; getContainerAt
	a (Lcfz;Lcfz;)Z canMergeItems
	G ()D getLevelX
	I ()D getLevelY
	J ()D getLevelZ
	c (I)V setCooldown
	j ()Z isOnCooldown
	v ()Z isOnCustomCooldown
	f ()Lhn; getItems
	a (Lhn;)V setItems
	a (Lcmm;Lgu;Ldcb;Lbfj;Ldal;)V entityInside
	a (ILbyn;)Lcbf; createMenu
	a (Ldal;Lbfj;)Z lambda$entityInside$5
	a (Lcmm;Ldak;Leed;)Ljava/util/stream/Stream; lambda$getItemsAtAndAbove$4
	a (Ldak;Lbdq;Lha;I)Z lambda$suckInItems$3
	a (Lbdq;I)Z lambda$isEmptyContainer$2
	b (Lbdq;I)Z lambda$isFullContainer$1
	a (Lcmm;Ldal;)Z lambda$pushItemsTick$0
dam net/minecraft/world/level/block/entity/JigsawBlockEntity
	a TARGET
	b POOL
	c JOINT
	d NAME
	e FINAL_STATE
	f name
	g target
	h pool
	i joint
	j finalState
	<init> (Lgu;Ldcb;)V <init>
	c ()Lacq; getName
	d ()Lacq; getTarget
	f ()Lacp; getPool
	g ()Ljava/lang/String; getFinalState
	i ()Ldam$a; getJoint
	a (Lacq;)V setName
	b (Lacq;)V setTarget
	a (Lacp;)V setPool
	a (Ljava/lang/String;)V setFinalState
	a (Ldam$a;)V setJoint
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	j ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (Laif;IZ)V generate
	h ()Luo; getUpdatePacket
	v ()Ldam$a; lambda$load$0
dam$a net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	a ROLLABLE
	b ALIGNED
	c name
	d $VALUES
	values ()[Ldam$a; values
	valueOf (Ljava/lang/String;)Ldam$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a ()Lsw; getTranslatedName
	a (Ljava/lang/String;Ldam$a;)Z lambda$byName$0
	b ()[Ldam$a; $values
	<clinit> ()V <clinit>
dan net/minecraft/world/level/block/entity/JukeboxBlockEntity
	c SONG_END_PADDING
	d items
	e ticksSinceLastEvent
	f tickCount
	g recordStartedTick
	h isPlaying
	<init> (Lgu;Ldcb;)V <init>
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	f ()Z isRecordPlaying
	a (Lbfj;Z)V setHasRecordBlockState
	g ()V startPlaying
	v ()V stopPlaying
	b (Lcmm;Lgu;Ldcb;)V tick
	a (Lcgr;)Z shouldRecordStopPlaying
	w ()Z shouldSendJukeboxPlayingEvent
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	a (ILcfz;)V setItem
	ac_ ()I getMaxStackSize
	a (Lbyo;)Z stillValid
	b (ILcfz;)Z canPlaceItem
	a (Lbdq;ILcfz;)Z canTakeItem
	a (Lcmm;Lgu;)V spawnMusicParticles
	i ()V popOutRecord
	a (Lcmm;Lgu;Ldcb;Ldan;)V playRecordTick
	a (Lcfz;)V setRecordWithoutPlaying
dao net/minecraft/world/level/block/entity/LecternBlockEntity
	a DATA_PAGE
	b NUM_DATA
	c SLOT_BOOK
	d NUM_SLOTS
	e bookAccess
	f dataAccess
	g book
	h page
	i pageCount
	<init> (Lgu;Ldcb;)V <init>
	c ()Lcfz; getBook
	f ()Z hasBook
	a (Lcfz;)V setBook
	j ()V onBookItemRemove
	a (Lcfz;Lbyo;)V setBook
	a (I)V setPage
	g ()I getPage
	i ()I getRedstoneSignal
	b (Lcfz;Lbyo;)Lcfz; resolveBook
	a (Lbyo;)Lds; createCommandSourceStack
	t ()Z onlyOpCanSetNbt
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a ()V clearContent
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
	H_ ()Lsw; getDisplayName
dao$1 net/minecraft/world/level/block/entity/LecternBlockEntity$1
	c this$0
	<init> (Ldao;)V <init>
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	ac_ ()I getMaxStackSize
	e ()V setChanged
	a (Lbyo;)Z stillValid
	b (ILcfz;)Z canPlaceItem
	a ()V clearContent
dao$2 net/minecraft/world/level/block/entity/LecternBlockEntity$2
	a this$0
	<init> (Ldao;)V <init>
	a (I)I get
	a (II)V set
	a ()I getCount
dap net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
daq net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	d LOOT_TABLE_TAG
	e LOOT_TABLE_SEED_TAG
	h lootTable
	i lootTableSeed
	<init> (Lczp;Lgu;Ldcb;)V <init>
	a (Lcls;Lapf;Lgu;Lacq;)V setLootTable
	d (Lqr;)Z tryLoadLootTable
	e (Lqr;)Z trySaveLootTable
	e (Lbyo;)V unpackLootTable
	a (Lacq;J)V setLootTable
	ab_ ()Z isEmpty
	a (I)Lcfz; getItem
	a (II)Lcfz; removeItem
	b (I)Lcfz; removeItemNoUpdate
	a (ILcfz;)V setItem
	a (Lbyo;)Z stillValid
	a ()V clearContent
	f ()Lhn; getItems
	a (Lhn;)V setItems
	d (Lbyo;)Z canOpen
	createMenu (ILbyn;Lbyo;)Lcbf; createMenu
dar net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	a catalystListener
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;Ldar;)V serverTick
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	c ()Ldar$a; getListener
	d ()Ldgn; getListener
dar$a net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener
	a PULSE_TICKS
	b sculkSpreader
	c blockState
	d positionSource
	<init> (Ldcb;Ldgp;)V <init>
	a ()Ldgp; getListenerSource
	b ()I getListenerRadius
	c ()Ldgn$a; getDeliveryMode
	a (Laif;Ldgl;Ldgl$a;Leei;)Z handleGameEvent
	d ()Lcwi; getSculkSpreader
	a (Laif;Lgu;Ldcb;Lapf;)V bloom
	a (Lcmm;Lbfz;)V tryAwardItSpreadsAdvancement
	a (Laif;Leei;)V lambda$handleGameEvent$0
das net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	b LOGGER
	c vibrationData
	d vibrationListener
	e vibrationUser
	g lastVibrationFrequency
	<init> (Lczp;Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;)V <init>
	c ()Ldgu$d; createVibrationUser
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	gb ()Ldgu$a; getVibrationData
	gc ()Ldgu$d; getVibrationUser
	f ()I getLastVibrationFrequency
	a (I)V setLastVibrationFrequency
	g ()Ldgu$b; getListener
	d ()Ldgn; getListener
	a (Lqr;Lrk;)V lambda$saveAdditional$1
	a (Ldgu$a;)V lambda$load$0
	<clinit> ()V <clinit>
das$a net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser
	b LISTENER_RANGE
	c blockPos
	a positionSource
	d this$0
	<init> (Ldas;Lgu;)V <init>
	a ()I getListenerRadius
	b ()Ldgp; getPositionSource
	d ()Z canTriggerAvoidVibration
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Laif;Lgu;Ldgl;Lbfj;Lbfj;F)V onReceiveVibration
	e ()V onDataChanged
	f ()Z requiresAdjacentChunksToBeTicking
dat net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	b LOGGER
	c WARNING_SOUND_RADIUS
	d WARDEN_SPAWN_ATTEMPTS
	e WARDEN_SPAWN_RANGE_XZ
	g WARDEN_SPAWN_RANGE_Y
	h DARKNESS_RADIUS
	i SHRIEKING_TICKS
	j SOUND_BY_LEVEL
	k warningLevel
	l vibrationUser
	m vibrationData
	n vibrationListener
	<init> (Lgu;Ldcb;)V <init>
	gb ()Ldgu$a; getVibrationData
	gc ()Ldgu$d; getVibrationUser
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lbfj;)Laig; tryGetPlayer
	a (Laif;Laig;)V tryShriek
	b (Laif;Laig;)Z tryToWarn
	a (Laif;Lbfj;)V shriek
	b (Laif;)Z canRespond
	a (Laif;)V tryRespond
	b (Lcmm;)V playWardenReplySound
	c (Laif;)Z trySummonWarden
	c ()Ldgu$b; getListener
	d ()Ldgn; getListener
	a (I)V lambda$tryToWarn$3
	a (Lqr;Lrk;)V lambda$saveAdditional$2
	a (Ldgu$a;)V lambda$load$1
	a (Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dat$a net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser
	b LISTENER_RADIUS
	c positionSource
	a this$0
	<init> (Ldat;)V <init>
	a ()I getListenerRadius
	b ()Ldgp; getPositionSource
	c ()Lanl; getListenableEvents
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Laif;Lgu;Ldgl;Lbfj;Lbfj;F)V onReceiveVibration
	e ()V onDataChanged
	f ()Z requiresAdjacentChunksToBeTicking
dau net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	c COLUMNS
	f ROWS
	g CONTAINER_SIZE
	j EVENT_SET_OPEN_COUNT
	k OPENING_TICK_LENGTH
	l MAX_LID_HEIGHT
	m MAX_LID_ROTATION
	n ITEMS_TAG
	r SLOTS
	s itemStacks
	t openCount
	u animationStatus
	v progress
	w progressOld
	x color
	<init> (Lcen;Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;Ldau;)V tick
	b (Lcmm;Lgu;Ldcb;)V updateAnimation
	i ()Ldau$a; getAnimationStatus
	a (Ldcb;)Leed; getBoundingBox
	c (Lcmm;Lgu;Ldcb;)V moveCollidedEntities
	b ()I getContainerSize
	a_ (II)Z triggerEvent
	d (Lcmm;Lgu;Ldcb;)V doNeighborUpdates
	d_ (Lbyo;)V startOpen
	c (Lbyo;)V stopOpen
	g ()Lsw; getDefaultName
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	f (Lqr;)V loadFromTag
	f ()Lhn; getItems
	a (Lhn;)V setItems
	a (Lha;)[I getSlotsForFace
	a (ILcfz;Lha;)Z canPlaceItemThroughFace
	b (ILcfz;Lha;)Z canTakeItemThroughFace
	a (F)F getProgress
	j ()Lcen; getColor
	a (ILbyn;)Lcbf; createMenu
	v ()Z isClosed
	<clinit> ()V <clinit>
dau$1 net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$1
	a $SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
	<clinit> ()V <clinit>
dau$a net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	a CLOSED
	b OPENING
	c OPENED
	d CLOSING
	e $VALUES
	values ()[Ldau$a; values
	valueOf (Ljava/lang/String;)Ldau$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldau$a; $values
	<clinit> ()V <clinit>
dav net/minecraft/world/level/block/entity/SignBlockEntity
	a LOGGER
	b MAX_TEXT_LINE_WIDTH
	c TEXT_LINE_HEIGHT
	d playerWhoMayEdit
	e frontText
	f backText
	g isWaxed
	<init> (Lgu;Ldcb;)V <init>
	<init> (Lczp;Lgu;Ldcb;)V <init>
	f ()Ldaw; createDefaultSignText
	a (Lbyo;)Z isFacingFrontText
	b (Lbyo;)Ldaw; getTextFacingPlayer
	a (Z)Ldaw; getText
	g ()Ldaw; getFrontText
	i ()Ldaw; getBackText
	c ()I getTextLineHeight
	d ()I getMaxTextLineWidth
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	a (Ldaw;)Ldaw; loadLines
	a (Lsw;)Lsw; loadLine
	a (Lbyo;ZLjava/util/List;)V updateSignText
	a (Ljava/util/function/UnaryOperator;Z)Z updateText
	a (Lbyo;Ljava/util/List;Ldaw;)Ldaw; setMessages
	a (Ldaw;Z)Z setText
	b (Ldaw;)Z setBackText
	c (Ldaw;)Z setFrontText
	a (ZLbyo;)Z canExecuteClickCommands
	a (Lbyo;Lcmm;Lgu;Z)Z executeClickCommandsIfPresent
	a (Lbyo;Lcmm;Lgu;)Lds; createCommandSourceStack
	j ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	t ()Z onlyOpCanSetNbt
	a (Ljava/util/UUID;)V setAllowedPlayerEditor
	v ()Ljava/util/UUID; getPlayerWhoMayEdit
	x ()V markUpdated
	w ()Z isWaxed
	b (Z)Z setWaxed
	b (Ljava/util/UUID;)Z playerIsTooFarAwayToEdit
	a (Lcmm;Lgu;Ldcb;Ldav;)V tick
	a (Ldav;Lcmm;Ljava/util/UUID;)V clearInvalidPlayerWhoMayEdit
	h ()Luo; getUpdatePacket
	b (Lbyo;Ljava/util/List;Ldaw;)Ldaw; lambda$updateSignText$4
	d (Ldaw;)V lambda$load$3
	e (Ldaw;)V lambda$load$2
	a (Lqr;Lrk;)V lambda$saveAdditional$1
	b (Lqr;Lrk;)V lambda$saveAdditional$0
	<clinit> ()V <clinit>
daw net/minecraft/world/level/block/entity/SignText
	c LINES_CODEC
	a DIRECT_CODEC
	b LINES
	d messages
	e filteredMessages
	f color
	g hasGlowingText
	h renderMessages
	i renderMessagedFiltered
	<init> ()V <init>
	<init> ([Lsw;[Lsw;Lcen;Z)V <init>
	c ()[Lsw; emptyMessages
	a ([Lsw;Ljava/util/Optional;Lcen;Z)Ldaw; load
	a ([Lsw;[Lsw;)V populateFilteredMessagesWithRawMessages
	a ()Z hasGlowingText
	a (Z)Ldaw; setHasGlowingText
	b ()Lcen; getColor
	a (Lcen;)Ldaw; setColor
	a (IZ)Lsw; getMessage
	a (ILsw;)Ldaw; setMessage
	a (ILsw;Lsw;)Ldaw; setMessage
	a (Lbyo;)Z hasMessage
	b (Z)[Lsw; getMessages
	a (ZLjava/util/function/Function;)[Laom; getRenderMessages
	d ()Ljava/util/Optional; getOnlyFilteredMessages
	b (Lbyo;)Z hasAnyClickCommands
	a (Lsw;)Z lambda$hasMessage$7
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldaw;)Ljava/lang/Boolean; lambda$static$5
	b (Ldaw;)Lcen; lambda$static$4
	c (Ldaw;)[Lsw; lambda$static$3
	a ([Lsw;)Ljava/util/List; lambda$static$2
	a (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$1
	b (Ljava/util/List;)[Lsw; lambda$static$0
	<clinit> ()V <clinit>
dax net/minecraft/world/level/block/entity/SkullBlockEntity
	a TAG_SKULL_OWNER
	b TAG_NOTE_BLOCK_SOUND
	c profileCache
	d sessionService
	e mainThreadExecutor
	f owner
	g noteBlockSound
	h animationTickCount
	i isAnimating
	<init> (Lgu;Ldcb;)V <init>
	a (Ladh;Ljava/util/concurrent/Executor;)V setup
	c ()V clear
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	a (Lcmm;Lgu;Ldcb;Ldax;)V animation
	a (F)F getAnimation
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	f ()Lacq; getNoteBlockSound
	g ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (Lcom/mojang/authlib/GameProfile;)V setOwner
	i ()V updateOwnerProfile
	a (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V updateGameprofile
	h ()Luo; getUpdatePacket
	a (Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;Ljava/util/Optional;)V lambda$updateGameprofile$6
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V lambda$updateGameprofile$5
	a (Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V lambda$updateGameprofile$4
	b (Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V lambda$updateGameprofile$3
	c (Ljava/util/function/Consumer;Lcom/mojang/authlib/GameProfile;)V lambda$updateGameprofile$2
	b (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V lambda$updateGameprofile$1
	b (Lcom/mojang/authlib/GameProfile;)V lambda$updateOwnerProfile$0
day net/minecraft/world/level/block/entity/SmokerBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	g ()Lsw; getDefaultName
	a (Lcfz;)I getBurnDuration
	a (ILbyn;)Lcbf; createMenu
daz net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	<init> (Lgu;Ldcb;)V <init>
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lcmm;Lgu;Ldcb;Ldaz;)V clientTick
	b (Lcmm;Lgu;Ldcb;Ldaz;)V serverTick
	c ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a_ (II)Z triggerEvent
	t ()Z onlyOpCanSetNbt
	a (Lbfn;Lapf;)V setEntityId
	d ()Lclo; getSpawner
	h ()Luo; getUpdatePacket
daz$1 net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	a this$0
	<init> (Ldaz;)V <init>
	a (Lcmm;Lgu;I)V broadcastEvent
	a (Lcmm;Lgu;Lcnd;)V setNextSpawnData
dba net/minecraft/world/level/block/entity/StructureBlockEntity
	d SCAN_CORNER_BLOCKS_RANGE
	a MAX_OFFSET_PER_AXIS
	b MAX_SIZE_PER_AXIS
	c AUTHOR_TAG
	e structureName
	f author
	g metaData
	h structurePos
	i structureSize
	j mirror
	k rotation
	l mode
	m ignoreEntities
	n powered
	r showAir
	s showBoundingBox
	t integrity
	u seed
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	J ()V updateBlockState
	c ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	a (Lbyo;)Z usedBy
	d ()Ljava/lang/String; getStructureName
	f ()Ljava/lang/String; getStructurePath
	g ()Z hasStructureName
	a (Ljava/lang/String;)V setStructureName
	a (Lacq;)V setStructureName
	a (Lbfz;)V createdBy
	i ()Lgu; getStructurePos
	a (Lgu;)V setStructurePos
	j ()Lhz; getStructureSize
	a (Lhz;)V setStructureSize
	v ()Lcui; getMirror
	a (Lcui;)V setMirror
	w ()Lcvz; getRotation
	a (Lcvz;)V setRotation
	x ()Ljava/lang/String; getMetaData
	b (Ljava/lang/String;)V setMetaData
	y ()Lddl; getMode
	a (Lddl;)V setMode
	z ()Z isIgnoreEntities
	a (Z)V setIgnoreEntities
	A ()F getIntegrity
	a (F)V setIntegrity
	B ()J getSeed
	a (J)V setSeed
	C ()Z detectSize
	a (Lgu;Lgu;)Ljava/util/stream/Stream; getRelatedCorners
	a (Lgu;Ljava/util/stream/Stream;)Ljava/util/Optional; calculateEnclosingBoundingBox
	D ()Z saveStructure
	b (Z)Z saveStructure
	a (Laif;)Z loadStructure
	b (J)Lapf; createRandom
	a (Laif;Z)Z loadStructure
	a (Laif;ZLdvt;)Z loadStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	c (Z)V setPowered
	H ()Z getShowAir
	d (Z)V setShowAir
	I ()Z getShowBoundingBox
	e (Z)V setShowBoundingBox
	h ()Luo; getUpdatePacket
	a (Laif;Lgu;)V lambda$loadStructure$5
	a (Ldba;)Z lambda$getRelatedCorners$4
	a (Lczn;)Ldba; lambda$getRelatedCorners$3
	b (Lczn;)Z lambda$getRelatedCorners$2
	b (Lgu;)Z lambda$getRelatedCorners$1
	a (Lgu;Ldrs;)Z lambda$detectSize$0
dba$a net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	a UPDATE_DATA
	b SAVE_AREA
	c LOAD_AREA
	d SCAN_AREA
	e $VALUES
	values ()[Ldba$a; values
	valueOf (Ljava/lang/String;)Ldba$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldba$a; $values
	<clinit> ()V <clinit>
dbb net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	b SPAWN_TIME
	c COOLDOWN_TIME
	d ATTENTION_INTERVAL
	e EVENT_COOLDOWN
	f GATEWAY_HEIGHT_ABOVE_SURFACE
	g age
	h teleportCooldown
	i exitPortal
	j exactTeleport
	<init> (Lgu;Ldcb;)V <init>
	b (Lqr;)V saveAdditional
	a (Lqr;)V load
	a (Lcmm;Lgu;Ldcb;Ldbb;)V beamAnimationTick
	b (Lcmm;Lgu;Ldcb;Ldbb;)V teleportTick
	a (Lbfj;)Z canEntityTeleport
	c ()Z isSpawning
	d ()Z isCoolingDown
	a (F)F getSpawnPercent
	b (F)F getCooldownPercent
	f ()Luz; getUpdatePacket
	ao_ ()Lqr; getUpdateTag
	c (Lcmm;Lgu;Ldcb;Ldbb;)V triggerCooldown
	a_ (II)Z triggerEvent
	a (Lcmm;Lgu;Ldcb;Lbfj;Ldbb;)V teleportEntity
	a (Lcmm;Lgu;)Lgu; findExitPosition
	a (Laif;Lgu;)Lgu; findOrCreateValidTeleportPos
	b (Laif;Lgu;)Leei; findExitPortalXZPosTentative
	a (Laif;Leei;)Z isChunkEmpty
	a (Lcls;Lgu;IZ)Lgu; findTallestBlock
	a (Lcmm;Leei;)Ldei; getChunk
	a (Ldei;)Lgu; findValidSpawnInChunk
	a (Laif;Lgu;Ldmr;)V spawnGatewayPortal
	a (Lha;)Z shouldRenderFace
	g ()I getParticleAmount
	a (Lgu;Z)V setExitPosition
	h ()Luo; getUpdatePacket
	a (Laif;Lgu;Lhe$c;)V lambda$findOrCreateValidTeleportPos$1
	a (Lhr;)Ljava/util/Optional; lambda$findOrCreateValidTeleportPos$0
	<clinit> ()V <clinit>
dbc net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	<init> (Lczp;Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;)V <init>
	a (Lha;)Z shouldRenderFace
dbd net/minecraft/world/level/block/entity/TickingBlockEntity
	a ()V tick
	b ()Z isRemoved
	c ()Lgu; getPos
	d ()Ljava/lang/String; getType
dbe net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	<init> (Lgu;Ldcb;)V <init>
	a (Lcmm;Lgu;Ldcb;II)V signalOpenCount
dbf net/minecraft/world/level/block/entity/package-info
dbg net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	<init> ()V <init>
	a (Laif;Lddy;Lgu;Ldcb;Lapf;)Z growTree
	a (Lapf;)Lacp; getConfiguredMegaFeature
	a (Laif;Lddy;Lgu;Ldcb;Lapf;II)Z placeMega
	a (Ldcb;Lcls;Lgu;II)Z isTwoByTwoSapling
dbh net/minecraft/world/level/block/grower/AbstractTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
	a (Laif;Lddy;Lgu;Ldcb;Lapf;)Z growTree
	a (Lcmn;Lgu;)Z hasFlowers
dbi net/minecraft/world/level/block/grower/AcaciaTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbj net/minecraft/world/level/block/grower/AzaleaTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbk net/minecraft/world/level/block/grower/BirchTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbl net/minecraft/world/level/block/grower/CherryTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbm net/minecraft/world/level/block/grower/DarkOakTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
	a (Lapf;)Lacp; getConfiguredMegaFeature
dbn net/minecraft/world/level/block/grower/JungleTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
	a (Lapf;)Lacp; getConfiguredMegaFeature
dbo net/minecraft/world/level/block/grower/MangroveTreeGrower
	a tallProbability
	<init> (F)V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbp net/minecraft/world/level/block/grower/OakTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
dbq net/minecraft/world/level/block/grower/SpruceTreeGrower
	<init> ()V <init>
	a (Lapf;Z)Lacp; getConfiguredFeature
	a (Lapf;)Lacp; getConfiguredMegaFeature
dbr net/minecraft/world/level/block/grower/package-info
dbs net/minecraft/world/level/block/package-info
dbt net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	<init> (Ldca$d;)V <init>
	a (Lgu;Ldcb;)Lczn; newBlockEntity
	a (Lgu;Ldcb;Ldcb;Lha;ZZ)Lczn; newMovingBlockEntity
	a (Lcmm;Ldcb;Lczp;)Lczo; getTicker
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Lcmn;Lgu;Ldcb;)V destroy
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a (Lcls;Lgu;)Ldbx; getBlockEntity
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
dbu net/minecraft/world/level/block/piston/PistonBaseBlock
	b EXTENDED
	c TRIGGER_EXTEND
	d TRIGGER_CONTRACT
	e TRIGGER_DROP
	f PLATFORM_THICKNESS
	g EAST_AABB
	h WEST_AABB
	i SOUTH_AABB
	j NORTH_AABB
	k UP_AABB
	l DOWN_AABB
	m isSticky
	<init> (ZLdca$d;)V <init>
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Lcmm;Lgu;Ldcb;Lbfz;Lcfz;)V setPlacedBy
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Lcih;)Ldcb; getStateForPlacement
	a (Lcmm;Lgu;Ldcb;)V checkIfExtend
	a (Lcnc;Lgu;Lha;)Z getNeighborSignal
	a (Ldcb;Lcmm;Lgu;II)Z triggerEvent
	a (Ldcb;Lcmm;Lgu;Lha;ZLha;)Z isPushable
	a (Lcmm;Lgu;Lha;Z)Z moveBlocks
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	<clinit> ()V <clinit>
dbu$1 net/minecraft/world/level/block/piston/PistonBaseBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	b $SwitchMap$net$minecraft$world$level$material$PushReaction
	<clinit> ()V <clinit>
dbv net/minecraft/world/level/block/piston/PistonHeadBlock
	b TYPE
	c SHORT
	d PLATFORM
	e EAST_AABB
	f WEST_AABB
	g SOUTH_AABB
	h NORTH_AABB
	i UP_AABB
	j DOWN_AABB
	k AABB_OFFSET
	l EDGE_MIN
	m EDGE_MAX
	n UP_ARM_AABB
	D DOWN_ARM_AABB
	E SOUTH_ARM_AABB
	F NORTH_ARM_AABB
	G EAST_ARM_AABB
	H WEST_ARM_AABB
	I SHORT_UP_ARM_AABB
	J SHORT_DOWN_ARM_AABB
	K SHORT_SOUTH_ARM_AABB
	L SHORT_NORTH_ARM_AABB
	M SHORT_EAST_ARM_AABB
	N SHORT_WEST_ARM_AABB
	O SHAPES_SHORT
	P SHAPES_LONG
	a (Z)[Lefb; makeShapes
	a (Lha;Z)Lefb; calculateShape
	<init> (Ldca$d;)V <init>
	g_ (Ldcb;)Z useShapeForLightOcclusion
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	a (Ldcb;Ldcb;)Z isFittingBase
	a (Lcmm;Lgu;Ldcb;Lbyo;)V playerWillDestroy
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcls;Lgu;Ldcb;)Lcfz; getCloneItemStack
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcc$a;)V createBlockStateDefinition
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	b (I)[Lefb; lambda$makeShapes$1
	a (ZLha;)Lefb; lambda$makeShapes$0
	<clinit> ()V <clinit>
dbv$1 net/minecraft/world/level/block/piston/PistonHeadBlock$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dbw net/minecraft/world/level/block/piston/PistonMath
	<init> ()V <init>
	a (Leed;Lha;D)Leed; getMovementArea
dbw$1 net/minecraft/world/level/block/piston/PistonMath$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dbx net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	b TICKS_TO_EXTEND
	c PUSH_OFFSET
	a TICK_MOVEMENT
	d movedState
	e direction
	f extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	l deathTicks
	<init> (Lgu;Ldcb;)V <init>
	<init> (Lgu;Ldcb;Ldcb;Lha;ZZ)V <init>
	ao_ ()Lqr; getUpdateTag
	c ()Z isExtending
	d ()Lha; getDirection
	f ()Z isSourcePiston
	a (F)F getProgress
	b (F)F getXOff
	c (F)F getYOff
	d (F)F getZOff
	e (F)F getExtendedProgress
	w ()Ldcb; getCollisionRelatedBlockState
	a (Lcmm;Lgu;FLdbx;)V moveCollidedEntities
	a (Lha;Lbfj;DLha;)V moveEntityByPiston
	b (Lcmm;Lgu;FLdbx;)V moveStuckEntities
	a (Leed;Lbfj;Lgu;)Z matchesStickyCritera
	x ()Z isStickyForEntities
	g ()Lha; getMovementDirection
	a (Leed;Lha;Leed;)D getMovement
	a (Lgu;Leed;Ldbx;)Leed; moveByPositionAndProgress
	a (Lgu;Lbfj;Lha;D)V fixEntityWithinPistonBase
	i ()Ldcb; getMovedState
	j ()V finalTick
	a (Lcmm;Lgu;Ldcb;Ldbx;)V tick
	a (Lqr;)V load
	b (Lqr;)V saveAdditional
	a (Lcls;Lgu;)Lefb; getCollisionShape
	v ()J getLastTicked
	a (Lcmm;)V setLevel
	a (Leed;Lgu;Lbfj;)Z lambda$moveStuckEntities$1
	y ()Lha; lambda$static$0
	<clinit> ()V <clinit>
dbx$1 net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	b $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dby net/minecraft/world/level/block/piston/PistonStructureResolver
	a MAX_PUSH_DEPTH
	b level
	c pistonPos
	d extending
	e startPos
	f pushDirection
	g toPush
	h toDestroy
	i pistonDirection
	<init> (Lcmm;Lgu;Lha;Z)V <init>
	a ()Z resolve
	a (Ldcb;)Z isSticky
	a (Ldcb;Ldcb;)Z canStickToEachOther
	a (Lgu;Lha;)Z addBlockLine
	a (II)V reorderListAtCollision
	a (Lgu;)Z addBranchingBlocks
	b ()Lha; getPushDirection
	c ()Ljava/util/List; getToPush
	d ()Ljava/util/List; getToDestroy
dbz net/minecraft/world/level/block/piston/package-info
dca net/minecraft/world/level/block/state/BlockBehaviour
	aD UPDATE_SHAPE_ORDER
	aE hasCollision
	aF explosionResistance
	aG isRandomlyTicking
	aH soundType
	aI friction
	aJ speedFactor
	aK jumpFactor
	aL dynamicShape
	aM requiredFeatures
	aN properties
	aO drops
	<init> (Ldca$d;)V <init>
	a (Ldcb;Lcmn;Lgu;II)V updateIndirectNeighbourShapes
	a (Ldcb;Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Ldcb;Ldcb;Lha;)Z skipRendering
	a (Ldcb;Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	b (Ldcb;Lcmm;Lgu;Ldcb;Z)V onPlace
	a (Ldcb;Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Ldcb;Lcmm;Lgu;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Ldcb;Lcmm;Lgu;II)Z triggerEvent
	b_ (Ldcb;)Lcvs; getRenderShape
	g_ (Ldcb;)Z useShapeForLightOcclusion
	f_ (Ldcb;)Z isSignalSource
	c_ (Ldcb;)Ldxe; getFluidState
	d_ (Ldcb;)Z hasAnalogOutputSignal
	al_ ()F getMaxHorizontalOffset
	an_ ()F getMaxVerticalOffset
	m ()Lcaw; requiredFeatures
	a (Ldcb;Lcvz;)Ldcb; rotate
	a (Ldcb;Lcui;)Ldcb; mirror
	a (Ldcb;Lcih;)Z canBeReplaced
	a (Ldcb;Ldxd;)Z canBeReplaced
	a (Ldcb;Ldzq$a;)Ljava/util/List; getDrops
	a (Ldcb;Lgu;)J getSeed
	f (Ldcb;Lcls;Lgu;)Lefb; getOcclusionShape
	b_ (Ldcb;Lcls;Lgu;)Lefb; getBlockSupportShape
	a (Ldcb;Lcls;Lgu;)Lefb; getInteractionShape
	g (Ldcb;Lcls;Lgu;)I getLightBlock
	b (Ldcb;Lcmm;Lgu;)Lbea; getMenuProvider
	a (Ldcb;Lcmp;Lgu;)Z canSurvive
	b (Ldcb;Lcls;Lgu;)F getShadeBrightness
	a (Ldcb;Lcmm;Lgu;)I getAnalogOutputSignal
	a (Ldcb;Lcls;Lgu;Leen;)Lefb; getShape
	c (Ldcb;Lcls;Lgu;Leen;)Lefb; getCollisionShape
	a_ (Ldcb;Lcls;Lgu;)Z isCollisionShapeFullBlock
	h (Ldcb;Lcls;Lgu;)Z isOcclusionShapeFullBlock
	b (Ldcb;Lcls;Lgu;Leen;)Lefb; getVisualShape
	b (Ldcb;Laif;Lgu;Lapf;)V randomTick
	a (Ldcb;Laif;Lgu;Lapf;)V tick
	a (Ldcb;Lbyo;Lcls;Lgu;)F getDestroyProgress
	a (Ldcb;Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	a (Ldcb;Lcmm;Lgu;Lbyo;)V attack
	a (Ldcb;Lcls;Lgu;Lha;)I getSignal
	a (Ldcb;Lcmm;Lgu;Lbfj;)V entityInside
	b (Ldcb;Lcls;Lgu;Lha;)I getDirectSignal
	r ()Lacq; getLootTable
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	k ()Lcfu; asItem
	p ()Lcpn; asBlock
	s ()Ldxi; defaultMapColor
	t ()F defaultDestroyTime
	<clinit> ()V <clinit>
dca$1 net/minecraft/world/level/block/state/BlockBehaviour$1
	a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	b $SwitchMap$net$minecraft$world$level$block$state$BlockBehaviour$OffsetType
	<clinit> ()V <clinit>
dca$a net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	b lightEmission
	g useShapeForLightOcclusion
	h isAir
	i ignitedByLava
	j liquid
	k legacySolid
	l pushReaction
	m mapColor
	n destroySpeed
	o requiresCorrectToolForDrops
	p canOcclude
	q isRedstoneConductor
	r isSuffocating
	s isViewBlocking
	t hasPostProcess
	u emissiveRendering
	v offsetFunction
	w spawnParticlesOnBreak
	x instrument
	y replaceable
	a cache
	z fluidState
	A isRandomlyTicking
	<init> (Lcpn;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	D ()Z calculateSolid
	a ()V initCache
	b ()Lcpn; getBlock
	c ()Lhe; getBlockHolder
	d ()Z blocksMotion
	e ()Z isSolid
	a (Lcls;Lgu;Lbfn;)Z isValidSpawn
	a (Lcls;Lgu;)Z propagatesSkylightDown
	b (Lcls;Lgu;)I getLightBlock
	a (Lcls;Lgu;Lha;)Lefb; getFaceOcclusionShape
	c (Lcls;Lgu;)Lefb; getOcclusionShape
	f ()Z hasLargeCollisionShape
	g ()Z useShapeForLightOcclusion
	h ()I getLightEmission
	i ()Z isAir
	j ()Z ignitedByLava
	k ()Z liquid
	d (Lcls;Lgu;)Ldxi; getMapColor
	a (Lcvz;)Ldcb; rotate
	a (Lcui;)Ldcb; mirror
	l ()Lcvs; getRenderShape
	e (Lcls;Lgu;)Z emissiveRendering
	f (Lcls;Lgu;)F getShadeBrightness
	g (Lcls;Lgu;)Z isRedstoneConductor
	m ()Z isSignalSource
	b (Lcls;Lgu;Lha;)I getSignal
	n ()Z hasAnalogOutputSignal
	a (Lcmm;Lgu;)I getAnalogOutputSignal
	h (Lcls;Lgu;)F getDestroySpeed
	a (Lbyo;Lcls;Lgu;)F getDestroyProgress
	c (Lcls;Lgu;Lha;)I getDirectSignal
	o ()Ldxj; getPistonPushReaction
	i (Lcls;Lgu;)Z isSolidRender
	p ()Z canOcclude
	a (Ldcb;Lha;)Z skipRendering
	j (Lcls;Lgu;)Lefb; getShape
	a (Lcls;Lgu;Leen;)Lefb; getShape
	k (Lcls;Lgu;)Lefb; getCollisionShape
	b (Lcls;Lgu;Leen;)Lefb; getCollisionShape
	l (Lcls;Lgu;)Lefb; getBlockSupportShape
	c (Lcls;Lgu;Leen;)Lefb; getVisualShape
	m (Lcls;Lgu;)Lefb; getInteractionShape
	a (Lcls;Lgu;Lbfj;)Z entityCanStandOn
	a (Lcls;Lgu;Lbfj;Lha;)Z entityCanStandOnFace
	n (Lcls;Lgu;)Leei; getOffset
	q ()Z hasOffsetFunction
	a (Lcmm;Lgu;II)Z triggerEvent
	a (Lcmm;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lcmn;Lgu;I)V updateNeighbourShapes
	a (Lcmn;Lgu;II)V updateNeighbourShapes
	b (Lcmn;Lgu;I)V updateIndirectNeighbourShapes
	b (Lcmn;Lgu;II)V updateIndirectNeighbourShapes
	a (Lcmm;Lgu;Ldcb;Z)V onPlace
	b (Lcmm;Lgu;Ldcb;Z)V onRemove
	a (Laif;Lgu;Lapf;)V tick
	b (Laif;Lgu;Lapf;)V randomTick
	a (Lcmm;Lgu;Lbfj;)V entityInside
	a (Laif;Lgu;Lcfz;Z)V spawnAfterBreak
	a (Ldzq$a;)Ljava/util/List; getDrops
	a (Lcmm;Lbyo;Lbdw;Leee;)Lbdx; use
	a (Lcmm;Lgu;Lbyo;)V attack
	o (Lcls;Lgu;)Z isSuffocating
	p (Lcls;Lgu;)Z isViewBlocking
	a (Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcls;Lgu;Ldxu;)Z isPathfindable
	a (Lcih;)Z canBeReplaced
	a (Ldxd;)Z canBeReplaced
	r ()Z canBeReplaced
	a (Lcmp;Lgu;)Z canSurvive
	q (Lcls;Lgu;)Z hasPostProcess
	b (Lcmm;Lgu;)Lbea; getMenuProvider
	a (Lanl;)Z is
	a (Lanl;Ljava/util/function/Predicate;)Z is
	a (Lhi;)Z is
	s ()Ljava/util/stream/Stream; getTags
	t ()Z hasBlockEntity
	a (Lcmm;Lczp;)Lczo; getTicker
	a (Lcpn;)Z is
	u ()Ldxe; getFluidState
	v ()Z isRandomlyTicking
	a (Lgu;)J getSeed
	w ()Lcxa; getSoundType
	a (Lcmm;Ldcb;Leee;Lbzg;)V onProjectileHit
	d (Lcls;Lgu;Lha;)Z isFaceSturdy
	a (Lcls;Lgu;Lha;Lcxp;)Z isFaceSturdy
	r (Lcls;Lgu;)Z isCollisionShapeFullBlock
	x ()Ldcb; asState
	y ()Z requiresCorrectToolForDrops
	z ()Z shouldSpawnParticlesOnBreak
	A ()Lddc; instrument
	a (Lcls;Lgu;Ldca$b;)Leei; lambda$getOffset$0
dca$a$a net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	e DIRECTIONS
	f SUPPORT_TYPE_COUNT
	a solidRender
	g propagatesSkylightDown
	h lightBlock
	i occlusionShapes
	b collisionShape
	c largeCollisionShape
	j faceSturdy
	d isCollisionShapeFullBlock
	<init> (Ldcb;)V <init>
	a (Lha;Lcxp;)Z isFaceSturdy
	b (Lha;Lcxp;)I getFaceSupportIndex
	a (Lha$a;)Z lambda$new$0
	<clinit> ()V <clinit>
dca$b net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
	evaluate (Ldcb;Lcls;Lgu;)Leei; evaluate
dca$c net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	a NONE
	b XZ
	c XYZ
	d $VALUES
	values ()[Ldca$c; values
	valueOf (Ljava/lang/String;)Ldca$c; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldca$c; $values
	<clinit> ()V <clinit>
dca$d net/minecraft/world/level/block/state/BlockBehaviour$Properties
	a mapColor
	b hasCollision
	c soundType
	d lightEmission
	e explosionResistance
	f destroyTime
	g requiresCorrectToolForDrops
	h isRandomlyTicking
	i friction
	j speedFactor
	k jumpFactor
	l drops
	m canOcclude
	n isAir
	o ignitedByLava
	p liquid
	q forceSolidOff
	r forceSolidOn
	s pushReaction
	t spawnParticlesOnBreak
	u instrument
	v replaceable
	w isValidSpawn
	x isRedstoneConductor
	y isSuffocating
	z isViewBlocking
	A hasPostProcess
	B emissiveRendering
	C dynamicShape
	D requiredFeatures
	E offsetFunction
	<init> ()V <init>
	a ()Ldca$d; of
	a (Ldca;)Ldca$d; copy
	a (Lcen;)Ldca$d; mapColor
	a (Ldxi;)Ldca$d; mapColor
	a (Ljava/util/function/Function;)Ldca$d; mapColor
	b ()Ldca$d; noCollission
	c ()Ldca$d; noOcclusion
	a (F)Ldca$d; friction
	b (F)Ldca$d; speedFactor
	c (F)Ldca$d; jumpFactor
	a (Lcxa;)Ldca$d; sound
	a (Ljava/util/function/ToIntFunction;)Ldca$d; lightLevel
	a (FF)Ldca$d; strength
	d ()Ldca$d; instabreak
	d (F)Ldca$d; strength
	e ()Ldca$d; randomTicks
	f ()Ldca$d; dynamicShape
	g ()Ldca$d; noLootTable
	a (Lcpn;)Ldca$d; dropsLike
	h ()Ldca$d; ignitedByLava
	i ()Ldca$d; liquid
	j ()Ldca$d; forceSolidOn
	k ()Ldca$d; forceSolidOff
	a (Ldxj;)Ldca$d; pushReaction
	l ()Ldca$d; air
	a (Ldca$e;)Ldca$d; isValidSpawn
	a (Ldca$f;)Ldca$d; isRedstoneConductor
	b (Ldca$f;)Ldca$d; isSuffocating
	c (Ldca$f;)Ldca$d; isViewBlocking
	d (Ldca$f;)Ldca$d; hasPostProcess
	e (Ldca$f;)Ldca$d; emissiveRendering
	m ()Ldca$d; requiresCorrectToolForDrops
	e (F)Ldca$d; destroyTime
	f (F)Ldca$d; explosionResistance
	a (Ldca$c;)Ldca$d; offsetType
	n ()Ldca$d; noParticlesOnBreak
	a ([Lcau;)Ldca$d; requiredFeatures
	a (Lddc;)Ldca$d; instrument
	o ()Ldca$d; replaceable
	a (Ldcb;Lcls;Lgu;)Leei; lambda$offsetType$10
	b (Ldcb;Lcls;Lgu;)Leei; lambda$offsetType$9
	a (Ldxi;Ldcb;)Ldxi; lambda$mapColor$8
	a (Lcen;Ldcb;)Ldxi; lambda$mapColor$7
	c (Ldcb;Lcls;Lgu;)Z lambda$new$6
	d (Ldcb;Lcls;Lgu;)Z lambda$new$5
	e (Ldcb;Lcls;Lgu;)Z lambda$new$4
	f (Ldcb;Lcls;Lgu;)Z lambda$new$3
	a (Ldcb;Lcls;Lgu;Lbfn;)Z lambda$new$2
	a (Ldcb;)I lambda$new$1
	b (Ldcb;)Ldxi; lambda$new$0
dca$e net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	test (Ldcb;Lcls;Lgu;Ljava/lang/Object;)Z test
dca$f net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	test (Ldcb;Lcls;Lgu;)Z test
dcb net/minecraft/world/level/block/state/BlockState
	b CODEC
	<init> (Lcpn;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	x ()Ldcb; asState
	<clinit> ()V <clinit>
dcc net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	<init> (Ljava/util/function/Function;Ljava/lang/Object;Ldcc$b;Ljava/util/Map;)V <init>
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Ldde;)Lcom/mojang/serialization/MapCodec; appendPropertyCodec
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	b ()Ldcd; any
	c ()Ljava/lang/Object; getOwner
	d ()Ljava/util/Collection; getProperties
	toString ()Ljava/lang/String; toString
	a (Ljava/lang/String;)Ldde; getProperty
	a (Ldde;Ldcd;)Lcom/mojang/datafixers/util/Pair; lambda$appendPropertyCodec$7
	a (Ldde;Lcom/mojang/datafixers/util/Pair;)Ldcd; lambda$appendPropertyCodec$6
	a (Ldde;Ljava/util/function/Supplier;)Ldde$a; lambda$appendPropertyCodec$5
	b (Ljava/lang/String;)V lambda$appendPropertyCodec$4
	a (Ldcc$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V lambda$new$3
	a (Ldde;Ljava/util/List;)Ljava/util/stream/Stream; lambda$new$2
	a (Ljava/util/List;Ldde;Ljava/lang/Comparable;)Ljava/util/List; lambda$new$1
	a (Ljava/util/function/Function;Ljava/lang/Object;)Ldcd; lambda$new$0
	<clinit> ()V <clinit>
dcc$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	<init> (Ljava/lang/Object;)V <init>
	a ([Ldde;)Ldcc$a; add
	a (Ldde;)V validateProperty
	a (Ljava/util/function/Function;Ldcc$b;)Ldcc; create
dcc$b net/minecraft/world/level/block/state/StateDefinition$Factory
	create (Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object; create
dcd net/minecraft/world/level/block/state/StateHolder
	c NAME_TAG
	d PROPERTIES_TAG
	a PROPERTY_ENTRY_TO_STRING_FUNCTION
	e owner
	b values
	g neighbours
	f propertiesCodec
	<init> (Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	a (Ldde;)Ljava/lang/Object; cycle
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	toString ()Ljava/lang/String; toString
	B ()Ljava/util/Collection; getProperties
	b (Ldde;)Z hasProperty
	c (Ldde;)Ljava/lang/Comparable; getValue
	d (Ldde;)Ljava/util/Optional; getOptionalValue
	a (Ldde;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	b (Ldde;Ljava/lang/Comparable;)Ljava/lang/Object; trySetValue
	a (Ljava/util/Map;)V populateNeighbours
	c (Ldde;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
	C ()Lcom/google/common/collect/ImmutableMap; getValues
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; lambda$codec$2
	a (Ldcd;Ljava/util/Optional;)Ldcd; lambda$codec$1
	a (Ldcd;)Ljava/lang/Object; lambda$codec$0
	<clinit> ()V <clinit>
dcd$1 net/minecraft/world/level/block/state/StateHolder$1
	<init> ()V <init>
	a (Ljava/util/Map$Entry;)Ljava/lang/String; apply
	a (Ldde;Ljava/lang/Comparable;)Ljava/lang/String; getName
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
dce net/minecraft/world/level/block/state/package-info
dcf net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	<init> (Lcmp;Lgu;Z)V <init>
	a ()Ldcb; getState
	b ()Lczn; getEntity
	c ()Lcmp; getLevel
	d ()Lgu; getPos
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	a (Ljava/util/function/Predicate;Ldcf;)Z lambda$hasState$0
dcg net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	<init> ([[[Ljava/util/function/Predicate;)V <init>
	a ()I getDepth
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
	a (Lcmp;Lgu;Lha;Lha;)Ldcg$b; matches
	a (Lgu;Lha;Lha;Lcom/google/common/cache/LoadingCache;)Ldcg$b; matches
	a (Lcmp;Lgu;)Ldcg$b; find
	a (Lcmp;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	a (Lgu;Lha;Lha;III)Lgu; translateAndRotate
dcg$a net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	<init> (Lcmp;Z)V <init>
	a (Lgu;)Ldcf; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
dcg$b net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	<init> (Lgu;Lha;Lha;Lcom/google/common/cache/LoadingCache;III)V <init>
	a ()Lgu; getFrontTopLeft
	b ()Lha; getForwards
	c ()Lha; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
	a (III)Ldcf; getBlock
	toString ()Ljava/lang/String; toString
dch net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	<init> ()V <init>
	a ([Ljava/lang/String;)Ldch; aisle
	a ()Ldch; start
	a (CLjava/util/function/Predicate;)Ldch; where
	b ()Ldcg; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
	a (Ldcf;)Z lambda$new$0
	<clinit> ()V <clinit>
dci net/minecraft/world/level/block/state/pattern/package-info
dcj net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	<init> (Lcpn;)V <init>
	a (Lcpn;)Ldcj; forBlock
	a (Ldcb;)Z test
	test (Ljava/lang/Object;)Z test
dck net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	<init> (Ldcc;)V <init>
	a (Lcpn;)Ldck; forBlock
	a (Ldcb;)Z test
	a (Ldcb;Ldde;Ljava/util/function/Predicate;)Z applies
	a (Ldde;Ljava/util/function/Predicate;)Ldck; where
	test (Ljava/lang/Object;)Z test
	b (Ldcb;)Z lambda$static$0
	<clinit> ()V <clinit>
dcl net/minecraft/world/level/block/state/predicate/package-info
dcm net/minecraft/world/level/block/state/properties/AttachFace
	a FLOOR
	b WALL
	c CEILING
	d name
	e $VALUES
	values ()[Ldcm; values
	valueOf (Ljava/lang/String;)Ldcm; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcm; $values
	<clinit> ()V <clinit>
dcn net/minecraft/world/level/block/state/properties/BambooLeaves
	a NONE
	b SMALL
	c LARGE
	d name
	e $VALUES
	values ()[Ldcn; values
	valueOf (Ljava/lang/String;)Ldcn; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcn; $values
	<clinit> ()V <clinit>
dco net/minecraft/world/level/block/state/properties/BedPart
	a HEAD
	b FOOT
	c name
	d $VALUES
	values ()[Ldco; values
	valueOf (Ljava/lang/String;)Ldco; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldco; $values
	<clinit> ()V <clinit>
dcp net/minecraft/world/level/block/state/properties/BellAttachType
	a FLOOR
	b CEILING
	c SINGLE_WALL
	d DOUBLE_WALL
	e name
	f $VALUES
	values ()[Ldcp; values
	valueOf (Ljava/lang/String;)Ldcp; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcp; $values
	<clinit> ()V <clinit>
dcq net/minecraft/world/level/block/state/properties/BlockSetType
	p name
	q canOpenByHand
	r soundType
	s doorClose
	t doorOpen
	u trapdoorClose
	v trapdoorOpen
	w pressurePlateClickOff
	x pressurePlateClickOn
	y buttonClickOff
	z buttonClickOn
	A VALUES
	a IRON
	b GOLD
	c STONE
	d POLISHED_BLACKSTONE
	e OAK
	f SPRUCE
	g BIRCH
	h ACACIA
	i CHERRY
	j JUNGLE
	k DARK_OAK
	l CRIMSON
	m WARPED
	n MANGROVE
	o BAMBOO
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;ZLcxa;Lamg;Lamg;Lamg;Lamg;Lamg;Lamg;Lamg;Lamg;)V <init>
	a (Ldcq;)Ldcq; register
	a ()Ljava/util/stream/Stream; values
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; name
	c ()Z canOpenByHand
	d ()Lcxa; soundType
	e ()Lamg; doorClose
	f ()Lamg; doorOpen
	g ()Lamg; trapdoorClose
	h ()Lamg; trapdoorOpen
	i ()Lamg; pressurePlateClickOff
	j ()Lamg; pressurePlateClickOn
	k ()Lamg; buttonClickOff
	l ()Lamg; buttonClickOn
	<clinit> ()V <clinit>
dcr net/minecraft/world/level/block/state/properties/BlockStateProperties
	a ATTACHED
	b BOTTOM
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D BERRIES
	E BLOOM
	F SHRIEKING
	G CAN_SUMMON
	H HORIZONTAL_AXIS
	I AXIS
	J UP
	K DOWN
	L NORTH
	M EAST
	N SOUTH
	O WEST
	P FACING
	Q FACING_HOPPER
	R HORIZONTAL_FACING
	S FLOWER_AMOUNT
	T ORIENTATION
	U ATTACH_FACE
	V BELL_ATTACHMENT
	W EAST_WALL
	X NORTH_WALL
	Y SOUTH_WALL
	Z WEST_WALL
	aa EAST_REDSTONE
	ab NORTH_REDSTONE
	ac SOUTH_REDSTONE
	ad WEST_REDSTONE
	ae DOUBLE_BLOCK_HALF
	af HALF
	ag RAIL_SHAPE
	ah RAIL_SHAPE_STRAIGHT
	ai MAX_AGE_1
	aj MAX_AGE_2
	ak MAX_AGE_3
	al MAX_AGE_4
	am MAX_AGE_5
	an MAX_AGE_7
	ao MAX_AGE_15
	ap MAX_AGE_25
	aq AGE_1
	ar AGE_2
	as AGE_3
	at AGE_4
	au AGE_5
	av AGE_7
	aw AGE_15
	ax AGE_25
	ay BITES
	az CANDLES
	aA DELAY
	aB MAX_DISTANCE
	aC DISTANCE
	aD EGGS
	aE HATCH
	aF LAYERS
	aG MIN_LEVEL
	aH MIN_LEVEL_CAULDRON
	aI MAX_LEVEL_3
	aJ MAX_LEVEL_8
	aK LEVEL_CAULDRON
	aL LEVEL_COMPOSTER
	aM LEVEL_FLOWING
	aN LEVEL_HONEY
	aO MAX_LEVEL_15
	aP LEVEL
	aQ MOISTURE
	aR NOTE
	aS PICKLES
	aT POWER
	aU STAGE
	aV STABILITY_MAX_DISTANCE
	aW STABILITY_DISTANCE
	aX MIN_RESPAWN_ANCHOR_CHARGES
	aY MAX_RESPAWN_ANCHOR_CHARGES
	aZ RESPAWN_ANCHOR_CHARGES
	ba ROTATION_16
	bb BED_PART
	bc CHEST_TYPE
	bd MODE_COMPARATOR
	be DOOR_HINGE
	bf NOTEBLOCK_INSTRUMENT
	bg PISTON_TYPE
	bh SLAB_TYPE
	bi STAIRS_SHAPE
	bj STRUCTUREBLOCK_MODE
	bk BAMBOO_LEAVES
	bl TILT
	bm VERTICAL_DIRECTION
	bn DRIPSTONE_THICKNESS
	bo SCULK_SENSOR_PHASE
	bp CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	bq CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	br CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	bs CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	bt CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	bu CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	bv DUSTED
	bw CRACKED
	<init> ()V <init>
	a (Lddf;)Z lambda$static$1
	a (Lha;)Z lambda$static$0
	<clinit> ()V <clinit>
dcs net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/String;)Ldcs; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
dct net/minecraft/world/level/block/state/properties/ChestType
	a SINGLE
	b LEFT
	c RIGHT
	d name
	e $VALUES
	values ()[Ldct; values
	valueOf (Ljava/lang/String;)Ldct; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Ldct; getOpposite
	b ()[Ldct; $values
	<clinit> ()V <clinit>
dct$1 net/minecraft/world/level/block/state/properties/ChestType$1
	a $SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
	<clinit> ()V <clinit>
dcu net/minecraft/world/level/block/state/properties/ComparatorMode
	a COMPARE
	b SUBTRACT
	c name
	d $VALUES
	values ()[Ldcu; values
	valueOf (Ljava/lang/String;)Ldcu; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcu; $values
	<clinit> ()V <clinit>
dcv net/minecraft/world/level/block/state/properties/DirectionProperty
	<init> (Ljava/lang/String;Ljava/util/Collection;)V <init>
	a (Ljava/lang/String;)Ldcv; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ldcv; create
	a (Ljava/lang/String;[Lha;)Ldcv; create
	a (Ljava/lang/String;Ljava/util/Collection;)Ldcv; create
	a (Lha;)Z lambda$create$0
dcw net/minecraft/world/level/block/state/properties/DoorHingeSide
	a LEFT
	b RIGHT
	c $VALUES
	values ()[Ldcw; values
	valueOf (Ljava/lang/String;)Ldcw; valueOf
	<init> (Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcw; $values
	<clinit> ()V <clinit>
dcx net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	a UPPER
	b LOWER
	c $VALUES
	values ()[Ldcx; values
	valueOf (Ljava/lang/String;)Ldcx; valueOf
	<init> (Ljava/lang/String;I)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcx; $values
	<clinit> ()V <clinit>
dcy net/minecraft/world/level/block/state/properties/DripstoneThickness
	a TIP_MERGE
	b TIP
	c FRUSTUM
	d MIDDLE
	e BASE
	f name
	g $VALUES
	values ()[Ldcy; values
	valueOf (Ljava/lang/String;)Ldcy; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldcy; $values
	<clinit> ()V <clinit>
dcz net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	<init> (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/String;Ljava/lang/Class;)Ldcz; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Ldcz; create
	a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Ldcz; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Ldcz; create
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Ljava/lang/Enum;)Z lambda$create$0
dda net/minecraft/world/level/block/state/properties/Half
	a TOP
	b BOTTOM
	c name
	d $VALUES
	values ()[Ldda; values
	valueOf (Ljava/lang/String;)Ldda; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldda; $values
	<clinit> ()V <clinit>
ddb net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	b min
	c max
	<init> (Ljava/lang/String;II)V <init>
	a ()Ljava/util/Collection; getPossibleValues
	equals (Ljava/lang/Object;)Z equals
	b ()I generateHashCode
	a (Ljava/lang/String;II)Lddb; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
ddc net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	a HARP
	b BASEDRUM
	c SNARE
	d HAT
	e BASS
	f FLUTE
	g BELL
	h GUITAR
	i CHIME
	j XYLOPHONE
	k IRON_XYLOPHONE
	l COW_BELL
	m DIDGERIDOO
	n BIT
	o BANJO
	p PLING
	q ZOMBIE
	r SKELETON
	s CREEPER
	t DRAGON
	u WITHER_SKELETON
	v PIGLIN
	w CUSTOM_HEAD
	x name
	y soundEvent
	z type
	A $VALUES
	values ()[Lddc; values
	valueOf (Ljava/lang/String;)Lddc; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lhe;Lddc$a;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Lhe; getSoundEvent
	b ()Z isTunable
	d ()Z hasCustomSound
	e ()Z worksAboveNoteBlock
	f ()[Lddc; $values
	<clinit> ()V <clinit>
ddc$a net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	a BASE_BLOCK
	b MOB_HEAD
	c CUSTOM
	d $VALUES
	values ()[Lddc$a; values
	valueOf (Ljava/lang/String;)Lddc$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lddc$a; $values
	<clinit> ()V <clinit>
ddd net/minecraft/world/level/block/state/properties/PistonType
	a DEFAULT
	b STICKY
	c name
	d $VALUES
	values ()[Lddd; values
	valueOf (Ljava/lang/String;)Lddd; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Lddd; $values
	<clinit> ()V <clinit>
dde net/minecraft/world/level/block/state/properties/Property
	a clazz
	b name
	c hashCode
	d codec
	e valueCodec
	<init> (Ljava/lang/String;Ljava/lang/Class;)V <init>
	b (Ljava/lang/Comparable;)Ldde$a; value
	a (Ldcd;)Ldde$a; value
	c ()Ljava/util/stream/Stream; getAllValues
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lcom/mojang/serialization/Codec; valueCodec
	f ()Ljava/lang/String; getName
	g ()Ljava/lang/Class; getValueClass
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	b ()I generateHashCode
	a (Lcom/mojang/serialization/DynamicOps;Ldcd;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; parseValue
	a (Ldcd;Ljava/lang/Comparable;)Ldcd; lambda$parseValue$3
	a (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$new$2
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; lambda$new$1
	d (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
dde$a net/minecraft/world/level/block/state/properties/Property$Value
	a property
	b value
	<init> (Ldde;Ljava/lang/Comparable;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldde; property
	b ()Ljava/lang/Comparable; value
ddf net/minecraft/world/level/block/state/properties/RailShape
	a NORTH_SOUTH
	b EAST_WEST
	c ASCENDING_EAST
	d ASCENDING_WEST
	e ASCENDING_NORTH
	f ASCENDING_SOUTH
	g SOUTH_EAST
	h SOUTH_WEST
	i NORTH_WEST
	j NORTH_EAST
	k name
	l $VALUES
	values ()[Lddf; values
	valueOf (Ljava/lang/String;)Lddf; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	toString ()Ljava/lang/String; toString
	b ()Z isAscending
	c ()Ljava/lang/String; getSerializedName
	d ()[Lddf; $values
	<clinit> ()V <clinit>
ddg net/minecraft/world/level/block/state/properties/RedstoneSide
	a UP
	b SIDE
	c NONE
	d name
	e $VALUES
	values ()[Lddg; values
	valueOf (Ljava/lang/String;)Lddg; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()Z isConnected
	b ()[Lddg; $values
	<clinit> ()V <clinit>
ddh net/minecraft/world/level/block/state/properties/RotationSegment
	a SEGMENTED_ANGLE16
	b MAX_SEGMENT_INDEX
	c NORTH_0
	d EAST_90
	e SOUTH_180
	f WEST_270
	<init> ()V <init>
	a ()I getMaxSegmentIndex
	a (Lha;)I convertToSegment
	a (F)I convertToSegment
	a (I)Ljava/util/Optional; convertToDirection
	b (I)F convertToDegrees
	<clinit> ()V <clinit>
ddi net/minecraft/world/level/block/state/properties/SculkSensorPhase
	a INACTIVE
	b ACTIVE
	c COOLDOWN
	d name
	e $VALUES
	values ()[Lddi; values
	valueOf (Ljava/lang/String;)Lddi; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Lddi; $values
	<clinit> ()V <clinit>
ddj net/minecraft/world/level/block/state/properties/SlabType
	a TOP
	b BOTTOM
	c DOUBLE
	d name
	e $VALUES
	values ()[Lddj; values
	valueOf (Ljava/lang/String;)Lddj; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Lddj; $values
	<clinit> ()V <clinit>
ddk net/minecraft/world/level/block/state/properties/StairsShape
	a STRAIGHT
	b INNER_LEFT
	c INNER_RIGHT
	d OUTER_LEFT
	e OUTER_RIGHT
	f name
	g $VALUES
	values ()[Lddk; values
	valueOf (Ljava/lang/String;)Lddk; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Lddk; $values
	<clinit> ()V <clinit>
ddl net/minecraft/world/level/block/state/properties/StructureMode
	a SAVE
	b LOAD
	c CORNER
	d DATA
	e name
	f displayName
	g $VALUES
	values ()[Lddl; values
	valueOf (Ljava/lang/String;)Lddl; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Lsw; getDisplayName
	b ()[Lddl; $values
	<clinit> ()V <clinit>
ddm net/minecraft/world/level/block/state/properties/Tilt
	a NONE
	b UNSTABLE
	c PARTIAL
	d FULL
	e name
	f causesVibration
	g $VALUES
	values ()[Lddm; values
	valueOf (Ljava/lang/String;)Lddm; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Z)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()Z causesVibration
	b ()[Lddm; $values
	<clinit> ()V <clinit>
ddn net/minecraft/world/level/block/state/properties/WallSide
	a NONE
	b LOW
	c TALL
	d name
	e $VALUES
	values ()[Lddn; values
	valueOf (Ljava/lang/String;)Lddn; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	toString ()Ljava/lang/String; toString
	c ()Ljava/lang/String; getSerializedName
	a ()[Lddn; $values
	<clinit> ()V <clinit>
ddo net/minecraft/world/level/block/state/properties/WoodType
	l name
	m setType
	n soundType
	o hangingSignSoundType
	p fenceGateClose
	q fenceGateOpen
	r VALUES
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e CHERRY
	f JUNGLE
	g DARK_OAK
	h CRIMSON
	i WARPED
	j MANGROVE
	k BAMBOO
	<init> (Ljava/lang/String;Ldcq;)V <init>
	<init> (Ljava/lang/String;Ldcq;Lcxa;Lcxa;Lamg;Lamg;)V <init>
	a (Lddo;)Lddo; register
	a ()Ljava/util/stream/Stream; values
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/lang/String; name
	c ()Ldcq; setType
	d ()Lcxa; soundType
	e ()Lcxa; hangingSignSoundType
	f ()Lamg; fenceGateClose
	g ()Lamg; fenceGateOpen
	<clinit> ()V <clinit>
ddp net/minecraft/world/level/block/state/properties/package-info
ddq net/minecraft/world/level/border/BorderChangeListener
	a (Ldds;D)V onBorderSizeSet
	a (Ldds;DDJ)V onBorderSizeLerping
	a (Ldds;DD)V onBorderCenterSet
	a (Ldds;I)V onBorderSetWarningTime
	b (Ldds;I)V onBorderSetWarningBlocks
	b (Ldds;D)V onBorderSetDamagePerBlock
	c (Ldds;D)V onBorderSetDamageSafeZOne
ddq$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	<init> (Ldds;)V <init>
	a (Ldds;D)V onBorderSizeSet
	a (Ldds;DDJ)V onBorderSizeLerping
	a (Ldds;DD)V onBorderCenterSet
	a (Ldds;I)V onBorderSetWarningTime
	b (Ldds;I)V onBorderSetWarningBlocks
	b (Ldds;D)V onBorderSetDamagePerBlock
	c (Ldds;D)V onBorderSetDamageSafeZOne
ddr net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	values ()[Lddr; values
	valueOf (Ljava/lang/String;)Lddr; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a ()I getColor
	b ()[Lddr; $values
	<clinit> ()V <clinit>
dds net/minecraft/world/level/border/WorldBorder
	c MAX_SIZE
	d MAX_CENTER_COORDINATE
	a listeners
	b damagePerBlock
	f damageSafeZone
	g warningTime
	h warningBlocks
	i centerX
	j centerZ
	k absoluteMaxSize
	l extent
	e DEFAULT_SETTINGS
	<init> ()V <init>
	a (Lgu;)Z isWithinBounds
	a (Lclt;)Z isWithinBounds
	a (DD)Z isWithinBounds
	a (DDD)Z isWithinBounds
	a (Leed;)Z isWithinBounds
	b (DDD)Lgu; clampToBounds
	a (Lbfj;)D getDistanceToBorder
	c ()Lefb; getCollisionShape
	b (DD)D getDistanceToBorder
	a (Lbfj;Leed;)Z isInsideCloseToBorder
	d ()Lddr; getStatus
	e ()D getMinX
	f ()D getMinZ
	g ()D getMaxX
	h ()D getMaxZ
	a ()D getCenterX
	b ()D getCenterZ
	c (DD)V setCenter
	i ()D getSize
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	a (D)V setSize
	a (DDJ)V lerpSizeBetween
	l ()Ljava/util/List; getListeners
	a (Lddq;)V addListener
	b (Lddq;)V removeListener
	a (I)V setAbsoluteMaxSize
	m ()I getAbsoluteMaxSize
	n ()D getDamageSafeZone
	b (D)V setDamageSafeZone
	o ()D getDamagePerBlock
	c (D)V setDamagePerBlock
	p ()D getLerpSpeed
	q ()I getWarningTime
	b (I)V setWarningTime
	r ()I getWarningBlocks
	c (I)V setWarningBlocks
	s ()V tick
	t ()Ldds$c; createSettings
	a (Ldds$c;)V applySettings
	<clinit> ()V <clinit>
dds$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lddr; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Ldds$a; update
	m ()Lefb; getCollisionShape
dds$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a this$0
	<init> (Ldds;DDJ)V <init>
	a ()D getMinX
	c ()D getMinZ
	b ()D getMaxX
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lddr; getStatus
	k ()V onCenterChange
	j ()V onAbsoluteMaxSizeChange
	l ()Ldds$a; update
	m ()Lefb; getCollisionShape
dds$c net/minecraft/world/level/border/WorldBorder$Settings
	a centerX
	b centerZ
	c damagePerBlock
	d safeZone
	e warningBlocks
	f warningTime
	g size
	h sizeLerpTime
	i sizeLerpTarget
	<init> (DDDDIIDJD)V <init>
	<init> (Ldds;)V <init>
	a ()D getCenterX
	b ()D getCenterZ
	c ()D getDamagePerBlock
	d ()D getSafeZone
	e ()I getWarningBlocks
	f ()I getWarningTime
	g ()D getSize
	h ()J getSizeLerpTime
	i ()D getSizeLerpTarget
	a (Lcom/mojang/serialization/DynamicLike;Ldds$c;)Ldds$c; read
	a (Lqr;)V write
dds$d net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a this$0
	<init> (Ldds;D)V <init>
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	i ()Lddr; getStatus
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	n ()V updateBox
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Ldds$a; update
	m ()Lefb; getCollisionShape
ddt net/minecraft/world/level/border/package-info
ddu net/minecraft/world/level/chunk/BlockColumn
	a (I)Ldcb; getBlock
	a (ILdcb;)V setBlock
ddv net/minecraft/world/level/chunk/BulkSectionAccess
	a level
	b acquiredSections
	c lastSection
	d lastSectionKey
	<init> (Lcmn;)V <init>
	a (Lgu;)Ldej; getSection
	b (Lgu;)Ldcb; getBlockState
	close ()V close
	a (Lgu;IJ)Ldej; lambda$getSection$0
ddw net/minecraft/world/level/chunk/CarvingMask
	a minY
	b mask
	c additionalMask
	<init> (II)V <init>
	a (Lddw$a;)V setAdditionalMask
	<init> ([JI)V <init>
	c (III)I getIndex
	a (III)V set
	b (III)Z get
	a (Lclt;)Ljava/util/stream/Stream; stream
	a ()[J toArray
	a (Lclt;I)Lgu; lambda$stream$1
	d (III)Z lambda$new$0
ddw$a net/minecraft/world/level/chunk/CarvingMask$Mask
	test (III)Z test
ddx net/minecraft/world/level/chunk/ChunkAccess
	a NO_FILLED_SECTION
	n LOGGER
	o EMPTY_REFERENCE_SET
	b postProcessing
	c unsaved
	p isLightCorrect
	d chunkPos
	q inhabitedTime
	r carverBiomeSettings
	e noiseChunk
	f upgradeData
	g blendingData
	h heightmaps
	i skyLightSources
	s structureStarts
	t structuresRefences
	j pendingBlockEntities
	k blockEntities
	l levelHeightAccessor
	m sections
	<init> (Lclt;Ldev;Lcmo;Lhr;J[Ldej;Ldin;)V <init>
	a (Lhr;[Ldej;)V replaceMissingSections
	a (I)Ldgo; getListenerRegistry
	a (Lgu;Ldcb;Z)Ldcb; setBlockState
	a (Lczn;)V setBlockEntity
	a (Lbfj;)V addEntity
	a ()I getHighestFilledSectionIndex
	b ()I getHighestSectionPosition
	c ()Ljava/util/Set; getBlockEntitiesPos
	d ()[Ldej; getSections
	b (I)Ldej; getSection
	e ()Ljava/util/Collection; getHeightmaps
	a (Ldhk$a;[J)V setHeightmap
	a (Ldhk$a;)Ldhk; getOrCreateHeightmapUnprimed
	b (Ldhk$a;)Z hasPrimedHeightmap
	a (Ldhk$a;II)I getHeight
	f ()Lclt; getPos
	a (Ldsa;)Ldsi; getStartForStructure
	a (Ldsa;Ldsi;)V setStartForStructure
	g ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	b (Ldsa;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	a (Ldsa;J)V addReferenceForStructure
	h ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
	a (II)Z isYSpaceEmpty
	a (Z)V setUnsaved
	i ()Z isUnsaved
	j ()Ldec; getStatus
	k ()Ldec; getHighestGeneratedStatus
	d (Lgu;)V removeBlockEntity
	e (Lgu;)V markPosForPostprocessing
	n ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	a (SI)V addPackedPostProcess
	a (Lqr;)V setBlockEntityNbt
	f (Lgu;)Lqr; getBlockEntityNbt
	g (Lgu;)Lqr; getBlockEntityNbtForSaving
	a (Ljava/util/function/BiConsumer;)V findBlockLightSources
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V findBlocks
	o ()Lefw; getBlockTicks
	p ()Lefw; getFluidTicks
	q ()Lddx$a; getTicksForSerialization
	r ()Ldev; getUpgradeData
	s ()Z isOldNoiseGeneration
	t ()Ldin; getBlendingData
	a (Ldin;)V setBlendingData
	u ()J getInhabitedTime
	a (J)V incrementInhabitedTime
	b (J)V setInhabitedTime
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	v ()Z isLightCorrect
	b (Z)V setLightCorrect
	C_ ()I getMinBuildHeight
	D_ ()I getHeight
	a (Ljava/util/function/Function;)Ldho; getOrCreateNoiseChunk
	a (Ljava/util/function/Supplier;)Lcnl; carverBiome
	getNoiseBiome (III)Lhe; getNoiseBiome
	a (Lcnn;Lcnt$f;)V fillBiomesFromNoise
	w ()Z hasAnyStructureReferences
	x ()Ldgy; getBelowZeroRetrogen
	y ()Z isUpgrading
	z ()Lcmo; getHeightAccessorForGeneration
	A ()V initializeLightSources
	B ()Ldwo; getSkyLightSources
	a (III)Ljava/lang/String; lambda$getNoiseBiome$3
	a (Ldcb;)Z lambda$findBlockLightSources$2
	c (Ldsa;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForStructure$1
	c (Ldhk$a;)Ldhk; lambda$getOrCreateHeightmapUnprimed$0
	<clinit> ()V <clinit>
ddx$a net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	a blocks
	b fluids
	<init> (Lefu;Lefu;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lefu; blocks
	b ()Lefu; fluids
ddy net/minecraft/world/level/chunk/ChunkGenerator
	a CODEC
	b biomeSource
	c featuresPerStep
	d generationSettingsGetter
	<init> (Lcno;)V <init>
	<init> (Lcno;Ljava/util/function/Function;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lhg;Ldhy;J)Lddz; createState
	b ()Ljava/util/Optional; getTypeNameForDataFixer
	a (Ljava/util/concurrent/Executor;Ldhy;Ldim;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Laim;JLdhy;Lcnm;Lcne;Lddx;Ldhg$a;)V applyCarvers
	a (Laif;Lhi;Lgu;IZ)Lcom/mojang/datafixers/util/Pair; findNearestMapStructure
	a (Ljava/util/Set;Laif;Lcne;Lgu;ZLdsu;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lcmp;Lcne;IIIZJLdsv;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lcmp;Lcne;ZLdsx;Lclt;)Lcom/mojang/datafixers/util/Pair; getStructureGeneratingAt
	a (Lcne;Ldsi;)Z tryAddReference
	a (Lcng;Lddx;Lcne;)V applyBiomeDecoration
	a (Lddx;)Ldrs; getWritableArea
	a (Laim;Lcne;Ldhy;Lddx;)V buildSurface
	a (Laim;)V spawnOriginalMobs
	a (Lcmo;)I getSpawnHeight
	c ()Lcno; getBiomeSource
	d ()I getGenDepth
	a (Lhe;Lcne;Lbgc;Lgu;)Lbcl; getMobsAt
	a (Lhs;Lddz;Lcne;Lddx;Ldvu;)V createStructures
	a (Ldsg$a;Lcne;Lhs;Ldhy;Ldvu;JLddx;Lclt;Lhx;)Z tryGenerateStructure
	a (Lcne;Lddx;Lhx;Ldsa;)I fetchReferences
	a (Lcng;Lcne;Lddx;)V createReferences
	a (Ljava/util/concurrent/Executor;Ldim;Ldhy;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	e ()I getSeaLevel
	f ()I getMinY
	a (IILdhk$a;Lcmo;Ldhy;)I getBaseHeight
	a (IILcmo;Ldhy;)Lcmy; getBaseColumn
	b (IILdhk$a;Lcmo;Ldhy;)I getFirstFreeHeight
	c (IILdhk$a;Lcmo;Ldhy;)I getFirstOccupiedHeight
	a (Ljava/util/List;Ldhy;Lgu;)V addDebugScreenInfo
	a (Lhe;)Lcnl; getBiomeGenerationSettings
	a (Ldsi;)Ljava/lang/String; lambda$createReferences$18
	b (Ldsi;)Ljava/lang/String; lambda$createReferences$17
	a (Ljava/util/Optional;Ldsi;)Ljava/lang/String; lambda$createReferences$16
	a (Ldsi;Lhr;)Ljava/lang/String; lambda$createReferences$15
	a (Lcne;Lhx;Lddx;Lddz;Lclt;Lhs;Ldhy;Ldvu;Lhe;)V lambda$createStructures$14
	a (Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Ldsi;)V lambda$getMobsAt$13
	a (Lgu;Ldsi;)Z lambda$getMobsAt$12
	a (Lcne;Lgu;Ldsi;)Z lambda$getMobsAt$11
	a (Lhr;Ldre;)Ljava/lang/String; lambda$applyBiomeDecoration$10
	a (Lit/unimi/dsi/fastutil/ints/IntSet;Lcnu$b;Ldre;)V lambda$applyBiomeDecoration$9
	a (Lcng;Lcne;Ldij;Lddx;Lclt;Ldsi;)V lambda$applyBiomeDecoration$8
	a (Lhr;Ldsa;)Ljava/lang/String; lambda$applyBiomeDecoration$7
	a (Lcng;Ljava/util/Set;Lclt;)V lambda$applyBiomeDecoration$6
	a (Ldsa;)Ljava/lang/Integer; lambda$applyBiomeDecoration$5
	a (Ldsx;)Ljava/util/Set; lambda$findNearestMapStructure$4
	a (Lddx;Ldhy;)Lddx; lambda$createBiomes$3
	a (Lcno;Ljava/util/function/Function;)Ljava/util/List; lambda$new$2
	a (Ljava/util/function/Function;Lhe;)Ljava/util/List; lambda$new$1
	b (Lhe;)Lcnl; lambda$new$0
	<clinit> ()V <clinit>
ddz net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	a LOGGER
	b randomState
	c biomeSource
	d levelSeed
	e concentricRingsSeed
	f placementsForStructure
	g ringPositions
	h hasGeneratedPositions
	i possibleStructureSets
	a (Ldhy;JLcno;Ljava/util/stream/Stream;)Lddz; createForFlat
	a (Ldhy;JLcno;Lhg;)Lddz; createForNormal
	a (Ldsg;Lcno;)Z hasBiomesForStructureSet
	<init> (Ldhy;Lcno;JJLjava/util/List;)V <init>
	a ()Ljava/util/List; possibleStructureSets
	e ()V generatePositions
	a (Lhe;Ldsu;)Ljava/util/concurrent/CompletableFuture; generateRingPositions
	b ()V ensureStructuresGenerated
	a (Ldsu;)Ljava/util/List; getRingPositionsFor
	a (Lhe;)Ljava/util/List; getPlacementsForStructure
	c ()Ldhy; randomState
	a (Lhe;III)Z hasStructureChunkInRange
	d ()J getLevelSeed
	a (Lcom/google/common/base/Stopwatch;Lhe;Ljava/util/List;)Ljava/util/List; lambda$generateRingPositions$6
	a (IILhi;Lapf;)Lclt; lambda$generateRingPositions$5
	a (Ljava/util/Set;Lhe;)V lambda$generatePositions$4
	a (Ldsa;)Ljava/util/List; lambda$generatePositions$3
	a (Ldsg$a;)Ljava/util/stream/Stream; lambda$hasBiomesForStructureSet$2
	a (Lcno;Lhe$c;)Z lambda$createForNormal$1
	a (Lcno;Lhe;)Z lambda$createForFlat$0
	<clinit> ()V <clinit>
dea net/minecraft/world/level/chunk/ChunkGenerators
	<init> ()V <init>
	a (Lhr;)Lcom/mojang/serialization/Codec; bootstrap
deb net/minecraft/world/level/chunk/ChunkSource
	<init> ()V <init>
	a (IIZ)Ldei; getChunk
	a (II)Ldei; getChunkNow
	c (II)Ldek; getChunkForLighting
	b (II)Z hasChunk
	a (IILdec;Z)Lddx; getChunk
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	e ()Ljava/lang/String; gatherStats
	j ()I getLoadedChunksCount
	close ()V close
	p ()Ldwt; getLightEngine
	a (ZZ)V setSpawnSettings
	a (Lclt;Z)V updateChunkForced
dec net/minecraft/world/level/chunk/ChunkStatus
	a MAX_STRUCTURE_DISTANCE
	o PRE_FEATURES
	b POST_FEATURES
	p PASSTHROUGH_LOAD_TASK
	c EMPTY
	d STRUCTURE_STARTS
	e STRUCTURE_REFERENCES
	f BIOMES
	g NOISE
	h SURFACE
	i CARVERS
	j FEATURES
	k INITIALIZE_LIGHT
	l LIGHT
	m SPAWN
	n FULL
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s index
	t parent
	u generationTask
	v loadingTask
	w range
	x hasLoadDependencies
	y chunkType
	z heightmapsAfter
	a (Laii;Lddx;)Ljava/util/concurrent/CompletableFuture; initializeLight
	b (Laii;Lddx;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Ljava/lang/String;Ldec;ILjava/util/EnumSet;Ldec$a;Ldec$d;)Ldec; registerSimple
	a (Ljava/lang/String;Ldec;ILjava/util/EnumSet;Ldec$a;Ldec$b;)Ldec; register
	a (Ljava/lang/String;Ldec;IZLjava/util/EnumSet;Ldec$a;Ldec$b;Ldec$c;)Ldec; register
	a ()Ljava/util/List; getStatusList
	a (Lddx;)Z isLighted
	a (I)Ldec; getStatusAroundFullChunk
	b ()I maxDistance
	a (Ldec;)I getDistance
	<init> (Ldec;IZLjava/util/EnumSet;Ldec$a;Ldec$b;Ldec$c;)V <init>
	c ()I getIndex
	d ()Ldec; getParent
	a (Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; load
	e ()I getRange
	f ()Z hasLoadDependencies
	g ()Ldec$a; getChunkType
	a (Ljava/lang/String;)Ldec; byName
	h ()Ljava/util/EnumSet; heightmapsAfter
	b (Ldec;)Z isOrAfter
	toString ()Ljava/lang/String; toString
	a (Lddx;Lbaw;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$generate$20
	a (Lit/unimi/dsi/fastutil/ints/IntArrayList;)V lambda$static$19
	a (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$18
	a (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$17
	a (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$16
	b (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$15
	b (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$14
	c (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$13
	c (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$12
	b (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$11
	c (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$10
	d (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$9
	d (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$8
	b (Lddx;)Lcom/mojang/datafixers/util/Either; lambda$static$7
	e (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$6
	c (Lddx;)Lcom/mojang/datafixers/util/Either; lambda$static$5
	e (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$4
	d (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
	f (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
	f (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V lambda$static$1
	e (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
	<clinit> ()V <clinit>
dec$a net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	a PROTOCHUNK
	b LEVELCHUNK
	c $VALUES
	values ()[Ldec$a; values
	valueOf (Ljava/lang/String;)Ldec$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldec$a; $values
	<clinit> ()V <clinit>
dec$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
	doWork (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; doWork
dec$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
	doWork (Ldec;Laif;Ldvu;Laii;Ljava/util/function/Function;Lddx;)Ljava/util/concurrent/CompletableFuture; doWork
dec$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
	doWork (Ldec;Ljava/util/concurrent/Executor;Laif;Lddy;Ldvu;Laii;Ljava/util/function/Function;Ljava/util/List;Lddx;)Ljava/util/concurrent/CompletableFuture; doWork
	doWork (Ldec;Laif;Lddy;Ljava/util/List;Lddx;)V doWork
ded net/minecraft/world/level/chunk/DataLayer
	a LAYER_COUNT
	b LAYER_SIZE
	c SIZE
	e NIBBLE_SIZE
	d data
	f defaultValue
	<init> ()V <init>
	<init> (I)V <init>
	<init> ([B)V <init>
	a (III)I get
	a (IIII)V set
	b (III)I getIndex
	d (I)I get
	a (II)V set
	e (I)I getNibbleIndex
	f (I)I getByteIndex
	a (I)V fill
	g (I)B packFilled
	a ()[B getData
	b ()Lded; copy
	toString ()Ljava/lang/String; toString
	b (I)Ljava/lang/String; layerToString
	c ()Z isDefinitelyHomogenous
	c (I)Z isDefinitelyFilledWith
	d ()Z isEmpty
dee net/minecraft/world/level/chunk/EmptyLevelChunk
	n biome
	<init> (Lcmm;Lclt;Lhe;)V <init>
	a_ (Lgu;)Ldcb; getBlockState
	a (Lgu;Ldcb;Z)Ldcb; setBlockState
	b_ (Lgu;)Ldxe; getFluidState
	h (Lgu;)I getLightEmission
	a (Lgu;Ldei$b;)Lczn; getBlockEntity
	b (Lczn;)V addAndRegisterBlockEntity
	a (Lczn;)V setBlockEntity
	d (Lgu;)V removeBlockEntity
	C ()Z isEmpty
	a (II)Z isYSpaceEmpty
	D ()Lahy; getFullStatus
	getNoiseBiome (III)Lhe; getNoiseBiome
def net/minecraft/world/level/chunk/GlobalPalette
	a registry
	<init> (Lhj;)V <init>
	a (ILhj;Ldep;Ljava/util/List;)Ldeo; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lsf;)V read
	b (Lsf;)V write
	a ()I getSerializedSize
	b ()I getSize
	c ()Ldeo; copy
deg net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d bits
	<init> (Lhj;ILdep;Ljava/util/List;)V <init>
	<init> (Lhj;ILdep;)V <init>
	<init> (Lhj;ILdep;Lany;)V <init>
	a (ILhj;Ldep;Ljava/util/List;)Ldeo; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lsf;)V read
	b (Lsf;)V write
	a ()I getSerializedSize
	d ()Ljava/util/List; getEntries
	b ()I getSize
	c ()Ldeo; copy
deh net/minecraft/world/level/chunk/ImposterProtoChunk
	n wrapped
	o allowWrites
	<init> (Ldei;Z)V <init>
	c_ (Lgu;)Lczn; getBlockEntity
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	M ()I getMaxLightLevel
	b (I)Ldej; getSection
	a (Lgu;Ldcb;Z)Ldcb; setBlockState
	a (Lczn;)V setBlockEntity
	a (Lbfj;)V addEntity
	a (Ldec;)V setStatus
	d ()[Ldej; getSections
	a (Ldhk$a;[J)V setHeightmap
	c (Ldhk$a;)Ldhk$a; fixType
	a (Ldhk$a;)Ldhk; getOrCreateHeightmapUnprimed
	a (Ldhk$a;II)I getHeight
	getNoiseBiome (III)Lhe; getNoiseBiome
	f ()Lclt; getPos
	a (Ldsa;)Ldsi; getStartForStructure
	a (Ldsa;Ldsi;)V setStartForStructure
	g ()Ljava/util/Map; getAllStarts
	a (Ljava/util/Map;)V setAllStarts
	b (Ldsa;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	a (Ldsa;J)V addReferenceForStructure
	h ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
	a (Z)V setUnsaved
	i ()Z isUnsaved
	j ()Ldec; getStatus
	d (Lgu;)V removeBlockEntity
	e (Lgu;)V markPosForPostprocessing
	a (Lqr;)V setBlockEntityNbt
	f (Lgu;)Lqr; getBlockEntityNbt
	g (Lgu;)Lqr; getBlockEntityNbtForSaving
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V findBlocks
	o ()Lefw; getBlockTicks
	p ()Lefw; getFluidTicks
	q ()Lddx$a; getTicksForSerialization
	t ()Ldin; getBlendingData
	a (Ldin;)V setBlendingData
	a (Ldhg$a;)Lddw; getCarvingMask
	b (Ldhg$a;)Lddw; getOrCreateCarvingMask
	C ()Ldei; getWrapped
	v ()Z isLightCorrect
	b (Z)V setLightCorrect
	a (Lcnn;Lcnt$f;)V fillBiomesFromNoise
	A ()V initializeLightSources
	B ()Ldwo; getSkyLightSources
dei net/minecraft/world/level/chunk/LevelChunk
	n LOGGER
	o NULL_TICKER
	p tickersInLevel
	q loaded
	r level
	s fullStatus
	t postLoad
	u gameEventListenerRegistrySections
	v blockTicks
	w fluidTicks
	<init> (Lcmm;Lclt;)V <init>
	<init> (Lcmm;Lclt;Ldev;Lefo;Lefo;J[Ldej;Ldei$c;Ldin;)V <init>
	<init> (Laif;Ldes;Ldei$c;)V <init>
	o ()Lefw; getBlockTicks
	p ()Lefw; getFluidTicks
	q ()Lddx$a; getTicksForSerialization
	a (I)Ldgo; getListenerRegistry
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	a (III)Ldxe; getFluidState
	a (Lgu;Ldcb;Z)Ldcb; setBlockState
	a (Lbfj;)V addEntity
	j (Lgu;)Lczn; createBlockEntity
	c_ (Lgu;)Lczn; getBlockEntity
	a (Lgu;Ldei$b;)Lczn; getBlockEntity
	b (Lczn;)V addAndRegisterBlockEntity
	K ()Z isInLevel
	k (Lgu;)Z isTicking
	a (Lczn;)V setBlockEntity
	g (Lgu;)Lqr; getBlockEntityNbtForSaving
	d (Lgu;)V removeBlockEntity
	a (Lczn;Laif;)V removeGameEventListener
	c (I)V removeGameEventListenerRegistry
	l (Lgu;)V removeBlockEntityTicker
	E ()V runPostLoad
	C ()Z isEmpty
	a (Lsf;Lqr;Ljava/util/function/Consumer;)V replaceWithPacketData
	a (Lsf;)V replaceBiomes
	c (Z)V setLoaded
	F ()Lcmm; getLevel
	G ()Ljava/util/Map; getBlockEntities
	H ()V postProcessGeneration
	a (Lgu;Lqr;)Lczn; promotePendingBlockEntity
	c (J)V unpackTicks
	a (Laif;)V registerTickContainerInLevel
	b (Laif;)V unregisterTickContainerFromLevel
	j ()Ldec; getStatus
	D ()Lahy; getFullStatus
	b (Ljava/util/function/Supplier;)V setFullStatus
	I ()V clearAllBlockEntities
	J ()V registerAllBlockEntitiesAfterLevelLoad
	b (Lczn;Laif;)V addGameEventListener
	c (Lczn;)V updateBlockEntityTicker
	a (Lczn;Lczo;)Ldbd; createTicker
	a (Lczn;Lczo;Lgu;Ldei$d;)Ldei$d; lambda$updateBlockEntityTicker$6
	d (Lczn;)V lambda$registerAllBlockEntitiesAfterLevelLoad$5
	a (Ldei$d;)V lambda$clearAllBlockEntities$4
	a (Lgu;Lczp;Lqr;)V lambda$replaceWithPacketData$3
	b (III)Ljava/lang/String; lambda$getFluidState$2
	c (III)Ljava/lang/String; lambda$getBlockState$1
	a (Laif;II)Ldgo; lambda$getListenerRegistry$0
	<clinit> ()V <clinit>
dei$1 net/minecraft/world/level/chunk/LevelChunk$1
	<init> ()V <init>
	a ()V tick
	b ()Z isRemoved
	c ()Lgu; getPos
	d ()Ljava/lang/String; getType
dei$a net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	b blockEntity
	c ticker
	d loggedInvalidBlockState
	a this$0
	<init> (Ldei;Lczn;Lczo;)V <init>
	a ()V tick
	b ()Z isRemoved
	c ()Lgu; getPos
	d ()Ljava/lang/String; getType
	toString ()Ljava/lang/String; toString
dei$b net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	a IMMEDIATE
	b QUEUED
	c CHECK
	d $VALUES
	values ()[Ldei$b; values
	valueOf (Ljava/lang/String;)Ldei$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldei$b; $values
	<clinit> ()V <clinit>
dei$c net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
	run (Ldei;)V run
dei$d net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	b ticker
	a this$0
	<init> (Ldei;Ldbd;)V <init>
	a (Ldbd;)V rebind
	a ()V tick
	b ()Z isRemoved
	c ()Lgu; getPos
	d ()Ljava/lang/String; getType
	toString ()Ljava/lang/String; toString
dej net/minecraft/world/level/chunk/LevelChunkSection
	a SECTION_WIDTH
	b SECTION_HEIGHT
	c SECTION_SIZE
	d BIOME_CONTAINER_BITS
	e nonEmptyBlockCount
	f tickingBlockCount
	g tickingFluidCount
	h states
	i biomes
	<init> (Ldeq;Lder;)V <init>
	<init> (Lhr;)V <init>
	a (III)Ldcb; getBlockState
	b (III)Ldxe; getFluidState
	a ()V acquire
	b ()V release
	a (IIILdcb;)Ldcb; setBlockState
	a (IIILdcb;Z)Ldcb; setBlockState
	c ()Z hasOnlyAir
	d ()Z isRandomlyTicking
	e ()Z isRandomlyTickingBlocks
	f ()Z isRandomlyTickingFluids
	g ()V recalcBlockCounts
	h ()Ldeq; getStates
	i ()Lder; getBiomes
	a (Lsf;)V read
	b (Lsf;)V readBiomes
	c (Lsf;)V write
	j ()I getSerializedSize
	a (Ljava/util/function/Predicate;)Z maybeHas
	c (III)Lhe; getNoiseBiome
	a (Lcnn;Lcnt$f;III)V fillBiomesFromNoise
dej$a net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	a nonEmptyBlockCount
	b tickingBlockCount
	c tickingFluidCount
	d this$0
	<init> (Ldej;)V <init>
	a (Ldcb;I)V accept
	accept (Ljava/lang/Object;I)V accept
dek net/minecraft/world/level/chunk/LightChunk
	a (Ljava/util/function/BiConsumer;)V findBlockLightSources
	B ()Ldwo; getSkyLightSources
del net/minecraft/world/level/chunk/LightChunkGetter
	c (II)Ldek; getChunkForLighting
	a (Lcmv;Lhx;)V onLightUpdate
	q ()Lcls; getLevel
dem net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d bits
	e size
	<init> (Lhj;ILdep;Ljava/util/List;)V <init>
	<init> (Lhj;[Ljava/lang/Object;Ldep;II)V <init>
	a (ILhj;Ldep;Ljava/util/List;)Ldeo; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lsf;)V read
	b (Lsf;)V write
	a ()I getSerializedSize
	b ()I getSize
	c ()Ldeo; copy
den net/minecraft/world/level/chunk/MissingPaletteEntryException
	<init> (I)V <init>
deo net/minecraft/world/level/chunk/Palette
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lsf;)V read
	b (Lsf;)V write
	a ()I getSerializedSize
	b ()I getSize
	c ()Ldeo; copy
deo$a net/minecraft/world/level/chunk/Palette$Factory
	create (ILhj;Ldep;Ljava/util/List;)Ldeo; create
dep net/minecraft/world/level/chunk/PaletteResize
	onResize (ILjava/lang/Object;)I onResize
deq net/minecraft/world/level/chunk/PalettedContainer
	a MIN_PALETTE_BITS
	b dummyPaletteResize
	c registry
	d data
	e strategy
	f threadingDetector
	a ()V acquire
	b ()V release
	a (Lhj;Lcom/mojang/serialization/Codec;Ldeq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRW
	b (Lhj;Lcom/mojang/serialization/Codec;Ldeq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRO
	a (Lhj;Lcom/mojang/serialization/Codec;Ldeq$d;Ljava/lang/Object;Lder$b;)Lcom/mojang/serialization/Codec; codec
	<init> (Lhj;Ldeq$d;Ldeq$a;Lans;Ljava/util/List;)V <init>
	<init> (Lhj;Ldeq$d;Ldeq$c;)V <init>
	<init> (Lhj;Ljava/lang/Object;Ldeq$d;)V <init>
	a (Ldeq$c;I)Ldeq$c; createOrReuseData
	onResize (ILjava/lang/Object;)I onResize
	a (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	c (IIILjava/lang/Object;)V set
	b (ILjava/lang/Object;)V set
	a (III)Ljava/lang/Object; get
	a (I)Ljava/lang/Object; get
	a (Ljava/util/function/Consumer;)V getAll
	a (Lsf;)V read
	b (Lsf;)V write
	a (Lhj;Ldeq$d;Lder$a;)Lcom/mojang/serialization/DataResult; unpack
	a (Lhj;Ldeq$d;)Lder$a; pack
	a ([ILjava/util/function/IntUnaryOperator;)V swapPalette
	c ()I getSerializedSize
	a (Ljava/util/function/Predicate;)Z maybeHas
	d ()Ldeq; copy
	e ()Ldeq; recreate
	a (Ldeq$b;)V count
	a (Ldeq$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V lambda$count$13
	a (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V lambda$count$12
	a (Ldeg;I)I lambda$pack$11
	a (Lapl$a;)Ljava/lang/String; lambda$unpack$10
	a (Lhj;Ldeo;I)I lambda$unpack$9
	c (ILjava/lang/Object;)I lambda$unpack$8
	f ()Ljava/lang/String; lambda$unpack$7
	a (Ljava/util/function/Consumer;Ldeo;I)V lambda$getAll$6
	a (Lhj;Ldeq$d;Lder;)Lder$a; lambda$codec$5
	a (Lder$b;Lhj;Ldeq$d;Lder$a;)Lcom/mojang/serialization/DataResult; lambda$codec$4
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$3
	b (Lhj;Ldeq$d;Lder$a;)Lcom/mojang/serialization/DataResult; lambda$codecRO$2
	a (Ldeq;)Lder; lambda$codecRO$1
	d (ILjava/lang/Object;)I lambda$new$0
deq$a net/minecraft/world/level/chunk/PalettedContainer$Configuration
	a factory
	b bits
	<init> (Ldeo$a;I)V <init>
	a (Lhj;Ldep;I)Ldeq$c; createData
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldeo$a; factory
	b ()I bits
deq$b net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	accept (Ljava/lang/Object;I)V accept
deq$c net/minecraft/world/level/chunk/PalettedContainer$Data
	a configuration
	b storage
	c palette
	<init> (Ldeq$a;Lans;Ldeo;)V <init>
	a (Ldeo;Lans;)V copyFrom
	a ()I getSerializedSize
	a (Lsf;)V write
	b ()Ldeq$c; copy
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ldeq$a; configuration
	d ()Lans; storage
	e ()Ldeo; palette
deq$d net/minecraft/world/level/chunk/PalettedContainer$Strategy
	a SINGLE_VALUE_PALETTE_FACTORY
	b LINEAR_PALETTE_FACTORY
	c HASHMAP_PALETTE_FACTORY
	f GLOBAL_PALETTE_FACTORY
	d SECTION_STATES
	e SECTION_BIOMES
	g sizeBits
	<init> (I)V <init>
	a ()I size
	a (III)I getIndex
	a (Lhj;I)Ldeq$a; getConfiguration
	b (Lhj;I)I calculateBitsForSerialization
	<clinit> ()V <clinit>
deq$d$1 net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	<init> (I)V <init>
	a (Lhj;I)Ldeq$a; getConfiguration
deq$d$2 net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	<init> (I)V <init>
	a (Lhj;I)Ldeq$a; getConfiguration
der net/minecraft/world/level/chunk/PalettedContainerRO
	a (III)Ljava/lang/Object; get
	a (Ljava/util/function/Consumer;)V getAll
	b (Lsf;)V write
	c ()I getSerializedSize
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Ldeq$b;)V count
	e ()Ldeq; recreate
	a (Lhj;Ldeq$d;)Lder$a; pack
der$a net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	a paletteEntries
	b storage
	<init> (Ljava/util/List;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; paletteEntries
	b ()Ljava/util/Optional; storage
der$b net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
	read (Lhj;Ldeq$d;Lder$a;)Lcom/mojang/serialization/DataResult; read
des net/minecraft/world/level/chunk/ProtoChunk
	n lightEngine
	o status
	p entities
	q carvingMasks
	r belowZeroRetrogen
	s blockTicks
	t fluidTicks
	<init> (Lclt;Ldev;Lcmo;Lhr;Ldin;)V <init>
	<init> (Lclt;Ldev;[Ldej;Lefr;Lefr;Lcmo;Lhr;Ldin;)V <init>
	o ()Lefw; getBlockTicks
	p ()Lefw; getFluidTicks
	q ()Lddx$a; getTicksForSerialization
	a_ (Lgu;)Ldcb; getBlockState
	b_ (Lgu;)Ldxe; getFluidState
	a (Lgu;Ldcb;Z)Ldcb; setBlockState
	a (Lczn;)V setBlockEntity
	c_ (Lgu;)Lczn; getBlockEntity
	D ()Ljava/util/Map; getBlockEntities
	b (Lqr;)V addEntity
	a (Lbfj;)V addEntity
	a (Ldsa;Ldsi;)V setStartForStructure
	E ()Ljava/util/List; getEntities
	j ()Ldec; getStatus
	a (Ldec;)V setStatus
	getNoiseBiome (III)Lhe; getNoiseBiome
	j (Lgu;)S packOffsetCoordinates
	a (SILclt;)Lgu; unpackOffsetCoordinates
	e (Lgu;)V markPosForPostprocessing
	a (SI)V addPackedPostProcess
	F ()Ljava/util/Map; getBlockEntityNbts
	g (Lgu;)Lqr; getBlockEntityNbtForSaving
	d (Lgu;)V removeBlockEntity
	a (Ldhg$a;)Lddw; getCarvingMask
	b (Ldhg$a;)Lddw; getOrCreateCarvingMask
	a (Ldhg$a;Lddw;)V setCarvingMask
	a (Ldwt;)V setLightEngine
	a (Ldgy;)V setBelowZeroRetrogen
	x ()Ldgy; getBelowZeroRetrogen
	a (Lefr;)Lefo; unpackTicks
	G ()Lefo; unpackBlockTicks
	H ()Lefo; unpackFluidTicks
	z ()Lcmo; getHeightAccessorForGeneration
	c (Ldhg$a;)Lddw; lambda$getOrCreateCarvingMask$0
det net/minecraft/world/level/chunk/SingleValuePalette
	a registry
	b value
	c resizeHandler
	<init> (Lhj;Ldep;Ljava/util/List;)V <init>
	a (ILhj;Ldep;Ljava/util/List;)Ldeo; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (I)Ljava/lang/Object; valueFor
	a (Lsf;)V read
	b (Lsf;)V write
	a ()I getSerializedSize
	b ()I getSize
	c ()Ldeo; copy
deu net/minecraft/world/level/chunk/StructureAccess
	a (Ldsa;)Ldsi; getStartForStructure
	a (Ldsa;Ldsi;)V setStartForStructure
	b (Ldsa;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	a (Ldsa;J)V addReferenceForStructure
	h ()Ljava/util/Map; getAllReferences
	b (Ljava/util/Map;)V setAllReferences
dev net/minecraft/world/level/chunk/UpgradeData
	b LOGGER
	a EMPTY
	c TAG_INDICES
	d DIRECTIONS
	e sides
	f neighborBlockTicks
	g neighborFluidTicks
	h index
	i MAP
	j CHUNKY_FIXERS
	<init> (Lcmo;)V <init>
	<init> (Lqr;Lcmo;)V <init>
	a (Lqr;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V loadTicks
	a (Ldei;)V upgrade
	a (Ldei;Lhb;)V upgradeSides
	a (Ldcb;Lha;Lcmn;Lgu;Lgu;)Ldcb; updateState
	b (Ldei;)V upgradeInside
	a ()Z isEmpty
	b ()Lqr; write
	a (Lqx;Lefs;)V lambda$write$10
	a (Ldxd;)Ljava/lang/String; lambda$write$9
	b (Lqx;Lefs;)V lambda$write$8
	a (Lcpn;)Ljava/lang/String; lambda$write$7
	a (Lcmm;Ldev$a;)V lambda$upgrade$6
	a (Lcmm;Lefs;)V lambda$upgrade$5
	b (Lcmm;Lefs;)V lambda$upgrade$4
	a (Ljava/lang/String;)Ljava/util/Optional; lambda$new$3
	c ()Ljava/util/Optional; lambda$new$2
	b (Ljava/lang/String;)Ljava/util/Optional; lambda$new$1
	d ()Ljava/util/Optional; lambda$new$0
	<clinit> ()V <clinit>
dev$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmn;)V processChunk
dev$b net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	a BLACKLIST
	b DEFAULT
	c CHEST
	d LEAVES
	e STEM_BLOCK
	f DIRECTIONS
	g $VALUES
	values ()[Ldev$b; values
	valueOf (Ljava/lang/String;)Ldev$b; valueOf
	<init> (Ljava/lang/String;I[Lcpn;)V <init>
	<init> (Ljava/lang/String;IZ[Lcpn;)V <init>
	a ()[Ldev$b; $values
	<clinit> ()V <clinit>
dev$b$1 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	<init> (Ljava/lang/String;I[Lcpn;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
dev$b$2 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	<init> (Ljava/lang/String;I[Lcpn;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
dev$b$3 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	<init> (Ljava/lang/String;I[Lcpn;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
dev$b$4 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	g queue
	<init> (Ljava/lang/String;IZ[Lcpn;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
	a (Lcmn;)V processChunk
	a ()Ljava/util/List; lambda$$0
dev$b$5 net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	<init> (Ljava/lang/String;I[Lcpn;)V <init>
	a (Ldcb;Lha;Ldcb;Lcmn;Lgu;Lgu;)Ldcb; updateShape
dew net/minecraft/world/level/chunk/package-info
dex net/minecraft/world/level/chunk/storage/ChunkScanAccess
	a (Lclt;Lrh;)Ljava/util/concurrent/CompletableFuture; scanChunk
dey net/minecraft/world/level/chunk/storage/ChunkSerializer
	h BLOCK_STATE_CODEC
	i LOGGER
	j TAG_UPGRADE_DATA
	k BLOCK_TICKS_TAG
	l FLUID_TICKS_TAG
	a X_POS_TAG
	b Z_POS_TAG
	c HEIGHTMAPS_TAG
	d IS_LIGHT_ON_TAG
	e SECTIONS_TAG
	f BLOCK_LIGHT_TAG
	g SKY_LIGHT_TAG
	<init> ()V <init>
	a (Laif;Lbqz;Lclt;Lqr;)Ldes; read
	a (Lclt;ILjava/lang/String;)V logErrors
	a (Lhr;)Lcom/mojang/serialization/Codec; makeBiomeCodec
	a (Laif;Lddx;)Lqr; write
	a (Laif;Lqr;Lddx$a;)V saveTicks
	a (Lqr;)Ldec$a; getChunkTypeFromTag
	a (Laif;Lqr;)Ldei$c; postLoadChunk
	a (Lqr;Ljava/lang/String;)Lqx; getListOfCompoundsOrNull
	a (Ldsq;Lclt;Ljava/util/Map;Ljava/util/Map;)Lqr; packStructureData
	a (Ldsq;Lqr;J)Ljava/util/Map; unpackStructureStart
	a (Lhs;Lclt;Lqr;)Ljava/util/Map; unpackStructureReferences
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lqx; packOffsets
	a (Lclt;Lacq;J)Z lambda$unpackStructureReferences$11
	a (Lqx;Laif;Lqx;Ldei;)V lambda$postLoadChunk$10
	a (Ldxd;)Ljava/lang/String; lambda$saveTicks$9
	a (Lcpn;)Ljava/lang/String; lambda$saveTicks$8
	a (Lqr;Lrk;)V lambda$write$7
	b (Lqr;Lrk;)V lambda$write$6
	a (Ljava/lang/String;)Ljava/util/Optional; lambda$read$5
	b (Ljava/lang/String;)Ljava/util/Optional; lambda$read$4
	c (Ljava/lang/String;)Ljava/util/Optional; lambda$read$3
	d (Ljava/lang/String;)Ljava/util/Optional; lambda$read$2
	b (Lclt;ILjava/lang/String;)V lambda$read$1
	c (Lclt;ILjava/lang/String;)V lambda$read$0
	<clinit> ()V <clinit>
dez net/minecraft/world/level/chunk/storage/ChunkStorage
	c LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	a worker
	d fixerUpper
	b legacyStructureHandler
	<init> (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V <init>
	a (Lclt;I)Z isOldChunkAround
	a (Lacp;Ljava/util/function/Supplier;Lqr;Ljava/util/Optional;)Lqr; upgradeChunkTag
	a (Lacp;Ljava/util/function/Supplier;)Ldrv; getLegacyStructureHandler
	a (Lqr;Lacp;Ljava/util/Optional;)V injectDatafixingContext
	a (Lqr;)I getVersion
	e (Lclt;)Ljava/util/concurrent/CompletableFuture; read
	a (Lclt;Lqr;)V write
	o ()V flushWorker
	close ()V close
	p ()Ldex; chunkScanner
	a (Lqr;Lacp;)V lambda$injectDatafixingContext$0
dfa net/minecraft/world/level/chunk/storage/EntityStorage
	b LOGGER
	c ENTITIES_TAG
	d POSITION_TAG
	e level
	f worker
	g emptyChunks
	h entityDeserializerQueue
	a fixerUpper
	<init> (Laif;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLjava/util/concurrent/Executor;)V <init>
	a (Lclt;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Lqr;)Lclt; readChunkPos
	a (Lqr;Lclt;)V writeChunkPos
	b (Lclt;)Ldfq; emptyChunk
	a (Ldfq;)V storeEntities
	a (Z)V flush
	b (Lqr;)Lqr; upgradeChunkTag
	close ()V close
	a (Lclt;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$storeEntities$2
	a (Lqx;Lbfj;)V lambda$storeEntities$1
	a (Lclt;Ljava/util/Optional;)Ldfq; lambda$loadEntities$0
	<clinit> ()V <clinit>
dfb net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b shutdownRequested
	c mailbox
	d storage
	e pendingWrites
	f regionCacheForBlender
	g REGION_CACHE_SIZE
	<init> (Ljava/nio/file/Path;ZLjava/lang/String;)V <init>
	a (Lclt;I)Z isOldChunkAround
	a (II)Ljava/util/concurrent/CompletableFuture; getOrCreateOldDataForRegion
	b (II)Ljava/util/concurrent/CompletableFuture; createOldDataForRegion
	a (Lqr;)Z isOldChunk
	a (Lclt;Lqr;)Ljava/util/concurrent/CompletableFuture; store
	a (Lclt;)Ljava/util/concurrent/CompletableFuture; loadAsync
	a (Z)Ljava/util/concurrent/CompletableFuture; synchronize
	a (Lclt;Lrh;)Ljava/util/concurrent/CompletableFuture; scanChunk
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submitTask
	a ()V storePendingChunk
	b ()V tellStorePending
	a (Lclt;Ldfb$a;)V runStore
	close ()V close
	a (Lbcp;)Lbcs$b; lambda$close$16
	b (Lbcp;)V lambda$close$15
	a (Ljava/util/function/Supplier;Lbcp;)Lbcs$b; lambda$submitTask$14
	a (Lbcp;Ljava/util/function/Supplier;)V lambda$submitTask$13
	b (Lclt;Lrh;)Lcom/mojang/datafixers/util/Either; lambda$scanChunk$12
	a (Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$synchronize$11
	c ()Lcom/mojang/datafixers/util/Either; lambda$synchronize$10
	b (Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage; lambda$synchronize$9
	d ()Lcom/mojang/datafixers/util/Either; lambda$synchronize$8
	e ()Lcom/mojang/datafixers/util/Either; lambda$synchronize$7
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$synchronize$6
	a (Ldfb$a;)Ljava/util/concurrent/CompletableFuture; lambda$synchronize$5
	b (Lclt;)Lcom/mojang/datafixers/util/Either; lambda$loadAsync$4
	b (Lclt;Lqr;)Lcom/mojang/datafixers/util/Either; lambda$store$3
	a (Lqr;Lclt;)Ldfb$a; lambda$store$2
	c (II)Ljava/util/BitSet; lambda$createOldDataForRegion$1
	a (Ljava/util/BitSet;Lclt;)V lambda$createOldDataForRegion$0
	<clinit> ()V <clinit>
dfb$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
	<init> (Lqr;)V <init>
dfb$b net/minecraft/world/level/chunk/storage/IOWorker$Priority
	a FOREGROUND
	b BACKGROUND
	c SHUTDOWN
	d $VALUES
	values ()[Ldfb$b; values
	valueOf (Ljava/lang/String;)Ldfb$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldfb$b; $values
	<clinit> ()V <clinit>
dfc net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	<init> ()V <init>
	a (II)V force
	b (II)V free
	a (I)I allocate
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
dfd net/minecraft/world/level/chunk/storage/RegionFile
	c LOGGER
	d SECTOR_BYTES
	a SECTOR_INTS
	e CHUNK_HEADER_SIZE
	f HEADER_OFFSET
	g PADDING_BUFFER
	h EXTERNAL_FILE_EXTENSION
	i EXTERNAL_STREAM_FLAG
	j EXTERNAL_CHUNK_THRESHOLD
	k CHUNK_NOT_PRESENT
	l file
	m externalFileDir
	n version
	o header
	p offsets
	q timestamps
	b usedSectors
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V <init>
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Ldff;Z)V <init>
	f (Lclt;)Ljava/nio/file/Path; getExternalChunkPath
	a (Lclt;)Ljava/io/DataInputStream; getChunkDataInputStream
	b ()I getTimestamp
	a (B)Z isExternalStreamChunk
	b (B)B getExternalChunkVersion
	a (Lclt;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lclt;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (II)I packSectorOffset
	a (I)I getNumSectors
	b (I)I getSectorNumber
	c (I)I sizeToSectors
	b (Lclt;)Z doesChunkExist
	c (Lclt;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	a ()V flush
	d (Lclt;)V clear
	a (Lclt;Ljava/nio/ByteBuffer;)V write
	c ()Ljava/nio/ByteBuffer; createExternalStub
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldfd$b; writeToExternalFile
	d ()V writeHeader
	g (Lclt;)I getOffset
	e (Lclt;)Z hasChunk
	h (Lclt;)I getOffsetIndex
	close ()V close
	e ()V padToFullSector
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V lambda$writeToExternalFile$1
	i (Lclt;)V lambda$write$0
	<clinit> ()V <clinit>
dfd$a net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	b pos
	a this$0
	<init> (Ldfd;Lclt;)V <init>
	close ()V close
dfd$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
	run ()V run
dfe net/minecraft/world/level/chunk/storage/RegionFileStorage
	a ANVIL_EXTENSION
	b MAX_CACHE_SIZE
	c regionCache
	d folder
	e sync
	<init> (Ljava/nio/file/Path;Z)V <init>
	b (Lclt;)Ldfd; getRegionFile
	a (Lclt;)Lqr; read
	a (Lclt;Lrh;)V scanChunk
	a (Lclt;Lqr;)V write
	close ()V close
	a ()V flush
dff net/minecraft/world/level/chunk/storage/RegionFileVersion
	d VERSIONS
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	e id
	f inputWrapper
	g outputWrapper
	<init> (ILdff$a;Ldff$a;)V <init>
	a (Ldff;)Ldff; register
	a (I)Ldff; fromId
	b (I)Z isValidVersion
	a ()I getId
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	b (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$5
	b (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$4
	c (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$3
	c (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$2
	d (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$1
	d (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$0
	<clinit> ()V <clinit>
dff$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	wrap (Ljava/lang/Object;)Ljava/lang/Object; wrap
dfg net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b SECTIONS_TAG
	d worker
	e storage
	f dirty
	g codec
	h factory
	i fixerUpper
	j type
	k registryAccess
	c levelHeightAccessor
	<init> (Ljava/nio/file/Path;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/DataFixer;Laqc;ZLhs;Lcmo;)V <init>
	a (Ljava/util/function/BooleanSupplier;)V tick
	a ()Z hasWork
	c (J)Ljava/util/Optional; get
	d (J)Ljava/util/Optional; getOrLoad
	e (J)Z outsideStoredRange
	f (J)Ljava/lang/Object; getOrCreate
	b (Lclt;)V readColumn
	c (Lclt;)Ljava/util/concurrent/CompletableFuture; tryRead
	a (Lclt;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V readColumn
	d (Lclt;)V writeColumn
	a (Lclt;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; writeColumn
	a (Lclt;I)J getKey
	b (J)V onSectionLoad
	a (J)V setDirty
	a (Lcom/mojang/serialization/Dynamic;)I getVersion
	a (Lclt;)V flush
	close ()V close
	a (Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V lambda$writeColumn$6
	g (J)V lambda$writeColumn$5
	a (JZLjava/lang/Object;)V lambda$readColumn$4
	a (JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional; lambda$readColumn$3
	h (J)V lambda$readColumn$2
	a (Lclt;Ljava/lang/Throwable;)Ljava/util/Optional; lambda$tryRead$1
	i (J)V lambda$getOrCreate$0
	<clinit> ()V <clinit>
dfh net/minecraft/world/level/chunk/storage/package-info
dfi net/minecraft/world/level/dimension/BuiltinDimensionTypes
	a OVERWORLD
	b NETHER
	c END
	d OVERWORLD_CAVES
	e OVERWORLD_EFFECTS
	f NETHER_EFFECTS
	g END_EFFECTS
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; register
	<clinit> ()V <clinit>
dfj net/minecraft/world/level/dimension/DimensionDefaults
	a OVERWORLD_MIN_Y
	b OVERWORLD_LEVEL_HEIGHT
	c OVERWORLD_GENERATION_HEIGHT
	d OVERWORLD_LOGICAL_HEIGHT
	e NETHER_MIN_Y
	f NETHER_LEVEL_HEIGHT
	g NETHER_GENERATION_HEIGHT
	h NETHER_LOGICAL_HEIGHT
	i END_MIN_Y
	j END_LEVEL_HEIGHT
	k END_GENERATION_HEIGHT
	l END_LOGICAL_HEIGHT
	<init> ()V <init>
dfk net/minecraft/world/level/dimension/DimensionType
	k fixedTime
	l hasSkyLight
	m hasCeiling
	n ultraWarm
	o natural
	p coordinateScale
	q bedWorks
	r respawnAnchorWorks
	s minY
	t height
	u logicalHeight
	v infiniburn
	w effectsLocation
	x ambientLight
	y monsterSettings
	a BITS_FOR_Y
	b MIN_HEIGHT
	c Y_SIZE
	d MAX_Y
	e MIN_Y
	f WAY_ABOVE_MAX_Y
	g WAY_BELOW_MIN_Y
	h DIRECT_CODEC
	z MOON_PHASES
	i MOON_BRIGHTNESS_PER_PHASE
	j CODEC
	<init> (Ljava/util/OptionalLong;ZZZZDZZIIILanl;Lacq;FLdfk$a;)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; parseLegacy
	a (Ldfk;Ldfk;)D getTeleportationScale
	a (Lacp;Ljava/nio/file/Path;)Ljava/nio/file/Path; getStorageFolder
	a ()Z hasFixedTime
	a (J)F timeOfDay
	b (J)I moonPhase
	b ()Z piglinSafe
	c ()Z hasRaids
	d ()Lbdc; monsterSpawnLightTest
	e ()I monsterSpawnBlockLightLimit
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Ljava/util/OptionalLong; fixedTime
	g ()Z hasSkyLight
	h ()Z hasCeiling
	i ()Z ultraWarm
	j ()Z natural
	k ()D coordinateScale
	l ()Z bedWorks
	m ()Z respawnAnchorWorks
	n ()I minY
	o ()I height
	p ()I logicalHeight
	q ()Lanl; infiniburn
	r ()Lacq; effectsLocation
	s ()F ambientLight
	t ()Ldfk$a; monsterSettings
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dfk$a net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	b piglinSafe
	c hasRaids
	d monsterSpawnLightTest
	e monsterSpawnBlockLightLimit
	a CODEC
	<init> (ZZLbdc;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Z piglinSafe
	b ()Z hasRaids
	c ()Lbdc; monsterSpawnLightTest
	d ()I monsterSpawnBlockLightLimit
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dfl net/minecraft/world/level/dimension/LevelStem
	e type
	f generator
	a CODEC
	b OVERWORLD
	c NETHER
	d END
	<init> (Lhe;Lddy;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; type
	b ()Lddy; generator
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dfm net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	a START
	b PREPARING_TO_SUMMON_PILLARS
	c SUMMONING_PILLARS
	d SUMMONING_DRAGON
	e END
	f $VALUES
	values ()[Ldfm; values
	valueOf (Ljava/lang/String;)Ldfm; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
	a ()[Ldfm; $values
	<clinit> ()V <clinit>
dfm$1 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
dfm$2 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
dfm$3 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
dfm$4 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
dfm$5 net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	<init> (Ljava/lang/String;I)V <init>
	a (Laif;Ldfn;Ljava/util/List;ILgu;)V tick
dfn net/minecraft/world/level/dimension/end/EndDragonFight
	d LOGGER
	e MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f TIME_BETWEEN_CRYSTAL_SCANS
	a TIME_BETWEEN_PLAYER_SCANS
	g ARENA_SIZE_CHUNKS
	b ARENA_TICKET_LEVEL
	h GATEWAY_COUNT
	i GATEWAY_DISTANCE
	c DRAGON_SPAWN_Y
	j validPlayer
	k dragonEvent
	l level
	m origin
	n gateways
	o exitPortalPattern
	p ticksSinceDragonSeen
	q crystalsAlive
	r ticksSinceCrystalsScanned
	s ticksSinceLastPlayerScan
	t dragonKilled
	u previouslyKilled
	v skipArenaLoadedCheck
	w dragonUUID
	x needsStateScanning
	y portalLocation
	z respawnStage
	A respawnTime
	B respawnCrystals
	<init> (Laif;JLdfn$a;)V <init>
	<init> (Laif;JLdfn$a;Lgu;)V <init>
	a ()V skipArenaLoadedCheck
	b ()Ldfn$a; saveData
	c ()V tick
	j ()V scanState
	k ()V findOrCreateDragon
	a (Ldfm;)V setRespawnStage
	l ()Z hasActiveExitPortal
	m ()Ldcg$b; findExitPortal
	n ()Z isArenaLoaded
	o ()V updatePlayers
	p ()V updateCrystalCount
	a (Lbub;)V setDragonKilled
	d ()V removeAllGateways
	q ()V spawnNewGateway
	a (Lgu;)V spawnNewGateway
	a (Z)V spawnExitPortal
	r ()Lbub; createNewDragon
	b (Lbub;)V updateDragon
	e ()I getCrystalsAlive
	a (Lbua;Lben;)V onCrystalDestroyed
	f ()Z hasPreviouslyKilledDragon
	g ()V tryRespawn
	a (Ljava/util/List;)V respawnDragon
	h ()V resetSpikeCrystals
	i ()Ljava/util/UUID; getDragonUUID
	a (Lgu;Lhe$c;)V lambda$spawnNewGateway$2
	a (Lhr;)Ljava/util/Optional; lambda$spawnNewGateway$1
	a (J)Ljava/util/List; lambda$new$0
	<clinit> ()V <clinit>
dfn$a net/minecraft/world/level/dimension/end/EndDragonFight$Data
	c needsStateScanning
	d dragonKilled
	e previouslyKilled
	f isRespawning
	g dragonUUID
	h exitPortalLocation
	i gateways
	a CODEC
	b DEFAULT
	<init> (ZZZZLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Z needsStateScanning
	b ()Z dragonKilled
	c ()Z previouslyKilled
	d ()Z isRespawning
	e ()Ljava/util/Optional; dragonUUID
	f ()Ljava/util/Optional; exitPortalLocation
	g ()Ljava/util/Optional; gateways
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dfo net/minecraft/world/level/dimension/end/package-info
dfp net/minecraft/world/level/dimension/package-info
dfq net/minecraft/world/level/entity/ChunkEntities
	a pos
	b entities
	<init> (Lclt;Ljava/util/List;)V <init>
	a ()Lclt; getPos
	b ()Ljava/util/stream/Stream; getEntities
	c ()Z isEmpty
dfr net/minecraft/world/level/entity/ChunkStatusUpdateListener
	onChunkStatusChange (Lclt;Lahy;)V onChunkStatusChange
dfs net/minecraft/world/level/entity/EntityAccess
	af ()I getId
	ct ()Ljava/util/UUID; getUUID
	di ()Lgu; blockPosition
	cE ()Leed; getBoundingBox
	a (Ldft;)V setLevelCallback
	cP ()Ljava/util/stream/Stream; getSelfAndPassengers
	cQ ()Ljava/util/stream/Stream; getPassengersAndSelf
	b (Lbfj$c;)V setRemoved
	dG ()Z shouldBeSaved
	dH ()Z isAlwaysTicking
dft net/minecraft/world/level/entity/EntityInLevelCallback
	a NULL
	a ()V onMove
	a (Lbfj$c;)V onRemove
	<clinit> ()V <clinit>
dft$1 net/minecraft/world/level/entity/EntityInLevelCallback$1
	<init> ()V <init>
	a ()V onMove
	a (Lbfj$c;)V onRemove
dfu net/minecraft/world/level/entity/EntityLookup
	a LOGGER
	b byId
	c byUuid
	<init> ()V <init>
	a (Ldfz;Lanr;)V getEntities
	a ()Ljava/lang/Iterable; getAllEntities
	a (Ldfs;)V add
	b (Ldfs;)V remove
	a (I)Ldfs; getEntity
	a (Ljava/util/UUID;)Ldfs; getEntity
	b ()I count
	<clinit> ()V <clinit>
dfv net/minecraft/world/level/entity/EntityPersistentStorage
	a (Lclt;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Ldfq;)V storeEntities
	a (Z)V flush
	close ()V close
dfw net/minecraft/world/level/entity/EntitySection
	a LOGGER
	b storage
	c chunkStatus
	<init> (Ljava/lang/Class;Ldgf;)V <init>
	a (Ldfs;)V add
	b (Ldfs;)Z remove
	a (Leed;Lanr;)Lanr$a; getEntities
	a (Ldfz;Leed;Lanr;)Lanr$a; getEntities
	a ()Z isEmpty
	b ()Ljava/util/stream/Stream; getEntities
	c ()Ldgf; getStatus
	a (Ldgf;)Ldgf; updateChunkStatus
	d ()I size
	<clinit> ()V <clinit>
dfx net/minecraft/world/level/entity/EntitySectionStorage
	a entityClass
	b intialSectionVisibility
	c sections
	d sectionIds
	<init> (Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V <init>
	a (Leed;Lanr;)V forEachAccessibleNonEmptySection
	a (J)Ljava/util/stream/LongStream; getExistingSectionPositionsInChunk
	a (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; getChunkSections
	b (J)Ljava/util/stream/Stream; getExistingSectionsInChunk
	f (J)J getChunkKeyFromSectionKey
	c (J)Ldfw; getOrCreateSection
	d (J)Ldfw; getSection
	g (J)Ldfw; createSection
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksWithExistingSections
	b (Leed;Lanr;)V getEntities
	a (Ldfz;Leed;Lanr;)V getEntities
	e (J)V remove
	b ()I count
	a (Ldfz;Leed;Lanr;Ldfw;)Lanr$a; lambda$getEntities$2
	a (Leed;Lanr;Ldfw;)Lanr$a; lambda$getEntities$1
	a (Lit/unimi/dsi/fastutil/longs/LongSet;J)V lambda$getAllChunksWithExistingSections$0
dfy net/minecraft/world/level/entity/EntityTickList
	a active
	b passive
	c iterated
	<init> ()V <init>
	a ()V ensureActiveIsNotIterated
	a (Lbfj;)V add
	b (Lbfj;)V remove
	c (Lbfj;)Z contains
	a (Ljava/util/function/Consumer;)V forEach
dfz net/minecraft/world/level/entity/EntityTypeTest
	a (Ljava/lang/Class;)Ldfz; forClass
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
	a ()Ljava/lang/Class; getBaseClass
dfz$1 net/minecraft/world/level/entity/EntityTypeTest$1
	a val$cls
	<init> (Ljava/lang/Class;)V <init>
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
	a ()Ljava/lang/Class; getBaseClass
dga net/minecraft/world/level/entity/LevelCallback
	g (Ljava/lang/Object;)V onCreated
	f (Ljava/lang/Object;)V onDestroyed
	e (Ljava/lang/Object;)V onTickingStart
	d (Ljava/lang/Object;)V onTickingEnd
	c (Ljava/lang/Object;)V onTrackingStart
	b (Ljava/lang/Object;)V onTrackingEnd
	a (Ljava/lang/Object;)V onSectionChange
dgb net/minecraft/world/level/entity/LevelEntityGetter
	a (I)Ldfs; get
	a (Ljava/util/UUID;)Ldfs; get
	a ()Ljava/lang/Iterable; getAll
	a (Ldfz;Lanr;)V get
	a (Leed;Ljava/util/function/Consumer;)V get
	a (Ldfz;Leed;Lanr;)V get
dgc net/minecraft/world/level/entity/LevelEntityGetterAdapter
	a visibleEntities
	b sectionStorage
	<init> (Ldfu;Ldfx;)V <init>
	a (I)Ldfs; get
	a (Ljava/util/UUID;)Ldfs; get
	a ()Ljava/lang/Iterable; getAll
	a (Ldfz;Lanr;)V get
	a (Leed;Ljava/util/function/Consumer;)V get
	a (Ldfz;Leed;Lanr;)V get
dgd net/minecraft/world/level/entity/PersistentEntitySectionManager
	a LOGGER
	b knownUuids
	c callbacks
	d permanentStorage
	e visibleEntityStorage
	f sectionStorage
	g entityGetter
	h chunkVisibility
	i chunkLoadStatuses
	j chunksToUnload
	k loadingInbox
	<init> (Ljava/lang/Class;Ldga;Ldfv;)V <init>
	a (JLdfw;)V removeSectionIfEmpty
	b (Ldfs;)Z addEntityUuid
	a (Ldfs;)Z addNewEntity
	a (Ldfs;Z)Z addEntity
	a (Ldfs;Ldgf;)Ldgf; getEffectiveStatus
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	c (Ldfs;)V startTicking
	d (Ldfs;)V stopTicking
	e (Ldfs;)V startTracking
	f (Ldfs;)V stopTracking
	a (Lclt;Lahy;)V updateChunkStatus
	a (Lclt;Ldgf;)V updateChunkStatus
	b (J)V ensureChunkQueuedForLoad
	a (JLjava/util/function/Consumer;)Z storeChunkSections
	c (J)V requestChunkLoad
	d (J)Z processChunkUnload
	g (Ldfs;)V unloadEntity
	f ()V processUnloads
	g ()V processPendingLoads
	a ()V tick
	h ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksToSave
	b ()V autoSave
	c ()V saveAll
	close ()V close
	a (Ljava/util/UUID;)Z isLoaded
	d ()Ldgb; getEntityGetter
	a (Lgu;)Z canPositionTick
	a (Lclt;)Z canPositionTick
	a (J)Z areEntitiesLoaded
	a (Ljava/io/Writer;)V dumpSections
	e ()Ljava/lang/String; gatherStats
	a (Laob;J)V lambda$dumpSections$17
	a (Laob;Ldgd$b;J)V lambda$dumpSections$16
	e (J)Z lambda$saveAll$15
	h (Ldfs;)V lambda$saveAll$14
	f (J)V lambda$autoSave$13
	i (Ldfs;)V lambda$autoSave$12
	j (Ldfs;)V lambda$processPendingLoads$11
	g (J)Z lambda$processUnloads$10
	k (Ldfs;)V lambda$processChunkUnload$9
	a (Lclt;Ljava/lang/Throwable;)Ljava/lang/Void; lambda$requestChunkLoad$8
	a (Ldfw;)Ljava/util/stream/Stream; lambda$storeChunkSections$7
	a (Ldgf;Ldfw;)V lambda$updateChunkStatus$6
	l (Ldfs;)Z lambda$updateChunkStatus$5
	m (Ldfs;)Z lambda$updateChunkStatus$4
	n (Ldfs;)Z lambda$updateChunkStatus$3
	o (Ldfs;)Z lambda$updateChunkStatus$2
	p (Ldfs;)V lambda$addWorldGenChunkEntities$1
	q (Ldfs;)V lambda$addLegacyChunkEntities$0
	<clinit> ()V <clinit>
dgd$a net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	b this$0
	<init> (Ldgd;Ldfs;JLdfw;)V <init>
	a ()V onMove
	a (Ldgf;Ldgf;)V updateStatus
	a (Lbfj$c;)V onRemove
dgd$b net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	a FRESH
	b PENDING
	c LOADED
	d $VALUES
	values ()[Ldgd$b; values
	valueOf (Ljava/lang/String;)Ldgd$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldgd$b; $values
	<clinit> ()V <clinit>
dge net/minecraft/world/level/entity/TransientEntitySectionManager
	a LOGGER
	b callbacks
	c entityStorage
	d sectionStorage
	e tickingChunks
	f entityGetter
	<init> (Ljava/lang/Class;Ldga;)V <init>
	a (Lclt;)V startTicking
	b (Lclt;)V stopTicking
	a ()Ldgb; getEntityGetter
	a (Ldfs;)V addEntity
	b ()I count
	a (JLdfw;)V removeSectionIfEmpty
	c ()Ljava/lang/String; gatherStats
	a (Ldfw;)V lambda$stopTicking$4
	b (Ldfs;)Z lambda$stopTicking$3
	b (Ldfw;)V lambda$startTicking$2
	c (Ldfs;)Z lambda$startTicking$1
	a (J)Ldgf; lambda$new$0
	<clinit> ()V <clinit>
dge$a net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	b this$0
	<init> (Ldge;Ldfs;JLdfw;)V <init>
	a ()V onMove
	a (Lbfj$c;)V onRemove
dgf net/minecraft/world/level/entity/Visibility
	a HIDDEN
	b TRACKED
	c TICKING
	d accessible
	e ticking
	f $VALUES
	values ()[Ldgf; values
	valueOf (Ljava/lang/String;)Ldgf; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	a ()Z isTicking
	b ()Z isAccessible
	a (Lahy;)Ldgf; fromFullChunkStatus
	c ()[Ldgf; $values
	<clinit> ()V <clinit>
dgg net/minecraft/world/level/entity/package-info
dgh net/minecraft/world/level/gameevent/BlockPositionSource
	a CODEC
	c pos
	<init> (Lgu;)V <init>
	a (Lcmm;)Ljava/util/Optional; getPosition
	a ()Ldgq; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldgh;)Lgu; lambda$static$0
	<clinit> ()V <clinit>
dgh$a net/minecraft/world/level/gameevent/BlockPositionSource$Type
	<init> ()V <init>
	a (Lsf;)Ldgh; read
	a (Lsf;Ldgh;)V write
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lsf;Ldgp;)V write
	b (Lsf;)Ldgp; read
dgi net/minecraft/world/level/gameevent/DynamicGameEventListener
	a listener
	b lastSection
	<init> (Ldgn;)V <init>
	a (Laif;)V add
	a ()Ldgn; getListener
	b (Laif;)V remove
	c (Laif;)V move
	a (Lcmp;Lhx;Ljava/util/function/Consumer;)V ifChunkExists
	a (Laif;Lhx;)V lambda$move$3
	a (Ldgo;)V lambda$move$2
	b (Ldgo;)V lambda$move$1
	c (Ldgo;)V lambda$remove$0
dgj net/minecraft/world/level/gameevent/EntityPositionSource
	a CODEC
	c entityOrUuidOrId
	d yOffset
	<init> (Lbfj;F)V <init>
	<init> (Lcom/mojang/datafixers/util/Either;F)V <init>
	a (Lcmm;)Ljava/util/Optional; getPosition
	b (Lcmm;)V resolveEntity
	b ()Ljava/util/UUID; getUuid
	c ()I getId
	a ()Ldgq; getType
	a (Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer; lambda$getId$10
	a (Ljava/util/UUID;)Ljava/lang/Integer; lambda$getId$9
	b (Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID; lambda$getUuid$8
	a (Ljava/lang/Integer;)Ljava/util/UUID; lambda$getUuid$7
	a (Lbfj;)V lambda$resolveEntity$6
	a (Lcmm;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional; lambda$resolveEntity$5
	a (Lcmm;Ljava/util/UUID;)Lbfj; lambda$resolveEntity$4
	b (Lbfj;)Leei; lambda$getPosition$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ljava/util/UUID;Ljava/lang/Float;)Ldgj; lambda$static$1
	a (Ldgj;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dgj$a net/minecraft/world/level/gameevent/EntityPositionSource$Type
	<init> ()V <init>
	a (Lsf;)Ldgj; read
	a (Lsf;Ldgj;)V write
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lsf;Ldgp;)V write
	b (Lsf;)Ldgp; read
dgk net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	b listeners
	c listenersToRemove
	d listenersToAdd
	e processing
	f level
	g sectionY
	h onEmptyAction
	<init> (Laif;ILdgk$a;)V <init>
	a ()Z isEmpty
	a (Ldgn;)V register
	b (Ldgn;)V unregister
	a (Ldgl;Leei;Ldgl$a;Ldgo$a;)Z visitInRangeListeners
	a (Laif;Leei;Ldgn;)Ljava/util/Optional; getPostableListenerPosition
dgk$a net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction
	apply (I)V apply
dgl net/minecraft/world/level/gameevent/GameEvent
	a BLOCK_ACTIVATE
	b BLOCK_ATTACH
	c BLOCK_CHANGE
	d BLOCK_CLOSE
	e BLOCK_DEACTIVATE
	f BLOCK_DESTROY
	g BLOCK_DETACH
	h BLOCK_OPEN
	i BLOCK_PLACE
	j CONTAINER_CLOSE
	k CONTAINER_OPEN
	l DRINK
	m EAT
	n ELYTRA_GLIDE
	o ENTITY_DAMAGE
	p ENTITY_DIE
	q ENTITY_DISMOUNT
	r ENTITY_INTERACT
	s ENTITY_MOUNT
	t ENTITY_PLACE
	u ENTITY_ROAR
	v ENTITY_SHAKE
	w EQUIP
	x EXPLODE
	y FLAP
	z FLUID_PICKUP
	A FLUID_PLACE
	B HIT_GROUND
	C INSTRUMENT_PLAY
	D ITEM_INTERACT_FINISH
	E ITEM_INTERACT_START
	F JUKEBOX_PLAY
	G JUKEBOX_STOP_PLAY
	H LIGHTNING_STRIKE
	I NOTE_BLOCK_PLAY
	J PRIME_FUSE
	K PROJECTILE_LAND
	L PROJECTILE_SHOOT
	M SCULK_SENSOR_TENDRILS_CLICKING
	N SHEAR
	O SHRIEK
	P SPLASH
	Q STEP
	R SWIM
	S TELEPORT
	T RESONATE_1
	U RESONATE_2
	V RESONATE_3
	W RESONATE_4
	X RESONATE_5
	Y RESONATE_6
	Z RESONATE_7
	aa RESONATE_8
	ab RESONATE_9
	ac RESONATE_10
	ad RESONATE_11
	ae RESONATE_12
	af RESONATE_13
	ag RESONATE_14
	ah RESONATE_15
	ai DEFAULT_NOTIFICATION_RADIUS
	aj name
	ak notificationRadius
	al builtInRegistryHolder
	<init> (Ljava/lang/String;I)V <init>
	a ()Ljava/lang/String; getName
	b ()I getNotificationRadius
	a (Ljava/lang/String;)Ldgl; register
	a (Ljava/lang/String;I)Ldgl; register
	toString ()Ljava/lang/String; toString
	c ()Lhe$c; builtInRegistryHolder
	a (Lanl;)Z is
	<clinit> ()V <clinit>
dgl$a net/minecraft/world/level/gameevent/GameEvent$Context
	a sourceEntity
	b affectedState
	<init> (Lbfj;Ldcb;)V <init>
	a (Lbfj;)Ldgl$a; of
	a (Ldcb;)Ldgl$a; of
	a (Lbfj;Ldcb;)Ldgl$a; of
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbfj; sourceEntity
	b ()Ldcb; affectedState
dgl$b net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	a gameEvent
	b source
	c context
	d recipient
	e distanceToRecipient
	<init> (Ldgl;Leei;Ldgl$a;Ldgn;Leei;)V <init>
	a (Ldgl$b;)I compareTo
	a ()Ldgl; gameEvent
	b ()Leei; source
	c ()Ldgl$a; context
	d ()Ldgn; recipient
	compareTo (Ljava/lang/Object;)I compareTo
dgm net/minecraft/world/level/gameevent/GameEventDispatcher
	a level
	<init> (Laif;)V <init>
	a (Ldgl;Leei;Ldgl$a;)V post
	a (Ljava/util/List;)V handleGameEventMessagesInQueue
	a (Ljava/util/List;Ldgl;Leei;Ldgl$a;Ldgn;Leei;)V lambda$post$0
dgn net/minecraft/world/level/gameevent/GameEventListener
	a ()Ldgp; getListenerSource
	b ()I getListenerRadius
	a (Laif;Ldgl;Ldgl$a;Leei;)Z handleGameEvent
	c ()Ldgn$a; getDeliveryMode
dgn$a net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	a UNSPECIFIED
	b BY_DISTANCE
	c $VALUES
	values ()[Ldgn$a; values
	valueOf (Ljava/lang/String;)Ldgn$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldgn$a; $values
	<clinit> ()V <clinit>
dgn$b net/minecraft/world/level/gameevent/GameEventListener$Holder
	d ()Ldgn; getListener
dgo net/minecraft/world/level/gameevent/GameEventListenerRegistry
	a NOOP
	a ()Z isEmpty
	a (Ldgn;)V register
	b (Ldgn;)V unregister
	a (Ldgl;Leei;Ldgl$a;Ldgo$a;)Z visitInRangeListeners
	<clinit> ()V <clinit>
dgo$1 net/minecraft/world/level/gameevent/GameEventListenerRegistry$1
	<init> ()V <init>
	a ()Z isEmpty
	a (Ldgn;)V register
	b (Ldgn;)V unregister
	a (Ldgl;Leei;Ldgl$a;Ldgo$a;)Z visitInRangeListeners
dgo$a net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
	visit (Ldgn;Leei;)V visit
dgp net/minecraft/world/level/gameevent/PositionSource
	b CODEC
	a (Lcmm;)Ljava/util/Optional; getPosition
	a ()Ldgq; getType
	<clinit> ()V <clinit>
dgq net/minecraft/world/level/gameevent/PositionSourceType
	a BLOCK
	b ENTITY
	b (Lsf;)Ldgp; read
	a (Lsf;Ldgp;)V write
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Ldgq;)Ldgq; register
	c (Lsf;)Ldgp; fromNetwork
	a (Ldgp;Lsf;)V toNetwork
	a (Lacq;)Ljava/lang/IllegalArgumentException; lambda$fromNetwork$0
	<clinit> ()V <clinit>
dgr net/minecraft/world/level/gameevent/package-info
dgs net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	b gameEvent
	c distance
	d pos
	e uuid
	f projectileOwnerUuid
	g entity
	a CODEC
	<init> (Ldgl;FLeei;Ljava/util/UUID;Ljava/util/UUID;)V <init>
	<init> (Ldgl;FLeei;Lbfj;)V <init>
	<init> (Ldgl;FLeei;Ljava/util/UUID;Ljava/util/UUID;Lbfj;)V <init>
	a (Lbfj;)Ljava/util/UUID; getProjectileOwner
	a (Laif;)Ljava/util/Optional; getEntity
	b (Laif;)Ljava/util/Optional; getProjectileOwner
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldgl; gameEvent
	b ()F distance
	c ()Leei; pos
	d ()Ljava/util/UUID; uuid
	e ()Ljava/util/UUID; projectileOwnerUuid
	f ()Lbfj; entity
	c (Laif;)Ljava/util/Optional; lambda$getProjectileOwner$7
	b (Lbfj;)Lbzg; lambda$getProjectileOwner$6
	c (Lbfj;)Z lambda$getProjectileOwner$5
	d (Laif;)Ljava/util/Optional; lambda$getEntity$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldgl;Ljava/lang/Float;Leei;Ljava/util/Optional;Ljava/util/Optional;)Ldgs; lambda$static$2
	a (Ldgs;)Ljava/util/Optional; lambda$static$1
	b (Ldgs;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dgt net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	a CODEC
	b currentVibrationData
	<init> (Ljava/util/Optional;J)V <init>
	<init> ()V <init>
	a (Ldgs;J)V addCandidate
	b (Ldgs;J)Z shouldReplaceVibration
	a (J)Ljava/util/Optional; chosenCandidate
	a ()V startOver
	a (JLdgs;)Lorg/apache/commons/lang3/tuple/Pair; lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldgt;)Ljava/lang/Long; lambda$static$1
	b (Ldgt;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dgu net/minecraft/world/level/gameevent/vibrations/VibrationSystem
	d_ RESONANCE_EVENTS
	e_ VIBRATION_FREQUENCY_FOR_EVENT
	gb ()Ldgu$a; getVibrationData
	gc ()Ldgu$d; getVibrationUser
	a_ (Ldgl;)I getGameEventFrequency
	b (I)Ldgl; getResonanceEventByFrequency
	a_ (FI)I getRedstoneStrengthForDistance
	a (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
	<clinit> ()V <clinit>
dgu$a net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data
	a CODEC
	b NBT_TAG_KEY
	c currentVibration
	d travelTimeInTicks
	e selectionStrategy
	f reloadVibrationParticle
	<init> (Ldgs;Ldgt;IZ)V <init>
	<init> ()V <init>
	a ()Ldgt; getSelectionStrategy
	b ()Ldgs; getCurrentVibration
	a (Ldgs;)V setCurrentVibration
	c ()I getTravelTimeInTicks
	a (I)V setTravelTimeInTicks
	d ()V decrementTravelTime
	e ()Z shouldReloadVibrationParticle
	a (Z)V setReloadVibrationParticle
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ljava/util/Optional;Ldgt;Ljava/lang/Integer;)Ldgu$a; lambda$static$1
	a (Ldgu$a;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dgu$b net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener
	a system
	<init> (Ldgu;)V <init>
	a ()Ldgp; getListenerSource
	b ()I getListenerRadius
	a (Laif;Ldgl;Ldgl$a;Leei;)Z handleGameEvent
	b (Laif;Ldgl;Ldgl$a;Leei;)V forceScheduleVibration
	a (Laif;Ldgu$a;Ldgl;Ldgl$a;Leei;Leei;)V scheduleVibration
	a (Lgu;Lgu;)F distanceBetweenInBlocks
	a (Lcmm;Leei;Leei;)Z isOccluded
	a (Ldcb;)Z lambda$isOccluded$1
	a (Laif;Ldgl;Ldgl$a;Leei;Leei;)V lambda$forceScheduleVibration$0
dgu$c net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker
	a (Lcmm;Ldgu$a;Ldgu$d;)V tick
	a (Laif;Ldgu$a;Ldgu$d;)V trySelectAndScheduleVibration
	b (Laif;Ldgu$a;Ldgu$d;)V tryReloadVibrationParticle
	a (Laif;Ldgu$a;Ldgu$d;Ldgs;)Z receiveVibration
	a (Lcmm;Lgu;)Z areAdjacentChunksTicking
	a (Ldgu$a;Ldgu$d;Laif;Ldgs;)V lambda$trySelectAndScheduleVibration$0
dgu$d net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User
	a ()I getListenerRadius
	b ()Ldgp; getPositionSource
	a (Laif;Lgu;Ldgl;Ldgl$a;)Z canReceiveVibration
	a (Laif;Lgu;Ldgl;Lbfj;Lbfj;F)V onReceiveVibration
	c ()Lanl; getListenableEvents
	d ()Z canTriggerAvoidVibration
	f ()Z requiresAdjacentChunksToBeTicking
	a (F)I calculateTravelTimeInTicks
	a (Ldgl;Ldgl$a;)Z isValidVibration
	e ()V onDataChanged
dgv net/minecraft/world/level/gameevent/vibrations/package-info
dgw net/minecraft/world/level/levelgen/Aquifer
	a (Ldho;Lclt;Ldhq;Ldhx;IILdgw$a;)Ldgw; create
	a (Ldgw$a;)Ldgw; createDisabled
	a (Ldhd$b;D)Ldcb; computeSubstance
	a ()Z shouldScheduleFluidUpdate
dgw$1 net/minecraft/world/level/levelgen/Aquifer$1
	a val$fluidRule
	<init> (Ldgw$a;)V <init>
	a (Ldhd$b;D)Ldcb; computeSubstance
	a ()Z shouldScheduleFluidUpdate
dgw$a net/minecraft/world/level/levelgen/Aquifer$FluidPicker
	computeFluid (III)Ldgw$b; computeFluid
dgw$b net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	a fluidLevel
	b fluidType
	<init> (ILdcb;)V <init>
	a (I)Ldcb; at
dgw$c net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	a X_RANGE
	b Y_RANGE
	c Z_RANGE
	d X_SEPARATION
	e Y_SEPARATION
	f Z_SEPARATION
	g X_SPACING
	h Y_SPACING
	i Z_SPACING
	j MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	k FLOWING_UPDATE_SIMULARITY
	l noiseChunk
	m barrierNoise
	n fluidLevelFloodednessNoise
	o fluidLevelSpreadNoise
	p lavaNoise
	q positionalRandomFactory
	r aquiferCache
	s aquiferLocationCache
	t globalFluidPicker
	u erosion
	v depth
	w shouldScheduleFluidUpdate
	x minGridX
	y minGridY
	z minGridZ
	A gridSizeX
	B gridSizeZ
	C SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	<init> (Ldho;Lclt;Ldhq;Ldhx;IILdgw$a;)V <init>
	a (III)I getIndex
	a (Ldhd$b;D)Ldcb; computeSubstance
	a ()Z shouldScheduleFluidUpdate
	a (II)D similarity
	a (Ldhd$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldgw$b;Ldgw$b;)D calculatePressure
	a (I)I gridX
	b (I)I gridY
	c (I)I gridZ
	a (J)Ldgw$b; getAquiferStatus
	b (III)Ldgw$b; computeFluid
	a (IIILdgw$b;IZ)I computeSurfaceLevel
	a (IIII)I computeRandomizedFluidSurfaceLevel
	a (IIILdgw$b;I)Ldcb; computeFluidType
	<clinit> ()V <clinit>
dgx net/minecraft/world/level/levelgen/Beardifier
	a BEARD_KERNEL_RADIUS
	f BEARD_KERNEL_SIZE
	g BEARD_KERNEL
	h pieceIterator
	i junctionIterator
	a (Lcne;Lclt;)Ldgx; forStructuresInChunk
	<init> (Lit/unimi/dsi/fastutil/objects/ObjectListIterator;Lit/unimi/dsi/fastutil/objects/ObjectListIterator;)V <init>
	a (Ldhd$b;)D compute
	a ()D minValue
	b ()D maxValue
	a (III)D getBuryContribution
	a (IIII)D getBeardContribution
	a (I)Z isInKernelRange
	b (III)D computeBeardContribution
	a (IDI)D computeBeardContribution
	a (Lclt;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Ldsi;)V lambda$forStructuresInChunk$2
	a (Ldsa;)Z lambda$forStructuresInChunk$1
	a ([F)V lambda$static$0
	<clinit> ()V <clinit>
dgx$1 net/minecraft/world/level/levelgen/Beardifier$1
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
	<clinit> ()V <clinit>
dgx$a net/minecraft/world/level/levelgen/Beardifier$Rigid
	a box
	b terrainAdjustment
	c groundLevelDelta
	<init> (Ldrs;Ldsl;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldrs; box
	b ()Ldsl; terrainAdjustment
	c ()I groundLevelDelta
dgy net/minecraft/world/level/levelgen/BelowZeroRetrogen
	c EMPTY
	d BITSET_CODEC
	e NON_EMPTY_CHUNK_STATUS
	a CODEC
	f RETAINED_RETROGEN_BIOMES
	b UPGRADE_HEIGHT_ACCESSOR
	g targetStatus
	h missingBedrock
	<init> (Ldec;Ljava/util/Optional;)V <init>
	a (Lqr;)Ldgy; read
	a (Ldes;)V replaceOldBedrock
	b (Ldes;)V applyBedrockMask
	a ()Ldec; targetStatus
	b ()Z hasBedrockHoles
	a (II)Z hasBedrockHole
	a (Lcnn;Lddx;)Lcnn; getBiomeResolver
	a (Lcnn;Ljava/util/function/Predicate;Lddx;IIILcnt$f;)Lhe; lambda$getBiomeResolver$8
	a (Ldes;Lgu;)V lambda$applyBedrockMask$7
	b (Ldes;Lgu;)V lambda$replaceOldBedrock$6
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldgy;)Ljava/util/Optional; lambda$static$4
	a (Ldec;)Lcom/mojang/serialization/DataResult; lambda$static$3
	c ()Ljava/lang/String; lambda$static$2
	a (Ljava/util/BitSet;)Ljava/util/stream/LongStream; lambda$static$1
	a (Ljava/util/stream/LongStream;)Ljava/util/BitSet; lambda$static$0
	<clinit> ()V <clinit>
dgy$1 net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	<init> ()V <init>
	D_ ()I getHeight
	C_ ()I getMinBuildHeight
dgz net/minecraft/world/level/levelgen/BitRandomSource
	b FLOAT_MULTIPLIER
	c DOUBLE_MULTIPLIER
	c (I)I next
	f ()I nextInt
	a (I)I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
dha net/minecraft/world/level/levelgen/Column
	<init> ()V <init>
	a (II)Ldha$b; around
	b (II)Ldha$b; inside
	a (I)Ldha; below
	b (I)Ldha; fromHighest
	c (I)Ldha; above
	d (I)Ldha; fromLowest
	a ()Ldha; line
	a (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Ldha; create
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	a (Ljava/util/OptionalInt;)Ldha; withFloor
	b (Ljava/util/OptionalInt;)Ldha; withCeiling
	a (Lcms;Lgu;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; scan
	a (Lcms;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lgu$a;ILha;)Ljava/util/OptionalInt; scanDirection
dha$a net/minecraft/world/level/levelgen/Column$Line
	a INSTANCE
	<init> ()V <init>
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
dha$b net/minecraft/world/level/levelgen/Column$Range
	a floor
	b ceiling
	<init> (II)V <init>
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	e ()I ceiling
	f ()I floor
	g ()I height
	toString ()Ljava/lang/String; toString
dha$c net/minecraft/world/level/levelgen/Column$Ray
	a edge
	b pointingUp
	<init> (IZ)V <init>
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	toString ()Ljava/lang/String; toString
dhb net/minecraft/world/level/levelgen/DebugLevelSource
	c CODEC
	h BLOCK_MARGIN
	i ALL_BLOCKS
	j GRID_WIDTH
	k GRID_HEIGHT
	d AIR
	e BARRIER
	f HEIGHT
	g BARRIER_HEIGHT
	<init> (Lhe$c;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	a (Laim;Lcne;Ldhy;Lddx;)V buildSurface
	a (Lcng;Lddx;Lcne;)V applyBiomeDecoration
	a (Ljava/util/concurrent/Executor;Ldim;Ldhy;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (IILdhk$a;Lcmo;Ldhy;)I getBaseHeight
	a (IILcmo;Ldhy;)Lcmy; getBaseColumn
	a (Ljava/util/List;Ldhy;Lgu;)V addDebugScreenInfo
	a (II)Ldcb; getBlockStateFor
	a (Laim;JLdhy;Lcnm;Lcne;Lddx;Ldhg$a;)V applyCarvers
	a (Laim;)V spawnOriginalMobs
	f ()I getMinY
	d ()I getGenDepth
	e ()I getSeaLevel
	a (Lcpn;)Ljava/util/stream/Stream; lambda$static$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhc net/minecraft/world/level/levelgen/Density
	a SURFACE
	b UNRECOVERABLY_DENSE
	c UNRECOVERABLY_THIN
	<init> ()V <init>
dhd net/minecraft/world/level/levelgen/DensityFunction
	b DIRECT_CODEC
	c CODEC
	d HOLDER_HELPER_CODEC
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	a (DD)Ldhd; clamp
	d ()Ldhd; abs
	e ()Ldhd; square
	f ()Ldhd; cube
	g ()Ldhd; halfNegative
	h ()Ldhd; quarterNegative
	i ()Ldhd; squeeze
	a (Ldhd;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dhd$a net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	a (I)Ldhd$b; forIndex
	a ([DLdhd;)V fillAllDirectly
dhd$b net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	a ()I blockX
	b ()I blockY
	c ()I blockZ
	d ()Ldim; getBlender
dhd$c net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	b noiseData
	c noise
	a CODEC
	<init> (Lhe;)V <init>
	<init> (Lhe;Ldwh;)V <init>
	a (DDD)D getValue
	a ()D maxValue
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lhe; noiseData
	c ()Ldwh; noise
	a (Lhe;)Ldhd$c; lambda$static$0
	<clinit> ()V <clinit>
dhd$d net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
dhd$e net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	a blockX
	b blockY
	c blockZ
	<init> (III)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I blockX
	b ()I blockY
	c ()I blockZ
dhd$f net/minecraft/world/level/levelgen/DensityFunction$Visitor
	apply (Ldhd;)Ldhd; apply
	a (Ldhd$c;)Ldhd$c; visitNoise
dhe net/minecraft/world/level/levelgen/DensityFunctions
	c CODEC
	a MAX_REASONABLE_NOISE_VALUE
	d NOISE_VALUE_CODEC
	b DIRECT_CODEC
	a (Lhr;)Lcom/mojang/serialization/Codec; bootstrap
	a (Lhr;Ljava/lang/String;Laou;)Lcom/mojang/serialization/Codec; register
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Laou; singleArgumentCodec
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Laou; singleFunctionArgumentCodec
	a (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Laou; doubleFunctionArgumentCodec
	a (Lcom/mojang/serialization/MapCodec;)Laou; makeCodec
	<init> ()V <init>
	a (Ldhd;)Ldhd; interpolated
	b (Ldhd;)Ldhd; flatCache
	c (Ldhd;)Ldhd; cache2d
	d (Ldhd;)Ldhd; cacheOnce
	e (Ldhd;)Ldhd; cacheAllInCell
	a (Lhe;DDDD)Ldhd; mappedNoise
	a (Lhe;DDD)Ldhd; mappedNoise
	a (Lhe;DD)Ldhd; mappedNoise
	a (Ldhd;Ldhd;DLhe;)Ldhd; shiftedNoise2d
	a (Lhe;)Ldhd; noise
	b (Lhe;DD)Ldhd; noise
	a (Lhe;D)Ldhd; noise
	a (Ldhd;DDLdhd;Ldhd;)Ldhd; rangeChoice
	b (Lhe;)Ldhd; shiftA
	c (Lhe;)Ldhd; shiftB
	d (Lhe;)Ldhd; shift
	f (Ldhd;)Ldhd; blendDensity
	a (J)Ldhd; endIslands
	a (Ldhd;Lhe;Ldhe$z$a;)Ldhd; weirdScaledSampler
	a (Ldhd;Ldhd;)Ldhd; add
	b (Ldhd;Ldhd;)Ldhd; mul
	c (Ldhd;Ldhd;)Ldhd; min
	d (Ldhd;Ldhd;)Ldhd; max
	a (Laod;)Ldhd; spline
	a ()Ldhd; zero
	a (D)Ldhd; constant
	a (IIDD)Ldhd; yClampedGradient
	a (Ldhd;Ldhe$k$a;)Ldhd; map
	a (Ldhd;DD)Ldhd; mapFromUnitTo
	b ()Ldhd; blendAlpha
	c ()Ldhd; blendOffset
	a (Ldhd;Ldhd;Ldhd;)Ldhd; lerp
	a (Ldhd;DLdhd;)Ldhd; lerp
	a (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$doubleFunctionArgumentCodec$3
	g (Ldhd;)Lcom/mojang/datafixers/util/Either; lambda$static$2
	a (Lcom/mojang/datafixers/util/Either;)Ldhd; lambda$static$1
	h (Ldhd;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
dhe$1 net/minecraft/world/level/levelgen/DensityFunctions$1
	a $SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Mapped$Type
	b $SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$TwoArgumentSimpleFunction$Type
	c $SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$MulOrAdd$Type
	<clinit> ()V <clinit>
dhe$a net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	e type
	f argument1
	g argument2
	h minValue
	i maxValue
	<init> (Ldhe$y$a;Ldhd;Ldhd;DD)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhe$y$a; type
	k ()Ldhd; argument1
	l ()Ldhd; argument2
dhe$b net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	a INSTANCE
	f $VALUES
	values ()[Ldhe$b; values
	valueOf (Ljava/lang/String;)Ldhe$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	j ()[Ldhe$b; $values
	<clinit> ()V <clinit>
dhe$c net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	e CODEC
	c ()Laou; codec
	<clinit> ()V <clinit>
dhe$d net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	a INSTANCE
	e CODEC
	f $VALUES
	values ()[Ldhe$d; values
	valueOf (Ljava/lang/String;)Ldhe$d; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	j ()[Ldhe$d; $values
	<clinit> ()V <clinit>
dhe$e net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	a input
	e CODEC
	<init> (Ldhd;)V <init>
	a (Ldhd$b;D)D transform
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd; input
	<clinit> ()V <clinit>
dhe$f net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	a INSTANCE
	e CODEC
	f $VALUES
	values ()[Ldhe$f; values
	valueOf (Ljava/lang/String;)Ldhe$f; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	j ()[Ldhe$f; $values
	<clinit> ()V <clinit>
dhe$g net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	e input
	f minValue
	g maxValue
	h DATA_CODEC
	a CODEC
	<init> (Ldhd;DD)V <init>
	a (D)D transform
	a (Ldhd$f;)Ldhd; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	as_ ()Ldhd; input
	a ()D minValue
	b ()D maxValue
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhe$h net/minecraft/world/level/levelgen/DensityFunctions$Constant
	a value
	e CODEC
	f ZERO
	<init> (D)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()D value
	<clinit> ()V <clinit>
dhe$i net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	a CODEC
	e ISLAND_THRESHOLD
	f islandNoise
	<init> (J)V <init>
	a (Ldwk;II)F getHeightValue
	a (Ldhd$b;)D compute
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	<clinit> ()V <clinit>
dhe$j net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	a function
	<init> (Lhe;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Lhe; function
dhe$k net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	a type
	e input
	f minValue
	g maxValue
	<init> (Ldhe$k$a;Ldhd;DD)V <init>
	a (Ldhe$k$a;Ldhd;)Ldhe$k; create
	a (Ldhe$k$a;D)D transform
	a (D)D transform
	b (Ldhd$f;)Ldhe$k; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	k ()Ldhe$k$a; type
	as_ ()Ldhd; input
	a ()D minValue
	b ()D maxValue
	a (Ldhd$f;)Ldhd; mapAll
dhe$k$a net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	a ABS
	b SQUARE
	c CUBE
	d HALF_NEGATIVE
	e QUARTER_NEGATIVE
	f SQUEEZE
	g name
	h codec
	i $VALUES
	values ()[Ldhe$k$a; values
	valueOf (Ljava/lang/String;)Ldhe$k$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Ldhd;)Ldhe$k; lambda$new$0
	a ()[Ldhe$k$a; $values
	<clinit> ()V <clinit>
dhe$l net/minecraft/world/level/levelgen/DensityFunctions$Marker
	a type
	e wrapped
	<init> (Ldhe$l$a;Ldhd;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhe$l$a; type
	k ()Ldhd; wrapped
dhe$l$a net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	a Interpolated
	b FlatCache
	c Cache2D
	d CacheOnce
	e CacheAllInCell
	f name
	g codec
	h $VALUES
	values ()[Ldhe$l$a; values
	valueOf (Ljava/lang/String;)Ldhe$l$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Ldhd;)Ldhe$m; lambda$new$0
	a ()[Ldhe$l$a; $values
	<clinit> ()V <clinit>
dhe$m net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	j ()Ldhe$l$a; type
	k ()Ldhd; wrapped
	c ()Laou; codec
	a (Ldhd$f;)Ldhd; mapAll
dhe$n net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	e specificType
	f input
	g minValue
	h maxValue
	i argument
	<init> (Ldhe$n$a;Ldhd;DDD)V <init>
	j ()Ldhe$y$a; type
	k ()Ldhd; argument1
	l ()Ldhd; argument2
	a (D)D transform
	a (Ldhd$f;)Ldhd; mapAll
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	m ()Ldhe$n$a; specificType
	as_ ()Ldhd; input
	a ()D minValue
	b ()D maxValue
	n ()D argument
dhe$n$a net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	a MUL
	b ADD
	c $VALUES
	values ()[Ldhe$n$a; values
	valueOf (Ljava/lang/String;)Ldhe$n$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldhe$n$a; $values
	<clinit> ()V <clinit>
dhe$o net/minecraft/world/level/levelgen/DensityFunctions$Noise
	f noise
	g xzScale
	h yScale
	a DATA_CODEC
	e CODEC
	<init> (Ldhd$c;DD)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd$c; noise
	k ()D xzScale
	l ()D yScale
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhe$p net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	as_ ()Ldhd; input
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (D)D transform
dhe$q net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	f input
	g minInclusive
	h maxExclusive
	i whenInRange
	j whenOutOfRange
	a DATA_CODEC
	e CODEC
	<init> (Ldhd;DDLdhd;Ldhd;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd; input
	k ()D minInclusive
	l ()D maxExclusive
	m ()Ldhd; whenInRange
	n ()Ldhd; whenOutOfRange
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhe$r net/minecraft/world/level/levelgen/DensityFunctions$Shift
	a offsetNoise
	e CODEC
	<init> (Ldhd$c;)V <init>
	a (Ldhd$b;)D compute
	a (Ldhd$f;)Ldhd; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd$c; offsetNoise
	<clinit> ()V <clinit>
dhe$s net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	a offsetNoise
	e CODEC
	<init> (Ldhd$c;)V <init>
	a (Ldhd$b;)D compute
	a (Ldhd$f;)Ldhd; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd$c; offsetNoise
	<clinit> ()V <clinit>
dhe$t net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	a offsetNoise
	e CODEC
	<init> (Ldhd$c;)V <init>
	a (Ldhd$b;)D compute
	a (Ldhd$f;)Ldhd; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd$c; offsetNoise
	<clinit> ()V <clinit>
dhe$u net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	j ()Ldhd$c; offsetNoise
	a ()D minValue
	b ()D maxValue
	a (DDD)D compute
	a ([DLdhd$a;)V fillArray
dhe$v net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	e shiftX
	f shiftY
	g shiftZ
	h xzScale
	i yScale
	j noise
	k DATA_CODEC
	a CODEC
	<init> (Ldhd;Ldhd;Ldhd;DDLdhd$c;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd; shiftX
	k ()Ldhd; shiftY
	l ()Ldhd; shiftZ
	m ()D xzScale
	n ()D yScale
	o ()Ldhd$c; noise
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhe$w net/minecraft/world/level/levelgen/DensityFunctions$Spline
	e spline
	f SPLINE_CODEC
	g DATA_CODEC
	a CODEC
	<init> (Laod;)V <init>
	a (Ldhd$b;)D compute
	a ()D minValue
	b ()D maxValue
	a ([DLdhd$a;)V fillArray
	a (Ldhd$f;)Ldhd; mapAll
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Laod; spline
	a (Ldhd$f;Ldhe$w$a;)Ldhe$w$a; lambda$mapAll$0
	<clinit> ()V <clinit>
dhe$w$a net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	c function
	b CODEC
	<init> (Lhe;)V <init>
	toString ()Ljava/lang/String; toString
	a (Ldhe$w$b;)F apply
	b ()F minValue
	c ()F maxValue
	a (Ldhd$f;)Ldhe$w$a; mapAll
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; function
	a (Ljava/lang/Object;)F apply
	<clinit> ()V <clinit>
dhe$w$b net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	a context
	<init> (Ldhd$b;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldhd$b; context
dhe$x net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	j ()Ldhd; input
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a (Ldhd$b;D)D transform
dhe$y net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	a LOGGER
	a (Ldhe$y$a;Ldhd;Ldhd;)Ldhe$y; create
	j ()Ldhe$y$a; type
	k ()Ldhd; argument1
	l ()Ldhd; argument2
	c ()Laou; codec
	<clinit> ()V <clinit>
dhe$y$a net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	a ADD
	b MUL
	c MIN
	d MAX
	e codec
	f name
	g $VALUES
	values ()[Ldhe$y$a; values
	valueOf (Ljava/lang/String;)Ldhe$y$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Ldhd;Ldhd;)Ldhe$y; lambda$new$0
	a ()[Ldhe$y$a; $values
	<clinit> ()V <clinit>
dhe$z net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	e input
	f noise
	g rarityValueMapper
	h DATA_CODEC
	a CODEC
	<init> (Ldhd;Ldhd$c;Ldhe$z$a;)V <init>
	a (Ldhd$b;D)D transform
	a (Ldhd$f;)Ldhd; mapAll
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()Ldhd; input
	k ()Ldhd$c; noise
	l ()Ldhe$z$a; rarityValueMapper
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhe$z$a net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	a TYPE1
	b TYPE2
	c CODEC
	d name
	e mapper
	f maxRarity
	g $VALUES
	values ()[Ldhe$z$a; values
	valueOf (Ljava/lang/String;)Ldhe$z$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldhe$z$a; $values
	<clinit> ()V <clinit>
dhe$aa net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	e fromY
	f toY
	g fromValue
	h toValue
	i DATA_CODEC
	a CODEC
	<init> (IIDD)V <init>
	a (Ldhd$b;)D compute
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	j ()I fromY
	k ()I toY
	l ()D fromValue
	m ()D toValue
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhf net/minecraft/world/level/levelgen/FlatLevelSource
	c CODEC
	d settings
	<init> (Ldqd;)V <init>
	a (Lhg;Ldhy;J)Lddz; createState
	a ()Lcom/mojang/serialization/Codec; codec
	g ()Ldqd; settings
	a (Laim;Lcne;Ldhy;Lddx;)V buildSurface
	a (Lcmo;)I getSpawnHeight
	a (Ljava/util/concurrent/Executor;Ldim;Ldhy;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (IILdhk$a;Lcmo;Ldhy;)I getBaseHeight
	a (IILcmo;Ldhy;)Lcmy; getBaseColumn
	a (Ljava/util/List;Ldhy;Lgu;)V addDebugScreenInfo
	a (Laim;JLdhy;Lcnm;Lcne;Lddx;Ldhg$a;)V applyCarvers
	a (Laim;)V spawnOriginalMobs
	f ()I getMinY
	d ()I getGenDepth
	e ()I getSeaLevel
	a (I)[Ldcb; lambda$getBaseColumn$4
	a (Ldcb;)Ldcb; lambda$getBaseColumn$3
	a (Lhg;)Ljava/util/stream/Stream; lambda$createState$2
	a (Lhe$c;)Lhe; lambda$createState$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhg net/minecraft/world/level/levelgen/GenerationStep
	<init> ()V <init>
dhg$a net/minecraft/world/level/levelgen/GenerationStep$Carving
	a AIR
	b LIQUID
	c CODEC
	d name
	e $VALUES
	values ()[Ldhg$a; values
	valueOf (Ljava/lang/String;)Ldhg$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()[Ldhg$a; $values
	<clinit> ()V <clinit>
dhg$b net/minecraft/world/level/levelgen/GenerationStep$Decoration
	a RAW_GENERATION
	b LAKES
	c LOCAL_MODIFICATIONS
	d UNDERGROUND_STRUCTURES
	e SURFACE_STRUCTURES
	f STRONGHOLDS
	g UNDERGROUND_ORES
	h UNDERGROUND_DECORATION
	i FLUID_SPRINGS
	j VEGETAL_DECORATION
	k TOP_LAYER_MODIFICATION
	l CODEC
	m name
	n $VALUES
	values ()[Ldhg$b; values
	valueOf (Ljava/lang/String;)Ldhg$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()[Ldhg$b; $values
	<clinit> ()V <clinit>
dhh net/minecraft/world/level/levelgen/GeodeBlockSettings
	a fillingProvider
	b innerLayerProvider
	c alternateInnerLayerProvider
	d middleLayerProvider
	e outerLayerProvider
	f innerPlacements
	g cannotReplace
	h invalidBlocks
	i CODEC
	<init> (Ldot;Ldot;Ldot;Ldot;Ldot;Ljava/util/List;Lanl;Lanl;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$8
	a (Ldhh;)Lanl; lambda$static$7
	b (Ldhh;)Lanl; lambda$static$6
	c (Ldhh;)Ljava/util/List; lambda$static$5
	d (Ldhh;)Ldot; lambda$static$4
	e (Ldhh;)Ldot; lambda$static$3
	f (Ldhh;)Ldot; lambda$static$2
	g (Ldhh;)Ldot; lambda$static$1
	h (Ldhh;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dhi net/minecraft/world/level/levelgen/GeodeCrackSettings
	a CODEC
	b generateCrackChance
	c baseCrackSize
	d crackPointOffset
	<init> (DDI)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldhi;)Ljava/lang/Integer; lambda$static$2
	b (Ldhi;)Ljava/lang/Double; lambda$static$1
	c (Ldhi;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
dhj net/minecraft/world/level/levelgen/GeodeLayerSettings
	f LAYER_RANGE
	a CODEC
	b filling
	c innerLayer
	d middleLayer
	e outerLayer
	<init> (DDDD)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldhj;)Ljava/lang/Double; lambda$static$3
	b (Ldhj;)Ljava/lang/Double; lambda$static$2
	c (Ldhj;)Ljava/lang/Double; lambda$static$1
	d (Ldhj;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
dhk net/minecraft/world/level/levelgen/Heightmap
	a LOGGER
	b NOT_AIR
	c MATERIAL_MOTION_BLOCKING
	d data
	e isOpaque
	f chunk
	<init> (Lddx;Ldhk$a;)V <init>
	a (Lddx;Ljava/util/Set;)V primeHeightmaps
	a (IIILdcb;)Z update
	a (II)I getFirstAvailable
	b (II)I getHighestTaken
	a (I)I getFirstAvailable
	a (III)V setHeight
	a (Lddx;Ldhk$a;[J)V setRawData
	a ()[J getRawData
	c (II)I getIndex
	a (Ldcb;)Z lambda$static$0
	<clinit> ()V <clinit>
dhk$a net/minecraft/world/level/levelgen/Heightmap$Types
	a WORLD_SURFACE_WG
	b WORLD_SURFACE
	c OCEAN_FLOOR_WG
	d OCEAN_FLOOR
	e MOTION_BLOCKING
	f MOTION_BLOCKING_NO_LEAVES
	g CODEC
	h serializationKey
	i usage
	j isOpaque
	k $VALUES
	values ()[Ldhk$a; values
	valueOf (Ljava/lang/String;)Ldhk$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldhk$b;Ljava/util/function/Predicate;)V <init>
	a ()Ljava/lang/String; getSerializationKey
	b ()Z sendToClient
	d ()Z keepAfterWorldgen
	e ()Ljava/util/function/Predicate; isOpaque
	c ()Ljava/lang/String; getSerializedName
	a (Ldcb;)Z lambda$static$1
	b (Ldcb;)Z lambda$static$0
	f ()[Ldhk$a; $values
	<clinit> ()V <clinit>
dhk$b net/minecraft/world/level/levelgen/Heightmap$Usage
	a WORLDGEN
	b LIVE_WORLD
	c CLIENT
	d $VALUES
	values ()[Ldhk$b; values
	valueOf (Ljava/lang/String;)Ldhk$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldhk$b; $values
	<clinit> ()V <clinit>
dhl net/minecraft/world/level/levelgen/LegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	<init> (J)V <init>
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	c (I)I next
	k ()D nextGaussian
dhl$a net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	a seed
	<init> (J)V <init>
	a (III)Lapf; at
	a (Ljava/lang/String;)Lapf; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dhm net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	a randomSource
	b nextNextGaussian
	c haveNextNextGaussian
	<init> (Lapf;)V <init>
	a ()V reset
	b ()D nextGaussian
dhn net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	c CODEC
	d AIR
	e settings
	f globalFluidPicker
	<init> (Lcno;Lhe;)V <init>
	a (Ldhp;)Ldgw$a; createFluidPicker
	a (Ljava/util/concurrent/Executor;Ldhy;Ldim;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Ldim;Ldhy;Lcne;Lddx;)V doCreateBiomes
	a (Lddx;Lcne;Ldim;Ldhy;)Ldho; createNoiseChunk
	a ()Lcom/mojang/serialization/Codec; codec
	g ()Lhe; generatorSettings
	a (Lacp;)Z stable
	a (IILdhk$a;Lcmo;Ldhy;)I getBaseHeight
	a (IILcmo;Ldhy;)Lcmy; getBaseColumn
	a (Ljava/util/List;Ldhy;Lgu;)V addDebugScreenInfo
	a (Lcmo;Ldhy;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; iterateNoiseColumn
	a (Laim;Lcne;Ldhy;Lddx;)V buildSurface
	a (Lddx;Ldih;Ldhy;Lcne;Lcnm;Lhr;Ldim;)V buildSurface
	a (Laim;JLdhy;Lcnm;Lcne;Lddx;Ldhg$a;)V applyCarvers
	a (Ljava/util/concurrent/Executor;Ldim;Ldhy;Lcne;Lddx;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Ldim;Lcne;Ldhy;Lddx;II)Lddx; doFill
	a (Ldho;IIILdcb;)Ldcb; debugPreliminarySurfaceLevel
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
	a (Laim;)V spawnOriginalMobs
	a (Lcne;Ldim;Ldhy;Lddx;)Ldho; lambda$doFill$13
	a (Ljava/util/Set;Lddx;Ljava/lang/Throwable;)V lambda$fillFromNoise$12
	b (Ldim;Lcne;Ldhy;Lddx;II)Lddx; lambda$fillFromNoise$11
	a (Lclt;Ldhy;)Lcnl; lambda$applyCarvers$10
	a (Lcne;Laim;Ldhy;Lddx;)Ldho; lambda$applyCarvers$9
	a (Ldhy;III)Lhe; lambda$applyCarvers$8
	b (Lcne;Ldim;Ldhy;Lddx;)Ldho; lambda$buildSurface$7
	c (Lcne;Ldim;Ldhy;Lddx;)Ldho; lambda$doCreateBiomes$6
	b (Ldim;Ldhy;Lcne;Lddx;)Lddx; lambda$createBiomes$5
	a (Ldgw$b;ILdgw$b;Ldgw$b;III)Ldgw$b; lambda$createFluidPicker$4
	b (Lhe;)Ldgw$a; lambda$new$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldhn;)Lhe; lambda$static$1
	b (Ldhn;)Lcno; lambda$static$0
	<clinit> ()V <clinit>
dho net/minecraft/world/level/levelgen/NoiseChunk
	a noiseSettings
	b cellCountXZ
	c cellCountY
	d cellNoiseMinY
	e firstCellX
	f firstCellZ
	g firstNoiseX
	h firstNoiseZ
	i interpolators
	j cellCaches
	k wrapped
	l preliminarySurfaceLevel
	m aquifer
	n initialDensityNoJaggedness
	o blockStateRule
	p blender
	q blendAlpha
	r blendOffset
	s beardifier
	t lastBlendingDataPos
	u lastBlendingOutput
	v noiseSizeXZ
	w cellWidth
	x cellHeight
	y interpolating
	z fillingCell
	A cellStartBlockX
	B cellStartBlockY
	C cellStartBlockZ
	D inCellX
	E inCellY
	F inCellZ
	G interpolationCounter
	H arrayInterpolationCounter
	I arrayIndex
	J sliceFillingContextProvider
	a (Lddx;Ldhy;Ldhe$c;Ldhp;Ldgw$a;Ldim;)Ldho; forChunk
	<init> (ILdhy;IILdhs;Ldhe$c;Ldhp;Ldgw$a;Ldim;)V <init>
	a (Ldhq;Ljava/util/List;)Lcnt$f; cachedClimateSampler
	e ()Ldcb; getInterpolatedState
	a ()I blockX
	b ()I blockY
	c ()I blockZ
	a (II)I preliminarySurfaceLevel
	a (J)I computePreliminarySurfaceLevel
	d ()Ldim; getBlender
	a (ZI)V fillSlice
	f ()V initializeForFirstCellX
	b (I)V advanceCellX
	c (I)Ldho; forIndex
	a ([DLdhd;)V fillAllDirectly
	b (II)V selectCellYZ
	a (ID)V updateForY
	b (ID)V updateForX
	c (ID)V updateForZ
	g ()V stopInterpolation
	h ()V swapSlices
	i ()Ldgw; aquifer
	j ()I cellWidth
	k ()I cellHeight
	c (II)Ldim$a; getOrComputeBlendingOutput
	a (Ldhd;)Ldhd; wrap
	b (Ldhd;)Ldhd; wrapNew
	a (I)Ldhd$b; forIndex
	a (DLdho$i;)V lambda$updateForZ$4
	b (DLdho$i;)V lambda$updateForX$3
	c (DLdho$i;)V lambda$updateForY$2
	a (IILdho$i;)V lambda$selectCellYZ$1
	a (Ldhd;Ldhd$b;)Ldcb; lambda$new$0
dho$1 net/minecraft/world/level/levelgen/NoiseChunk$1
	a this$0
	<init> (Ldho;)V <init>
	a (I)Ldhd$b; forIndex
	a ([DLdhd;)V fillAllDirectly
dho$2 net/minecraft/world/level/levelgen/NoiseChunk$2
	a $SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
	<clinit> ()V <clinit>
dho$a net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	a this$0
	<init> (Ldho;)V <init>
	k ()Ldhd; wrapped
	a (Ldhd$f;)Ldhd; mapAll
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
dho$b net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	a this$0
	<init> (Ldho;)V <init>
	k ()Ldhd; wrapped
	a (Ldhd$f;)Ldhd; mapAll
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	a ()D minValue
	b ()D maxValue
	c ()Laou; codec
dho$c net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
	calculate (Ldhd$b;)Ldcb; calculate
dho$d net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	a function
	e lastPos2D
	f lastValue
	<init> (Ldhd;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	k ()Ldhd; wrapped
	j ()Ldhe$l$a; type
dho$e net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	e noiseFiller
	f values
	a this$0
	<init> (Ldho;Ldhd;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	k ()Ldhd; wrapped
	j ()Ldhe$l$a; type
dho$f net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	e function
	f lastCounter
	g lastArrayCounter
	h lastValue
	i lastArray
	a this$0
	<init> (Ldho;Ldhd;)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	k ()Ldhd; wrapped
	j ()Ldhe$l$a; type
dho$g net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	e noiseFiller
	f values
	a this$0
	<init> (Ldho;Ldhd;Z)V <init>
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	k ()Ldhd; wrapped
	j ()Ldhe$l$a; type
dho$h net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	k ()Ldhd; wrapped
	a ()D minValue
	b ()D maxValue
dho$i net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	e slice0
	f slice1
	g noiseFiller
	h noise000
	i noise001
	j noise100
	k noise101
	l noise010
	m noise011
	n noise110
	o noise111
	p valueXZ00
	q valueXZ10
	r valueXZ01
	s valueXZ11
	t valueZ0
	u valueZ1
	v value
	a this$0
	<init> (Ldho;Ldhd;)V <init>
	a (II)[[D allocateSlice
	b (II)V selectCellYZ
	a (D)V updateForY
	b (D)V updateForX
	c (D)V updateForZ
	a (Ldhd$b;)D compute
	a ([DLdhd$a;)V fillArray
	k ()Ldhd; wrapped
	l ()V swapSlices
	j ()Ldhe$l$a; type
dhp net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	j noiseSettings
	k defaultBlock
	l defaultFluid
	m noiseRouter
	n surfaceRule
	o spawnTarget
	p seaLevel
	q disableMobGeneration
	r aquifersEnabled
	s oreVeinsEnabled
	t useLegacyRandomSource
	a DIRECT_CODEC
	b CODEC
	c OVERWORLD
	d LARGE_BIOMES
	e AMPLIFIED
	f NETHER
	g END
	h CAVES
	i FLOATING_ISLANDS
	<init> (Ldhs;Ldcb;Ldcb;Ldhq;Ldib$o;Ljava/util/List;IZZZZ)V <init>
	a ()Z disableMobGeneration
	b ()Z isAquifersEnabled
	c ()Z oreVeinsEnabled
	d ()Ldij$a; getRandomSource
	a (Lnm;)V bootstrap
	b (Lnm;)Ldhp; end
	c (Lnm;)Ldhp; nether
	a (Lnm;ZZ)Ldhp; overworld
	d (Lnm;)Ldhp; caves
	e (Lnm;)Ldhp; floatingIslands
	e ()Ldhp; dummy
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Ldhs; noiseSettings
	g ()Ldcb; defaultBlock
	h ()Ldcb; defaultFluid
	i ()Ldhq; noiseRouter
	j ()Ldib$o; surfaceRule
	k ()Ljava/util/List; spawnTarget
	l ()I seaLevel
	m ()Z aquifersEnabled
	n ()Z useLegacyRandomSource
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhq net/minecraft/world/level/levelgen/NoiseRouter
	b barrierNoise
	c fluidLevelFloodednessNoise
	d fluidLevelSpreadNoise
	e lavaNoise
	f temperature
	g vegetation
	h continents
	i erosion
	j depth
	k ridges
	l initialDensityWithoutJaggedness
	m finalDensity
	n veinToggle
	o veinRidged
	p veinGap
	a CODEC
	<init> (Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;Ldhd;)V <init>
	a (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; field
	a (Ldhd$f;)Ldhq; mapAll
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldhd; barrierNoise
	b ()Ldhd; fluidLevelFloodednessNoise
	c ()Ldhd; fluidLevelSpreadNoise
	d ()Ldhd; lavaNoise
	e ()Ldhd; temperature
	f ()Ldhd; vegetation
	g ()Ldhd; continents
	h ()Ldhd; erosion
	i ()Ldhd; depth
	j ()Ldhd; ridges
	k ()Ldhd; initialDensityWithoutJaggedness
	l ()Ldhd; finalDensity
	m ()Ldhd; veinToggle
	n ()Ldhd; veinRidged
	o ()Ldhd; veinGap
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dhr net/minecraft/world/level/levelgen/NoiseRouterData
	a GLOBAL_OFFSET
	n ORE_THICKNESS
	o VEININESS_FREQUENCY
	p NOODLE_SPACING_AND_STRAIGHTNESS
	q SURFACE_DENSITY_THRESHOLD
	r CHEESE_NOISE_TARGET
	b ISLAND_CHUNK_DISTANCE
	c ISLAND_CHUNK_DISTANCE_SQR
	s BLENDING_FACTOR
	t BLENDING_JAGGEDNESS
	u ZERO
	v Y
	w SHIFT_X
	x SHIFT_Z
	y BASE_3D_NOISE_OVERWORLD
	z BASE_3D_NOISE_NETHER
	A BASE_3D_NOISE_END
	d CONTINENTS
	e EROSION
	f RIDGES
	g RIDGES_FOLDED
	h OFFSET
	i FACTOR
	j JAGGEDNESS
	k DEPTH
	B SLOPED_CHEESE
	l CONTINENTS_LARGE
	m EROSION_LARGE
	C OFFSET_LARGE
	D FACTOR_LARGE
	E JAGGEDNESS_LARGE
	F DEPTH_LARGE
	G SLOPED_CHEESE_LARGE
	H OFFSET_AMPLIFIED
	I FACTOR_AMPLIFIED
	J JAGGEDNESS_AMPLIFIED
	K DEPTH_AMPLIFIED
	L SLOPED_CHEESE_AMPLIFIED
	M SLOPED_CHEESE_END
	N SPAGHETTI_ROUGHNESS_FUNCTION
	O ENTRANCES
	P NOODLE
	Q PILLARS
	R SPAGHETTI_2D_THICKNESS_MODULATOR
	S SPAGHETTI_2D
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lnm;)Lhe; bootstrap
	a (Lnm;Lhf;Ldhd;Lhe;Lhe;Lacp;Lacp;Lacp;Lacp;Lacp;Z)V registerTerrainNoises
	a (Lnm;Lacp;Ldhd;)Ldhd; registerAndWrap
	a (Lhf;Lacp;)Ldhd; getFunction
	a (Ldhd;)Ldhd; peaksAndValleys
	a (F)F peaksAndValleys
	b (Lhf;)Ldhd; spaghettiRoughnessFunction
	d (Lhf;Lhf;)Ldhd; entrances
	e (Lhf;Lhf;)Ldhd; noodle
	c (Lhf;)Ldhd; pillars
	f (Lhf;Lhf;)Ldhd; spaghetti2D
	a (Lhf;Lhf;Ldhd;)Ldhd; underground
	b (Ldhd;)Ldhd; postProcess
	a (Lhf;Lhf;ZZ)Ldhq; overworld
	b (Lhf;Lhf;Ldhd;)Ldhq; noNewCaves
	a (ZLdhd;)Ldhd; slideOverworld
	a (Lhf;II)Ldhd; slideNetherLike
	a (Ldhd;II)Ldhd; slideEndLike
	a (Lhf;Lhf;)Ldhq; nether
	b (Lhf;Lhf;)Ldhq; caves
	c (Lhf;Lhf;)Ldhq; floatingIslands
	c (Ldhd;)Ldhd; slideEnd
	a (Lhf;)Ldhq; end
	a ()Ldhq; none
	a (Ldhd;Ldhd;)Ldhd; splineWithBlending
	b (Ldhd;Ldhd;)Ldhd; noiseGradientDensity
	a (Ldhd;Ldhd;III)Ldhd; yLimitedInterpolatable
	a (Ldhd;IIIIDIID)Ldhd; slide
	a (Ldhu$a;)I lambda$overworld$1
	b (Ldhu$a;)I lambda$overworld$0
	<clinit> ()V <clinit>
dhr$a net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	<init> ()V <init>
	a (D)D getSphaghettiRarity2D
	b (D)D getSpaghettiRarity3D
dhs net/minecraft/world/level/levelgen/NoiseSettings
	g minY
	h height
	i noiseSizeHorizontal
	j noiseSizeVertical
	a CODEC
	b OVERWORLD_NOISE_SETTINGS
	c NETHER_NOISE_SETTINGS
	d END_NOISE_SETTINGS
	e CAVES_NOISE_SETTINGS
	f FLOATING_ISLANDS_NOISE_SETTINGS
	<init> (IIII)V <init>
	a (Ldhs;)Lcom/mojang/serialization/DataResult; guardY
	a (IIII)Ldhs; create
	a ()I getCellHeight
	b ()I getCellWidth
	a (Lcmo;)Ldhs; clampToHeightAccessor
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()I minY
	d ()I height
	e ()I noiseSizeHorizontal
	f ()I noiseSizeVertical
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$create$4
	g ()Ljava/lang/String; lambda$guardY$3
	h ()Ljava/lang/String; lambda$guardY$2
	i ()Ljava/lang/String; lambda$guardY$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dht net/minecraft/world/level/levelgen/Noises
	a TEMPERATURE
	b VEGETATION
	c CONTINENTALNESS
	d EROSION
	e TEMPERATURE_LARGE
	f VEGETATION_LARGE
	g CONTINENTALNESS_LARGE
	h EROSION_LARGE
	i RIDGE
	j SHIFT
	k AQUIFER_BARRIER
	l AQUIFER_FLUID_LEVEL_FLOODEDNESS
	m AQUIFER_LAVA
	n AQUIFER_FLUID_LEVEL_SPREAD
	o PILLAR
	p PILLAR_RARENESS
	q PILLAR_THICKNESS
	r SPAGHETTI_2D
	s SPAGHETTI_2D_ELEVATION
	t SPAGHETTI_2D_MODULATOR
	u SPAGHETTI_2D_THICKNESS
	v SPAGHETTI_3D_1
	w SPAGHETTI_3D_2
	x SPAGHETTI_3D_RARITY
	y SPAGHETTI_3D_THICKNESS
	z SPAGHETTI_ROUGHNESS
	A SPAGHETTI_ROUGHNESS_MODULATOR
	B CAVE_ENTRANCE
	C CAVE_LAYER
	D CAVE_CHEESE
	E ORE_VEININESS
	F ORE_VEIN_A
	G ORE_VEIN_B
	H ORE_GAP
	I NOODLE
	J NOODLE_THICKNESS
	K NOODLE_RIDGE_A
	L NOODLE_RIDGE_B
	M JAGGED
	N SURFACE
	O SURFACE_SECONDARY
	P CLAY_BANDS_OFFSET
	Q BADLANDS_PILLAR
	R BADLANDS_PILLAR_ROOF
	S BADLANDS_SURFACE
	T ICEBERG_PILLAR
	U ICEBERG_PILLAR_ROOF
	V ICEBERG_SURFACE
	W SWAMP
	X CALCITE
	Y GRAVEL
	Z POWDER_SNOW
	aa PACKED_ICE
	ab ICE
	ac SOUL_SAND_LAYER
	ad GRAVEL_LAYER
	ae PATCH
	af NETHERRACK
	ag NETHER_WART
	ah NETHER_STATE_SELECTOR
	<init> ()V <init>
	a (Ljava/lang/String;)Lacp; createKey
	a (Lhf;Ldhx;Lacp;)Ldwh; instantiate
	<clinit> ()V <clinit>
dhu net/minecraft/world/level/levelgen/OreVeinifier
	a VEININESS_THRESHOLD
	b EDGE_ROUNDOFF_BEGIN
	c MAX_EDGE_ROUNDOFF
	d VEIN_SOLIDNESS
	e MIN_RICHNESS
	f MAX_RICHNESS
	g MAX_RICHNESS_THRESHOLD
	h CHANCE_OF_RAW_ORE_BLOCK
	i SKIP_ORE_IF_GAP_NOISE_IS_BELOW
	<init> ()V <init>
	a (Ldhd;Ldhd;Ldhd;Ldhx;)Ldho$c; create
	a (Ldhd;Ldcb;Ldhx;Ldhd;Ldhd;Ldhd$b;)Ldcb; lambda$create$0
dhu$a net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	a COPPER
	b IRON
	e ore
	f rawOreBlock
	g filler
	c minY
	d maxY
	h $VALUES
	values ()[Ldhu$a; values
	valueOf (Ljava/lang/String;)Ldhu$a; valueOf
	<init> (Ljava/lang/String;ILdcb;Ldcb;Ldcb;II)V <init>
	a ()[Ldhu$a; $values
	<clinit> ()V <clinit>
dhv net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	<init> ()V <init>
	a (Laif;ZZ)I tick
	a (Laif;Lgu;Lapf;Z)Z spawnPatrolMember
dhw net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	<init> ()V <init>
	a (Laif;ZZ)I tick
dhx net/minecraft/world/level/levelgen/PositionalRandomFactory
	a (Lgu;)Lapf; at
	a (Lacq;)Lapf; fromHashOf
	a (Ljava/lang/String;)Lapf; fromHashOf
	a (III)Lapf; at
	a (Ljava/lang/StringBuilder;)V parityConfigString
dhy net/minecraft/world/level/levelgen/RandomState
	a random
	b noises
	c router
	d sampler
	e surfaceSystem
	f aquiferRandom
	g oreRandom
	h noiseIntances
	i positionalRandoms
	a (Lhf$a;Lacp;J)Ldhy; create
	a (Ldhp;Lhf;J)Ldhy; create
	<init> (Ldhp;Lhf;J)V <init>
	a (Lacp;)Ldwh; getOrCreateNoise
	a (Lacq;)Ldhx; getOrCreateRandomFactory
	a ()Ldhq; router
	b ()Lcnt$f; sampler
	c ()Ldic; surfaceSystem
	d ()Ldhx; aquiferRandom
	e ()Ldhx; oreRandom
	a (Lacq;Lacq;)Ldhx; lambda$getOrCreateRandomFactory$1
	a (Lacp;Lacp;)Ldwh; lambda$getOrCreateNoise$0
dhy$1 net/minecraft/world/level/levelgen/RandomState$1
	b wrapped
	a this$0
	<init> (Ldhy;)V <init>
	a (Ldhd;)Ldhd; wrapNew
	apply (Ldhd;)Ldhd; apply
dhy$a net/minecraft/world/level/levelgen/RandomState$1NoiseWiringHelper
	d wrapped
	a val$seed
	b val$useLegacyInit
	c this$0
	<init> (Ldhy;JZ)V <init>
	a (J)Lapf; newLegacyInstance
	a (Ldhd$c;)Ldhd$c; visitNoise
	a (Ldhd;)Ldhd; wrapNew
	apply (Ldhd;)Ldhd; apply
dhz net/minecraft/world/level/levelgen/RandomSupport
	a GOLDEN_RATIO_64
	b SILVER_RATIO_64
	c MD5_128
	d SEED_UNIQUIFIER
	<init> ()V <init>
	a (J)J mixStafford13
	b (J)Ldhz$a; upgradeSeedTo128bitUnmixed
	c (J)Ldhz$a; upgradeSeedTo128bit
	a (Ljava/lang/String;)Ldhz$a; seedFromHashOf
	a ()J generateUniqueSeed
	d (J)J lambda$generateUniqueSeed$0
	<clinit> ()V <clinit>
dhz$a net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	a seedLo
	b seedHi
	<init> (JJ)V <init>
	a (JJ)Ldhz$a; xor
	a (Ldhz$a;)Ldhz$a; xor
	a ()Ldhz$a; mixed
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()J seedLo
	c ()J seedHi
dia net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	<init> (J)V <init>
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	c (I)I next
	k ()D nextGaussian
dib net/minecraft/world/level/levelgen/SurfaceRules
	a ON_FLOOR
	b UNDER_FLOOR
	c DEEP_UNDER_FLOOR
	d VERY_DEEP_UNDER_FLOOR
	e ON_CEILING
	f UNDER_CEILING
	<init> ()V <init>
	a (IZLdqv;)Ldib$f; stoneDepthCheck
	a (IZILdqv;)Ldib$f; stoneDepthCheck
	a (Ldib$f;)Ldib$f; not
	a (Ldie;I)Ldib$f; yBlockCheck
	b (Ldie;I)Ldib$f; yStartCheck
	a (II)Ldib$f; waterBlockCheck
	b (II)Ldib$f; waterStartCheck
	a ([Lacp;)Ldib$f; isBiome
	a (Ljava/util/List;)Ldib$c; isBiome
	a (Lacp;D)Ldib$f; noiseCondition
	a (Lacp;DD)Ldib$f; noiseCondition
	a (Ljava/lang/String;Ldie;Ldie;)Ldib$f; verticalGradient
	a ()Ldib$f; steep
	b ()Ldib$f; hole
	c ()Ldib$f; abovePreliminarySurface
	d ()Ldib$f; temperature
	a (Ldib$f;Ldib$o;)Ldib$o; ifTrue
	a ([Ldib$o;)Ldib$o; sequence
	a (Ldcb;)Ldib$o; state
	e ()Ldib$o; bandlands
	a (Lhr;Ljava/lang/String;Laou;)Lcom/mojang/serialization/Codec; register
	<clinit> ()V <clinit>
dib$a net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	a INSTANCE
	c CODEC
	d $VALUES
	values ()[Ldib$a; values
	valueOf (Ljava/lang/String;)Ldib$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	b ()[Ldib$a; $values
	<clinit> ()V <clinit>
dib$b net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	a INSTANCE
	c CODEC
	d $VALUES
	values ()[Ldib$b; values
	valueOf (Ljava/lang/String;)Ldib$b; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$u; apply
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	b ()[Ldib$b; $values
	<clinit> ()V <clinit>
dib$c net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	a CODEC
	c biomes
	d biomeNameTest
	<init> (Ljava/util/List;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Ldib$c;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dib$c$a net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	a val$ruleContext
	b this$0
	<init> (Ldib$c;Ldib$g;)V <init>
	a ()Z compute
dib$d net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	a resultState
	c rule
	d CODEC
	<init> (Ldcb;)V <init>
	<init> (Ldcb;Ldib$r;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$u; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldcb; resultState
	c ()Ldib$r; rule
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	<clinit> ()V <clinit>
dib$e net/minecraft/world/level/levelgen/SurfaceRules$Condition
	b ()Z test
dib$f net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	b CODEC
	a (Lhr;)Lcom/mojang/serialization/Codec; bootstrap
	a ()Laou; codec
	a (Ldib$f;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
dib$g net/minecraft/world/level/levelgen/SurfaceRules$Context
	a HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	b SURFACE_CELL_BITS
	c SURFACE_CELL_SIZE
	d SURFACE_CELL_MASK
	e system
	f temperature
	g steep
	h hole
	i abovePreliminarySurface
	j randomState
	k chunk
	l noiseChunk
	m biomeGetter
	n context
	o lastPreliminarySurfaceCellOrigin
	p preliminarySurfaceCache
	q lastUpdateXZ
	r blockX
	s blockZ
	t surfaceDepth
	u lastSurfaceDepth2Update
	v surfaceSecondary
	w lastMinSurfaceLevelUpdate
	x minSurfaceLevel
	y lastUpdateY
	z pos
	A biome
	B blockY
	C waterHeight
	D stoneDepthBelow
	E stoneDepthAbove
	<init> (Ldic;Ldhy;Lddx;Ldho;Ljava/util/function/Function;Lhr;Ldih;)V <init>
	a (II)V updateXZ
	a (IIIIII)V updateY
	a ()D getSurfaceSecondary
	a (I)I blockCoordToSurfaceCell
	b (I)I surfaceCellToBlockCoord
	b ()I getMinSurfaceLevel
	a (III)Lhe; lambda$updateY$0
dib$g$a net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	a this$0
	<init> (Ldib$g;)V <init>
	b ()Z test
dib$g$b net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	<init> (Ldib$g;)V <init>
	a ()Z compute
dib$g$c net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	<init> (Ldib$g;)V <init>
	a ()Z compute
dib$g$d net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	<init> (Ldib$g;)V <init>
	a ()Z compute
dib$h net/minecraft/world/level/levelgen/SurfaceRules$Hole
	a INSTANCE
	c CODEC
	d $VALUES
	values ()[Ldib$h; values
	valueOf (Ljava/lang/String;)Ldib$h; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	b ()[Ldib$h; $values
	<clinit> ()V <clinit>
dib$i net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	c context
	a lastUpdate
	d result
	<init> (Ldib$g;)V <init>
	b ()Z test
	c ()J getContextLastUpdate
	a ()Z compute
dib$j net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	<init> (Ldib$g;)V <init>
	c ()J getContextLastUpdate
dib$k net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	<init> (Ldib$g;)V <init>
	c ()J getContextLastUpdate
dib$l net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	a noise
	c minThreshold
	d maxThreshold
	e CODEC
	<init> (Lacp;DD)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lacp; noise
	c ()D minThreshold
	d ()D maxThreshold
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$l$a net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	a val$ruleContext
	b val$noise
	e this$0
	<init> (Ldib$l;Ldib$g;Ldwh;)V <init>
	a ()Z compute
dib$m net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	a target
	<init> (Ldib$e;)V <init>
	b ()Z test
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldib$e; target
dib$n net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	a target
	c CODEC
	<init> (Ldib$f;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldib$f; target
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	<clinit> ()V <clinit>
dib$o net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	b CODEC
	a (Lhr;)Lcom/mojang/serialization/Codec; bootstrap
	a ()Laou; codec
	a (Ldib$o;)Lcom/mojang/serialization/Codec; lambda$static$0
	<clinit> ()V <clinit>
dib$p net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	a rules
	<init> (Ljava/util/List;)V <init>
	tryApply (III)Ldcb; tryApply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; rules
dib$q net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	a sequence
	c CODEC
	<init> (Ljava/util/List;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$u; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/List; sequence
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	<clinit> ()V <clinit>
dib$r net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	a state
	<init> (Ldcb;)V <init>
	tryApply (III)Ldcb; tryApply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldcb; state
dib$s net/minecraft/world/level/levelgen/SurfaceRules$Steep
	a INSTANCE
	c CODEC
	d $VALUES
	values ()[Ldib$s; values
	valueOf (Ljava/lang/String;)Ldib$s; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	b ()[Ldib$s; $values
	<clinit> ()V <clinit>
dib$t net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	a offset
	c addSurfaceDepth
	d secondaryDepthRange
	e surfaceType
	f CODEC
	<init> (IZILdqv;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I offset
	c ()Z addSurfaceDepth
	d ()I secondaryDepthRange
	e ()Ldqv; surfaceType
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$t$a net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	a val$ruleContext
	b val$ceiling
	e this$0
	<init> (Ldib$t;Ldib$g;Z)V <init>
	a ()Z compute
dib$u net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
	tryApply (III)Ldcb; tryApply
dib$v net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	a INSTANCE
	c CODEC
	d $VALUES
	values ()[Ldib$v; values
	valueOf (Ljava/lang/String;)Ldib$v; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	b ()[Ldib$v; $values
	<clinit> ()V <clinit>
dib$w net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	a condition
	b followup
	<init> (Ldib$e;Ldib$u;)V <init>
	tryApply (III)Ldcb; tryApply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldib$e; condition
	b ()Ldib$u; followup
dib$x net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	a ifTrue
	c thenRun
	d CODEC
	<init> (Ldib$f;Ldib$o;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$u; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldib$f; ifTrue
	c ()Ldib$o; thenRun
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$y net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	a randomName
	c trueAtAndBelow
	d falseAtAndAbove
	e CODEC
	<init> (Lacq;Ldie;Ldie;)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lacq; randomName
	c ()Ldie; trueAtAndBelow
	d ()Ldie; falseAtAndAbove
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$y$a net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	a val$ruleContext
	b val$trueAtAndBelow
	e val$falseAtAndAbove
	f val$randomFactory
	g this$0
	<init> (Ldib$y;Ldib$g;IILdhx;)V <init>
	a ()Z compute
dib$z net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	a offset
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	<init> (IIZ)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()I offset
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$z$a net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	a val$ruleContext
	b this$0
	<init> (Ldib$z;Ldib$g;)V <init>
	a ()Z compute
dib$aa net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	a anchor
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	<init> (Ldie;IZ)V <init>
	a ()Laou; codec
	a (Ldib$g;)Ldib$e; apply
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldie; anchor
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
	apply (Ljava/lang/Object;)Ljava/lang/Object; apply
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dib$aa$a net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	a val$ruleContext
	b this$0
	<init> (Ldib$aa;Ldib$g;)V <init>
	a ()Z compute
dic net/minecraft/world/level/levelgen/SurfaceSystem
	a WHITE_TERRACOTTA
	b ORANGE_TERRACOTTA
	c TERRACOTTA
	d YELLOW_TERRACOTTA
	e BROWN_TERRACOTTA
	f RED_TERRACOTTA
	g LIGHT_GRAY_TERRACOTTA
	h PACKED_ICE
	i SNOW_BLOCK
	j defaultBlock
	k seaLevel
	l clayBands
	m clayBandsOffsetNoise
	n badlandsPillarNoise
	o badlandsPillarRoofNoise
	p badlandsSurfaceNoise
	q icebergPillarNoise
	r icebergPillarRoofNoise
	s icebergSurfaceNoise
	t noiseRandom
	u surfaceNoise
	v surfaceSecondaryNoise
	<init> (Ldhy;Ldcb;ILdhx;)V <init>
	a (Ldhy;Lcnm;Lhr;ZLdih;Lddx;Ldho;Ldib$o;)V buildSurface
	a (II)I getSurfaceDepth
	b (II)D getSurfaceSecondary
	a (Ldcb;)Z isStone
	a (Ldib$o;Ldjk;Ljava/util/function/Function;Lddx;Ldho;Lgu;Z)Ljava/util/Optional; topMaterial
	a (Lddu;IIILcmo;)V erodedBadlandsExtension
	a (ILcnk;Lddu;Lgu$a;III)V frozenOceanExtension
	a (Lapf;)[Ldcb; generateBands
	a (Lapf;[Ldcb;ILdcb;)V makeBands
	a (III)Ldcb; getBand
	<clinit> ()V <clinit>
dic$1 net/minecraft/world/level/levelgen/SurfaceSystem$1
	a val$protoChunk
	b val$columnPos
	c val$chunkPos
	d this$0
	<init> (Ldic;Lddx;Lgu$a;Lclt;)V <init>
	a (I)Ldcb; getBlock
	a (ILdcb;)V setBlock
	toString ()Ljava/lang/String; toString
did net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	<init> (J)V <init>
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	c (I)I next
	k ()D nextGaussian
die net/minecraft/world/level/levelgen/VerticalAnchor
	a CODEC
	b BOTTOM
	c TOP
	a (I)Ldie; absolute
	b (I)Ldie; aboveBottom
	c (I)Ldie; belowTop
	a ()Ldie; bottom
	b ()Ldie; top
	a (Lcom/mojang/datafixers/util/Either;)Ldie; merge
	a (Ldie;)Lcom/mojang/datafixers/util/Either; split
	a (Ldih;)I resolveY
	b (Lcom/mojang/datafixers/util/Either;)Ljava/lang/Record; lambda$merge$0
	<clinit> ()V <clinit>
die$a net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	e offset
	d CODEC
	<init> (I)V <init>
	a (Ldih;)I resolveY
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()I offset
	<clinit> ()V <clinit>
die$b net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	e y
	d CODEC
	<init> (I)V <init>
	a (Ldih;)I resolveY
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()I y
	<clinit> ()V <clinit>
die$c net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	e offset
	d CODEC
	<init> (I)V <init>
	a (Ldih;)I resolveY
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()I offset
	<clinit> ()V <clinit>
dif net/minecraft/world/level/levelgen/WorldDimensions
	b dimensions
	a CODEC
	c BUILTIN_ORDER
	d VANILLA_DIMENSION_COUNT
	<init> (Lhr;)V <init>
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; keysInOrder
	a (Lhs;Lddy;)Ldif; replaceOverworldGenerator
	a (Lhr;Lhr;Lddy;)Lhr; withOverworld
	a (Lhr;Lhe;Lddy;)Lhr; withOverworld
	a ()Lddy; overworld
	a (Lacp;)Ljava/util/Optional; get
	b ()Lcom/google/common/collect/ImmutableSet; levels
	c ()Z isDebug
	b (Lhr;)Ldzc$a; specialWorldProperty
	a (Lacp;Ldfl;)Lcom/mojang/serialization/Lifecycle; checkStability
	b (Lacp;Ldfl;)Z isVanillaLike
	a (Ldfl;)Z isStableOverworld
	b (Ldfl;)Z isStableNether
	c (Ldfl;)Z isStableEnd
	a (Lhr;)Ldif$b; bake
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	d ()Lhr; dimensions
	a (Lia;Ldif$a;)V lambda$bake$6
	a (Lhr;Ljava/util/List;Lacp;)V lambda$bake$5
	a (Ljava/util/List;Lacp;Ldfl;)V lambda$bake$4
	b (Lacp;)Ljava/util/Optional; lambda$bake$3
	d (Ldfl;)Ldzc$a; lambda$specialWorldProperty$2
	c (Lacp;)Z lambda$keysInOrder$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dif$a net/minecraft/world/level/levelgen/WorldDimensions$1Entry
	a key
	b value
	<init> (Lacp;Ldfl;)V <init>
	c ()Lcom/mojang/serialization/Lifecycle; lifecycle
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lacp; key
	b ()Ldfl; value
dif$b net/minecraft/world/level/levelgen/WorldDimensions$Complete
	a dimensions
	b specialWorldProperty
	<init> (Lhr;Ldzc$a;)V <init>
	a ()Lcom/mojang/serialization/Lifecycle; lifecycle
	b ()Lhs$b; dimensionsRegistryAccess
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Lhr; dimensions
	d ()Ldzc$a; specialWorldProperty
dig net/minecraft/world/level/levelgen/WorldGenSettings
	b options
	c dimensions
	a CODEC
	<init> (Ldii;Ldif;)V <init>
	a (Lcom/mojang/serialization/DynamicOps;Ldii;Ldif;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Ldii;Lhs;)Lcom/mojang/serialization/DataResult; encode
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldii; options
	b ()Ldif; dimensions
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dih net/minecraft/world/level/levelgen/WorldGenerationContext
	a minY
	b height
	<init> (Lddy;Lcmo;)V <init>
	a ()I getMinGenY
	b ()I getGenDepth
dii net/minecraft/world/level/levelgen/WorldOptions
	a CODEC
	b DEMO_OPTIONS
	c seed
	d generateStructures
	e generateBonusChest
	f legacyCustomOptions
	<init> (JZZ)V <init>
	a ()Ldii; defaultWithRandomSeed
	<init> (JZZLjava/util/Optional;)V <init>
	b ()J seed
	c ()Z generateStructures
	d ()Z generateBonusChest
	e ()Z isOldCustomizedWorld
	a (Z)Ldii; withBonusChest
	b (Z)Ldii; withStructures
	a (Ljava/util/OptionalLong;)Ldii; withSeed
	a (Ljava/lang/String;)Ljava/util/OptionalLong; parseSeed
	f ()J randomSeed
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldii;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dij net/minecraft/world/level/levelgen/WorldgenRandom
	d randomSource
	e count
	<init> (Lapf;)V <init>
	l ()I getCount
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	c (I)I next
	b (J)V setSeed
	a (JII)J setDecorationSeed
	b (JII)V setFeatureSeed
	c (JII)V setLargeFeatureSeed
	a (JIII)V setLargeFeatureWithSalt
	a (IIJJ)Lapf; seedSlimeChunk
dij$a net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	a LEGACY
	b XOROSHIRO
	c constructor
	d $VALUES
	values ()[Ldij$a; values
	valueOf (Ljava/lang/String;)Ldij$a; valueOf
	<init> (Ljava/lang/String;ILjava/util/function/LongFunction;)V <init>
	a (J)Lapf; newInstance
	a ()[Ldij$a; $values
	<clinit> ()V <clinit>
dik net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	b seedLo
	c seedHi
	a CODEC
	<init> (Ldhz$a;)V <init>
	<init> (JJ)V <init>
	a ()J nextLong
	a (Ldik;)Ljava/util/stream/LongStream; lambda$static$2
	a (Ljava/util/stream/LongStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([J)Ldik; lambda$static$0
	<clinit> ()V <clinit>
dil net/minecraft/world/level/levelgen/XoroshiroRandomSource
	c FLOAT_UNIT
	d DOUBLE_UNIT
	b CODEC
	e randomNumberGenerator
	f gaussianSource
	<init> (J)V <init>
	<init> (Ldhz$a;)V <init>
	<init> (JJ)V <init>
	<init> (Ldik;)V <init>
	d ()Lapf; fork
	e ()Ldhx; forkPositional
	b (J)V setSeed
	f ()I nextInt
	a (I)I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
	b (I)V consumeCount
	c (I)J nextBits
	a (Ldil;)Ldik; lambda$static$1
	a (Ldik;)Ldil; lambda$static$0
	<clinit> ()V <clinit>
dil$a net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	a seedLo
	b seedHi
	<init> (JJ)V <init>
	a (III)Lapf; at
	a (Ljava/lang/String;)Lapf; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dim net/minecraft/world/level/levelgen/blending/Blender
	a EMPTY
	b SHIFT_NOISE
	c HEIGHT_BLENDING_RANGE_CELLS
	d HEIGHT_BLENDING_RANGE_CHUNKS
	e DENSITY_BLENDING_RANGE_CELLS
	f DENSITY_BLENDING_RANGE_CHUNKS
	g OLD_CHUNK_XZ_RADIUS
	h heightAndBiomeBlendingData
	i densityBlendingData
	a ()Ldim; empty
	a (Laim;)Ldim; of
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	a (II)Ldim$a; blendOffsetAndFactor
	a (D)D heightToOffset
	a (Ldhd$b;D)D blendDensity
	a (IIILdim$b;)D getBlendingDataValue
	a (Ldim$b;IIIII)D getBlendingDataValue
	a (Lcnn;)Lcnn; getBiomeResolver
	a (III)Lhe; blendBiome
	a (Laim;Lddx;)V generateBorderTicks
	a (Lddx;Lgu;)V generateBorderTick
	a (Lcng;Ldes;)V addAroundOldChunksCarvingMaskFilter
	a (Ldin;Ljava/util/Map;)Ldim$c; makeOldChunkDistanceGetter
	a (Lhb;Ldin;)Ldim$c; makeOffsetOldChunkDistanceGetter
	a (DDDDDD)D distanceToCube
	a (DDDDDDD)D lambda$makeOffsetOldChunkDistanceGetter$11
	a (Ljava/util/List;DDD)D lambda$makeOldChunkDistanceGetter$10
	a (Ljava/util/List;Lhb;Ldin;)V lambda$makeOldChunkDistanceGetter$9
	a (Lddw$a;Lddw;)V lambda$addAroundOldChunksCarvingMaskFilter$8
	a (Ldim$c;III)Z lambda$addAroundOldChunksCarvingMaskFilter$7
	a (IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Ldin;)V lambda$blendBiome$6
	a (IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILhe;)V lambda$blendBiome$5
	a (Lcnn;IIILcnt$f;)Lhe; lambda$getBiomeResolver$4
	a (IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldin;)V lambda$blendDensity$3
	a (IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V lambda$blendDensity$2
	a (IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Ldin;)V lambda$blendOffsetAndFactor$1
	a (IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V lambda$blendOffsetAndFactor$0
	<clinit> ()V <clinit>
dim$1 net/minecraft/world/level/levelgen/blending/Blender$1
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	a (II)Ldim$a; blendOffsetAndFactor
	a (Ldhd$b;D)D blendDensity
	a (Lcnn;)Lcnn; getBiomeResolver
dim$a net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	a alpha
	b blendingOffset
	<init> (DD)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()D alpha
	b ()D blendingOffset
dim$b net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
	get (Ldin;III)D get
dim$c net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
	getDistance (DDD)D getDistance
din net/minecraft/world/level/levelgen/blending/BlendingData
	f BLENDING_DENSITY_FACTOR
	a CELL_WIDTH
	b CELL_HEIGHT
	c CELL_RATIO
	g SOLID_DENSITY
	h AIR_DENSITY
	i CELLS_PER_SECTION_Y
	j QUARTS_PER_SECTION
	k CELL_HORIZONTAL_MAX_INDEX_INSIDE
	l CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	m CELL_COLUMN_INSIDE_COUNT
	n CELL_COLUMN_OUTSIDE_COUNT
	o CELL_COLUMN_COUNT
	p areaWithOldGeneration
	q SURFACE_BLOCKS
	d NO_VALUE
	r hasCalculatedData
	s heights
	t biomes
	u densities
	v DOUBLE_ARRAY_CODEC
	e CODEC
	a (Ldin;)Lcom/mojang/serialization/DataResult; validateArraySize
	<init> (IILjava/util/Optional;)V <init>
	a (Laim;II)Ldin; getOrUpdateBlendingData
	a (Lcng;IIZ)Ljava/util/Set; sideByGenerationAge
	a (Lddx;Ljava/util/Set;)V calculateData
	a (ILddx;II)V addValuesForColumn
	a (Lddx;II)I getHeightAtXZ
	a (Lddx;Lgu$a;)D read1
	b (Lddx;Lgu$a;)D read7
	a (Lddx;III)[D getDensityColumn
	b (Lddx;II)Ljava/util/List; getBiomeColumn
	a (Lddx;Lgu;)Z isGround
	a (III)D getHeight
	a ([DI)D getDensity
	b (III)D getDensity
	a (IIILdin$a;)V iterateBiomes
	a (IILdin$c;)V iterateHeights
	a (IIIILdin$b;)V iterateDensities
	b ()I cellCountPerColumn
	c ()I quartCountPerColumn
	d ()I getColumnMinY
	e ()I getMinY
	a (I)I getCellYIndex
	a (II)I getInsideIndex
	b (II)I getOutsideIndex
	b (I)I getX
	c (I)I getZ
	d (I)I zeroIfNegative
	a ()Lcmo; getAreaWithOldGeneration
	a ([D)V lambda$new$6
	f ()Ljava/lang/String; lambda$validateArraySize$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	b (Ldin;)Ljava/util/Optional; lambda$static$3
	a (D)Z lambda$static$2
	c (Ldin;)Ljava/lang/Integer; lambda$static$1
	d (Ldin;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
din$a net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
	consume (IILhe;)V consume
din$b net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
	consume (IIID)V consume
din$c net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
	consume (IID)V consume
dio net/minecraft/world/level/levelgen/blending/package-info
dip net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	a CODEC
	<init> (Ljava/util/List;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	<clinit> ()V <clinit>
diq net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	a CODEC
	<init> (Ljava/util/List;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	<clinit> ()V <clinit>
dir net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	b CODEC
	c ONLY_IN_AIR_PREDICATE
	d ONLY_IN_AIR_OR_WATER_PREDICATE
	a ()Ldis; type
	a (Ljava/util/List;)Ldir; allOf
	a ([Ldir;)Ldir; allOf
	a (Ldir;Ldir;)Ldir; allOf
	b (Ljava/util/List;)Ldir; anyOf
	b ([Ldir;)Ldir; anyOf
	b (Ldir;Ldir;)Ldir; anyOf
	a (Lhz;Ljava/util/List;)Ldir; matchesBlocks
	c (Ljava/util/List;)Ldir; matchesBlocks
	a (Lhz;[Lcpn;)Ldir; matchesBlocks
	a ([Lcpn;)Ldir; matchesBlocks
	a (Lhz;Lanl;)Ldir; matchesTag
	a (Lanl;)Ldir; matchesTag
	b (Lhz;Ljava/util/List;)Ldir; matchesFluids
	a (Lhz;[Ldxd;)Ldir; matchesFluids
	a ([Ldxd;)Ldir; matchesFluids
	a (Ldir;)Ldir; not
	a (Lhz;)Ldir; replaceable
	b ()Ldir; replaceable
	a (Ldcb;Lhz;)Ldir; wouldSurvive
	a (Lhz;Lha;)Ldir; hasSturdyFace
	a (Lha;)Ldir; hasSturdyFace
	b (Lhz;)Ldir; solid
	c ()Ldir; solid
	d ()Ldir; noFluid
	c (Lhz;)Ldir; noFluid
	d (Lhz;)Ldir; insideWorld
	e ()Ldir; alwaysTrue
	<clinit> ()V <clinit>
dis net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	a MATCHING_BLOCKS
	b MATCHING_BLOCK_TAG
	c MATCHING_FLUIDS
	d HAS_STURDY_FACE
	e SOLID
	f REPLACEABLE
	g WOULD_SURVIVE
	h INSIDE_WORLD_BOUNDS
	i ANY_OF
	j ALL_OF
	k NOT
	l TRUE
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldis; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dit net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	e predicates
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$codec$1
	a (Ldit;)Ljava/util/List; lambda$codec$0
diu net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	e offset
	f direction
	a CODEC
	<init> (Lhz;Lha;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldiu;)Lha; lambda$static$1
	b (Ldiu;)Lhz; lambda$static$0
	<clinit> ()V <clinit>
div net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	a CODEC
	e offset
	<init> (Lhz;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldiv;)Lhz; lambda$static$0
	<clinit> ()V <clinit>
diw net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	a tag
	e CODEC
	<init> (Lhz;Lanl;)V <init>
	a (Ldcb;)Z test
	a ()Ldis; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldiw;)Lanl; lambda$static$0
	<clinit> ()V <clinit>
dix net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	e blocks
	a CODEC
	<init> (Lhz;Lhi;)V <init>
	a (Ldcb;)Z test
	a ()Ldis; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldix;)Lhi; lambda$static$0
	<clinit> ()V <clinit>
diy net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	e fluids
	a CODEC
	<init> (Lhz;Lhi;)V <init>
	a (Ldcb;)Z test
	a ()Ldis; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldiy;)Lhi; lambda$static$0
	<clinit> ()V <clinit>
diz net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	a CODEC
	e predicate
	<init> (Ldir;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldiz;)Ldir; lambda$static$0
	<clinit> ()V <clinit>
dja net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	a CODEC
	<init> (Lhz;)V <init>
	a (Ldcb;)Z test
	a ()Ldis; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
djb net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	a CODEC
	<init> (Lhz;)V <init>
	a (Ldcb;)Z test
	a ()Ldis; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
djc net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	f offset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; stateTestingCodec
	<init> (Lhz;)V <init>
	a (Lcng;Lgu;)Z test
	a (Ldcb;)Z test
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	a (Ldjc;)Lhz; lambda$stateTestingCodec$0
djd net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	a INSTANCE
	e CODEC
	<init> ()V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	f ()Ldjd; lambda$static$0
	<clinit> ()V <clinit>
dje net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	a CODEC
	e offset
	f state
	<init> (Lhz;Ldcb;)V <init>
	a (Lcng;Lgu;)Z test
	a ()Ldis; type
	test (Ljava/lang/Object;Ljava/lang/Object;)Z test
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldje;)Ldcb; lambda$static$1
	b (Ldje;)Lhz; lambda$static$0
	<clinit> ()V <clinit>
djf net/minecraft/world/level/levelgen/blockpredicates/package-info
djg net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	a CODEC
	b verticalRotation
	c shape
	<init> (FLdqh;Lbda;Ldie;Ldjj;Lhi;Lbda;Ldjg$a;)V <init>
	<init> (Ldji;Lbda;Ldjg$a;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldjg;)Ldjg$a; lambda$static$2
	b (Ldjg;)Lbda; lambda$static$1
	c (Ldjg;)Ldji; lambda$static$0
	<clinit> ()V <clinit>
djg$a net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	a CODEC
	b distanceFactor
	c thickness
	d widthSmoothness
	e horizontalRadiusFactor
	f verticalRadiusDefaultFactor
	g verticalRadiusCenterFactor
	<init> (Lbda;Lbda;ILbda;FF)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldjg$a;)Ljava/lang/Float; lambda$static$5
	b (Ldjg$a;)Ljava/lang/Float; lambda$static$4
	c (Ldjg$a;)Lbda; lambda$static$3
	d (Ldjg$a;)Ljava/lang/Integer; lambda$static$2
	e (Ldjg$a;)Lbda; lambda$static$1
	f (Ldjg$a;)Lbda; lambda$static$0
	<clinit> ()V <clinit>
djh net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldjg;Lapf;)Z isStartChunk
	a (Ldjk;Ldjg;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	a (Ldjk;Ldjg;Lddx;Ljava/util/function/Function;JLdgw;DDDFFFIIDLddw;)V doCarve
	a (Ldjk;Ldjg;Lapf;)[F initWidthFactors
	a (Ldjg;Lapf;DFF)D updateVerticalRadius
	a (Ldjk;[FDDDI)Z shouldSkip
	a (Ldji;Lapf;)Z isStartChunk
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	a ([FLdjk;DDDI)Z lambda$doCarve$0
dji net/minecraft/world/level/levelgen/carver/CarverConfiguration
	d CODEC
	e y
	f yScale
	g lavaLevel
	h debugSettings
	i replaceable
	<init> (FLdqh;Lbda;Ldie;Ldjj;Lhi;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldji;)Lhi; lambda$static$5
	b (Ldji;)Ldjj; lambda$static$4
	c (Ldji;)Ldie; lambda$static$3
	d (Ldji;)Lbda; lambda$static$2
	e (Ldji;)Ldqh; lambda$static$1
	f (Ldji;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
djj net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	a DEFAULT
	b CODEC
	c debugMode
	d airState
	e waterState
	f lavaState
	g barrierState
	a (ZLdcb;Ldcb;Ldcb;Ldcb;)Ldjj; of
	a (Ldcb;Ldcb;Ldcb;Ldcb;)Ldjj; of
	a (ZLdcb;)Ldjj; of
	<init> (ZLdcb;Ldcb;Ldcb;Ldcb;)V <init>
	a ()Z isDebugMode
	b ()Ldcb; getAirState
	c ()Ldcb; getWaterState
	d ()Ldcb; getLavaState
	e ()Ldcb; getBarrierState
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
djk net/minecraft/world/level/levelgen/carver/CarvingContext
	a registryAccess
	b noiseChunk
	c randomState
	d surfaceRule
	<init> (Ldhn;Lhs;Lcmo;Ldho;Ldhy;Ldib$o;)V <init>
	a (Ljava/util/function/Function;Lddx;Lgu;Z)Ljava/util/Optional; topMaterial
	c ()Lhs; registryAccess
	d ()Ldhy; randomState
djl net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	a CODEC
	b horizontalRadiusMultiplier
	c verticalRadiusMultiplier
	j floorLevel
	<init> (FLdqh;Lbda;Ldie;Ldjj;Lhi;Lbda;Lbda;Lbda;)V <init>
	<init> (FLdqh;Lbda;Ldie;Lhi;Lbda;Lbda;Lbda;)V <init>
	<init> (Ldji;Lbda;Lbda;Lbda;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldjl;)Lbda; lambda$static$3
	b (Ldjl;)Lbda; lambda$static$2
	c (Ldjl;)Lbda; lambda$static$1
	d (Ldjl;)Ldji; lambda$static$0
	<clinit> ()V <clinit>
djm net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldjl;Lapf;)Z isStartChunk
	a (Ldjk;Ldjl;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	a ()I getCaveBound
	a (Lapf;)F getThickness
	b ()D getYScale
	a (Ldjk;Ldjl;Lddx;Ljava/util/function/Function;Ldgw;DDDFDLddw;Ldjp$a;)V createRoom
	a (Ldjk;Ldjl;Lddx;Ljava/util/function/Function;JLdgw;DDDDDFFFIIDLddw;Ldjp$a;)V createTunnel
	a (DDDD)Z shouldSkip
	a (Ldji;Lapf;)Z isStartChunk
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	a (DLdjk;DDDI)Z lambda$carve$0
djn net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	d worldCarver
	e config
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	<init> (Ldjp;Ldji;)V <init>
	a (Lapf;)Z isStartChunk
	a (Ldjk;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldjp; worldCarver
	b ()Ldji; config
	a (Ldjn;)Ldjp; lambda$static$0
	<clinit> ()V <clinit>
djo net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()I getCaveBound
	a (Lapf;)F getThickness
	b ()D getYScale
	a (Ldjk;Ldjl;Lddx;Ljava/util/function/Function;Lddw;Lgu$a;Lgu$a;Ldgw;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Lddw;Lgu$a;Lgu$a;Ldgw;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
djp net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b NETHER_CAVE
	c CANYON
	d AIR
	e CAVE_AIR
	f WATER
	g LAVA
	h liquids
	i configuredCodec
	a (Ljava/lang/String;Ldjp;)Ldjp; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldji;)Ldjn; configured
	c ()Lcom/mojang/serialization/Codec; configuredCodec
	d ()I getRange
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Ldgw;DDDDDLddw;Ldjp$a;)Z carveEllipsoid
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Lddw;Lgu$a;Lgu$a;Ldgw;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Ldjk;Ldji;Lgu;Ldgw;)Ldcb; getCarveState
	b (Ldji;Ldcb;)Ldcb; getDebugState
	a (Ldjk;Ldji;Lddx;Ljava/util/function/Function;Lapf;Ldgw;Lclt;Lddw;)Z carve
	a (Ldji;Lapf;)Z isStartChunk
	a (Ldji;Ldcb;)Z canReplaceBlock
	a (Lclt;DDIIF)Z canReach
	b (Ldji;)Z isDebugEnabled
	a (Lddx;Lgu$a;Ldcb;)V lambda$carveBlock$0
	<clinit> ()V <clinit>
djp$a net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
	shouldSkip (Ldjk;DDDI)Z shouldSkip
djq net/minecraft/world/level/levelgen/carver/package-info
djr net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;Ldmu;ILgu$a;)V placeTrunk
	a (Lapf;)I getTreeHeight
	a (Lcmn;Lgu;ILgu$a;Ldmu;)Z isValidPosition
	a (Ldkq;)Z place
	a (IIII)I getTreeRadiusForHeight
	a (Lcmn;Lapf;Lgu;ILgu$a;Ldmu;)V makeCap
djs net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	b BAMBOO_FINAL_LARGE
	c BAMBOO_TOP_LARGE
	d BAMBOO_TOP_SMALL
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	<clinit> ()V <clinit>
djt net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	a CANNOT_PLACE_ON
	b CLUSTERED_REACH
	c CLUSTERED_SIZE
	d UNCLUSTERED_REACH
	an UNCLUSTERED_SIZE
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;ILgu;II)Z placeColumn
	a (Lcmn;ILgu$a;I)Lgu; findSurface
	a (Lcmn;ILgu$a;)Z canPlaceAt
	a (Lcmn;Lgu$a;I)Lgu; findAir
	a (Lcmn;ILgu;)Z isAirOrLavaOcean
	<clinit> ()V <clinit>
dju net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lapf;Lgu;)V placeBaseHangOff
	b (Lcmn;Lapf;Lgu;)Z placeHangOff
djv net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
djw net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a ([IIIZ)V truncate
djx net/minecraft/world/level/levelgen/feature/BlockPileFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu;Lapf;)Z mayPlaceOn
	a (Lcmn;Lgu;Lapf;Ldmk;)V tryPlaceBlock
djy net/minecraft/world/level/levelgen/feature/BlueIceFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
djz net/minecraft/world/level/levelgen/feature/BonusChestFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dka net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dkb net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	d feature
	e config
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	<init> (Ldko;Ldms;)V <init>
	a (Lcng;Lddy;Lapf;Lgu;)Z place
	a ()Ljava/util/stream/Stream; getFeatures
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ldko; feature
	c ()Ldms; config
	a (Ldkb;)Ldko; lambda$static$0
	<clinit> ()V <clinit>
dkc net/minecraft/world/level/levelgen/feature/CoralClawFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;Ldcb;)Z placeFeature
dkd net/minecraft/world/level/levelgen/feature/CoralFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lapf;Lgu;Ldcb;)Z placeFeature
	b (Lcmn;Lapf;Lgu;Ldcb;)Z placeCoralBlock
	a (Lha;Lcmn;Lgu;Lcpn;)V lambda$placeCoralBlock$4
	a (Lapf;Lhi$c;)Ljava/util/Optional; lambda$placeCoralBlock$3
	a (Lcmn;Lgu;Lcpn;)V lambda$placeCoralBlock$2
	b (Lapf;Lhi$c;)Ljava/util/Optional; lambda$placeCoralBlock$1
	c (Lapf;Lhi$c;)Ljava/util/Optional; lambda$place$0
dke net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;Ldcb;)Z placeFeature
dkf net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;Ldcb;)Z placeFeature
dkg net/minecraft/world/level/levelgen/feature/DeltaFeature
	a CANNOT_REPLACE
	b DIRECTIONS
	c RIM_SPAWN_CHANCE
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu;Ldmo;)Z isClear
	<clinit> ()V <clinit>
dkh net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	b sand
	c sandSlab
	d sandstone
	an water
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	b (Lcng;Lgu;)V placeSusSand
	a (Lgu;Lczr;)V lambda$placeSusSand$0
	<clinit> ()V <clinit>
dki net/minecraft/world/level/levelgen/feature/DiskFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Ldmp;Lcng;Lapf;IILgu$a;)Z placeColumn
dkj net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lapf;Lgu;IIFDIFLdmq;)V placeColumn
	a (Lcmp;Lgu;)Z isLava
	a (Lapf;IIFILdmq;)I getDripstoneHeight
	b (Lcng;Lgu;)Z canPlacePool
	a (Lcmn;Lgu;)Z canBeAdjacentToWater
	a (Lcng;Lgu;ILha;)V replaceBlocksWithDripstoneBlocks
	a (IIIILdmq;)D getChanceOfStalagmiteOrStalactite
	a (Lapf;FFFF)F randomBetweenBiased
dkk net/minecraft/world/level/levelgen/feature/DripstoneUtils
	<init> ()V <init>
	a (DDDD)D getDripstoneHeight
	a (Lcng;Lgu;I)Z isCircleMostlyEmbeddedInStone
	a (Lcmn;Lgu;)Z isEmptyOrWater
	b (Lcmn;Lgu;)Z isEmptyOrWaterOrLava
	a (Lha;IZLjava/util/function/Consumer;)V buildBaseToTipColumn
	a (Lcmn;Lgu;Lha;IZ)V growPointedDripstone
	c (Lcmn;Lgu;)Z placeDripstoneBlockIfPossible
	a (Lha;Ldcy;)Ldcb; createPointedDripstone
	a (Ldcb;)Z isDripstoneBaseOrLava
	b (Ldcb;)Z isDripstoneBase
	c (Ldcb;)Z isEmptyOrWater
	d (Ldcb;)Z isNeitherEmptyNorWater
	e (Ldcb;)Z isEmptyOrWaterOrLava
	a (Lcmn;Lgu$a;Lha;Ldcb;)V lambda$growPointedDripstone$0
dkl net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lgu;Ldmr;Lgu;)V lambda$place$0
dkm net/minecraft/world/level/levelgen/feature/EndIslandFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dkn net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a PODIUM_RADIUS
	b PODIUM_PILLAR_HEIGHT
	c RIM_RADIUS
	d CORNER_ROUNDING
	an END_PODIUM_LOCATION
	ao active
	a (Lgu;)Lgu; getLocation
	<init> (Z)V <init>
	a (Ldkq;)Z place
	<clinit> ()V <clinit>
dko net/minecraft/world/level/levelgen/feature/Feature
	e NO_OP
	f TREE
	g FLOWER
	h NO_BONEMEAL_FLOWER
	i RANDOM_PATCH
	j BLOCK_PILE
	k SPRING
	l CHORUS_PLANT
	m REPLACE_SINGLE_BLOCK
	n VOID_START_PLATFORM
	o DESERT_WELL
	p FOSSIL
	q HUGE_RED_MUSHROOM
	r HUGE_BROWN_MUSHROOM
	s ICE_SPIKE
	t GLOWSTONE_BLOB
	u FREEZE_TOP_LAYER
	v VINES
	w BLOCK_COLUMN
	x VEGETATION_PATCH
	y WATERLOGGED_VEGETATION_PATCH
	z ROOT_SYSTEM
	A MULTIFACE_GROWTH
	B UNDERWATER_MAGMA
	C MONSTER_ROOM
	D BLUE_ICE
	E ICEBERG
	F FOREST_ROCK
	G DISK
	H LAKE
	I ORE
	J END_SPIKE
	K END_ISLAND
	L END_GATEWAY
	M SEAGRASS
	N KELP
	O CORAL_TREE
	P CORAL_MUSHROOM
	Q CORAL_CLAW
	R SEA_PICKLE
	S SIMPLE_BLOCK
	T BAMBOO
	U HUGE_FUNGUS
	V NETHER_FOREST_VEGETATION
	W WEEPING_VINES
	X TWISTING_VINES
	Y BASALT_COLUMNS
	Z DELTA_FEATURE
	aa REPLACE_BLOBS
	ab FILL_LAYER
	ac BONUS_CHEST
	ad BASALT_PILLAR
	ae SCATTERED_ORE
	af RANDOM_SELECTOR
	ag SIMPLE_RANDOM_SELECTOR
	ah RANDOM_BOOLEAN_SELECTOR
	ai GEODE
	aj DRIPSTONE_CLUSTER
	ak LARGE_DRIPSTONE
	al POINTED_DRIPSTONE
	am SCULK_PATCH
	a configuredCodec
	a (Ljava/lang/String;Ldko;)Ldko; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Lcmu;Lgu;Ldcb;)V setBlock
	a (Lanl;)Ljava/util/function/Predicate; isReplaceable
	a (Lcng;Lgu;Ldcb;Ljava/util/function/Predicate;)V safeSetBlock
	a (Ldkq;)Z place
	a (Ldms;Lcng;Lddy;Lapf;Lgu;)Z place
	a (Ldcb;)Z isStone
	b (Ldcb;)Z isDirt
	a (Lcms;Lgu;)Z isGrassOrDirt
	a (Ljava/util/function/Function;Lgu;Ljava/util/function/Predicate;)Z checkNeighbors
	a (Ljava/util/function/Function;Lgu;)Z isAdjacentToAir
	a (Lcng;Lgu;)V markAboveForPostProcessing
	a (Lanl;Ldcb;)Z lambda$isReplaceable$1
	a (Ldms;)Ldkb; lambda$new$0
	<clinit> ()V <clinit>
dkp net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	a LOGGER
	b data
	<init> ()V <init>
	a (Laif;)V chunkDecorated
	a (Laif;Ldkb;Ljava/util/Optional;)V featurePlaced
	a ()V clearCounts
	b ()V logCounts
	a (Laif;Ldkp$b;)V lambda$logCounts$2
	a (Ljava/lang/String;Ljava/lang/Integer;Lhr;Ldkp$a;Ljava/lang/Integer;)V lambda$logCounts$1
	a (Ldkp$a;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$featurePlaced$0
	<clinit> ()V <clinit>
dkp$1 net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	<init> ()V <init>
	a (Laif;)Ldkp$b; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
dkp$a net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	a feature
	b topFeature
	<init> (Ldkb;Ljava/util/Optional;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldkb; feature
	b ()Ljava/util/Optional; topFeature
dkp$b net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	a featureData
	b chunksWithFeatures
	<init> (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lorg/apache/commons/lang3/mutable/MutableInt;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; featureData
	b ()Lorg/apache/commons/lang3/mutable/MutableInt; chunksWithFeatures
dkq net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	a topFeature
	b level
	c chunkGenerator
	d random
	e origin
	f config
	<init> (Ljava/util/Optional;Lcng;Lddy;Lapf;Lgu;Ldms;)V <init>
	a ()Ljava/util/Optional; topFeature
	b ()Lcng; level
	c ()Lddy; chunkGenerator
	d ()Lapf; random
	e ()Lgu; origin
	f ()Ldms; config
dkr net/minecraft/world/level/levelgen/feature/FillLayerFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dks net/minecraft/world/level/levelgen/feature/FossilFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Ldrs;)I countEmptyCorners
	a (Lcng;Lorg/apache/commons/lang3/mutable/MutableInt;Lgu;)V lambda$countEmptyCorners$0
dkt net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	a CODEC
	b fossilStructures
	c overlayStructures
	d fossilProcessors
	e overlayProcessors
	f maxEmptyCornersAllowed
	<init> (Ljava/util/List;Ljava/util/List;Lhe;Lhe;I)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldkt;)Ljava/lang/Integer; lambda$static$4
	b (Ldkt;)Lhe; lambda$static$3
	c (Ldkt;)Lhe; lambda$static$2
	d (Ldkt;)Ljava/util/List; lambda$static$1
	e (Ldkt;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dku net/minecraft/world/level/levelgen/feature/GeodeFeature
	a DIRECTIONS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	<clinit> ()V <clinit>
dkv net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dkw net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;ILgu$a;Ldmu;)V makeCap
	a (IIII)I getTreeRadiusForHeight
dkx net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	a CODEC
	b validBaseState
	c stemState
	d hatState
	e decorState
	f replaceableBlocks
	g planted
	<init> (Ldcb;Ldcb;Ldcb;Ldcb;Ldir;Z)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldkx;)Ljava/lang/Boolean; lambda$static$5
	b (Ldkx;)Ldir; lambda$static$4
	c (Ldkx;)Ldcb; lambda$static$3
	d (Ldkx;)Ldcb; lambda$static$2
	e (Ldkx;)Ldcb; lambda$static$1
	f (Ldkx;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dky net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	a HUGE_PROBABILITY
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lgu;Ldkx;Z)Z isReplaceable
	a (Lcng;Lapf;Ldkx;Lgu;IZ)V placeStem
	b (Lcng;Lapf;Ldkx;Lgu;IZ)V placeHat
	a (Lcmn;Lapf;Ldkx;Lgu$a;FFF)V placeHatBlock
	a (Lcmn;Lapf;Lgu;Ldcb;Z)V placeHatDropBlock
	a (Lgu;Lcmn;Lapf;)V tryPlaceWeepingVines
dkz net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcmn;Lapf;Lgu;ILgu$a;Ldmu;)V makeCap
	a (IIII)I getTreeRadiusForHeight
dla net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlb net/minecraft/world/level/levelgen/feature/IcebergFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lapf;Lcmn;IILgu;ZIDI)V generateCutOut
	a (IILgu;Lcmn;ZDLgu;II)V carve
	a (Lcmn;Lgu;)V removeFloatingSnowLayer
	a (Lcmn;Lapf;Lgu;IIIIIIZIDZLdcb;)V generateIcebergBlock
	a (Lgu;Lcmn;Lapf;IIZZLdcb;)V setIcebergBlock
	a (III)I getEllipseC
	a (IILgu;ILapf;)D signedDistanceCircle
	a (IILgu;IID)D signedDistanceEllipse
	a (Lapf;III)I heightDependentRadiusRound
	b (III)I heightDependentRadiusEllipse
	b (Lapf;III)I heightDependentRadiusSteep
	c (Ldcb;)Z isIcebergState
	a (Lcls;Lgu;)Z belowIsAir
	a (Lcmn;Lgu;IIZI)V smooth
dlc net/minecraft/world/level/levelgen/feature/KelpFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dld net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	c (Ldcb;)Z canReplaceBlock
	<clinit> ()V <clinit>
dld$a net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	b fluid
	c barrier
	a CODEC
	<init> (Ldot;Ldot;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldot; fluid
	b ()Ldot; barrier
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dle net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lgu;ZLapf;ILbda;Lbda;)Ldle$a; makeDripstone
	a (Lcng;Lgu;Ldha$b;Ldle$b;)V placeDebugMarkers
dle$a net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	a root
	b pointingUp
	c radius
	d bluntness
	e scale
	<init> (Lgu;ZIDD)V <init>
	a ()I getHeight
	b ()I getMinY
	c ()I getMaxY
	a (Lcng;Ldle$b;)Z moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
	a (F)I getHeightAtRadius
	a (Lcng;Lapf;Ldle$b;)V placeBlocks
	a (Ldmv;)Z isSuitableForWind
dle$b net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	a originY
	b windSpeed
	<init> (ILapf;Lbda;)V <init>
	<init> ()V <init>
	a ()Ldle$b; noWind
	a (Lgu;)Lgu; offset
dlf net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	b MOBS
	c AIR
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lapf;)Lbfn; randomEntityId
	<clinit> ()V <clinit>
dlg net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lgu;Ldcb;Ldmx;Lapf;Ljava/util/List;)Z placeGrowthIfPossible
	c (Ldcb;)Z isAirOrWater
dlh net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dli net/minecraft/world/level/levelgen/feature/NoOpFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlj net/minecraft/world/level/levelgen/feature/OreFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lapf;Ldna;DDDDDDIIIII)Z doPlace
	a (Ldcb;Ljava/util/function/Function;Lapf;Ldna;Ldna$a;Lgu$a;)Z canPlaceOre
	a (Lapf;F)Z shouldSkipAirCheck
dlk net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu;Lapf;)Ljava/util/Optional; getTipDirection
	a (Lcmn;Lapf;Lgu;Ldnb;)V createPatchOfDripstoneBlocks
dll net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlm net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dln net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlo net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu$a;Lcpn;)Lgu; findTarget
dlp net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlq net/minecraft/world/level/levelgen/feature/RootSystemFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Ldni;Lgu;)Z spaceForTree
	a (Ldcb;II)Z isAllowedTreeSpace
	a (Lcng;Lddy;Ldni;Lapf;Lgu$a;Lgu;)Z placeDirtAndTree
	a (Lgu;ILcng;Ldni;Lapf;)V placeDirt
	a (Lcng;Ldni;Lapf;IILgu$a;)V placeRootedDirt
	a (Lcng;Ldni;Lapf;Lgu;Lgu$a;)V placeRoots
	a (Ldni;Ldcb;)Z lambda$placeRootedDirt$0
dlr net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	a MAX_DIST_FROM_ORIGIN
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lgu$a;Lapf;Lgu;I)V offsetTargetPos
	a (Lapf;I)I getRandomPlacementInOneAxisRelativeToOrigin
dls net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu;)Z canSpreadFrom
	b (Lcmn;Lgu;)Z lambda$canSpreadFrom$0
dlt net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlu net/minecraft/world/level/levelgen/feature/SeagrassFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlv net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlw net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dlx net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dly net/minecraft/world/level/levelgen/feature/SpikeFeature
	a NUMBER_OF_SPIKES
	b SPIKE_DISTANCE
	c SPIKE_CACHE
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcng;)Ljava/util/List; getSpikesForLevel
	a (Ldkq;)Z place
	a (Lcnb;Lapf;Ldnm;Ldly$a;)V placeSpike
	<clinit> ()V <clinit>
dly$a net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a CODEC
	b centerX
	c centerZ
	d radius
	e height
	f guarded
	g topBoundingBox
	<init> (IIIIZ)V <init>
	a (Lgu;)Z isCenterWithinChunk
	a ()I getCenterX
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Leed; getTopBoundingBox
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldly$a;)Ljava/lang/Boolean; lambda$static$4
	b (Ldly$a;)Ljava/lang/Integer; lambda$static$3
	c (Ldly$a;)Ljava/lang/Integer; lambda$static$2
	d (Ldly$a;)Ljava/lang/Integer; lambda$static$1
	e (Ldly$a;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dly$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	<init> ()V <init>
	a (Ljava/lang/Long;)Ljava/util/List; load
	load (Ljava/lang/Object;)Ljava/lang/Object; load
dlz net/minecraft/world/level/levelgen/feature/SpringFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dma net/minecraft/world/level/levelgen/feature/TreeFeature
	a BLOCK_UPDATE_FLAGS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	d (Lcms;Lgu;)Z isVine
	b (Lcms;Lgu;)Z isAirOrLeaves
	b (Lcmu;Lgu;Ldcb;)V setBlockKnownShape
	c (Lcms;Lgu;)Z validTreePos
	a (Lcng;Lapf;Lgu;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldoe$b;Ldno;)Z doPlace
	a (Lcms;ILgu;Ldno;)I getMaxFreeTreeHeight
	a (Lcmu;Lgu;Ldcb;)V setBlock
	a (Ldkq;)Z place
	a (Lcmn;Ldrs;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Leer; updateLeaves
	a (Lcng;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ldrs;)Ljava/lang/Boolean; lambda$place$9
	a (Ldpk$a;Ldpk;)V lambda$place$8
	a (Ljava/util/Set;Lcng;Lgu;Ldcb;)V lambda$place$7
	b (Ljava/util/Set;Lcng;Lgu;Ldcb;)V lambda$place$6
	c (Ljava/util/Set;Lcng;Lgu;Ldcb;)V lambda$place$5
	a (Ldno;Lcng;Ldoe$b;Lapf;IIILdoe$a;)V lambda$doPlace$4
	a (Lgu;Lapf;Ldoq;)Lgu; lambda$doPlace$3
	c (Ldcb;)Z lambda$validTreePos$2
	d (Ldcb;)Z lambda$isAirOrLeaves$1
	e (Ldcb;)Z lambda$isVine$0
dma$1 net/minecraft/world/level/levelgen/feature/TreeFeature$1
	a val$foliage
	b val$level
	c this$0
	<init> (Ldma;Ljava/util/Set;Lcng;)V <init>
	a (Lgu;Ldcb;)V set
	a (Lgu;)Z isSet
dmb net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lgu$a;)Z findFirstAirBlockAboveGround
	a (Lcmn;Lapf;Lgu$a;III)V placeWeepingVinesColumn
	a (Lcmn;Lgu;)Z isInvalidPlacementLocation
dmc net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Lgu;Ldnq;)Ljava/util/OptionalInt; getFloorY
	b (Lcng;Lgu;)Z isValidPlacement
	a (Lcmn;Lgu;)Z isWaterOrAir
	c (Ldcb;)Z lambda$getFloorY$4
	d (Ldcb;)Z lambda$getFloorY$3
	c (Lcng;Lgu;)I lambda$place$2
	d (Lcng;Lgu;)Z lambda$place$1
	a (Lapf;Ldnq;Lgu;)Z lambda$place$0
dmd net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcng;Ldnr;Lapf;Lgu;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Ldkq;Lcng;Ldnr;Lapf;Ljava/util/Set;II)V distributeVegetation
	a (Lcng;Ldnr;Lddy;Lapf;Lgu;)Z placeVegetation
	a (Lcng;Ldnr;Ljava/util/function/Predicate;Lapf;Lgu$a;I)Z placeGround
	c (Ldcb;)Z lambda$placeGroundPatch$1
	a (Ldnr;Ldcb;)Z lambda$place$0
dme net/minecraft/world/level/levelgen/feature/VinesFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
dmf net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_OFFSET
	b PLATFORM_ORIGIN_CHUNK
	c PLATFORM_RADIUS
	d PLATFORM_RADIUS_CHUNKS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (IIII)I checkerboardDistance
	a (Ldkq;)Z place
	<clinit> ()V <clinit>
dmg net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Lcng;Ldnr;Lapf;Lgu;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Lcng;Ljava/util/Set;Lgu;Lgu$a;)Z isExposed
	a (Lcng;Lgu;Lgu$a;Lha;)Z isExposedDirection
	a (Lcng;Ldnr;Lddy;Lapf;Lgu;)Z placeVegetation
dmh net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	a DIRECTIONS
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a (Ldkq;)Z place
	a (Lcmn;Lapf;Lgu;)V placeRoofNetherWart
	b (Lcmn;Lapf;Lgu;)V placeRoofWeepingVines
	a (Lcmn;Lapf;Lgu$a;III)V placeWeepingVinesColumn
	<clinit> ()V <clinit>
dmi net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	a CODEC
	b feature
	c chance
	<init> (Lhe;F)V <init>
	a (Lcng;Lddy;Lapf;Lgu;)Z place
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldmi;)Ljava/lang/Float; lambda$static$1
	b (Ldmi;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dmj net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	b layers
	c direction
	d allowedPlacement
	e prioritizeTip
	a CODEC
	<init> (Ljava/util/List;Lha;Ldir;Z)V <init>
	a (Lbdc;Ldot;)Ldmj$a; layer
	b (Lbdc;Ldot;)Ldmj; simple
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; layers
	b ()Lha; direction
	c ()Ldir; allowedPlacement
	d ()Z prioritizeTip
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dmj$a net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	b height
	c state
	a CODEC
	<init> (Lbdc;Ldot;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lbdc; height
	b ()Ldot; state
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dmk net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a CODEC
	b stateProvider
	<init> (Ldot;)V <init>
	a (Ldmk;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dml net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a CODEC
	b state
	<init> (Ldcb;)V <init>
	a (Ldml;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dmm net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	a CODEC
	b reach
	c height
	<init> (Lbdc;Lbdc;)V <init>
	a ()Lbdc; reach
	b ()Lbdc; height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldmm;)Lbdc; lambda$static$1
	b (Ldmm;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dmn net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	a CODEC
	b count
	<init> (I)V <init>
	<init> (Lbdc;)V <init>
	a ()Lbdc; count
	<clinit> ()V <clinit>
dmo net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	a CODEC
	b contents
	c rim
	d size
	e rimSize
	<init> (Ldcb;Ldcb;Lbdc;Lbdc;)V <init>
	a ()Ldcb; contents
	b ()Ldcb; rim
	c ()Lbdc; size
	d ()Lbdc; rimSize
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldmo;)Lbdc; lambda$static$3
	b (Ldmo;)Lbdc; lambda$static$2
	c (Ldmo;)Ldcb; lambda$static$1
	d (Ldmo;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dmp net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	b stateProvider
	c target
	d radius
	e halfHeight
	a CODEC
	<init> (Ldpb;Ldir;Lbdc;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldpb; stateProvider
	b ()Ldir; target
	c ()Lbdc; radius
	d ()I halfHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dmq net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c height
	d radius
	e maxStalagmiteStalactiteHeightDiff
	f heightDeviation
	g dripstoneBlockLayerThickness
	h density
	i wetness
	j chanceOfDripstoneColumnAtMaxDistanceFromCenter
	k maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	l maxDistanceFromCenterAffectingHeightBias
	<init> (ILbdc;Lbdc;IILbdc;Lbda;Lbda;FII)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$11
	a (Ldmq;)Ljava/lang/Integer; lambda$static$10
	b (Ldmq;)Ljava/lang/Integer; lambda$static$9
	c (Ldmq;)Ljava/lang/Float; lambda$static$8
	d (Ldmq;)Lbda; lambda$static$7
	e (Ldmq;)Lbda; lambda$static$6
	f (Ldmq;)Lbdc; lambda$static$5
	g (Ldmq;)Ljava/lang/Integer; lambda$static$4
	h (Ldmq;)Ljava/lang/Integer; lambda$static$3
	i (Ldmq;)Lbdc; lambda$static$2
	j (Ldmq;)Lbdc; lambda$static$1
	k (Ldmq;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dmr net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a CODEC
	b exit
	c exact
	<init> (Ljava/util/Optional;Z)V <init>
	a (Lgu;Z)Ldmr; knownExit
	a ()Ldmr; delayedExitSearch
	b ()Ljava/util/Optional; getExit
	c ()Z isExitExact
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldmr;)Ljava/lang/Boolean; lambda$static$1
	b (Ldmr;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dms net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m NONE
	e ()Ljava/util/stream/Stream; getFeatures
	<clinit> ()V <clinit>
dmt net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	a CHANCE_RANGE
	b CODEC
	c geodeBlockSettings
	d geodeLayerSettings
	e geodeCrackSettings
	f usePotentialPlacementsChance
	g useAlternateLayer0Chance
	h placementsRequireLayer0Alternate
	i outerWallDistance
	j distributionPoints
	k pointOffset
	l minGenOffset
	n maxGenOffset
	o noiseMultiplier
	p invalidBlocksThreshold
	<init> (Ldhh;Ldhj;Ldhi;DDZLbdc;Lbdc;Lbdc;IIDI)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$13
	a (Ldmt;)Ljava/lang/Integer; lambda$static$12
	b (Ldmt;)Ljava/lang/Double; lambda$static$11
	c (Ldmt;)Ljava/lang/Integer; lambda$static$10
	d (Ldmt;)Ljava/lang/Integer; lambda$static$9
	e (Ldmt;)Lbdc; lambda$static$8
	f (Ldmt;)Lbdc; lambda$static$7
	g (Ldmt;)Lbdc; lambda$static$6
	h (Ldmt;)Ljava/lang/Boolean; lambda$static$5
	i (Ldmt;)Ljava/lang/Double; lambda$static$4
	j (Ldmt;)Ljava/lang/Double; lambda$static$3
	k (Ldmt;)Ldhi; lambda$static$2
	l (Ldmt;)Ldhj; lambda$static$1
	m (Ldmt;)Ldhh; lambda$static$0
	<clinit> ()V <clinit>
dmu net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a CODEC
	b capProvider
	c stemProvider
	d foliageRadius
	<init> (Ldot;Ldot;I)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldmu;)Ljava/lang/Integer; lambda$static$2
	b (Ldmu;)Ldot; lambda$static$1
	c (Ldmu;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dmv net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c columnRadius
	d heightScale
	e maxColumnRadiusToCaveHeightRatio
	f stalactiteBluntness
	g stalagmiteBluntness
	h windSpeed
	i minRadiusForWind
	j minBluntnessForWind
	<init> (ILbdc;Lbda;FLbda;Lbda;Lbda;IF)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$9
	a (Ldmv;)Ljava/lang/Float; lambda$static$8
	b (Ldmv;)Ljava/lang/Integer; lambda$static$7
	c (Ldmv;)Lbda; lambda$static$6
	d (Ldmv;)Lbda; lambda$static$5
	e (Ldmv;)Lbda; lambda$static$4
	f (Ldmv;)Ljava/lang/Float; lambda$static$3
	g (Ldmv;)Lbda; lambda$static$2
	h (Ldmv;)Lbdc; lambda$static$1
	i (Ldmv;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dmw net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a CODEC
	b height
	c state
	<init> (ILdcb;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldmw;)Ldcb; lambda$static$1
	b (Ldmw;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dmx net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	a CODEC
	b placeBlock
	c searchRange
	d canPlaceOnFloor
	e canPlaceOnCeiling
	f canPlaceOnWall
	g chanceOfSpreading
	h canBePlacedOn
	i validDirections
	a (Lcpn;)Lcom/mojang/serialization/DataResult; apply
	<init> (Lcul;IZZZFLhi;)V <init>
	a (Lapf;Lha;)Ljava/util/List; getShuffledDirectionsExcept
	a (Lapf;)Ljava/util/List; getShuffledDirections
	a (Lha;Lha;)Z lambda$getShuffledDirectionsExcept$9
	a ()Ljava/lang/String; lambda$apply$8
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	a (Ldmx;)Lhi; lambda$static$6
	b (Ldmx;)Ljava/lang/Float; lambda$static$5
	c (Ldmx;)Ljava/lang/Boolean; lambda$static$4
	d (Ldmx;)Ljava/lang/Boolean; lambda$static$3
	e (Ldmx;)Ljava/lang/Boolean; lambda$static$2
	f (Ldmx;)Ljava/lang/Integer; lambda$static$1
	g (Ldmx;)Lcul; lambda$static$0
	<clinit> ()V <clinit>
dmy net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	c CODEC
	d spreadWidth
	e spreadHeight
	<init> (Ldot;II)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldmy;)Ljava/lang/Integer; lambda$static$2
	b (Ldmy;)Ljava/lang/Integer; lambda$static$1
	c (Ldmy;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dmz net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a ()Ldmz; lambda$static$0
	<clinit> ()V <clinit>
dna net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a CODEC
	b targetStates
	c size
	d discardChanceOnAirExposure
	<init> (Ljava/util/List;IF)V <init>
	<init> (Ljava/util/List;I)V <init>
	<init> (Ldvn;Ldcb;IF)V <init>
	<init> (Ldvn;Ldcb;I)V <init>
	a (Ldvn;Ldcb;)Ldna$a; target
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldna;)Ljava/lang/Float; lambda$static$2
	b (Ldna;)Ljava/lang/Integer; lambda$static$1
	c (Ldna;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dna$a net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	a CODEC
	b target
	c state
	<init> (Ldvn;Ldcb;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldna$a;)Ldcb; lambda$static$1
	b (Ldna$a;)Ldvn; lambda$static$0
	<clinit> ()V <clinit>
dnb net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	a CODEC
	b chanceOfTallerDripstone
	c chanceOfDirectionalSpread
	d chanceOfSpreadRadius2
	e chanceOfSpreadRadius3
	<init> (FFFF)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldnb;)Ljava/lang/Float; lambda$static$3
	b (Ldnb;)Ljava/lang/Float; lambda$static$2
	c (Ldnb;)Ljava/lang/Float; lambda$static$1
	d (Ldnb;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dnc net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	k CODEC
	l probability
	<init> (F)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldnc;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dnd net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a CODEC
	b featureTrue
	c featureFalse
	<init> (Lhe;Lhe;)V <init>
	e ()Ljava/util/stream/Stream; getFeatures
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldnd;)Lhe; lambda$static$1
	b (Ldnd;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dne net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a CODEC
	b features
	c defaultFeature
	<init> (Ljava/util/List;Lhe;)V <init>
	e ()Ljava/util/stream/Stream; getFeatures
	a (Ldmi;)Ljava/util/stream/Stream; lambda$getFeatures$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldne;)Lhe; lambda$static$1
	b (Ldne;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dnf net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	b tries
	c xzSpread
	d ySpread
	e feature
	a CODEC
	<init> (IIILhe;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I tries
	b ()I xzSpread
	c ()I ySpread
	d ()Lhe; feature
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dng net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a CODEC
	b targetStates
	<init> (Ldcb;Ldcb;)V <init>
	<init> (Ljava/util/List;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldng;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dnh net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	a CODEC
	b targetState
	c replaceState
	d radius
	<init> (Ldcb;Ldcb;Lbdc;)V <init>
	a ()Lbdc; radius
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldnh;)Lbdc; lambda$static$2
	b (Ldnh;)Ldcb; lambda$static$1
	c (Ldnh;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dni net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	a CODEC
	b treeFeature
	c requiredVerticalSpaceForTree
	d rootRadius
	e rootReplaceable
	f rootStateProvider
	g rootPlacementAttempts
	h rootColumnMaxHeight
	i hangingRootRadius
	j hangingRootsVerticalSpan
	k hangingRootStateProvider
	l hangingRootPlacementAttempts
	n allowedVerticalWaterForTree
	o allowedTreePosition
	<init> (Lhe;IILanl;Ldot;IIIILdot;IILdir;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$13
	a (Ldni;)Ldir; lambda$static$12
	b (Ldni;)Ljava/lang/Integer; lambda$static$11
	c (Ldni;)Ljava/lang/Integer; lambda$static$10
	d (Ldni;)Ldot; lambda$static$9
	e (Ldni;)Ljava/lang/Integer; lambda$static$8
	f (Ldni;)Ljava/lang/Integer; lambda$static$7
	g (Ldni;)Ljava/lang/Integer; lambda$static$6
	h (Ldni;)Ljava/lang/Integer; lambda$static$5
	i (Ldni;)Ldot; lambda$static$4
	j (Ldni;)Lanl; lambda$static$3
	k (Ldni;)Ljava/lang/Integer; lambda$static$2
	l (Ldni;)Ljava/lang/Integer; lambda$static$1
	m (Ldni;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dnj net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	b chargeCount
	c amountPerCharge
	d spreadAttempts
	e growthRounds
	f spreadRounds
	g extraRareGrowths
	h catalystChance
	a CODEC
	<init> (IIIIILbdc;F)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I chargeCount
	b ()I amountPerCharge
	c ()I spreadAttempts
	d ()I growthRounds
	f ()I spreadRounds
	g ()Lbdc; extraRareGrowths
	h ()F catalystChance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dnk net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	b toPlace
	a CODEC
	<init> (Ldot;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldot; toPlace
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldnk;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dnl net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a CODEC
	b features
	<init> (Lhi;)V <init>
	e ()Ljava/util/stream/Stream; getFeatures
	a (Lhe;)Ljava/util/stream/Stream; lambda$getFeatures$1
	a (Ldnl;)Lhi; lambda$static$0
	<clinit> ()V <clinit>
dnm net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a CODEC
	b crystalInvulnerable
	c spikes
	d crystalBeamTarget
	<init> (ZLjava/util/List;Lgu;)V <init>
	<init> (ZLjava/util/List;Ljava/util/Optional;)V <init>
	a ()Z isCrystalInvulnerable
	b ()Ljava/util/List; getSpikes
	c ()Lgu; getCrystalBeamTarget
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldnm;)Ljava/util/Optional; lambda$static$2
	b (Ldnm;)Ljava/util/List; lambda$static$1
	c (Ldnm;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
dnn net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a CODEC
	b state
	c requiresBlockBelow
	d rockCount
	e holeCount
	f validBlocks
	<init> (Ldxe;ZIILhi;)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldnn;)Lhi; lambda$static$4
	b (Ldnn;)Ljava/lang/Integer; lambda$static$3
	c (Ldnn;)Ljava/lang/Integer; lambda$static$2
	d (Ldnn;)Ljava/lang/Boolean; lambda$static$1
	e (Ldnn;)Ldxe; lambda$static$0
	<clinit> ()V <clinit>
dno net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	a CODEC
	b trunkProvider
	c dirtProvider
	d trunkPlacer
	e foliageProvider
	f foliagePlacer
	g rootPlacer
	h minimumSize
	i decorators
	j ignoreVines
	k forceDirt
	<init> (Ldot;Ldpw;Ldot;Ldoe;Ljava/util/Optional;Ldot;Ldnt;Ljava/util/List;ZZ)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$10
	a (Ldno;)Ljava/lang/Boolean; lambda$static$9
	b (Ldno;)Ljava/lang/Boolean; lambda$static$8
	c (Ldno;)Ljava/util/List; lambda$static$7
	d (Ldno;)Ldnt; lambda$static$6
	e (Ldno;)Ldot; lambda$static$5
	f (Ldno;)Ljava/util/Optional; lambda$static$4
	g (Ldno;)Ldoe; lambda$static$3
	h (Ldno;)Ldot; lambda$static$2
	i (Ldno;)Ldpw; lambda$static$1
	j (Ldno;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dno$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	c trunkPlacer
	b foliageProvider
	d foliagePlacer
	e rootPlacer
	f dirtProvider
	g minimumSize
	h decorators
	i ignoreVines
	j forceDirt
	<init> (Ldot;Ldpw;Ldot;Ldoe;Ljava/util/Optional;Ldnt;)V <init>
	<init> (Ldot;Ldpw;Ldot;Ldoe;Ldnt;)V <init>
	a (Ldot;)Ldno$a; dirt
	a (Ljava/util/List;)Ldno$a; decorators
	a ()Ldno$a; ignoreVines
	b ()Ldno$a; forceDirt
	c ()Ldno; build
dnp net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	b spreadWidth
	c spreadHeight
	d maxHeight
	a CODEC
	<init> (III)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I spreadWidth
	b ()I spreadHeight
	c ()I maxHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dnq net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	a CODEC
	b floorSearchRange
	c placementRadiusAroundFloor
	d placementProbabilityPerValidPosition
	<init> (IIF)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldnq;)Ljava/lang/Float; lambda$static$2
	b (Ldnq;)Ljava/lang/Integer; lambda$static$1
	c (Ldnq;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dnr net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	a CODEC
	b replaceable
	c groundState
	d vegetationFeature
	e surface
	f depth
	g extraBottomBlockChance
	h verticalRange
	i vegetationChance
	j xzRadius
	k extraEdgeColumnChance
	<init> (Lanl;Ldot;Lhe;Ldqv;Lbdc;FIFLbdc;F)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$10
	a (Ldnr;)Ljava/lang/Float; lambda$static$9
	b (Ldnr;)Lbdc; lambda$static$8
	c (Ldnr;)Ljava/lang/Float; lambda$static$7
	d (Ldnr;)Ljava/lang/Integer; lambda$static$6
	e (Ldnr;)Ljava/lang/Float; lambda$static$5
	f (Ldnr;)Lbdc; lambda$static$4
	g (Ldnr;)Ldqv; lambda$static$3
	h (Ldnr;)Lhe; lambda$static$2
	i (Ldnr;)Ldot; lambda$static$1
	j (Ldnr;)Lanl; lambda$static$0
	<clinit> ()V <clinit>
dns net/minecraft/world/level/levelgen/feature/configurations/package-info
dnt net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	a CODEC
	b MAX_WIDTH
	c minClippedHeight
	a ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; minClippedHeightCodec
	<init> (Ljava/util/OptionalInt;)V <init>
	b ()Ldnu; type
	a (II)I getSizeAtHeight
	c ()Ljava/util/OptionalInt; minClippedHeight
	a (Ldnt;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$2
	a (Ljava/util/OptionalInt;)Ljava/util/Optional; lambda$minClippedHeightCodec$1
	a (Ljava/util/Optional;)Ljava/util/OptionalInt; lambda$minClippedHeightCodec$0
	<clinit> ()V <clinit>
dnu net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	a TWO_LAYERS_FEATURE_SIZE
	b THREE_LAYERS_FEATURE_SIZE
	c codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldnu; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dnv net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	d CODEC
	e limit
	f upperLimit
	g lowerSize
	h middleSize
	i upperSize
	<init> (IIIIILjava/util/OptionalInt;)V <init>
	b ()Ldnu; type
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldnv;)Ljava/lang/Integer; lambda$static$4
	b (Ldnv;)Ljava/lang/Integer; lambda$static$3
	c (Ldnv;)Ljava/lang/Integer; lambda$static$2
	d (Ldnv;)Ljava/lang/Integer; lambda$static$1
	e (Ldnv;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dnw net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	d CODEC
	e limit
	f lowerSize
	g upperSize
	<init> (III)V <init>
	<init> (IIILjava/util/OptionalInt;)V <init>
	b ()Ldnu; type
	a (II)I getSizeAtHeight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldnw;)Ljava/lang/Integer; lambda$static$2
	b (Ldnw;)Ljava/lang/Integer; lambda$static$1
	c (Ldnw;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dnx net/minecraft/world/level/levelgen/feature/featuresize/package-info
dny net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a CODEC
	<init> (Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dnz net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a CODEC
	b height
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; blobParts
	<init> (Lbdc;Lbdc;I)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Ldnz;)Ljava/lang/Integer; lambda$blobParts$1
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
doa net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	c CODEC
	<init> (Lbdc;Lbdc;I)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;IIIIZ)Z shouldSkipLocation
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dob net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	a CODEC
	b height
	c wideBottomLayerHoleChance
	g cornerHoleChance
	h hangingLeavesChance
	i hangingLeavesExtensionChance
	<init> (Lbdc;Lbdc;Lbdc;FFFF)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldob;)Ljava/lang/Float; lambda$static$4
	b (Ldob;)Ljava/lang/Float; lambda$static$3
	c (Ldob;)Ljava/lang/Float; lambda$static$2
	d (Ldob;)Ljava/lang/Float; lambda$static$1
	e (Ldob;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
doc net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	a CODEC
	<init> (Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	b (Lapf;IIIIZ)Z shouldSkipLocationSigned
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dod net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	c CODEC
	<init> (Lbdc;Lbdc;I)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;IIIIZ)Z shouldSkipLocation
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
doe net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	d CODEC
	e radius
	f offset
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; foliagePlacerParts
	<init> (Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;II)V createFoliage
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;I)I foliageRadius
	a (Lapf;)I offset
	a (Lapf;IIIIZ)Z shouldSkipLocation
	b (Lapf;IIIIZ)Z shouldSkipLocationSigned
	a (Lcms;Ldoe$b;Lapf;Ldno;Lgu;IIZ)V placeLeavesRow
	a (Lcms;Ldoe$b;Lapf;Ldno;Lgu;IIZFF)V placeLeavesRowWithHangingLeavesBelow
	a (Lcms;Ldoe$b;Lapf;Ldno;FLgu;Lgu$a;)Z tryPlaceExtension
	a (Lcms;Ldoe$b;Lapf;Ldno;Lgu;)Z tryPlaceLeaf
	a (Ldxe;)Z lambda$tryPlaceLeaf$2
	a (Ldoe;)Lbdc; lambda$foliagePlacerParts$1
	b (Ldoe;)Lbdc; lambda$foliagePlacerParts$0
	<clinit> ()V <clinit>
doe$a net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	a pos
	b radiusOffset
	c doubleTrunk
	<init> (Lgu;IZ)V <init>
	a ()Lgu; pos
	b ()I radiusOffset
	c ()Z doubleTrunk
doe$b net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	a (Lgu;Ldcb;)V set
	a (Lgu;)Z isSet
dof net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e BUSH_FOLIAGE_PLACER
	f FANCY_FOLIAGE_PLACER
	g MEGA_JUNGLE_FOLIAGE_PLACER
	h MEGA_PINE_FOLIAGE_PLACER
	i DARK_OAK_FOLIAGE_PLACER
	j RANDOM_SPREAD_FOLIAGE_PLACER
	k CHERRY_FOLIAGE_PLACER
	l codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldof; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dog net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	a CODEC
	b height
	<init> (Lbdc;Lbdc;I)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldog;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
doh net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	a CODEC
	b crownHeight
	<init> (Lbdc;Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldoh;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
doi net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a CODEC
	b height
	<init> (Lbdc;Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;I)I foliageRadius
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldoi;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
doj net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	a CODEC
	b foliageHeight
	c leafPlacementAttempts
	<init> (Lbdc;Lbdc;Lbdc;I)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldoj;)Ljava/lang/Integer; lambda$static$1
	b (Ldoj;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dok net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a CODEC
	b trunkHeight
	<init> (Lbdc;Lbdc;Lbdc;)V <init>
	a ()Ldof; type
	a (Lcms;Ldoe$b;Lapf;Ldno;ILdoe$a;III)V createFoliage
	a (Lapf;ILdno;)I foliageHeight
	a (Lapf;IIIIZ)Z shouldSkipLocation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldok;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dol net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
dom net/minecraft/world/level/levelgen/feature/package-info
don net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	b aboveRootProvider
	c aboveRootPlacementChance
	a CODEC
	<init> (Ldot;F)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldot; aboveRootProvider
	b ()F aboveRootPlacementChance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldon;)Ljava/lang/Float; lambda$static$1
	b (Ldon;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
doo net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	b canGrowThrough
	c muddyRootsIn
	d muddyRootsProvider
	e maxRootWidth
	f maxRootLength
	g randomSkewChance
	a CODEC
	<init> (Lhi;Lhi;Ldot;IIF)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhi; canGrowThrough
	b ()Lhi; muddyRootsIn
	c ()Ldot; muddyRootsProvider
	d ()I maxRootWidth
	e ()I maxRootLength
	f ()F randomSkewChance
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldoo;)Ljava/lang/Float; lambda$static$5
	b (Ldoo;)Ljava/lang/Integer; lambda$static$4
	c (Ldoo;)Ljava/lang/Integer; lambda$static$3
	d (Ldoo;)Ldot; lambda$static$2
	e (Ldoo;)Lhi; lambda$static$1
	f (Ldoo;)Lhi; lambda$static$0
	<clinit> ()V <clinit>
dop net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	a ROOT_WIDTH_LIMIT
	b ROOT_LENGTH_LIMIT
	c CODEC
	h mangroveRootPlacement
	<init> (Lbdc;Ldot;Ljava/util/Optional;Ldoo;)V <init>
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Lgu;Ldno;)Z placeRoots
	a (Lcms;Lapf;Lgu;Lha;Lgu;Ljava/util/List;I)Z simulateRoots
	a (Lgu;Lha;Lapf;Lgu;)Ljava/util/List; potentialRootPositions
	a (Lcms;Lgu;)Z canPlaceRoot
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Ldno;)V placeRoot
	a ()Ldor; type
	a (Ldcb;)Z lambda$placeRoot$3
	b (Ldcb;)Z lambda$canPlaceRoot$2
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldop;)Ldoo; lambda$static$0
	<clinit> ()V <clinit>
doq net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	d CODEC
	e trunkOffsetY
	f rootProvider
	g aboveRootPlacement
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; rootPlacerParts
	<init> (Lbdc;Ldot;Ljava/util/Optional;)V <init>
	a ()Ldor; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Lgu;Ldno;)Z placeRoots
	a (Lcms;Lgu;)Z canPlaceRoot
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Ldno;)V placeRoot
	a (Lcms;Lgu;Ldcb;)Ldcb; getPotentiallyWaterloggedState
	a (Lgu;Lapf;)Lgu; getTrunkOrigin
	a (Ldxe;)Z lambda$getPotentiallyWaterloggedState$3
	a (Ldoq;)Ljava/util/Optional; lambda$rootPlacerParts$2
	b (Ldoq;)Ldot; lambda$rootPlacerParts$1
	c (Ldoq;)Lbdc; lambda$rootPlacerParts$0
	<clinit> ()V <clinit>
dor net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	a MANGROVE_ROOT_PLACER
	b codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldor; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dos net/minecraft/world/level/levelgen/feature/rootplacers/package-info
dot net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a CODEC
	<init> ()V <init>
	a (Ldcb;)Ldpc; simple
	a (Lcpn;)Ldpc; simple
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	<clinit> ()V <clinit>
dou net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c NOISE_THRESHOLD_PROVIDER
	d NOISE_PROVIDER
	e DUAL_NOISE_PROVIDER
	f ROTATED_BLOCK_PROVIDER
	g RANDOMIZED_INT_STATE_PROVIDER
	h codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldou; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dov net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	b CODEC
	i variety
	j slowNoiseParameters
	k slowScale
	l slowNoise
	<init> (Laot;Ldwh$a;FJLdwh$a;FLjava/util/List;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	a (Lgu;)D getSlowNoiseValue
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldov;)Ljava/lang/Float; lambda$static$2
	b (Ldov;)Ldwh$a; lambda$static$1
	c (Ldov;)Laot; lambda$static$0
	<clinit> ()V <clinit>
dow net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	c seed
	d parameters
	e scale
	f noise
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; noiseCodec
	<init> (JLdwh$a;F)V <init>
	a (Lgu;D)D getNoiseValue
	a (Ldow;)Ljava/lang/Float; lambda$noiseCodec$2
	b (Ldow;)Ldwh$a; lambda$noiseCodec$1
	c (Ldow;)Ljava/lang/Long; lambda$noiseCodec$0
dox net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	g CODEC
	h states
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; noiseProviderCodec
	<init> (JLdwh$a;FLjava/util/List;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	a (Ljava/util/List;Lgu;D)Ldcb; getRandomState
	a (Ljava/util/List;D)Ldcb; getRandomState
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldox;)Ljava/util/List; lambda$noiseProviderCodec$0
	<clinit> ()V <clinit>
doy net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	b CODEC
	g threshold
	h highChance
	i defaultState
	j lowStates
	k highStates
	<init> (JLdwh$a;FFFLdcb;Ljava/util/List;Ljava/util/List;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldoy;)Ljava/util/List; lambda$static$4
	b (Ldoy;)Ljava/util/List; lambda$static$3
	c (Ldoy;)Ldcb; lambda$static$2
	d (Ldoy;)Ljava/lang/Float; lambda$static$1
	e (Ldoy;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
doz net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	b CODEC
	c source
	d propertyName
	e property
	f values
	<init> (Ldot;Lddb;Lbdc;)V <init>
	<init> (Ldot;Ljava/lang/String;Lbdc;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	a (Ldcb;Ljava/lang/String;)Lddb; findProperty
	a (Ljava/lang/String;)Ljava/lang/IllegalArgumentException; lambda$findProperty$7
	a (Ldde;)Lddb; lambda$findProperty$6
	b (Ldde;)Z lambda$findProperty$5
	a (Ljava/lang/String;Ldde;)Z lambda$findProperty$4
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldoz;)Lbdc; lambda$static$2
	b (Ldoz;)Ljava/lang/String; lambda$static$1
	c (Ldoz;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dpa net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b CODEC
	c block
	<init> (Lcpn;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	a (Ldpa;)Lcpn; lambda$static$0
	<clinit> ()V <clinit>
dpb net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	b fallback
	c rules
	a CODEC
	<init> (Ldot;Ljava/util/List;)V <init>
	a (Ldot;)Ldpb; simple
	a (Lcpn;)Ldpb; simple
	a (Lcng;Lapf;Lgu;)Ldcb; getState
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldot; fallback
	b ()Ljava/util/List; rules
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpb$a net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	b ifTrue
	c then
	a CODEC
	<init> (Ldir;Ldot;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldir; ifTrue
	b ()Ldot; then
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpc net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b CODEC
	c state
	<init> (Ldcb;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	a (Ldpc;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dpd net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b CODEC
	c weightedList
	a (Lbch;)Lcom/mojang/serialization/DataResult; create
	<init> (Lbch;)V <init>
	<init> (Lbch$a;)V <init>
	a ()Ldou; type
	a (Lapf;Lgu;)Ldcb; getState
	b ()Ljava/lang/String; lambda$create$1
	a (Ldpd;)Lbch; lambda$static$0
	<clinit> ()V <clinit>
dpe net/minecraft/world/level/levelgen/feature/stateproviders/package-info
dpf net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	a CODEC
	b provider
	<init> (Ldot;)V <init>
	a ()Ldpl; type
	a (Ldpk$a;)V place
	a (Ldpk$a;Lgu;)V placeCircle
	b (Ldpk$a;Lgu;)V placeBlockAt
	c (Ldpk$a;Lgu;)V lambda$place$2
	a (ILgu;)Z lambda$place$1
	a (Ldpf;)Ldot; lambda$static$0
	<clinit> ()V <clinit>
dpg net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	a CODEC
	b probability
	c exclusionRadiusXZ
	d exclusionRadiusY
	e blockProvider
	f requiredEmptyBlocks
	g directions
	<init> (FIILdot;ILjava/util/List;)V <init>
	a (Ldpk$a;)V place
	a (Ldpk$a;Lgu;Lha;)Z hasRequiredEmptyBlocks
	a ()Ldpl; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldpg;)Ljava/util/List; lambda$static$5
	b (Ldpg;)Ljava/lang/Integer; lambda$static$4
	c (Ldpg;)Ldot; lambda$static$3
	d (Ldpg;)Ljava/lang/Integer; lambda$static$2
	e (Ldpg;)Ljava/lang/Integer; lambda$static$1
	f (Ldpg;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dph net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	a CODEC
	b WORLDGEN_FACING
	c SPAWN_DIRECTIONS
	d probability
	<init> (F)V <init>
	a ()Ldpl; type
	a (Ldpk$a;)V place
	a (Lapf;Lczk;)V lambda$place$6
	a (Ldpk$a;Lgu;)Z lambda$place$5
	a (Lgu;)Ljava/util/stream/Stream; lambda$place$4
	a (ILgu;)Z lambda$place$3
	a (I)[Lha; lambda$static$2
	a (Lha;)Z lambda$static$1
	a (Ldph;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dpi net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	a CODEC
	b probability
	<init> (F)V <init>
	a ()Ldpl; type
	a (Ldpk$a;)V place
	a (Lapf;Ldpk$a;Lgu;)V lambda$place$2
	a (ILgu;)Z lambda$place$1
	a (Ldpi;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dpj net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a CODEC
	b probability
	a ()Ldpl; type
	<init> (F)V <init>
	a (Ldpk$a;)V place
	a (Lgu;Ldcs;Ldpk$a;)V addHangingVine
	a (Lapf;Ldpk$a;Lgu;)V lambda$place$1
	a (Ldpj;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dpk net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	h CODEC
	<init> ()V <init>
	a ()Ldpl; type
	a (Ldpk$a;)V place
	<clinit> ()V <clinit>
dpk$a net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	a level
	b decorationSetter
	c random
	d logs
	e leaves
	f roots
	<init> (Lcms;Ljava/util/function/BiConsumer;Lapf;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V <init>
	a (Lgu;Ldcs;)V placeVine
	a (Lgu;Ldcb;)V setBlock
	a (Lgu;)Z isAir
	a ()Lcms; level
	b ()Lapf; random
	c ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; logs
	d ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; leaves
	e ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; roots
dpl net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f ATTACHED_TO_LEAVES
	g codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldpl; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dpm net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a ()Ldpl; type
	a (Ldpk$a;)V place
	a (Lapf;Ldpk$a;Lgu;)V lambda$place$1
	b ()Ldpm; lambda$static$0
	<clinit> ()V <clinit>
dpn net/minecraft/world/level/levelgen/feature/treedecorators/package-info
dpo net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	a CODEC
	b minHeightForLeaves
	h bendLength
	<init> (IIIILbdc;)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldpo;)Lbdc; lambda$static$1
	b (Ldpo;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dpp net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	b BRANCH_START_CODEC
	a CODEC
	h branchCount
	i branchHorizontalLength
	j branchStartOffsetFromTop
	k secondBranchStartOffsetFromTop
	l branchEndOffsetFromTop
	<init> (IIILbdc;Lbdc;Lbdi;Lbdc;)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;Ljava/util/function/Function;Lha;IZLgu$a;)Ldoe$a; generateBranch
	a (Lha;Ldcb;)Ldcb; lambda$placeTrunk$7
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldpp;)Lbdc; lambda$static$5
	b (Ldpp;)Lbdi; lambda$static$4
	c (Ldpp;)Lbdc; lambda$static$3
	d (Ldpp;)Lbdc; lambda$static$2
	a (Lbdi;)Lcom/mojang/serialization/DataResult; lambda$static$1
	b ()Ljava/lang/String; lambda$static$0
	<clinit> ()V <clinit>
dpq net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpr net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	a CODEC
	b TRUNK_HEIGHT_SCALE
	h CLUSTER_DENSITY_MAGIC
	i BRANCH_SLOPE
	j BRANCH_LENGTH_MAGIC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Lgu;ZLdno;)Z makeLimb
	a (Lgu;)I getSteps
	a (Lgu;Lgu;)Lha$a; getLogAxis
	a (II)Z trimBranches
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ljava/util/List;Ldno;)V makeBranches
	b (II)F treeShape
	a (Lgu;Lgu;Ldcb;)Ldcb; lambda$makeLimb$1
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpr$a net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	a attachment
	b branchBase
	<init> (Lgu;I)V <init>
	a ()I getBranchBase
dps net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpt net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu$a;Ldno;Lgu;III)V placeLogIfFreeWithOffset
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpu net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	b CODEC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpv net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	a CODEC
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dpw net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	c CODEC
	a MAX_BASE_HEIGHT
	b MAX_RAND
	d MAX_HEIGHT
	e baseHeight
	f heightRandA
	g heightRandB
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; trunkPlacerParts
	<init> (III)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	a (Lapf;)I getTreeHeight
	c (Lcms;Lgu;)Z isDirt
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Ldno;)V setDirtAt
	b (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Ldno;)Z placeLog
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu;Ldno;Ljava/util/function/Function;)Z placeLog
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;Lgu$a;Ldno;)V placeLogIfFree
	a (Lcms;Lgu;)Z validTreePos
	b (Lcms;Lgu;)Z isFree
	a (Ldcb;)Z lambda$isFree$4
	b (Ldcb;)Z lambda$isDirt$3
	a (Ldpw;)Ljava/lang/Integer; lambda$trunkPlacerParts$2
	b (Ldpw;)Ljava/lang/Integer; lambda$trunkPlacerParts$1
	c (Ldpw;)Ljava/lang/Integer; lambda$trunkPlacerParts$0
	<clinit> ()V <clinit>
dpx net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	a STRAIGHT_TRUNK_PLACER
	b FORKING_TRUNK_PLACER
	c GIANT_TRUNK_PLACER
	d MEGA_JUNGLE_TRUNK_PLACER
	e DARK_OAK_TRUNK_PLACER
	f FANCY_TRUNK_PLACER
	g BENDING_TRUNK_PLACER
	h UPWARDS_BRANCHING_TRUNK_PLACER
	i CHERRY_TRUNK_PLACER
	j codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldpx; register
	<init> (Lcom/mojang/serialization/Codec;)V <init>
	a ()Lcom/mojang/serialization/Codec; codec
	<clinit> ()V <clinit>
dpy net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	a CODEC
	b extraBranchSteps
	h placeBranchPerLogProbability
	i extraBranchLength
	j canGrowThrough
	<init> (IIILbdc;FLbdc;Lhi;)V <init>
	a ()Ldpx; type
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILgu;Ldno;)Ljava/util/List; placeTrunk
	a (Lcms;Ljava/util/function/BiConsumer;Lapf;ILdno;Ljava/util/List;Lgu$a;ILha;II)V placeBranch
	a (Lcms;Lgu;)Z validTreePos
	a (Ldcb;)Z lambda$validTreePos$5
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldpy;)Lhi; lambda$static$3
	b (Ldpy;)Lbdc; lambda$static$2
	c (Ldpy;)Ljava/lang/Float; lambda$static$1
	d (Ldpy;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dpz net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
dqa net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a CODEC
	b block
	c height
	<init> (ILcpn;)V <init>
	a ()I getHeight
	b ()Ldcb; getBlockState
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldqa;)Lcpn; lambda$static$0
	<clinit> ()V <clinit>
dqb net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	c displayItem
	d settings
	a DIRECT_CODEC
	b CODEC
	<init> (Lhe;Ldqd;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; displayItem
	b ()Ldqd; settings
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldqb;)Ldqd; lambda$static$1
	b (Ldqb;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dqc net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	a CLASSIC_FLAT
	b TUNNELERS_DREAM
	c WATER_WORLD
	d OVERWORLD
	e SNOWY_KINGDOM
	f BOTTOMLESS_PIT
	g DESERT
	h REDSTONE_READY
	i THE_VOID
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Ljava/lang/String;)Lacp; register
	<clinit> ()V <clinit>
dqc$a net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	a context
	<init> (Lnm;)V <init>
	a (Lacp;Lcml;Lacp;Ljava/util/Set;ZZ[Ldqa;)V register
	a ()V run
dqd net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	b LOGGER
	a CODEC
	c structureOverrides
	d layersInfo
	e biome
	f layers
	g voidGen
	h decoration
	i addLakes
	j lakes
	a (Ldqd;)Lcom/mojang/serialization/DataResult; validateHeight
	<init> (Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;Lhe$c;Lhe;Lhe;)V <init>
	a (Ljava/util/Optional;Lhe;)Lhe; getBiome
	<init> (Ljava/util/Optional;Lhe;Ljava/util/List;)V <init>
	a (Ljava/util/List;Ljava/util/Optional;Lhe;)Ldqd; withBiomeAndLayers
	a ()V setDecoration
	b ()V setAddLakes
	a (Lhe;)Lcnl; adjustGenerationSettings
	c ()Ljava/util/Optional; structureOverrides
	d ()Lhe; getBiome
	e ()Ljava/util/List; getLayersInfo
	f ()Ljava/util/List; getLayers
	g ()V updateLayers
	a (Lhf;Lhf;Lhf;)Ldqd; getDefault
	a (Lhf;)Lhe; getDefaultBiome
	b (Lhf;)Ljava/util/List; createLakesList
	a (Ldcb;)Z lambda$updateLayers$6
	h ()Ljava/lang/String; lambda$validateHeight$5
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	b (Ldqd;)Ljava/util/Optional; lambda$static$3
	c (Ldqd;)Ljava/lang/Boolean; lambda$static$2
	d (Ldqd;)Ljava/lang/Boolean; lambda$static$1
	e (Ldqd;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
dqe net/minecraft/world/level/levelgen/flat/package-info
dqf net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	<init> (Ldie;Ldie;I)V <init>
	a (Ldie;Ldie;I)Ldqf; of
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldqf;)Ljava/lang/Integer; lambda$static$2
	b (Ldqf;)Ldie; lambda$static$1
	c (Ldqf;)Ldie; lambda$static$0
	<clinit> ()V <clinit>
dqg net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	a ZERO
	b CODEC
	d value
	a (Ldie;)Ldqg; of
	<init> (Ldie;)V <init>
	b ()Ldie; getValue
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	toString ()Ljava/lang/String; toString
	a (Ldqg;)Lcom/mojang/datafixers/util/Either; lambda$static$4
	a (Lcom/mojang/datafixers/util/Either;)Ldqg; lambda$static$3
	b (Ldqg;)Ldqg; lambda$static$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	c (Ldqg;)Ldie; lambda$static$0
	<clinit> ()V <clinit>
dqh net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	<init> ()V <init>
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	a (Ldqh;)Lcom/mojang/datafixers/util/Either; lambda$static$2
	a (Lcom/mojang/datafixers/util/Either;)Ldqh; lambda$static$1
	b (Ldqh;)Ldqh; lambda$static$0
	<clinit> ()V <clinit>
dqi net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d VERY_BIASED_TO_BOTTOM
	e TRAPEZOID
	f WEIGHTED_LIST
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldqi; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dqj net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f plateau
	<init> (Ldie;Ldie;I)V <init>
	a (Ldie;Ldie;I)Ldqj; of
	a (Ldie;Ldie;)Ldqj; of
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldqj;)Ljava/lang/Integer; lambda$static$2
	b (Ldqj;)Ldie; lambda$static$1
	c (Ldqj;)Ldie; lambda$static$0
	<clinit> ()V <clinit>
dqk net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f warnedFor
	<init> (Ldie;Ldie;)V <init>
	a (Ldie;Ldie;)Ldqk; of
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldqk;)Ldie; lambda$static$1
	b (Ldqk;)Ldie; lambda$static$0
	<clinit> ()V <clinit>
dql net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	<init> (Ldie;Ldie;I)V <init>
	a (Ldie;Ldie;I)Ldql; of
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldql;)Ljava/lang/Integer; lambda$static$2
	b (Ldql;)Ldie; lambda$static$1
	c (Ldql;)Ldie; lambda$static$0
	<clinit> ()V <clinit>
dqm net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	a CODEC
	b distribution
	<init> (Lbch;)V <init>
	a (Lapf;Ldih;)I sample
	a ()Ldqi; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldqm;)Lbch; lambda$static$0
	<clinit> ()V <clinit>
dqn net/minecraft/world/level/levelgen/heightproviders/package-info
dqo net/minecraft/world/level/levelgen/material/MaterialRuleList
	a materialRuleList
	<init> (Ljava/util/List;)V <init>
	calculate (Ldhd$b;)Ldcb; calculate
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; materialRuleList
dqp net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	a (Ldho;III)Ldcb; apply
dqq net/minecraft/world/level/levelgen/material/package-info
dqr net/minecraft/world/level/levelgen/package-info
dqs net/minecraft/world/level/levelgen/placement/BiomeFilter
	c INSTANCE
	a CODEC
	<init> ()V <init>
	a ()Ldqs; biome
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
	b ()Ldri; type
	c ()Ljava/lang/IllegalStateException; lambda$shouldPlace$1
	d ()Ldqs; lambda$static$0
	<clinit> ()V <clinit>
dqt net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	a CODEC
	c predicate
	<init> (Ldir;)V <init>
	a (Ldir;)Ldqt; forPredicate
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldqt;)Ldir; lambda$static$0
	<clinit> ()V <clinit>
dqu net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	a CODEC
	c step
	<init> (Ldhg$a;)V <init>
	a (Ldhg$a;)Ldqu; forStep
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Ldqu;)Ldhg$a; lambda$static$0
	<clinit> ()V <clinit>
dqv net/minecraft/world/level/levelgen/placement/CaveSurface
	a CEILING
	b FLOOR
	c CODEC
	d direction
	e y
	f id
	g $VALUES
	values ()[Ldqv; values
	valueOf (Ljava/lang/String;)Ldqv; valueOf
	<init> (Ljava/lang/String;ILha;ILjava/lang/String;)V <init>
	a ()Lha; getDirection
	b ()I getY
	c ()Ljava/lang/String; getSerializedName
	d ()[Ldqv; $values
	<clinit> ()V <clinit>
dqw net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	a CODEC
	c count
	<init> (Lbdc;)V <init>
	a (Lbdc;)Ldqw; of
	a (I)Ldqw; of
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Ldrf;IIII)I findOnGroundYPosition
	a (Ldcb;)Z isEmpty
	a (Ldqw;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dqx net/minecraft/world/level/levelgen/placement/CountPlacement
	a CODEC
	c count
	<init> (Lbdc;)V <init>
	a (Lbdc;)Ldqx; of
	a (I)Ldqx; of
	a (Lapf;Lgu;)I count
	b ()Ldri; type
	a (Ldqx;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
dqy net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	c directionOfSearch
	d targetCondition
	e allowedSearchCondition
	f maxSteps
	a CODEC
	<init> (Lha;Ldir;Ldir;I)V <init>
	a (Lha;Ldir;Ldir;I)Ldqy; scanningFor
	a (Lha;Ldir;I)Ldqy; scanningFor
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldqy;)Ljava/lang/Integer; lambda$static$3
	b (Ldqy;)Ldir; lambda$static$2
	c (Ldqy;)Ldir; lambda$static$1
	d (Ldqy;)Lha; lambda$static$0
	<clinit> ()V <clinit>
dqz net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	a CODEC
	c height
	<init> (Ldqh;)V <init>
	a (Ldqh;)Ldqz; of
	a (Ldie;Ldie;)Ldqz; uniform
	b (Ldie;Ldie;)Ldqz; triangle
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldqz;)Ldqh; lambda$static$0
	<clinit> ()V <clinit>
dra net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	a CODEC
	c heightmap
	<init> (Ldhk$a;)V <init>
	a (Ldhk$a;)Ldra; onHeightmap
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldra;)Ldhk$a; lambda$static$0
	<clinit> ()V <clinit>
drb net/minecraft/world/level/levelgen/placement/InSquarePlacement
	c INSTANCE
	a CODEC
	<init> ()V <init>
	a ()Ldrb; spread
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	c ()Ldrb; lambda$static$0
	<clinit> ()V <clinit>
drc net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	a CODEC
	c noiseToCountRatio
	d noiseFactor
	e noiseOffset
	<init> (IDD)V <init>
	a (IDD)Ldrc; of
	a (Lapf;Lgu;)I count
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldrc;)Ljava/lang/Double; lambda$static$2
	b (Ldrc;)Ljava/lang/Double; lambda$static$1
	c (Ldrc;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
drd net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	a CODEC
	c noiseLevel
	d belowNoise
	e aboveNoise
	<init> (DII)V <init>
	a (DII)Ldrd; of
	a (Lapf;Lgu;)I count
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldrd;)Ljava/lang/Integer; lambda$static$2
	b (Ldrd;)Ljava/lang/Integer; lambda$static$1
	c (Ldrd;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
dre net/minecraft/world/level/levelgen/placement/PlacedFeature
	e feature
	f placement
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d LIST_OF_LISTS_CODEC
	<init> (Lhe;Ljava/util/List;)V <init>
	a (Lcng;Lddy;Lapf;Lgu;)Z place
	b (Lcng;Lddy;Lapf;Lgu;)Z placeWithBiomeCheck
	a (Ldrf;Lapf;Lgu;)Z placeWithContext
	a ()Ljava/util/stream/Stream; getFeatures
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lhe; feature
	c ()Ljava/util/List; placement
	a (Ldkb;Ldrf;Lapf;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lgu;)V lambda$placeWithContext$4
	a (Ldrh;Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; lambda$placeWithContext$3
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldre;)Ljava/util/List; lambda$static$1
	b (Ldre;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
drf net/minecraft/world/level/levelgen/placement/PlacementContext
	a level
	b generator
	c topFeature
	<init> (Lcng;Lddy;Ljava/util/Optional;)V <init>
	a (Ldhk$a;II)I getHeight
	a (Lclt;Ldhg$a;)Lddw; getCarvingMask
	a (Lgu;)Ldcb; getBlockState
	c ()I getMinBuildHeight
	d ()Lcng; getLevel
	e ()Ljava/util/Optional; topFeature
	f ()Lddy; generator
drg net/minecraft/world/level/levelgen/placement/PlacementFilter
	<init> ()V <init>
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
drh net/minecraft/world/level/levelgen/placement/PlacementModifier
	b CODEC
	<init> ()V <init>
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	<clinit> ()V <clinit>
dri net/minecraft/world/level/levelgen/placement/PlacementModifierType
	a BLOCK_PREDICATE_FILTER
	b RARITY_FILTER
	c SURFACE_RELATIVE_THRESHOLD_FILTER
	d SURFACE_WATER_DEPTH_FILTER
	e BIOME_FILTER
	f COUNT
	g NOISE_BASED_COUNT
	h NOISE_THRESHOLD_COUNT
	i COUNT_ON_EVERY_LAYER
	j ENVIRONMENT_SCAN
	k HEIGHTMAP
	l HEIGHT_RANGE
	m IN_SQUARE
	n RANDOM_OFFSET
	o CARVING_MASK_PLACEMENT
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldri; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
drj net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	a CODEC
	c xzSpread
	d ySpread
	a (Lbdc;Lbdc;)Ldrj; of
	a (Lbdc;)Ldrj; vertical
	b (Lbdc;)Ldrj; horizontal
	<init> (Lbdc;Lbdc;)V <init>
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldrj;)Lbdc; lambda$static$1
	b (Ldrj;)Lbdc; lambda$static$0
	<clinit> ()V <clinit>
drk net/minecraft/world/level/levelgen/placement/RarityFilter
	a CODEC
	c chance
	<init> (I)V <init>
	a (I)Ldrk; onAverageOnceEvery
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
	b ()Ldri; type
	a (Ldrk;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
drl net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	<init> ()V <init>
	a (Lapf;Lgu;)I count
	a_ (Ldrf;Lapf;Lgu;)Ljava/util/stream/Stream; getPositions
	a (Lgu;I)Lgu; lambda$getPositions$0
drm net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	a CODEC
	c heightmap
	d minInclusive
	e maxInclusive
	<init> (Ldhk$a;II)V <init>
	a (Ldhk$a;II)Ldrm; of
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Ldrm;)Ljava/lang/Integer; lambda$static$2
	b (Ldrm;)Ljava/lang/Integer; lambda$static$1
	c (Ldrm;)Ldhk$a; lambda$static$0
	<clinit> ()V <clinit>
drn net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	a CODEC
	c maxWaterDepth
	<init> (I)V <init>
	a (I)Ldrn; forMaxDepth
	a (Ldrf;Lapf;Lgu;)Z shouldPlace
	b ()Ldri; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldrn;)Ljava/lang/Integer; lambda$static$0
	<clinit> ()V <clinit>
dro net/minecraft/world/level/levelgen/placement/package-info
drp net/minecraft/world/level/levelgen/presets/WorldPreset
	a DIRECT_CODEC
	b CODEC
	c dimensions
	<init> (Ljava/util/Map;)V <init>
	c ()Lhr; createRegistry
	a ()Ldif; createWorldDimensions
	b ()Ljava/util/Optional; overworld
	a (Ldrp;)Lcom/mojang/serialization/DataResult; requireOverworld
	d ()Ljava/lang/String; lambda$requireOverworld$3
	a (Lia;Lacp;)V lambda$createRegistry$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	b (Ldrp;)Ljava/util/Map; lambda$static$0
	<clinit> ()V <clinit>
drq net/minecraft/world/level/levelgen/presets/WorldPresets
	a NORMAL
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e SINGLE_BIOME_SURFACE
	f DEBUG
	<init> ()V <init>
	a (Lnm;)V bootstrap
	a (Ljava/lang/String;)Lacp; register
	a (Lhr;)Ljava/util/Optional; fromSettings
	a (Lhs;)Ldif; createNormalWorldDimensions
	b (Lhs;)Ldfl; getNormalOverworld
	a (Ldfl;)Ljava/util/Optional; lambda$fromSettings$0
	<clinit> ()V <clinit>
drq$a net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	a context
	b noiseSettings
	c biomes
	d placedFeatures
	e structureSets
	f multiNoiseBiomeSourceParameterLists
	g overworldDimensionType
	h netherStem
	i endStem
	<init> (Lnm;)V <init>
	a (Lddy;)Ldfl; makeOverworld
	a (Lcno;Lhe;)Ldfl; makeNoiseBasedOverworld
	a (Ldfl;)Ldrp; createPresetWithCustomOverworld
	a (Lacp;Ldfl;)V registerCustomOverworldPreset
	a (Lcno;)V registerOverworlds
	a ()V bootstrap
drr net/minecraft/world/level/levelgen/presets/package-info
drs net/minecraft/world/level/levelgen/structure/BoundingBox
	b LOGGER
	a CODEC
	c minX
	d minY
	e minZ
	f maxX
	g maxY
	h maxZ
	<init> (Lgu;)V <init>
	<init> (IIIIII)V <init>
	a (Lhz;Lhz;)Ldrs; fromCorners
	a ()Ldrs; infinite
	a (IIIIIIIIILha;)Ldrs; orientBox
	a (Ldrs;)Z intersects
	a (IIII)Z intersects
	a (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingPositions
	b (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingBoxes
	b (Ldrs;)Ldrs; encapsulate
	a (Lgu;)Ldrs; encapsulate
	a (III)Ldrs; move
	a (Lhz;)Ldrs; move
	b (III)Ldrs; moved
	a (I)Ldrs; inflatedBy
	b (Lhz;)Z isInside
	c (III)Z isInside
	b ()Lhz; getLength
	c ()I getXSpan
	d ()I getYSpan
	e ()I getZSpan
	f ()Lgu; getCenter
	a (Ljava/util/function/Consumer;)V forAllCorners
	toString ()Ljava/lang/String; toString
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	g ()I minX
	h ()I minY
	i ()I minZ
	j ()I maxX
	k ()I maxY
	l ()I maxZ
	c (Ldrs;)Ljava/util/stream/IntStream; lambda$static$2
	a (Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult; lambda$static$1
	a ([I)Ldrs; lambda$static$0
	<clinit> ()V <clinit>
drs$1 net/minecraft/world/level/levelgen/structure/BoundingBox$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
drt net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	a VILLAGES
	b DESERT_PYRAMIDS
	c IGLOOS
	d JUNGLE_TEMPLES
	e SWAMP_HUTS
	f PILLAGER_OUTPOSTS
	g OCEAN_MONUMENTS
	h WOODLAND_MANSIONS
	i BURIED_TREASURES
	j MINESHAFTS
	k RUINED_PORTALS
	l SHIPWRECKS
	m OCEAN_RUINS
	n NETHER_COMPLEXES
	o NETHER_FOSSILS
	p END_CITIES
	q ANCIENT_CITIES
	r STRONGHOLDS
	s TRAIL_RUINS
	a (Ljava/lang/String;)Lacp; register
	<clinit> ()V <clinit>
dru net/minecraft/world/level/levelgen/structure/BuiltinStructures
	a PILLAGER_OUTPOST
	b MINESHAFT
	c MINESHAFT_MESA
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h SHIPWRECK
	i SHIPWRECK_BEACHED
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN_COLD
	n OCEAN_RUIN_WARM
	o FORTRESS
	p NETHER_FOSSIL
	q END_CITY
	r BURIED_TREASURE
	s BASTION_REMNANT
	t VILLAGE_PLAINS
	u VILLAGE_DESERT
	v VILLAGE_SAVANNA
	w VILLAGE_SNOWY
	x VILLAGE_TAIGA
	y RUINED_PORTAL_STANDARD
	z RUINED_PORTAL_DESERT
	A RUINED_PORTAL_JUNGLE
	B RUINED_PORTAL_SWAMP
	C RUINED_PORTAL_MOUNTAIN
	D RUINED_PORTAL_OCEAN
	E RUINED_PORTAL_NETHER
	F ANCIENT_CITY
	G TRAIL_RUINS
	a (Ljava/lang/String;)Lacp; createKey
	<clinit> ()V <clinit>
drv net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c OLD_STRUCTURE_REGISTRY_KEYS
	d hasLegacyData
	e dataMap
	f indexMap
	g legacyKeys
	h currentKeys
	<init> (Ldyu;Ljava/util/List;Ljava/util/List;)V <init>
	a (J)V removeIndex
	a (Lqr;)Lqr; updateFromLegacy
	a (IILjava/lang/String;)Z hasLegacyStart
	a (II)Z isUnhandledStructureStart
	a (Lqr;Lclt;)Lqr; updateStructureStart
	a (Ldyu;)V populateCaches
	a (Lacp;Ldyu;)Ldrv; getLegacyStructureHandler
	a (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; lambda$populateCaches$2
	a (Ljava/util/HashMap;)V lambda$static$1
	b (Ljava/util/HashMap;)V lambda$static$0
	<clinit> ()V <clinit>
drw net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	d LOGGER
	a element
	b position
	h groundLevelDelta
	c rotation
	i junctions
	j structureTemplateManager
	<init> (Ldvu;Ldth;Lgu;ILcvz;Ldrs;)V <init>
	<init> (Ldsq;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lgu;Z)V place
	a (III)V move
	a ()Lcvz; getRotation
	toString ()Ljava/lang/String; toString
	b ()Ldth; getElement
	c ()Lgu; getPosition
	d ()I getGroundLevelDelta
	a (Ldtc;)V addJunction
	e ()Ljava/util/List; getJunctions
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$2
	a (Lcom/mojang/serialization/DynamicOps;Lrk;)V lambda$new$1
	l ()Ljava/lang/IllegalStateException; lambda$new$0
	<clinit> ()V <clinit>
drx net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	a NONE
	afterPlace (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Ldsp;)V afterPlace
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Ldsp;)V lambda$static$0
	<clinit> ()V <clinit>
dry net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	<init> (Ldsr;IIIIIILha;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcmn;Ldrs;I)Z updateAverageGroundHeight
	a (Lcmn;I)Z updateHeightPositionToLowestGroundHeight
drz net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	d constructor
	e width
	f depth
	<init> (Ldrz$a;IILdsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
drz$a net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
	construct (Ldij;II)Ldse; construct
dsa net/minecraft/world/level/levelgen/structure/Structure
	a DIRECT_CODEC
	b CODEC
	c settings
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; settingsCodec
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; simpleCodec
	<init> (Ldsa$c;)V <init>
	a ()Lhi; biomes
	b ()Ljava/util/Map; spawnOverrides
	c ()Ldhg$b; step
	d ()Ldsl; terrainAdaptation
	a (Ldrs;)Ldrs; adjustBoundingBox
	a (Lhs;Lddy;Lcno;Ldhy;Ldvu;JLclt;ILcmo;Ljava/util/function/Predicate;)Ldsi; generate
	a (Ldsa$a;Ldhk$a;Ljava/util/function/Consumer;)Ljava/util/Optional; onTopOfChunkCenter
	a (Ldsa$b;Ldsa$a;)Z isValidBiome
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Ldsp;)V afterPlace
	b (Ldsa$a;IIII)[I getCornerHeights
	a (Ldsa$a;II)I getLowestY
	a (Ldsa$a;IIII)I getLowestY
	a (Ldsa$a;Lcvz;)Lgu; getLowestYIn5by5BoxOffset7Blocks
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	b (Ldsa$a;)Ljava/util/Optional; findValidGenerationPoint
	e ()Ldsj; type
	a (Ldsa$a;Ldsa$b;)Z lambda$findValidGenerationPoint$2
	a (Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$simpleCodec$1
	a (Ldsa;)Ldsa$c; lambda$settingsCodec$0
	<clinit> ()V <clinit>
dsa$a net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	a registryAccess
	b chunkGenerator
	c biomeSource
	d randomState
	e structureTemplateManager
	f random
	g seed
	h chunkPos
	i heightAccessor
	j validBiome
	<init> (Lhs;Lddy;Lcno;Ldhy;Ldvu;JLclt;Lcmo;Ljava/util/function/Predicate;)V <init>
	<init> (Lhs;Lddy;Lcno;Ldhy;Ldvu;Ldij;JLclt;Lcmo;Ljava/util/function/Predicate;)V <init>
	a (JLclt;)Ldij; makeRandom
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhs; registryAccess
	b ()Lddy; chunkGenerator
	c ()Lcno; biomeSource
	d ()Ldhy; randomState
	e ()Ldvu; structureTemplateManager
	f ()Ldij; random
	g ()J seed
	h ()Lclt; chunkPos
	i ()Lcmo; heightAccessor
	j ()Ljava/util/function/Predicate; validBiome
dsa$b net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	a position
	b generator
	<init> (Lgu;Ljava/util/function/Consumer;)V <init>
	<init> (Lgu;Lcom/mojang/datafixers/util/Either;)V <init>
	a ()Ldss; getPiecesBuilder
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Lgu; position
	c ()Lcom/mojang/datafixers/util/Either; generator
	a (Ldss;)Ldss; lambda$getPiecesBuilder$1
	a (Ljava/util/function/Consumer;)Ldss; lambda$getPiecesBuilder$0
dsa$c net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	b biomes
	c spawnOverrides
	d step
	e terrainAdaptation
	a CODEC
	<init> (Lhi;Ljava/util/Map;Ldhg$b;Ldsl;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhi; biomes
	b ()Ljava/util/Map; spawnOverrides
	c ()Ldhg$b; step
	d ()Ldsl; terrainAdaptation
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsb net/minecraft/world/level/levelgen/structure/StructureCheck
	a LOGGER
	b NO_STRUCTURE
	c storageAccess
	d registryAccess
	e biomes
	f structureConfigs
	g structureTemplateManager
	h dimension
	i chunkGenerator
	j randomState
	k heightAccessor
	l biomeSource
	m seed
	n fixerUpper
	o loadedChunks
	p featureChecks
	<init> (Ldex;Lhs;Ldvu;Lacp;Lddy;Ldhy;Lcmo;Lcno;JLcom/mojang/datafixers/DataFixer;)V <init>
	a (Lclt;Ldsa;Z)Ldsc; checkStart
	b (Lclt;Ldsa;)Z canCreateStructure
	a (Lclt;Ldsa;ZJ)Ldsc; tryLoadFromStorage
	a (Lqr;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; loadStructures
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; deduplicateEmptyMap
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldsa;Z)Ldsc; checkStructureInfo
	a (Lclt;Ljava/util/Map;)V onStructureLoad
	a (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V storeFullResults
	a (Lclt;Ldsa;)V incrementReference
	a (Ldsa;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; lambda$incrementReference$5
	a (Ldsa;Ljava/lang/Integer;)Ljava/lang/Integer; lambda$incrementReference$4
	a (JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V lambda$storeFullResults$3
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldsa;Ldsi;)V lambda$onStructureLoad$2
	a (Lclt;Ldsa;J)Z lambda$checkStart$1
	a (Ldsa;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap; lambda$checkStart$0
	<clinit> ()V <clinit>
dsc net/minecraft/world/level/levelgen/structure/StructureCheckResult
	a START_PRESENT
	b START_NOT_PRESENT
	c CHUNK_LOAD_NEEDED
	d $VALUES
	values ()[Ldsc; values
	valueOf (Ljava/lang/String;)Ldsc; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldsc; $values
	<clinit> ()V <clinit>
dsd net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a TAG_REMAINING_INDEXES
	b TAG_All_INDEXES
	c all
	d remaining
	<init> (Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V <init>
	<init> ()V <init>
	b (Lqr;)Ldsd; load
	a (Lqr;)Lqr; save
	a (J)V addIndex
	b (J)Z hasStartIndex
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
dse net/minecraft/world/level/levelgen/structure/StructurePiece
	a LOGGER
	e CAVE_AIR
	f boundingBox
	b orientation
	c mirror
	d rotation
	g genDepth
	h type
	i SHAPE_CHECK_BLOCKS
	<init> (Ldsr;ILdrs;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	a (IIILha;III)Ldrs; makeBoundingBox
	a (Lapf;)Lha; getRandomHorizontalDirection
	a (Ldsq;)Lqr; createTag
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	f ()Ldrs; getBoundingBox
	g ()I getGenDepth
	a (I)V setGenDepth
	a (Lclt;I)Z isCloseToChunk
	h ()Lgu; getLocatorPosition
	b (III)Lgu$a; getWorldPos
	a (II)I getWorldX
	b (I)I getWorldY
	b (II)I getWorldZ
	a (Lcng;Ldcb;IIILdrs;)V placeBlock
	a (Lcmp;IIILdrs;)Z canBeReplaced
	a (Lcls;IIILdrs;)Ldcb; getBlock
	b (Lcmp;IIILdrs;)Z isInterior
	a (Lcng;Ldrs;IIIIII)V generateAirBox
	a (Lcng;Ldrs;IIIIIILdcb;Ldcb;Z)V generateBox
	a (Lcng;Ldrs;Ldrs;Ldcb;Ldcb;Z)V generateBox
	a (Lcng;Ldrs;IIIIIIZLapf;Ldse$a;)V generateBox
	a (Lcng;Ldrs;Ldrs;ZLapf;Ldse$a;)V generateBox
	a (Lcng;Ldrs;Lapf;FIIIIIILdcb;Ldcb;ZZ)V generateMaybeBox
	a (Lcng;Ldrs;Lapf;FIIILdcb;)V maybeGenerateBlock
	a (Lcng;Ldrs;IIIIIILdcb;Z)V generateUpperHalfSphere
	b (Lcng;Ldcb;IIILdrs;)V fillColumnDown
	a (Ldcb;)Z isReplaceableByStructures
	a (Lcng;Ldrs;Lapf;IIILacq;)Z createChest
	a (Lcls;Lgu;Ldcb;)Ldcb; reorient
	a (Lcnb;Ldrs;Lapf;Lgu;Lacq;Ldcb;)Z createChest
	a (Lcng;Ldrs;Lapf;IIILha;Lacq;)Z createDispenser
	a (III)V move
	a (Ljava/util/stream/Stream;)Ldrs; createBoundingBox
	a (Ljava/util/List;Ldrs;)Ldse; findCollisionPiece
	i ()Lha; getOrientation
	a (Lha;)V setOrientation
	a ()Lcvz; getRotation
	j ()Lcui; getMirror
	k ()Ldsr; getType
	b ()Ljava/lang/IllegalStateException; lambda$createBoundingBox$2
	a (Lqr;Lrk;)V lambda$createTag$1
	c ()Ljava/lang/IllegalArgumentException; lambda$new$0
	<clinit> ()V <clinit>
dse$1 net/minecraft/world/level/levelgen/structure/StructurePiece$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dse$a net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	<init> ()V <init>
	a (Lapf;IIIZ)V next
	a ()Ldcb; getNext
dsf net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	a (Ldse;)V addPiece
	a (Ldrs;)Ldse; findCollisionPiece
dsg net/minecraft/world/level/levelgen/structure/StructureSet
	c structures
	d placement
	a DIRECT_CODEC
	b CODEC
	<init> (Lhe;Ldsx;)V <init>
	<init> (Ljava/util/List;Ldsx;)V <init>
	a (Lhe;I)Ldsg$a; entry
	a (Lhe;)Ldsg$a; entry
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/List; structures
	b ()Ldsx; placement
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsg$a net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	b structure
	c weight
	a CODEC
	<init> (Lhe;I)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; structure
	b ()I weight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsh net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	b boundingBox
	c spawns
	a CODEC
	<init> (Ldsh$a;Lbcl;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldsh$a; boundingBox
	b ()Lbcl; spawns
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsh$a net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	a PIECE
	b STRUCTURE
	c CODEC
	d id
	e $VALUES
	values ()[Ldsh$a; values
	valueOf (Ljava/lang/String;)Ldsh$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldsh$a; $values
	<clinit> ()V <clinit>
dsi net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START_ID
	b INVALID_START
	c LOGGER
	d structure
	e pieceContainer
	f chunkPos
	g references
	h cachedBoundingBox
	<init> (Ldsa;Lclt;ILdsp;)V <init>
	a (Ldsq;Lqr;J)Ldsi; loadStaticStart
	a ()Ldrs; getBoundingBox
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;)V placeInChunk
	a (Ldsq;Lclt;)Lqr; createTag
	b ()Z isValid
	c ()Lclt; getChunkPos
	d ()Z canBeReferenced
	e ()V addReference
	f ()I getReferences
	g ()I getMaxReferences
	h ()Ldsa; getStructure
	i ()Ljava/util/List; getPieces
	<clinit> ()V <clinit>
dsj net/minecraft/world/level/levelgen/structure/StructureType
	a BURIED_TREASURE
	b DESERT_PYRAMID
	c END_CITY
	d FORTRESS
	e IGLOO
	f JIGSAW
	g JUNGLE_TEMPLE
	h MINESHAFT
	i NETHER_FOSSIL
	j OCEAN_MONUMENT
	k OCEAN_RUIN
	l RUINED_PORTAL
	m SHIPWRECK
	n STRONGHOLD
	o SWAMP_HUT
	p WOODLAND_MANSION
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldsj; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dsk net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	h LOGGER
	a templateName
	b template
	c placeSettings
	d templatePosition
	<init> (Ldsr;ILdvu;Lacq;Ljava/lang/String;Ldvp;Lgu;)V <init>
	<init> (Ldsr;Lqr;Ldvu;Ljava/util/function/Function;)V <init>
	b ()Lacq; makeTemplateLocation
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (III)V move
	a ()Lcvz; getRotation
	c ()Ldvt; template
	d ()Lgu; templatePosition
	e ()Ldvp; placeSettings
	<clinit> ()V <clinit>
dsl net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	a NONE
	b BURY
	c BEARD_THIN
	d BEARD_BOX
	e CODEC
	f id
	g $VALUES
	values ()[Ldsl; values
	valueOf (Ljava/lang/String;)Ldsl; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldsl; $values
	<clinit> ()V <clinit>
dsm net/minecraft/world/level/levelgen/structure/package-info
dsn net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
	generatePieces (Ldss;Ldsn$a;)V generatePieces
dsn$a net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	a config
	b chunkGenerator
	c structureTemplateManager
	d chunkPos
	e heightAccessor
	f random
	g seed
	<init> (Ldms;Lddy;Ldvu;Lclt;Lcmo;Ldij;J)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldms; config
	b ()Lddy; chunkGenerator
	c ()Ldvu; structureTemplateManager
	d ()Lclt; chunkPos
	e ()Lcmo; heightAccessor
	f ()Ldij; random
	g ()J seed
dso net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	createGenerator (Ldso$a;)Ljava/util/Optional; createGenerator
	simple (Ljava/util/function/Predicate;Ldsn;)Ldso; simple
	checkForBiomeOnTop (Ldhk$a;)Ljava/util/function/Predicate; checkForBiomeOnTop
	a (Ldhk$a;Ldso$a;)Z lambda$checkForBiomeOnTop$1
	a (Ljava/util/function/Predicate;Ljava/util/Optional;Ldso$a;)Ljava/util/Optional; lambda$simple$0
dso$a net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	a chunkGenerator
	b biomeSource
	c randomState
	d seed
	e chunkPos
	f config
	g heightAccessor
	h validBiome
	i structureTemplateManager
	j registryAccess
	<init> (Lddy;Lcno;Ldhy;JLclt;Ldms;Lcmo;Ljava/util/function/Predicate;Ldvu;Lhs;)V <init>
	a (Ldhk$a;)Z validBiomeOnTop
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lddy; chunkGenerator
	b ()Lcno; biomeSource
	c ()Ldhy; randomState
	d ()J seed
	e ()Lclt; chunkPos
	f ()Ldms; config
	g ()Lcmo; heightAccessor
	h ()Ljava/util/function/Predicate; validBiome
	i ()Ldvu; structureTemplateManager
	j ()Lhs; registryAccess
dsp net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	a pieces
	b LOGGER
	c JIGSAW_RENAME
	d RENAMES
	<init> (Ljava/util/List;)V <init>
	a ()Z isEmpty
	a (Lgu;)Z isInsidePiece
	a (Ldsq;)Lrk; save
	a (Lqx;Ldsq;)Ldsp; load
	b ()Ldrs; calculateBoundingBox
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	c ()Ljava/util/List; pieces
	<clinit> ()V <clinit>
dsq net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	a resourceManager
	b registryAccess
	c structureTemplateManager
	<init> (Lakx;Lhs;Ldvu;)V <init>
	a (Laif;)Ldsq; fromLevel
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lakx; resourceManager
	b ()Lhs; registryAccess
	c ()Ldvu; structureTemplateManager
dsr net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	a MINE_SHAFT_CORRIDOR
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e NETHER_FORTRESS_BRIDGE_CROSSING
	f NETHER_FORTRESS_BRIDGE_END_FILLER
	g NETHER_FORTRESS_BRIDGE_STRAIGHT
	h NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	i NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	j NETHER_FORTRESS_CASTLE_ENTRANCE
	k NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	l NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	o NETHER_FORTRESS_CASTLE_STALK_ROOM
	p NETHER_FORTRESS_MONSTER_THRONE
	q NETHER_FORTRESS_ROOM_CROSSING
	r NETHER_FORTRESS_STAIRS_ROOM
	s NETHER_FORTRESS_START
	t STRONGHOLD_CHEST_CORRIDOR
	u STRONGHOLD_FILLER_CORRIDOR
	v STRONGHOLD_FIVE_CROSSING
	w STRONGHOLD_LEFT_TURN
	x STRONGHOLD_LIBRARY
	y STRONGHOLD_PORTAL_ROOM
	z STRONGHOLD_PRISON_HALL
	A STRONGHOLD_RIGHT_TURN
	B STRONGHOLD_ROOM_CROSSING
	C STRONGHOLD_STAIRS_DOWN
	D STRONGHOLD_START
	E STRONGHOLD_STRAIGHT
	F STRONGHOLD_STRAIGHT_STAIRS_DOWN
	G JUNGLE_PYRAMID_PIECE
	H OCEAN_RUIN
	I IGLOO
	J RUINED_PORTAL
	K SWAMPLAND_HUT
	L DESERT_PYRAMID_PIECE
	M OCEAN_MONUMENT_BUILDING
	N OCEAN_MONUMENT_CORE_ROOM
	O OCEAN_MONUMENT_DOUBLE_X_ROOM
	P OCEAN_MONUMENT_DOUBLE_XY_ROOM
	Q OCEAN_MONUMENT_DOUBLE_Y_ROOM
	R OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	S OCEAN_MONUMENT_DOUBLE_Z_ROOM
	T OCEAN_MONUMENT_ENTRY_ROOM
	U OCEAN_MONUMENT_PENTHOUSE
	V OCEAN_MONUMENT_SIMPLE_ROOM
	W OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	X OCEAN_MONUMENT_WING_ROOM
	Y END_CITY_PIECE
	Z WOODLAND_MANSION_PIECE
	aa BURIED_TREASURE_PIECE
	ab SHIPWRECK_PIECE
	ac NETHER_FOSSIL
	ad JIGSAW
	load (Ldsq;Lqr;)Ldse; load
	a (Ldsr;Ljava/lang/String;)Ldsr; setFullContextPieceId
	a (Ldsr$a;Ljava/lang/String;)Ldsr; setPieceId
	a (Ldsr$b;Ljava/lang/String;)Ldsr; setTemplatePieceId
	<clinit> ()V <clinit>
dsr$a net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
	load (Lqr;)Ldse; load
	load (Ldsq;Lqr;)Ldse; load
dsr$b net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
	load (Ldvu;Lqr;)Ldse; load
	load (Ldsq;Lqr;)Ldse; load
dss net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	a pieces
	<init> ()V <init>
	a (Ldse;)V addPiece
	a (Ldrs;)Ldse; findCollisionPiece
	a (I)V offsetPiecesVertically
	a (IILapf;I)I moveBelowSeaLevel
	a (Lapf;II)V moveInsideHeights
	a ()Ldsp; build
	b ()V clear
	c ()Z isEmpty
	d ()Ldrs; getBoundingBox
dst net/minecraft/world/level/levelgen/structure/pieces/package-info
dsu net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	a CODEC
	c distance
	d spread
	e count
	f preferredBiomes
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; codec
	<init> (Lhz;Ldsx$c;FILjava/util/Optional;IIILhi;)V <init>
	<init> (IIILhi;)V <init>
	a ()I distance
	b ()I spread
	c ()I count
	d ()Lhi; preferredBiomes
	a (Lddz;II)Z isPlacementChunk
	e ()Ldsy; type
	c (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsv net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	a CODEC
	c spacing
	d separation
	e spreadType
	a (Ldsv;)Lcom/mojang/serialization/DataResult; validate
	<init> (Lhz;Ldsx$c;FILjava/util/Optional;IILdsw;)V <init>
	<init> (IILdsw;I)V <init>
	a ()I spacing
	b ()I separation
	c ()Ldsw; spreadType
	a (JII)Lclt; getPotentialStructureChunk
	a (Lddz;II)Z isPlacementChunk
	e ()Ldsy; type
	d ()Ljava/lang/String; lambda$validate$1
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsw net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	a LINEAR
	b TRIANGULAR
	c CODEC
	d id
	e $VALUES
	values ()[Ldsw; values
	valueOf (Ljava/lang/String;)Ldsw; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	c ()Ljava/lang/String; getSerializedName
	a (Lapf;I)I evaluate
	a ()[Ldsw; $values
	<clinit> ()V <clinit>
dsw$1 net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType$1
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$placement$RandomSpreadType
	<clinit> ()V <clinit>
dsx net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	b CODEC
	a HIGHLY_ARBITRARY_RANDOM_SALT
	c locateOffset
	d frequencyReductionMethod
	e frequency
	f salt
	g exclusionZone
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; placementCodec
	<init> (Lhz;Ldsx$c;FILjava/util/Optional;)V <init>
	f ()Lhz; locateOffset
	g ()Ldsx$c; frequencyReductionMethod
	h ()F frequency
	i ()I salt
	j ()Ljava/util/Optional; exclusionZone
	b (Lddz;II)Z isStructureChunk
	a (Lddz;II)Z isPlacementChunk
	a (Lclt;)Lgu; getLocatePos
	e ()Ldsy; type
	a (JIIIF)Z probabilityReducer
	b (JIIIF)Z legacyProbabilityReducerWithDouble
	c (JIIIF)Z legacyArbitrarySaltProbabilityReducer
	d (JIIIF)Z legacyPillagerOutpostReducer
	<clinit> ()V <clinit>
dsx$a net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	b otherSet
	c chunkCount
	a CODEC
	<init> (Lhe;I)V <init>
	a (Lddz;II)Z isPlacementForbidden
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lhe; otherSet
	b ()I chunkCount
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dsx$b net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
	shouldGenerate (JIIIF)Z shouldGenerate
dsx$c net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	a DEFAULT
	b LEGACY_TYPE_1
	c LEGACY_TYPE_2
	d LEGACY_TYPE_3
	e CODEC
	f name
	g reducer
	h $VALUES
	values ()[Ldsx$c; values
	valueOf (Ljava/lang/String;)Ldsx$c; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Ldsx$b;)V <init>
	a (JIIIF)Z shouldGenerate
	c ()Ljava/lang/String; getSerializedName
	a ()[Ldsx$c; $values
	<clinit> ()V <clinit>
dsy net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	a RANDOM_SPREAD
	b CONCENTRIC_RINGS
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldsy; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dsz net/minecraft/world/level/levelgen/structure/placement/package-info
dta net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Ldvu;Lcvz;)Lhz; getSize
	a (Ldvu;Lgu;Lcvz;Lapf;)Ljava/util/List; getShuffledJigsawBlocks
	a (Ldvu;Lgu;Lcvz;)Ldrs; getBoundingBox
	a (Ldvu;Lcng;Lcne;Lddy;Lgu;Lgu;Lcvz;Ldrs;Lapf;Z)Z place
	a ()Ldti; getType
	toString ()Ljava/lang/String; toString
	b ()Ldta; lambda$static$0
	<clinit> ()V <clinit>
dtb net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	a CODEC
	b feature
	c defaultJigsawNBT
	<init> (Lhe;Ldtj$a;)V <init>
	b ()Lqr; fillDefaultJigsawNBT
	a (Ldvu;Lcvz;)Lhz; getSize
	a (Ldvu;Lgu;Lcvz;Lapf;)Ljava/util/List; getShuffledJigsawBlocks
	a (Ldvu;Lgu;Lcvz;)Ldrs; getBoundingBox
	a (Ldvu;Lcng;Lcne;Lddy;Lgu;Lgu;Lcvz;Ldrs;Lapf;Z)Z place
	a ()Ldti; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldtb;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dtc net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	<init> (IIIILdtj$a;)V <init>
	a ()I getSourceX
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Ldtj$a; getDestProjection
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	a (Lcom/mojang/serialization/Dynamic;)Ldtc; deserialize
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
dtd net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	a LOGGER
	<init> ()V <init>
	a (Ldsa$a;Lhe;Ljava/util/Optional;ILgu;ZLjava/util/Optional;I)Ljava/util/Optional; addPieces
	a (Ldth;Lacq;Lgu;Lcvz;Ldvu;Ldij;)Ljava/util/Optional; getRandomNamedJigsaw
	a (Ldhy;IZLddy;Ldvu;Lcmo;Lapf;Lhr;Ldrw;Ljava/util/List;Lefb;)V addPieces
	a (Laif;Lhe;Lacq;ILgu;Z)Z generateJigsaw
	a (Lhe;)Z lambda$generateJigsaw$2
	a (Ldrw;IIIIILdrs;Ldsa$a;ZLddy;Ldvu;Lcmo;Ldij;Lhr;Ldss;)V lambda$addPieces$1
	a (Lacp;)Ljava/lang/String; lambda$addPieces$0
	<clinit> ()V <clinit>
dtd$a net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	a piece
	b free
	c depth
	<init> (Ldrw;Lorg/apache/commons/lang3/mutable/MutableObject;I)V <init>
dtd$b net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	a pools
	b maxDepth
	c chunkGenerator
	d structureTemplateManager
	e pieces
	f random
	g placing
	<init> (Lhr;ILddy;Ldvu;Ljava/util/List;Lapf;)V <init>
	a (Ldrw;Lorg/apache/commons/lang3/mutable/MutableObject;IZLcmo;Ldhy;)V tryPlacingChildren
	a (Ldvt$c;)Lacp; readPoolName
	a (Ldrs;Ldvt$c;)I lambda$tryPlacingChildren$4
	a (Lhe;)Ljava/lang/Integer; lambda$tryPlacingChildren$3
	b (Lhe;)Ljava/lang/Integer; lambda$tryPlacingChildren$2
	c (Lhe;)Lhe; lambda$tryPlacingChildren$1
	a (Lacp;)Ljava/lang/String; lambda$tryPlacingChildren$0
dte net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	a CODEC
	<init> (Lcom/mojang/datafixers/util/Either;Lhe;Ldtj$a;)V <init>
	a (Lcvz;Ldrs;Z)Ldvp; getSettings
	a ()Ldti; getType
	toString ()Ljava/lang/String; toString
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dtf net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	a CODEC
	b elements
	<init> (Ljava/util/List;Ldtj$a;)V <init>
	a (Ldvu;Lcvz;)Lhz; getSize
	a (Ldvu;Lgu;Lcvz;Lapf;)Ljava/util/List; getShuffledJigsawBlocks
	a (Ldvu;Lgu;Lcvz;)Ldrs; getBoundingBox
	a (Ldvu;Lcng;Lcne;Lddy;Lgu;Lgu;Lcvz;Ldrs;Lapf;Z)Z place
	a ()Ldti; getType
	a (Ldtj$a;)Ldth; setProjection
	toString ()Ljava/lang/String; toString
	b (Ldtj$a;)V setProjectionOnEachElement
	a (Ldtj$a;Ldth;)V lambda$setProjectionOnEachElement$5
	b ()Ljava/lang/IllegalStateException; lambda$getBoundingBox$4
	a (Ldvu;Lgu;Lcvz;Ldth;)Ldrs; lambda$getBoundingBox$3
	a (Ldth;)Z lambda$getBoundingBox$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldtf;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dtg net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	a TEMPLATE_CODEC
	b CODEC
	c template
	d processors
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeTemplate
	b ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; processorsCodec
	c ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; templateCodec
	<init> (Lcom/mojang/datafixers/util/Either;Lhe;Ldtj$a;)V <init>
	a (Ldvu;Lcvz;)Lhz; getSize
	a (Ldvu;)Ldvt; getTemplate
	a (Ldvu;Lgu;Lcvz;Z)Ljava/util/List; getDataMarkers
	a (Ldvu;Lgu;Lcvz;Lapf;)Ljava/util/List; getShuffledJigsawBlocks
	a (Ldvu;Lgu;Lcvz;)Ldrs; getBoundingBox
	a (Ldvu;Lcng;Lcne;Lddy;Lgu;Lgu;Lcvz;Ldrs;Lapf;Z)Z place
	a (Lcvz;Ldrs;Z)Ldvp; getSettings
	a ()Ldti; getType
	toString ()Ljava/lang/String; toString
	a (Ldtg;)Lcom/mojang/datafixers/util/Either; lambda$templateCodec$3
	b (Ldtg;)Lhe; lambda$processorsCodec$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	h ()Ljava/lang/String; lambda$encodeTemplate$0
	<clinit> ()V <clinit>
dth net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	e CODEC
	a EMPTY
	b projection
	d ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; projectionCodec
	<init> (Ldtj$a;)V <init>
	a (Ldvu;Lcvz;)Lhz; getSize
	a (Ldvu;Lgu;Lcvz;Lapf;)Ljava/util/List; getShuffledJigsawBlocks
	a (Ldvu;Lgu;Lcvz;)Ldrs; getBoundingBox
	a (Ldvu;Lcng;Lcne;Lddy;Lgu;Lgu;Lcvz;Ldrs;Lapf;Z)Z place
	a ()Ldti; getType
	a (Lcmn;Ldvt$c;Lgu;Lcvz;Lapf;Ldrs;)V handleDataMarker
	a (Ldtj$a;)Ldth; setProjection
	e ()Ldtj$a; getProjection
	f ()I getGroundLevelDelta
	g ()Ljava/util/function/Function; empty
	a (Ljava/lang/String;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lhe;)Ljava/util/function/Function; legacy
	b (Ljava/lang/String;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lhe;)Ljava/util/function/Function; single
	a (Lhe;)Ljava/util/function/Function; feature
	a (Ljava/util/List;)Ljava/util/function/Function; list
	a (Ljava/util/List;Ldtj$a;)Ldtf; lambda$list$7
	a (Ldtj$a;Ljava/util/function/Function;)Ldth; lambda$list$6
	a (Lhe;Ldtj$a;)Ldtb; lambda$feature$5
	a (Ljava/lang/String;Lhe;Ldtj$a;)Ldtg; lambda$single$4
	a (Ljava/lang/String;Ldtj$a;)Ldtg; lambda$single$3
	b (Ljava/lang/String;Lhe;Ldtj$a;)Ldte; lambda$legacy$2
	b (Ljava/lang/String;Ldtj$a;)Ldte; lambda$legacy$1
	b (Ldtj$a;)Ldta; lambda$empty$0
	<clinit> ()V <clinit>
dti net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	a SINGLE
	b LIST
	c FEATURE
	d EMPTY
	e LEGACY
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldti; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dtj net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	c SIZE_UNSET
	d CODEC_REFERENCE
	a DIRECT_CODEC
	b CODEC
	e rawTemplates
	f templates
	g fallback
	h maxSize
	<init> (Lhe;Ljava/util/List;)V <init>
	<init> (Lhe;Ljava/util/List;Ldtj$a;)V <init>
	a (Ldvu;)I getMaxSize
	a ()Lhe; getFallback
	a (Lapf;)Ldth; getRandomTemplate
	b (Lapf;)Ljava/util/List; getShuffledTemplates
	b ()I size
	a (Ldvu;Ldth;)I lambda$getMaxSize$3
	a (Ldth;)Z lambda$getMaxSize$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldtj;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dtj$a net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	a TERRAIN_MATCHING
	b RIGID
	c CODEC
	d name
	e processors
	f $VALUES
	values ()[Ldtj$a; values
	valueOf (Ljava/lang/String;)Ldtj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ldtj$a; byName
	b ()Lcom/google/common/collect/ImmutableList; getProcessors
	c ()Ljava/lang/String; getSerializedName
	d ()[Ldtj$a; $values
	<clinit> ()V <clinit>
dtk net/minecraft/world/level/levelgen/structure/pools/package-info
dtl net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
	<init> ()V <init>
dtl$a net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	<init> (Lgu;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	b (Ldcb;)Z isLiquid
dtm net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
dtn net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	h WIDTH
	i DEPTH
	j hasPlacedChest
	k potentialSuspiciousSandWorldPositions
	l randomCollapsedRoofPos
	<init> (Lapf;II)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lcng;Ldrs;)V addCellar
	a (Lgu;Lcng;Ldrs;)V addCellarStairs
	b (Lgu;Lcng;Ldrs;)V addCellarRoom
	c (III)V placeSand
	a (IIIIII)V placeSandBox
	a (Lcng;IIILdrs;)V placeCollapsedRoofPiece
	a (Lcng;Ldrs;IIIII)V placeCollapsedRoof
	b ()Ljava/util/List; getPotentialSuspiciousSandWorldPositions
	c ()Lgu; getRandomCollapsedRoofPos
dto net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Ldsp;)V afterPlace
	a (Ldrs;Lcng;Lgu;)V placeSuspiciousSand
	e ()Ldsj; type
	a (Lgu;Lczr;)V lambda$placeSuspiciousSand$0
	<clinit> ()V <clinit>
dtp net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	a MAX_GEN_DEPTH
	b HOUSE_TOWER_GENERATOR
	c TOWER_BRIDGES
	d TOWER_GENERATOR
	e TOWER_BRIDGE_GENERATOR
	f FAT_TOWER_BRIDGES
	g FAT_TOWER_GENERATOR
	<init> ()V <init>
	a (Ldvu;Ldtp$a;Lgu;Ljava/lang/String;Lcvz;Z)Ldtp$a; addPiece
	a (Ldvu;Lgu;Lcvz;Ljava/util/List;Lapf;)V startHouseTower
	a (Ljava/util/List;Ldtp$a;)Ldtp$a; addHelper
	a (Ldvu;Ldtp$b;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z recursiveChildren
	<clinit> ()V <clinit>
dtp$1 net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	<init> ()V <init>
	a ()V init
	a (Ldvu;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z generate
dtp$2 net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	<init> ()V <init>
	a ()V init
	a (Ldvu;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z generate
dtp$3 net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	a shipCreated
	<init> ()V <init>
	a ()V init
	a (Ldvu;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z generate
dtp$4 net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	<init> ()V <init>
	a ()V init
	a (Ldvu;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z generate
dtp$a net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	<init> (Ldvu;Ljava/lang/String;Lgu;Lcvz;Z)V <init>
	<init> (Ldvu;Lqr;)V <init>
	a (ZLcvz;)Ldvp; makeSettings
	b ()Lacq; makeTemplateLocation
	a (Ljava/lang/String;)Lacq; makeResourceLocation
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lqr;Lacq;)Ldvp; lambda$new$0
dtp$b net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	a ()V init
	a (Ldvu;ILdtp$a;Lgu;Ljava/util/List;Lapf;)Z generate
dtq net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Lgu;Lcvz;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Lgu;Lcvz;Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
dtr net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	a GENERATION_HEIGHT
	b STRUCTURE_LOCATION_IGLOO
	c STRUCTURE_LOCATION_LADDER
	d STRUCTURE_LOCATION_LABORATORY
	e PIVOTS
	f OFFSETS
	<init> ()V <init>
	a (Ldvu;Lgu;Lcvz;Ldsf;Lapf;)V addPieces
	<clinit> ()V <clinit>
dtr$a net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	<init> (Ldvu;Lacq;Lgu;Lcvz;I)V <init>
	<init> (Ldvu;Lqr;)V <init>
	a (Lcvz;Lacq;)Ldvp; makeSettings
	a (Lacq;Lgu;I)Lgu; makePosition
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lqr;Lacq;)Ldvp; lambda$new$0
dts net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
dtt net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	d MAX_TOTAL_STRUCTURE_RANGE
	e CODEC
	f startPool
	g startJigsawName
	h maxDepth
	i startHeight
	j useExpansionHack
	k projectStartToHeightmap
	l maxDistanceFromCenter
	a (Ldtt;)Lcom/mojang/serialization/DataResult; verifyRange
	<init> (Ldsa$c;Lhe;Ljava/util/Optional;ILdqh;ZLjava/util/Optional;I)V <init>
	<init> (Ldsa$c;Lhe;ILdqh;ZLdhk$a;)V <init>
	<init> (Ldsa$c;Lhe;ILdqh;Z)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	e ()Ldsj; type
	f ()Ljava/lang/String; lambda$verifyRange$8
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$7
	b (Ldtt;)Ljava/lang/Integer; lambda$static$6
	c (Ldtt;)Ljava/util/Optional; lambda$static$5
	d (Ldtt;)Ljava/lang/Boolean; lambda$static$4
	e (Ldtt;)Ldqh; lambda$static$3
	f (Ldtt;)Ljava/lang/Integer; lambda$static$2
	g (Ldtt;)Ljava/util/Optional; lambda$static$1
	h (Ldtt;)Lhe; lambda$static$0
	<clinit> ()V <clinit>
dtt$1 net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
	<clinit> ()V <clinit>
dtu net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	h WIDTH
	i DEPTH
	j placedMainChest
	k placedHiddenChest
	l placedTrap1
	m placedTrap2
	n STONE_SELECTOR
	<init> (Lapf;II)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	<clinit> ()V <clinit>
dtu$a net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	<init> ()V <init>
	a (Lapf;IIIZ)V next
dtv net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	e ()Ldsj; type
	<clinit> ()V <clinit>
dtw net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	b LOGGER
	c DEFAULT_SHAFT_WIDTH
	d DEFAULT_SHAFT_HEIGHT
	e DEFAULT_SHAFT_LENGTH
	f MAX_PILLAR_HEIGHT
	g MAX_CHAIN_HEIGHT
	h MAX_DEPTH
	a MAGIC_START_Y
	<init> ()V <init>
	a (Ldsf;Lapf;IIILha;ILdtx$a;)Ldtw$c; createRandomShaftPiece
	a (Ldse;Ldsf;Lapf;IIILha;I)Ldtw$c; generateAndAddPiece
	<clinit> ()V <clinit>
dtw$1 net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dtw$a net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	h numSections
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	<init> (ILapf;Ldrs;Lha;Ldtx$a;)V <init>
	a (Ldsf;Lapf;IIILha;)Ldrs; findCorridorSize
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Lcng;Ldrs;Lapf;IIILacq;)Z createChest
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lcng;Ldrs;III)V placeDoubleLowerOrUpperSupport
	b (Lcng;Ldcb;IIILdrs;)V fillColumnDown
	c (Lcng;Ldcb;IIILdrs;)V fillPillarDownOrChainUp
	a (Lcng;Ldcb;Lgu$a;II)V fillColumnBetween
	a (Lcmp;Lgu;Ldcb;)Z canPlaceColumnOnTopOf
	b (Lcmp;Lgu;Ldcb;)Z canHangChainBelow
	a (Lcng;Ldrs;IIIIILapf;)V placeSupport
	a (Lcng;Ldrs;Lapf;FIII)V maybePlaceCobWeb
	a (Lcng;Ldrs;IIII)Z hasSturdyNeighbours
dtw$b net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	<init> (ILdrs;Lha;Ldtx$a;)V <init>
	a (Ldsf;Lapf;IIILha;)Ldrs; findCrossing
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lcng;Ldrs;IIII)V placeSupportPillar
dtw$c net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	a type
	<init> (Ldsr;ILdtx$a;Ldrs;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	a (Lcmp;IIILdrs;)Z canBeReplaced
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcls;Ldrs;IIII)Z isSupportingBox
	a (Lcmn;Ldrs;)Z isInInvalidLocation
	a (Lcng;Ldrs;Ldcb;III)V setPlanksBlock
dtw$d net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	b childEntranceBoxes
	<init> (ILapf;IILdtx$a;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (III)V move
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$0
dtw$e net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	<init> (ILdrs;Lha;Ldtx$a;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsf;Lapf;IIILha;)Ldrs; findStairs
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dtx net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	d CODEC
	e type
	<init> (Ldsa$c;Ldtx$a;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)I generatePiecesAndAdjust
	e ()Ldsj; type
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldtx;)Ldtx$a; lambda$static$0
	<clinit> ()V <clinit>
dtx$a net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	a NORMAL
	b MESA
	c CODEC
	d BY_ID
	e name
	f woodState
	g planksState
	h fenceState
	i $VALUES
	values ()[Ldtx$a; values
	valueOf (Ljava/lang/String;)Ldtx$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lcpn;Lcpn;Lcpn;)V <init>
	a ()Ljava/lang/String; getName
	a (I)Ldtx$a; byId
	b ()Ldcb; getWoodState
	d ()Ldcb; getPlanksState
	e ()Ldcb; getFenceState
	c ()Ljava/lang/String; getSerializedName
	f ()[Ldtx$a; $values
	<clinit> ()V <clinit>
dty net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	b MAX_DEPTH
	c LOWEST_Y_POSITION
	a MAGIC_START_Y
	d BRIDGE_PIECE_WEIGHTS
	e CASTLE_PIECE_WEIGHTS
	<init> ()V <init>
	a (Ldty$n;Ldsf;Lapf;IIILha;I)Ldty$m; findAndCreateBridgePieceFactory
	<clinit> ()V <clinit>
dty$1 net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dty$a net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (IILha;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$a; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$b net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	a WIDTH
	b HEIGHT
	c DEPTH
	d selfSeed
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsf;Lapf;IIILha;I)Ldty$b; createPiece
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$c net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Ldty$c; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$d net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$d; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$e net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$e; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$f net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Ldty$f; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$g net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$g; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$h net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Ldty$h; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$i net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$i; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$j net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Ldty$j; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$k net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$k; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$l net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldsf;IIIILha;)Ldty$l; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$m net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	<init> (Ldsr;ILdrs;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/util/List;)I updatePieceWeight
	a (Ldty$q;Ljava/util/List;Ldsf;Lapf;IIILha;I)Ldty$m; generatePiece
	a (Ldty$q;Ldsf;Lapf;IIILha;IZ)Ldse; generateAndAddPiece
	a (Ldty$q;Ldsf;Lapf;IIZ)Ldse; generateChildForward
	b (Ldty$q;Ldsf;Lapf;IIZ)Ldse; generateChildLeft
	c (Ldty$q;Ldsf;Lapf;IIZ)Ldse; generateChildRight
	a (Ldrs;)Z isOkBox
dty$n net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	<init> (Ljava/lang/Class;IIZ)V <init>
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
	a ()Z isValid
dty$o net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Ldty$o; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$p net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIIILha;)Ldty$p; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
dty$q net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
	<init> (Lapf;II)V <init>
	<init> (Lqr;)V <init>
dtz net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	d FORTRESS_ENEMIES
	e CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
dua net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	a FOSSILS
	<init> ()V <init>
	a (Ldvu;Ldsf;Lapf;Lgu;)V addPieces
	<clinit> ()V <clinit>
dua$a net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	<init> (Ldvu;Lacq;Lgu;Lcvz;)V <init>
	<init> (Ldvu;Lqr;)V <init>
	a (Lcvz;)Ldvp; makeSettings
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lqr;Lacq;)Ldvp; lambda$new$0
dub net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	d CODEC
	e height
	<init> (Ldsa$c;Ldqh;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	e ()Ldsj; type
	a (Ldsa$a;Ldij;Lgu;Ldss;)V lambda$findGenerationPoint$2
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldub;)Ldqh; lambda$static$0
	<clinit> ()V <clinit>
duc net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
	<init> ()V <init>
duc$1 net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
duc$a net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$b net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$c net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$d net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$e net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$f net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$g net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	<init> ()V <init>
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$h net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	C WIDTH
	D HEIGHT
	E DEPTH
	a BIOME_RANGE_CHECK
	F TOP_POSITION
	G sourceRoom
	H coreRoom
	I childPieces
	<init> (Lapf;IILha;)V <init>
	<init> (Lqr;)V <init>
	b (Lapf;)Ljava/util/List; generateRoomGraph
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (ZILcng;Lapf;Ldrs;)V generateWing
	a (Lcng;Lapf;Ldrs;)V generateEntranceArchs
	b (Lcng;Lapf;Ldrs;)V generateEntranceWall
	c (Lcng;Lapf;Ldrs;)V generateRoofPiece
	d (Lcng;Lapf;Ldrs;)V generateLowerWall
	e (Lcng;Lapf;Ldrs;)V generateMiddleWall
	f (Lcng;Lapf;Ldrs;)V generateUpperWall
duc$i net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	a (Lduc$v;)Z fits
	a (Lha;Lduc$v;Lapf;)Lduc$r; create
duc$j net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$k net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$l net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$m net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$n net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$o net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$p net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$q net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	<init> (Lha;Ldrs;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$r net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	b BASE_GRAY
	c BASE_LIGHT
	d BASE_BLACK
	h DOT_DECO_DATA
	i LAMP_BLOCK
	j DO_FILL
	k FILL_BLOCK
	l FILL_KEEP
	m GRIDROOM_WIDTH
	n GRIDROOM_DEPTH
	o GRIDROOM_HEIGHT
	p GRID_WIDTH
	q GRID_DEPTH
	r GRID_HEIGHT
	s GRID_FLOOR_COUNT
	t GRID_SIZE
	u GRIDROOM_SOURCE_INDEX
	v GRIDROOM_TOP_CONNECT_INDEX
	w GRIDROOM_LEFTWING_CONNECT_INDEX
	x GRIDROOM_RIGHTWING_CONNECT_INDEX
	y LEFTWING_INDEX
	z RIGHTWING_INDEX
	A PENTHOUSE_INDEX
	B roomDefinition
	c (III)I getRoomIndex
	<init> (Ldsr;Lha;ILdrs;)V <init>
	<init> (Ldsr;ILha;Lduc$v;III)V <init>
	a (Lha;Lduc$v;III)Ldrs; makeBoundingBox
	<init> (Ldsr;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	b (Lcng;Ldrs;IIIIII)V generateWaterBox
	a (Lcng;Ldrs;IIZ)V generateDefaultFloor
	a (Lcng;Ldrs;IIIIIILdcb;)V generateBoxOnFillOnly
	a (Ldrs;IIII)Z chunkIntersects
	a (Lcng;Ldrs;III)V spawnElder
	<clinit> ()V <clinit>
duc$s net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	a mainDesign
	<init> (Lha;Lduc$v;Lapf;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$t net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	<init> (Lha;Lduc$v;)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$u net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	a mainDesign
	<init> (Lha;Ldrs;I)V <init>
	<init> (Lqr;)V <init>
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duc$v net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	<init> (I)V <init>
	a (Lha;Lduc$v;)V setConnection
	a ()V updateOpenings
	a (I)Z findSource
	b ()Z isSpecial
	c ()I countOpenings
dud net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Lclt;Ldij;)Ldse; createTopPiece
	a (Ldss;Ldsa$a;)V generatePieces
	a (Lclt;JLdsp;)Ldsp; regeneratePiecesAfterLoad
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
due net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	a WARM_SUSPICIOUS_BLOCK_PROCESSOR
	b COLD_SUSPICIOUS_BLOCK_PROCESSOR
	c WARM_RUINS
	d RUINS_BRICK
	e RUINS_CRACKED
	f RUINS_MOSSY
	g BIG_RUINS_BRICK
	h BIG_RUINS_MOSSY
	i BIG_RUINS_CRACKED
	j BIG_WARM_RUINS
	<init> ()V <init>
	a (Lcpn;Lcpn;Lacq;)Ldvq; archyRuleProcessor
	a (Lapf;)Lacq; getSmallWarmRuin
	b (Lapf;)Lacq; getBigWarmRuin
	a (Ldvu;Lgu;Lcvz;Ldsf;Lapf;Lduf;)V addPieces
	a (Ldvu;Lapf;Lcvz;Lgu;Lduf;Ldsf;)V addClusterRuins
	a (Lapf;Lgu;)Ljava/util/List; allPositions
	a (Ldvu;Lgu;Lcvz;Ldsf;Lapf;Lduf;ZF)V addPiece
	<clinit> ()V <clinit>
due$1 net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
	<clinit> ()V <clinit>
due$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	h biomeType
	i integrity
	j isLarge
	<init> (Ldvu;Lacq;Lgu;Lcvz;FLduf$a;Z)V <init>
	<init> (Ldvu;Lqr;Lcvz;FLduf$a;Z)V <init>
	a (Lcvz;FLduf$a;)Ldvp; makeSettings
	a (Ldvu;Lqr;)Ldue$a; create
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lgu;Lcls;Lgu;)I getHeight
	a (Lcvz;FLduf$a;Lacq;)Ldvp; lambda$new$0
duf net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	d CODEC
	e biomeTemp
	f largeProbability
	g clusterProbability
	<init> (Ldsa$c;Lduf$a;FF)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$4
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$3
	a (Lduf;)Ljava/lang/Float; lambda$static$2
	b (Lduf;)Ljava/lang/Float; lambda$static$1
	c (Lduf;)Lduf$a; lambda$static$0
	<clinit> ()V <clinit>
duf$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	a WARM
	b COLD
	c CODEC
	d name
	e $VALUES
	values ()[Lduf$a; values
	valueOf (Ljava/lang/String;)Lduf$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	c ()Ljava/lang/String; getSerializedName
	b ()[Lduf$a; $values
	<clinit> ()V <clinit>
dug net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	h LOGGER
	i PROBABILITY_OF_GOLD_GONE
	j PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	k PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	l verticalPlacement
	m properties
	<init> (Ldvu;Lgu;Ldug$b;Ldug$a;Lacq;Ldvt;Lcvz;Lcui;Lgu;)V <init>
	<init> (Ldvu;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldvu;Lqr;Lacq;)Ldvp; makeSettings
	a (Lcui;Lcvz;Ldug$b;Lgu;Ldug$a;)Ldvp; makeSettings
	a (Ldug$b;Ldug$a;)Ldvi; getLavaProcessorRule
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lapf;Lcmn;Lgu;)V maybeAddVines
	b (Lapf;Lcmn;Lgu;)V maybeAddLeavesAbove
	a (Lapf;Lcmn;)V addNetherrackDripColumnsBelowPortal
	c (Lapf;Lcmn;Lgu;)V addNetherrackDripColumn
	b (Lapf;Lcmn;)V spreadNetherrack
	a (Lcmn;Lgu;)Z canBlockBeReplacedByNetherrackOrMagma
	d (Lapf;Lcmn;Lgu;)V placeNetherrackOrMagma
	a (Lcmn;IILdug$b;)I getSurfaceY
	a (Ldug$b;)Ldhk$a; getHeightMapType
	a (Lcpn;FLcpn;)Ldvi; getBlockReplaceRule
	a (Lcpn;Lcpn;)Ldvi; getBlockReplaceRule
	a (Lapf;Lcng;Lgu;)V lambda$postProcess$2
	a (Lqr;Lrk;)V lambda$addAdditionalSaveData$1
	b (Ldvu;Lqr;Lacq;)Ldvp; lambda$new$0
	<clinit> ()V <clinit>
dug$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	a CODEC
	b cold
	c mossiness
	d airPocket
	e overgrown
	f vines
	g replaceWithBlackstone
	<init> ()V <init>
	<init> (ZFZZZZ)V <init>
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$6
	a (Ldug$a;)Ljava/lang/Boolean; lambda$static$5
	b (Ldug$a;)Ljava/lang/Boolean; lambda$static$4
	c (Ldug$a;)Ljava/lang/Boolean; lambda$static$3
	d (Ldug$a;)Ljava/lang/Boolean; lambda$static$2
	e (Ldug$a;)Ljava/lang/Float; lambda$static$1
	f (Ldug$a;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
dug$b net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	a ON_LAND_SURFACE
	b PARTLY_BURIED
	c ON_OCEAN_FLOOR
	d IN_MOUNTAIN
	e UNDERGROUND
	f IN_NETHER
	g CODEC
	h name
	i $VALUES
	values ()[Ldug$b; values
	valueOf (Ljava/lang/String;)Ldug$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ldug$b; byName
	c ()Ljava/lang/String; getSerializedName
	b ()[Ldug$b; $values
	<clinit> ()V <clinit>
duh net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	e STRUCTURE_LOCATION_PORTALS
	f STRUCTURE_LOCATION_GIANT_PORTALS
	g PROBABILITY_OF_GIANT_PORTAL
	h MIN_Y_INDEX
	i setups
	d CODEC
	<init> (Ldsa$c;Ljava/util/List;)V <init>
	<init> (Ldsa$c;Lduh$a;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldij;F)Z sample
	a (Lgu;Lhe;)Z isCold
	a (Lapf;Lddy;Ldug$b;ZIILdrs;Lcmo;Ldhy;)I findSuitableY
	a (Lapf;II)I getRandomWithinInterval
	e ()Ldsj; type
	a (Lddy;Lcmo;Ldhy;Lgu;)Lcmy; lambda$findSuitableY$3
	a (Lduh$a;Ldug$a;Lgu;Ldsa$a;Ldhy;Lacq;Ldvt;Lcvz;Lcui;Lgu;Ldss;)V lambda$findGenerationPoint$2
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lduh;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
duh$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	b placement
	c airPocketProbability
	d mossiness
	e overgrown
	f vines
	g canBeCold
	h replaceWithBlackstone
	i weight
	a CODEC
	<init> (Ldug$b;FFZZZZF)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldug$b; placement
	b ()F airPocketProbability
	c ()F mossiness
	d ()Z overgrown
	e ()Z vines
	f ()Z canBeCold
	g ()Z replaceWithBlackstone
	h ()F weight
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dui net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	d MARKERS_TO_LOOT
	<init> ()V <init>
	a (Ldvu;Lgu;Lcvz;Ldsf;Lapf;Z)V addPieces
	<clinit> ()V <clinit>
dui$a net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	h isBeached
	<init> (Ldvu;Lacq;Lgu;Lcvz;Z)V <init>
	<init> (Ldvu;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcvz;)Ldvp; makeSettings
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lqr;Lacq;)Ldvp; lambda$new$0
duj net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	d CODEC
	e isBeached
	<init> (Ldsa$c;Z)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$2
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Lduj;)Ljava/lang/Boolean; lambda$static$0
	<clinit> ()V <clinit>
duk net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	b SMALL_DOOR_WIDTH
	c SMALL_DOOR_HEIGHT
	d MAX_DEPTH
	e LOWEST_Y_POSITION
	f CHECK_AIR
	a MAGIC_START_Y
	g STRONGHOLD_PIECE_WEIGHTS
	h currentPieces
	i imposedPiece
	j totalWeight
	k SMOOTH_STONE_SELECTOR
	<init> ()V <init>
	a ()V resetPieces
	b ()Z updatePieceWeight
	a (Ljava/lang/Class;Ldsf;Lapf;IIILha;I)Lduk$p; findAndCreatePieceFactory
	a (Lduk$m;Ldsf;Lapf;IIILha;I)Lduk$p; generatePieceFromSmallDoor
	b (Lduk$m;Ldsf;Lapf;IIILha;I)Ldse; generateAndAddPiece
	<clinit> ()V <clinit>
duk$1 net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
duk$2 net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
duk$3 net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	a $SwitchMap$net$minecraft$world$level$levelgen$structure$structures$StrongholdPieces$StrongholdPiece$SmallDoorType
	b $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
duk$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedChest
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$a; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$b net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	a steps
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldsf;Lapf;IIILha;)Ldrs; findPieceBox
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$c net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftLow
	i leftHigh
	j rightLow
	k rightHigh
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$c; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$d net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$d; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$e net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	a WIDTH
	b HEIGHT
	c TALL_HEIGHT
	d DEPTH
	i isTall
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldsf;Lapf;IIILha;I)Lduk$e; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$f net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	<init> (Ljava/lang/Class;II)V <init>
	a (I)Z doPlace
	a ()Z isValid
duk$g net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	<init> (ILdrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;IIILha;I)Lduk$g; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$h net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$h; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$i net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$i; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$j net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d type
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$j; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$k net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	<init> ()V <init>
	a (Lapf;IIIZ)V next
duk$l net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	d isSource
	<init> (Ldsr;IIILha;)V <init>
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$l; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$m net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	<init> (Lapf;II)V <init>
	<init> (Lqr;)V <init>
	h ()Lgu; getLocatorPosition
duk$n net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftChild
	i rightChild
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$n; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$o net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (ILapf;Ldrs;Lha;)V <init>
	<init> (Lqr;)V <init>
	a (Ldse;Ldsf;Lapf;)V addChildren
	a (Ldsf;Lapf;IIILha;I)Lduk$o; createPiece
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
duk$p net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	h entryDoor
	<init> (Ldsr;ILdrs;)V <init>
	<init> (Ldsr;Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lapf;Ldrs;Lduk$p$a;III)V generateSmallDoor
	b (Lapf;)Lduk$p$a; randomSmallDoor
	a (Lduk$m;Ldsf;Lapf;II)Ldse; generateSmallDoorChildForward
	b (Lduk$m;Ldsf;Lapf;II)Ldse; generateSmallDoorChildLeft
	c (Lduk$m;Ldsf;Lapf;II)Ldse; generateSmallDoorChildRight
	a (Ldrs;)Z isOkBox
duk$p$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	a OPENING
	b WOOD_DOOR
	c GRATES
	d IRON_DOOR
	e $VALUES
	values ()[Lduk$p$a; values
	valueOf (Ljava/lang/String;)Lduk$p$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Lduk$p$a; $values
	<clinit> ()V <clinit>
duk$q net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	a WIDTH
	b HEIGHT
	c DEPTH
	<init> (Ldsr;ILdrs;)V <init>
	<init> (Ldsr;Lqr;)V <init>
dul net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
dum net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	h spawnedWitch
	i spawnedCat
	<init> (Lapf;II)V <init>
	<init> (Lqr;)V <init>
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Lgu;)V postProcess
	a (Lcnb;Ldrs;)V spawnCat
dun net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;)V generatePieces
	e ()Ldsj; type
	a (Ldsa$a;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
duo net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	<init> ()V <init>
	a (Ldvu;Lgu;Lcvz;Ljava/util/List;Lapf;)V generateMansion
	a ([Ljava/lang/String;)V main
duo$a net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	<init> ()V <init>
	a (Lapf;)Ljava/lang/String; get1x1
	b (Lapf;)Ljava/lang/String; get1x1Secret
	a (Lapf;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lapf;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lapf;)Ljava/lang/String; get1x2Secret
	d (Lapf;)Ljava/lang/String; get2x2
	e (Lapf;)Ljava/lang/String; get2x2Secret
duo$b net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	<init> ()V <init>
	a (Lapf;)Ljava/lang/String; get1x1
	b (Lapf;)Ljava/lang/String; get1x1Secret
	a (Lapf;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lapf;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lapf;)Ljava/lang/String; get1x2Secret
	d (Lapf;)Ljava/lang/String; get2x2
	e (Lapf;)Ljava/lang/String; get2x2Secret
duo$c net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	a DEFAULT_SIZE
	b CLEAR
	c CORRIDOR
	d ROOM
	e START_ROOM
	f TEST_ROOM
	g BLOCKED
	h ROOM_1x1
	i ROOM_1x2
	j ROOM_2x2
	k ROOM_ORIGIN_FLAG
	l ROOM_DOOR_FLAG
	m ROOM_STAIRS_FLAG
	n ROOM_CORRIDOR_FLAG
	o ROOM_TYPE_MASK
	p ROOM_ID_MASK
	q random
	r baseGrid
	s thirdFloorGrid
	t floorRooms
	u entranceX
	v entranceY
	<init> (Lapf;)V <init>
	a (Lduo$g;II)Z isHouse
	a (Lduo$g;IIII)Z isRoomId
	b (Lduo$g;IIII)Lha; get1x2RoomDirection
	a (Lduo$g;IILha;I)V recursiveCorridor
	a (Lduo$g;)Z cleanEdges
	b ()V setupThirdFloor
	a (Lduo$g;Lduo$g;)V identifyRooms
	a ()V print
duo$d net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	a structureTemplateManager
	b random
	c startX
	d startY
	<init> (Ldvu;Lapf;)V <init>
	a (Lgu;Lcvz;Ljava/util/List;Lduo$c;)V createMansion
	a (Ljava/util/List;Lduo$e;Lduo$g;Lha;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lgu;Lcvz;Lduo$g;Lduo$g;)V createRoof
	a (Ljava/util/List;Lduo$e;)V entrance
	b (Ljava/util/List;Lduo$e;)V traverseWallPiece
	c (Ljava/util/List;Lduo$e;)V traverseTurn
	d (Ljava/util/List;Lduo$e;)V traverseInnerTurn
	a (Ljava/util/List;Lgu;Lcvz;Lha;Lduo$b;)V addRoom1x1
	a (Ljava/util/List;Lgu;Lcvz;Lha;Lha;Lduo$b;Z)V addRoom1x2
	a (Ljava/util/List;Lgu;Lcvz;Lha;Lha;Lduo$b;)V addRoom2x2
	a (Ljava/util/List;Lgu;Lcvz;Lduo$b;)V addRoom2x2Secret
duo$e net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
	<init> ()V <init>
duo$f net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	<init> ()V <init>
	a (Lapf;)Ljava/lang/String; get1x1
	b (Lapf;)Ljava/lang/String; get1x1Secret
	a (Lapf;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lapf;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lapf;)Ljava/lang/String; get1x2Secret
	d (Lapf;)Ljava/lang/String; get2x2
	e (Lapf;)Ljava/lang/String; get2x2Secret
duo$g net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	<init> (III)V <init>
	a (III)V set
	a (IIIII)V set
	a (II)I get
	a (IIII)V setif
	b (III)Z edgesTo
duo$h net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
	<init> ()V <init>
duo$i net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	<init> (Ldvu;Ljava/lang/String;Lgu;Lcvz;)V <init>
	<init> (Ldvu;Ljava/lang/String;Lgu;Lcvz;Lcui;)V <init>
	<init> (Ldvu;Lqr;)V <init>
	b ()Lacq; makeTemplateLocation
	a (Ljava/lang/String;)Lacq; makeLocation
	a (Lcui;Lcvz;)Ldvp; makeSettings
	a (Ldsq;Lqr;)V addAdditionalSaveData
	a (Ljava/lang/String;Lgu;Lcnb;Lapf;Ldrs;)V handleDataMarker
	a (Lqr;Lacq;)Ldvp; lambda$new$0
dup net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	d CODEC
	<init> (Ldsa$c;)V <init>
	a (Ldsa$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldss;Ldsa$a;Lgu;Lcvz;)V generatePieces
	a (Lcng;Lcne;Lddy;Lapf;Ldrs;Lclt;Ldsp;)V afterPlace
	e ()Ldsj; type
	a (Ldsa$a;Lgu;Lcvz;Ldss;)V lambda$findGenerationPoint$0
	<clinit> ()V <clinit>
duq net/minecraft/world/level/levelgen/structure/structures/package-info
dur net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	b ()Ldur; lambda$static$0
	<clinit> ()V <clinit>
dus net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	g axis
	<init> (FFIILha$a;)V <init>
	a (Lgu;Lgu;Lgu;Lapf;)Z test
	a ()Ldvh; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldus;)Lha$a; lambda$static$4
	b (Ldus;)Ljava/lang/Integer; lambda$static$3
	c (Ldus;)Ljava/lang/Integer; lambda$static$2
	d (Ldus;)Ljava/lang/Float; lambda$static$1
	e (Ldus;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dut net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	a CODEC
	b INSTANCE
	c replacements
	<init> ()V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Ljava/util/HashMap;)V lambda$new$1
	b ()Ldut; lambda$static$0
	<clinit> ()V <clinit>
duu net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	a CODEC
	b PROBABILITY_OF_REPLACING_FULL_BLOCK
	c PROBABILITY_OF_REPLACING_STAIRS
	d PROBABILITY_OF_REPLACING_OBSIDIAN
	e NON_MOSSY_REPLACEMENTS
	f mossiness
	<init> (F)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a (Lapf;)Ldcb; maybeReplaceFullStoneBlock
	a (Lapf;Ldcb;)Ldcb; maybeReplaceStairs
	b (Lapf;)Ldcb; maybeReplaceSlab
	c (Lapf;)Ldcb; maybeReplaceWall
	d (Lapf;)Ldcb; maybeReplaceObsidian
	a (Lapf;Lcpn;)Ldcb; getRandomFacingStairs
	a (Lapf;[Ldcb;[Ldcb;)Ldcb; getRandomBlock
	a (Lapf;[Ldcb;)Ldcb; getRandomBlock
	a ()Ldvs; getType
	a (Lduu;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
duv net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a CODEC
	b STRUCTURE_BLOCK
	c AIR
	d STRUCTURE_AND_AIR
	e toIgnore
	<init> (Ljava/util/List;)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Lduv;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
duw net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a CODEC
	b block
	<init> (Lcpn;)V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	a (Lduw;)Lcpn; lambda$static$0
	<clinit> ()V <clinit>
dux net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a CODEC
	b rottableBlocks
	c integrity
	<init> (Lhi;F)V <init>
	<init> (F)V <init>
	<init> (Ljava/util/Optional;F)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldux;)Ljava/lang/Float; lambda$static$1
	b (Ldux;)Ljava/util/Optional; lambda$static$0
	<clinit> ()V <clinit>
duy net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a CODEC
	b blockState
	<init> (Ldcb;)V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	a (Lduy;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
duz net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor
	a CODEC
	b delegate
	c limit
	<init> (Ldvq;Lbdc;)V <init>
	a ()Ldvs; getType
	a (Lcnb;Lgu;Lgu;Ljava/util/List;Ljava/util/List;Ldvp;)Ljava/util/List; finalizeProcessing
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Lduz;)Lbdc; lambda$static$1
	b (Lduz;)Ldvq; lambda$static$0
	<clinit> ()V <clinit>
dva net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a CODEC
	b heightmap
	c offset
	<init> (Ldhk$a;I)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldva;)Ljava/lang/Integer; lambda$static$1
	b (Ldva;)Ldhk$a; lambda$static$0
	<clinit> ()V <clinit>
dvb net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	c LOGGER
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	b ()Ldvb; lambda$static$0
	<clinit> ()V <clinit>
dvc net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	b ()Ldvc; lambda$static$0
	<clinit> ()V <clinit>
dvd net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	<init> (FFII)V <init>
	a (Lgu;Lgu;Lgu;Lapf;)Z test
	a ()Ldvh; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$4
	a (Ldvd;)Ljava/lang/Integer; lambda$static$3
	b (Ldvd;)Ljava/lang/Integer; lambda$static$2
	c (Ldvd;)Ljava/lang/Float; lambda$static$1
	d (Ldvd;)Ljava/lang/Float; lambda$static$0
	<clinit> ()V <clinit>
dve net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a ()Ldvs; getType
	b ()Ldve; lambda$static$0
	<clinit> ()V <clinit>
dvf net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	a CODEC
	b INSTANCE
	<init> ()V <init>
	a (Lgu;Lgu;Lgu;Lapf;)Z test
	a ()Ldvh; getType
	b ()Ldvf; lambda$static$0
	<clinit> ()V <clinit>
dvg net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	c CODEC
	<init> ()V <init>
	a (Lgu;Lgu;Lgu;Lapf;)Z test
	a ()Ldvh; getType
	<clinit> ()V <clinit>
dvh net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	a ALWAYS_TRUE_TEST
	b LINEAR_POS_TEST
	c AXIS_ALIGNED_LINEAR_POS_TEST
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvh; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dvi net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a DEFAULT_BLOCK_ENTITY_MODIFIER
	b CODEC
	c inputPredicate
	d locPredicate
	e posPredicate
	f outputState
	g blockEntityModifier
	<init> (Ldvn;Ldvn;Ldcb;)V <init>
	<init> (Ldvn;Ldvn;Ldvg;Ldcb;)V <init>
	<init> (Ldvn;Ldvn;Ldvg;Ldcb;Ldwb;)V <init>
	a (Ldcb;Ldcb;Lgu;Lgu;Lgu;Lapf;)Z test
	a ()Ldcb; getOutputState
	a (Lapf;Lqr;)Lqr; getOutputTag
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldvi;)Ldwb; lambda$static$4
	b (Ldvi;)Ldcb; lambda$static$3
	c (Ldvi;)Ldvg; lambda$static$2
	d (Ldvi;)Ldvn; lambda$static$1
	e (Ldvi;)Ldvn; lambda$static$0
	<clinit> ()V <clinit>
dvj net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	a cannotReplace
	b CODEC
	<init> (Lanl;)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Ldvj;)Lanl; lambda$static$0
	<clinit> ()V <clinit>
dvk net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a CODEC
	b block
	d probability
	<init> (Lcpn;F)V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldvk;)Ljava/lang/Float; lambda$static$1
	b (Ldvk;)Lcpn; lambda$static$0
	<clinit> ()V <clinit>
dvl net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a CODEC
	b blockState
	d probability
	<init> (Ldcb;F)V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$2
	a (Ldvl;)Ljava/lang/Float; lambda$static$1
	b (Ldvl;)Ldcb; lambda$static$0
	<clinit> ()V <clinit>
dvm net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a CODEC
	b rules
	<init> (Ljava/util/List;)V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Ldvm;)Ljava/util/List; lambda$static$0
	<clinit> ()V <clinit>
dvn net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	c CODEC
	<init> ()V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	<clinit> ()V <clinit>
dvo net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	a ALWAYS_TRUE_TEST
	b BLOCK_TEST
	c BLOCKSTATE_TEST
	d TAG_TEST
	e RANDOM_BLOCK_TEST
	f RANDOM_BLOCKSTATE_TEST
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvo; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dvp net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e boundingBox
	f keepLiquids
	g random
	h palette
	i processors
	j knownShape
	k finalizeEntities
	<init> ()V <init>
	a ()Ldvp; copy
	a (Lcui;)Ldvp; setMirror
	a (Lcvz;)Ldvp; setRotation
	a (Lgu;)Ldvp; setRotationPivot
	a (Z)Ldvp; setIgnoreEntities
	a (Ldrs;)Ldvp; setBoundingBox
	a (Lapf;)Ldvp; setRandom
	b (Z)Ldvp; setKeepLiquids
	c (Z)Ldvp; setKnownShape
	b ()Ldvp; clearProcessors
	a (Ldvq;)Ldvp; addProcessor
	b (Ldvq;)Ldvp; popProcessor
	c ()Lcui; getMirror
	d ()Lcvz; getRotation
	e ()Lgu; getRotationPivot
	b (Lgu;)Lapf; getRandom
	f ()Z isIgnoreEntities
	g ()Ldrs; getBoundingBox
	h ()Z getKnownShape
	i ()Ljava/util/List; getProcessors
	j ()Z shouldKeepLiquids
	a (Ljava/util/List;Lgu;)Ldvt$a; getRandomPalette
	d (Z)Ldvp; setFinalizeEntities
	k ()Z shouldFinalizeEntities
dvq net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	<init> ()V <init>
	a (Lcmp;Lgu;Lgu;Ldvt$c;Ldvt$c;Ldvp;)Ldvt$c; processBlock
	a ()Ldvs; getType
	a (Lcnb;Lgu;Lgu;Ljava/util/List;Ljava/util/List;Ldvp;)Ljava/util/List; finalizeProcessing
dvr net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	a list
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; list
	toString ()Ljava/lang/String; toString
dvs net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	a SINGLE_CODEC
	b LIST_OBJECT_CODEC
	c DIRECT_CODEC
	d LIST_CODEC
	e BLOCK_IGNORE
	f BLOCK_ROT
	g GRAVITY
	h JIGSAW_REPLACEMENT
	i RULE
	j NOP
	k BLOCK_AGE
	l BLACKSTONE_REPLACE
	m LAVA_SUBMERGED_BLOCK
	n PROTECTED_BLOCKS
	o CAPPED
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldvs; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$3
	a (Lcom/mojang/datafixers/util/Either;)Ldvr; lambda$static$2
	a (Ldvr;)Ldvr; lambda$static$1
	b (Ldvr;)Ldvr; lambda$static$0
	<clinit> ()V <clinit>
dvt net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a PALETTE_TAG
	b PALETTE_LIST_TAG
	c ENTITIES_TAG
	d BLOCKS_TAG
	e BLOCK_TAG_POS
	f BLOCK_TAG_STATE
	g BLOCK_TAG_NBT
	h ENTITY_TAG_POS
	i ENTITY_TAG_BLOCKPOS
	j ENTITY_TAG_NBT
	k SIZE_TAG
	l palettes
	m entityInfoList
	n size
	o author
	<init> ()V <init>
	a ()Lhz; getSize
	a (Ljava/lang/String;)V setAuthor
	b ()Ljava/lang/String; getAuthor
	a (Lcmm;Lgu;Lhz;ZLcpn;)V fillFromWorld
	a (Ldvt$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V addToLists
	a (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; buildInfoList
	a (Lcmm;Lgu;Lgu;)V fillEntityList
	a (Lgu;Ldvp;Lcpn;)Ljava/util/List; filterBlocks
	a (Lgu;Ldvp;Lcpn;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; filterBlocks
	a (Ldvp;Lgu;Ldvp;Lgu;)Lgu; calculateConnectedPosition
	a (Ldvp;Lgu;)Lgu; calculateRelativePosition
	a (Lcnb;Lgu;Lgu;Ldvp;Lapf;I)Z placeInWorld
	a (Lcmn;ILeer;III)V updateShapeAtEdge
	a (Lcnb;Lgu;Lgu;Ldvp;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lcnb;Lgu;Lcui;Lcvz;Lgu;Ldrs;Z)V placeEntities
	a (Lcnb;Lqr;)Ljava/util/Optional; createEntityIgnoreException
	a (Lcvz;)Lhz; getSize
	a (Lgu;Lcui;Lcvz;Lgu;)Lgu; transform
	a (Leei;Lcui;Lcvz;Lgu;)Leei; transform
	a (Lgu;Lcui;Lcvz;)Lgu; getZeroPositionWithTransform
	a (Lgu;Lcui;Lcvz;II)Lgu; getZeroPositionWithTransform
	b (Ldvp;Lgu;)Ldrs; getBoundingBox
	a (Lgu;Lcvz;Lgu;Lcui;)Ldrs; getBoundingBox
	a (Lgu;Lcvz;Lgu;Lcui;Lhz;)Ldrs; getBoundingBox
	a (Lqr;)Lqr; save
	a (Lhf;Lqr;)V load
	a (Lhf;Lqx;Lqx;)V loadPalette
	a ([I)Lqx; newIntegerList
	a ([D)Lqx; newDoubleList
	a (Lcvz;Lcui;Leei;ZLcnb;Lqr;Lbfj;)V lambda$placeEntities$5
	a (IIILcmn;ILha;III)V lambda$updateShapeAtEdge$4
	a (Lbfj;)Z lambda$fillEntityList$3
	a (Ldvt$c;)I lambda$buildInfoList$2
	b (Ldvt$c;)I lambda$buildInfoList$1
	c (Ldvt$c;)I lambda$buildInfoList$0
dvt$1 net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	a $SwitchMap$net$minecraft$world$level$block$Rotation
	b $SwitchMap$net$minecraft$world$level$block$Mirror
	<clinit> ()V <clinit>
dvt$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	a blocks
	b cache
	<init> (Ljava/util/List;)V <init>
	a ()Ljava/util/List; blocks
	a (Lcpn;)Ljava/util/List; blocks
	b (Lcpn;)Ljava/util/List; lambda$blocks$1
	a (Lcpn;Ldvt$c;)Z lambda$blocks$0
dvt$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	<init> ()V <init>
	a (Ldcb;)I idFor
	a (I)Ldcb; stateFor
	iterator ()Ljava/util/Iterator; iterator
	a (Ldcb;I)V addMapping
	<clinit> ()V <clinit>
dvt$c net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
	<init> (Lgu;Ldcb;Lqr;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Ldcb; state
	c ()Lqr; nbt
dvt$d net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
	<init> (Leei;Lgu;Lqr;)V <init>
dvu net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	a LOGGER
	b STRUCTURE_DIRECTORY_NAME
	c TEST_STRUCTURES_DIR
	d STRUCTURE_FILE_EXTENSION
	e STRUCTURE_TEXT_FILE_EXTENSION
	f structureRepository
	g fixerUpper
	h resourceManager
	i generatedDir
	j sources
	k blockLookup
	l LISTER
	<init> (Lakx;Ldyy$c;Lcom/mojang/datafixers/DataFixer;Lhf;)V <init>
	a (Lacq;)Ldvt; getOrCreate
	b (Lacq;)Ljava/util/Optional; get
	a ()Ljava/util/stream/Stream; listTemplates
	e (Lacq;)Ljava/util/Optional; tryLoad
	a (Lakx;)V onResourceManagerReload
	f (Lacq;)Ljava/util/Optional; loadFromResource
	b ()Ljava/util/stream/Stream; listResources
	g (Lacq;)Ljava/util/Optional; loadFromTestStructures
	c ()Ljava/util/stream/Stream; listTestStructures
	h (Lacq;)Ljava/util/Optional; loadFromGenerated
	d ()Ljava/util/stream/Stream; listGenerated
	a (Ljava/nio/file/Path;)Ljava/util/stream/Stream; listGeneratedInNamespace
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; listFolderContents
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; relativize
	a (Lacq;Ljava/nio/file/Path;)Ljava/util/Optional; loadFromSnbt
	a (Ldvu$a;Ljava/util/function/Consumer;)Ljava/util/Optional; load
	a (Ljava/io/InputStream;)Ldvt; readStructure
	a (Lqr;)Ldvt; readStructure
	c (Lacq;)Z save
	a (Lacq;Ljava/lang/String;)Ljava/nio/file/Path; getPathToGeneratedStructure
	a (Ljava/nio/file/Path;Lacq;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	b (Ljava/nio/file/Path;Lacq;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	d (Lacq;)V remove
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/util/function/Consumer;)V lambda$listFolderContents$9
	a (Ljava/lang/String;Ljava/nio/file/Path;)Z lambda$listFolderContents$8
	a (ILjava/lang/String;)Ljava/lang/String; lambda$listFolderContents$7
	b (Ljava/nio/file/Path;)Ljava/util/stream/Stream; lambda$listGenerated$6
	c (Ljava/nio/file/Path;)Z lambda$listGenerated$5
	a (Ljava/nio/file/Path;Ljava/lang/Throwable;)V lambda$loadFromGenerated$4
	d (Ljava/nio/file/Path;)Ljava/io/InputStream; lambda$loadFromGenerated$3
	a (Lacq;Ljava/lang/Throwable;)V lambda$loadFromResource$2
	i (Lacq;)Ljava/io/InputStream; lambda$loadFromResource$1
	a (Ldvu$b;)Ljava/util/stream/Stream; lambda$listTemplates$0
	<clinit> ()V <clinit>
dvu$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
	open ()Ljava/io/InputStream; open
dvu$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	a loader
	b lister
	<init> (Ljava/util/function/Function;Ljava/util/function/Supplier;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/util/function/Function; loader
	b ()Ljava/util/function/Supplier; lister
dvv net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a CODEC
	b tag
	<init> (Lanl;)V <init>
	a (Ldcb;Lapf;)Z test
	a ()Ldvo; getType
	a (Ldvv;)Lanl; lambda$static$0
	<clinit> ()V <clinit>
dvw net/minecraft/world/level/levelgen/structure/templatesystem/package-info
dvx net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot
	b LOGGER
	a CODEC
	d lootTable
	<init> (Lacq;)V <init>
	a (Lapf;Lqr;)Lqr; apply
	a ()Ldwc; getType
	a (Lqr;Lrk;)V lambda$apply$2
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldvx;)Lacq; lambda$static$0
	<clinit> ()V <clinit>
dvy net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic
	a CODEC
	b tag
	<init> (Lqr;)V <init>
	a (Lapf;Lqr;)Lqr; apply
	a ()Ldwc; getType
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$1
	a (Ldvy;)Lqr; lambda$static$0
	<clinit> ()V <clinit>
dvz net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear
	b INSTANCE
	a CODEC
	<init> ()V <init>
	a (Lapf;Lqr;)Lqr; apply
	a ()Ldwc; getType
	<clinit> ()V <clinit>
dwa net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough
	a INSTANCE
	b CODEC
	<init> ()V <init>
	a (Lapf;Lqr;)Lqr; apply
	a ()Ldwc; getType
	<clinit> ()V <clinit>
dwb net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier
	c CODEC
	a (Lapf;Lqr;)Lqr; apply
	a ()Ldwc; getType
	<clinit> ()V <clinit>
dwc net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType
	a CLEAR
	b PASSTHROUGH
	c APPEND_STATIC
	d APPEND_LOOT
	codec ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ldwc; register
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; lambda$register$0
	<clinit> ()V <clinit>
dwd net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/package-info
dwe net/minecraft/world/level/levelgen/synth/BlendedNoise
	e SCALE_RANGE
	f DATA_CODEC
	a CODEC
	g minLimitNoise
	h maxLimitNoise
	i mainNoise
	j xzMultiplier
	k yMultiplier
	l xzFactor
	m yFactor
	n smearScaleMultiplier
	o maxValue
	p xzScale
	q yScale
	a (DDDDD)Ldwe; createUnseeded
	<init> (Ldwi;Ldwi;Ldwi;DDDDD)V <init>
	<init> (Lapf;DDDDD)V <init>
	a (Lapf;)Ldwe; withNewRandom
	a (Ldhd$b;)D compute
	a ()D minValue
	b ()D maxValue
	a (Ljava/lang/StringBuilder;)V parityConfigString
	c ()Laou; codec
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$5
	a (Ldwe;)Ljava/lang/Double; lambda$static$4
	b (Ldwe;)Ljava/lang/Double; lambda$static$3
	c (Ldwe;)Ljava/lang/Double; lambda$static$2
	d (Ldwe;)Ljava/lang/Double; lambda$static$1
	e (Ldwe;)Ljava/lang/Double; lambda$static$0
	<clinit> ()V <clinit>
dwf net/minecraft/world/level/levelgen/synth/ImprovedNoise
	d SHIFT_UP_EPSILON
	e p
	a xo
	b yo
	c zo
	<init> (Lapf;)V <init>
	a (DDD)D noise
	a (DDDDD)D noise
	a (DDD[D)D noiseWithDerivative
	a (IDDD)D gradDot
	a (I)I p
	a (IIIDDDD)D sampleAndLerp
	a (IIIDDD[D)D sampleWithDerivative
	a (Ljava/lang/StringBuilder;)V parityConfigString
dwg net/minecraft/world/level/levelgen/synth/NoiseUtils
	<init> ()V <init>
	a (DD)D biasTowardsExtreme
	a (Ljava/lang/StringBuilder;DDD[B)V parityNoiseOctaveConfigString
	a (Ljava/lang/StringBuilder;DDD[I)V parityNoiseOctaveConfigString
dwh net/minecraft/world/level/levelgen/synth/NormalNoise
	a INPUT_FACTOR
	b TARGET_DEVIATION
	c valueFactor
	d first
	e second
	f maxValue
	g parameters
	a (Lapf;Ldwh$a;)Ldwh; createLegacyNetherBiome
	a (Lapf;I[D)Ldwh; create
	b (Lapf;Ldwh$a;)Ldwh; create
	<init> (Lapf;Ldwh$a;Z)V <init>
	a ()D maxValue
	a (I)D expectedDeviation
	a (DDD)D getValue
	b ()Ldwh$a; parameters
	a (Ljava/lang/StringBuilder;)V parityConfigString
dwh$a net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	c firstOctave
	d amplitudes
	a DIRECT_CODEC
	b CODEC
	<init> (ILjava/util/List;)V <init>
	<init> (ID[D)V <init>
	<init> (ILit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()I firstOctave
	b ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
	a (DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V lambda$new$1
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App; lambda$static$0
	<clinit> ()V <clinit>
dwi net/minecraft/world/level/levelgen/synth/PerlinNoise
	a ROUND_OFF
	b noiseLevels
	c firstOctave
	d amplitudes
	e lowestFreqValueFactor
	f lowestFreqInputFactor
	g maxValue
	a (Lapf;Ljava/util/stream/IntStream;)Ldwi; createLegacyForBlendedNoise
	a (Lapf;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldwi; createLegacyForLegacyNetherBiome
	b (Lapf;Ljava/util/stream/IntStream;)Ldwi; create
	a (Lapf;Ljava/util/List;)Ldwi; create
	a (Lapf;ID[D)Ldwi; create
	b (Lapf;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Ldwi; create
	a (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; makeAmplitudes
	<init> (Lapf;Lcom/mojang/datafixers/util/Pair;Z)V <init>
	a ()D maxValue
	a (Lapf;)V skipOctave
	a (DDD)D getValue
	a (DDDDDZ)D getValue
	a (D)D maxBrokenValue
	c (D)D edgeValue
	a (I)Ldwf; getOctaveNoise
	b (D)D wrap
	b ()I firstOctave
	c ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Ljava/lang/Double;)Ljava/lang/String; lambda$parityConfigString$1
	b (Ljava/lang/Double;)Z lambda$new$0
dwj net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	<init> (Lapf;Ljava/util/List;)V <init>
	<init> (Lapf;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V <init>
	a (DDZ)D getValue
dwk net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	e SQRT_3
	f F2
	g G2
	h p
	b xo
	c yo
	d zo
	<init> (Lapf;)V <init>
	a (I)I p
	a ([IDDD)D dot
	a (IDDDD)D getCornerNoise3D
	a (DD)D getValue
	a (DDD)D getValue
	<clinit> ()V <clinit>
dwl net/minecraft/world/level/levelgen/synth/package-info
dwm net/minecraft/world/level/lighting/BlockLightEngine
	g mutablePos
	<init> (Ldel;)V <init>
	<init> (Ldel;Ldwn;)V <init>
	a (J)V checkNode
	a (JJI)V propagateIncrease
	a (JJ)V propagateDecrease
	a (JLdcb;)I getEmission
	b (Lclt;)V propagateLightSources
	a (Lgu;Ldcb;)V lambda$propagateLightSources$0
dwn net/minecraft/world/level/lighting/BlockLightSectionStorage
	<init> (Ldel;)V <init>
	a (J)I getLightValue
dwn$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	a ()Ldwn$a; copy
	b ()Ldwp; copy
dwo net/minecraft/world/level/lighting/ChunkSkyLightSources
	b SIZE
	a NEGATIVE_INFINITY
	c minY
	d heightmap
	e mutablePos1
	f mutablePos2
	<init> (Lcmo;)V <init>
	a (Lddx;)V fillFrom
	a (Lddx;III)I findLowestSourceY
	a (Lcls;III)Z update
	a (Lcls;IILgu;Ldcb;Lgu;Ldcb;)Z updateEdge
	a (Lcls;Lgu;Ldcb;)I findLowestSourceBelow
	a (Lcls;Lgu;Ldcb;Lgu;Ldcb;)Z isEdgeOccluded
	a (II)I getLowestSourceY
	a ()I getHighestLowestSourceY
	a (I)V fill
	b (II)V set
	b (I)I get
	c (I)I extendSourcesBelowWorld
	c (II)I index
dwp net/minecraft/world/level/lighting/DataLayerStorageMap
	b CACHE_SIZE
	c lastSectionKeys
	d lastSections
	e cacheEnabled
	a map
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V <init>
	b ()Ldwp; copy
	a (J)Lded; copyDataLayer
	b (J)Z hasLayer
	c (J)Lded; getLayer
	d (J)Lded; removeLayer
	a (JLded;)V setLayer
	c ()V clearCache
	d ()V disableCache
dwq net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	e SOURCE
	a NO_COMPUTED_LEVEL
	f levelCount
	b priorityQueue
	c computedLevels
	d hasWork
	<init> (III)V <init>
	e (J)V removeFromQueue
	a (Ljava/util/function/LongPredicate;)V removeIf
	a (II)I calculatePriority
	f (J)V checkNode
	a (JJIZ)V checkEdge
	a (JJIIIZ)V checkEdge
	b (JJIZ)V checkNeighbor
	b ()Z hasWork
	b (I)I runUpdates
	c ()I getQueueSize
	a (J)Z isSource
	a (JJI)I getComputedLevel
	a (JIZ)V checkNeighborsAfterUpdate
	c (J)I getLevel
	a (JI)V setLevel
	b (JJI)I computeLevelFromNeighbor
	a (Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V lambda$removeIf$0
dwq$1 net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	a val$minMapSize
	b this$0
	<init> (Ldwq;IFI)V <init>
	rehash (I)V rehash
dwr net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lhx;)Lded; getDataLayerData
	b (Lgu;)I getLightValue
dwr$a net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	a INSTANCE
	b $VALUES
	values ()[Ldwr$a; values
	valueOf (Ljava/lang/String;)Ldwr$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a (Lhx;)Lded; getDataLayerData
	b (Lgu;)I getLightValue
	a (Lgu;)V checkBlock
	E_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lhx;Z)V updateSectionStatus
	a (Lclt;Z)V setLightEnabled
	b (Lclt;)V propagateLightSources
	c ()[Ldwr$a; $values
	<clinit> ()V <clinit>
dws net/minecraft/world/level/lighting/LayerLightSectionStorage
	i layer
	a chunkSource
	b sectionStates
	j columnsWithSources
	c visibleSectionData
	d updatingSectionData
	e changedSections
	f sectionsAffectedByLightUpdates
	g queuedSections
	k columnsToRetainQueuedDataFor
	l toRemove
	h hasInconsistencies
	<init> (Lcmv;Ldel;Ldwp;)V <init>
	b (J)Z storingLightForSection
	a (JZ)Lded; getDataLayer
	a (Ldwp;J)Lded; getDataLayer
	c (J)Lded; getDataLayerToWrite
	d (J)Lded; getDataLayerData
	a (J)I getLightValue
	e (J)I getStoredLevel
	a (JI)V setStoredLevel
	f (J)V markSectionAndNeighborsAsAffected
	g (J)Lded; createDataLayer
	a ()Z hasInconsistencies
	a (Ldwv;)V markNewInconsistencies
	h (J)V onNodeAdded
	i (J)V onNodeRemoved
	b (JZ)V setLightEnabled
	j (J)Z lightOnInSection
	c (JZ)V retainData
	a (JLded;)V queueSectionData
	d (JZ)V updateSectionStatus
	a (JB)V putSectionState
	l (J)V initializeSection
	m (J)V removeSection
	b ()V swapSectionMap
	k (J)Ldws$b; getDebugSectionType
dws$a net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState
	a EMPTY
	b MIN_NEIGHBORS
	c MAX_NEIGHBORS
	d HAS_DATA_BIT
	e NEIGHBOR_COUNT_BITS
	<init> ()V <init>
	a (BZ)B hasData
	a (BI)B neighborCount
	a (B)Z hasData
	b (B)I neighborCount
	c (B)Ldws$b; type
dws$b net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType
	a EMPTY
	b LIGHT_ONLY
	c LIGHT_AND_DATA
	d display
	e $VALUES
	values ()[Ldws$b; values
	valueOf (Ljava/lang/String;)Ldws$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; display
	b ()[Ldws$b; $values
	<clinit> ()V <clinit>
dwt net/minecraft/world/level/lighting/LevelLightEngine
	b LIGHT_SECTION_PADDING
	c levelHeightAccessor
	a blockEngine
	d skyEngine
	<init> (Ldel;ZZ)V <init>
	a (Lgu;)V checkBlock
	E_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lhx;Z)V updateSectionStatus
	a (Lclt;Z)V setLightEnabled
	b (Lclt;)V propagateLightSources
	a (Lcmv;)Ldwr; getLayerListener
	a (Lcmv;Lhx;)Ljava/lang/String; getDebugData
	b (Lcmv;Lhx;)Ldws$b; getDebugSectionType
	a (Lcmv;Lhx;Lded;)V queueSectionData
	b (Lclt;Z)V retainData
	a (Lgu;I)I getRawBrightness
	a (Lhx;)Z lightOnInSection
	c ()I getLightSectionCount
	d ()I getMinLightSection
	e ()I getMaxLightSection
dwu net/minecraft/world/level/lighting/LeveledPriorityQueue
	a levelCount
	b queues
	c firstQueuedLevel
	<init> (II)V <init>
	a ()J removeFirstLong
	b ()Z isEmpty
	a (JII)V dequeue
	a (JI)V enqueue
	a (I)V checkFirstQueuedLevel
dwu$1 net/minecraft/world/level/lighting/LeveledPriorityQueue$1
	a val$minSize
	b this$0
	<init> (Ldwu;IFI)V <init>
	rehash (I)V rehash
dwv net/minecraft/world/level/lighting/LightEngine
	a MAX_LEVEL
	b MIN_OPACITY
	c PULL_LIGHT_IN_ENTRY
	g MIN_QUEUE_SIZE
	d PROPAGATION_DIRECTIONS
	e chunkSource
	f storage
	h blockNodesToCheck
	i decreaseQueue
	j increaseQueue
	k mutablePos
	l CACHE_SIZE
	m lastChunkPos
	n lastChunk
	<init> (Ldel;Ldws;)V <init>
	a (Lcls;Lgu;Ldcb;Ldcb;)Z hasDifferentLightProperties
	a (Lcls;Ldcb;Lgu;Ldcb;Lgu;Lha;I)I getLightBlockInto
	a (Lcls;Lgu;Ldcb;Lha;)Lefb; getOcclusionShape
	a (Ldcb;)Z isEmptyShape
	c (Lgu;)Ldcb; getState
	a (Ldcb;Lgu;)I getOpacity
	a (JLdcb;JLdcb;Lha;)Z shapeOccludes
	a (Ldcb;JLha;)Lefb; getOcclusionShape
	a (II)Ldek; getChunk
	c ()V clearChunkCache
	a (Lgu;)V checkBlock
	a (JLded;)V queueSectionData
	b (Lclt;Z)V retainData
	a (Lhx;Z)V updateSectionStatus
	a (Lclt;Z)V setLightEnabled
	a ()I runLightUpdates
	d ()I propagateIncreases
	e ()I propagateDecreases
	b (JJ)V enqueueDecrease
	c (JJ)V enqueueIncrease
	E_ ()Z hasLightWork
	a (Lhx;)Lded; getDataLayerData
	b (Lgu;)I getLightValue
	b (J)Ljava/lang/String; getDebugData
	c (J)Ldws$b; getDebugSectionType
	a (J)V checkNode
	a (JJI)V propagateIncrease
	a (JJ)V propagateDecrease
	<clinit> ()V <clinit>
dwv$a net/minecraft/world/level/lighting/LightEngine$QueueEntry
	a FROM_LEVEL_BITS
	b DIRECTION_BITS
	c LEVEL_MASK
	d DIRECTIONS_MASK
	e FLAG_FROM_EMPTY_SHAPE
	f FLAG_INCREASE_FROM_EMISSION
	<init> ()V <init>
	a (ILha;)J decreaseSkipOneDirection
	a (I)J decreaseAllDirections
	a (IZ)J increaseLightFromEmission
	a (IZLha;)J increaseSkipOneDirection
	b (IZLha;)J increaseOnlyOneDirection
	a (ZZZZZ)J increaseSkySourceInDirections
	a (J)I getFromLevel
	b (J)Z isFromEmptyShape
	c (J)Z isIncreaseFromEmission
	a (JLha;)Z shouldPropagateInDirection
	a (JI)J withLevel
	b (JLha;)J withDirection
	c (JLha;)J withoutDirection
dww net/minecraft/world/level/lighting/LightEventListener
	a (Lgu;)V checkBlock
	E_ ()Z hasLightWork
	a ()I runLightUpdates
	a (Lgu;Z)V updateSectionStatus
	a (Lhx;Z)V updateSectionStatus
	a (Lclt;Z)V setLightEnabled
	b (Lclt;)V propagateLightSources
dwx net/minecraft/world/level/lighting/SkyLightEngine
	g REMOVE_TOP_SKY_SOURCE_ENTRY
	h REMOVE_SKY_SOURCE_ENTRY
	i ADD_SKY_SOURCE_ENTRY
	j mutablePos
	k emptyChunkSources
	<init> (Ldel;)V <init>
	<init> (Ldel;Ldwy;)V <init>
	a (I)Z isSourceLevel
	a (III)I getLowestSourceY
	b (II)Ldwo; getChunkSources
	a (J)V checkNode
	b (III)V updateSourcesInColumn
	a (IIII)V removeSourcesBelow
	b (IIII)V addSourcesAbove
	a (JJI)V propagateIncrease
	a (JJ)V propagateDecrease
	d (J)I countEmptySectionsBelowIfAtBorder
	a (JLha;IZI)V propagateFromEmptySections
	a (Lha;II)Z crossedSectionEdge
	a (Lclt;Z)V setLightEnabled
	b (Lclt;)V propagateLightSources
	<clinit> ()V <clinit>
dwx$1 net/minecraft/world/level/lighting/SkyLightEngine$1
	a $SwitchMap$net$minecraft$core$Direction
	<clinit> ()V <clinit>
dwy net/minecraft/world/level/lighting/SkyLightSectionStorage
	<init> (Ldel;)V <init>
	a (J)I getLightValue
	e (JZ)I getLightValue
	h (J)V onNodeAdded
	i (J)V onNodeRemoved
	g (J)Lded; createDataLayer
	a (Lded;)Lded; repeatFirstLayer
	a (I)Z hasLightDataAtOrBelow
	l (J)Z isAboveData
	m (J)I getTopSectionY
	c ()I getBottomSectionY
dwy$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	<init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V <init>
	a ()Ldwy$a; copy
	b ()Ldwp; copy
dwz net/minecraft/world/level/lighting/SpatialLongSet
	a map
	<init> (IF)V <init>
	add (J)Z add
	rem (J)Z rem
	removeFirstLong ()J removeFirstLong
	size ()I size
	isEmpty ()Z isEmpty
dwz$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Y_OFFSET
	e Z_OFFSET
	g X_OFFSET
	h OUTER_MASK
	i lastPos
	j lastOuterKey
	k minSize
	<init> (IF)V <init>
	a (J)J getOuterKey
	b (J)I getInnerKey
	a (JI)J getFullKey
	c (J)Z addBit
	a (IJ)Z replaceBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
	b (IJ)Z removeFromEntry
	a ()J removeFirstBit
	rehash (I)V rehash
	<clinit> ()V <clinit>
dxa net/minecraft/world/level/lighting/package-info
dxb net/minecraft/world/level/material/EmptyFluid
	<init> ()V <init>
	a ()Lcfu; getBucket
	a (Ldxe;Lcls;Lgu;Ldxd;Lha;)Z canBeReplacedWith
	a (Lcls;Lgu;Ldxe;)Leei; getFlow
	a (Lcmp;)I getTickDelay
	b ()Z isEmpty
	c ()F getExplosionResistance
	a (Ldxe;Lcls;Lgu;)F getHeight
	a (Ldxe;)F getOwnHeight
	b (Ldxe;)Ldcb; createLegacyBlock
	c (Ldxe;)Z isSource
	d (Ldxe;)I getAmount
	b (Ldxe;Lcls;Lgu;)Lefb; getShape
dxc net/minecraft/world/level/material/FlowingFluid
	a FALLING
	b LEVEL
	e CACHE_SIZE
	f OCCLUSION_CACHE
	g shapes
	<init> ()V <init>
	a (Ldcc$a;)V createFluidStateDefinition
	a (Lcls;Lgu;Ldxe;)Leei; getFlow
	g (Ldxe;)Z affectsFlow
	a (Lcls;Lgu;Lha;)Z isSolidFace
	a (Lcmm;Lgu;Ldxe;)V spread
	a (Lcmm;Lgu;Ldxe;Ldcb;)V spreadToSides
	a (Lcmm;Lgu;Ldcb;)Ldxe; getNewLiquid
	a (Lha;Lcls;Lgu;Ldcb;Lgu;Ldcb;)Z canPassThroughWall
	d ()Ldxd; getFlowing
	a (IZ)Ldxe; getFlowing
	e ()Ldxd; getSource
	a (Z)Ldxe; getSource
	a (Lcmm;)Z canConvertToSource
	a (Lcmn;Lgu;Ldcb;Lha;Ldxe;)V spreadTo
	a (Lcmn;Lgu;Ldcb;)V beforeDestroyingBlock
	a (Lgu;Lgu;)S getCacheKey
	a (Lcmp;Lgu;ILha;Ldcb;Lgu;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lcls;Ldxd;Lgu;Ldcb;Lgu;Ldcb;)Z isWaterHole
	a (Lcls;Ldxd;Lgu;Ldcb;Lha;Lgu;Ldcb;Ldxe;)Z canPassThrough
	h (Ldxe;)Z isSourceBlockOfThisType
	b (Lcmp;)I getSlopeFindDistance
	a (Lcmp;Lgu;)I sourceNeighborCount
	b (Lcmm;Lgu;Ldcb;)Ljava/util/Map; getSpread
	a (Lcls;Lgu;Ldcb;Ldxd;)Z canHoldFluid
	a (Lcls;Lgu;Ldcb;Lha;Lgu;Ldcb;Ldxe;Ldxd;)Z canSpreadTo
	c (Lcmp;)I getDropOff
	a (Lcmm;Lgu;Ldxe;Ldxe;)I getSpreadDelay
	b (Lcmm;Lgu;Ldxe;)V tick
	e (Ldxe;)I getLegacyLevel
	c (Ldxe;Lcls;Lgu;)Z hasSameAbove
	a (Ldxe;Lcls;Lgu;)F getHeight
	a (Ldxe;)F getOwnHeight
	d (Ldxe;)I getAmount
	b (Ldxe;Lcls;Lgu;)Lefb; getShape
	b (Lcls;Lgu;Ldxe;)Lefb; lambda$getShape$5
	a (Lcmm;Lgu;Lgu;Ldcb;S)Z lambda$getSpread$4
	a (Lcmm;Lgu;S)Lcom/mojang/datafixers/util/Pair; lambda$getSpread$3
	a (Lgu;Lcmp;Ldcb;S)Z lambda$getSlopeDistance$2
	a (Lcmp;Lgu;S)Lcom/mojang/datafixers/util/Pair; lambda$getSlopeDistance$1
	l ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
	<clinit> ()V <clinit>
dxc$1 net/minecraft/world/level/material/FlowingFluid$1
	<init> (I)V <init>
	rehash (I)V rehash
dxd net/minecraft/world/level/material/Fluid
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a defaultFluidState
	b builtInRegistryHolder
	<init> ()V <init>
	a (Ldcc$a;)V createFluidStateDefinition
	f ()Ldcc; getStateDefinition
	f (Ldxe;)V registerDefaultState
	g ()Ldxe; defaultFluidState
	a ()Lcfu; getBucket
	a (Lcmm;Lgu;Ldxe;Lapf;)V animateTick
	b (Lcmm;Lgu;Ldxe;)V tick
	b (Lcmm;Lgu;Ldxe;Lapf;)V randomTick
	h ()Lit; getDripParticle
	a (Ldxe;Lcls;Lgu;Ldxd;Lha;)Z canBeReplacedWith
	a (Lcls;Lgu;Ldxe;)Leei; getFlow
	a (Lcmp;)I getTickDelay
	i ()Z isRandomlyTicking
	b ()Z isEmpty
	c ()F getExplosionResistance
	a (Ldxe;Lcls;Lgu;)F getHeight
	a (Ldxe;)F getOwnHeight
	b (Ldxe;)Ldcb; createLegacyBlock
	c (Ldxe;)Z isSource
	d (Ldxe;)I getAmount
	a (Ldxd;)Z isSame
	a (Lanl;)Z is
	b (Ldxe;Lcls;Lgu;)Lefb; getShape
	j ()Ljava/util/Optional; getPickupSound
	k ()Lhe$c; builtInRegistryHolder
	<clinit> ()V <clinit>
dxe net/minecraft/world/level/material/FluidState
	a CODEC
	b AMOUNT_MAX
	g AMOUNT_FULL
	<init> (Ldxd;Lcom/google/common/collect/ImmutableMap;Lcom/mojang/serialization/MapCodec;)V <init>
	a ()Ldxd; getType
	b ()Z isSource
	a (Ldxd;)Z isSourceOfType
	c ()Z isEmpty
	a (Lcls;Lgu;)F getHeight
	d ()F getOwnHeight
	e ()I getAmount
	b (Lcls;Lgu;)Z shouldRenderBackwardUpFace
	a (Lcmm;Lgu;)V tick
	a (Lcmm;Lgu;Lapf;)V animateTick
	f ()Z isRandomlyTicking
	b (Lcmm;Lgu;Lapf;)V randomTick
	c (Lcls;Lgu;)Leei; getFlow
	g ()Ldcb; createLegacyBlock
	h ()Lit; getDripParticle
	a (Lanl;)Z is
	a (Lhi;)Z is
	b (Ldxd;)Z is
	i ()F getExplosionResistance
	a (Lcls;Lgu;Ldxd;Lha;)Z canBeReplacedWith
	d (Lcls;Lgu;)Lefb; getShape
	j ()Lhe; holder
	k ()Ljava/util/stream/Stream; getTags
	<clinit> ()V <clinit>
dxf net/minecraft/world/level/material/Fluids
	a EMPTY
	b FLOWING_WATER
	c WATER
	d FLOWING_LAVA
	e LAVA
	<init> ()V <init>
	a (Ljava/lang/String;Ldxd;)Ldxd; register
	<clinit> ()V <clinit>
dxg net/minecraft/world/level/material/FogType
	a LAVA
	b WATER
	c POWDER_SNOW
	d NONE
	e $VALUES
	values ()[Ldxg; values
	valueOf (Ljava/lang/String;)Ldxg; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldxg; $values
	<clinit> ()V <clinit>
dxh net/minecraft/world/level/material/LavaFluid
	e MIN_LEVEL_CUTOFF
	<init> ()V <init>
	d ()Ldxd; getFlowing
	e ()Ldxd; getSource
	a ()Lcfu; getBucket
	a (Lcmm;Lgu;Ldxe;Lapf;)V animateTick
	b (Lcmm;Lgu;Ldxe;Lapf;)V randomTick
	a (Lcmp;Lgu;)Z hasFlammableNeighbours
	b (Lcmp;Lgu;)Z isFlammable
	h ()Lit; getDripParticle
	a (Lcmn;Lgu;Ldcb;)V beforeDestroyingBlock
	b (Lcmp;)I getSlopeFindDistance
	b (Ldxe;)Ldcb; createLegacyBlock
	a (Ldxd;)Z isSame
	c (Lcmp;)I getDropOff
	a (Ldxe;Lcls;Lgu;Ldxd;Lha;)Z canBeReplacedWith
	a (Lcmp;)I getTickDelay
	a (Lcmm;Lgu;Ldxe;Ldxe;)I getSpreadDelay
	a (Lcmn;Lgu;)V fizz
	a (Lcmm;)Z canConvertToSource
	a (Lcmn;Lgu;Ldcb;Lha;Ldxe;)V spreadTo
	i ()Z isRandomlyTicking
	c ()F getExplosionResistance
	j ()Ljava/util/Optional; getPickupSound
dxh$a net/minecraft/world/level/material/LavaFluid$Flowing
	<init> ()V <init>
	a (Ldcc$a;)V createFluidStateDefinition
	d (Ldxe;)I getAmount
	c (Ldxe;)Z isSource
dxh$b net/minecraft/world/level/material/LavaFluid$Source
	<init> ()V <init>
	d (Ldxe;)I getAmount
	c (Ldxe;)Z isSource
dxi net/minecraft/world/level/material/MapColor
	am MATERIAL_COLORS
	a NONE
	b GRASS
	c SAND
	d WOOL
	e FIRE
	f ICE
	g METAL
	h PLANT
	i SNOW
	j CLAY
	k DIRT
	l STONE
	m WATER
	n WOOD
	o QUARTZ
	p COLOR_ORANGE
	q COLOR_MAGENTA
	r COLOR_LIGHT_BLUE
	s COLOR_YELLOW
	t COLOR_LIGHT_GREEN
	u COLOR_PINK
	v COLOR_GRAY
	w COLOR_LIGHT_GRAY
	x COLOR_CYAN
	y COLOR_PURPLE
	z COLOR_BLUE
	A COLOR_BROWN
	B COLOR_GREEN
	C COLOR_RED
	D COLOR_BLACK
	E GOLD
	F DIAMOND
	G LAPIS
	H EMERALD
	I PODZOL
	J NETHER
	K TERRACOTTA_WHITE
	L TERRACOTTA_ORANGE
	M TERRACOTTA_MAGENTA
	N TERRACOTTA_LIGHT_BLUE
	O TERRACOTTA_YELLOW
	P TERRACOTTA_LIGHT_GREEN
	Q TERRACOTTA_PINK
	R TERRACOTTA_GRAY
	S TERRACOTTA_LIGHT_GRAY
	T TERRACOTTA_CYAN
	U TERRACOTTA_PURPLE
	V TERRACOTTA_BLUE
	W TERRACOTTA_BROWN
	X TERRACOTTA_GREEN
	Y TERRACOTTA_RED
	Z TERRACOTTA_BLACK
	aa CRIMSON_NYLIUM
	ab CRIMSON_STEM
	ac CRIMSON_HYPHAE
	ad WARPED_NYLIUM
	ae WARPED_STEM
	af WARPED_HYPHAE
	ag WARPED_WART_BLOCK
	ah DEEPSLATE
	ai RAW_IRON
	aj GLOW_LICHEN
	ak col
	al id
	<init> (II)V <init>
	a (Ldxi$a;)I calculateRGBColor
	a (I)Ldxi; byId
	c (I)Ldxi; byIdUnsafe
	b (I)I getColorFromPackedId
	b (Ldxi$a;)B getPackedId
	<clinit> ()V <clinit>
dxi$a net/minecraft/world/level/material/MapColor$Brightness
	a LOW
	b NORMAL
	c HIGH
	d LOWEST
	g VALUES
	e id
	f modifier
	h $VALUES
	values ()[Ldxi$a; values
	valueOf (Ljava/lang/String;)Ldxi$a; valueOf
	<init> (Ljava/lang/String;III)V <init>
	a (I)Ldxi$a; byId
	b (I)Ldxi$a; byIdUnsafe
	a ()[Ldxi$a; $values
	<clinit> ()V <clinit>
dxj net/minecraft/world/level/material/PushReaction
	a NORMAL
	b DESTROY
	c BLOCK
	d IGNORE
	e PUSH_ONLY
	f $VALUES
	values ()[Ldxj; values
	valueOf (Ljava/lang/String;)Ldxj; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldxj; $values
	<clinit> ()V <clinit>
dxk net/minecraft/world/level/material/WaterFluid
	<init> ()V <init>
	d ()Ldxd; getFlowing
	e ()Ldxd; getSource
	a ()Lcfu; getBucket
	a (Lcmm;Lgu;Ldxe;Lapf;)V animateTick
	h ()Lit; getDripParticle
	a (Lcmm;)Z canConvertToSource
	a (Lcmn;Lgu;Ldcb;)V beforeDestroyingBlock
	b (Lcmp;)I getSlopeFindDistance
	b (Ldxe;)Ldcb; createLegacyBlock
	a (Ldxd;)Z isSame
	c (Lcmp;)I getDropOff
	a (Lcmp;)I getTickDelay
	a (Ldxe;Lcls;Lgu;Ldxd;Lha;)Z canBeReplacedWith
	c ()F getExplosionResistance
	j ()Ljava/util/Optional; getPickupSound
dxk$a net/minecraft/world/level/material/WaterFluid$Flowing
	<init> ()V <init>
	a (Ldcc$a;)V createFluidStateDefinition
	d (Ldxe;)I getAmount
	c (Ldxe;)Z isSource
dxk$b net/minecraft/world/level/material/WaterFluid$Source
	<init> ()V <init>
	d (Ldxe;)I getAmount
	c (Ldxe;)Z isSource
dxl net/minecraft/world/level/material/package-info
dxm net/minecraft/world/level/package-info
dxn net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	l prefersShallowSwimming
	m oldWalkableCost
	n oldWaterBorderCost
	<init> (Z)V <init>
	a (Lcmz;Lbgb;)V prepare
	b ()V done
	a ()Ldxr; getStart
	a (DDD)Ldxx; getGoal
	a ([Ldxr;Ldxr;)I getNeighbors
	b (Ldxr;Ldxr;)Z isVerticalNeighborValid
	c ()Z isAmphibious
	a (Lcls;III)Ldxp; getBlockPathType
dxo net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	<init> ()V <init>
	a (Ldxr;)Ldxr; insert
	a ()V clear
	b ()Ldxr; peek
	c ()Ldxr; pop
	b (Ldxr;)V remove
	a (Ldxr;F)V changeCost
	d ()I size
	a (I)V upHeap
	b (I)V downHeap
	e ()Z isEmpty
	f ()[Ldxr; getHeap
dxp net/minecraft/world/level/pathfinder/BlockPathTypes
	a BLOCKED
	b OPEN
	c WALKABLE
	d WALKABLE_DOOR
	e TRAPDOOR
	f POWDER_SNOW
	g DANGER_POWDER_SNOW
	h FENCE
	i LAVA
	j WATER
	k WATER_BORDER
	l RAIL
	m UNPASSABLE_RAIL
	n DANGER_FIRE
	o DAMAGE_FIRE
	p DANGER_OTHER
	q DAMAGE_OTHER
	r DOOR_OPEN
	s DOOR_WOOD_CLOSED
	t DOOR_IRON_CLOSED
	u BREACH
	v LEAVES
	w STICKY_HONEY
	x COCOA
	y DAMAGE_CAUTIOUS
	z malus
	A $VALUES
	values ()[Ldxp; values
	valueOf (Ljava/lang/String;)Ldxp; valueOf
	<init> (Ljava/lang/String;IF)V <init>
	a ()F getMalus
	b ()[Ldxp; $values
	<clinit> ()V <clinit>
dxq net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	l pathTypeByPosCache
	m SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	n MAX_START_NODE_CANDIDATES
	<init> ()V <init>
	a (Lcmz;Lbgb;)V prepare
	b ()V done
	a ()Ldxr; getStart
	a (Lgu;)Z canStartAt
	a (DDD)Ldxx; getGoal
	a ([Ldxr;Ldxr;)I getNeighbors
	b (Ldxr;)Z hasMalus
	c (Ldxr;)Z isOpen
	a (III)Ldxr; findAcceptedNode
	c (III)Ldxp; getCachedBlockPathType
	a (Lcls;IIILbgb;)Ldxp; getBlockPathType
	a (Lcls;III)Ldxp; getBlockPathType
	a (Lbgb;)Ljava/lang/Iterable; iteratePathfindingStartNodeCandidatePositions
	a (IIIJ)Ldxp; lambda$getCachedBlockPathType$0
dxr net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	m hash
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	<init> (III)V <init>
	a (III)Ldxr; cloneAndMove
	b (III)I createHash
	a (Ldxr;)F distanceTo
	b (Ldxr;)F distanceToXZ
	a (Lgu;)F distanceTo
	c (Ldxr;)F distanceToSqr
	b (Lgu;)F distanceToSqr
	d (Ldxr;)F distanceManhattan
	c (Lgu;)F distanceManhattan
	a ()Lgu; asBlockPos
	b ()Leei; asVec3
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	c ()Z inOpenSet
	toString ()Ljava/lang/String; toString
	a (Lsf;)V writeToStream
	b (Lsf;)Ldxr; createFromStream
	a (Lsf;Ldxr;)V readContents
dxs net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	j canWalkOverFences
	<init> ()V <init>
	a (Lcmz;Lbgb;)V prepare
	b ()V done
	b (Lgu;)Ldxr; getNode
	b (III)Ldxr; getNode
	a ()Ldxr; getStart
	a (DDD)Ldxx; getGoal
	a (Ldxr;)Ldxx; getTargetFromNode
	a ([Ldxr;Ldxr;)I getNeighbors
	a (Lcls;IIILbgb;)Ldxp; getBlockPathType
	a (Lcls;III)Ldxp; getBlockPathType
	a (Z)V setCanPassDoors
	b (Z)V setCanOpenDoors
	c (Z)V setCanFloat
	d (Z)V setCanWalkOverFences
	d ()Z canPassDoors
	e ()Z canOpenDoors
	f ()Z canFloat
	g ()Z canWalkOverFences
	a (IIII)Ldxr; lambda$getNode$0
dxt net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e nextNodeIndex
	f target
	g distToTarget
	h reached
	<init> (Ljava/util/List;Lgu;Z)V <init>
	a ()V advance
	b ()Z notStarted
	c ()Z isDone
	d ()Ldxr; getEndNode
	a (I)Ldxr; getNode
	b (I)V truncateNodes
	a (ILdxr;)V replaceNode
	e ()I getNodeCount
	f ()I getNextNodeIndex
	c (I)V setNextNodeIndex
	a (Lbfj;I)Leei; getEntityPosAtNode
	d (I)Lgu; getNodePos
	a (Lbfj;)Leei; getNextEntityPos
	g ()Lgu; getNextNodePos
	h ()Ldxr; getNextNode
	i ()Ldxr; getPreviousNode
	a (Ldxt;)Z sameAs
	j ()Z canReach
	a ([Ldxr;[Ldxr;Ljava/util/Set;)V setDebug
	k ()[Ldxr; getOpenSet
	l ()[Ldxr; getClosedSet
	a (Lsf;)V writeToStream
	b (Lsf;)Ldxt; createFromStream
	toString ()Ljava/lang/String; toString
	m ()Lgu; getTarget
	n ()F getDistToTarget
	a (Lsf;Ldxx;)V lambda$writeToStream$0
dxu net/minecraft/world/level/pathfinder/PathComputationType
	a LAND
	b WATER
	c AIR
	d $VALUES
	values ()[Ldxu; values
	valueOf (Ljava/lang/String;)Ldxu; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldxu; $values
	<clinit> ()V <clinit>
dxv net/minecraft/world/level/pathfinder/PathFinder
	a FUDGING
	b neighbors
	c maxVisitedNodes
	d nodeEvaluator
	e DEBUG
	f openSet
	<init> (Ldxs;I)V <init>
	a (Lcmz;Lbgb;Ljava/util/Set;FIF)Ldxt; findPath
	a (Lban;Ldxr;Ljava/util/Map;FIF)Ldxt; findPath
	a (Ldxr;Ldxr;)F distance
	a (Ldxr;Ljava/util/Set;)F getBestH
	a (Ldxr;Lgu;Z)Ldxt; reconstructPath
	a (Ljava/util/Map;Ldxx;)Ldxt; lambda$findPath$2
	b (Ljava/util/Map;Ldxx;)Ldxt; lambda$findPath$1
	a (Lgu;)Ldxx; lambda$findPath$0
dxw net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	k allowBreaching
	l pathTypesByPosCache
	<init> (Z)V <init>
	a (Lcmz;Lbgb;)V prepare
	b ()V done
	a ()Ldxr; getStart
	a (DDD)Ldxx; getGoal
	a ([Ldxr;Ldxr;)I getNeighbors
	b (Ldxr;)Z isNodeValid
	a (Ldxr;Ldxr;Ldxr;)Z isDiagonalNodeValid
	a (III)Ldxr; findAcceptedNode
	c (III)Ldxp; getCachedBlockType
	a (Lcls;III)Ldxp; getBlockPathType
	a (Lcls;IIILbgb;)Ldxp; getBlockPathType
	a (IIIJ)Ldxp; lambda$getCachedBlockType$0
dxx net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	<init> (Ldxr;)V <init>
	<init> (III)V <init>
	a (FLdxr;)V updateBest
	d ()Ldxr; getBestNode
	e ()V setReached
	f ()Z isReached
	c (Lsf;)Ldxx; createFromStream
dxy net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	k SPACE_BETWEEN_WALL_POSTS
	l DEFAULT_MOB_JUMP_HEIGHT
	m pathTypesByPosCache
	n collisionCache
	<init> ()V <init>
	a (Lcmz;Lbgb;)V prepare
	b ()V done
	a ()Ldxr; getStart
	c (Lgu;)Ldxr; getStartNode
	a (Lgu;)Z canStartAt
	a (DDD)Ldxx; getGoal
	a ([Ldxr;Ldxr;)I getNeighbors
	a (Ldxr;Ldxr;)Z isNeighborValid
	a (Ldxr;Ldxr;Ldxr;Ldxr;)Z isDiagonalValid
	a (Ldxp;)Z doesBlockHavePartialCollision
	b (Ldxr;)Z canReachWithoutCollision
	d (Lgu;)D getFloorLevel
	a (Lcls;Lgu;)D getFloorLevel
	c ()Z isAmphibious
	a (IIIIDLha;Ldxp;)Ldxr; findAcceptedNode
	h ()D getMobJumpHeight
	a (IIILdxp;F)Ldxr; getNodeAndUpdateCostToMax
	a (III)Ldxr; getBlockedNode
	a (Leed;)Z hasCollisions
	a (Lcls;IIILbgb;)Ldxp; getBlockPathType
	a (Lcls;IIILjava/util/EnumSet;Ldxp;Lgu;)Ldxp; getBlockPathTypes
	a (Lcls;Lgu;Ldxp;)Ldxp; evaluateBlockPathType
	a (Lbgb;Lgu;)Ldxp; getBlockPathType
	a (Lbgb;III)Ldxp; getCachedBlockType
	a (Lcls;III)Ldxp; getBlockPathType
	a (Lcls;Lgu$a;)Ldxp; getBlockPathTypeStatic
	a (Lcls;Lgu$a;Ldxp;)Ldxp; checkNeighbourBlocks
	b (Lcls;Lgu;)Ldxp; getBlockPathTypeRaw
	a (Ldcb;)Z isBurningBlock
	a (IIILbgb;J)Ldxp; lambda$getCachedBlockType$1
	a (Leed;Ljava/lang/Object;)Z lambda$hasCollisions$0
dxz net/minecraft/world/level/pathfinder/package-info
dya net/minecraft/world/level/portal/PortalForcer
	a TICKET_RADIUS
	b SEARCH_RADIUS
	c CREATE_RADIUS
	d FRAME_HEIGHT
	e FRAME_WIDTH
	f FRAME_BOX
	g FRAME_HEIGHT_START
	h FRAME_HEIGHT_END
	i FRAME_WIDTH_START
	j FRAME_WIDTH_END
	k FRAME_BOX_START
	l FRAME_BOX_END
	m NOTHING_FOUND
	n level
	<init> (Laif;)V <init>
	a (Lgu;ZLdds;)Ljava/util/Optional; findPortalAround
	a (Lgu;Lha$a;)Ljava/util/Optional; createPortal
	a (Lgu$a;)Z canPortalReplaceBlock
	a (Lgu;Lgu$a;Lha;I)Z canHostFrame
	a (Lbra;)Ll$a; lambda$findPortalAround$6
	a (Ldcb;Lgu;)Z lambda$findPortalAround$5
	b (Lbra;)Z lambda$findPortalAround$4
	c (Lbra;)I lambda$findPortalAround$3
	a (Lgu;Lbra;)D lambda$findPortalAround$2
	a (Ldds;Lbra;)Z lambda$findPortalAround$1
	a (Lhe;)Z lambda$findPortalAround$0
dyb net/minecraft/world/level/portal/PortalInfo
	a pos
	b speed
	c yRot
	d xRot
	<init> (Leei;Leei;FF)V <init>
dyc net/minecraft/world/level/portal/PortalShape
	c MIN_WIDTH
	a MAX_WIDTH
	d MIN_HEIGHT
	b MAX_HEIGHT
	e FRAME
	f SAFE_TRAVEL_MAX_ENTITY_XY
	g SAFE_TRAVEL_MAX_VERTICAL_DELTA
	h level
	i axis
	j rightDir
	k numPortalBlocks
	l bottomLeft
	m height
	n width
	a (Lcmn;Lgu;Lha$a;)Ljava/util/Optional; findEmptyPortalShape
	a (Lcmn;Lgu;Ljava/util/function/Predicate;Lha$a;)Ljava/util/Optional; findPortalShape
	<init> (Lcmn;Lgu;Lha$a;)V <init>
	a (Lgu;)Lgu; calculateBottomLeft
	d ()I calculateWidth
	a (Lgu;Lha;)I getDistanceUntilEdgeAboveFrame
	e ()I calculateHeight
	a (Lgu$a;I)Z hasTopFrame
	a (Lgu$a;)I getDistanceUntilTop
	a (Ldcb;)Z isEmpty
	a ()Z isValid
	b ()V createPortalBlocks
	c ()Z isComplete
	a (Ll$a;Lha$a;Leei;Lbfk;)Leei; getRelativePosition
	a (Laif;Ll$a;Lha$a;Leei;Lbfj;Leei;FF)Ldyb; createPortalInfo
	a (Leei;Laif;Lbfj;Lbfk;)Leei; findCollisionFreePosition
	a (DLeei;)Leei; lambda$findCollisionFreePosition$3
	a (Ldcb;Lgu;)V lambda$createPortalBlocks$2
	a (Ldyc;)Z lambda$findEmptyPortalShape$1
	a (Ldcb;Lcls;Lgu;)Z lambda$static$0
	<clinit> ()V <clinit>
dyd net/minecraft/world/level/portal/package-info
dye net/minecraft/world/level/redstone/CollectingNeighborUpdater
	b LOGGER
	c level
	d maxChainedNeighborUpdates
	e stack
	f addedThisLayer
	g count
	<init> (Lcmm;I)V <init>
	a (Lha;Ldcb;Lgu;Lgu;II)V shapeUpdate
	a (Lgu;Lcpn;Lgu;)V neighborChanged
	a (Ldcb;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lgu;Lcpn;Lha;)V updateNeighborsAtExceptFromFacing
	a (Lgu;Ldye$c;)V addAndRun
	a ()V runUpdates
	<clinit> ()V <clinit>
dye$a net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	a state
	b pos
	c block
	d neighborPos
	e movedByPiston
	<init> (Ldcb;Lgu;Lcpn;Lgu;Z)V <init>
	a (Lcmm;)Z runNext
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldcb; state
	b ()Lgu; pos
	c ()Lcpn; block
	d ()Lgu; neighborPos
	e ()Z movedByPiston
dye$b net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	a sourcePos
	b sourceBlock
	c skipDirection
	d idx
	<init> (Lgu;Lcpn;Lha;)V <init>
	a (Lcmm;)Z runNext
dye$c net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	a (Lcmm;)Z runNext
dye$d net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	a direction
	b state
	c pos
	d neighborPos
	e updateFlags
	f updateLimit
	<init> (Lha;Ldcb;Lgu;Lgu;II)V <init>
	a (Lcmm;)Z runNext
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lha; direction
	b ()Ldcb; state
	c ()Lgu; pos
	d ()Lgu; neighborPos
	e ()I updateFlags
	f ()I updateLimit
dye$e net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	a pos
	b block
	c neighborPos
	<init> (Lgu;Lcpn;Lgu;)V <init>
	a (Lcmm;)Z runNext
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Lgu; pos
	b ()Lcpn; block
	c ()Lgu; neighborPos
dyf net/minecraft/world/level/redstone/InstantNeighborUpdater
	b level
	<init> (Lcmm;)V <init>
	a (Lha;Ldcb;Lgu;Lgu;II)V shapeUpdate
	a (Lgu;Lcpn;Lgu;)V neighborChanged
	a (Ldcb;Lgu;Lcpn;Lgu;Z)V neighborChanged
dyg net/minecraft/world/level/redstone/NeighborUpdater
	a UPDATE_ORDER
	a (Lha;Ldcb;Lgu;Lgu;II)V shapeUpdate
	a (Lgu;Lcpn;Lgu;)V neighborChanged
	a (Ldcb;Lgu;Lcpn;Lgu;Z)V neighborChanged
	a (Lgu;Lcpn;Lha;)V updateNeighborsAtExceptFromFacing
	a (Lcmn;Lha;Ldcb;Lgu;Lgu;II)V executeShapeUpdate
	a (Lcmm;Ldcb;Lgu;Lcpn;Lgu;Z)V executeUpdate
	a (Lcpn;)Ljava/lang/String; lambda$executeUpdate$0
	<clinit> ()V <clinit>
dyh net/minecraft/world/level/redstone/Redstone
	a SIGNAL_MIN
	b SIGNAL_MAX
	c SIGNAL_NONE
	<init> ()V <init>
dyi net/minecraft/world/level/redstone/package-info
dyj net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	b dirty
	<init> ()V <init>
	a (Lqr;)Lqr; save
	b ()V setDirty
	a (Z)V setDirty
	c ()Z isDirty
	a (Ljava/io/File;)V save
	<clinit> ()V <clinit>
dyk net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	<init> (Lgu;Lcen;Lsw;)V <init>
	a (Lqr;)Ldyk; load
	a (Lcls;Lgu;)Ldyk; fromWorld
	a ()Lgu; getPos
	b ()Lcen; getColor
	c ()Ldyl$a; getDecoration
	d ()Lsw; getName
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	e ()Lqr; save
	f ()Ljava/lang/String; getId
dyk$1 net/minecraft/world/level/saveddata/maps/MapBanner$1
	a $SwitchMap$net$minecraft$world$item$DyeColor
	<clinit> ()V <clinit>
dyl net/minecraft/world/level/saveddata/maps/MapDecoration
	a type
	b x
	c y
	d rot
	e name
	<init> (Ldyl$a;BBBLsw;)V <init>
	a ()B getImage
	b ()Ldyl$a; getType
	c ()B getX
	d ()B getY
	e ()B getRot
	f ()Z renderOnFrame
	g ()Lsw; getName
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
dyl$a net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	a PLAYER
	b FRAME
	c RED_MARKER
	d BLUE_MARKER
	e TARGET_X
	f TARGET_POINT
	g PLAYER_OFF_MAP
	h PLAYER_OFF_LIMITS
	i MANSION
	j MONUMENT
	k BANNER_WHITE
	l BANNER_ORANGE
	m BANNER_MAGENTA
	n BANNER_LIGHT_BLUE
	o BANNER_YELLOW
	p BANNER_LIME
	q BANNER_PINK
	r BANNER_GRAY
	s BANNER_LIGHT_GRAY
	t BANNER_CYAN
	u BANNER_PURPLE
	v BANNER_BLUE
	w BANNER_BROWN
	x BANNER_GREEN
	y BANNER_RED
	z BANNER_BLACK
	A RED_X
	B icon
	C renderedOnFrame
	D mapColor
	E trackCount
	F $VALUES
	values ()[Ldyl$a; values
	valueOf (Ljava/lang/String;)Ldyl$a; valueOf
	<init> (Ljava/lang/String;IZZ)V <init>
	<init> (Ljava/lang/String;IZIZ)V <init>
	a ()B getIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
	a (B)Ldyl$a; byIcon
	e ()Z shouldTrackCount
	f ()[Ldyl$a; $values
	<clinit> ()V <clinit>
dym net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	<init> (Lgu;II)V <init>
	a (Lqr;)Ldym; load
	a ()Lqr; save
	b ()Lgu; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
	a (Lgu;)Ljava/lang/String; frameId
dyn net/minecraft/world/level/saveddata/maps/MapIndex
	a FILE_NAME
	b usedAuxIds
	<init> ()V <init>
	b (Lqr;)Ldyn; load
	a (Lqr;)Lqr; save
	a ()I getFreeAuxValueForMap
dyo net/minecraft/world/level/saveddata/maps/MapItemSavedData
	i LOGGER
	j MAP_SIZE
	k HALF_MAP_SIZE
	a MAX_SCALE
	b TRACKED_DECORATION_LIMIT
	c centerX
	d centerZ
	e dimension
	l trackingPosition
	m unlimitedTracking
	f scale
	g colors
	h locked
	n carriedBy
	o carriedByPlayers
	p bannerMarkers
	q decorations
	r frameMarkers
	s trackedDecorationCount
	<init> (IIBZZZLacp;)V <init>
	a (DDBZZLacp;)Ldyo; createFresh
	a (BZLacp;)Ldyo; createForClient
	b (Lqr;)Ldyo; load
	a (Lqr;)Lqr; save
	a ()Ldyo; locked
	a (I)Ldyo; scaled
	a (Lbyo;Lcfz;)V tickCarriedBy
	a (Ljava/lang/String;)V removeDecoration
	a (Lcfz;Lgu;Ljava/lang/String;Ldyl$a;)V addTargetDecoration
	a (Ldyl$a;Lcmn;Ljava/lang/String;DDDLsw;)V addDecoration
	a (ILbyo;)Luo; getUpdatePacket
	a (II)V setColorsDirty
	g ()V setDecorationsDirty
	a (Lbyo;)Ldyo$a; getHoldingPlayer
	a (Lcmn;Lgu;)Z toggleBanner
	a (Lcls;II)V checkBanners
	d ()Ljava/util/Collection; getBanners
	a (Lgu;I)V removedFromFrame
	a (IIB)Z updateColor
	b (IIB)V setColor
	e ()Z isExplorationMap
	a (Ljava/util/List;)V addClientSideDecorations
	f ()Ljava/lang/Iterable; getDecorations
	b (I)Z isTrackedCountOverLimit
	a (Lqr;Lrk;)V lambda$save$1
	c (Lqr;)Ljava/lang/IllegalArgumentException; lambda$load$0
	<clinit> ()V <clinit>
dyo$a net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	a player
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i dirtyDecorations
	j tick
	b step
	c this$0
	<init> (Ldyo;Lbyo;)V <init>
	a ()Ldyo$b; createPatch
	a (I)Luo; nextUpdatePacket
	a (II)V markColorsDirty
	b ()V markDecorationsDirty
dyo$b net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	a startX
	b startY
	c width
	d height
	e mapColors
	<init> (IIII[B)V <init>
	a (Ldyo;)V applyToMap
dyp net/minecraft/world/level/saveddata/maps/package-info
dyq net/minecraft/world/level/saveddata/package-info
dyr net/minecraft/world/level/storage/CommandStorage
	a ID_PREFIX
	b namespaces
	c storage
	<init> (Ldyu;)V <init>
	a (Ljava/lang/String;)Ldyr$a; newStorage
	a (Lacq;)Lqr; get
	a (Lacq;Lqr;)V set
	a ()Ljava/util/stream/Stream; keys
	b (Ljava/lang/String;)Ljava/lang/String; createId
	a (Ljava/util/Map$Entry;)Ljava/util/stream/Stream; lambda$keys$3
	c (Ljava/lang/String;)Ldyr$a; lambda$set$2
	a (Ljava/lang/String;Lqr;)Ldyr$a; lambda$set$1
	b (Ljava/lang/String;Lqr;)Ldyr$a; lambda$get$0
dyr$a net/minecraft/world/level/storage/CommandStorage$Container
	a TAG_CONTENTS
	b storage
	<init> ()V <init>
	b (Lqr;)Ldyr$a; load
	a (Lqr;)Lqr; save
	a (Ljava/lang/String;)Lqr; get
	a (Ljava/lang/String;Lqr;)V put
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	a (Ljava/lang/String;Ljava/lang/String;)Lacq; lambda$getKeys$1
	a (Lqr;Ljava/lang/String;Lqr;)V lambda$save$0
dys net/minecraft/world/level/storage/DataVersion
	b version
	c series
	a MAIN_SERIES
	<init> (I)V <init>
	<init> (ILjava/lang/String;)V <init>
	a ()Z isSideSeries
	b ()Ljava/lang/String; getSeries
	c ()I getVersion
	a (Ldys;)Z isCompatible
	<clinit> ()V <clinit>
dyt net/minecraft/world/level/storage/DerivedLevelData
	a worldData
	b wrapped
	<init> (Ldze;Ldzd;)V <init>
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	g ()Ljava/lang/String; getLevelName
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lcmj; getGameType
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lgu;F)V setSpawn
	a (Z)V setThundering
	e (I)V setThunderTime
	b (Z)V setRaining
	f (I)V setRainTime
	a (Lcmj;)V setGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	c (Z)V setInitialized
	q ()Lcmi; getGameRules
	r ()Ldds$c; getWorldBorder
	a (Ldds$c;)V setWorldBorder
	s ()Lbdu; getDifficulty
	t ()Z isDifficultyLocked
	u ()Ledv; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lp;Lcmo;)V fillCrashReportCategory
dyu net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	b cache
	c fixerUpper
	d dataFolder
	<init> (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Ldyj; computeIfAbsent
	a (Ljava/util/function/Function;Ljava/lang/String;)Ldyj; get
	b (Ljava/util/function/Function;Ljava/lang/String;)Ldyj; readSavedData
	a (Ljava/lang/String;Ldyj;)V set
	a (Ljava/lang/String;I)Lqr; readTagFromDisk
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a ()V save
	b (Ljava/lang/String;Ldyj;)V lambda$save$0
	<clinit> ()V <clinit>
dyv net/minecraft/world/level/storage/LevelData
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	i ()Z isThundering
	k ()Z isRaining
	b (Z)V setRaining
	n ()Z isHardcore
	q ()Lcmi; getGameRules
	s ()Lbdu; getDifficulty
	t ()Z isDifficultyLocked
	a (Lp;Lcmo;)V fillCrashReportCategory
	g ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	a (Lcmo;)Ljava/lang/String; lambda$fillCrashReportCategory$0
dyw net/minecraft/world/level/storage/LevelResource
	a PLAYER_ADVANCEMENTS_DIR
	b PLAYER_STATS_DIR
	c PLAYER_DATA_DIR
	d PLAYER_OLD_DATA_DIR
	e LEVEL_DATA_FILE
	f OLD_LEVEL_DATA_FILE
	g ICON_FILE
	h LOCK_FILE
	i GENERATED_DIR
	j DATAPACK_DIR
	k MAP_RESOURCE_FILE
	l ROOT
	m id
	<init> (Ljava/lang/String;)V <init>
	a ()Ljava/lang/String; getId
	toString ()Ljava/lang/String; toString
	<clinit> ()V <clinit>
dyx net/minecraft/world/level/storage/LevelStorageException
	a messageComponent
	<init> (Lsw;)V <init>
	a ()Lsw; getMessageComponent
dyy net/minecraft/world/level/storage/LevelStorageSource
	b LOGGER
	c FORMATTER
	d OLD_SETTINGS_KEYS
	e TAG_DATA
	f NO_SYMLINKS_ALLOWED
	a ALLOWED_SYMLINKS_CONFIG_NAME
	g baseDir
	h backupDir
	i fixerUpper
	j worldDirValidator
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;Ledy;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Ljava/nio/file/Path;)Ledy; parseValidator
	b (Ljava/nio/file/Path;)Ldyy; createDefault
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult; readWorldGenSettings
	a (Lcom/mojang/serialization/Dynamic;)Lcnf; readDataConfig
	a ()Ljava/lang/String; getName
	b ()Ldyy$a; findLevelCandidates
	a (Ldyy$a;)Ljava/util/concurrent/CompletableFuture; loadLevelSummaries
	f ()I getStorageVersion
	a (Ldyy$b;Ljava/util/function/BiFunction;)Ljava/lang/Object; readLevelData
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcnf; getDataConfiguration
	a (Lcom/mojang/serialization/DynamicOps;Lcnf;Lhr;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction; getLevelData
	a (Ldyy$b;Z)Ljava/util/function/BiFunction; levelSummaryReader
	b (Lcom/mojang/serialization/Dynamic;)Lcaw; parseFeatureFlagsFromSummary
	c (Ljava/nio/file/Path;)Lrk; readLightweightData
	a (Ljava/lang/String;)Z isNewLevelIdAcceptable
	b (Ljava/lang/String;)Z levelExists
	e (Ljava/lang/String;)Ljava/nio/file/Path; getLevelPath
	c ()Ljava/nio/file/Path; getBaseDir
	d ()Ljava/nio/file/Path; getBackupPath
	c (Ljava/lang/String;)Ldyy$c; validateAndCreateAccess
	d (Ljava/lang/String;)Ldyy$c; createAccess
	e ()Ledy; getWorldDirValidator
	a (Lacq;)V lambda$parseFeatureFlagsFromSummary$7
	c (Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream; lambda$parseFeatureFlagsFromSummary$6
	a (Ldyy$b;ZLjava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Ldyz; lambda$levelSummaryReader$5
	a (Lcom/mojang/serialization/DynamicOps;Lcnf;Lhr;Lcom/mojang/serialization/Lifecycle;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/datafixers/util/Pair; lambda$getLevelData$4
	a (Ljava/util/List;)Ljava/util/List; lambda$loadLevelSummaries$3
	a (Ldyy$b;)Ldyz; lambda$loadLevelSummaries$2
	b (Ldyy$b;)Z lambda$findLevelCandidates$1
	d (Ljava/nio/file/Path;)Z lambda$findLevelCandidates$0
	<clinit> ()V <clinit>
dyy$a net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	a levels
	<init> (Ljava/util/List;)V <init>
	a ()Z isEmpty
	iterator ()Ljava/util/Iterator; iterator
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	b ()Ljava/util/List; levels
dyy$b net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	a path
	<init> (Ljava/nio/file/Path;)V <init>
	a ()Ljava/lang/String; directoryName
	b ()Ljava/nio/file/Path; dataFile
	c ()Ljava/nio/file/Path; oldDataFile
	a (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; corruptedDataFile
	d ()Ljava/nio/file/Path; iconFile
	e ()Ljava/nio/file/Path; lockFile
	a (Ldyw;)Ljava/nio/file/Path; resourcePath
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	f ()Ljava/nio/file/Path; path
dyy$c net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	b lock
	c levelDirectory
	d levelId
	e resources
	a this$0
	<init> (Ldyy;Ljava/lang/String;Ljava/nio/file/Path;)V <init>
	a ()Ljava/lang/String; getLevelId
	a (Ldyw;)Ljava/nio/file/Path; getLevelPath
	a (Lacp;)Ljava/nio/file/Path; getDimensionPath
	h ()V checkLock
	b ()Ldzb; createPlayerStorage
	c ()Ldyz; getSummary
	a (Lcom/mojang/serialization/DynamicOps;Lcnf;Lhr;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair; getDataTag
	d ()Lcnf; getDataConfiguration
	a (Lhs;Ldze;)V saveDataTag
	a (Lhs;Ldze;Lqr;)V saveDataTag
	e ()Ljava/util/Optional; getIconFile
	f ()V deleteLevel
	a (Ljava/lang/String;)V renameLevel
	g ()J makeWorldBackup
	close ()V close
dyy$c$1 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	a val$lockPath
	b this$1
	<init> (Ldyy$c;Ljava/nio/file/Path;)V <init>
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	a (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult; postVisitDirectory
	postVisitDirectory (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult; postVisitDirectory
	visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
dyy$c$2 net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	a val$rootPath
	b val$stream
	c this$1
	<init> (Ldyy$c;Ljava/nio/file/Path;Ljava/util/zip/ZipOutputStream;)V <init>
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
dyz net/minecraft/world/level/storage/LevelSummary
	a settings
	b levelVersion
	c levelId
	d requiresManualConversion
	e locked
	f experimental
	g icon
	h info
	<init> (Lcmq;Ldza;Ljava/lang/String;ZZZLjava/nio/file/Path;)V <init>
	a ()Ljava/lang/String; getLevelId
	b ()Ljava/lang/String; getLevelName
	c ()Ljava/nio/file/Path; getIcon
	d ()Z requiresManualConversion
	e ()Z isExperimental
	f ()J getLastPlayed
	a (Ldyz;)I compareTo
	g ()Lcmq; getSettings
	h ()Lcmj; getGameMode
	i ()Z isHardcore
	j ()Z hasCheats
	k ()Ltj; getWorldVersionName
	l ()Ldza; levelVersion
	m ()Z markVersionInList
	n ()Z askToOpenWorld
	o ()Ldyz$a; backupStatus
	p ()Z isLocked
	q ()Z isDisabled
	r ()Z isCompatible
	s ()Lsw; getInfo
	t ()Lsw; createInfo
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lts;)Lts; lambda$createInfo$0
dyz$a net/minecraft/world/level/storage/LevelSummary$BackupStatus
	a NONE
	b DOWNGRADE
	c UPGRADE_TO_SNAPSHOT
	d shouldBackup
	e severe
	f translationKey
	g $VALUES
	values ()[Ldyz$a; values
	valueOf (Ljava/lang/String;)Ldyz$a; valueOf
	<init> (Ljava/lang/String;IZZLjava/lang/String;)V <init>
	a ()Z shouldBackup
	b ()Z isSevere
	c ()Ljava/lang/String; getTranslationKey
	d ()[Ldyz$a; $values
	<clinit> ()V <clinit>
dyz$b net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary
	<init> (Ljava/lang/String;Ljava/nio/file/Path;)V <init>
	b ()Ljava/lang/String; getLevelName
	s ()Lsw; getInfo
	f ()J getLastPlayed
	q ()Z isDisabled
	compareTo (Ljava/lang/Object;)I compareTo
	a (Lts;)Lts; lambda$getInfo$0
dza net/minecraft/world/level/storage/LevelVersion
	a levelDataVersion
	b lastPlayed
	c minecraftVersionName
	d minecraftVersion
	e snapshot
	<init> (IJLjava/lang/String;ILjava/lang/String;Z)V <init>
	a (Lcom/mojang/serialization/Dynamic;)Ldza; parse
	a ()I levelDataVersion
	b ()J lastPlayed
	c ()Ljava/lang/String; minecraftVersionName
	d ()Ldys; minecraftVersion
	e ()Z snapshot
dzb net/minecraft/world/level/storage/PlayerDataStorage
	b LOGGER
	c playerDir
	a fixerUpper
	<init> (Ldyy$c;Lcom/mojang/datafixers/DataFixer;)V <init>
	a (Lbyo;)V save
	b (Lbyo;)Lqr; load
	a ()[Ljava/lang/String; getSeenPlayers
	<clinit> ()V <clinit>
dzc net/minecraft/world/level/storage/PrimaryLevelData
	e LOGGER
	a PLAYER
	b WORLD_GEN_SETTINGS
	f settings
	g worldOptions
	h specialWorldProperty
	i worldGenSettingsLifecycle
	j xSpawn
	k ySpawn
	l zSpawn
	m spawnAngle
	n gameTime
	o dayTime
	p fixerUpper
	q playerDataVersion
	r upgradedPlayerTag
	s loadedPlayerTag
	t version
	u clearWeatherTime
	v raining
	w rainTime
	x thundering
	y thunderTime
	z initialized
	A difficultyLocked
	B worldBorder
	C endDragonFightData
	D customBossEvents
	E wanderingTraderSpawnDelay
	F wanderingTraderSpawnChance
	G wanderingTraderId
	H knownServerBrands
	I wasModded
	J removedFeatureFlags
	K scheduledEvents
	<init> (Lcom/mojang/datafixers/DataFixer;ILqr;ZIIIFJJIIIZIZZZLdds$c;IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Ledv;Lqr;Ldfn$a;Lcmq;Ldii;Ldzc$a;Lcom/mojang/serialization/Lifecycle;)V <init>
	<init> (Lcmq;Ldii;Ldzc$a;Lcom/mojang/serialization/Lifecycle;)V <init>
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILqr;Lcmq;Ldza;Ldzc$a;Ldii;Lcom/mojang/serialization/Lifecycle;)Ldzc; parse
	a (Lhs;Lqr;)Lqr; createTag
	a (Lhs;Lqr;Lqr;)V setTagData
	a (Ljava/util/Set;)Lqx; stringCollectionToTag
	a ()I getXSpawn
	b ()I getYSpawn
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	N ()V updatePlayerTag
	y ()Lqr; getLoadedPlayerTag
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	b (J)V setDayTime
	a (Lgu;F)V setSpawn
	g ()Ljava/lang/String; getLevelName
	z ()I getVersion
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	i ()Z isThundering
	a (Z)V setThundering
	j ()I getThunderTime
	e (I)V setThunderTime
	k ()Z isRaining
	b (Z)V setRaining
	l ()I getRainTime
	f (I)V setRainTime
	m ()Lcmj; getGameType
	a (Lcmj;)V setGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	c (Z)V setInitialized
	q ()Lcmi; getGameRules
	r ()Ldds$c; getWorldBorder
	a (Ldds$c;)V setWorldBorder
	s ()Lbdu; getDifficulty
	a (Lbdu;)V setDifficulty
	t ()Z isDifficultyLocked
	d (Z)V setDifficultyLocked
	u ()Ledv; getScheduledEvents
	a (Lp;Lcmo;)V fillCrashReportCategory
	A ()Ldii; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	E ()Ldfn$a; endDragonFightData
	a (Ldfn$a;)V setEndDragonFightData
	F ()Lcnf; getDataConfiguration
	a (Lcnf;)V setDataConfiguration
	G ()Lqr; getCustomBossEvents
	a (Lqr;)V setCustomBossEvents
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Ljava/lang/String;Z)V setModdedInfo
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Ljava/util/Set; getRemovedFeatureFlags
	K ()Ldzd; overworldData
	L ()Lcmq; getLevelSettings
	a (Lcom/mojang/serialization/DataResult$PartialResult;)V lambda$setTagData$4
	a (Lqr;Lrk;)V lambda$setTagData$3
	b (Lqr;Lrk;)V lambda$setTagData$2
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream; lambda$parse$1
	b (Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream; lambda$parse$0
	<clinit> ()V <clinit>
dzc$a net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	a NONE
	b FLAT
	c DEBUG
	d $VALUES
	values ()[Ldzc$a; values
	valueOf (Ljava/lang/String;)Ldzc$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Ldzc$a; $values
	<clinit> ()V <clinit>
dzd net/minecraft/world/level/storage/ServerLevelData
	g ()Ljava/lang/String; getLevelName
	a (Z)V setThundering
	l ()I getRainTime
	f (I)V setRainTime
	e (I)V setThunderTime
	j ()I getThunderTime
	a (Lp;Lcmo;)V fillCrashReportCategory
	h ()I getClearWeatherTime
	a (I)V setClearWeatherTime
	v ()I getWanderingTraderSpawnDelay
	g (I)V setWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	h (I)V setWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	a (Ljava/util/UUID;)V setWanderingTraderId
	m ()Lcmj; getGameType
	a (Ldds$c;)V setWorldBorder
	r ()Ldds$c; getWorldBorder
	p ()Z isInitialized
	c (Z)V setInitialized
	o ()Z getAllowCommands
	a (Lcmj;)V setGameType
	u ()Ledv; getScheduledEvents
	a (J)V setGameTime
	b (J)V setDayTime
	y ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	z ()Ljava/lang/String; lambda$fillCrashReportCategory$0
dze net/minecraft/world/level/storage/WorldData
	c ANVIL_VERSION_ID
	d MCREGION_VERSION_ID
	F ()Lcnf; getDataConfiguration
	a (Lcnf;)V setDataConfiguration
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Ljava/util/Set; getRemovedFeatureFlags
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Lp;)V fillCrashReportCategory
	i (I)Ljava/lang/String; getStorageVersionName
	G ()Lqr; getCustomBossEvents
	a (Lqr;)V setCustomBossEvents
	K ()Ldzd; overworldData
	L ()Lcmq; getLevelSettings
	a (Lhs;Lqr;)Lqr; createTag
	n ()Z isHardcore
	z ()I getVersion
	g ()Ljava/lang/String; getLevelName
	m ()Lcmj; getGameType
	a (Lcmj;)V setGameType
	o ()Z getAllowCommands
	s ()Lbdu; getDifficulty
	a (Lbdu;)V setDifficulty
	t ()Z isDifficultyLocked
	d (Z)V setDifficultyLocked
	q ()Lcmi; getGameRules
	y ()Lqr; getLoadedPlayerTag
	E ()Ldfn$a; endDragonFightData
	a (Ldfn$a;)V setEndDragonFightData
	A ()Ldii; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	M ()Lcaw; enabledFeatures
	a ()Ljava/lang/String; lambda$fillCrashReportCategory$3
	b ()Ljava/lang/String; lambda$fillCrashReportCategory$2
	c ()Ljava/lang/String; lambda$fillCrashReportCategory$1
	d ()Ljava/lang/String; lambda$fillCrashReportCategory$0
dzf net/minecraft/world/level/storage/WritableLevelData
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
	a (F)V setSpawnAngle
	a (Lgu;F)V setSpawn
dzg net/minecraft/world/level/storage/loot/BuiltInLootTables
	aI LOCATIONS
	aJ IMMUTABLE_LOCATIONS
	a EMPTY
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L BASTION_TREASURE
	M BASTION_OTHER
	N BASTION_BRIDGE
	O BASTION_HOGLIN_STABLE
	P ANCIENT_CITY
	Q ANCIENT_CITY_ICE_BOX
	R RUINED_PORTAL
	S SHEEP_WHITE
	T SHEEP_ORANGE
	U SHEEP_MAGENTA
	V SHEEP_LIGHT_BLUE
	W SHEEP_YELLOW
	X SHEEP_LIME
	Y SHEEP_PINK
	Z SHEEP_GRAY
	aa SHEEP_LIGHT_GRAY
	ab SHEEP_CYAN
	ac SHEEP_PURPLE
	ad SHEEP_BLUE
	ae SHEEP_BROWN
	af SHEEP_GREEN
	ag SHEEP_RED
	ah SHEEP_BLACK
	ai FISHING
	aj FISHING_JUNK
	ak FISHING_TREASURE
	al FISHING_FISH
	am CAT_MORNING_GIFT
	an ARMORER_GIFT
	ao BUTCHER_GIFT
	ap CARTOGRAPHER_GIFT
	aq CLERIC_GIFT
	ar FARMER_GIFT
	as FISHERMAN_GIFT
	at FLETCHER_GIFT
	au LEATHERWORKER_GIFT
	av LIBRARIAN_GIFT
	aw MASON_GIFT
	ax SHEPHERD_GIFT
	ay TOOLSMITH_GIFT
	az WEAPONSMITH_GIFT
	aA SNIFFER_DIGGING
	aB PIGLIN_BARTERING
	aC DESERT_WELL_ARCHAEOLOGY
	aD DESERT_PYRAMID_ARCHAEOLOGY
	aE TRAIL_RUINS_ARCHAEOLOGY_COMMON
	aF TRAIL_RUINS_ARCHAEOLOGY_RARE
	aG OCEAN_RUIN_WARM_ARCHAEOLOGY
	aH OCEAN_RUIN_COLD_ARCHAEOLOGY
	<init> ()V <init>
	a (Ljava/lang/String;)Lacq; register
	a (Lacq;)Lacq; register
	a ()Ljava/util/Set; all
	<clinit> ()V <clinit>
dzh net/minecraft/world/level/storage/loot/Deserializers
	<init> ()V <init>
	a ()Lcom/google/gson/GsonBuilder; createConditionSerializer
	b ()Lcom/google/gson/GsonBuilder; createFunctionSerializer
	c ()Lcom/google/gson/GsonBuilder; createLootTableSerializer
dzi net/minecraft/world/level/storage/loot/GsonAdapterFactory
	<init> ()V <init>
	a (Lhr;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldzi$a; builder
dzi$a net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	a registry
	b elementName
	c typeKey
	d typeGetter
	e inlineType
	f defaultType
	<init> (Lhr;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)V <init>
	a (Ldzu;Ldzi$b;)Ldzi$a; withInlineSerializer
	a (Ldzu;)Ldzi$a; withDefaultType
	a ()Ljava/lang/Object; build
dzi$b net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
dzi$c net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
	f inlineType
	<init> (Lhr;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ldzu;Lcom/mojang/datafixers/util/Pair;)V <init>
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dzj net/minecraft/world/level/storage/loot/IntRange
	a min
	b max
	c limiter
	d predicate
	a ()Ljava/util/Set; getReferencedContextParams
	<init> (Ledf;Ledf;)V <init>
	a (I)Ldzj; exact
	a (II)Ldzj; range
	b (I)Ldzj; lowerBound
	c (I)Ldzj; upperBound
	a (Ldzk;I)I clamp
	b (Ldzk;I)Z test
	a (Ledf;Ledf;Ldzk;I)Z lambda$new$7
	b (Ledf;Ledf;Ldzk;I)I lambda$new$6
	a (Ledf;Ldzk;I)Z lambda$new$5
	b (Ledf;Ldzk;I)I lambda$new$4
	c (Ledf;Ldzk;I)Z lambda$new$3
	d (Ledf;Ldzk;I)I lambda$new$2
	c (Ldzk;I)Z lambda$new$1
	d (Ldzk;I)I lambda$new$0
dzj$a net/minecraft/world/level/storage/loot/IntRange$IntChecker
	test (Ldzk;I)Z test
dzj$b net/minecraft/world/level/storage/loot/IntRange$IntLimiter
	apply (Ldzk;I)I apply
dzj$c net/minecraft/world/level/storage/loot/IntRange$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldzj; deserialize
	a (Ldzj;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
dzk net/minecraft/world/level/storage/loot/LootContext
	a params
	b random
	c lootDataResolver
	d visitedElements
	<init> (Ldzq;Lapf;Ldzo;)V <init>
	a (Lebt;)Z hasParam
	b (Lebt;)Ljava/lang/Object; getParam
	a (Lacq;Ljava/util/function/Consumer;)V addDynamicDrops
	c (Lebt;)Ljava/lang/Object; getParamOrNull
	a (Ldzk$c;)Z hasVisitedElement
	b (Ldzk$c;)Z pushVisitedElement
	c (Ldzk$c;)V popVisitedElement
	a ()Ldzo; getResolver
	b ()Lapf; getRandom
	c ()F getLuck
	d ()Laif; getLevel
	a (Ldzs;)Ldzk$c; createVisitedEntry
	a (Leck;)Ldzk$c; createVisitedEntry
	a (Leaz;)Ldzk$c; createVisitedEntry
dzk$a net/minecraft/world/level/storage/loot/LootContext$Builder
	a params
	b random
	<init> (Ldzq;)V <init>
	a (J)Ldzk$a; withOptionalRandomSeed
	a ()Laif; getLevel
	a (Lacq;)Ldzk; create
dzk$b net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	a THIS
	b KILLER
	c DIRECT_KILLER
	d KILLER_PLAYER
	e name
	f param
	g $VALUES
	values ()[Ldzk$b; values
	valueOf (Ljava/lang/String;)Ldzk$b; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lebt;)V <init>
	a ()Lebt; getParam
	a (Ljava/lang/String;)Ldzk$b; getByName
	b ()[Ldzk$b; $values
	<clinit> ()V <clinit>
dzk$b$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/stream/JsonWriter;Ldzk$b;)V write
	a (Lcom/google/gson/stream/JsonReader;)Ldzk$b; read
	read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
	write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
dzk$c net/minecraft/world/level/storage/loot/LootContext$VisitedEntry
	a type
	b value
	<init> (Ldzp;Ljava/lang/Object;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldzp; type
	b ()Ljava/lang/Object; value
dzl net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzv;)V validate
dzm net/minecraft/world/level/storage/loot/LootDataId
	a type
	b location
	<init> (Ldzp;Lacq;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ldzp; type
	b ()Lacq; location
dzn net/minecraft/world/level/storage/loot/LootDataManager
	b LOGGER
	a EMPTY_LOOT_TABLE_KEY
	c elements
	d typeKeys
	<init> ()V <init>
	a (Lakr$a;Lakx;Lban;Lban;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ldzp;Lakx;Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture; scheduleElementParse
	a (Ljava/util/Map;)V apply
	a (Ldzv;Ldzm;Ljava/lang/Object;)V castAndValidate
	getElement (Ldzm;)Ljava/lang/Object; getElement
	a (Ldzp;)Ljava/util/Collection; getKeys
	a ([Leck;)Leck; createComposite
	a ([Leaz;)Leaz; createComposite
	a (Ljava/lang/String;Ljava/lang/String;)V lambda$apply$9
	b (Ldzv;Ldzm;Ljava/lang/Object;)V lambda$apply$8
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lcom/google/common/collect/ImmutableMultimap$Builder;Ldzp;Ljava/util/Map;)V lambda$apply$7
	a (Lcom/google/common/collect/ImmutableMap$Builder;Ldzp;Lcom/google/common/collect/ImmutableMultimap$Builder;Lacq;Ljava/lang/Object;)V lambda$apply$6
	a (Lakx;Ldzp;Ljava/util/Map;)V lambda$scheduleElementParse$5
	a (Ldzp;Ljava/util/Map;Lacq;Lcom/google/gson/JsonElement;)V lambda$scheduleElementParse$4
	a (Ljava/util/Map;Lacq;Ljava/lang/Object;)V lambda$scheduleElementParse$3
	a (Ljava/util/Map;Ljava/lang/Void;)V lambda$reload$2
	a (I)[Ljava/util/concurrent/CompletableFuture; lambda$reload$1
	a (Lakx;Ljava/util/concurrent/Executor;Ljava/util/Map;Ldzp;)Ljava/util/concurrent/CompletableFuture; lambda$reload$0
	<clinit> ()V <clinit>
dzn$1 net/minecraft/world/level/storage/loot/LootDataManager$1
	a val$bakedElements
	b this$0
	<init> (Ldzn;Ljava/util/Map;)V <init>
	getElement (Ldzm;)Ljava/lang/Object; getElement
dzn$a net/minecraft/world/level/storage/loot/LootDataManager$CompositePredicate
	a terms
	b composedPredicate
	<init> ([Leck;)V <init>
	a (Ldzk;)Z test
	a (Ldzv;)V validate
	b ()Lecl; getType
	test (Ljava/lang/Object;)Z test
dzn$b net/minecraft/world/level/storage/loot/LootDataManager$FunctionSequence
	a functions
	b compositeFunction
	<init> ([Leaz;)V <init>
	a (Lcfz;Ldzk;)Lcfz; apply
	a (Ldzv;)V validate
	b ()Leba; getType
	apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
dzo net/minecraft/world/level/storage/loot/LootDataResolver
	getElement (Ldzm;)Ljava/lang/Object; getElement
	getElement (Ldzp;Lacq;)Ljava/lang/Object; getElement
	getElementOptional (Ldzm;)Ljava/util/Optional; getElementOptional
	getElementOptional (Ldzp;Lacq;)Ljava/util/Optional; getElementOptional
	getLootTable (Lacq;)Ldzs; getLootTable
dzp net/minecraft/world/level/storage/loot/LootDataType
	d LOGGER
	a PREDICATE
	b MODIFIER
	c TABLE
	e parser
	f topDeserializer
	g directory
	h validator
	<init> (Lcom/google/gson/Gson;Ljava/util/function/BiFunction;Ljava/lang/String;Ldzp$a;)V <init>
	a ()Lcom/google/gson/Gson; parser
	b ()Ljava/lang/String; directory
	a (Ldzv;Ldzm;Ljava/lang/Object;)V runValidation
	a (Lacq;Lcom/google/gson/JsonElement;)Ljava/util/Optional; deserialize
	c ()Ljava/util/stream/Stream; values
	a (Ljava/lang/Class;)Ljava/util/function/BiFunction; createSingleDeserialiser
	a (Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/function/BiFunction; createSingleOrMultipleDeserialiser
	d ()Ldzp$a; createSimpleValidator
	e ()Ldzp$a; createLootTableValidator
	a (Ldzv;Ldzm;Ldzs;)V lambda$createLootTableValidator$5
	a (Ldzv;Ldzm;Ldzl;)V lambda$createSimpleValidator$4
	a (Ljava/lang/Class;Ljava/util/function/Function;Ljava/lang/Class;Lcom/google/gson/Gson;Ljava/lang/String;)Ljava/util/function/BiFunction; lambda$createSingleOrMultipleDeserialiser$3
	a (Lcom/google/gson/Gson;Ljava/lang/Class;Ljava/util/function/Function;Ljava/lang/Class;Ljava/lang/String;Lacq;Lcom/google/gson/JsonElement;)Ljava/util/Optional; lambda$createSingleOrMultipleDeserialiser$2
	a (Ljava/lang/Class;Lcom/google/gson/Gson;Ljava/lang/String;)Ljava/util/function/BiFunction; lambda$createSingleDeserialiser$1
	a (Lcom/google/gson/Gson;Ljava/lang/Class;Ljava/lang/String;Lacq;Lcom/google/gson/JsonElement;)Ljava/util/Optional; lambda$createSingleDeserialiser$0
	<clinit> ()V <clinit>
dzp$a net/minecraft/world/level/storage/loot/LootDataType$Validator
	run (Ldzv;Ldzm;Ljava/lang/Object;)V run
dzq net/minecraft/world/level/storage/loot/LootParams
	a level
	b params
	c dynamicDrops
	d luck
	<init> (Laif;Ljava/util/Map;Ljava/util/Map;F)V <init>
	a ()Laif; getLevel
	a (Lebt;)Z hasParam
	b (Lebt;)Ljava/lang/Object; getParameter
	c (Lebt;)Ljava/lang/Object; getOptionalParameter
	d (Lebt;)Ljava/lang/Object; getParamOrNull
	a (Lacq;Ljava/util/function/Consumer;)V addDynamicDrops
	b ()F getLuck
dzq$a net/minecraft/world/level/storage/loot/LootParams$Builder
	a level
	b params
	c dynamicDrops
	d luck
	<init> (Laif;)V <init>
	a ()Laif; getLevel
	a (Lebt;Ljava/lang/Object;)Ldzq$a; withParameter
	b (Lebt;Ljava/lang/Object;)Ldzq$a; withOptionalParameter
	a (Lebt;)Ljava/lang/Object; getParameter
	b (Lebt;)Ljava/lang/Object; getOptionalParameter
	a (Lacq;Ldzq$b;)Ldzq$a; withDynamicDrop
	a (F)Ldzq$a; withLuck
	a (Lebu;)Ldzq; create
dzq$b net/minecraft/world/level/storage/loot/LootParams$DynamicDrop
	add (Ljava/util/function/Consumer;)V add
dzr net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	<init> ([Leaf;[Leck;[Leaz;Ledf;Ledf;)V <init>
	b (Ljava/util/function/Consumer;Ldzk;)V addRandomItem
	a (Ljava/util/function/Consumer;Ldzk;)V addRandomItems
	a (Ldzv;)V validate
	a ()Ldzr$a; lootPool
	a (Ldzk;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Leae;)V lambda$addRandomItem$0
dzr$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	<init> ()V <init>
	a (Ledf;)Ldzr$a; setRolls
	a ()Ldzr$a; unwrap
	b (Ledf;)Ldzr$a; setBonusRolls
	a (Leaf$a;)Ldzr$a; add
	a (Leck$a;)Ldzr$a; when
	a (Leaz$a;)Ldzr$a; apply
	b ()Ldzr; build
	c ()Leaw; unwrap
	b (Leaz$a;)Leaw; apply
	d ()Lecd; unwrap
	b (Leck$a;)Lecd; when
dzr$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldzr; deserialize
	a (Ldzr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
dzs net/minecraft/world/level/storage/loot/LootTable
	c LOGGER
	a EMPTY
	b DEFAULT_PARAM_SET
	d paramSet
	e randomSequence
	f pools
	g functions
	h compositeFunction
	<init> (Lebu;Lacq;[Ldzr;[Leaz;)V <init>
	a (Laif;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Ldzq;Ljava/util/function/Consumer;)V getRandomItemsRaw
	a (Ldzk;Ljava/util/function/Consumer;)V getRandomItemsRaw
	a (Ldzq;JLjava/util/function/Consumer;)V getRandomItems
	b (Ldzq;Ljava/util/function/Consumer;)V getRandomItems
	b (Ldzk;Ljava/util/function/Consumer;)V getRandomItems
	a (Ldzq;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Ldzq;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Ldzk;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a ()Lebu; getParamSet
	a (Ldzv;)V validate
	a (Lbdq;Ldzq;J)V fill
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILapf;)V shuffleAndSplitItems
	a (Lbdq;Lapf;)Ljava/util/List; getAvailableSlots
	b ()Ldzs$a; lootTable
	a (Laif;Ljava/util/function/Consumer;Lcfz;)V lambda$createStackSplitter$0
	<clinit> ()V <clinit>
dzs$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	d randomSequence
	<init> ()V <init>
	a (Ldzr$a;)Ldzs$a; withPool
	a (Lebu;)Ldzs$a; setParamSet
	a (Lacq;)Ldzs$a; setRandomSequence
	a (Leaz$a;)Ldzs$a; apply
	a ()Ldzs$a; unwrap
	b ()Ldzs; build
	c ()Leaw; unwrap
	b (Leaz$a;)Leaw; apply
dzs$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldzs; deserialize
	a (Ldzs;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
dzt net/minecraft/world/level/storage/loot/Serializer
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
dzu net/minecraft/world/level/storage/loot/SerializerType
	a serializer
	<init> (Ldzt;)V <init>
	a ()Ldzt; getSerializer
dzv net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d resolver
	e visitedElements
	f contextCache
	<init> (Lebu;Ldzo;)V <init>
	<init> (Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;Lebu;Ldzo;Ljava/util/Set;)V <init>
	c ()Ljava/lang/String; getContext
	a (Ljava/lang/String;)V reportProblem
	b (Ljava/lang/String;)Ldzv; forChild
	a (Ljava/lang/String;Ldzm;)Ldzv; enterElement
	a (Ldzm;)Z hasVisitedElement
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ldzl;)V validateUser
	b ()Ldzo; resolver
	a (Lebu;)Ldzv; setParams
	c (Ljava/lang/String;)Ljava/lang/String; lambda$enterElement$2
	d (Ljava/lang/String;)Ljava/lang/String; lambda$forChild$1
	d ()Ljava/lang/String; lambda$new$0
dzw net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	<init> ([Leaf;[Leck;)V <init>
	a ()Leag; getType
	a ([Ldzx;)Ldzx; compose
	a (Ldzv;)V validate
	a ([Leaf$a;)Ldzw$a; alternatives
	a (Ljava/util/Collection;Ljava/util/function/Function;)Ldzw$a; alternatives
	a (I)[Leaf$a; lambda$alternatives$1
	a ([Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$compose$0
dzw$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	<init> ([Leaf$a;)V <init>
	a ()Ldzw$a; getThis
	a (Leaf$a;)Ldzw$a; otherwise
	b ()Leaf; build
	at_ ()Leaf$a; getThis
dzx net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
	expand (Ldzk;Ljava/util/function/Consumer;)Z expand
	and (Ldzx;)Ldzx; and
	or (Ldzx;)Ldzx; or
	a (Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$or$3
	b (Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$and$2
	a (Ldzk;Ljava/util/function/Consumer;)Z lambda$static$1
	b (Ldzk;Ljava/util/function/Consumer;)Z lambda$static$0
	<clinit> ()V <clinit>
dzy net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	<init> ([Leaf;[Leck;)V <init>
	a (Ldzv;)V validate
	a ([Ldzx;)Ldzx; compose
	expand (Ldzk;Ljava/util/function/Consumer;)Z expand
	a (Ldzy$a;)Leaf$b; createSerializer
dzy$1 net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	a val$constructor
	<init> (Ldzy$a;)V <init>
	a (Lcom/google/gson/JsonObject;Ldzy;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Ldzy; deserializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leaf; deserializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
dzy$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
	create ([Leaf;[Leck;)Ldzy; create
dzz net/minecraft/world/level/storage/loot/entries/DynamicLoot
	i name
	<init> (Lacq;II[Leck;[Leaz;)V <init>
	a ()Leag; getType
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	a (Lacq;)Leah$a; dynamicEntry
	a (Lacq;II[Leck;[Leaz;)Leah; lambda$dynamicEntry$0
dzz$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ldzz;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Ldzz; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
	a (Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
eaa net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	<init> (II[Leck;[Leaz;)V <init>
	a ()Leag; getType
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	b ()Leah$a; emptyItem
eaa$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leaa; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
eab net/minecraft/world/level/storage/loot/entries/EntryGroup
	<init> ([Leaf;[Leck;)V <init>
	a ()Leag; getType
	a ([Ldzx;)Ldzx; compose
	a ([Leaf$a;)Leab$a; list
	a ([Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$compose$1
	a (Ldzx;Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$compose$0
eab$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	<init> ([Leaf$a;)V <init>
	a ()Leab$a; getThis
	b (Leaf$a;)Leab$a; append
	b ()Leaf; build
	at_ ()Leaf$a; getThis
eac net/minecraft/world/level/storage/loot/entries/LootItem
	i item
	<init> (Lcfu;II[Leck;[Leaz;)V <init>
	a ()Leag; getType
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	a (Lcml;)Leah$a; lootTableItem
	a (Lcml;II[Leck;[Leaz;)Leah; lambda$lootTableItem$0
eac$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leac;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leac; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
	a (Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
ead net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a EMPTY
	b ITEM
	c REFERENCE
	d DYNAMIC
	e TAG
	f ALTERNATIVES
	g SEQUENCE
	h GROUP
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Leag; register
	a ()Ljava/lang/Object; createGsonAdapter
	<clinit> ()V <clinit>
eae net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
eaf net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	d conditions
	c compositeCondition
	<init> ([Leck;)V <init>
	a (Ldzv;)V validate
	a (Ldzk;)Z canRun
	a ()Leag; getType
eaf$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	<init> ()V <init>
	at_ ()Leaf$a; getThis
	a (Leck$a;)Leaf$a; when
	e ()Leaf$a; unwrap
	f ()[Leck; getConditions
	a (Leaf$a;)Ldzw$a; otherwise
	b (Leaf$a;)Leab$a; append
	c (Leaf$a;)Leaj$a; then
	b ()Leaf; build
	d ()Lecd; unwrap
	b (Leck$a;)Lecd; when
eaf$b net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leaf; deserialize
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leaf; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eag net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	<init> (Ldzt;)V <init>
eah net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c DEFAULT_WEIGHT
	e DEFAULT_QUALITY
	f weight
	g quality
	h functions
	i compositeFunction
	j entry
	<init> (II[Leck;[Leaz;)V <init>
	a (Ldzv;)V validate
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	expand (Ldzk;Ljava/util/function/Consumer;)Z expand
	a (Leah$d;)Leah$a; simpleBuilder
eah$1 net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	a this$0
	<init> (Leah;)V <init>
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
eah$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	<init> ()V <init>
	a (Leaz$a;)Leah$a; apply
	a ()[Leaz; getFunctions
	a (I)Leah$a; setWeight
	b (I)Leah$a; setQuality
	c ()Leaw; unwrap
	b (Leaz$a;)Leaw; apply
eah$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	<init> (Leah$d;)V <init>
	g ()Leah$b; getThis
	b ()Leaf; build
	at_ ()Leaf$a; getThis
eah$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	b this$0
	<init> (Leah;)V <init>
	a (F)I getWeight
eah$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	build (II[Leck;[Leaz;)Leah; build
eah$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leah; deserializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leaf; deserializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
eai net/minecraft/world/level/storage/loot/entries/LootTableReference
	i name
	<init> (Lacq;II[Leck;[Leaz;)V <init>
	a ()Leag; getType
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	a (Ldzv;)V validate
	a (Lacq;)Leah$a; lootTableReference
	a (Lacq;II[Leck;[Leaz;)Leah; lambda$lootTableReference$2
	b (Ldzv;)V lambda$validate$1
	a (Ldzv;Ldzm;Ldzs;)V lambda$validate$0
eai$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leai;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leai; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
	a (Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
eaj net/minecraft/world/level/storage/loot/entries/SequentialEntry
	<init> ([Leaf;[Leck;)V <init>
	a ()Leag; getType
	a ([Ldzx;)Ldzx; compose
	a ([Leaf$a;)Leaj$a; sequential
	a ([Ldzx;Ldzk;Ljava/util/function/Consumer;)Z lambda$compose$0
eaj$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	<init> ([Leaf$a;)V <init>
	a ()Leaj$a; getThis
	c (Leaf$a;)Leaj$a; then
	b ()Leaf; build
	at_ ()Leaf$a; getThis
eak net/minecraft/world/level/storage/loot/entries/TagEntry
	i tag
	j expand
	<init> (Lanl;ZII[Leck;[Leaz;)V <init>
	a ()Leag; getType
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
	a (Ldzk;Ljava/util/function/Consumer;)Z expandTag
	expand (Ldzk;Ljava/util/function/Consumer;)Z expand
	a (Lanl;)Leah$a; tagContents
	b (Lanl;)Leah$a; expandTag
	a (Lanl;II[Leck;[Leaz;)Leah; lambda$expandTag$2
	b (Lanl;II[Leck;[Leaz;)Leah; lambda$tagContents$1
	a (Ljava/util/function/Consumer;Lhe;)V lambda$createItemStack$0
eak$1 net/minecraft/world/level/storage/loot/entries/TagEntry$1
	a val$item
	c this$0
	<init> (Leak;Lhe;)V <init>
	a (Ljava/util/function/Consumer;Ldzk;)V createItemStack
eak$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leak;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leak; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Leck;[Leaz;)Leah; deserialize
	a (Lcom/google/gson/JsonObject;Leah;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Leaf;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
eal net/minecraft/world/level/storage/loot/entries/package-info
eam net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	b enchantment
	c formula
	<init> ([Leck;Lckg;Leam$b;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lckg;FI)Leay$a; addBonusBinomialDistributionCount
	a (Lckg;)Leay$a; addOreBonusCount
	b (Lckg;)Leay$a; addUniformBonusCount
	a (Lckg;I)Leay$a; addUniformBonusCount
	a (Lckg;I[Leck;)Leaz; lambda$addUniformBonusCount$3
	a (Lckg;[Leck;)Leaz; lambda$addUniformBonusCount$2
	b (Lckg;[Leck;)Leaz; lambda$addOreBonusCount$1
	a (Lckg;IF[Leck;)Leaz; lambda$addBonusBinomialDistributionCount$0
	<clinit> ()V <clinit>
eam$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	<init> (IF)V <init>
	a (Lapf;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leam$b; deserialize
	a ()Lacq; getType
	<clinit> ()V <clinit>
eam$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a (Lapf;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a ()Lacq; getType
eam$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leam$b; deserialize
eam$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	<init> ()V <init>
	a (Lapf;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leam$b; deserialize
	a ()Lacq; getType
	<clinit> ()V <clinit>
eam$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leam;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leam; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lacq;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
eam$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	<init> (I)V <init>
	a (Lapf;II)I calculateNewCount
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leam$b; deserialize
	a ()Lacq; getType
	<clinit> ()V <clinit>
ean net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	<init> ([Leck;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	c ()Leay$a; explosionDecay
ean$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lean; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
eao net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a block
	b properties
	<init> ([Leck;Lcpn;Ljava/util/Set;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lcpn;)Leao$a; copyState
	a (Ldcb;Ldde;)Ljava/lang/String; serialize
	a (Lqr;Ldcb;Ldde;)V lambda$run$0
eao$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	<init> (Lcpn;)V <init>
	a (Ldde;)Leao$a; copy
	a ()Leao$a; getThis
	b ()Leaz; build
	c ()Leay$a; getThis
eao$b net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leao;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leao; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/util/Set;Ldcc;Lcom/google/gson/JsonElement;)V lambda$deserialize$2
	a (Lacq;)Ljava/lang/IllegalArgumentException; lambda$deserialize$1
	a (Lcom/google/gson/JsonArray;Ldde;)V lambda$serialize$0
eap net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	<init> ([Leck;Leap$a;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Leap$a;)Leay$a; copyName
	a (Leap$a;[Leck;)Leaz; lambda$copyName$0
eap$a net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	a THIS
	b KILLER
	c KILLER_PLAYER
	d BLOCK_ENTITY
	e name
	f param
	g $VALUES
	values ()[Leap$a; values
	valueOf (Ljava/lang/String;)Leap$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;Lebt;)V <init>
	a (Ljava/lang/String;)Leap$a; getByName
	a ()[Leap$a; $values
	<clinit> ()V <clinit>
eap$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leap;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leap; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eaq net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	b operations
	<init> ([Leck;Lecy;Ljava/util/List;)V <init>
	b ()Leba; getType
	a (Ljava/lang/String;)Leh$g; compileNbtPath
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lecy;)Leaq$a; copyData
	a (Ldzk$b;)Leaq$a; copyData
	a (Lcfz;Lrk;Leaq$b;)V lambda$run$0
eaq$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	<init> (Lecy;)V <init>
	a (Ljava/lang/String;Ljava/lang/String;Leaq$c;)Leaq$a; copy
	a (Ljava/lang/String;Ljava/lang/String;)Leaq$a; copy
	a ()Leaq$a; getThis
	b ()Leaz; build
	c ()Leay$a; getThis
eaq$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	<init> (Ljava/lang/String;Ljava/lang/String;Leaq$c;)V <init>
	a (Ljava/util/function/Supplier;Lrk;)V apply
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Leaq$b; fromJson
eaq$c net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	a REPLACE
	b APPEND
	c MERGE
	d name
	e $VALUES
	values ()[Leaq$c; values
	valueOf (Ljava/lang/String;)Leaq$c; valueOf
	a (Lrk;Leh$g;Ljava/util/List;)V merge
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Ljava/lang/String;)Leaq$c; getByName
	a ()[Leaq$c; $values
	<clinit> ()V <clinit>
eaq$c$1 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$1
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lrk;Leh$g;Ljava/util/List;)V merge
eaq$c$2 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$2
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lrk;Leh$g;Ljava/util/List;)V merge
	a (Ljava/util/List;Lrk;)V lambda$merge$1
	a (Lrk;Lrk;)V lambda$merge$0
eaq$c$3 net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy$3
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a (Lrk;Leh$g;Ljava/util/List;)V merge
	a (Ljava/util/List;Lrk;)V lambda$merge$1
	a (Lrk;Lrk;)V lambda$merge$0
eaq$d net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leaq;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leaq; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ear net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	b enchantments
	<init> ([Leck;Ljava/util/Collection;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lcfz;Lckg;Lapf;)Lcfz; enchantItem
	c ()Lear$a; randomEnchantment
	d ()Leay$a; randomApplicableEnchantment
	a ([Leck;)Leaz; lambda$randomApplicableEnchantment$1
	a (ZLcfz;Lckg;)Z lambda$run$0
	<clinit> ()V <clinit>
ear$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	<init> ()V <init>
	a ()Lear$a; getThis
	a (Lckg;)Lear$a; withEnchantment
	b ()Leaz; build
	c ()Leay$a; getThis
ear$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lear;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lear; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
eas net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	b treasure
	<init> ([Leck;Ledf;Z)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ledf;)Leas$a; enchantWithLevels
eas$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	<init> (Ledf;)V <init>
	a ()Leas$a; getThis
	e ()Leas$a; allowTreasure
	b ()Leaz; build
	c ()Leay$a; getThis
eas$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leas;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leas; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eat net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	h LOGGER
	a DEFAULT_DESTINATION
	b DEFAULT_DECORATION_NAME
	c DEFAULT_DECORATION
	d DEFAULT_ZOOM
	e DEFAULT_SEARCH_RADIUS
	f DEFAULT_SKIP_EXISTING
	i destination
	j mapDecoration
	k zoom
	l searchRadius
	m skipKnownStructures
	<init> ([Leck;Lanl;Ldyl$a;BIZ)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	c ()Leat$a; makeExplorationMap
	<clinit> ()V <clinit>
eat$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	<init> ()V <init>
	a ()Leat$a; getThis
	a (Lanl;)Leat$a; setDestination
	a (Ldyl$a;)Leat$a; setMapDecoration
	a (B)Leat$a; setZoom
	a (I)Leat$a; setSearchRadius
	a (Z)Leat$a; setSkipKnownStructures
	b ()Leaz; build
	c ()Leay$a; getThis
eat$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leat;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leat; deserialize
	a (Lcom/google/gson/JsonObject;)Lanl; readStructure
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eau net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	<init> ([Leck;Ldzk$b;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ldzk$b;)Leay$a; fillPlayerHead
	a (Ldzk$b;[Leck;)Leaz; lambda$fillPlayerHead$0
eau$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leau;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leau; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eav net/minecraft/world/level/storage/loot/functions/FunctionReference
	a LOGGER
	b name
	<init> ([Leck;Lacq;)V <init>
	b ()Leba; getType
	a (Ldzv;)V validate
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lacq;)Leay$a; functionReference
	a (Lacq;[Leck;)Leaz; lambda$functionReference$2
	b (Ldzv;)V lambda$validate$1
	a (Ldzv;Ldzm;Leaz;)V lambda$validate$0
	<clinit> ()V <clinit>
eav$a net/minecraft/world/level/storage/loot/functions/FunctionReference$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leav;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leav; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eaw net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	b (Leaz$a;)Leaw; apply
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Leaw; apply
	a ([Ljava/lang/Object;Ljava/util/function/Function;)Leaw; apply
	c ()Leaw; unwrap
eax net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	<init> ([Leck;Ldzj;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ldzj;)Leay$a; limitCount
	a (Ldzj;[Leck;)Leaz; lambda$limitCount$0
eax$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leax;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leax; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eay net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	g predicates
	a compositePredicates
	<init> ([Leck;)V <init>
	b (Lcfz;Ldzk;)Lcfz; apply
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ldzv;)V validate
	a (Ljava/util/function/Function;)Leay$a; simpleBuilder
	apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
eay$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	<init> ()V <init>
	a (Leck$a;)Leay$a; when
	f ()Leay$a; unwrap
	c ()Leay$a; getThis
	g ()[Leck; getConditions
	d ()Lecd; unwrap
	b (Leck$a;)Lecd; when
eay$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	<init> (Ljava/util/function/Function;)V <init>
	a ()Leay$b; getThis
	b ()Leaz; build
	c ()Leay$a; getThis
eay$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leay; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eaz net/minecraft/world/level/storage/loot/functions/LootItemFunction
	b ()Leba; getType
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Ldzk;)Ljava/util/function/Consumer; decorate
	a (Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Ldzk;Lcfz;)V lambda$decorate$0
eaz$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Leaz; build
eba net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	<init> (Ldzt;)V <init>
ebb net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b SET_COUNT
	c ENCHANT_WITH_LEVELS
	d ENCHANT_RANDOMLY
	e SET_ENCHANTMENTS
	f SET_NBT
	g FURNACE_SMELT
	h LOOTING_ENCHANT
	i SET_DAMAGE
	j SET_ATTRIBUTES
	k SET_NAME
	l EXPLORATION_MAP
	m SET_STEW_EFFECT
	n COPY_NAME
	o SET_CONTENTS
	p LIMIT_COUNT
	q APPLY_BONUS
	r SET_LOOT_TABLE
	s EXPLOSION_DECAY
	t SET_LORE
	u FILL_PLAYER_HEAD
	v COPY_NBT
	w COPY_STATE
	x SET_BANNER_PATTERN
	y SET_POTION
	z SET_INSTRUMENT
	A REFERENCE
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Leba; register
	a ()Ljava/lang/Object; createGsonAdapter
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
	a ([Ljava/util/function/BiFunction;Lcfz;Ldzk;)Lcfz; lambda$compose$2
	a (Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcfz;Ldzk;)Lcfz; lambda$compose$1
	a (Lcfz;Ldzk;)Lcfz; lambda$static$0
	<clinit> ()V <clinit>
ebc net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a NO_LIMIT
	b value
	c limit
	<init> ([Leck;Ledf;I)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	c ()Z hasLimit
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ledf;)Lebc$a; lootingMultiplier
ebc$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	<init> (Ledf;)V <init>
	a ()Lebc$a; getThis
	a (I)Lebc$a; setLimit
	b ()Leaz; build
	c ()Leay$a; getThis
ebc$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebc;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebc; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebd net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	<init> ([Leck;Ljava/util/List;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ljava/lang/String;Lbhb;Lbhe$a;Ledf;)Lebd$c; modifier
	c ()Lebd$a; setAttributes
	a (Lebd$b;)Ljava/util/stream/Stream; lambda$getReferencedContextParams$0
ebd$1 net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$1
	a $SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
	<clinit> ()V <clinit>
ebd$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	<init> ()V <init>
	a ()Lebd$a; getThis
	a (Lebd$c;)Lebd$a; withModifier
	b ()Leaz; build
	c ()Leay$a; getThis
ebd$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	<init> (Ljava/lang/String;Lbhb;Lbhe$a;Ledf;[Lbfo;Ljava/util/UUID;)V <init>
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lebd$b; deserialize
	a (Lbhe$a;)Ljava/lang/String; operationToString
	a (Ljava/lang/String;)Lbhe$a; operationFromString
ebd$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	<init> (Ljava/lang/String;Lbhb;Lbhe$a;Ledf;)V <init>
	a (Lbfo;)Lebd$c; forSlot
	a (Ljava/util/UUID;)Lebd$c; withUuid
	a ()Lebd$b; build
ebd$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebd;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebd; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebe net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	a patterns
	b append
	<init> ([Leck;Ljava/util/List;Z)V <init>
	a (Lcfz;Ldzk;)Lcfz; run
	b ()Leba; getType
	a (Z)Lebe$a; setBannerPattern
ebe$a net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	a patterns
	b append
	<init> (Z)V <init>
	a ()Lebe$a; getThis
	b ()Leaz; build
	a (Lacp;Lcen;)Lebe$a; addPattern
	a (Lhe;Lcen;)Lebe$a; addPattern
	c ()Leay$a; getThis
ebe$b net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebe;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebe; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V lambda$serialize$1
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/google/gson/JsonSyntaxException; lambda$serialize$0
ebf net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	b type
	<init> ([Leck;Lczp;Ljava/util/List;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ldzv;)V validate
	a (Lczp;)Lebf$a; setContents
	a (Ldzk;Lhn;Leaf;)V lambda$run$1
	a (Ldzk;Lhn;Leae;)V lambda$run$0
ebf$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	b type
	<init> (Lczp;)V <init>
	a ()Lebf$a; getThis
	a (Leaf$a;)Lebf$a; withEntry
	b ()Leaz; build
	c ()Leay$a; getThis
ebf$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebf;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebf; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
ebg net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	b seed
	c type
	<init> ([Leck;Lacq;JLczp;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ldzv;)V validate
	a (Lczp;Lacq;)Leay$a; withLootTable
	a (Lczp;Lacq;J)Leay$a; withLootTable
	a (Lacq;JLczp;[Leck;)Leaz; lambda$withLootTable$1
	a (Lacq;Lczp;[Leck;)Leaz; lambda$withLootTable$0
ebg$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebg;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebg; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lacq;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
ebh net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	a enchantments
	b add
	<init> ([Leck;Ljava/util/Map;Z)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ljava/util/Map;Lckg;I)V updateEnchantment
	a (Ljava/util/Map;Lckg;Ljava/lang/Integer;)V lambda$run$4
	b (Ljava/util/Map;Lckg;Ljava/lang/Integer;)V lambda$run$3
	a (Lcfz;Lckg;Ljava/lang/Integer;)V lambda$run$2
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ldzk;Lckg;Ledf;)V lambda$run$1
	a (Ledf;)Ljava/util/stream/Stream; lambda$getReferencedContextParams$0
ebh$a net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	a enchantments
	b add
	<init> ()V <init>
	<init> (Z)V <init>
	a ()Lebh$a; getThis
	a (Lckg;Ledf;)Lebh$a; withEnchantment
	b ()Leaz; build
	c ()Leay$a; getThis
ebh$b net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebh;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebh; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$1
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;Lckg;Ledf;)V lambda$serialize$0
ebi net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	a options
	<init> ([Leck;Lanl;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lanl;)Leay$a; setInstrumentOptions
	a (Lanl;[Leck;)Leaz; lambda$setInstrumentOptions$0
ebi$a net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebi;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebi; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebj net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	b add
	<init> ([Leck;Ledf;Z)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ledf;)Leay$a; setCount
	a (Ledf;Z)Leay$a; setCount
	a (Ledf;Z[Leck;)Leaz; lambda$setCount$1
	a (Ledf;[Leck;)Leaz; lambda$setCount$0
ebj$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebj;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebj; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebk net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	b damage
	c add
	<init> ([Leck;Ledf;Z)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Ledf;)Leay$a; setDamage
	a (Ledf;Z)Leay$a; setDamage
	a (Ledf;Z[Leck;)Leaz; lambda$setDamage$1
	a (Ledf;[Leck;)Leaz; lambda$setDamage$0
	<clinit> ()V <clinit>
ebk$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebk;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebk; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebl net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	b lore
	c resolutionContext
	<init> ([Leck;ZLjava/util/List;Ldzk$b;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lcfz;Z)Lqx; getLoreTag
	c ()Lebl$a; setLore
ebl$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	<init> ()V <init>
	a (Z)Lebl$a; setReplace
	a (Ldzk$b;)Lebl$a; setResolutionContext
	a (Lsw;)Lebl$a; addLine
	a ()Lebl$a; getThis
	b ()Leaz; build
	c ()Leay$a; getThis
ebl$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebl;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebl; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebm net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	b name
	c resolutionContext
	<init> ([Leck;Lsw;Ldzk$b;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;Ldzk$b;)Ljava/util/function/UnaryOperator; createResolver
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lsw;)Leay$a; setName
	a (Lsw;Ldzk$b;)Leay$a; setName
	a (Lsw;Ldzk$b;[Leck;)Leaz; lambda$setName$3
	a (Lsw;[Leck;)Leaz; lambda$setName$2
	b (Lsw;)Lsw; lambda$createResolver$1
	a (Lds;Lbfj;Lsw;)Lsw; lambda$createResolver$0
	<clinit> ()V <clinit>
ebm$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebm;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebm; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebn net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	<init> ([Leck;Lqr;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lqr;)Leay$a; setTag
	a (Lqr;[Leck;)Leaz; lambda$setTag$0
ebn$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebn;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebn; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ebo net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	a potion
	<init> ([Leck;Lchw;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	a (Lchw;)Leay$a; setPotion
	a (Lchw;[Leck;)Leaz; lambda$setPotion$0
ebo$a net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebo;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebo; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
ebp net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	<init> ([Leck;Ljava/util/Map;)V <init>
	b ()Leba; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcfz;Ldzk;)Lcfz; run
	c ()Lebp$a; stewEffect
	a (Ledf;)Ljava/util/stream/Stream; lambda$getReferencedContextParams$0
ebp$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	<init> ()V <init>
	a ()Lebp$a; getThis
	a (Lbey;Ledf;)Lebp$a; withEffect
	b ()Leaz; build
	c ()Leay$a; getThis
ebp$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lebp;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebp; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
	a (Lcom/google/gson/JsonObject;Leay;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$deserialize$0
ebq net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	<init> ([Leck;)V <init>
	b ()Leba; getType
	a (Lcfz;Ldzk;)Lcfz; run
	c ()Leay$a; smelted
	<clinit> ()V <clinit>
ebq$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Lebq; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Leck;)Leay; deserialize
ebr net/minecraft/world/level/storage/loot/functions/package-info
ebs net/minecraft/world/level/storage/loot/package-info
ebt net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	<init> (Lacq;)V <init>
	a ()Lacq; getName
	toString ()Ljava/lang/String; toString
ebu net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	<init> (Ljava/util/Set;Ljava/util/Set;)V <init>
	a (Lebt;)Z isAllowed
	a ()Ljava/util/Set; getRequired
	b ()Ljava/util/Set; getAllowed
	toString ()Ljava/lang/String; toString
	a (Ldzv;Ldzl;)V validateUser
	c ()Lebu$a; builder
	b (Lebt;)Ljava/lang/String; lambda$toString$0
ebu$a net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	<init> ()V <init>
	a (Lebt;)Lebu$a; required
	b (Lebt;)Lebu$a; optional
	a ()Lebu; build
ebv net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	o REGISTRY
	a EMPTY
	b CHEST
	c COMMAND
	d SELECTOR
	e FISHING
	f ENTITY
	g ARCHAEOLOGY
	h GIFT
	i PIGLIN_BARTER
	j ADVANCEMENT_REWARD
	k ADVANCEMENT_ENTITY
	l ADVANCEMENT_LOCATION
	m ALL_PARAMS
	n BLOCK
	<init> ()V <init>
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lebu; register
	a (Lacq;)Lebu; get
	a (Lebu;)Lacq; getKey
	a (Lebu$a;)V lambda$static$13
	b (Lebu$a;)V lambda$static$12
	c (Lebu$a;)V lambda$static$11
	d (Lebu$a;)V lambda$static$10
	e (Lebu$a;)V lambda$static$9
	f (Lebu$a;)V lambda$static$8
	g (Lebu$a;)V lambda$static$7
	h (Lebu$a;)V lambda$static$6
	i (Lebu$a;)V lambda$static$5
	j (Lebu$a;)V lambda$static$4
	k (Lebu$a;)V lambda$static$3
	l (Lebu$a;)V lambda$static$2
	m (Lebu$a;)V lambda$static$1
	n (Lebu$a;)V lambda$static$0
	<clinit> ()V <clinit>
ebw net/minecraft/world/level/storage/loot/parameters/LootContextParams
	a THIS_ENTITY
	b LAST_DAMAGE_PLAYER
	c DAMAGE_SOURCE
	d KILLER_ENTITY
	e DIRECT_KILLER_ENTITY
	f ORIGIN
	g BLOCK_STATE
	h BLOCK_ENTITY
	i TOOL
	j EXPLOSION_RADIUS
	<init> ()V <init>
	a (Ljava/lang/String;)Lebt; create
	<clinit> ()V <clinit>
ebx net/minecraft/world/level/storage/loot/parameters/package-info
eby net/minecraft/world/level/storage/loot/predicates/AllOfCondition
	<init> ([Leck;)V <init>
	b ()Lecl; getType
	a ([Leck$a;)Leby$a; allOf
eby$a net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder
	<init> ([Leck$a;)V <init>
	and (Leck$a;)Leby$a; and
	a ([Leck;)Leck; create
eby$b net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Serializer
	<init> ()V <init>
	a ([Leck;)Leby; create
	b ([Leck;)Lecb; create
ebz net/minecraft/world/level/storage/loot/predicates/AnyOfCondition
	<init> ([Leck;)V <init>
	b ()Lecl; getType
	a ([Leck$a;)Lebz$a; anyOf
ebz$a net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder
	<init> ([Leck$a;)V <init>
	or (Leck$a;)Lebz$a; or
	a ([Leck;)Leck; create
ebz$b net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Serializer
	<init> ()V <init>
	a ([Leck;)Lebz; create
	b ([Leck;)Lecb; create
eca net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	<init> (Lckg;[F)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Lckg;[F)Leck$a; bonusLevelFlatChance
	test (Ljava/lang/Object;)Z test
	b (Lckg;[F)Leck; lambda$bonusLevelFlatChance$0
eca$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leca;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leca; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lacq;)Lcom/google/gson/JsonParseException; lambda$deserialize$0
ecb net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition
	a terms
	b composedPredicate
	<init> ([Leck;Ljava/util/function/Predicate;)V <init>
	a (Ldzk;)Z test
	a (Ldzv;)V validate
	test (Ljava/lang/Object;)Z test
ecb$a net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder
	a terms
	<init> ([Leck$a;)V <init>
	a (Leck$a;)V addTerm
	build ()Leck; build
	a ([Leck;)Leck; create
	a (I)[Leck; lambda$build$0
ecb$b net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecb;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecb; deserialize
	b ([Leck;)Lecb; create
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecc net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a LOGGER
	b name
	<init> (Lacq;)V <init>
	b ()Lecl; getType
	a (Ldzv;)V validate
	a (Ldzk;)Z test
	a (Lacq;)Leck$a; conditionReference
	test (Ljava/lang/Object;)Z test
	b (Lacq;)Leck; lambda$conditionReference$2
	b (Ldzv;)V lambda$validate$1
	a (Ldzv;Ldzm;Leck;)V lambda$validate$0
	<clinit> ()V <clinit>
ecc$a net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecc;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecc; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecd net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	b (Leck$a;)Lecd; when
	a_ (Ljava/lang/Iterable;Ljava/util/function/Function;)Lecd; when
	d ()Lecd; unwrap
ece net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	<init> (Lbd;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Lbd$a;)Leck$a; hasDamageSource
	test (Ljava/lang/Object;)Z test
	b (Lbd$a;)Leck; lambda$hasDamageSource$0
ece$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lece;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lece; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecf net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	<init> (Ljava/util/Map;Ldzk$b;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Ldzk;Lbfj;Lefg;Ljava/lang/String;Ldzj;)Z hasScore
	a (Ldzk$b;)Lecf$a; hasScores
	test (Ljava/lang/Object;)Z test
	a (Ldzj;)Ljava/util/stream/Stream; lambda$getReferencedContextParams$0
ecf$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	<init> (Ldzk$b;)V <init>
	a (Ljava/lang/String;Ldzj;)Lecf$a; withScore
	build ()Leck; build
ecf$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecf;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecf; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecg net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	<init> ()V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	c ()Leck$a; survivesExplosion
	test (Ljava/lang/Object;)Z test
	d ()Leck; lambda$survivesExplosion$0
	<clinit> ()V <clinit>
ecg$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecg;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecg; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ech net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	<init> (Leck;)V <init>
	b ()Lecl; getType
	a (Ldzk;)Z test
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzv;)V validate
	a (Leck$a;)Leck$a; invert
	test (Ljava/lang/Object;)Z test
	a (Lech;)Leck; lambda$invert$0
ech$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lech;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lech; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eci net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	b offset
	<init> (Lch;Lgu;)V <init>
	b ()Lecl; getType
	a (Ldzk;)Z test
	a (Lch$a;)Leck$a; checkLocation
	a (Lch$a;Lgu;)Leck$a; checkLocation
	test (Ljava/lang/Object;)Z test
	b (Lch$a;Lgu;)Leck; lambda$checkLocation$1
	b (Lch$a;)Leck; lambda$checkLocation$0
eci$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leci;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leci; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecj net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	<init> (Lcpn;Lcz;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Lcpn;)Lecj$a; hasBlockStateProperties
	test (Ljava/lang/Object;)Z test
ecj$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	<init> (Lcpn;)V <init>
	a (Lcz$a;)Lecj$a; setProperties
	build ()Leck; build
ecj$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecj;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecj; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcpn;Ljava/lang/String;)V lambda$deserialize$1
	a (Lacq;)Ljava/lang/IllegalArgumentException; lambda$deserialize$0
eck net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	b ()Lecl; getType
eck$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	build ()Leck; build
	invert ()Leck$a; invert
	or (Leck$a;)Lebz$a; or
	and (Leck$a;)Leby$a; and
ecl net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	<init> (Ldzt;)V <init>
ecm net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a INVERTED
	b ANY_OF
	c ALL_OF
	d RANDOM_CHANCE
	e RANDOM_CHANCE_WITH_LOOTING
	f ENTITY_PROPERTIES
	g KILLED_BY_PLAYER
	h ENTITY_SCORES
	i BLOCK_STATE_PROPERTY
	j MATCH_TOOL
	k TABLE_BONUS
	l SURVIVES_EXPLOSION
	m DAMAGE_SOURCE_PROPERTIES
	n LOCATION_CHECK
	o WEATHER_CHECK
	p REFERENCE
	q TIME_CHECK
	r VALUE_CHECK
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Lecl; register
	a ()Ljava/lang/Object; createGsonAdapter
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
	a ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$orConditions$3
	a (Ljava/lang/Object;)Z lambda$orConditions$2
	b ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$andConditions$1
	b (Ljava/lang/Object;)Z lambda$andConditions$0
	<clinit> ()V <clinit>
ecn net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	<init> (Lbo;Ldzk$b;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Ldzk$b;)Leck$a; entityPresent
	a (Ldzk$b;Lbo$a;)Leck$a; hasProperties
	a (Ldzk$b;Lbo;)Leck$a; hasProperties
	test (Ljava/lang/Object;)Z test
	a (Lbo;Ldzk$b;)Leck; lambda$hasProperties$1
	a (Lbo$a;Ldzk$b;)Leck; lambda$hasProperties$0
ecn$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecn;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecn; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
eco net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	<init> ()V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	c ()Leck$a; killedByPlayer
	test (Ljava/lang/Object;)Z test
	d ()Leck; lambda$killedByPlayer$0
	<clinit> ()V <clinit>
eco$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leco;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leco; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecp net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	<init> (F)V <init>
	b ()Lecl; getType
	a (Ldzk;)Z test
	a (F)Leck$a; randomChance
	test (Ljava/lang/Object;)Z test
	b (F)Leck; lambda$randomChance$0
ecp$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecp;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecp; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecq net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	<init> (FF)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (FF)Leck$a; randomChanceAndLootingBoost
	test (Ljava/lang/Object;)Z test
	b (FF)Leck; lambda$randomChanceAndLootingBoost$0
ecq$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecq;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecq; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecr net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	<init> (Lbz;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Lbz$a;)Leck$a; toolMatches
	test (Ljava/lang/Object;)Z test
	b (Lbz$a;)Leck; lambda$toolMatches$0
ecr$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecr;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecr; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecs net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a period
	b value
	<init> (Ljava/lang/Long;Ldzj;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Ldzj;)Lecs$a; time
	test (Ljava/lang/Object;)Z test
ecs$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	<init> (Ldzj;)V <init>
	a (J)Lecs$a; setPeriod
	a ()Lecs; build
	build ()Leck; build
ecs$b net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecs;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecs; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ect net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	a provider
	b range
	<init> (Ledf;Ldzj;)V <init>
	b ()Lecl; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk;)Z test
	a (Ledf;Ldzj;)Leck$a; hasValue
	test (Ljava/lang/Object;)Z test
	b (Ledf;Ldzj;)Leck; lambda$hasValue$0
ect$a net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lect;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lect; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecu net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	<init> (Ljava/lang/Boolean;Ljava/lang/Boolean;)V <init>
	b ()Lecl; getType
	a (Ldzk;)Z test
	c ()Lecu$a; weather
	test (Ljava/lang/Object;)Z test
ecu$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	<init> ()V <init>
	a (Ljava/lang/Boolean;)Lecu$a; setRaining
	b (Ljava/lang/Boolean;)Lecu$a; setThundering
	a ()Lecu; build
	build ()Leck; build
ecu$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecu;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecu; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecv net/minecraft/world/level/storage/loot/predicates/package-info
ecw net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	b BLOCK_ENTITY_ID
	c BLOCK_ENTITY_PROVIDER
	a BLOCK_ENTITY
	d getter
	b (Ldzk$b;)Lecw$a; forEntity
	<init> (Lecw$a;)V <init>
	a ()Lecx; getType
	a (Ldzk;)Lrk; get
	b ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk$b;)Lecy; forContextEntity
	a (Ljava/lang/String;)Lecw; createFromContext
	<clinit> ()V <clinit>
ecw$1 net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	<init> ()V <init>
	a (Ldzk;)Lrk; get
	a ()Ljava/lang/String; getId
	b ()Ljava/util/Set; getReferencedContextParams
ecw$2 net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	a val$target
	<init> (Ldzk$b;)V <init>
	a (Ldzk;)Lrk; get
	a ()Ljava/lang/String; getId
	b ()Ljava/util/Set; getReferencedContextParams
ecw$a net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	a (Ldzk;)Lrk; get
	a ()Ljava/lang/String; getId
	b ()Ljava/util/Set; getReferencedContextParams
ecw$b net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer
	<init> ()V <init>
	a (Lecw;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lecw; deserialize
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ecw$c net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Lecw;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lecw; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ecx net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	<init> (Ldzt;)V <init>
ecy net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	a (Ldzk;)Lrk; get
	b ()Ljava/util/Set; getReferencedContextParams
	a ()Lecx; getType
ecz net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	a STORAGE
	b CONTEXT
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Lecx; register
	a ()Ljava/lang/Object; createGsonAdapter
	<clinit> ()V <clinit>
eda net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	a id
	<init> (Lacq;)V <init>
	a ()Lecx; getType
	a (Ldzk;)Lrk; get
	b ()Ljava/util/Set; getReferencedContextParams
eda$a net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Leda;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leda; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edb net/minecraft/world/level/storage/loot/providers/nbt/package-info
edc net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	a n
	b p
	<init> (Ledf;Ledf;)V <init>
	b ()Lede; getType
	a (Ldzk;)I getInt
	b (Ldzk;)F getFloat
	a (IF)Ledc; binomial
	a ()Ljava/util/Set; getReferencedContextParams
edc$a net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledc; deserialize
	a (Lcom/google/gson/JsonObject;Ledc;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edd net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	a value
	<init> (F)V <init>
	b ()Lede; getType
	b (Ldzk;)F getFloat
	a (F)Ledd; exactly
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
edd$a net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer
	<init> ()V <init>
	a (Ledd;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ledd; deserialize
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
edd$b net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ledd;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledd; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
ede net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	<init> (Ldzt;)V <init>
edf net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	b (Ldzk;)F getFloat
	a (Ldzk;)I getInt
	b ()Lede; getType
edg net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	d SCORE
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Lede; register
	a ()Ljava/lang/Object; createGsonAdapter
	<clinit> ()V <clinit>
edh net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	a target
	b score
	c scale
	<init> (Ledn;Ljava/lang/String;F)V <init>
	b ()Lede; getType
	a ()Ljava/util/Set; getReferencedContextParams
	a (Ldzk$b;Ljava/lang/String;)Ledh; fromScoreboard
	a (Ldzk$b;Ljava/lang/String;F)Ledh; fromScoreboard
	b (Ldzk;)F getFloat
edh$a net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledh; deserialize
	a (Lcom/google/gson/JsonObject;Ledh;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edi net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	a min
	b max
	<init> (Ledf;Ledf;)V <init>
	b ()Lede; getType
	a (FF)Ledi; between
	a (Ldzk;)I getInt
	b (Ldzk;)F getFloat
	a ()Ljava/util/Set; getReferencedContextParams
edi$a net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer
	<init> ()V <init>
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledi; deserialize
	a (Lcom/google/gson/JsonObject;Ledi;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edj net/minecraft/world/level/storage/loot/providers/number/package-info
edk net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	a target
	<init> (Ldzk$b;)V <init>
	a (Ldzk$b;)Ledn; forTarget
	a ()Ledm; getType
	a (Ldzk;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
edk$a net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer
	<init> ()V <init>
	a (Ledk;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ledk; deserialize
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
edk$b net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ledk;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledk; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edl net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	a name
	<init> (Ljava/lang/String;)V <init>
	a (Ljava/lang/String;)Ledn; forName
	a ()Ledm; getType
	c ()Ljava/lang/String; getName
	a (Ldzk;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
edl$a net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer
	<init> ()V <init>
	a (Lcom/google/gson/JsonObject;Ledl;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ledl; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
edm net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	<init> (Ldzt;)V <init>
edn net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	a (Ldzk;)Ljava/lang/String; getScoreboardName
	a ()Ledm; getType
	b ()Ljava/util/Set; getReferencedContextParams
edo net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	a FIXED
	b CONTEXT
	<init> ()V <init>
	a (Ljava/lang/String;Ldzt;)Ledm; register
	a ()Ljava/lang/Object; createGsonAdapter
	<clinit> ()V <clinit>
edp net/minecraft/world/level/storage/loot/providers/score/package-info
edq net/minecraft/world/level/storage/package-info
edr net/minecraft/world/level/timers/FunctionCallback
	a functionId
	<init> (Lacq;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;Ledv;J)V handle
	handle (Ljava/lang/Object;Ledv;J)V handle
	a (Lade;Ldn;)V lambda$handle$0
edr$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	<init> ()V <init>
	a (Lqr;Ledr;)V serialize
	a (Lqr;)Ledr; deserialize
	b (Lqr;)Ledt; deserialize
	a (Lqr;Ledt;)V serialize
eds net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	<init> (Lacq;)V <init>
	a (Lnet/minecraft/server/MinecraftServer;Ledv;J)V handle
	handle (Ljava/lang/Object;Ledv;J)V handle
eds$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	<init> ()V <init>
	a (Lqr;Leds;)V serialize
	a (Lqr;)Leds; deserialize
	b (Lqr;)Ledt; deserialize
	a (Lqr;Ledt;)V serialize
edt net/minecraft/world/level/timers/TimerCallback
	handle (Ljava/lang/Object;Ledv;J)V handle
edt$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	<init> (Lacq;Ljava/lang/Class;)V <init>
	a ()Lacq; getId
	b ()Ljava/lang/Class; getCls
	a (Lqr;Ledt;)V serialize
	b (Lqr;)Ledt; deserialize
edu net/minecraft/world/level/timers/TimerCallbacks
	b LOGGER
	a SERVER_CALLBACKS
	c idToSerializer
	d classToSerializer
	<init> ()V <init>
	a (Ledt$a;)Ledu; register
	a (Ljava/lang/Class;)Ledt$a; getSerializer
	a (Ledt;)Lqr; serialize
	a (Lqr;)Ledt; deserialize
	<clinit> ()V <clinit>
edv net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b CALLBACK_DATA_TAG
	c TIMER_NAME_TAG
	d TIMER_TRIGGER_TIME_TAG
	e callbacksRegistry
	f queue
	g sequentialId
	h events
	c ()Ljava/util/Comparator; createComparator
	<init> (Ledu;Ljava/util/stream/Stream;)V <init>
	<init> (Ledu;)V <init>
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;JLedt;)V schedule
	a (Ljava/lang/String;)I remove
	a ()Ljava/util/Set; getEventsIds
	a (Lqr;)V loadEvent
	a (Ledv$a;)Lqr; storeEvent
	b ()Lqx; store
	a (Lcom/mojang/serialization/Dynamic;)V lambda$new$2
	b (Ledv$a;)Lcom/google/common/primitives/UnsignedLong; lambda$createComparator$1
	c (Ledv$a;)J lambda$createComparator$0
	<clinit> ()V <clinit>
edv$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
	<init> (JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Ledt;)V <init>
edw net/minecraft/world/level/timers/package-info
edx net/minecraft/world/level/validation/ContentValidationException
	a directory
	b entries
	<init> (Ljava/nio/file/Path;Ljava/util/List;)V <init>
	getMessage ()Ljava/lang/String; getMessage
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String; getMessage
	a (Ledz;)Ljava/lang/String; lambda$getMessage$0
edy net/minecraft/world/level/validation/DirectoryValidator
	a symlinkTargetAllowList
	<init> (Leea;)V <init>
	a (Ljava/nio/file/Path;Ljava/util/List;)V validateSymlink
	a (Ljava/nio/file/Path;Z)Ljava/util/List; validateSave
edy$1 net/minecraft/world/level/validation/DirectoryValidator$1
	a val$issues
	b this$0
	<init> (Ledy;Ljava/util/List;)V <init>
	c (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V validateSymlink
	a (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; preVisitDirectory
	b (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
	preVisitDirectory (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; preVisitDirectory
edz net/minecraft/world/level/validation/ForbiddenSymlinkInfo
	a link
	b target
	<init> (Ljava/nio/file/Path;Ljava/nio/file/Path;)V <init>
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/nio/file/Path; link
	b ()Ljava/nio/file/Path; target
eea net/minecraft/world/level/validation/PathAllowList
	a LOGGER
	b COMMENT_PREFIX
	c entries
	d compiledPaths
	<init> (Ljava/util/List;)V <init>
	a (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; getForFileSystem
	matches (Ljava/nio/file/Path;)Z matches
	a (Ljava/io/BufferedReader;)Leea; readPlain
	a (Ljava/lang/String;)Ljava/util/stream/Stream; lambda$readPlain$5
	a (Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher; lambda$getForFileSystem$4
	a (Ljava/util/List;Ljava/nio/file/Path;)Z lambda$getForFileSystem$3
	a (Ljava/nio/file/Path;)Z lambda$getForFileSystem$2
	b (Ljava/nio/file/Path;)Z lambda$getForFileSystem$1
	a (Ljava/nio/file/FileSystem;Leea$a;)Ljava/nio/file/PathMatcher; lambda$getForFileSystem$0
	<clinit> ()V <clinit>
eea$a net/minecraft/world/level/validation/PathAllowList$ConfigEntry
	a type
	b pattern
	<init> (Leea$b;Ljava/lang/String;)V <init>
	a (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; compile
	a (Ljava/lang/String;)Ljava/util/Optional; parse
	b (Ljava/lang/String;)Leea$a; glob
	c (Ljava/lang/String;)Leea$a; regex
	d (Ljava/lang/String;)Leea$a; prefix
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Leea$b; type
	b ()Ljava/lang/String; pattern
eea$b net/minecraft/world/level/validation/PathAllowList$EntryType
	a FILESYSTEM
	b PREFIX
	compile (Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher; compile
	a (Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher; lambda$static$1
	a (Ljava/lang/String;Ljava/nio/file/Path;)Z lambda$static$0
	<clinit> ()V <clinit>
eeb net/minecraft/world/level/validation/package-info
eec net/minecraft/world/package-info
eed net/minecraft/world/phys/AABB
	g EPSILON
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	<init> (DDDDDD)V <init>
	<init> (Lgu;)V <init>
	<init> (Lgu;Lgu;)V <init>
	<init> (Leei;Leei;)V <init>
	a (Ldrs;)Leed; of
	a (Leei;)Leed; unitCubeFromLowerCorner
	a (D)Leed; setMinX
	b (D)Leed; setMinY
	c (D)Leed; setMinZ
	d (D)Leed; setMaxX
	e (D)Leed; setMaxY
	f (D)Leed; setMaxZ
	a (Lha$a;)D min
	b (Lha$a;)D max
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	a (DDD)Leed; contract
	b (Leei;)Leed; expandTowards
	b (DDD)Leed; expandTowards
	c (DDD)Leed; inflate
	g (D)Leed; inflate
	a (Leed;)Leed; intersect
	b (Leed;)Leed; minmax
	d (DDD)Leed; move
	a (Lgu;)Leed; move
	c (Leei;)Leed; move
	c (Leed;)Z intersects
	a (DDDDDD)Z intersects
	a (Leei;Leei;)Z intersects
	d (Leei;)Z contains
	e (DDD)Z contains
	a ()D getSize
	b ()D getXsize
	c ()D getYsize
	d ()D getZsize
	f (DDD)Leed; deflate
	h (D)Leed; deflate
	b (Leei;Leei;)Ljava/util/Optional; clip
	a (Ljava/lang/Iterable;Leei;Leei;Lgu;)Leee; clip
	a (Leed;Leei;[DLha;DDD)Lha; getDirection
	a ([DLha;DDDDDDDDLha;DDD)Lha; clipPoint
	e (Leei;)D distanceToSqr
	toString ()Ljava/lang/String; toString
	e ()Z hasNaN
	f ()Leei; getCenter
	a (Leei;DDD)Leed; ofSize
eee net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a (Leei;Lha;Lgu;)Leee; miss
	<init> (Leei;Lha;Lgu;Z)V <init>
	<init> (ZLeei;Lha;Lgu;Z)V <init>
	a (Lha;)Leee; withDirection
	a (Lgu;)Leee; withPosition
	a ()Lgu; getBlockPos
	b ()Lha; getDirection
	c ()Leeg$a; getType
	d ()Z isInside
eef net/minecraft/world/phys/EntityHitResult
	b entity
	<init> (Lbfj;)V <init>
	<init> (Lbfj;Leei;)V <init>
	a ()Lbfj; getEntity
	c ()Leeg$a; getType
eeg net/minecraft/world/phys/HitResult
	a location
	<init> (Leei;)V <init>
	a (Lbfj;)D distanceTo
	c ()Leeg$a; getType
	e ()Leei; getLocation
eeg$a net/minecraft/world/phys/HitResult$Type
	a MISS
	b BLOCK
	c ENTITY
	d $VALUES
	values ()[Leeg$a; values
	valueOf (Ljava/lang/String;)Leeg$a; valueOf
	<init> (Ljava/lang/String;I)V <init>
	a ()[Leeg$a; $values
	<clinit> ()V <clinit>
eeh net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	<init> (FF)V <init>
	a (F)Leeh; scale
	a (Leeh;)F dot
	b (Leeh;)Leeh; add
	b (F)Leeh; add
	c (Leeh;)Z equals
	a ()Leeh; normalized
	b ()F length
	c ()F lengthSquared
	d (Leeh;)F distanceToSqr
	d ()Leeh; negated
	<clinit> ()V <clinit>
eei net/minecraft/world/phys/Vec3
	a CODEC
	b ZERO
	c x
	d y
	e z
	a (I)Leei; fromRGB24
	a (Lhz;)Leei; atLowerCornerOf
	a (Lhz;DDD)Leei; atLowerCornerWithOffset
	b (Lhz;)Leei; atCenterOf
	c (Lhz;)Leei; atBottomCenterOf
	a (Lhz;D)Leei; upFromBottomCenterOf
	<init> (DDD)V <init>
	<init> (Lorg/joml/Vector3f;)V <init>
	a (Leei;)Leei; vectorTo
	d ()Leei; normalize
	b (Leei;)D dot
	c (Leei;)Leei; cross
	d (Leei;)Leei; subtract
	a (DDD)Leei; subtract
	e (Leei;)Leei; add
	b (DDD)Leei; add
	a (Lho;D)Z closerThan
	f (Leei;)D distanceTo
	g (Leei;)D distanceToSqr
	c (DDD)D distanceToSqr
	a (D)Leei; scale
	e ()Leei; reverse
	h (Leei;)Leei; multiply
	d (DDD)Leei; multiply
	a (Lapf;F)Leei; offsetRandom
	f ()D length
	g ()D lengthSqr
	h ()D horizontalDistance
	i ()D horizontalDistanceSqr
	equals (Ljava/lang/Object;)Z equals
	hashCode ()I hashCode
	toString ()Ljava/lang/String; toString
	a (Leei;D)Leei; lerp
	a (F)Leei; xRot
	b (F)Leei; yRot
	c (F)Leei; zRot
	a (Leeh;)Leei; directionFromRotation
	a (FF)Leei; directionFromRotation
	a (Ljava/util/EnumSet;)Leei; align
	a (Lha$a;)D get
	a (Lha$a;D)Leei; with
	a (Lha;D)Leei; relative
	a ()D x
	b ()D y
	c ()D z
	j ()Lorg/joml/Vector3f; toVector3f
	i (Leei;)Ljava/util/List; lambda$static$2
	a (Ljava/util/List;)Lcom/mojang/serialization/DataResult; lambda$static$1
	b (Ljava/util/List;)Leei; lambda$static$0
	<clinit> ()V <clinit>
eej net/minecraft/world/phys/package-info
eek net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	<init> (Leer;[D[D[D)V <init>
	<init> (Leer;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	a (Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
eek$1 net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	a $SwitchMap$net$minecraft$core$Direction$Axis
	<clinit> ()V <clinit>
eel net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	<init> (III)V <init>
	a (IIIIIIIII)Leel; withFilledBounds
	<init> (Leer;)V <init>
	a (III)I getIndex
	b (III)Z isFull
	a (IIIZ)V fillUpdateBounds
	c (III)V fill
	a ()Z isEmpty
	a (Lha$a;)I firstFull
	b (Lha$a;)I lastFull
	a (Leer;Leer;Leeu;Leeu;Leeu;Leem;)Leel; join
	a (Leer;Leer$b;Z)V forAllBoxes
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	b (IIII)V clearZStrip
	a (Leeu;Leeu;Leem;Leer;Leer;Leel;[IIII)Z lambda$join$2
	a (Leeu;Leem;Leer;ILeer;ILeel;I[I[ZIII)Z lambda$join$1
	a (Leem;Leer;IILeer;IILeel;II[I[ZIII)Z lambda$join$0
eem net/minecraft/world/phys/shapes/BooleanOp
	a FALSE
	b NOT_OR
	c ONLY_SECOND
	d NOT_FIRST
	e ONLY_FIRST
	f NOT_SECOND
	g NOT_SAME
	h NOT_AND
	i AND
	j SAME
	k SECOND
	l CAUSES
	m FIRST
	n CAUSED_BY
	o OR
	p TRUE
	apply (ZZ)Z apply
	a (ZZ)Z lambda$static$15
	b (ZZ)Z lambda$static$14
	c (ZZ)Z lambda$static$13
	d (ZZ)Z lambda$static$12
	e (ZZ)Z lambda$static$11
	f (ZZ)Z lambda$static$10
	g (ZZ)Z lambda$static$9
	h (ZZ)Z lambda$static$8
	i (ZZ)Z lambda$static$7
	j (ZZ)Z lambda$static$6
	k (ZZ)Z lambda$static$5
	l (ZZ)Z lambda$static$4
	m (ZZ)Z lambda$static$3
	n (ZZ)Z lambda$static$2
	o (ZZ)Z lambda$static$1
	p (ZZ)Z lambda$static$0
	<clinit> ()V <clinit>
een net/minecraft/world/phys/shapes/CollisionContext
	a ()Leen; empty
	a (Lbfj;)Leen; of
	b ()Z isDescending
	a (Lefb;Lgu;Z)Z isAbove
	a (Lcfu;)Z isHoldingItem
	a (Ldxe;Ldxe;)Z canStandOnFluid
eeo net/minecraft/world/phys/shapes/CubePointRange
	a parts
	<init> (I)V <init>
	getDouble (I)D getDouble
	size ()I size
eep net/minecraft/world/phys/shapes/CubeVoxelShape
	<init> (Leer;)V <init>
	a (Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lha$a;D)I findIndex
eeq net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstDiv
	c secondDiv
	<init> (II)V <init>
	a (Leeu$a;)Z forMergedIndexes
	size ()I size
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
eer net/minecraft/world/phys/shapes/DiscreteVoxelShape
	d AXIS_VALUES
	a xSize
	b ySize
	c zSize
	<init> (III)V <init>
	a (Lgs;III)Z isFullWide
	d (III)Z isFullWide
	b (Lgs;III)Z isFull
	b (III)Z isFull
	c (III)V fill
	a ()Z isEmpty
	a (Lha$a;)I firstFull
	b (Lha$a;)I lastFull
	a (Lha$a;II)I firstFull
	b (Lha$a;II)I lastFull
	c (Lha$a;)I getSize
	b ()I getXSize
	c ()I getYSize
	d ()I getZSize
	a (Leer$b;Z)V forAllEdges
	a (Leer$b;Lgs;Z)V forAllAxisEdges
	b (Leer$b;Z)V forAllBoxes
	a (Leer$a;)V forAllFaces
	a (Leer$a;Lgs;)V forAllAxisFaces
	<clinit> ()V <clinit>
eer$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	consume (Lha;III)V consume
eer$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	consume (IIIIII)V consume
ees net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	e canStandOnFluid
	f entity
	<init> (ZDLcfz;Ljava/util/function/Predicate;Lbfj;)V <init>
	<init> (Lbfj;)V <init>
	a (Lcfu;)Z isHoldingItem
	a (Ldxe;Ldxe;)Z canStandOnFluid
	b ()Z isDescending
	a (Lefb;Lgu;Z)Z isAbove
	c ()Lbfj; getEntity
	a (Ldxe;)Z lambda$new$1
	b (Ldxe;)Z lambda$static$0
	<clinit> ()V <clinit>
ees$1 net/minecraft/world/phys/shapes/EntityCollisionContext$1
	<init> (ZDLcfz;Ljava/util/function/Predicate;Lbfj;)V <init>
	a (Lefb;Lgu;Z)Z isAbove
eet net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;)V <init>
	a (Leeu$a;)Z forMergedIndexes
	size ()I size
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
eeu net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Leeu$a;)Z forMergedIndexes
	size ()I size
eeu$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	merge (III)Z merge
eev net/minecraft/world/phys/shapes/IndirectMerger
	a EMPTY
	b result
	c firstIndices
	d secondIndices
	e resultLength
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V <init>
	a (Leeu$a;)Z forMergedIndexes
	size ()I size
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	<clinit> ()V <clinit>
eew net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V <init>
	size ()I size
	a (Leeu$a;)Z forMergedIndexes
	b (Leeu$a;)Z forNonSwappedIndexes
	getDouble (I)D getDouble
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Leeu$a;III)Z lambda$forMergedIndexes$0
eex net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
	<init> (Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V <init>
	getDouble (I)D getDouble
	size ()I size
eey net/minecraft/world/phys/shapes/Shapes
	a EPSILON
	b BIG_EPSILON
	d BLOCK
	c INFINITY
	e EMPTY
	<init> ()V <init>
	a ()Lefb; empty
	b ()Lefb; block
	a (DDDDDD)Lefb; box
	b (DDDDDD)Lefb; create
	a (Leed;)Lefb; create
	a (DD)I findBits
	a (II)J lcm
	a (Lefb;Lefb;)Lefb; or
	a (Lefb;[Lefb;)Lefb; or
	a (Lefb;Lefb;Leem;)Lefb; join
	b (Lefb;Lefb;Leem;)Lefb; joinUnoptimized
	c (Lefb;Lefb;Leem;)Z joinIsNotEmpty
	a (Leeu;Leeu;Leeu;Leer;Leer;Leem;)Z joinIsNotEmpty
	a (Lha$a;Leed;Ljava/lang/Iterable;D)D collide
	a (Lefb;Lefb;Lha;)Z blockOccudes
	a (Lefb;Lha;)Lefb; getFaceShape
	b (Lefb;Lefb;Lha;)Z mergedFaceOccludes
	b (Lefb;Lefb;)Z faceShapeOccludes
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Leeu; createIndexMerger
	a (Leeu;Leeu;Leem;Leer;Leer;III)Z lambda$joinIsNotEmpty$3
	a (Leeu;Leem;Leer;ILeer;IIII)Z lambda$joinIsNotEmpty$2
	a (Leem;Leer;IILeer;IIIII)Z lambda$joinIsNotEmpty$1
	c ()Leep; lambda$static$0
	<clinit> ()V <clinit>
eey$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	consume (DDDDDD)V consume
eez net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	<init> (Lefb;Lha$a;I)V <init>
	a (Leer;Lha$a;I)Leer; makeSlice
	a (Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	<clinit> ()V <clinit>
efa net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	<init> (Leer;IIIIII)V <init>
	b (III)Z isFull
	c (III)V fill
	a (Lha$a;)I firstFull
	b (Lha$a;)I lastFull
	a (Lha$a;I)I clampToShape
efb net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	<init> (Leer;)V <init>
	b (Lha$a;)D min
	c (Lha$a;)D max
	a ()Leed; bounds
	a (Lha$a;I)D get
	a (Lha$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	b ()Z isEmpty
	a (DDD)Lefb; move
	c ()Lefb; optimize
	a (Leey$a;)V forAllEdges
	b (Leey$a;)V forAllBoxes
	d ()Ljava/util/List; toAabbs
	a (Lha$a;DD)D min
	b (Lha$a;DD)D max
	a (Lha$a;D)I findIndex
	a (Leei;Leei;Lgu;)Leee; clip
	a (Leei;)Ljava/util/Optional; closestPointTo
	a (Lha;)Lefb; getFaceShape
	b (Lha;)Lefb; calculateFace
	a (Lha$a;Leed;D)D collide
	a (Lgs;Leed;D)D collideX
	toString ()Ljava/lang/String; toString
	a (Leei;[Leei;DDDDDD)V lambda$closestPointTo$5
	a (DLha$a;I)Z lambda$findIndex$4
	a (Ljava/util/List;DDDDDD)V lambda$toAabbs$3
	a (Leey$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V lambda$forAllBoxes$2
	a (Leey$a;IIIIII)V lambda$forAllEdges$1
	a ([Lefb;DDDDDD)V lambda$optimize$0
efc net/minecraft/world/phys/shapes/package-info
efd net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	d displayName
	e formattedDisplayName
	f renderType
	<init> (Lefg;Ljava/lang/String;Lefj;Lsw;Lefj$a;)V <init>
	a ()Lefg; getScoreboard
	b ()Ljava/lang/String; getName
	c ()Lefj; getCriteria
	d ()Lsw; getDisplayName
	g ()Lsw; createFormattedDisplayName
	e ()Lsw; getFormattedDisplayName
	a (Lsw;)V setDisplayName
	f ()Lefj$a; getRenderType
	a (Lefj$a;)V setRenderType
	a (Lts;)Lts; lambda$createFormattedDisplayName$0
efe net/minecraft/world/scores/PlayerTeam
	a BIT_FRIENDLY_FIRE
	b BIT_SEE_INVISIBLES
	c scoreboard
	d name
	e players
	f displayName
	g playerPrefix
	h playerSuffix
	i allowFriendlyFire
	j seeFriendlyInvisibles
	k nameTagVisibility
	l deathMessageVisibility
	m color
	n collisionRule
	o displayNameStyle
	<init> (Lefg;Ljava/lang/String;)V <init>
	a ()Lefg; getScoreboard
	b ()Ljava/lang/String; getName
	c ()Lsw; getDisplayName
	d ()Ltj; getFormattedDisplayName
	a (Lsw;)V setDisplayName
	b (Lsw;)V setPlayerPrefix
	e ()Lsw; getPlayerPrefix
	c (Lsw;)V setPlayerSuffix
	f ()Lsw; getPlayerSuffix
	g ()Ljava/util/Collection; getPlayers
	d (Lsw;)Ltj; getFormattedName
	a (Lefi;Lsw;)Ltj; formatNameForTeam
	h ()Z isAllowFriendlyFire
	a (Z)V setAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	b (Z)V setSeeFriendlyInvisibles
	j ()Lefi$b; getNameTagVisibility
	k ()Lefi$b; getDeathMessageVisibility
	a (Lefi$b;)V setNameTagVisibility
	b (Lefi$b;)V setDeathMessageVisibility
	l ()Lefi$a; getCollisionRule
	a (Lefi$a;)V setCollisionRule
	m ()I packOptions
	a (I)V unpackOptions
	a (Ln;)V setColor
	n ()Ln; getColor
eff net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	d owner
	e count
	f locked
	g forceUpdate
	<init> (Lefg;Lefd;Ljava/lang/String;)V <init>
	a (I)V add
	a ()V increment
	b ()I getScore
	c ()V reset
	b (I)V setScore
	d ()Lefd; getObjective
	e ()Ljava/lang/String; getOwner
	f ()Lefg; getScoreboard
	g ()Z isLocked
	a (Z)V setLocked
	a (Leff;Leff;)I lambda$static$0
	<clinit> ()V <clinit>
efg net/minecraft/world/scores/Scoreboard
	g LOGGER
	a DISPLAY_SLOT_LIST
	b DISPLAY_SLOT_SIDEBAR
	c DISPLAY_SLOT_BELOW_NAME
	d DISPLAY_SLOT_TEAMS_SIDEBAR_START
	e DISPLAY_SLOT_TEAMS_SIDEBAR_END
	f DISPLAY_SLOTS
	h objectivesByName
	i objectivesByCriteria
	j playerScores
	k displayObjectives
	l teamsByName
	m teamsByPlayer
	n displaySlotNames
	<init> ()V <init>
	b (Ljava/lang/String;)Z hasObjective
	c (Ljava/lang/String;)Lefd; getOrCreateObjective
	d (Ljava/lang/String;)Lefd; getObjective
	a (Ljava/lang/String;Lefj;Lsw;Lefj$a;)Lefd; addObjective
	a (Lefj;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	b (Ljava/lang/String;Lefd;)Z hasPlayerScore
	c (Ljava/lang/String;Lefd;)Leff; getOrCreatePlayerScore
	i (Lefd;)Ljava/util/Collection; getPlayerScores
	c ()Ljava/util/Collection; getObjectives
	d ()Ljava/util/Collection; getObjectiveNames
	e ()Ljava/util/Collection; getTrackedPlayers
	d (Ljava/lang/String;Lefd;)V resetPlayerScore
	e (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	j (Lefd;)V removeObjective
	a (ILefd;)V setDisplayObjective
	a (I)Lefd; getDisplayObjective
	f (Ljava/lang/String;)Lefe; getPlayerTeam
	g (Ljava/lang/String;)Lefe; addPlayerTeam
	d (Lefe;)V removePlayerTeam
	a (Ljava/lang/String;Lefe;)Z addPlayerToTeam
	h (Ljava/lang/String;)Z removePlayerFromTeam
	b (Ljava/lang/String;Lefe;)V removePlayerFromTeam
	f ()Ljava/util/Collection; getTeamNames
	g ()Ljava/util/Collection; getPlayerTeams
	i (Ljava/lang/String;)Lefe; getPlayersTeam
	a (Lefd;)V onObjectiveAdded
	b (Lefd;)V onObjectiveChanged
	c (Lefd;)V onObjectiveRemoved
	a (Leff;)V onScoreChanged
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lefd;)V onPlayerScoreRemoved
	a (Lefe;)V onTeamAdded
	b (Lefe;)V onTeamChanged
	c (Lefe;)V onTeamRemoved
	b (I)Ljava/lang/String; getDisplaySlotName
	j (Ljava/lang/String;)I getDisplaySlotByName
	h ()[Ljava/lang/String; getDisplaySlotNames
	a (Lbfj;)V entityRemoved
	i ()Lqx; savePlayerScores
	a (Lqx;)V loadPlayerScores
	a (Lqx;Ljava/util/Collection;)V lambda$savePlayerScores$6
	a (Lqx;Leff;)V lambda$savePlayerScores$5
	b (Leff;)Z lambda$savePlayerScores$4
	e (Ljava/lang/String;Lefd;)Leff; lambda$getOrCreatePlayerScore$3
	k (Ljava/lang/String;)Ljava/util/Map; lambda$getOrCreatePlayerScore$2
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lefd;)V lambda$forAllObjectives$1
	a (Lefj;)Ljava/util/List; lambda$addObjective$0
	<clinit> ()V <clinit>
efh net/minecraft/world/scores/ScoreboardSaveData
	a FILE_ID
	b scoreboard
	<init> (Lefg;)V <init>
	b (Lqr;)Lefh; load
	a (Lqx;)V loadTeams
	a (Lefe;Lqx;)V loadTeamPlayers
	c (Lqr;)V loadDisplaySlots
	b (Lqx;)V loadObjectives
	a (Lqr;)Lqr; save
	a ()Lqx; saveTeams
	d (Lqr;)V saveDisplaySlots
	d ()Lqx; saveObjectives
	a (Lqr;Lefj;)V lambda$loadObjectives$0
efi net/minecraft/world/scores/Team
	<init> ()V <init>
	a (Lefi;)Z isAlliedTo
	b ()Ljava/lang/String; getName
	d (Lsw;)Ltj; getFormattedName
	i ()Z canSeeFriendlyInvisibles
	h ()Z isAllowFriendlyFire
	j ()Lefi$b; getNameTagVisibility
	n ()Ln; getColor
	g ()Ljava/util/Collection; getPlayers
	k ()Lefi$b; getDeathMessageVisibility
	l ()Lefi$a; getCollisionRule
efi$a net/minecraft/world/scores/Team$CollisionRule
	a ALWAYS
	b NEVER
	c PUSH_OTHER_TEAMS
	d PUSH_OWN_TEAM
	g BY_NAME
	e name
	f id
	h $VALUES
	values ()[Lefi$a; values
	valueOf (Ljava/lang/String;)Lefi$a; valueOf
	a (Ljava/lang/String;)Lefi$a; byName
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	a ()Lsw; getDisplayName
	a (Lefi$a;)Lefi$a; lambda$static$1
	b (Lefi$a;)Ljava/lang/String; lambda$static$0
	b ()[Lefi$a; $values
	<clinit> ()V <clinit>
efi$b net/minecraft/world/scores/Team$Visibility
	a ALWAYS
	b NEVER
	c HIDE_FOR_OTHER_TEAMS
	d HIDE_FOR_OWN_TEAM
	g BY_NAME
	e name
	f id
	h $VALUES
	values ()[Lefi$b; values
	valueOf (Ljava/lang/String;)Lefi$b; valueOf
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lefi$b; byName
	<init> (Ljava/lang/String;ILjava/lang/String;I)V <init>
	b ()Lsw; getDisplayName
	a (Lefi$b;)Lefi$b; lambda$static$1
	b (Lefi$b;)Ljava/lang/String; lambda$static$0
	c ()[Lefi$b; $values
	<clinit> ()V <clinit>
efj net/minecraft/world/scores/criteria/ObjectiveCriteria
	n CUSTOM_CRITERIA
	o CRITERIA_CACHE
	a DUMMY
	b TRIGGER
	c DEATH_COUNT
	d KILL_COUNT_PLAYERS
	e KILL_COUNT_ALL
	f HEALTH
	g FOOD
	h AIR
	i ARMOR
	j EXPERIENCE
	k LEVEL
	l TEAM_KILL
	m KILLED_BY_TEAM
	p name
	q readOnly
	r renderType
	a (Ljava/lang/String;ZLefj$a;)Lefj; registerCustom
	b (Ljava/lang/String;)Lefj; registerCustom
	<init> (Ljava/lang/String;)V <init>
	<init> (Ljava/lang/String;ZLefj$a;)V <init>
	c ()Ljava/util/Set; getCustomCriteriaNames
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Lamq;Lacq;)Ljava/util/Optional; getStat
	d ()Ljava/lang/String; getName
	e ()Z isReadOnly
	f ()Lefj$a; getDefaultRenderType
	a (Ljava/lang/String;ILamq;)Ljava/util/Optional; lambda$byName$0
	<clinit> ()V <clinit>
efj$a net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	a INTEGER
	b HEARTS
	d id
	c CODEC
	e $VALUES
	values ()[Lefj$a; values
	valueOf (Ljava/lang/String;)Lefj$a; valueOf
	<init> (Ljava/lang/String;ILjava/lang/String;)V <init>
	a ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getSerializedName
	a (Ljava/lang/String;)Lefj$a; byId
	b ()[Lefj$a; $values
	<clinit> ()V <clinit>
efk net/minecraft/world/scores/criteria/package-info
efl net/minecraft/world/scores/package-info
efm net/minecraft/world/ticks/BlackholeTickAccess
	a CONTAINER_BLACKHOLE
	b LEVEL_BLACKHOLE
	<init> ()V <init>
	a ()Lefw; emptyContainer
	b ()Lefp; emptyLevelList
	<clinit> ()V <clinit>
efm$1 net/minecraft/world/ticks/BlackholeTickAccess$1
	<init> ()V <init>
	a (Left;)V schedule
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	a ()I count
efm$2 net/minecraft/world/ticks/BlackholeTickAccess$2
	<init> ()V <init>
	a (Left;)V schedule
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	b (Lgu;Ljava/lang/Object;)Z willTickThisTick
	a ()I count
efn net/minecraft/world/ticks/ContainerSingleItem
	b ()I getContainerSize
	ab_ ()Z isEmpty
	a ()V clearContent
	ar_ ()Lcfz; getFirstItem
	j ()Lcfz; removeFirstItem
	b (Lcfz;)V setFirstItem
	b (I)Lcfz; removeItemNoUpdate
efo net/minecraft/world/ticks/LevelChunkTicks
	a tickQueue
	b pendingTicks
	c ticksPerPosition
	d onTickAdded
	<init> ()V <init>
	<init> (Ljava/util/List;)V <init>
	a (Ljava/util/function/BiConsumer;)V setOnTickAdded
	b ()Left; peek
	c ()Left; poll
	a (Left;)V schedule
	b (Left;)V scheduleUnchecked
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	a (Ljava/util/function/Predicate;)V removeIf
	d ()Ljava/util/stream/Stream; getAll
	a ()I count
	a (JLjava/util/function/Function;)Lqx; save
	a (J)V unpack
	a (Lqx;Ljava/util/function/Function;Lclt;)Lefo; load
	b (JLjava/util/function/Function;)Lrk; save
efp net/minecraft/world/ticks/LevelTickAccess
	b (Lgu;Ljava/lang/Object;)Z willTickThisTick
efq net/minecraft/world/ticks/LevelTicks
	a CONTAINER_DRAIN_ORDER
	b tickCheck
	c profiler
	d allContainers
	e nextTickForContainer
	f containersToTick
	g toRunThisTick
	h alreadyRunThisTick
	i toRunThisTickSet
	j chunkScheduleUpdater
	<init> (Ljava/util/function/LongPredicate;Ljava/util/function/Supplier;)V <init>
	a (Lclt;Lefo;)V addContainer
	a (Lclt;)V removeContainer
	a (Left;)V schedule
	a (JILjava/util/function/BiConsumer;)V tick
	a (JILban;)V collectTicks
	a (J)V sortContainersToTick
	a (JI)V drainContainers
	b ()V rescheduleLeftoverContainers
	b (Left;)V updateContainerScheduling
	a (Ljava/util/Queue;Lefo;JI)V drainFromCurrentContainer
	c (Left;)V scheduleForThisTick
	a (I)Z canScheduleMoreTicks
	a (Ljava/util/function/BiConsumer;)V runCollectedTicks
	c ()V cleanupAfterTick
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	b (Lgu;Ljava/lang/Object;)Z willTickThisTick
	d ()V calculateTickSetIfNeeded
	a (Ldrs;Lefq$a;)V forContainersInArea
	a (Ldrs;)V clearArea
	a (Ldrs;Lhz;)V copyArea
	a (Lefq;Ldrs;Lhz;)V copyAreaFrom
	a ()I count
	a (Lhz;JJLeft;)V lambda$copyAreaFrom$7
	a (Ljava/util/function/Predicate;Ljava/util/List;JLefo;)V lambda$copyAreaFrom$6
	a (Ldrs;Left;)Z lambda$copyAreaFrom$5
	a (Ljava/util/function/Predicate;JLefo;)V lambda$clearArea$4
	b (Ldrs;Left;)Z lambda$clearArea$3
	a (Lefo;Left;)V lambda$new$2
	a (Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V lambda$new$1
	a (Lefo;Lefo;)I lambda$static$0
	<clinit> ()V <clinit>
efq$a net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
	accept (JLefo;)V accept
efr net/minecraft/world/ticks/ProtoChunkTicks
	a ticks
	b ticksPerPosition
	<init> ()V <init>
	a (Left;)V schedule
	a (Lefs;)V schedule
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	a ()I count
	b (JLjava/util/function/Function;)Lrk; save
	b ()Ljava/util/List; scheduledTicks
	a (Lqx;Ljava/util/function/Function;Lclt;)Lefr; load
efs net/minecraft/world/ticks/SavedTick
	b type
	c pos
	d delay
	e priority
	f TAG_ID
	g TAG_X
	h TAG_Y
	i TAG_Z
	j TAG_DELAY
	k TAG_PRIORITY
	a UNIQUE_TICK_HASH
	<init> (Ljava/lang/Object;Lgu;ILefx;)V <init>
	a (Lqx;Ljava/util/function/Function;Lclt;Ljava/util/function/Consumer;)V loadTickList
	a (Lqr;Ljava/util/function/Function;)Ljava/util/Optional; loadTick
	a (Ljava/lang/String;Lgu;ILefx;)Lqr; saveTick
	a (Left;Ljava/util/function/Function;J)Lqr; saveTick
	a (Ljava/util/function/Function;)Lqr; save
	a (JJ)Left; unpack
	a (Ljava/lang/Object;Lgu;)Lefs; probe
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; type
	b ()Lgu; pos
	c ()I delay
	d ()Lefx; priority
	a (Lqr;Ljava/lang/Object;)Lefs; lambda$loadTick$1
	a (JLjava/util/function/Consumer;Lefs;)V lambda$loadTickList$0
	<clinit> ()V <clinit>
efs$1 net/minecraft/world/ticks/SavedTick$1
	<init> ()V <init>
	a (Lefs;)I hashCode
	a (Lefs;Lefs;)Z equals
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	hashCode (Ljava/lang/Object;)I hashCode
eft net/minecraft/world/ticks/ScheduledTick
	d type
	e pos
	f triggerTick
	g priority
	h subTickOrder
	a DRAIN_ORDER
	b INTRA_TICK_DRAIN_ORDER
	c UNIQUE_TICK_HASH
	<init> (Ljava/lang/Object;Lgu;JJ)V <init>
	<init> (Ljava/lang/Object;Lgu;JLefx;J)V <init>
	a (Ljava/lang/Object;Lgu;)Left; probe
	toString ()Ljava/lang/String; toString
	hashCode ()I hashCode
	equals (Ljava/lang/Object;)Z equals
	a ()Ljava/lang/Object; type
	b ()Lgu; pos
	c ()J triggerTick
	d ()Lefx; priority
	e ()J subTickOrder
	a (Left;Left;)I lambda$static$1
	b (Left;Left;)I lambda$static$0
	<clinit> ()V <clinit>
eft$1 net/minecraft/world/ticks/ScheduledTick$1
	<init> ()V <init>
	a (Left;)I hashCode
	a (Left;Left;)Z equals
	equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
	hashCode (Ljava/lang/Object;)I hashCode
efu net/minecraft/world/ticks/SerializableTickContainer
	b (JLjava/util/function/Function;)Lrk; save
efv net/minecraft/world/ticks/TickAccess
	a (Left;)V schedule
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	a ()I count
efw net/minecraft/world/ticks/TickContainerAccess
efx net/minecraft/world/ticks/TickPriority
	a EXTREMELY_HIGH
	b VERY_HIGH
	c HIGH
	d NORMAL
	e LOW
	f VERY_LOW
	g EXTREMELY_LOW
	h value
	i $VALUES
	values ()[Lefx; values
	valueOf (Ljava/lang/String;)Lefx; valueOf
	<init> (Ljava/lang/String;II)V <init>
	a (I)Lefx; byValue
	a ()I getValue
	b ()[Lefx; $values
	<clinit> ()V <clinit>
efy net/minecraft/world/ticks/WorldGenTickAccess
	a containerGetter
	<init> (Ljava/util/function/Function;)V <init>
	a (Lgu;Ljava/lang/Object;)Z hasScheduledTick
	a (Left;)V schedule
	b (Lgu;Ljava/lang/Object;)Z willTickThisTick
	a ()I count
efz net/minecraft/world/ticks/package-info
